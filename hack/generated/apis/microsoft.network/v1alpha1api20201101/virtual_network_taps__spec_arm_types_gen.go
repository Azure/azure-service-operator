// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201101

import "github.com/Azure/azure-service-operator/hack/generated/pkg/genruntime"

type VirtualNetworkTaps_SpecARM struct {
	//APIVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	APIVersion VirtualNetworkTapsSpecAPIVersion `json:"apiVersion"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	//Name: Name of the resource
	Name string `json:"name"`

	//Properties: Virtual Network Tap Properties.
	Properties VirtualNetworkTapPropertiesFormatARM `json:"properties"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type
	Type VirtualNetworkTapsSpecType `json:"type"`
}

var _ genruntime.ARMResourceSpec = &VirtualNetworkTaps_SpecARM{}

// GetAPIVersion returns the APIVersion of the resource
func (virtualNetworkTapsSpecARM VirtualNetworkTaps_SpecARM) GetAPIVersion() string {
	return string(virtualNetworkTapsSpecARM.APIVersion)
}

// GetName returns the Name of the resource
func (virtualNetworkTapsSpecARM VirtualNetworkTaps_SpecARM) GetName() string {
	return virtualNetworkTapsSpecARM.Name
}

// GetType returns the Type of the resource
func (virtualNetworkTapsSpecARM VirtualNetworkTaps_SpecARM) GetType() string {
	return string(virtualNetworkTapsSpecARM.Type)
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkTapPropertiesFormat
type VirtualNetworkTapPropertiesFormatARM struct {
	//DestinationLoadBalancerFrontEndIPConfiguration: The reference to the private IP
	//address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *SubResourceARM `json:"destinationLoadBalancerFrontEndIPConfiguration,omitempty"`

	//DestinationNetworkInterfaceIPConfiguration: The reference to the private IP
	//Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *SubResourceARM `json:"destinationNetworkInterfaceIPConfiguration,omitempty"`

	//DestinationPort: The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `json:"destinationPort,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-11-01"}
type VirtualNetworkTapsSpecAPIVersion string

const VirtualNetworkTapsSpecAPIVersion20201101 = VirtualNetworkTapsSpecAPIVersion("2020-11-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/virtualNetworkTaps"}
type VirtualNetworkTapsSpecType string

const VirtualNetworkTapsSpecTypeMicrosoftNetworkVirtualNetworkTaps = VirtualNetworkTapsSpecType("Microsoft.Network/virtualNetworkTaps")
