// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210101preview

import "github.com/Azure/azure-service-operator/hack/generated/pkg/genruntime"

type Namespaces_SpecARM struct {
	//APIVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	APIVersion NamespacesSpecAPIVersion `json:"apiVersion"`

	//Identity: Properties to configure User Assigned Identities for Bring your Own
	//Keys
	Identity *IdentityARM `json:"identity,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	//Name: Name of the resource
	Name string `json:"name"`

	//Properties: Properties of the namespace.
	Properties Namespaces_Spec_PropertiesARM `json:"properties"`

	//Sku: SKU of the namespace.
	Sku *SBSkuARM `json:"sku,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type
	Type NamespacesSpecType `json:"type"`
}

var _ genruntime.ARMResourceSpec = &Namespaces_SpecARM{}

// GetAPIVersion returns the APIVersion of the resource
func (namespacesSpecARM Namespaces_SpecARM) GetAPIVersion() string {
	return string(namespacesSpecARM.APIVersion)
}

// GetName returns the Name of the resource
func (namespacesSpecARM Namespaces_SpecARM) GetName() string {
	return namespacesSpecARM.Name
}

// GetType returns the Type of the resource
func (namespacesSpecARM Namespaces_SpecARM) GetType() string {
	return string(namespacesSpecARM.Type)
}

//Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Identity
type IdentityARM struct {
	//Type: Type of managed service identity.
	Type *IdentityType `json:"type,omitempty"`
}

// +kubebuilder:validation:Enum={"2021-01-01-preview"}
type NamespacesSpecAPIVersion string

const NamespacesSpecAPIVersion20210101Preview = NamespacesSpecAPIVersion("2021-01-01-preview")

// +kubebuilder:validation:Enum={"Microsoft.ServiceBus/namespaces"}
type NamespacesSpecType string

const NamespacesSpecTypeMicrosoftServiceBusNamespaces = NamespacesSpecType("Microsoft.ServiceBus/namespaces")

type Namespaces_Spec_PropertiesARM struct {
	//Encryption: Properties to configure Encryption
	Encryption *EncryptionARM `json:"encryption,omitempty"`

	//ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in
	//regions supported availability zones.
	ZoneRedundant *bool `json:"zoneRedundant,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBSku
type SBSkuARM struct {
	//Capacity: The specified messaging units for the tier. For Premium tier, capacity
	//are 1,2 and 4.
	Capacity *int `json:"capacity,omitempty"`

	//Name: Name of this SKU.
	Name SBSkuName `json:"name"`

	//Tier: The billing tier of this particular SKU.
	Tier *SBSkuTier `json:"tier,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Encryption
type EncryptionARM struct {
	//KeySource: Enumerates the possible value of keySource for Encryption.
	KeySource *EncryptionKeySource `json:"keySource,omitempty"`

	//KeyVaultProperties: Properties of KeyVault
	KeyVaultProperties []KeyVaultPropertiesARM `json:"keyVaultProperties,omitempty"`

	//RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double
	//Encryption)
	RequireInfrastructureEncryption *bool `json:"requireInfrastructureEncryption,omitempty"`
}

// +kubebuilder:validation:Enum={"None","SystemAssigned","SystemAssigned, UserAssigned","UserAssigned"}
type IdentityType string

const (
	IdentityTypeNone                       = IdentityType("None")
	IdentityTypeSystemAssigned             = IdentityType("SystemAssigned")
	IdentityTypeSystemAssignedUserAssigned = IdentityType("SystemAssigned, UserAssigned")
	IdentityTypeUserAssigned               = IdentityType("UserAssigned")
)

// +kubebuilder:validation:Enum={"Basic","Premium","Standard"}
type SBSkuName string

const (
	SBSkuNameBasic    = SBSkuName("Basic")
	SBSkuNamePremium  = SBSkuName("Premium")
	SBSkuNameStandard = SBSkuName("Standard")
)

// +kubebuilder:validation:Enum={"Basic","Premium","Standard"}
type SBSkuTier string

const (
	SBSkuTierBasic    = SBSkuTier("Basic")
	SBSkuTierPremium  = SBSkuTier("Premium")
	SBSkuTierStandard = SBSkuTier("Standard")
)

//Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/KeyVaultProperties
type KeyVaultPropertiesARM struct {
	Identity *UserAssignedIdentityPropertiesARM `json:"identity,omitempty"`

	//KeyName: Name of the Key from KeyVault
	KeyName *string `json:"keyName,omitempty"`

	//KeyVaultUri: Uri of KeyVault
	KeyVaultUri *string `json:"keyVaultUri,omitempty"`

	//KeyVersion: Version of KeyVault
	KeyVersion *string `json:"keyVersion,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/UserAssignedIdentityProperties
type UserAssignedIdentityPropertiesARM struct {
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`
}
