// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201101preview

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=sql.azure.com,resources=serversdatabases,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=sql.azure.com,resources={serversdatabases/status,serversdatabases/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
//Generator information:
//- Generated from: /sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/Databases_legacy.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}
type ServersDatabase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServersDatabases_SPEC `json:"spec,omitempty"`
	Status            Database_Status       `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
//Generator information:
//- Generated from: /sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/Databases_legacy.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}
type ServersDatabaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServersDatabase `json:"items"`
}

type Database_Status struct {
	v1alpha1.ResourceStatus `json:",inline"`
	AtProvider              DatabaseObservation `json:"atProvider"`
}

type ServersDatabases_SPEC struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           ServersDatabasesParameters `json:"forProvider"`
}

type DatabaseObservation struct {
	//AutoPauseDelay: Time in minutes after which database is automatically paused. A
	//value of -1 means that automatic pause is disabled
	AutoPauseDelay *int `json:"autoPauseDelay,omitempty"`

	//CatalogCollation: Collation of the metadata catalog.
	CatalogCollation *DatabaseProperties_CatalogCollation_Status `json:"catalogCollation,omitempty"`

	//Collation: The collation of the database.
	Collation *string `json:"collation,omitempty"`

	//CreateMode: Specifies the mode of database creation.
	//Default: regular database creation.
	//Copy: creates a database as a copy of an existing database. sourceDatabaseId
	//must be specified as the resource ID of the source database.
	//Secondary: creates a database as a secondary replica of an existing database.
	//sourceDatabaseId must be specified as the resource ID of the existing primary
	//database.
	//PointInTimeRestore: Creates a database by restoring a point in time backup of an
	//existing database. sourceDatabaseId must be specified as the resource ID of the
	//existing database, and restorePointInTime must be specified.
	//Recovery: Creates a database by restoring a geo-replicated backup.
	//sourceDatabaseId must be specified as the recoverable database resource ID to
	//restore.
	//Restore: Creates a database by restoring a backup of a deleted database.
	//sourceDatabaseId must be specified. If sourceDatabaseId is the database's
	//original resource ID, then sourceDatabaseDeletionDate must be specified.
	//Otherwise sourceDatabaseId must be the restorable dropped database resource ID
	//and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be
	//specified to restore from an earlier point in time.
	//RestoreLongTermRetentionBackup: Creates a database by restoring from a long term
	//retention vault. recoveryServicesRecoveryPointResourceId must be specified as
	//the recovery point resource ID.
	//Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
	//DataWarehouse edition.
	CreateMode *DatabaseProperties_CreateMode_Status `json:"createMode,omitempty"`

	//CreationDate: The creation date of the database (ISO8601 format).
	CreationDate *string `json:"creationDate,omitempty"`

	//CurrentBackupStorageRedundancy: The storage account type used to store backups
	//for this database.
	CurrentBackupStorageRedundancy *DatabaseProperties_CurrentBackupStorageRedundancy_Status `json:"currentBackupStorageRedundancy,omitempty"`

	//CurrentServiceObjectiveName: The current service level objective name of the
	//database.
	CurrentServiceObjectiveName *string `json:"currentServiceObjectiveName,omitempty"`

	//CurrentSku: The name and tier of the SKU.
	CurrentSku *Sku_Status `json:"currentSku,omitempty"`

	//DatabaseId: The ID of the database.
	DatabaseId *string `json:"databaseId,omitempty"`

	//DefaultSecondaryLocation: The default secondary region for this database.
	DefaultSecondaryLocation *string `json:"defaultSecondaryLocation,omitempty"`

	//EarliestRestoreDate: This records the earliest start date and time that restore
	//is available for this database (ISO8601 format).
	EarliestRestoreDate *string `json:"earliestRestoreDate,omitempty"`

	//ElasticPoolId: The resource identifier of the elastic pool containing this
	//database.
	ElasticPoolId *string `json:"elasticPoolId,omitempty"`

	//FailoverGroupId: Failover Group resource identifier that this database belongs
	//to.
	FailoverGroupId *string `json:"failoverGroupId,omitempty"`

	//HighAvailabilityReplicaCount: The number of secondary replicas associated with
	//the database that are used to provide high availability.
	HighAvailabilityReplicaCount *int `json:"highAvailabilityReplicaCount,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Kind: Kind of database. This is metadata used for the Azure portal experience.
	Kind *string `json:"kind,omitempty"`

	//LicenseType: The license type to apply for this database. `LicenseIncluded` if
	//you need a license, or `BasePrice` if you have a license and are eligible for
	//the Azure Hybrid Benefit.
	LicenseType *DatabaseProperties_LicenseType_Status `json:"licenseType,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//LongTermRetentionBackupResourceId: The resource identifier of the long term
	//retention backup associated with create operation of this database.
	LongTermRetentionBackupResourceId *string `json:"longTermRetentionBackupResourceId,omitempty"`

	//MaintenanceConfigurationId: Maintenance configuration id assigned to the
	//database. This configuration defines the period when the maintenance updates
	//will occur.
	MaintenanceConfigurationId *string `json:"maintenanceConfigurationId,omitempty"`

	//ManagedBy: Resource that manages the database.
	ManagedBy *string `json:"managedBy,omitempty"`

	//MaxLogSizeBytes: The max log size for this database.
	MaxLogSizeBytes *int `json:"maxLogSizeBytes,omitempty"`

	//MaxSizeBytes: The max size of the database expressed in bytes.
	MaxSizeBytes *int `json:"maxSizeBytes,omitempty"`

	//MinCapacity: Minimal capacity that database will always have allocated, if not
	//paused
	MinCapacity *float64 `json:"minCapacity,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//PausedDate: The date when database was paused by user configuration or
	//action(ISO8601 format). Null if the database is ready.
	PausedDate *string `json:"pausedDate,omitempty"`

	//ReadScale: The state of read-only routing. If enabled, connections that have
	//application intent set to readonly in their connection string may be routed to a
	//readonly secondary replica in the same region.
	ReadScale *DatabaseProperties_ReadScale_Status `json:"readScale,omitempty"`

	//RecoverableDatabaseId: The resource identifier of the recoverable database
	//associated with create operation of this database.
	RecoverableDatabaseId *string `json:"recoverableDatabaseId,omitempty"`

	//RecoveryServicesRecoveryPointId: The resource identifier of the recovery point
	//associated with create operation of this database.
	RecoveryServicesRecoveryPointId *string `json:"recoveryServicesRecoveryPointId,omitempty"`

	//RequestedBackupStorageRedundancy: The storage account type to be used to store
	//backups for this database.
	RequestedBackupStorageRedundancy *DatabaseProperties_RequestedBackupStorageRedundancy_Status `json:"requestedBackupStorageRedundancy,omitempty"`

	//RequestedServiceObjectiveName: The requested service level objective name of the
	//database.
	RequestedServiceObjectiveName *string `json:"requestedServiceObjectiveName,omitempty"`

	//RestorableDroppedDatabaseId: The resource identifier of the restorable dropped
	//database associated with create operation of this database.
	RestorableDroppedDatabaseId *string `json:"restorableDroppedDatabaseId,omitempty"`

	//RestorePointInTime: Specifies the point in time (ISO8601 format) of the source
	//database that will be restored to create the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	//ResumedDate: The date when database was resumed by user action or database login
	//(ISO8601 format). Null if the database is paused.
	ResumedDate *string `json:"resumedDate,omitempty"`

	//SampleName: The name of the sample schema to apply when creating this database.
	SampleName *DatabaseProperties_SampleName_Status `json:"sampleName,omitempty"`

	//SecondaryType: The secondary type of the database if it is a secondary.  Valid
	//values are Geo and Named.
	SecondaryType *DatabaseProperties_SecondaryType_Status `json:"secondaryType,omitempty"`

	//Sku: The database SKU.
	//The list of SKUs may vary by region and support offer. To determine the SKUs
	//(including the SKU name, tier/edition, family, and capacity) that are available
	//to your subscription in an Azure region, use the `Capabilities_ListByLocation`
	//REST API or one of the following commands:
	//```azurecli
	//az sql db list-editions -l <location> -o table
	//````
	//```powershell
	//Get-AzSqlServerServiceObjective -Location <location>
	//````
	Sku *Sku_Status `json:"sku,omitempty"`

	//SourceDatabaseDeletionDate: Specifies the time that the database was deleted.
	SourceDatabaseDeletionDate *string `json:"sourceDatabaseDeletionDate,omitempty"`

	//SourceDatabaseId: The resource identifier of the source database associated with
	//create operation of this database.
	SourceDatabaseId *string `json:"sourceDatabaseId,omitempty"`

	//Status: The status of the database.
	Status *DatabaseProperties_Status_Status `json:"status,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`

	//ZoneRedundant: Whether or not this database is zone redundant, which means the
	//replicas of this database will be spread across multiple availability zones.
	ZoneRedundant *bool `json:"zoneRedundant,omitempty"`
}

type ServersDatabasesParameters struct {
	//AutoPauseDelay: Time in minutes after which database is automatically paused. A
	//value of -1 means that automatic pause is disabled
	AutoPauseDelay *int   `json:"autoPauseDelay,omitempty"`
	AzureName      string `json:"azureName"`

	//CatalogCollation: Collation of the metadata catalog.
	CatalogCollation *DatabaseProperties_CatalogCollation_Spec `json:"catalogCollation,omitempty"`

	//Collation: The collation of the database.
	Collation *string `json:"collation,omitempty"`

	//CreateMode: Specifies the mode of database creation.
	//Default: regular database creation.
	//Copy: creates a database as a copy of an existing database. sourceDatabaseId
	//must be specified as the resource ID of the source database.
	//Secondary: creates a database as a secondary replica of an existing database.
	//sourceDatabaseId must be specified as the resource ID of the existing primary
	//database.
	//PointInTimeRestore: Creates a database by restoring a point in time backup of an
	//existing database. sourceDatabaseId must be specified as the resource ID of the
	//existing database, and restorePointInTime must be specified.
	//Recovery: Creates a database by restoring a geo-replicated backup.
	//sourceDatabaseId must be specified as the recoverable database resource ID to
	//restore.
	//Restore: Creates a database by restoring a backup of a deleted database.
	//sourceDatabaseId must be specified. If sourceDatabaseId is the database's
	//original resource ID, then sourceDatabaseDeletionDate must be specified.
	//Otherwise sourceDatabaseId must be the restorable dropped database resource ID
	//and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be
	//specified to restore from an earlier point in time.
	//RestoreLongTermRetentionBackup: Creates a database by restoring from a long term
	//retention vault. recoveryServicesRecoveryPointResourceId must be specified as
	//the recovery point resource ID.
	//Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
	//DataWarehouse edition.
	CreateMode *DatabaseProperties_CreateMode_Spec `json:"createMode,omitempty"`

	//ElasticPoolId: The resource identifier of the elastic pool containing this
	//database.
	ElasticPoolId *string `json:"elasticPoolId,omitempty"`

	//HighAvailabilityReplicaCount: The number of secondary replicas associated with
	//the database that are used to provide high availability.
	HighAvailabilityReplicaCount *int `json:"highAvailabilityReplicaCount,omitempty"`

	//LicenseType: The license type to apply for this database. `LicenseIncluded` if
	//you need a license, or `BasePrice` if you have a license and are eligible for
	//the Azure Hybrid Benefit.
	LicenseType *DatabaseProperties_LicenseType_Spec `json:"licenseType,omitempty"`

	// +kubebuilder:validation:Required
	//Location: Resource location.
	Location string `json:"location"`

	//LongTermRetentionBackupResourceId: The resource identifier of the long term
	//retention backup associated with create operation of this database.
	LongTermRetentionBackupResourceId *string `json:"longTermRetentionBackupResourceId,omitempty"`

	//MaintenanceConfigurationId: Maintenance configuration id assigned to the
	//database. This configuration defines the period when the maintenance updates
	//will occur.
	MaintenanceConfigurationId *string `json:"maintenanceConfigurationId,omitempty"`

	//MaxSizeBytes: The max size of the database expressed in bytes.
	MaxSizeBytes *int `json:"maxSizeBytes,omitempty"`

	//MinCapacity: Minimal capacity that database will always have allocated, if not
	//paused
	MinCapacity *float64 `json:"minCapacity,omitempty"`
	Name        string   `json:"name"`

	//ReadScale: The state of read-only routing. If enabled, connections that have
	//application intent set to readonly in their connection string may be routed to a
	//readonly secondary replica in the same region.
	ReadScale *DatabaseProperties_ReadScale_Spec `json:"readScale,omitempty"`

	//RecoverableDatabaseId: The resource identifier of the recoverable database
	//associated with create operation of this database.
	RecoverableDatabaseId *string `json:"recoverableDatabaseId,omitempty"`

	//RecoveryServicesRecoveryPointId: The resource identifier of the recovery point
	//associated with create operation of this database.
	RecoveryServicesRecoveryPointId *string `json:"recoveryServicesRecoveryPointId,omitempty"`

	//RequestedBackupStorageRedundancy: The storage account type to be used to store
	//backups for this database.
	RequestedBackupStorageRedundancy *DatabaseProperties_RequestedBackupStorageRedundancy_Spec `json:"requestedBackupStorageRedundancy,omitempty"`
	ResourceGroupName                string                                                    `json:"resourceGroupName"`
	ResourceGroupNameRef             *v1alpha1.Reference                                       `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector        *v1alpha1.Selector                                        `json:"resourceGroupNameSelector,omitempty"`

	//RestorableDroppedDatabaseId: The resource identifier of the restorable dropped
	//database associated with create operation of this database.
	RestorableDroppedDatabaseId *string `json:"restorableDroppedDatabaseId,omitempty"`

	//RestorePointInTime: Specifies the point in time (ISO8601 format) of the source
	//database that will be restored to create the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	//SampleName: The name of the sample schema to apply when creating this database.
	SampleName *DatabaseProperties_SampleName_Spec `json:"sampleName,omitempty"`

	//SecondaryType: The secondary type of the database if it is a secondary.  Valid
	//values are Geo and Named.
	SecondaryType *DatabaseProperties_SecondaryType_Spec `json:"secondaryType,omitempty"`

	//Sku: The database SKU.
	//The list of SKUs may vary by region and support offer. To determine the SKUs
	//(including the SKU name, tier/edition, family, and capacity) that are available
	//to your subscription in an Azure region, use the `Capabilities_ListByLocation`
	//REST API or one of the following commands:
	//```azurecli
	//az sql db list-editions -l <location> -o table
	//````
	//```powershell
	//Get-AzSqlServerServiceObjective -Location <location>
	//````
	Sku *Sku_Spec `json:"sku,omitempty"`

	//SourceDatabaseDeletionDate: Specifies the time that the database was deleted.
	SourceDatabaseDeletionDate *string `json:"sourceDatabaseDeletionDate,omitempty"`

	//SourceDatabaseId: The resource identifier of the source database associated with
	//create operation of this database.
	SourceDatabaseId *string `json:"sourceDatabaseId,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//ZoneRedundant: Whether or not this database is zone redundant, which means the
	//replicas of this database will be spread across multiple availability zones.
	ZoneRedundant *bool `json:"zoneRedundant,omitempty"`
}

// +kubebuilder:validation:Enum={"DATABASE_DEFAULT","SQL_Latin1_General_CP1_CI_AS"}
type DatabaseProperties_CatalogCollation_Spec string

const (
	DatabaseProperties_CatalogCollation_SpecDATABASE_DEFAULT             = DatabaseProperties_CatalogCollation_Spec("DATABASE_DEFAULT")
	DatabaseProperties_CatalogCollation_SpecSQL_Latin1_General_CP1_CI_AS = DatabaseProperties_CatalogCollation_Spec("SQL_Latin1_General_CP1_CI_AS")
)

type DatabaseProperties_CatalogCollation_Status string

const (
	DatabaseProperties_CatalogCollation_StatusDATABASE_DEFAULT             = DatabaseProperties_CatalogCollation_Status("DATABASE_DEFAULT")
	DatabaseProperties_CatalogCollation_StatusSQL_Latin1_General_CP1_CI_AS = DatabaseProperties_CatalogCollation_Status("SQL_Latin1_General_CP1_CI_AS")
)

// +kubebuilder:validation:Enum={"Copy","Default","OnlineSecondary","PointInTimeRestore","Recovery","Restore","RestoreExternalBackup","RestoreExternalBackupSecondary","RestoreLongTermRetentionBackup","Secondary"}
type DatabaseProperties_CreateMode_Spec string

const (
	DatabaseProperties_CreateMode_SpecCopy                           = DatabaseProperties_CreateMode_Spec("Copy")
	DatabaseProperties_CreateMode_SpecDefault                        = DatabaseProperties_CreateMode_Spec("Default")
	DatabaseProperties_CreateMode_SpecOnlineSecondary                = DatabaseProperties_CreateMode_Spec("OnlineSecondary")
	DatabaseProperties_CreateMode_SpecPointInTimeRestore             = DatabaseProperties_CreateMode_Spec("PointInTimeRestore")
	DatabaseProperties_CreateMode_SpecRecovery                       = DatabaseProperties_CreateMode_Spec("Recovery")
	DatabaseProperties_CreateMode_SpecRestore                        = DatabaseProperties_CreateMode_Spec("Restore")
	DatabaseProperties_CreateMode_SpecRestoreExternalBackup          = DatabaseProperties_CreateMode_Spec("RestoreExternalBackup")
	DatabaseProperties_CreateMode_SpecRestoreExternalBackupSecondary = DatabaseProperties_CreateMode_Spec("RestoreExternalBackupSecondary")
	DatabaseProperties_CreateMode_SpecRestoreLongTermRetentionBackup = DatabaseProperties_CreateMode_Spec("RestoreLongTermRetentionBackup")
	DatabaseProperties_CreateMode_SpecSecondary                      = DatabaseProperties_CreateMode_Spec("Secondary")
)

type DatabaseProperties_CreateMode_Status string

const (
	DatabaseProperties_CreateMode_StatusCopy                           = DatabaseProperties_CreateMode_Status("Copy")
	DatabaseProperties_CreateMode_StatusDefault                        = DatabaseProperties_CreateMode_Status("Default")
	DatabaseProperties_CreateMode_StatusOnlineSecondary                = DatabaseProperties_CreateMode_Status("OnlineSecondary")
	DatabaseProperties_CreateMode_StatusPointInTimeRestore             = DatabaseProperties_CreateMode_Status("PointInTimeRestore")
	DatabaseProperties_CreateMode_StatusRecovery                       = DatabaseProperties_CreateMode_Status("Recovery")
	DatabaseProperties_CreateMode_StatusRestore                        = DatabaseProperties_CreateMode_Status("Restore")
	DatabaseProperties_CreateMode_StatusRestoreExternalBackup          = DatabaseProperties_CreateMode_Status("RestoreExternalBackup")
	DatabaseProperties_CreateMode_StatusRestoreExternalBackupSecondary = DatabaseProperties_CreateMode_Status("RestoreExternalBackupSecondary")
	DatabaseProperties_CreateMode_StatusRestoreLongTermRetentionBackup = DatabaseProperties_CreateMode_Status("RestoreLongTermRetentionBackup")
	DatabaseProperties_CreateMode_StatusSecondary                      = DatabaseProperties_CreateMode_Status("Secondary")
)

type DatabaseProperties_CurrentBackupStorageRedundancy_Status string

const (
	DatabaseProperties_CurrentBackupStorageRedundancy_StatusGeo   = DatabaseProperties_CurrentBackupStorageRedundancy_Status("Geo")
	DatabaseProperties_CurrentBackupStorageRedundancy_StatusLocal = DatabaseProperties_CurrentBackupStorageRedundancy_Status("Local")
	DatabaseProperties_CurrentBackupStorageRedundancy_StatusZone  = DatabaseProperties_CurrentBackupStorageRedundancy_Status("Zone")
)

// +kubebuilder:validation:Enum={"BasePrice","LicenseIncluded"}
type DatabaseProperties_LicenseType_Spec string

const (
	DatabaseProperties_LicenseType_SpecBasePrice       = DatabaseProperties_LicenseType_Spec("BasePrice")
	DatabaseProperties_LicenseType_SpecLicenseIncluded = DatabaseProperties_LicenseType_Spec("LicenseIncluded")
)

type DatabaseProperties_LicenseType_Status string

const (
	DatabaseProperties_LicenseType_StatusBasePrice       = DatabaseProperties_LicenseType_Status("BasePrice")
	DatabaseProperties_LicenseType_StatusLicenseIncluded = DatabaseProperties_LicenseType_Status("LicenseIncluded")
)

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type DatabaseProperties_ReadScale_Spec string

const (
	DatabaseProperties_ReadScale_SpecDisabled = DatabaseProperties_ReadScale_Spec("Disabled")
	DatabaseProperties_ReadScale_SpecEnabled  = DatabaseProperties_ReadScale_Spec("Enabled")
)

type DatabaseProperties_ReadScale_Status string

const (
	DatabaseProperties_ReadScale_StatusDisabled = DatabaseProperties_ReadScale_Status("Disabled")
	DatabaseProperties_ReadScale_StatusEnabled  = DatabaseProperties_ReadScale_Status("Enabled")
)

// +kubebuilder:validation:Enum={"Geo","Local","Zone"}
type DatabaseProperties_RequestedBackupStorageRedundancy_Spec string

const (
	DatabaseProperties_RequestedBackupStorageRedundancy_SpecGeo   = DatabaseProperties_RequestedBackupStorageRedundancy_Spec("Geo")
	DatabaseProperties_RequestedBackupStorageRedundancy_SpecLocal = DatabaseProperties_RequestedBackupStorageRedundancy_Spec("Local")
	DatabaseProperties_RequestedBackupStorageRedundancy_SpecZone  = DatabaseProperties_RequestedBackupStorageRedundancy_Spec("Zone")
)

type DatabaseProperties_RequestedBackupStorageRedundancy_Status string

const (
	DatabaseProperties_RequestedBackupStorageRedundancy_StatusGeo   = DatabaseProperties_RequestedBackupStorageRedundancy_Status("Geo")
	DatabaseProperties_RequestedBackupStorageRedundancy_StatusLocal = DatabaseProperties_RequestedBackupStorageRedundancy_Status("Local")
	DatabaseProperties_RequestedBackupStorageRedundancy_StatusZone  = DatabaseProperties_RequestedBackupStorageRedundancy_Status("Zone")
)

// +kubebuilder:validation:Enum={"AdventureWorksLT","WideWorldImportersFull","WideWorldImportersStd"}
type DatabaseProperties_SampleName_Spec string

const (
	DatabaseProperties_SampleName_SpecAdventureWorksLT       = DatabaseProperties_SampleName_Spec("AdventureWorksLT")
	DatabaseProperties_SampleName_SpecWideWorldImportersFull = DatabaseProperties_SampleName_Spec("WideWorldImportersFull")
	DatabaseProperties_SampleName_SpecWideWorldImportersStd  = DatabaseProperties_SampleName_Spec("WideWorldImportersStd")
)

type DatabaseProperties_SampleName_Status string

const (
	DatabaseProperties_SampleName_StatusAdventureWorksLT       = DatabaseProperties_SampleName_Status("AdventureWorksLT")
	DatabaseProperties_SampleName_StatusWideWorldImportersFull = DatabaseProperties_SampleName_Status("WideWorldImportersFull")
	DatabaseProperties_SampleName_StatusWideWorldImportersStd  = DatabaseProperties_SampleName_Status("WideWorldImportersStd")
)

// +kubebuilder:validation:Enum={"Geo","Named"}
type DatabaseProperties_SecondaryType_Spec string

const (
	DatabaseProperties_SecondaryType_SpecGeo   = DatabaseProperties_SecondaryType_Spec("Geo")
	DatabaseProperties_SecondaryType_SpecNamed = DatabaseProperties_SecondaryType_Spec("Named")
)

type DatabaseProperties_SecondaryType_Status string

const (
	DatabaseProperties_SecondaryType_StatusGeo   = DatabaseProperties_SecondaryType_Status("Geo")
	DatabaseProperties_SecondaryType_StatusNamed = DatabaseProperties_SecondaryType_Status("Named")
)

type DatabaseProperties_Status_Status string

const (
	DatabaseProperties_Status_StatusAutoClosed                        = DatabaseProperties_Status_Status("AutoClosed")
	DatabaseProperties_Status_StatusCopying                           = DatabaseProperties_Status_Status("Copying")
	DatabaseProperties_Status_StatusCreating                          = DatabaseProperties_Status_Status("Creating")
	DatabaseProperties_Status_StatusDisabled                          = DatabaseProperties_Status_Status("Disabled")
	DatabaseProperties_Status_StatusEmergencyMode                     = DatabaseProperties_Status_Status("EmergencyMode")
	DatabaseProperties_Status_StatusInaccessible                      = DatabaseProperties_Status_Status("Inaccessible")
	DatabaseProperties_Status_StatusOffline                           = DatabaseProperties_Status_Status("Offline")
	DatabaseProperties_Status_StatusOfflineChangingDwPerformanceTiers = DatabaseProperties_Status_Status("OfflineChangingDwPerformanceTiers")
	DatabaseProperties_Status_StatusOfflineSecondary                  = DatabaseProperties_Status_Status("OfflineSecondary")
	DatabaseProperties_Status_StatusOnline                            = DatabaseProperties_Status_Status("Online")
	DatabaseProperties_Status_StatusOnlineChangingDwPerformanceTiers  = DatabaseProperties_Status_Status("OnlineChangingDwPerformanceTiers")
	DatabaseProperties_Status_StatusPaused                            = DatabaseProperties_Status_Status("Paused")
	DatabaseProperties_Status_StatusPausing                           = DatabaseProperties_Status_Status("Pausing")
	DatabaseProperties_Status_StatusRecovering                        = DatabaseProperties_Status_Status("Recovering")
	DatabaseProperties_Status_StatusRecoveryPending                   = DatabaseProperties_Status_Status("RecoveryPending")
	DatabaseProperties_Status_StatusRestoring                         = DatabaseProperties_Status_Status("Restoring")
	DatabaseProperties_Status_StatusResuming                          = DatabaseProperties_Status_Status("Resuming")
	DatabaseProperties_Status_StatusScaling                           = DatabaseProperties_Status_Status("Scaling")
	DatabaseProperties_Status_StatusShutdown                          = DatabaseProperties_Status_Status("Shutdown")
	DatabaseProperties_Status_StatusStandby                           = DatabaseProperties_Status_Status("Standby")
	DatabaseProperties_Status_StatusSuspect                           = DatabaseProperties_Status_Status("Suspect")
)

type Sku_Spec struct {
	//Capacity: Capacity of the particular SKU.
	Capacity *int `json:"capacity,omitempty"`

	//Family: If the service has different generations of hardware, for the same SKU,
	//then that can be captured here.
	Family *string `json:"family,omitempty"`

	// +kubebuilder:validation:Required
	//Name: The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `json:"name"`

	//Size: Size of the particular SKU
	Size *string `json:"size,omitempty"`

	//Tier: The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `json:"tier,omitempty"`
}

type Sku_Status struct {
	//Capacity: Capacity of the particular SKU.
	Capacity *int `json:"capacity,omitempty"`

	//Family: If the service has different generations of hardware, for the same SKU,
	//then that can be captured here.
	Family *string `json:"family,omitempty"`

	// +kubebuilder:validation:Required
	//Name: The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `json:"name"`

	//Size: Size of the particular SKU
	Size *string `json:"size,omitempty"`

	//Tier: The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `json:"tier,omitempty"`
}

func init() {
	SchemeBuilder.Register(&ServersDatabase{}, &ServersDatabaseList{})
}
