// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import (
	person "github.com/Azure/azure-service-operator/testing/microsoft.person/v20211231"
	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/kr/pretty"
	"github.com/kylelemons/godebug/diff"
	"github.com/leanovate/gopter"
	"github.com/leanovate/gopter/prop"
	"os"
	"testing"
)

func Test_Person_Spec_WhenPropertiesConverted_RoundTripsWithoutLoss(t *testing.T) {
	parameters := gopter.DefaultTestParameters()
	parameters.MaxSize = 10
	properties := gopter.NewProperties(parameters)
	properties.Property(
		"Round trip from Person_Spec to Person_Spec via AssignPropertiesToPersonSpec & AssignPropertiesFromPersonSpec returns original",
		prop.ForAll(RunPropertyAssignmentTestForPersonSpec, PersonSpecGenerator()))
	properties.TestingRun(t, gopter.NewFormatedReporter(false, 240, os.Stdout))
}

// RunPropertyAssignmentTestForPersonSpec runs a test to see if a specific instance of github.com/Azure/azure-service-operator/testing/microsoft.person/v20200101/Person_Spec round trips to JSON and back losslessly
func RunPropertyAssignmentTestForPersonSpec(subject Person_Spec) string {
	// Intermediate instance for conversion
	var other person.Person_Spec
	err := subject.AssignPropertiesToPersonSpec(&other)
	if err != nil {
		return err.Error()
	}

	// Result instance after conversion
	var actual Person_Spec
	err = actual.AssignPropertiesFromPersonSpec(&other)
	if err != nil {
		return err.Error()
	}

	match := cmp.Equal(subject, actual, cmpopts.EquateEmpty())
	if !match {
		actualFmt := pretty.Sprint(actual)
		subjectFmt := pretty.Sprint(subject)
		result := diff.Diff(subjectFmt, actualFmt)
		return result
	}

	return ""
}
