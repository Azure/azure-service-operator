// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// +kubebuilder:rbac:groups=microsoft.person.azure.com,resources=people,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=microsoft.person.azure.com,resources={people/status,people/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type Person struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Person_Spec   `json:"spec,omitempty"`
	Status            Person_Status `json:"status,omitempty"`
}

// Hub marks that this Person is the hub type for conversion
func (person *Person) Hub() {}

// +kubebuilder:object:root=true
type PersonList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Person `json:"items"`
}

type Person_Spec struct {
	//FamilyName: Shared name of the family
	FamilyName string `json:"familyName"`

	//FullName: As would be used to address mail
	FullName string `json:"fullName"`

	//KnownAs: How the person is generally known
	KnownAs string `json:"knownAs"`
}

type Person_Status struct {
	Status string `json:"status"`
}

func init() {
	SchemeBuilder.Register(&Person{}, &PersonList{})
}
