// Code generated by k8s-infra. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.infra.azure.com,resources=as,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.infra.azure.com,resources={as/status,as/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type A struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              A_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type AList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []A `json:"items"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json
type Test struct {
	A *A `json:"a,omitempty"`
}

type A_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           AParameters `json:"forProvider"`
}

type AParameters struct {
	// +kubebuilder:validation:Required
	ApiVersion ASpecApiVersion `json:"apiVersion"`

	// +kubebuilder:validation:Required
	Name                      string              `json:"name"`
	Properties                *AProperties        `json:"properties,omitempty"`
	ResourceGroupName         string              `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type ASpecType `json:"type"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/AProperties
type AProperties struct {
	Left  *Left  `json:"left,omitempty"`
	Right *Right `json:"right,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type ASpecApiVersion string

const ASpecApiVersion20200601 = ASpecApiVersion("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/A"}
type ASpecType string

const ASpecTypeMicrosoftAzureA = ASpecType("Microsoft.Azure/A")

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/Left
type Left struct {
	Name       *string         `json:"name,omitempty"`
	Properties *LeftProperties `json:"properties,omitempty"`
	RefField   *FakeResource   `json:"refField,omitempty"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/Right
type Right struct {
	Name       *string          `json:"name,omitempty"`
	Properties *RightProperties `json:"properties,omitempty"`
	RefField   *FakeResource    `json:"refField,omitempty"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/FakeResource
type FakeResource struct {
	Name       *string                 `json:"name,omitempty"`
	Properties *FakeResourceProperties `json:"properties,omitempty"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/LeftProperties
type LeftProperties struct {
	StrField *string `json:"strField,omitempty"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/RightProperties
type RightProperties struct {
	StrField *string `json:"strField,omitempty"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/FakeResourceProperties
type FakeResourceProperties struct {
	Loop1 *Left  `json:"loop1,omitempty"`
	Loop2 *Right `json:"loop2,omitempty"`
}

func init() {
	SchemeBuilder.Register(&A{}, &AList{})
}
