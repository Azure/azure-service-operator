// Code generated by k8s-infra. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.infra.azure.com,resources=fakeresources,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.infra.azure.com,resources={fakeresources/status,fakeresources/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FakeResource_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FakeResource `json:"items"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json
type Test struct {
	Test *FakeResource `json:"test,omitempty"`
}

type FakeResource_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           FakeResourceParameters `json:"forProvider"`
}

type FakeResourceParameters struct {
	// +kubebuilder:validation:Required
	ApiVersion FakeResourceSpecApiVersion `json:"apiVersion"`

	// +kubebuilder:validation:Required
	Name                      string              `json:"name"`
	ResourceGroupName         string              `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type FakeResourceSpecType `json:"type"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type FakeResourceSpecApiVersion string

const FakeResourceSpecApiVersion20200601 = FakeResourceSpecApiVersion("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/FakeResource"}
type FakeResourceSpecType string

const FakeResourceSpecTypeMicrosoftAzureFakeResource = FakeResourceSpecType("Microsoft.Azure/FakeResource")

func init() {
	SchemeBuilder.Register(&FakeResource{}, &FakeResourceList{})
}
