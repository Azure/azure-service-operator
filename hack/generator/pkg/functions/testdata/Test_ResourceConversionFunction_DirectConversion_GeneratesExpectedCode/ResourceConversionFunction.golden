 // Code generated by azure-service-operator-codegen. DO NOT EDIT.
 // Copyright (c) Microsoft Corporation.
 // Licensed under the MIT license.
 package v20200101
 
-import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+import (
+	"fmt"
+	person "github.com/Azure/azure-service-operator/testing/microsoft.person/v20211231"
+	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+	"sigs.k8s.io/controller-runtime/pkg/conversion"
+)
 
 // +kubebuilder:object:root=true
 // +kubebuilder:subresource:status
 type Person struct {
 	metav1.TypeMeta   `json:",inline"`
 	metav1.ObjectMeta `json:"metadata,omitempty"`
 	Spec              Person_Spec   `json:"spec,omitempty"`
 	Status            Person_Status `json:"status,omitempty"`
 }
 
+// ConvertFrom populates our Person from the provided hub Person
+func (person *Person) ConvertFrom(hub conversion.Hub) error {
+	source, ok := hub.(*person.Person)
+	if !ok {
+		return fmt.Errorf("expected github.com/Azure/azure-service-operator/testing/microsoft.person/v20211231/Person but received %T instead", hub)
+	}
+	return person.AssignPropertiesFromPerson(source)
+}
+
+// ConvertTo populates the provided hub Person from our Person
+func (person *Person) ConvertTo(hub conversion.Hub) error {
+	destination, ok := hub.(*person.Person)
+	if !ok {
+		return fmt.Errorf("expected github.com/Azure/azure-service-operator/testing/microsoft.person/v20211231/Person but received %T instead", hub)
+	}
+	return person.AssignPropertiesToPerson(destination)
+}
+
 // +kubebuilder:object:root=true
 type PersonList struct {
 	metav1.TypeMeta `json:",inline"`
 	metav1.ListMeta `json:"metadata,omitempty"`
 	Items           []Person `json:"items"`
 }
 
 func init() {
 	SchemeBuilder.Register(&Person{}, &PersonList{})
 }
 