// Code generated by k8s-infra. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vCurrent

import "github.com/Azure/azure-service-operator/hack/generated/_apis/Verification/vNext"

type Person struct {
	nasty map[string][]map[string]bool `json:"nasty"`
}

// AssignPropertiesFromPerson populates our Person from the provided source Person
func (person *Person) AssignPropertiesFromPerson(source *vNext.Person) error {

	// nasty
	nastyMap := make(map[string][]map[string]bool)
	for nastyKey, nastyValue := range source.nasty {
		// Shadow the loop variable to avoid aliasing
		nastyValue := nastyValue
		nastyList := make([]map[string]bool, len(nastyValue))
		for nastyIndex, nastyItem := range nastyValue {
			// Shadow the loop variable to avoid aliasing
			nastyItem := nastyItem
			nastyMap1 := make(map[string]bool)
			for nastyKey1, nastyValue1 := range nastyItem {
				// Shadow the loop variable to avoid aliasing
				nastyValue1 := nastyValue1
				nastyMap1[nastyKey1] = nastyValue1
			}
			nastyList[nastyIndex] = nastyMap1
		}
		nastyMap[nastyKey] = nastyList
	}
	person.nasty = nastyMap

	// No error
	return nil
}

// AssignPropertiesToPerson populates the provided destination Person from our Person
func (person *Person) AssignPropertiesToPerson(destination *vNext.Person) error {

	// nasty
	nastyMap := make(map[string][]map[string]bool)
	for nastyKey, nastyValue := range person.nasty {
		// Shadow the loop variable to avoid aliasing
		nastyValue := nastyValue
		nastyList := make([]map[string]bool, len(nastyValue))
		for nastyIndex, nastyItem := range nastyValue {
			// Shadow the loop variable to avoid aliasing
			nastyItem := nastyItem
			nastyMap1 := make(map[string]bool)
			for nastyKey1, nastyValue1 := range nastyItem {
				// Shadow the loop variable to avoid aliasing
				nastyValue1 := nastyValue1
				nastyMap1[nastyKey1] = nastyValue1
			}
			nastyList[nastyIndex] = nastyMap1
		}
		nastyMap[nastyKey] = nastyList
	}
	destination.nasty = nastyMap

	// No error
	return nil
}
