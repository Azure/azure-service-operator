[{"id":0,"href":"/azure-service-operator/contributing/contributing/","title":"Contributing","section":"For Contributors","content":"Contributing to Azure Service Operator v2 #  Related pages #   Adding a new code-generator resource. Generator code overview  Developer setup (with VS Code) #  This is the recommended setup, especially if you are using Windows as your development platform.\nThis repository contains a devcontainer configuration that can be used in conjunction with VS Code to set up an environment with all the required tools preinstalled.\nIf you want to use this:\n Make sure you have installed the prerequisites to use Docker, including WSL if on Windows.\n  Install VS Code and the Remote Development extension (check installation instructions there).\n  Run the VS Code command (with Ctrl-Shift-P): Remote Containers: Clone Repository in Container Volume...\nNote: in Windows, it is important to clone directly into a container instead of cloning first and then loading that with the Remote Containers extension, as the tooling performs a lot of file I/O, and if this is performed against a volume mounted in WSL then it is unusably slow.\nTo complete the clone:\n Select \u0026ldquo;GitHub\u0026rdquo;. Search for \u0026ldquo;Azure/azure-service-operator\u0026rdquo;. Choose either of the following options about where to create the volume. The window will reload and run the Dockerfile setup. The first time, this will take some minutes to complete as it installs all dependencies. Run git submodule init and git submodule update    To validate everything is working correctly, you can open a terminal in VS Code and run task -l. This will show a list of all task commands. Running task by itself (or task default) will run quick local pre-checkin tests and validation.\n  Without VS Code #  Option 1: Dockerfile #  The same Dockerfile that the VS Code devcontainer extension uses can also be used outside of VS Code; it is stored in the root .devcontainer directory and can be used to create a development container with all the tooling preinstalled:\n$ docker build $(git rev-parse --show-toplevel)/.devcontainer -t asodev:latest … image will be created … $ # After that you can start a terminal in the development container with: $ docker run --env-file ~/work/envs.env -v $(git rev-parse --show-toplevel):/go/src -w /go/src -u $(id -u ${USER}):$(id -g ${USER}) --group-add $(stat -c '%g' /var/run/docker.sock) -v /var/run/docker.sock:/var/run/docker.sock --network=host -it asodev:latest /bin/bash It is not recommended to mount the source like this on Windows (WSL2) as the cross-VM file operations are very slow.\nOption 2: ./dev.sh #  If you are using Linux, instead of using VS Code you can run the dev.sh script in the root of the repository. This will install all required tooling into the hack/tools directory and then start a new shell with the PATH updated to use it.\nDirectory structure of the operator #  Running integration tests #  Basic use: run task controller:test-integration-envtest.\nRecord/replay #  The task controller:test-integration-envtest runs the tests in a record/replay mode by default, so that it does not touch any live Azure resources. (This uses the go-vcr library.) If you change the controller or other code in such a way that the required requests/responses from ARM change, you will need to update the recordings.\nTo do this, delete the recordings for the failing tests (under {test-dir}/recordings/{test-name}.yml), and re-run controller:test-integration-envtest. If the test passes, a new recording will be saved, which you can commit to include with your change. All authentication and subscription information is removed from the recording.\nTo run the test and produce a new recording you will also need to have set the required authentication environment variables for an Azure Service Principal: AZURE_SUBSCRIPTION_ID, AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET. This Service Principal will need access to the subscription to create and delete resources.\nIf you need to create a new Azure Service Principal, run the following commands:\n$ az login … follow the instructions … $ az account set --subscription {the subscription ID you would like to use} Creating a role assignment under the scope of \u0026quot;/subscriptions/{subscription ID you chose}\u0026quot; … $ az ad sp create-for-rbac --role contributor --name {the name you would like to use} { \u0026quot;appId\u0026quot;: \u0026quot;…\u0026quot;, \u0026quot;displayName\u0026quot;: \u0026quot;{name you chose}\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;{name you chose}\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;…\u0026quot;, \u0026quot;tenant\u0026quot;: \u0026quot;…\u0026quot; } The output contains appId (AZURE_CLIENT_ID), password (AZURE_CLIENT_SECRET), and tenant (AZURE_TENANT_ID). Store these somewhere safe as the password cannot be viewed again, only reset. The Service Principal will be created as a “contributor” to your subscription which means it can create and delete resources, so ensure you keep the secrets secure.\nRunning live tests #  If you want to skip all recordings and run all tests directly against live Azure resources, you can use the controller:test-integration-envtest-live task. This will also require you to set the authentication environment variables, as detailed above.\nRunning a single test #  By default task controller:test-integration-envtest and its variants run all tests. This is often undesirable as you may just be working on a single feature or test. In order to run a subset of tests, use:\nTEST_FILTER=test_name_regex task controller:test-integration-envtest Running the operator locally #  If you would like to try something out but do not want to write an integration test, you can run the operation locally in a kind cluster.\nBefore launching kind, make sure that your shell has the AZURE_SUBSCRIPTION_ID, AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET environment variables set. See above for more details about them.\nOnce you\u0026rsquo;ve set the environment variables above, run one of the following commands to create a kind cluster:\n Service Principal authentication cluster: task controller:kind-create-with-service-principal. AAD Pod Identity authentication enabled cluster (emulates Managed Identity): controller:kind-create-with-podidentity.  You can use kubectl to interact with the local kind cluster.\nWhen you\u0026rsquo;re done with the local cluster, tear it down with task controller:kind-delete.\nSubmitting a pull request #  Pull requests opened from forks of the azure-service-operator repository will initially have a skipped Validate Pull Request / integration-tests check which will prevent merging even if all other checks pass. Once a maintainer has looked at your PR and determined it is ready they will comment /ok-to-test sha=\u0026lt;sha\u0026gt; to kick off an integration test pass. If this check passes along with the other checks the PR can be merged.\nCommon problems and their solutions #  Error loading schema from root #  Full error:\n error loading schema from root \u0026hellip; open /azure-service-operator/v2/specs/azure-resource-manager-schemas/schemas/2019-04-01/deploymentTemplate.json no such file or directory\n This git repo contains submodules. This error occurs when the submodules are missing, possibly because the repo was not cloned with --recurse-submodules.\nTo resolve this problem, run git submodule init and git submodule update and then try building again.\n"},{"id":1,"href":"/azure-service-operator/introduction/metrics/","title":"Metrics","section":"User’s Guide","content":"ASOv2 Metrics #  Prometheus metrics are exposed for ASOv2 which can be helpful in diagnosability and tracing. The metrics exposed fall into two groups: Azure based metrics, and reconciler metrics (from controller-runtime).\nToggling the metrics #  By default, metrics for ASOv2 are turned on and can be toggled by the following options:\n  ASOv2 Helm Chart #  While installing the Helm chart, we can turn the metrics on and off and set the metrics expose address using the below settings. Also, we can change the settings inside values.yaml file for ASOv2 Helm chart.\n--set metrics.enable=true/false (default: true) --set metrics.address=127.0.0.1:8080 (default)   Deployment Yaml #  In the deployment yaml, we can turn off the metrics by omitting the metrics-addr flag. We can also change to use a different metrics-addr by changing the default value of that same flag.\nspec: containers: - args: - --metrics-addr=127.0.0.1:8080 (default)   Understanding the ASOv2 Metrics #     Metric Description Label 1 Label 2 Label 3     controller_runtime_reconcile_total A prometheus counter metric with total number of reconcilations per controller. Controller Result    controller_runtime_errors_total A prometheus counter metric with total number of errors from reconciler Controller     controller_runtime_reconcile_time_seconds A prometheus histogram metric which keeps track of the duration of reconcilations Controller     controller_runtime_max_concurrent_reconciles A prometheus gauge metric with number of concurrent reconciles per controller Controller     controller_runtime_active_workers A prometheus gauge metric with number of active workers per controller Controller     azure_requests_total A prometheus counter metric with total number of requests to Azure ResourceName RequestType ResponseCode   azure_failed_requests_total A prometheus counter metric with total number of failed requests to Azure ResourceName RequestType    azure_requests_time_seconds A prometheus histogram metric which keeps track of the duration of round-trip time taken by request to Azure ResourceName RequestType     Labels #  Labels are used to differentiate the characteristics of the metric that is being measured. Each metric with distinct labels is an independent metric. Below are the labels used in ASOv2 metrics:\n Controller: Each resource being reconciled against Azure ARM has a separate dedicated controller Result: Reconcile result returned by controller ( error | requeue | requeue_after | success ) ResourceName: Resource name for which the request is sent RequestType: Http request method ( GET | PUT | DELETE ) ResponseCode: Http code in response from Azure  "},{"id":2,"href":"/azure-service-operator/introduction/resources/","title":"Resources","section":"User’s Guide","content":"Supported Resources #  These are the resources with Azure Service Operator support committed to our main branch, grouped by the originating ARM service. (Newly supported resources will appear in this list prior to inclusion in any ASO release.)\nAuthorization #     Resource ARM Version CRD Version Sample     RoleAssignment 2020-08-01-preview v1beta20200801preview View   RoleAssignment 2020-08-01-preview v1alpha1api20200801preview View    Batch #     Resource ARM Version CRD Version Sample     BatchAccount 2021-01-01 v1beta20210101 View   BatchAccount 2021-01-01 v1alpha1api20210101 View    Cache #     Resource ARM Version CRD Version Sample     Redis 2020-12-01 v1beta20201201 View   Redis 2020-12-01 v1alpha1api20201201 View   RedisEnterprise 2021-03-01 v1beta20210301 View   RedisEnterprise 2021-03-01 v1alpha1api20210301 View   RedisEnterpriseDatabase 2021-03-01 v1beta20210301 View   RedisEnterpriseDatabase 2021-03-01 v1alpha1api20210301 View   RedisFirewallRule 2020-12-01 v1beta20201201 View   RedisFirewallRule 2020-12-01 v1alpha1api20201201 View   RedisLinkedServer 2020-12-01 v1beta20201201 View   RedisLinkedServer 2020-12-01 v1alpha1api20201201 View   RedisPatchSchedule 2020-12-01 v1beta20201201 View   RedisPatchSchedule 2020-12-01 v1alpha1api20201201 View    Compute #     Resource ARM Version CRD Version Sample     Disk 2020-09-30 v1beta20200930 View   Disk 2020-09-30 v1alpha1api20200930 View   Image 2021-07-01 v1beta20210701 View   Image 2021-07-01 v1alpha1api20210701 View   Snapshot 2020-09-30 v1beta20200930 View   Snapshot 2020-09-30 v1alpha1api20200930 View   VirtualMachine 2020-12-01 v1beta20201201 View   VirtualMachine 2020-12-01 v1alpha1api20201201 View   VirtualMachineScaleSet 2020-12-01 v1beta20201201 View   VirtualMachineScaleSet 2020-12-01 v1alpha1api20201201 View    Containerregistry #     Resource ARM Version CRD Version Sample     Registry 2021-09-01 v1beta20210901 View   Registry 2021-09-01 v1alpha1api20210901 View    Containerservice #     Resource ARM Version CRD Version Sample     ManagedCluster 2021-05-01 v1beta20210501 View   ManagedCluster 2021-05-01 v1alpha1api20210501 View   ManagedClustersAgentPool 2021-05-01 v1beta20210501 View   ManagedClustersAgentPool 2021-05-01 v1alpha1api20210501 View    Dbformysql #     Resource ARM Version CRD Version Sample     FlexibleServer 2021-05-01 v1beta20210501 View   FlexibleServer 2021-05-01 v1alpha1api20210501 View   FlexibleServersDatabase 2021-05-01 v1beta20210501 View   FlexibleServersDatabase 2021-05-01 v1alpha1api20210501 View   FlexibleServersFirewallRule 2021-05-01 v1beta20210501 View   FlexibleServersFirewallRule 2021-05-01 v1alpha1api20210501 View    Dbforpostgresql #     Resource ARM Version CRD Version Sample     FlexibleServer 2021-06-01 v1beta20210601 View   FlexibleServer 2021-06-01 v1alpha1api20210601 View   FlexibleServersConfiguration 2021-06-01 v1beta20210601 View   FlexibleServersConfiguration 2021-06-01 v1alpha1api20210601 View   FlexibleServersDatabase 2021-06-01 v1beta20210601 View   FlexibleServersDatabase 2021-06-01 v1alpha1api20210601 View   FlexibleServersFirewallRule 2021-06-01 v1beta20210601 View   FlexibleServersFirewallRule 2021-06-01 v1alpha1api20210601 View    Documentdb #     Resource ARM Version CRD Version Sample     DatabaseAccount 2021-05-15 v1beta20210515 View   DatabaseAccount 2021-05-15 v1alpha1api20210515 View   MongodbDatabase 2021-05-15 v1beta20210515 View   MongodbDatabase 2021-05-15 v1alpha1api20210515 View   MongodbDatabaseCollection 2021-05-15 v1beta20210515 View   MongodbDatabaseCollection 2021-05-15 v1alpha1api20210515 View   MongodbDatabaseCollectionThroughputSetting 2021-05-15 v1beta20210515 View   MongodbDatabaseCollectionThroughputSetting 2021-05-15 v1alpha1api20210515 View   MongodbDatabaseThroughputSetting 2021-05-15 v1beta20210515 View   MongodbDatabaseThroughputSetting 2021-05-15 v1alpha1api20210515 View   SqlDatabase 2021-05-15 v1beta20210515 View   SqlDatabase 2021-05-15 v1alpha1api20210515 View   SqlDatabaseContainer 2021-05-15 v1beta20210515 View   SqlDatabaseContainer 2021-05-15 v1alpha1api20210515 View   SqlDatabaseContainerStoredProcedure 2021-05-15 v1beta20210515 View   SqlDatabaseContainerStoredProcedure 2021-05-15 v1alpha1api20210515 View   SqlDatabaseContainerThroughputSetting 2021-05-15 v1beta20210515 View   SqlDatabaseContainerThroughputSetting 2021-05-15 v1alpha1api20210515 View   SqlDatabaseContainerTrigger 2021-05-15 v1beta20210515 View   SqlDatabaseContainerTrigger 2021-05-15 v1alpha1api20210515 View   SqlDatabaseContainerUserDefinedFunction 2021-05-15 v1beta20210515 View   SqlDatabaseContainerUserDefinedFunction 2021-05-15 v1alpha1api20210515 View   SqlDatabaseThroughputSetting 2021-05-15 v1beta20210515 View   SqlDatabaseThroughputSetting 2021-05-15 v1alpha1api20210515 View    Eventgrid #     Resource ARM Version CRD Version Sample     Domain 2020-06-01 v1beta20200601 View   Domain 2020-06-01 v1alpha1api20200601 View   DomainsTopic 2020-06-01 v1beta20200601 View   DomainsTopic 2020-06-01 v1alpha1api20200601 View   EventSubscription 2020-06-01 v1beta20200601 View   EventSubscription 2020-06-01 v1alpha1api20200601 View   Topic 2020-06-01 v1beta20200601 View   Topic 2020-06-01 v1alpha1api20200601 View    Eventhub #     Resource ARM Version CRD Version Sample     Namespace 2021-11-01 v1beta20211101 View   Namespace 2021-11-01 v1alpha1api20211101 View   NamespacesAuthorizationRule 2021-11-01 v1beta20211101 View   NamespacesAuthorizationRule 2021-11-01 v1alpha1api20211101 View   NamespacesEventhub 2021-11-01 v1beta20211101 View   NamespacesEventhub 2021-11-01 v1alpha1api20211101 View   NamespacesEventhubsAuthorizationRule 2021-11-01 v1beta20211101 View   NamespacesEventhubsAuthorizationRule 2021-11-01 v1alpha1api20211101 View   NamespacesEventhubsConsumerGroup 2021-11-01 v1beta20211101 View   NamespacesEventhubsConsumerGroup 2021-11-01 v1alpha1api20211101 View    Insights #     Resource ARM Version CRD Version Sample     Component 2020-02-02 v1beta20200202 View   Component 2020-02-02 v1alpha1api20200202 View   Webtest 2018-05-01-preview v1beta20180501preview View   Webtest 2018-05-01-preview v1alpha1api20180501preview View    Managedidentity #     Resource ARM Version CRD Version Sample     UserAssignedIdentity 2018-11-30 v1beta20181130 View   UserAssignedIdentity 2018-11-30 v1alpha1api20181130 View    Network #     Resource ARM Version CRD Version Sample     LoadBalancer 2020-11-01 v1beta20201101 View   LoadBalancer 2020-11-01 v1alpha1api20201101 View   NetworkInterface 2020-11-01 v1beta20201101 View   NetworkInterface 2020-11-01 v1alpha1api20201101 View   NetworkSecurityGroup 2020-11-01 v1beta20201101 View   NetworkSecurityGroup 2020-11-01 v1alpha1api20201101 View   NetworkSecurityGroupsSecurityRule 2020-11-01 v1beta20201101 View   NetworkSecurityGroupsSecurityRule 2020-11-01 v1alpha1api20201101 View   PublicIPAddress 2020-11-01 v1beta20201101 View   PublicIPAddress 2020-11-01 v1alpha1api20201101 View   VirtualNetwork 2020-11-01 v1beta20201101 View   VirtualNetwork 2020-11-01 v1alpha1api20201101 View   VirtualNetworkGateway 2020-11-01 v1beta20201101 View   VirtualNetworkGateway 2020-11-01 v1alpha1api20201101 View   VirtualNetworksSubnet 2020-11-01 v1beta20201101 View   VirtualNetworksSubnet 2020-11-01 v1alpha1api20201101 View   VirtualNetworksVirtualNetworkPeering 2020-11-01 v1beta20201101 View   VirtualNetworksVirtualNetworkPeering 2020-11-01 v1alpha1api20201101 View    Operationalinsights #     Resource ARM Version CRD Version Sample     Workspace 2021-06-01 v1beta20210601 View   Workspace 2021-06-01 v1alpha1api20210601 View    Servicebus #     Resource ARM Version CRD Version Sample     Namespace 2021-01-01-preview v1beta20210101preview View   Namespace 2021-01-01-preview v1alpha1api20210101preview View   NamespacesQueue 2021-01-01-preview v1beta20210101preview View   NamespacesQueue 2021-01-01-preview v1alpha1api20210101preview View   NamespacesTopic 2021-01-01-preview v1beta20210101preview View   NamespacesTopic 2021-01-01-preview v1alpha1api20210101preview View    Signalrservice #     Resource ARM Version CRD Version Sample     SignalR 2021-10-01 v1beta20211001 View   SignalR 2021-10-01 v1alpha1api20211001 View    Storage #     Resource ARM Version CRD Version Sample     StorageAccount 2021-04-01 v1beta20210401 View   StorageAccount 2021-04-01 v1alpha1api20210401 View   StorageAccountsBlobService 2021-04-01 v1beta20210401 View   StorageAccountsBlobService 2021-04-01 v1alpha1api20210401 View   StorageAccountsBlobServicesContainer 2021-04-01 v1beta20210401 View   StorageAccountsBlobServicesContainer 2021-04-01 v1alpha1api20210401 View   StorageAccountsManagementPolicy 2021-04-01 v1beta20210401 View   StorageAccountsManagementPolicy 2021-04-01 v1alpha1api20210401 View   StorageAccountsQueueService 2021-04-01 v1beta20210401 View   StorageAccountsQueueService 2021-04-01 v1alpha1api20210401 View   StorageAccountsQueueServicesQueue 2021-04-01 v1beta20210401 View   StorageAccountsQueueServicesQueue 2021-04-01 v1alpha1api20210401 View    "},{"id":3,"href":"/azure-service-operator/architecture-decision-records/adr-2020-04-code-generation/","title":"2020-04: Why Code Generation?","section":"Architecture Decision Records","content":"Why Code Generation? #  Context #  The Azure Service Operator CSE team had successfully developed support for a handful of ARM (Azure Resource Manager) based custom resources over the course of eighteen months or so.\nTheir experience yielded several useful lessons.\n  Working closely with their customers, they only built out resource support for those features required by the current customer base. While this successfully reduced the amount of work, each additional customer brought new requirements and a need to revisit/enhance existing resources.\n  Adding support for a brand-new resource was often needed by new adopters of ASO and required a significant effort. Extending ASO to have broad support across all (or nearly all) Azure ARM resources would require a major investment\n  A separate controller for each resource type introduced inconsistencies in behavior\n  Multiple people concurrently had the idea of using code generation based on ARM JSON Schema to address these problems:\n  By default, a code generator would mirror the the entire ARM specification for a resource in Kubernetes, providing full feature coverage with consistent naming.\n  The overhead of adding a new resource would be much reduced, potentially limited to as little as testing\n  Using a single generic controller for all resources would ensure consistent behavior\n  Decision #  A proof of concept by David Justice proved the concept sufficiently that we had confidence the idea would work.\nStatus #  Adopted, based on the proof of concept code in the Azure/k8s-infra repository.\nConsequences #  We think it\u0026rsquo;s working.\nExperience Report #  The ARM JSON Schema definitions weren’t sufficient in isolation as they don’t contain all of the information required. Use of Azure Swagger specifications to augment our status types was introduced in PR #205.\nMigration of the code generator into the ASO repo occurred in PR #1427.\nReferences #  None.\n"},{"id":4,"href":"/azure-service-operator/architecture-decision-records/adr-2020-07-pipeline-architecture/","title":"2020-07: Pipeline Architecture","section":"Architecture Decision Records","content":"Pipeline architecture #  Context #  As the complexity of code generation grew, and with a partial view of the complexity yet to come, it became clear that we were facing a challenge. Each additional required function was making integration and testing progressively more difficult.\nWe also have the requirement to support a parallel pipeline that generates code appropriate for CrossPlane integration, and have a strong desire for an approach that minimizes the amount of ongoing maintenance.\nIntroducing a formal pipeline architecture, where each function forms a distinct pipeline stage, solves these problems.\n  Each pipeline stage can (in theory, at least) be tested independently, improving our confidence in the functionality\n  Dependencies between stages can be explicitly declared, allowing the validity of the pipeline to be checked\n  A single factory method can create both required pipeline variants\n  Decision #  Adopted.\nStatus #  Pipeline introduced in PR#171.\nStage prerequisites introduced in PR#366 and postrequisites in PR#1541.\nConsequences #  Individual pipeline stages are independently tested, but some require considerable set up to create the expected initial state required for execution. The addition of mini-pipelines in PR#1649 partially mitigates this.\nReferences #  Pipeline (software) on Wikipedia\n"},{"id":5,"href":"/azure-service-operator/architecture-decision-records/adr-2020-11-abstract-syntax-trees/","title":"2020-11: AST Library Choice","section":"Architecture Decision Records","content":"Abstract Syntax Tree Library Choice #  Context #  When we first started working on the Azure Service Operator Code Generator, we used the standard go ast library to create the final Go code.\nUnfortunately, we have run into a number of significant limitations with this library.\n  Comments are often emitted in unexpected places.\nThey would often appear at the end of the previous line, which conveys an incorrect meaning to a casual reader of the code. As a workaround, we found that prefacing some comments with newline characters would force them onto the next line. While hacking the library in this function worked, we are concerned that it\u0026rsquo;s a fragile technique that would break in a future version of Go. We also found situations where this technique did not work.\n  Generated code does not always comply with go fmt standards.\nFor some constructs, the generated code would fail the go fmt check included in our continuous integration (CI) builds. We found a workaround that involved using ast to read in a generated file and immediately rewrite it back out again, immitating the results of go fmt.\n  Generated code does not always compile.\nFor some constructs, we found the comments were emitted at the start of the line of code (not on the previous line), resulting in the code being commented out. We found no workaround for this.\n  Poor control over whitespace\nWe were unable to find a reliable technique within ast to introduce blank lines betweens stanza of code, or before comment blocks. As a workaround, we would read in the formatted code, scan it for comments and manually inject blank lines before each comment block.\n  We have come to the conclusions that the ast library is intended as a way to make minor modifications to existing well formatted Go files, not for the creation of entirely new Go files from scratch.\nA potential alternative is the dst (Decorated Syntax Tree) package. This package was specifically created to address the kinds of issues described above.\nDecision #  After some informative trials, we have decided to adopt the dst library.\nStatus #  Adopted.\nInitial change committed in PR#366.\nConsequences #  With a very high level of API compatibility, we were able to introduce dst with a low level of code churn by aliasing the import as ast in most files. Future changes should remove this aliasing as files are modified.\nThe DST library requires that any node be used exactly once, and will panic if a node is reused in mulitiple locations. We\u0026rsquo;ve mitigated this by liberally cloning nodes as we build the desired final syntax tree. (See astbuilder.Expressions(), introduced in PR#1613 and astbuilder.Statements(), introduced in PR#427).\nExperience Report #  TBC\nReferences #  Go AST (Abstract Syntax Tree) library\nDST (Decorated Syntax Tree) library\n"},{"id":6,"href":"/azure-service-operator/architecture-decision-records/adr-2021-02-property-conversions/","title":"2021-02: Property Conversions","section":"Architecture Decision Records","content":"Property Conversions #  Context #  To facilitate the use of dedicated storage variants for persistence of our custom resources, we need to codegen conversion routines that will copy all properties defined on one version of a resource to another version.\nGiven the way resources evolve from version to version, these we need to support a wide range of conversions between types that are similar, but not identical.\nFor example, looking primitive types (such as string, int, and bool):\nA primitive type can become optional in a later version when a suitable default is provided, or when an alternative becomes available.\nAn optional primitive type can become mandatory in a later version when deprecation of other properties leaves only one way to do things.\nA primitive type can be replaced by an enumeration when validation for a property (such as VM SKU) is tightened up to avoid problems.\nA primitive type can be replaced by an alias when additional validation constraints (e.g., limiting bounds or a regular expression) are added to address problems.\nThese transformations (and others) can occur in combination with each other (e.g., a primitive type replaced by an optional enumeration) and with other constructs, such as maps, arrays, resources, and complex object types.\nOther constraints apply, such as the need to clone optional values during copying lest the two objects become coupled with changes to one being visible on the other.\nWhen implementation began, it very quickly became apparent that independently addressing every possible conversion requirement would be difficult to impossible given the combinatorial explosion of possibilities.\nDecision #  Use a recursive algorithm to generate the required conversion by composing simpler conversion steps together.\nFor example, given a need to copy an optional string to an optional enumeration, the process works as follows:\nOriginal problem: *string -\u0026gt; *Sku (where Sku is based on a string)\nThe handler assignFromOptional knows how to handle the optionality of *string, reducing the size of the problem. A recursive call is made to solve the new problem.\nReduced problem: string -\u0026gt; *Sku\nThe handler assignToOptional knows how to handle the optionality of *Sku, reducing the size of the problem further. A recursive call is made to solve the new problem.\nReduced problem #2: string -\u0026gt; Sku\nThe handler assignToAliasedPrimitive recognizes that Sku is an enumeration based on string and reduces the problem. A recursive call is made to solve the new problem.\nReduced problem #3: string -\u0026gt; string\nNow assignPrimitiveFromPrimitive can handle the reduced problem, generating a simple assignment to copy the value across:\ndestination = source Working backwards, the handler assignToAliasedPrimitive injects the required cast to the enumeration\ndestination = Sku(source) Then, assignToOptional injects a local variable and takes its address\nsku := Sku(source) destination = \u0026amp;sku Finally, assignFromOptional injects a check to see if we have a value to assign in the first place, assigning a suitable zero value if we don\u0026rsquo;t:\nif source != nil { sku := Sku(source) destination := \u0026amp;sku } else { destination := \u0026#34;\u0026#34; } Status #  Successfully implemented. First commit in PR# #378\nThe full list of implemented conversions can be found in property_conversions.go.\nConsequences #  It required some finessing of the conversion code to generate high quality conversions; early results were functional but not comparable with handwritten efforts.\nAs we’ve encountered new cases where new transformations are required, the list of conversions has been extended with additional handlers, including:\n•\tSupport for enumerations (PR #392) •\tConversion of complex object types (PR #395) •\tSupport for aliases of otherwise supported types (PR #433) •\tAbility to read values from functions (PR #1545) •\tSupport for JSON properties (PR #1574) •\tProperty Bags for storing/recalling unknown properties (PR# 1682)\nExperience Report #  TBC\nReferences #  TBC\n"},{"id":7,"href":"/azure-service-operator/architecture-decision-records/adr-2021-06-api-version-recovery/","title":"2021-06: API Version Recovery","section":"Architecture Decision Records","content":"API Version Recovery #  Context #  In addition to structural changes, there may be behaviour changes between ARM API versions. It is therefore important that we use the correct API version - the version requested by the user - when interacting with ARM, to ensure that we get the expected behaviour.\nRevisting the CRM example from the Versioning specification, consider what happens if we have two available versions of the resource Person, lets call them v1 and v2. In v2 the new properties PostalAddress and ResidentialAddress are mandatory, requiring that everyone have a both a mailing address and a home.\nIf we have a valid v1 Person, trying to submit that through the v2 ARM API will fail because it\u0026rsquo;s missing these addresses.\nWe need to be able to pivot from the version Person we have \u0026ldquo;in hand\u0026rdquo; (usually the Hub version) back to the original version in order to generate the correct ARM payload.\nWe also have a performance issue - our current infrastructure for conversions is oriented to convert an entire resource, including both Spec and Status.\nWhen submitting a request to ARM we\u0026rsquo;re only interested in the Spec; any effort expended on conversion of the current Status is wasted.\nSimilarly, when retrieving Status from ARM, we\u0026rsquo;re only interested in conversion of that; any effort expended on conversion of the Spec is also wasted.\nDecision #  The original API version used to create the custom resource will as the API version for ARM. From the above example, a v1.Person will result in API version v1 being used, and for a v2.Person we\u0026rsquo;ll use API version v2.\nWe\u0026rsquo;ll preserve this as another property on the CRD, but one the user does not need to manually provide, allowing us to know which API version to use when interacting with ARM.\nThe code generator will also inject functions allowing easy access to this information.\nHelper methods in the generic reconciler will use these functions implement the required pivot between the current hub version and the specified API version.\nAPI Preservation #  Into the API version of each resource\u0026rsquo;s Spec, inject function OriginalVersion(), with a hard coded return value:\n// OriginalVersion returns the original API version used to create the resource. func (storageAccountsSpec *StorageAccounts_Spec) OriginalVersion() string { return GroupVersion.Version } var GroupVersion = schema.GroupVersion{Group: \u0026#34;storage.azure.com\u0026#34;, Version: \u0026#34;v1alpha1api20210401\u0026#34;} Into the Storage version of each resource\u0026rsquo;s Spec, inject string property OriginalVersion to persist the value returned by OriginalVersion().\ntype StorageAccounts_Spec struct { // ... elided ... \tOriginalVersion string `json:\u0026#34;originalVersion\u0026#34;` // ... elided ... } The generated AssignProperties*() methods will copy OriginalVersion as expected.\nRetrieving the API Version #  Into each resource, inject function OriginalGVK() to return the required group-version-kind for the original version of the specified resource:\n// OriginalGVK returns a GroupValueKind for the original API version used to create the resource func (storageAccount *StorageAccount) OriginalGVK() *schema.GroupVersionKind { return \u0026amp;schema.GroupVersionKind{ Group: GroupVersion.Group, Version: storageAccount.Spec.OriginalVersion, Kind: \u0026#34;StorageAccount\u0026#34;, } } Implementations will use either the OriginalVersion property (as shown above), or the OriginalVersion() function, depending on the resource variant.\nRetrieving Spec and Status #  Two new interfaces will be added to the genruntime package:\ntype ConvertibleSpec interface { // ConvertSpecTo will populate the passed Spec by copying over all available information from this one \tConvertSpecTo(destination ConvertibleSpec) error // ConvertSpecFrom will populate this spec by copying over all available information from the passed one \tConvertSpecFrom(source ConvertibleSpec) error } type ConvertibleStatus interface { // ConvertStatusTo will populate the passed Status by copying over all available information from this one \tConvertStatusTo(destination ConvertibleStatus) error // ConvertStatusFrom will populate this status by copying over all available information from the passed one \tConvertStatusFrom(source ConvertibleStatus) error } Implementations of these interfaces will be added to all generated Spec and Status types, leveraging the AssignProperties*() methods already being generated.\nThe KubernetesResource interface and all implementations will be modified by adding four new methods:\ntype KubernetesResource interface { // GetSpec returns the specification of the resource \tGetSpec() ConvertibleSpec // GetStatus returns the current status of the resource \tGetStatus() ConvertibleStatus // NewEmptyStatus returns a blank status ready for population \tNewEmptyStatus() ConvertibleStatus // SetStatus updates the status of the resource \tSetStatus(status ConvertibleStatus) error } Spec Conversion #  A helper method for the generic reconciler will be added to return the correct Spec from any resource:\n// GetVersionedSpec returns a versioned spec for the provided resource; // the original API version used when the resource was first created // is used to identify the version to return func GetVersionedSpec(metaObject MetaObject, scheme *runtime.Scheme) (ConvertibleSpec, error) { // ... elided ... } Status Conversion #  Two similar helper methods will be added for support of Status.\n// GetVersionedStatus returns a versioned status for the provided resource; // the original API version used when the resource was first created // is used to identify the version to return func GetVersionedStatus(metaObject MetaObject, scheme *runtime.Scheme) (ConvertibleStatus, error) { // ... elided ... } // NewEmptyVersionedStatus returns a blank versioned status for the provided // resource; the original API version used when the resource was first created // is used to identify the version to return func NewEmptyVersionedStatus(metaObject MetaObject, scheme *runtime.Scheme) (ConvertibleStatus, error) { // ... elided ... } Status #  Successfully implemented across several PRs:\n PR #1773 - Add GetStatus() and GetSpec() to all resources PR #1787 - Implement SetStatus() for all Resources PR #1851 - Integrate support for multiple API versions PR #1875 - Eliminate much use of reflection by using generated code PR #1889 - Introduce API Version helper methods PR #1935 - Integrate API versioning PR #1936 - Activate versioning stages in pipeline and update generated files PR #1973 - Generate patches for Kustomize to enable storage versioning PR #1985 - Copy both ObjectMeta and TypeMeta when doing version conversion  Consequences #  TBC\nExperience Report #  TBC\nReferences #  TBC\n"},{"id":8,"href":"/azure-service-operator/architecture-decision-records/adr-2021-08-committing-generated-code/","title":"2021-08: Committing Generated Code","section":"Architecture Decision Records","content":"Committing Generated Code #  Context #  We’re aware that common practice avoids committing generated code into source control, treating it as an ephemeral resource that can be regenerated on demand.\nEven so, we are concluding that we want to check in our generated code.\nUpstream changes #  We do not fully control the source definitions from which we are generating our object model and we are concerned about upstream changes that change our generated output in unexpected ways.\nWhile such changes are very unlikely, given the controls that ARM has in place around breaking API changes, exceptions are made, and mistakes do happen.\nAs a part of the Kubernetes ecosystem of tooling, we need to adhere to strong guidelines for backward compatibility; inadvertently releasing an incompatible version of ASO would be a significant issue. It’s likely that recovering from such a release would require a second breaking release (to restore compatibility with the original) which would itself cause customer pain.\nHaving the generated code committed into our repository gives us an opportunity to detect and address such changes before a new release of ASO.\nIt is also useful to have the assurance of knowing exactly what generated code was included in a particular release of ASO. Our ability to reproduce and debug a reported issue would be much reduced if an upstream modification (resulting in a change to our generated code) meant that we could not reproduce the exact code being run by a customer.\nGenerator changes #  With so much code being generated, we are starting to become concerned that a simple change to the generator might have unexpected consequences, perhaps due to reuse of a function definition, for example.\nHaving the generated code committed into our repository would give an opportunity to review those changes in advance, helping to catch any issues well before any code is merged into our repository.\nWe admit that reviewing all the generated code is likely to be infeasible, but we can at least benefit from random sampling of the changes, and by reviewing at least one resource in depth.\nGenerator awareness #  We want the project to be accessible to outside developers.\nRequiring a new developer to successfully run the code generator before being able to build the operator itself would be a significant barrier to anyone trying to get an understanding of what we’ve built.\nHaving the generated code committed into our repository means that a full build of the service operator can be performed without needing to even be aware that the generator exists, reducing the effort required for someone to get started.\nDecision #  We will commit the generated code in a separate folder.\nStatus #  Adopted.\nFirst commit of our generated code was in PR #1741.\nConsequences #  We have observed unexpected consequences of generator changes and been able to correct course before creating a PR.\nSome PRs have had a wide reaching impact, resulting in very large PRs with lots of modifications to generated code. To facilitate review, some pieces of work have been split into two PRs: One with a fully tested new feature in disabled form, allowing detailed review of the change, and another to enable the feature and regenerate affected code.\nExperience Report #  TBC.\nReferences #  TBC.\n"},{"id":9,"href":"/azure-service-operator/architecture-decision-records/adr-2022-01-reconciler-extensions/","title":"2022-01: Reconciler Extensions","section":"Architecture Decision Records","content":"Reconciler Extensions #  Context #  We are discovering inconsistencies in the way different Azure Resource Providers behave.\nThese inconsistencies are anticipated. Given the number of disparate teams independently implementing their providers and given the way the ARM guidance has changed over time, differences in behaviour are to be expected.\nFor example, the Azure Redis Resource Provider can return a HTTP conflict (409) with a retry message indicating that it\u0026rsquo;s not a fatal error but a transient one.\nCurrently we handle this with special case behaviour in error_classifier.go (see PR#2008 for details).\nHowever, directly changing our generic reconciler is a problem. The growing complexity and increasing number of resources makes this unsustainable, resulting in a risk that changes made to support a new resource type will break an existing one.\nWe need a way to precisely customize behaviour on a per-resource basis, allowing us to maintain consistent functionality within the operator.\nWhen a new version of a resource is introduced, we don\u0026rsquo;t want to lose any existing customizations. This rules out hosting the extensions directly on the current hub type.\nIt\u0026rsquo;s quite likely that some extension points will need to import our generated resource types to allow per-version manipulation. This rules out referencing extensions from the generated resource types.\nWe don\u0026rsquo;t want extension points to duplicate functionality already present in the generic reconciler as this runs the risk of inconsistencies (especially if we change the generic reconciler itself), and because it introduces a significant overhead to implementation. Instead, extension points will provide an opportunity to modify the current behaviour. An extension point that does nothing should have the same effect as one that hasn\u0026rsquo;t been implemented.\nDecision #  To provide a stable implementation location for extensions, we\u0026rsquo;ll introduce a dedicated customization package alongside the existing versioned packages for each supported service. This package will provide customization for all supported resource versions. For example, alongside the existing batch packages v1alpha1api20210101, and v1alpha1api20210101storage, we will generate customization.\nInto the customization package we will codegen a skeleton framework. For each resource there will be a separate customization host type, suffixed with Extensions. For example, for the compute resources Disk, VirtualMachine, and VirtualMachineScaleSet we will create the extension types DiskExtensions, VirtualMachineExtensions, and VirtualMachineScaleSetExtensions.\nWe\u0026rsquo;ll enhance the existing registration file (controller_resources_gen.go) to also provide registration of extensions. They will be indexed by the GVK of each resource, allowing easy lookup by the generic reconciler.\nFor each supported extension point in our reconciler, we\u0026rsquo;ll define a separate interface containing a single method with exactly the parameters required for that extension point. These interfaces will be found in the genruntime/extensions package.\nImplementers will assert type compatibility with the desired extension interface to ensure at compile time they have the correct method signature. This will also ensure we get compilation errors if we unexpectedly need to modify the signature of an extension point in the future.\nThe generic reconciler will identify available extensions by testing for the presence of the extension interface.\nExtension method signature will follow a common pattern:\n The parameter list will start with any input parameters required. These parameters will be custom for each extension point. A next parameter, a func that the extension should call to invoke the default behaviour.\nThis allows the extension to act both before and after the default behaviour, or even to skip the default behaviour if necessary. An apiVersion parameter that receives the actual ARM API version being used.\nThis enables extensions to do different things based on the ARM API version, such as correcting the behaviour of one version. A log parameter allowing additional information to be logged.\nSome entry/exit information will be automatically logged, so extensions will only need to log any additions Optionally, an extension point may return a value.\nIf multiple return values are needed, these will be wrapped in a custom struct, with a public factory method. There will always be an error return value, and it will always be the last one.  Example #  To allow customization of error handling for Azure Redis, we\u0026rsquo;ll introduce an extension point for classification of errors.\nWe create the required extension interface in the package genruntime/extensions:\n// error_classifier_extension.go  package extensions type ErrorClassifier interface { // Classify the provided error, returning details about the error including whether it is fatal  // or can be retried.  // cloudError is the error returned from ARM.  // next is the function to call for standard classification behaviour.  // apiVersion is the ARM API version used for the request.  // log is a logger than can be used for telemetry.  ClassifyError( cloudError *genericarmclient.CloudError, next func(*genericarmclient.CloudError) (*CloudErrorDetails, error), apiVersion string, log logr.Logger) (*CloudErrorDetails, error) } In the cache/customization package, a host type for the extension point will be generated:\n// redis_extensions.go  package customization type RedisExtensions struct{} This type doesn\u0026rsquo;t contain any members as we require extension points to be pure functions; if they contain mutable state, we run the risk of introducing concurrency and sequence errors that would be hard to diagnose and fix.\nManual implementation of the extension point will be in a different file so that it\u0026rsquo;s not obliterated next time we re-run the generator:\n// redis_extensions.go  package customization var _ extensions.ErrorClassifier = \u0026amp;RedisExtensions{} func (e *RedisExtensions) ClassifyError( cloudError *genericarmclient.CloudError, next func(*genericarmclient.CloudError) *CloudErrorDetails, apiVersion string, log logr.Logger) (*CloudErrorDetails, error) err, result := next(cloudError) if err != nil { return nil, err } if inner := cloudError.InnerError; inner != nil { code := to.String(inner.Code) if code == \u0026#34;Conflict\u0026#34; { // For Azure Redis, Conflict errors may be retried, as they are  // returned when a required dependency is still being created  result.Classification = CloudErrorRetryable } } return result, nil } Passing in the default behaviour as next allows extensions to augment and/or supplant the behaviour with a great deal of flexibility.\nIn the generic reconciler, we make use of the extension:\n// azure_generic_arm_reconciler.go  func (r *AzureDeploymentReconciler) makeReadyConditionFromError( cloudError *genericarmclient.CloudError) conditions.Condition { // ... existing code elided ...  ext := r.FindErrorClassifierExtension() errorDetails, err := ext.ClassifyError(cloudError, apiVersion, r.ClassifyCloudError) if err != nil { // handle error  } // ... existing code elided ... } The helper method FindErrorClassifierExtension() does the lookup for the extension, and always returns a default implementation that can be invoked. The consuming code therefore doesn\u0026rsquo;t need to worry about null checking, only error handling. To ensure consistent telemetry no matter who implements an extension, this default implementation will include logging.\n// error_classifier_extension.go  package extensions //TODO: This needs a better name type ErrorClassifierDefault struct { extension ErrorClassifierExtension } var _ ErrorClassifier = \u0026amp;ErrorClassifierDefault{} // NewErrorClassifierDefault creates a new ErrorClassifier that will invoke the passed host if it implements // the ErrorClassifier interface. func NewErrorClassifier(host interface{}) *LoggingErrorClassifier { result := \u0026amp;ErrorClassifier{} // Hook up our host if appropriate  if extension, ok := host.(ErrorClassifierExtension); ok { result.extension = extension } return result } func (classifier *ErrorClassifier) ClassifyError( cloudError *genericarmclient.CloudError, next func(*genericarmclient.CloudError) (*CloudErrorDetails, error), apiVersion string, log logr.Logger) (*CloudErrorDetails, error) { log.V(Verbose).Info(\u0026#34;Classifying error\u0026#34;, \u0026#34;error\u0026#34;, cloudError) var details *CloudErrorDetails var err error if classifier.extension != null { log.V(Verbose).Info(\u0026#34;Invoking extension\u0026#34;) details, err = classifier.extension.ClassifyError(cloudError, next, apiVersion, log) } else { details, err = next(cloudError, next, apiVersion, log) } if err != nil { log.Error(\u0026#34;Failure classifying error\u0026#34;, \u0026#34;error\u0026#34;, err) } else { log.V(Verbose).Info(\u0026#34;Success classifying error\u0026#34;, \u0026#34;result\u0026#34;, details) } return details, err } Status #  Proposed.\nConsequences #  TBC.\nExperience Report #  TBC.\nReferences #  "},{"id":10,"href":"/azure-service-operator/architecture-decision-records/adr-2022-02-backward-compatibility/","title":"2022-02: Backward Resource Compatibility","section":"Architecture Decision Records","content":"Backward Resource Compatibility #  Context #  As we close in on a beta release, we are considering modification of the version prefix used for code-generated resources.\nOption 1: Do nothing #  Leave all generated resources using the alpha prefix that is currently in use.\nPros\n Easy to implement (nothing to do) and quick to deliver  Cons\n  Introduces an inconsistency between the status of ASO (beta) and the labelling of the resources (alpha).\n  Might be perceived by some users as indicating these particular resources are still in alpha, and therefore pose significant a barrier to adoption of ASO.\n  Option 2: Move all resources to beta #  Change the generated prefix for all resources\nPros\n Easy to implement (change the prefix, update affected tests, and regenerate all files), and quick to deliver  Cons\n  Existing clusters with custom resources (CRs) reliant on ASO would break because ASO would no longer support the older alpha version.\nMitigation: Users would need to manually delete the existing resource and creating a new CR with an updated version.\n  Any attempt to apply old alpha YAML will fail, as it no longer exists. This includes attempting to manually apply a YAML using kubectl apply -f, and through some other approaches where YAMLs are continuously applied, as in GitOps style workflows.\nMitigation: For manual uses, modification of the YAML files being applied to change the version of the resources.\nMitigation: For automated uses, modification of the deployment pipelines to change the version of the resources.\n  Option 3a: In-place upgrade for existing resources #  Change the generated prefix to v1beta for all resources, but retain the alpha storage variants of each existing resource. This would allow an upgraded ASO installation to promote any existing resources to the new storage version.\nPros\n  Moderate effort to implement (requires a new pipeline stage to create the alpha storage variants for compatibility with older versions).\n  Existing clusters with custom resources reliant on ASO would continue to run because ASO would support conversion from the old hub version to the new.\n  Cons\n  Any attempt to apply old alpha YAML will fail, as it no longer exists. This includes attempting to manually apply a YAML using kubectl apply -f, and through some other approaches where YAMLs are continuously applied, as in GitOps style workflows.\nMitigation: For manual uses, modification of the YAML files being applied to change the version of the resources.\nMitigation: For automated uses, modification of the deployment pipelines to change the version of the resources.\n  CRDs will be 50% bigger than the alpha versions, due to the addition of another storage variant.\nObservation: We know there is an upper limit to the size of each CRD, though we\u0026rsquo;re not very close to that yet. Mitigation: Prune all documentation from the alpha variants to make them (much!) smaller\n  Option 3b: Retain the alpha version for existing resources #  Use a beta prefix for all resources. Also use our existing alpha prefix for all resources that were included in any alpha release of ASO, but not for new resources.\nPros\n  Moderate effort to implement (requires pipeline and configuration changes to generate multiple versions of some resources).\nObservation: We could implement this in two parts, firstly generating all resources with both prefixes for codegen-beta-0, and then introducing configuration for newer resources in codegen-beta-1.\n  Existing clusters with custom resources reliant on ASO would continue to run because ASO would support conversion from the old hub version to the new.\n  Existing use of YAML containing alpha versions will continue to work, as they are still supported. This includes attempting to manually apply a YAML using kubectl apply -f, and through some other approaches where YAMLs are continuously applied, as in GitOps style workflows.\n  Cons\n  CRDs will be twice the size of the alpha versions, due to the addition of both API and storage variants.\nObservation: We know there is an upper limit to the size of each CRD, though we\u0026rsquo;re not very close to that yet.\nMitigation: Prune all documentation from the alpha resource versions\n  Possible user confusion from having multiple versions of each resource.\nMitigation: Pruning documentation would push users towards the beta versions.\n  Other factors #  We don\u0026rsquo;t want to maroon existing users of Azure Service Operator (ASO) by making this a breaking change. It\u0026rsquo;s important to us to make upgrades of ASO as straightforward as possible.\nCross version compatibility between ARM versions of a resource (that is, for example, between v1alpha1api20180101 and v1alpha1api20200101) is already implemented and well tested, so we should leverage that existing infrastructure.\nVersion skew policy in the Kubernetes ecosystem is to allow for one or two older minor versions of backward compatibility. This gives us the option of temporarily introducing backward compatibility with the codegen-beta-0 release and then dropping it once we reach codegen-beta-2 or greater.\nDecision #  We choose to prioritize a good upgrade experience for our users. We\u0026rsquo;ll proceed with option 3b (Retain the alpha version for existing resources).\nChange the prefix used for our resources from v1alpha1api to simply v1beta. (We don\u0026rsquo;t need a minor number as part of the prefix. The original intention was to increment the minor version with each release of the operator, but the overhead of this is very high, so we\u0026rsquo;ve instead used the prefix v1alpha1api for all our alpha releases.)\nBeta 0 Release #  All resources will be duplicated, published as both v1beta and as v1alpha1api. This includes new resources published for the first time in the beta.\nIntroduce a new pipeline stage to create additional versions for backward compatibility, each created by cloning an existing version but using a package name based on the old v1alpha1api prefix.\nFor example, the API resource v1beta20201201storage/VirtualMachine will be cloned as v1alpha1api20201201/VirtualMachine. Subsequent pipeline stages will create matching storage versions and the necessary conversions.\nFor the trivial case where we only support a single ARM version of a resource, this gives us full compatibility to upgrade an older (alpha) installation of ASO to a new beta release.\nWhen we have multiple ARM versions in flight (as we do with compute), supporting all potential older resource versions gives us maximum compatibility without any need for configuration or to make any assumptions about which ARM versions were previously supported.\nThis approach also gives us backward compatibility when we have a mix of resources across multiple versions (as happens with both compute and network). We know from prior work (including introduction of the PropertyBag field) that conversions between storage versions are lossless.\nBeta 1 Release #  Additional configuration will ensure that resources introduced in that (or later) releases won\u0026rsquo;t include alpha versions. This configuration will require opt-in for backward compatibility, so that the overhead for new resources is as low as possible. Issue #2176 has been logged to track this work.\nBeta n Release #  At some point, after giving users of ASO alpha releases a reasonable time frame, we will drop the alpha versions. We\u0026rsquo;ll document this plan as a part of the Beta 0 release.\nStatus #  Proposed.\nConsequences #  With the supported format for old resources being derived from newer resources, we need to be careful about breaking changes (e.g. removing properties or changing property types) that might cause issues for users upgrading to the latest ASO.\nFactors reducing the severity of this include:\n  Our object shapes are defined by ARM resource versions, which have tight constraints on the types of permitted changes, so we\u0026rsquo;re unlikely to have breaking changes from that source.\n  We have exactly the same compatibility issues between adjacent ASO releases, so our changes to the generator already have to consider this.\n  We only need to maintain backward compatibility across a small number of versions.\n  Experience Report #  TBC.\nReferences #  TBC.\n"},{"id":11,"href":"/azure-service-operator/contributing/add-a-new-code-generated-resource/","title":"Adding a new code generated resource to ASO v2","section":"For Contributors","content":"Adding a new code generated resource to ASO v2 #  This document discusses how to add a new resource to the ASO v2 code generation configuration. Check out this PR if you\u0026rsquo;d like to see what the end product looks like.\nWhat resources can be code generated? #  Any ARM resource can be generated. There are a few ways to determine if a resource is an ARM resource:\n If the resource is defined in the ARM template JSON schema, or the auto-generated ARM template JSON schema it is an ARM resource. If the resource is defined in a resource-manager folder in the Azure REST API specs repo, it is an ARM resource.  If the resource is not in either of the above places and cannot be deployed via an ARM template, then it\u0026rsquo;s not an ARM resource and currently cannot be code generated.\nDetermine a resource to add #  There are three key pieces of information required before adding a resource to the code generation configuration file, and each of them can be found in the ARM template JSON schema or the auto-generated ARM template JSON schema. To get started, find the entry for the resource in one of the two templates mentioned. For example, the entry for Azure Network Security Groups looks like this: { \u0026quot;$ref\u0026quot;: \u0026quot;https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups\u0026quot; },\nNote: In many cases there will be multiple entries for the same resource, each with a different api-version. It is strongly recommended that you use the latest available non-preview api-version.\n  The name of the resource.\nYou usually know this going in. In our example above, the name of the resource is networkSecurityGroups.\n  The group the resource is in.\nThis is usually named after the Azure service, for example resources or documentdb. In our example entry from above, this is network.\n  The api-version of the resource.\nThis is usually a date, sometimes with a -preview suffix. In our example entry from above, this is 2020-11-01.\n  Adding the resource to the code generation configuration file #  The code generation configuration file is located here. To add a new resource to this file, find the objectModelConfiguration section of the file.\nFind the configuration for the group you want; if it\u0026rsquo;s not there, create a new one, inserting it into the existing list in alphabetical order. Within the group, find the version you want; again, create a new one if it\u0026rsquo;s not already there.\nAdd your new resource to the list for that version, including the directive $export: true nested beneath. The final result should look like this:\n\u0026lt;group\u0026gt;: \u0026lt;version\u0026gt;: \u0026lt;resource name\u0026gt;: # singular, typically just remove the trailing \u0026#34;s\u0026#34; $export: true For example, taking the Azure Network Security Groups sample from above:\nnetwork: 2020-11-01: NetworkSecurityGroup: $export: true If ASO was already configured to generate resources from this group (or version), you will need to add your new configuration around the existing values.\nRun the code generator #  Follow the steps in the contributing guide to set up your development environment. Once you have a working development environment, run the task command to run the code generator.\nFix any errors raised by the code generator #  \u0026lt;Resource\u0026gt; looks like a resource reference but was not labelled as one #  Example:\n Replace cross-resource references with genruntime.ResourceReference: [\u0026ldquo;github.com/Azure/azure-service-operator/hack/generated/_apis/containerservice/v1alpha1api20210501/PrivateLinkResource.Id\u0026rdquo; looks like a resource reference but was not labelled as one.\n To fix this error, determine whether the property in question is an ARM ID or not, and then update the objectModelConfiguration section in the configuration file.\nFind the section you added earlier, adding your property with an $armReference: declaration nested below.\nIf the property is an ARM ID, use $armReference: true to flag that property as a reference:\nnetwork: 2020-11-01: NetworkSecurityGroup: $export: true PrivateLinkResource: $armReference: true # the property IS an ARM reference If the property is not an ARM ID, use $armReference: false instead:\nnetwork: 2020-11-01: NetworkSecurityGroup: $export: true PrivateLinkResource: $armReference: false # the property IS NOT an ARM reference TODO: expand on other common errors\nExamine the generated resource #  After running the generator, the new resource you added should be in the apis directory.\nHave a look through the files in the directory named after the group and version of the resource that was added. In our NetworkSecurityGroups example, the best place to start is /v2/api/network/v1alpha1api20201101/network_security_group_types_gen.go There may be other resources that already exist in that same directory - that\u0026rsquo;s expected if ASO already supported some resources from that provider and API version.\nStarting with the network_security_group_types_gen.go file, find the struct representing the resource you just added. It should be near the top and look something like this:\n// +kubebuilder:object:root=true // +kubebuilder:subresource:status // +kubebuilder:storageversion // +kubebuilder:printcolumn:name=\u0026#34;Ready\u0026#34;,type=\u0026#34;string\u0026#34;,JSONPath=\u0026#34;.status.conditions[?(@.type==\u0026#39;Ready\u0026#39;)].status\u0026#34; // +kubebuilder:printcolumn:name=\u0026#34;Reason\u0026#34;,type=\u0026#34;string\u0026#34;,JSONPath=\u0026#34;.status.conditions[?(@.type==\u0026#39;Ready\u0026#39;)].reason\u0026#34; // +kubebuilder:printcolumn:name=\u0026#34;Message\u0026#34;,type=\u0026#34;string\u0026#34;,JSONPath=\u0026#34;.status.conditions[?(@.type==\u0026#39;Ready\u0026#39;)].message\u0026#34; //Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups type NetworkSecurityGroup struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34;` Spec NetworkSecurityGroups_Spec `json:\u0026#34;spec,omitempty\u0026#34;` Status NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded `json:\u0026#34;status,omitempty\u0026#34;` } Look over the Spec and Status types and their properties (and the properties of their properties and so-on). The Azure REST API specs and ARM template JSON schemas which these types were derived from are not perfect. Sometimes they mark a readonly property as mutable or have another error or mistake.\nCommon issues #  This is a non-exhaustive list of common issues which may need to be fixed in our configuration file.\nProperties that should have been marked read-only but weren\u0026rsquo;t #  There is a section in the config detailing a number of these errors which have been fixed. Look for \u0026ldquo;Deal with properties that should have been marked readOnly but weren\u0026rsquo;t\u0026rdquo;.\nHere\u0026rsquo;s an example, where DocumentDB missed setting the provisioningState property to read-only. We override it in the config:\n- group: documentdb name: Location  # This type is subsequently flattened into NamespacesTopics_Spec property: ProvisioningState remove: true because: This property should have been marked readonly but wasn\u0026#39;t. Determine if the resource has secrets generated by Azure #  Some resources, such as microsoft.storage/accounts and microsoft.documentdb/databaseAccounts, have keys and endpoints generated by Azure. Unfortunately, there is no good way to automatically detect these in the specs which the code generator runs on.\nYou must manually identify if the resource you are adding has keys (or endpoints) which users will want exported to a secret store. If the resource in question does have Azure generated secrets or endpoints, identify those endpoints in the configuration file by specifying $azureGeneratedSecrets.\nOur example resource above does not have any Azure generated secrets. As mentioned above, microsoft.documentdb/databaseAccounts has Azure generated secrets. Here is the snippet from the configuration file showing how they were configured.\ndocumentdb: 2021-05-15: DatabaseAccount: $export: true $azureGeneratedSecrets: - PrimaryMasterKey - SecondaryMasterKey - PrimaryReadonlyMasterKey - SecondaryReadonlyMasterKey - DocumentEndpoint Since these properties are manually configured, they must also be retrieved from Azure manually. This can be done using the extension framework supported by the operator. Use the documentdb secrets extension as a template for authoring an extension for your resource.\nWrite a CRUD test for the resource #  The best way to do this is to start from an existing test and modify it to work for your resource. It can also be helpful to refer to examples in the ARM templates GitHub repo.\nRun the CRUD test for the resource and commit the recording #  See the code generator README for how to run recording tests.\nAdd a new sample #  The samples are located in the samples directory. There should be at least one sample for each kind of supported resource. These currently need to be added manually. It\u0026rsquo;s possible in the future we will automatically generate samples similar to how we automatically generate CRDs and types, but that doesn\u0026rsquo;t happen today.\nSend a PR #  You\u0026rsquo;re all done!\n"},{"id":12,"href":"/azure-service-operator/introduction/annotations/","title":"Annotations understood by the operator","section":"User’s Guide","content":"Annotations understood by the operator #  Annotations specified by the user #  Note that unless otherwise specified, allowed values are case sensitive and should be provided in lower case.\nserviceoperator.azure.com/reconcile-policy #  Specifies the reconcile policy to use. Allowed values are:\n manage: The operator performs all actions as normal. This is the default if no annotation is specified. skip: All modification actions on the backing Azure resource are skipped. GETs are still issued to ensure that the resource exists. If the resource doesn\u0026rsquo;t exist, the Ready condition will show a Warning state with the details of the missing resource until the resource is created. If the resource is deleted in Kubernetes, it is not deleted in Azure. In REST API terminology, PUT and DELETE are skipped while GET is allowed. detach-on-delete: Modifications are pushed to the backing Azure resource, but if the resource is deleted in Kubernetes, it is not deleted in Azure. In REST API terminology, PUT and GET are allowed while DELETE is skipped.  Unknown values default to manage.\nAnnotations written by the operator #  These annotations are written by the operator for its own internal use. Their existence and usage may change in the future. We recommend users avoid depending upon these annotations:\n serviceoperator.azure.com/resource-id: The ARM resource ID. serviceoperator.azure.com/poller-resume-token: JSON encoded token for polling long running operation. serviceoperator.azure.com/poller-resume-id: ID describing the poller to use.  "},{"id":13,"href":"/azure-service-operator/architecture-decision-records/","title":"Architecture Decision Records","section":"Azure Service Operator v2","content":"Architecture Decision Records #  This folder documents some of the architecturally significant decisions we\u0026rsquo;ve made during the Azure Service Operator project.\nFiles are listed chronologically by month, and should contain the following sections:\n Context Decision Status Consequences Experience Report References  For background information, check out this Cognitect blog entry.\nADR documents should be updated over time to keep them relevant.\n"},{"id":14,"href":"/azure-service-operator/introduction/authentication/","title":"Authentication in Azure Service Operator v2","section":"User’s Guide","content":"Authentication in Azure Service Operator v2 #  Azure Service Operator supports two different styles of authentication today.\n Service Principal aad-pod-identity authentication (managed identity)  Service Principal #  Prerequisites #   An existing Azure Service Principal.  To use Service Principal authentication, specify an aso-controller-settings secret with AZURE_CLIENT_ID and AZURE_CLIENT_SECRET set.\n AZURE_CLIENT_ID must be set to the Service Principal client ID. This will be a GUID. AZURE_CLIENT_SECRET must be set to the Service Principal client secret.  For more information about Service Principals, see creating an Azure Service Principal using the Azure CLI. The AZURE_CLIENT_ID is sometimes also called the App ID. The AZURE_CLIENT_SECRET is the \u0026ldquo;password\u0026rdquo; returned by the command in the previously linked documentation.\ncat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: v1 kind: Secret metadata: name: aso-controller-settings namespace: azureserviceoperator-system stringData: AZURE_SUBSCRIPTION_ID: \u0026#34;$AZURE_SUBSCRIPTION_ID\u0026#34; AZURE_TENANT_ID: \u0026#34;$AZURE_TENANT_ID\u0026#34; AZURE_CLIENT_ID: \u0026#34;$AZURE_CLIENT_ID\u0026#34; AZURE_CLIENT_SECRET: \u0026#34;$AZURE_CLIENT_SECRET\u0026#34; EOF Managed Identity (aad-pod-identity) #  Prerequisites #   An existing Azure Managed Identity. aad-pod-identity installed into your cluster. If you are running ASO on an Azure Kubernetes Service (AKS) cluster, you can instead use the integrated aad-pod-identity.  First, set the following environment variables:\nexport IDENTITY_RESOURCE_GROUP=\u0026#34;myrg\u0026#34; # The resource group containing the managed identity. export IDENTITY_NAME=\u0026#34;myidentity\u0026#34; # The name of the identity. export AZURE_SUBSCRIPTION_ID=\u0026#34;00000000-0000-0000-0000-00000000000\u0026#34; # The Azure Subscription ID the identity is in. export AZURE_TENANT_ID=\u0026#34;00000000-0000-0000-0000-00000000000\u0026#34; # The Azure AAD Tenant the identity/subscription is associated with. Use the az cli to get some more details about the identity to use:\nexport IDENTITY_CLIENT_ID=\u0026#34;$(az identity show -g ${IDENTITY_RESOURCE_GROUP} -n ${IDENTITY_NAME} --query clientId -otsv)\u0026#34; export IDENTITY_RESOURCE_ID=\u0026#34;$(az identity show -g ${IDENTITY_RESOURCE_GROUP} -n ${IDENTITY_NAME} --query id -otsv)\u0026#34; Deploy an AzureIdentity:\ncat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: \u0026#34;aadpodidentity.k8s.io/v1\u0026#34; kind: AzureIdentity metadata: name: aso-identity namespace: azureserviceoperator-system spec: type: 0 resourceID: ${IDENTITY_RESOURCE_ID} clientID: ${IDENTITY_CLIENT_ID} EOF Deploy an AzureIdentityBinding to bind this identity to the Azure Service Operator manager pod:\ncat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: \u0026#34;aadpodidentity.k8s.io/v1\u0026#34; kind: AzureIdentityBinding metadata: name: aso-identity-binding namespace: azureserviceoperator-system spec: azureIdentity: aso-identity selector: aso-manager-binding EOF Deploy the aso-controller-settings secret, configured to use the identity:\ncat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: v1 kind: Secret metadata: name: aso-controller-settings namespace: azureserviceoperator-system stringData: AZURE_SUBSCRIPTION_ID: \u0026#34;$AZURE_SUBSCRIPTION_ID\u0026#34; AZURE_TENANT_ID: \u0026#34;$AZURE_TENANT_ID\u0026#34; AZURE_CLIENT_ID: \u0026#34;$IDENTITY_CLIENT_ID\u0026#34; EOF "},{"id":15,"href":"/azure-service-operator/reference/authorization.v1alpha1api20200801preview/","title":"authorization.azure.com/v1alpha1api20200801preview","section":"References","content":"authorization.azure.com/v1alpha1api20200801preview  Package v1alpha1api20200801preview contains API Schema definitions for the authorization v1alpha1api20200801preview API group\n Resource Types:  RoleAssignment   Deprecated version of RoleAssignment. Use v1beta20200801preview.RoleAssignment instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RoleAssignments_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    condition  string        conditionVersion  string        delegatedManagedIdentityResourceId  string        description  string        location  string        owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    principalId  string        principalType  RoleAssignmentPropertiesPrincipalType         roleDefinitionReference  genruntime.ResourceReference         tags  map[string]string           status  RoleAssignment_Status         RoleAssignmentPropertiesARM   (Appears on:RoleAssignments_SpecARM)  Deprecated version of RoleAssignmentProperties. Use v1beta20200801preview.RoleAssignmentProperties instead\n    Field Description      condition  string        conditionVersion  string        delegatedManagedIdentityResourceId  string        description  string        principalId  string        principalType  RoleAssignmentPropertiesPrincipalType         roleDefinitionId  string        RoleAssignmentPropertiesPrincipalType (string alias)  (Appears on:RoleAssignmentPropertiesARM, RoleAssignments_Spec)  Deprecated version of RoleAssignmentPropertiesPrincipalType. Use v1beta20200801preview.RoleAssignmentPropertiesPrincipalType instead\n    Value Description   \u0026#34;ForeignGroup\u0026#34;\n  \u0026#34;Group\u0026#34;\n  \u0026#34;ServicePrincipal\u0026#34;\n  \u0026#34;User\u0026#34;\n    RoleAssignmentPropertiesStatusPrincipalType (string alias)  (Appears on:RoleAssignmentProperties_StatusARM, RoleAssignment_Status)  Deprecated version of RoleAssignmentPropertiesStatusPrincipalType. Use v1beta20200801preview.RoleAssignmentPropertiesStatusPrincipalType instead\n    Value Description   \u0026#34;ForeignGroup\u0026#34;\n  \u0026#34;Group\u0026#34;\n  \u0026#34;ServicePrincipal\u0026#34;\n  \u0026#34;User\u0026#34;\n    RoleAssignmentProperties_StatusARM   (Appears on:RoleAssignment_StatusARM)  Deprecated version of RoleAssignmentProperties_Status. Use v1beta20200801preview.RoleAssignmentProperties_Status instead\n    Field Description      condition  string        conditionVersion  string        createdBy  string        createdOn  string        delegatedManagedIdentityResourceId  string        description  string        principalId  string        principalType  RoleAssignmentPropertiesStatusPrincipalType         roleDefinitionId  string        scope  string        updatedBy  string        updatedOn  string        RoleAssignment_Status   (Appears on:RoleAssignment)  Deprecated version of RoleAssignment_Status. Use v1beta20200801preview.RoleAssignment_Status instead\n    Field Description      condition  string        conditionVersion  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdBy  string        createdOn  string        delegatedManagedIdentityResourceId  string        description  string        id  string        name  string        principalId  string        principalType  RoleAssignmentPropertiesStatusPrincipalType         roleDefinitionId  string        scope  string        type  string        updatedBy  string        updatedOn  string        RoleAssignment_StatusARM   Deprecated version of RoleAssignment_Status. Use v1beta20200801preview.RoleAssignment_Status instead\n    Field Description      id  string        name  string        properties  RoleAssignmentProperties_StatusARM         type  string        RoleAssignments_Spec   (Appears on:RoleAssignment)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    condition  string        conditionVersion  string        delegatedManagedIdentityResourceId  string        description  string        location  string        owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    principalId  string        principalType  RoleAssignmentPropertiesPrincipalType         roleDefinitionReference  genruntime.ResourceReference         tags  map[string]string        RoleAssignments_SpecARM   Deprecated version of RoleAssignments_Spec. Use v1beta20200801preview.RoleAssignments_Spec instead\n    Field Description      location  string        name  string        properties  RoleAssignmentPropertiesARM         tags  map[string]string         "},{"id":16,"href":"/azure-service-operator/reference/authorization.v1beta20200801preview/","title":"authorization.azure.com/v1beta20200801preview","section":"References","content":"authorization.azure.com/v1beta20200801preview  Package v1beta20200801preview contains API Schema definitions for the authorization v1beta20200801preview API group\n Resource Types:  RoleAssignment   Generated from: https://schema.management.azure.com/schemas/2020-08-01-preview/Microsoft.Authorization.Authz.json#/unknown_resourceDefinitions/roleAssignments\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RoleAssignments_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    condition  string    Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \u0026lsquo;foo_storage_container\u0026rsquo;\n    conditionVersion  string    ConditionVersion: Version of the condition. Currently accepted value is \u0026lsquo;2.0\u0026rsquo;\n    delegatedManagedIdentityResourceId  string    DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource\n    description  string    Description: Description of role assignment\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    principalId  string    PrincipalId: The principal ID.\n    principalType  RoleAssignmentPropertiesPrincipalType     PrincipalType: The principal type of the assigned principal ID.\n    roleDefinitionReference  genruntime.ResourceReference     RoleDefinitionReference: The role definition ID.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  RoleAssignment_Status         RoleAssignmentPropertiesARM   (Appears on:RoleAssignments_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-08-01-preview/Microsoft.Authorization.Authz.json#/definitions/RoleAssignmentProperties\n    Field Description      condition  string    Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \u0026lsquo;foo_storage_container\u0026rsquo;\n    conditionVersion  string    ConditionVersion: Version of the condition. Currently accepted value is \u0026lsquo;2.0\u0026rsquo;\n    delegatedManagedIdentityResourceId  string    DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource\n    description  string    Description: Description of role assignment\n    principalId  string    PrincipalId: The principal ID.\n    principalType  RoleAssignmentPropertiesPrincipalType     PrincipalType: The principal type of the assigned principal ID.\n    roleDefinitionId  string        RoleAssignmentPropertiesPrincipalType (string alias)  (Appears on:RoleAssignmentPropertiesARM, RoleAssignments_Spec)      Value Description   \u0026#34;ForeignGroup\u0026#34;\n  \u0026#34;Group\u0026#34;\n  \u0026#34;ServicePrincipal\u0026#34;\n  \u0026#34;User\u0026#34;\n    RoleAssignmentPropertiesStatusPrincipalType (string alias)  (Appears on:RoleAssignmentProperties_StatusARM, RoleAssignment_Status)      Value Description   \u0026#34;ForeignGroup\u0026#34;\n  \u0026#34;Group\u0026#34;\n  \u0026#34;ServicePrincipal\u0026#34;\n  \u0026#34;User\u0026#34;\n    RoleAssignmentProperties_StatusARM   (Appears on:RoleAssignment_StatusARM)      Field Description      condition  string    Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \u0026lsquo;foo_storage_container\u0026rsquo;\n    conditionVersion  string    ConditionVersion: Version of the condition. Currently accepted value is \u0026lsquo;2.0\u0026rsquo;\n    createdBy  string    CreatedBy: Id of the user who created the assignment\n    createdOn  string    CreatedOn: Time it was created\n    delegatedManagedIdentityResourceId  string    DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource\n    description  string    Description: Description of role assignment\n    principalId  string    PrincipalId: The principal ID.\n    principalType  RoleAssignmentPropertiesStatusPrincipalType     PrincipalType: The principal type of the assigned principal ID.\n    roleDefinitionId  string    RoleDefinitionId: The role definition ID.\n    scope  string    Scope: The role assignment scope.\n    updatedBy  string    UpdatedBy: Id of the user who updated the assignment\n    updatedOn  string    UpdatedOn: Time it was updated\n    RoleAssignment_Status   (Appears on:RoleAssignment)      Field Description      condition  string    Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \u0026lsquo;foo_storage_container\u0026rsquo;\n    conditionVersion  string    ConditionVersion: Version of the condition. Currently accepted value is \u0026lsquo;2.0\u0026rsquo;\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdBy  string    CreatedBy: Id of the user who created the assignment\n    createdOn  string    CreatedOn: Time it was created\n    delegatedManagedIdentityResourceId  string    DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource\n    description  string    Description: Description of role assignment\n    id  string    Id: The role assignment ID.\n    name  string    Name: The role assignment name.\n    principalId  string    PrincipalId: The principal ID.\n    principalType  RoleAssignmentPropertiesStatusPrincipalType     PrincipalType: The principal type of the assigned principal ID.\n    roleDefinitionId  string    RoleDefinitionId: The role definition ID.\n    scope  string    Scope: The role assignment scope.\n    type  string    Type: The role assignment type.\n    updatedBy  string    UpdatedBy: Id of the user who updated the assignment\n    updatedOn  string    UpdatedOn: Time it was updated\n    RoleAssignment_StatusARM       Field Description      id  string    Id: The role assignment ID.\n    name  string    Name: The role assignment name.\n    properties  RoleAssignmentProperties_StatusARM     Properties: Role assignment properties.\n    type  string    Type: The role assignment type.\n    RoleAssignmentsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-08-01-preview\u0026#34;\n    RoleAssignments_Spec   (Appears on:RoleAssignment)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    condition  string    Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \u0026lsquo;foo_storage_container\u0026rsquo;\n    conditionVersion  string    ConditionVersion: Version of the condition. Currently accepted value is \u0026lsquo;2.0\u0026rsquo;\n    delegatedManagedIdentityResourceId  string    DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource\n    description  string    Description: Description of role assignment\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    principalId  string    PrincipalId: The principal ID.\n    principalType  RoleAssignmentPropertiesPrincipalType     PrincipalType: The principal type of the assigned principal ID.\n    roleDefinitionReference  genruntime.ResourceReference     RoleDefinitionReference: The role definition ID.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RoleAssignments_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the role assignment. It can be any valid GUID.\n    properties  RoleAssignmentPropertiesARM     Properties: Role assignment properties.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n     "},{"id":17,"href":"/azure-service-operator/design/secrets/","title":"Azure Service Operator support for managing dataplane secrets","section":"Design \u0026 Specifications","content":"Azure Service Operator support for managing dataplane secrets #  What secrets are we talking about? #  The secrets discussed in this document are associated with accessing the data plane of various services.\nThink: Accessing a StorageAccount via Shared Key, accessing a MySQLServer by admin Username and Password, or accessing a VM by SSHKey.\nSometimes these secrets may be used by other CRDs managed by ASO, as would be the case for a MySQLUser CRD, but often the consumers of these secrets are the users applications.\nGoals #  ASO should not be generating secrets on the users behalf #  ASO v1 generated secrets on the users behalf in some cases. The users had access to the generated secret as ASO wrote it into a Kubernetes (or KeyVault) secret.\nThere are problems with this approach:\n It makes performing secret rollover more difficult. If the user had specified the secret, rollover is as easy as modifying the specified secret, which triggers a reconcile, which triggers a PUT to the Azure Resource updating the secret. If the operator generated the secret then the user must somehow issue an instruction to us to perform an action to roll the secret, which doesn\u0026rsquo;t fit as well into the goal-seeking paradigm Kubernetes prefers. It takes control away from the user. What if the secret the operator generates doesn\u0026rsquo;t comply with a particular organizations complexity requirements? It requires that we do a very good job generating cryptographically secure passwords/secrets. This could easily become a can of worms. It hinders adoption of existing resources. If the operator expects to always generate the secret for a SQL DB, but the user wants to import a SQL DB they\u0026rsquo;ve already created through some other mechanism, then they are at an impasse as there is no (easy) way for them to provide ASO with the secret. It doesn\u0026rsquo;t work well with GitOps. A number of customers have expressed the desire to move resources between namespaces. In theory this is easy - just create the exact same resources in a different namespace (pointing at the same Azure resources), mark the old resources as skip-deletion (so that the backing Azure resources are not deleted), and delete the original namespace. If the definition of the secret isn\u0026rsquo;t part of the users GitOps flow this becomes more difficult as the first namespace has the secret (which was created by ASO) and that secret must be cloned manually to the second namespace, otherwise the creation of the resource in the second namespace will attempt to generate a new secret.  We could investigate allowing both automatically generated secrets (the default) and user specified secrets (opt-in). That avenue results in the operator shouldering all of the complexity burden of both though.\nGiven ASO\u0026rsquo;s approach as a low level toolkit providing the ability to create Azure resources, at least at this time we should avoid the added complexity of generating user secrets.\nPrefer Managed Identity #  Managing secrets is hard. We should prefer AAD Authentication and Managed Identity where possible.\nWhat this means in practice is that secrets should not be retrieved unless the user has specifically asked for them to be.\nThis has a number of advantages:\n If the user is using Managed Identity, they don\u0026rsquo;t have a secret leak waiting to happen created in their namespace which they didn\u0026rsquo;t ask about (and might not even know about). We can make a failing ListKeys (or equivalent) call fatal. Many services support ways lock down or forbid access to the ListKeys (or equivalent) API. This allows users to block access if they would like to require AAD authentication with their resource. As long as the operator is not calling those APIs unless asked (in the Spec of the resource) we can make their failure fatal. This gives users an easy way to drive towards full AAD usage in ASO and elsewhere.  We\u0026rsquo;ll dig more into how we might accomplish this a bit later.\nWork well with GitOps #  Resources should strive to play well with GitOps. This means that when a new resource is deployed it is capable of adopting an already existing ARM resource if one exists. This also must apply to secrets. As mentioned above one of the reasons that we do not want to be generating secrets on the users behalf is that it makes redeploy and resource adoption hard because the user has no configuration representing the generated secret.\nKinds of secrets #  There are two main types of secrets we need to consider, differing primarily by the origin of the secret.\nUser provided secrets: Secrets provided by the user at resource creation time.\nAzure generated secrets: Secrets created by Azure, and returned by a special GetMeTheSecrets API call.\nSample resources that have secrets #  Below is a table containing a sampling of resources with secrets that ASO already supports or has a plan to support in the near future.\n   CRD User provided secrets Azure generated secrets AAD/Managed Identity Support Notes     VirtualMachineScaleSet ✔️ ❌ ❌ Username and Password. Can be modified by subsequent PUT.   VirtualMachine ✔️ ❌ ❌ Username and Password. Can be modified by subsequent PUT.   PostgreSQL FlexibleServer ✔️ ❌ ✔️ AdministratorLogin and AdministratorLoginPassword. Must have even if using AAD. Can be modified by subsequent PUT.   MySQL FlexibleServer ✔️ ❌ ✔️ AdministratorLogin and AdministratorLoginPassword. Must have even if using AAD. Can be modified by subsequent PUT.   StorageAccount ❌ ✔️ ✔️ List Keys API and Regenerate Keys API. AAD+RBAC (blob/table only?) Authorizing Access with Active Directory.   CosmosDB DatabaseAccount ❌ ✔️ ✔️ List Keys API, List Read Only Keys and Regenerate Key API. For AAD+RBAC (supported by SQL only?), see Disabling Local Auth, Create Role Assignment API, Create Role Definition API. Built-in Role Definitions.   EventHubAuthorizationRules ❌ ✔️ ❌ List Keys API. There are default authorization rules created, such as RootManageSharedAccessKey. Supports regeneration.   Redis ❌ ✔️ ❌ List Keys API. Regenerate Key API.     Other kinds of secrets in Azure: #  There are a few other types of secrets in Azure in addition to the two main ones discussed above.\n Get once Azure generated secrets: These are secrets created by Azure and only returned once, usually as the response to a POST. These don\u0026rsquo;t fit cleanly into the table above because they are a POST action on a parent resource these are not in fact resources themselves.  Application Insights Component APIKey: This is a POST to the Component/ApiKey URL. KeyVault Key: Create Key API.   \u0026ldquo;Secrets\u0026rdquo; created by Azure, and returned in the GET: In almost all cases (all that I have seen), a secret in Azure is not returned by a GET. \u0026ldquo;Secrets\u0026rdquo; returned in a GET are not really secrets per-se, but ASOv1 classifies them as secrets.  ApplicationInsights InstrumentationKey or ConnectionString? See here.   Short-lived \u0026ldquo;tokens\u0026rdquo;  StorageAccount SAS CosmosDB ResourceToken.    Other Operators #  A quick look at what other operators are doing with regard to secrets.\nCrossplane #  Azure generated secrets: A Connection secret stores information needed to connect to the resource, including keys generated by Azure (see for example Storage Account). This is a standard pattern used across all of the providers.\nThe destination of the writeConnectionSecretToRef is currently always a Kubernetes secret, but there is an open issue requesting pluggable secret stores.\nUser provided secrets seem to be automatically generated by Crossplane.\nAWS Controller for Kubernetes (ACK) #  User provided secrets are provided via a SecretKeyRef. This allows cross-namespace references to a secret. The specific Key of the secret is selected with a Key string parameter.\nIt looks like there may not currently be support for key updates/rollover.\nAWS generated secrets I can\u0026rsquo;t find any examples of. They do not seem to classify \u0026ldquo;endpoints\u0026rdquo; as a secret, as shown by opensearchservice endpoint and cluster endpoint.\nProposal #  User specified secrets #  User specified secrets will be detected and transformed from string to a SecretReference:\ntype SecretReference struct { // Name is the name of the secret. The secret must be in the same namespace as the resource.  Name string // Key is the key in the secret to use.  Key string } Detection will be done with a combination of:\n Additions to ASO\u0026rsquo;s configuration file to flag particular fields as secret (probably in the ObjectModelConfiguration section). Using the \u0026quot;format\u0026quot;: \u0026quot;password\u0026quot; data from Swagger, such as that used by MySQL Flexible Server. Note that not all specs have this, for example VMSS does not. Using the x-ms-secret annotation, which I assume has the same meaning as \u0026quot;format\u0026quot;: \u0026quot;password\u0026quot; although it\u0026rsquo;s not actually exactly documented anywhere.  This is a place where we can push changes upstream to flag things as passwords if they\u0026rsquo;re not being flagged.\nLifecycle #  Since these secrets are created by the user, the user owns the lifecycle of these secrets. They could be using the same secret across many resources, or intending to use this secret on a resource they have not created yet. As such, the lifecycle of these secrets must be controlled by the user.\nRollover will be supported by triggering events on the associated resource when the secret is modified. Since multiple custom resources might be using the same secret, this could trigger reconciles on multiple resources. An existing pattern has been established for this in mysqlserver_controller.go of ASO v1.\nWhen secrets are rolled over, there is a risk that applications using the secret will fail because the secret they are using is no longer valid. We don\u0026rsquo;t need to worry about coordination or timing though. If the user asks us to update the password (by changing it in the Kubernetes secret), we should just do it. We aren\u0026rsquo;t going to be able to guarantee 100% uptime unless the service in question supports multiple keys/passwords/secrets. If the service does support that, we should be able to do what we\u0026rsquo;ve designed here and we will automatically get those same 100% uptime guarantees for the services that support it.\nOpen questions #  Should we support KeyVault inputs?\nKubernetes has a proposal out for unions. In this proposal they suggest using a discriminator field, but allow for either of the shapes proposed above.\nOn the discriminator, they say:\n The value of the discriminator is going to be set automatically by the apiserver when a new field is changed in the union. It will be set to the value of the fields-to-discriminateBy for that specific field. When the value of the discriminator is explicitly changed by the client, it will be interpreted as an intention to clear all the other fields. See section below.\n See more details about what they see the discriminator doing in normalizing on updates.\nSince their proposal suggests that discriminator is optional, and as far as I know it is not supported by kubebuilder yet, I suggest we don\u0026rsquo;t add one for now. In any case it\u0026rsquo;s not totally clear to me that we really need the value that it is adding, and it seems to add a significant amount of update complexity.\nWe need to decide which of the above shapes we like more, and also if we do or do not want a secretType discriminator.\nConclusion: Not needed for v1 of the feature, but we need to have a shape ready that makes sense for when we do.\n... secret: type: Secret # Or KeyVault name: foo key: bar keyVaultReference: # This is the standard Reference type we use elsewhere armId: ... Is an AccountName a secret?\nIf the service is returning it in the resource GET, then strictly speaking it is not a secret. Since the field isn\u0026rsquo;t secret, we will not transform it to be a SecretReference. This is for two reasons:\n We won\u0026rsquo;t be able to automate it, since as far as the OpenAPI specification is concerned it isn\u0026rsquo;t a secret. The primary reason to classify this as a secret would be so that users could then inject the value from their secret into a pod. There is a workaround for this though since the user could (using Kustomize or similar) do this already.  Conclusion: We will not classify these as a secret for inputs unless there\u0026rsquo;s some requirement forcing us to do so.\nDo we allow reading a secret from a namespace where the resource isn\u0026rsquo;t?\nThere were some requests for this in ASOv1, see this for example.\nThis has security implications, so initially at least the answer should be no. See: https://github.com/kubernetes/community/pull/5455.\nConclusion: No\nWhat\u0026rsquo;s the difference between x-ms-secret and format: password?\nUnclear currently. I have a question out to the Swagger team. Current plan is to just treat them the same.\nConclusion: They are not the same, x-ms-secret implies that the secret is not returned in the GET, whereas format: password is just an annotation that as far as we can tell is not actually consumed by anything. For our case, we can treat them the same.\nAzure generated secrets #  Azure generated secrets will be optionally downloaded to a Kubernetes or KeyVault secret. Users instruct the operator to download the secrets associated with a resource by supplying a SecretDestination in the Spec.\nThe optionality of this step is key for preferring managed identity, as it allows those in AAD/Managed identity cases to avoid secrets they don\u0026rsquo;t want/won\u0026rsquo;t use being retrieved into their namespace.\n// Note: This is the same type that is used for specifying references to user created secrets/ // reproduced here for clarity type SecretReference struct { Name string Key string } // Using a different type for the destination as there are some things that are destination specific (such as adding annotations or labels, // which don\u0026#39;t make sense on ) type SecretDestination struct { SecretReference } Example: Explicit secrets w/ Azure Storage (Simple) #  spec: # Other spec fields elided... operatorSpec: secrets: primaryKey: name: my-secret key: PRIMARY_KEY secondaryKey: name: my-secret key: SECONDARY_KEY endpoint: name: my-secret key: ENDPOINT Example: Explicit secrets w/ CosmosDB and multiple secret destinations (Complex) #  Here is what a more complex resource might look like if we also supported KeyVault as a secret type.\nNote: We are not planning to support KeyVault initially.\nspec: # Other spec fields elided... operatorSpec: secrets: primaryKey: type: KeyVault reference: armId: /subscriptions/.../resourceGroups/.../providers/Microsoft.KeyVault/vaults/asokeyvault name: my-primary-key secondaryKey: type: KeyVault reference: armId: /subscriptions/.../resourceGroups/.../providers/Microsoft.KeyVault/vaults/asokeyvault name: my-secondary-key readOnlyPrimaryKey: type: Secret name: my-readonly-secret key: PRIMARY_KEY readOnlySecondaryKey: type: Secret name: my-readonly-secret key: SECONDARY_KEY endpoint: type: Secret name: my-secret key: ENDPOINT Note that some resources (like CosmosDB DatabaseAccount) have multiple kinds of secrets. There might be a PrimaryKey, SecondaryKey, ReadOnlyPrimaryKey, and ReadOnlySecondaryKey. At the very least we need to support putting the main keys and the readonly keys into two different secrets. To accomplish this, we can define multiple logical secret groupings in the ASO config and a corresponding destination property will be created for each of them. You can see this done above in the sample.\nSome fields such as Endpoint (or AccountName for other databases) are not really secret, but should be included in these logical secret groups anyway so that they\u0026rsquo;re easier for users to inject into pods.\nAzure generated secrets are more difficult to automatically detect. Often there is a ListKeys or GetKey API for the resource in question, but nothing on the resource itself indicates that it has secrets automatically generated by Azure. For resources like these we will add a flag in the ASO configuration to generate the appropriate structures in the resource. In the future we can investigate detecting this from the Swagger (probably after we move to Swagger as the single source of truth) by introspecting \u0026ldquo;other API calls\u0026rdquo; on the resource in question.\nHooks required #  In addition to the configuration required to generate types with the right shape, we will also need a way to hook into the reconcile process and actually make the right ListKeys or GetKeys call. To support rollover we would need a different hook as well.\nThis is a relatively involved topic so not designing it all here. As a starting point, resources manually implementing the following interface would get us what we need. Issue #1978 is tracking this request in more detail.\nSee also the design of reconciler extensions.\ntype ARMDetails struct { Endpoint string SubscriptionID string Creds azcore.TokenCredential HttpClient *http.Client } type ReconcileDetails struct { log logr.Logger recorder record.EventRecorder ARMDetails *ARMDetails KubeClient *kubeclient.Client ResourceResolver *genruntime.Resolver PositiveConditions *conditions.PositiveConditionBuilder } type BeforeReconcileOverride interface { // BeforeCreateOrUpdate runs before sending the resource to Azure  BeforeCreateOrUpdate(ctx context.Context, details *ReconcileDetails) (ctrl.Result, error) } type AfterReconcileOverride interface { // AfterCreateOrUpdate runs after the resource has been sent to Azure and finished creating, either successfully or with a fatal error.  // You can determine the current state by examining the Ready condition on obj.  AfterCreateOrUpdate(ctx context.Context, details *ReconcileDetails) (ctrl.Result, error) } Resources with Azure generated secrets would manually implement AfterCreateOrUpdate, which would then:\n Check that the resource is in a Ready state. Cast the provided obj to the expected type. This should be guaranteed safe because the method won\u0026rsquo;t have been called unless its implemented. Check the forOperator section of the spec to determine if any keys should be written. This includes determining the destination secret name and any annotations or other properties that should be written or updated on that secret. Also includes ensuring that the secret in question (if it exists) is owned by the resource in question. Make the required GetKeys or ListKeys call to Azure. Create or update the secret.  Lifecycle #  These are secrets created by the operator (usually after calling some ListKeys type API). Since the these secrets are by definition specific to the resource that created them, their ownership in Kubernetes will be set to the resource that created them. When the owning resource is deleted, the created secret will also be deleted.\nOpen questions #  Should Endpoint/AccountName type \u0026ldquo;secrets\u0026rdquo; really be put into the secret, or no?\nPutting them into the secret makes injecting them into pods easier, which is what people are going to want to do with these values. ASOv1 classifies all of these sorts of things as secrets.\nI think we should put these into the generated secrets\u0026hellip; although this does somewhat conflict with my stance on user specified accountName, etc where I had said to not classify them as secrets.\nConclusion: Yes, we will put them into the secret.\nHow does key rollover work for these types of secrets?\nWe don\u0026rsquo;t support this at all initially. This is a somewhat advanced scenario that doesn\u0026rsquo;t fit well into the Kubernetes resource model anyway because rollover is more of an action and less of an actual resource. The user can roll their secrets using the az cli (or other tooling) and then either wait for a reconcile to occur naturally or force one to refresh the secrets locally in the cluster.\nWhen we do decide to support this, we should be able to do so as a Job-esque resource that runs to completion (and somehow triggers a re-reconcile on the parent resource type).\nConclusion: This will not be supported in the initial implementation.\nHow do deal with soft-delete and purge protection?\nIf we support KeyVault, we have to deal with the soft-delete + purge awkwardness that deleting and recreating brings. Some of this we dodge by giving control to the user and expecting them to provide us with the name of a secret that\u0026rsquo;s going to work. We may also need a flag per-secret (or global at the operator level?) for if we should purge the secret when we delete. Something like purgeOnDelete.\nThe main downside of a global flag controlling the behavior of purge or delete is that it doesn\u0026rsquo;t give fine-grain control, yet we are proposing to give fine-grained control over what vault to put secrets in. This seems like a discrepancy. This seems to suggest we just put this option on every KeyVault reference:\nspec: # Other spec fields elided... operatorSpec: secrets: # Save the read-write keys (and endpoints) into a kubernetes secret called \u0026#34;my-secret\u0026#34; and a KeyVault secret called \u0026#34;my-secret\u0026#34;. keyDestination: keyVault: reference: armId: /subscriptions/.../resourceGroups/.../providers/Microsoft.KeyVault/vaults/asokeyvault name: my-secret purge: false # Optional: defaults to false delete: false # Optional: defaults to true Conclusion: When we add KeyVault support, we will add the option to avoid deletion/purging of secrets.\nHow do we ensure that we aren\u0026rsquo;t overwriting secrets that we don\u0026rsquo;t own?\nThe operator must support updating the secret as keys can change or be rolled over. On the other hand we should present a clear error if the user has accidentally pointed two resources at the same secret. The first resource should be unaffected and work normally while the second resource should encounter a reconcile error stating that the secret in question already exists.\nThis applies to either Kubernetes or KeyVault secrets.\nProposed solution for Kubernetes secrets is to issue a GET and check the Owner field for Kubernetes secrets before issuing an update. resourceVersion should ensure that we\u0026rsquo;re protected from any races where some external entity deletes the secret and another resource creates it between our GET and PUT.\nProposed solution for KeyVault secrets is to label the secret with a key uniquely identifying the operator and resource (GVK + namespace + name) which it corresponds to. The operator will then issue a GET prior to attempting to update the secret to ensure that it owns the secret. Unfortunately, as far as I can tell KeyVault secrets don\u0026rsquo;t support Etag so there\u0026rsquo;s a possible data race here that we can\u0026rsquo;t avoid\u0026hellip;\nConclusion: We will use the above design to ensure we\u0026rsquo;re not overwriting secrets.\nWhat happens when a resource is updated to remove the secrets entry?\nIf a resource is created and given a forOperator.secrets field that instructs it to create a secret, and then is updated to remove this secrets entry, should we delete the secret we previously created? It feels like we should, but when the operator is presented with the updated object during that second reconcile it doesn\u0026rsquo;t know that it ever had a secret.\nSome possible solutions:\n We just don\u0026rsquo;t delete the secrets when you do this and expect users to do it themselves if they want things cleaned up. For k8s secrets, we could probably look through all of the secrets in the resources namespace and see if any of them are owned by us. If there are some and we don\u0026rsquo;t have any forOperator.secrets we delete them. The downside here is that\u0026rsquo;s a lot of overhead to do for all reconciles. This also assumes that the operator has Secret Read permissions in the namespaces in question - which it\u0026rsquo;s possible that it doesn\u0026rsquo;t (it may never have created any secrets and the users may know that it won\u0026rsquo;t and so have denied it permission). This also obviously doesn\u0026rsquo;t work for KeyVault secrets as we have no idea which KeyVault the secrets might even be in. When we create a secret we store information about it in Status or Annotations and then use that information to clean up after ourselves. It\u0026rsquo;s a bit cleaner to store it in Status but technically that can be lost, whereas Annotations won\u0026rsquo;t be. This should work for both KeyVault and k8s secrets and while it\u0026rsquo;s a bit icky I think gives the best experience.  Conclusion: We will do nothing, the secret will remain. If this becomes a problem for users we can add support in the future for an annotation on the resource that says azureGeneratedSecretBehavior: DeleteIfNotSpecified. We feel it\u0026rsquo;s unlikely people are going to complain though, and it errs on the side of caution for deleting secrets that may be critical to the users application operation. Note that secrets WILL be deleted when you delete the actual resource (ex: CosmosDB).\nShould we drop the Destination suffix in the field names?\nFor example, the proposal for CosmosDB DatabaseAccount was:\nspec: # Other spec fields elided... forOperator: operatorSpec: keyDestination: # stuff elided... readOnlyKeyDestination: # stuff elided... Without the Destination suffix that would be:\nspec: # Other spec fields elided... operatorSpec: secrets: key: # stuff elided... readOnlyKey: # stuff elided... Conclusion: Yes, drop it\nDo we allow writing a secret to a namespace where the resource isn\u0026rsquo;t?\nConclusion: No, see: https://github.com/kubernetes/community/pull/5455\nDo we support writing the same secret to multiple destinations?\nInitially we had decided to not support this, and instead just write each secret to a maximum of 1 destination. This has one unfortunate side effect. It\u0026rsquo;s tricky for customers to break apart different \u0026ldquo;parts\u0026rdquo; of the secret, such as the primary and secondary keys, into different secrets as the endpoint can only be written to one of them.\nThere is a workaround for this though: when users want to split their primary/secondary keys into different secrets, they can write the endpoint to its own secret as well:\nspec: # Other spec fields elided... operatorSpec: primaryKey: type: Secret name: my-secret key: PRIMARY_KEY secondaryKey: type: Secret name: my-secret key: SECONDARY_KEY readOnlyPrimaryKey: type: Secret name: my-readonly-secret key: PRIMARY_KEY readOnlySecondaryKey: type: Secret name: my-readonly-secret key: SECONDARY_KEY endpoint: type: Secret name: my-endpoint key: ENDPOINT Then if they want to use the secondary key for a pod they would mount the endpoint and the primary/secondary keys from my-readonly-secret.\nWhile this isn\u0026rsquo;t quite as clean as it could otherwise be by supporting multiple secret destinations for each secret kind (endpoint, readOnlyPrimaryKey, etc) it\u0026rsquo;s simpler to implement and has fewer failure modes as we don\u0026rsquo;t have to deal with the possibility of the user specifying 10 destinations where we wrote some but failed to write others.\nConclusion: No, we will not support this.\nWhat client should we use for issuing the ListKeys/GetKeys request?\nWe don\u0026rsquo;t automatically generate methods for performing these calls. It seems easiest to just use the corresponding Azure SDK for this. This does mean that we\u0026rsquo;re taking a dependency on the SDK where we didn\u0026rsquo;t have one before, but the overall footprint of usage is pretty small and it\u0026rsquo;s going to be easier to do that than it is to write the methods ourselves.\nConclusion: We will use the Azure SDK for this.\nWhat API version should we use for issuing the ListKeys/GetKeys request?\nThere are a few options here. The custom hooks could be applied to either the customer facing resource version or to the internal storage version. Applying the hooks to the storage version is easier, but means that the same hook will be run regardless of which customer\nOther kinds of secrets #  See other kinds of secrets in Azure for examples of each of these types of secrets.\nGet once Azure generated secrets: These are secrets created by Azure and only returned once, usually as the response to a POST.\nThis pattern doesn\u0026rsquo;t seem to be very common. The current plan is to not support resources with this pattern. If we did need to support resources with this pattern there would be no way to avoid violating the work well with GitOps goal, as when deploying this resource there would be no way to adopt secrets associated with it (they\u0026rsquo;re GET-once). That might be ok for particular kinds of resources provided we document it though.\nIf there are large user requests for this sort of secret management we can support it similar to the ListKeys cases except that the resources won\u0026rsquo;t be movable without also cloning the secret.\n\u0026ldquo;Secrets\u0026rdquo; created by Azure, and returned in the GET: This is things like InstrumentationKey, or server endpoint URLs.\nSince these are returned in a GET they are not secret and are already being shown on Status. We will also manually classify some of them to be included in secrets we write. That will include things like endpoint. This means that endpoint for a SQL Server would show up in two places, in the status and possibly in the secret written by the operator (assuming that the user has instructed us to write the endpoint someplace).\nThe main reason for writing this into two places is:\n We already have it in the Status and it doesn\u0026rsquo;t make sense to remove it as it\u0026rsquo;s part of the resource payload from Azure. We want the ability to put it into a Secret so that if users want to inject it into their pods as an environment variable it\u0026rsquo;s easy to do so. There is no good way to inject environment variables from CRD Status\u0026rsquo;s.  Short-lived \u0026ldquo;tokens\u0026rdquo;: Like Storage SAS.\nWe will not support these sorts of secrets.\nA special note on KeyVault #  We have an open issue asking for support to manage KeyVault secrets via ASO.\nWe have to be very careful about support for KeyVault secrets (or certs, keys, etc), as the whole point of KeyVault is as a secure place to store your secrets. If you\u0026rsquo;re instead creating those secrets via the operator then you have by definition also located the secret in Kubernetes, which somewhat defeats the purpose from a security perspective.\nThere might be cases where this makes sense if there are APIs that require a KeyVault secret to be provided to them via ARM ID and so KeyVault isn\u0026rsquo;t the medium of secure storage so much as it is a medium of secret transfer.\nUntil we run into such scenarios we should avoid implementing any of the KeyVault key/secret/certificate/etc APIs.\nIntegrations #  If/when we support storing secrets in KeyVault, we can create some demos showing integration with the KeyVault secret store csi driver.\nSupported secret stores #  P0: Kubernetes Secrets\nP1: KeyVault - this seems more interesting for the \u0026ldquo;secrets from Azure\u0026rdquo; case, since at least right now you cannot create KeyVault secrets through ASO. That limitation means if you wanted to use KeyVault for input secrets you must have already pre-created the secrets before deploying via the operator.\nImplementation plan #  There are effectively two parallel features here:\n Input secrets (reading secrets from a store and supplying those secrets to Azure) Output secrets (reading secrets from Azure and storing them in a secret store)  Input secrets #   SecretReference implementation. Code generator changes to detect format: password or x-ms-secret and transform properties appropriately. Reflector library to generically crawl resources and find secret refs. SecretReader library to get secrets from a collection of SecretReference\u0026rsquo;s. This should be expandable to support KeyVault secret refs in the future if we decide to add them. Should probably look something like this. Note that this related to the SecretWriter below in the output secrets section: // TODO: these strings may need to be []byte // Note: these interfaces are acting on collections only so that they can be more efficient, as multiple SecretReference\u0026#39;s or secret values may be read from or written to // a single secret.  type SecretReader interface { GetSecrets(ctx context.Context, refs []SecretReference) (map[SecretReference]string, error) }  ARM conversion changes to take a ResolvedSecrets parameter in addition to the ResolvedReferences it takes now. This will probably require a bit of fussing with the types passed to the ARM conversion methods and the conversion methods themselves. Reconciler changes to perform secret reading in addition to reference resolving. Testing: Modify existing tests passing secrets in plain text as part of the spec to use the new mechanism instead. [Stretch goal] Support for secret rollover:  Hook to add field indexers for specific resources (see what we\u0026rsquo;re doing for MySQL in ASOv1 today). Hook to control custom additional watches used for monitoring changes to secrets (see what we\u0026rsquo;re doing for MySQL in ASOv1 today).    Output secrets #   operatorSpec/operatorStatus preparatory work. See #1612. Add hooks to controller allowing handcrafted per-resource customization, see #1978. Update azure-arm configuration to allow for additional AzureGeneratedSecret properties to be defined. These properties will be rendered into the operatorSpec as SecretDestination\u0026rsquo;s and subsequently read by the resource specific hooks in order to determine what (if any) ListKeys APIs to call and where to store the results. Implement the SecretWriter interface described below (or something like it). Note that this is related to the SecretReader above in the input secrets section. // TODO: these strings may need to be []byte // Note: these interfaces are acting on collections only so that they can be more efficient, as multiple SecretReference\u0026#39;s or secret values may be read from or written to // a single secret. type DestinationValuePair struct { Value string Destination SecretDestination } type SecretWriter interface { // This will perform ownership checks and return an error if an attempt is made to update a secret that is not owned by the operator  SetSecrets(ctx context.Context, owner MetaObject, secrets []DestinationValuePair) error }  Use customization hooks to implement GetKeys or ListKeys for each applicable resource, utilizing the SecretWriter to write the secrets to their destination.  Testing #  Unit testing #  All of the library code should have unit tests written:\n Reflector to discover SecretReference. SecretReader/SecretWriter  End to end testing #  The existing EnvTest tests can be expanded to test secret management. We will need to make sure that we redact the keys returned by ListKeys. Tests for resources which take secrets will need the secrets created beforehand and passed to the resource (just as the customer would have to do).\nRelated issues #   Secrets created by ASO should have configurable annotations Path to secrets created by ASO should be in the status - maybe not needed if we\u0026rsquo;re making the user tell us where to put it? Secrets deletion should be required as part of resource deletion Add option to create and manage keyvault secrets through ASO  "},{"id":18,"href":"/azure-service-operator/reference/batch.v1alpha1api20210101/","title":"batch.azure.com/v1alpha1api20210101","section":"References","content":"batch.azure.com/v1alpha1api20210101  Package v1alpha1api20210101 contains API Schema definitions for the batch v1alpha1api20210101 API group\n Resource Types:  AutoStorageBaseProperties   (Appears on:BatchAccounts_Spec)  Deprecated version of AutoStorageBaseProperties. Use v1beta20210101.AutoStorageBaseProperties instead\n    Field Description      storageAccountReference  genruntime.ResourceReference         AutoStorageBasePropertiesARM   (Appears on:BatchAccountCreatePropertiesARM)  Deprecated version of AutoStorageBaseProperties. Use v1beta20210101.AutoStorageBaseProperties instead\n    Field Description      storageAccountId  string        AutoStorageProperties_Status   (Appears on:BatchAccount_Status)  Deprecated version of AutoStorageProperties_Status. Use v1beta20210101.AutoStorageProperties_Status instead\n    Field Description      lastKeySync  string        storageAccountId  string        AutoStorageProperties_StatusARM   (Appears on:BatchAccountProperties_StatusARM)  Deprecated version of AutoStorageProperties_Status. Use v1beta20210101.AutoStorageProperties_Status instead\n    Field Description      lastKeySync  string        storageAccountId  string        BatchAccount   Deprecated version of BatchAccount. Use v1beta20210101.BatchAccount instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  BatchAccounts_Spec          autoStorage  AutoStorageBaseProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  EncryptionProperties         identity  BatchAccountIdentity         keyVaultReference  KeyVaultReference         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode         publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess         tags  map[string]string           status  BatchAccount_Status         BatchAccountCreatePropertiesARM   (Appears on:BatchAccounts_SpecARM)  Deprecated version of BatchAccountCreateProperties. Use v1beta20210101.BatchAccountCreateProperties instead\n    Field Description      autoStorage  AutoStorageBasePropertiesARM         encryption  EncryptionPropertiesARM         keyVaultReference  KeyVaultReferenceARM         poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode         publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess         BatchAccountCreatePropertiesPoolAllocationMode (string alias)  (Appears on:BatchAccountCreatePropertiesARM, BatchAccounts_Spec)  Deprecated version of BatchAccountCreatePropertiesPoolAllocationMode. Use v1beta20210101.BatchAccountCreatePropertiesPoolAllocationMode instead\n    Value Description   \u0026#34;BatchService\u0026#34;\n  \u0026#34;UserSubscription\u0026#34;\n    BatchAccountCreatePropertiesPublicNetworkAccess (string alias)  (Appears on:BatchAccountCreatePropertiesARM, BatchAccounts_Spec)  Deprecated version of BatchAccountCreatePropertiesPublicNetworkAccess. Use v1beta20210101.BatchAccountCreatePropertiesPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    BatchAccountIdentity   (Appears on:BatchAccounts_Spec)  Deprecated version of BatchAccountIdentity. Use v1beta20210101.BatchAccountIdentity instead\n    Field Description      type  BatchAccountIdentityType         BatchAccountIdentityARM   (Appears on:BatchAccounts_SpecARM)  Deprecated version of BatchAccountIdentity. Use v1beta20210101.BatchAccountIdentity instead\n    Field Description      type  BatchAccountIdentityType         BatchAccountIdentityStatusType (string alias)  (Appears on:BatchAccountIdentity_Status, BatchAccountIdentity_StatusARM)  Deprecated version of BatchAccountIdentityStatusType. Use v1beta20210101.BatchAccountIdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    BatchAccountIdentityType (string alias)  (Appears on:BatchAccountIdentity, BatchAccountIdentityARM)  Deprecated version of BatchAccountIdentityType. Use v1beta20210101.BatchAccountIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    BatchAccountIdentity_Status   (Appears on:BatchAccount_Status)  Deprecated version of BatchAccountIdentity_Status. Use v1beta20210101.BatchAccountIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  BatchAccountIdentityStatusType         userAssignedIdentities  map[string]./api/batch/v1alpha1api20210101.BatchAccountIdentity_Status_UserAssignedIdentities         BatchAccountIdentity_StatusARM   (Appears on:BatchAccount_StatusARM)  Deprecated version of BatchAccountIdentity_Status. Use v1beta20210101.BatchAccountIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  BatchAccountIdentityStatusType         userAssignedIdentities  map[string]./api/batch/v1alpha1api20210101.BatchAccountIdentity_Status_UserAssignedIdentitiesARM         BatchAccountIdentity_Status_UserAssignedIdentities   (Appears on:BatchAccountIdentity_Status)  Deprecated version of BatchAccountIdentity_Status_UserAssignedIdentities. Use v1beta20210101.BatchAccountIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        BatchAccountIdentity_Status_UserAssignedIdentitiesARM   (Appears on:BatchAccountIdentity_StatusARM)  Deprecated version of BatchAccountIdentity_Status_UserAssignedIdentities. Use v1beta20210101.BatchAccountIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        BatchAccountPropertiesStatusProvisioningState (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)  Deprecated version of BatchAccountPropertiesStatusProvisioningState. Use v1beta20210101.BatchAccountPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Cancelled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Invalid\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    BatchAccountProperties_StatusARM   (Appears on:BatchAccount_StatusARM)  Deprecated version of BatchAccountProperties_Status. Use v1beta20210101.BatchAccountProperties_Status instead\n    Field Description      accountEndpoint  string        activeJobAndJobScheduleQuota  int        autoStorage  AutoStorageProperties_StatusARM         dedicatedCoreQuota  int        dedicatedCoreQuotaPerVMFamily  []VirtualMachineFamilyCoreQuota_StatusARM         dedicatedCoreQuotaPerVMFamilyEnforced  bool        encryption  EncryptionProperties_StatusARM         keyVaultReference  KeyVaultReference_StatusARM         lowPriorityCoreQuota  int        poolAllocationMode  PoolAllocationMode_Status         poolQuota  int        privateEndpointConnections  []PrivateEndpointConnection_StatusARM         provisioningState  BatchAccountPropertiesStatusProvisioningState         publicNetworkAccess  PublicNetworkAccessType_Status         BatchAccount_Status   (Appears on:BatchAccount)  Deprecated version of BatchAccount_Status. Use v1beta20210101.BatchAccount_Status instead\n    Field Description      accountEndpoint  string        activeJobAndJobScheduleQuota  int        autoStorage  AutoStorageProperties_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dedicatedCoreQuota  int        dedicatedCoreQuotaPerVMFamily  []VirtualMachineFamilyCoreQuota_Status         dedicatedCoreQuotaPerVMFamilyEnforced  bool        encryption  EncryptionProperties_Status         id  string        identity  BatchAccountIdentity_Status         keyVaultReference  KeyVaultReference_Status         location  string        lowPriorityCoreQuota  int        name  string        poolAllocationMode  PoolAllocationMode_Status         poolQuota  int        privateEndpointConnections  []PrivateEndpointConnection_Status         provisioningState  BatchAccountPropertiesStatusProvisioningState         publicNetworkAccess  PublicNetworkAccessType_Status         tags  map[string]string        type  string        BatchAccount_StatusARM   Deprecated version of BatchAccount_Status. Use v1beta20210101.BatchAccount_Status instead\n    Field Description      id  string        identity  BatchAccountIdentity_StatusARM         location  string        name  string        properties  BatchAccountProperties_StatusARM         tags  map[string]string        type  string        BatchAccounts_Spec   (Appears on:BatchAccount)      Field Description      autoStorage  AutoStorageBaseProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  EncryptionProperties         identity  BatchAccountIdentity         keyVaultReference  KeyVaultReference         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode         publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess         tags  map[string]string        BatchAccounts_SpecARM   Deprecated version of BatchAccounts_Spec. Use v1beta20210101.BatchAccounts_Spec instead\n    Field Description      identity  BatchAccountIdentityARM         location  string        name  string        properties  BatchAccountCreatePropertiesARM         tags  map[string]string        EncryptionProperties   (Appears on:BatchAccounts_Spec)  Deprecated version of EncryptionProperties. Use v1beta20210101.EncryptionProperties instead\n    Field Description      keySource  EncryptionPropertiesKeySource         keyVaultProperties  KeyVaultProperties         EncryptionPropertiesARM   (Appears on:BatchAccountCreatePropertiesARM)  Deprecated version of EncryptionProperties. Use v1beta20210101.EncryptionProperties instead\n    Field Description      keySource  EncryptionPropertiesKeySource         keyVaultProperties  KeyVaultPropertiesARM         EncryptionPropertiesKeySource (string alias)  (Appears on:EncryptionProperties, EncryptionPropertiesARM)  Deprecated version of EncryptionPropertiesKeySource. Use v1beta20210101.EncryptionPropertiesKeySource instead\n    Value Description   \u0026#34;Microsoft.Batch\u0026#34;\n  \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionPropertiesStatusKeySource (string alias)  (Appears on:EncryptionProperties_Status, EncryptionProperties_StatusARM)  Deprecated version of EncryptionPropertiesStatusKeySource. Use v1beta20210101.EncryptionPropertiesStatusKeySource instead\n    Value Description   \u0026#34;Microsoft.Batch\u0026#34;\n  \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionProperties_Status   (Appears on:BatchAccount_Status)  Deprecated version of EncryptionProperties_Status. Use v1beta20210101.EncryptionProperties_Status instead\n    Field Description      keySource  EncryptionPropertiesStatusKeySource         keyVaultProperties  KeyVaultProperties_Status         EncryptionProperties_StatusARM   (Appears on:BatchAccountProperties_StatusARM)  Deprecated version of EncryptionProperties_Status. Use v1beta20210101.EncryptionProperties_Status instead\n    Field Description      keySource  EncryptionPropertiesStatusKeySource         keyVaultProperties  KeyVaultProperties_StatusARM         KeyVaultProperties   (Appears on:EncryptionProperties)  Deprecated version of KeyVaultProperties. Use v1beta20210101.KeyVaultProperties instead\n    Field Description      keyIdentifier  string        KeyVaultPropertiesARM   (Appears on:EncryptionPropertiesARM)  Deprecated version of KeyVaultProperties. Use v1beta20210101.KeyVaultProperties instead\n    Field Description      keyIdentifier  string        KeyVaultProperties_Status   (Appears on:EncryptionProperties_Status)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210101.KeyVaultProperties_Status instead\n    Field Description      keyIdentifier  string        KeyVaultProperties_StatusARM   (Appears on:EncryptionProperties_StatusARM)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210101.KeyVaultProperties_Status instead\n    Field Description      keyIdentifier  string        KeyVaultReference   (Appears on:BatchAccounts_Spec)  Deprecated version of KeyVaultReference. Use v1beta20210101.KeyVaultReference instead\n    Field Description      reference  genruntime.ResourceReference         url  string        KeyVaultReferenceARM   (Appears on:BatchAccountCreatePropertiesARM)  Deprecated version of KeyVaultReference. Use v1beta20210101.KeyVaultReference instead\n    Field Description      id  string        url  string        KeyVaultReference_Status   (Appears on:BatchAccount_Status)  Deprecated version of KeyVaultReference_Status. Use v1beta20210101.KeyVaultReference_Status instead\n    Field Description      id  string        url  string        KeyVaultReference_StatusARM   (Appears on:BatchAccountProperties_StatusARM)  Deprecated version of KeyVaultReference_Status. Use v1beta20210101.KeyVaultReference_Status instead\n    Field Description      id  string        url  string        PoolAllocationMode_Status (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)  Deprecated version of PoolAllocationMode_Status. Use v1beta20210101.PoolAllocationMode_Status instead\n    Value Description   \u0026#34;BatchService\u0026#34;\n  \u0026#34;UserSubscription\u0026#34;\n    PrivateEndpointConnectionPropertiesStatusProvisioningState (string alias)  (Appears on:PrivateEndpointConnectionProperties_StatusARM, PrivateEndpointConnection_Status)  Deprecated version of PrivateEndpointConnectionPropertiesStatusProvisioningState. Use v1beta20210101.PrivateEndpointConnectionPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    PrivateEndpointConnectionProperties_StatusARM   (Appears on:PrivateEndpointConnection_StatusARM)  Deprecated version of PrivateEndpointConnectionProperties_Status. Use v1beta20210101.PrivateEndpointConnectionProperties_Status instead\n    Field Description      privateEndpoint  PrivateEndpoint_StatusARM         privateLinkServiceConnectionState  PrivateLinkServiceConnectionState_StatusARM         provisioningState  PrivateEndpointConnectionPropertiesStatusProvisioningState         PrivateEndpointConnection_Status   (Appears on:BatchAccount_Status)  Deprecated version of PrivateEndpointConnection_Status. Use v1beta20210101.PrivateEndpointConnection_Status instead\n    Field Description      etag  string        id  string        name  string        privateEndpoint  PrivateEndpoint_Status         privateLinkServiceConnectionState  PrivateLinkServiceConnectionState_Status         provisioningState  PrivateEndpointConnectionPropertiesStatusProvisioningState         type  string        PrivateEndpointConnection_StatusARM   (Appears on:BatchAccountProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status. Use v1beta20210101.PrivateEndpointConnection_Status instead\n    Field Description      etag  string        id  string        name  string        properties  PrivateEndpointConnectionProperties_StatusARM         type  string        PrivateEndpoint_Status   (Appears on:PrivateEndpointConnection_Status)  Deprecated version of PrivateEndpoint_Status. Use v1beta20210101.PrivateEndpoint_Status instead\n    Field Description      id  string        PrivateEndpoint_StatusARM   (Appears on:PrivateEndpointConnectionProperties_StatusARM)  Deprecated version of PrivateEndpoint_Status. Use v1beta20210101.PrivateEndpoint_Status instead\n    Field Description      id  string        PrivateLinkServiceConnectionState_Status   (Appears on:PrivateEndpointConnection_Status)  Deprecated version of PrivateLinkServiceConnectionState_Status. Use v1beta20210101.PrivateLinkServiceConnectionState_Status instead\n    Field Description      actionRequired  string        description  string        status  PrivateLinkServiceConnectionStatus_Status         PrivateLinkServiceConnectionState_StatusARM   (Appears on:PrivateEndpointConnectionProperties_StatusARM)  Deprecated version of PrivateLinkServiceConnectionState_Status. Use v1beta20210101.PrivateLinkServiceConnectionState_Status instead\n    Field Description      actionRequired  string        description  string        status  PrivateLinkServiceConnectionStatus_Status         PrivateLinkServiceConnectionStatus_Status (string alias)  (Appears on:PrivateLinkServiceConnectionState_Status, PrivateLinkServiceConnectionState_StatusARM)  Deprecated version of PrivateLinkServiceConnectionStatus_Status. Use v1beta20210101.PrivateLinkServiceConnectionStatus_Status instead\n    Value Description   \u0026#34;Approved\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Pending\u0026#34;\n  \u0026#34;Rejected\u0026#34;\n    PublicNetworkAccessType_Status (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)  Deprecated version of PublicNetworkAccessType_Status. Use v1beta20210101.PublicNetworkAccessType_Status instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    VirtualMachineFamilyCoreQuota_Status   (Appears on:BatchAccount_Status)  Deprecated version of VirtualMachineFamilyCoreQuota_Status. Use v1beta20210101.VirtualMachineFamilyCoreQuota_Status instead\n    Field Description      coreQuota  int        name  string        VirtualMachineFamilyCoreQuota_StatusARM   (Appears on:BatchAccountProperties_StatusARM)  Deprecated version of VirtualMachineFamilyCoreQuota_Status. Use v1beta20210101.VirtualMachineFamilyCoreQuota_Status instead\n    Field Description      coreQuota  int        name  string         "},{"id":19,"href":"/azure-service-operator/reference/batch.v1beta20210101/","title":"batch.azure.com/v1beta20210101","section":"References","content":"batch.azure.com/v1beta20210101  Package v1beta20210101 contains API Schema definitions for the batch v1beta20210101 API group\n Resource Types:  AutoStorageBaseProperties   (Appears on:BatchAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/AutoStorageBaseProperties\n    Field Description      storageAccountReference  genruntime.ResourceReference     StorageAccountReference: The resource ID of the storage account to be used for auto-storage account.\n    AutoStorageBasePropertiesARM   (Appears on:BatchAccountCreatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/AutoStorageBaseProperties\n    Field Description      storageAccountId  string        AutoStorageProperties_Status   (Appears on:BatchAccount_Status)      Field Description      lastKeySync  string    LastKeySync: The UTC time at which storage keys were last synchronized with the Batch account.\n    storageAccountId  string    StorageAccountId: The resource ID of the storage account to be used for auto-storage account.\n    AutoStorageProperties_StatusARM   (Appears on:BatchAccountProperties_StatusARM)      Field Description      lastKeySync  string    LastKeySync: The UTC time at which storage keys were last synchronized with the Batch account.\n    storageAccountId  string    StorageAccountId: The resource ID of the storage account to be used for auto-storage account.\n    BatchAccount   Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/resourceDefinitions/batchAccounts\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  BatchAccounts_Spec          autoStorage  AutoStorageBaseProperties     AutoStorage: The properties related to the auto-storage account.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  EncryptionProperties     Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.\n    identity  BatchAccountIdentity     Identity: The identity of the Batch account, if configured. This is only used when the user specifies \u0026lsquo;Microsoft.KeyVault\u0026rsquo; as their Batch account encryption configuration.\n    keyVaultReference  KeyVaultReference     KeyVaultReference: Identifies the Azure key vault associated with a Batch account.\n    location  string    Location: The region in which to create the account.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode     PoolAllocationMode: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.\n    publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: If not specified, the default value is \u0026lsquo;enabled\u0026rsquo;.\n    tags  map[string]string    Tags: The user-specified tags associated with the account.\n       status  BatchAccount_Status         BatchAccountCreatePropertiesARM   (Appears on:BatchAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/BatchAccountCreateProperties\n    Field Description      autoStorage  AutoStorageBasePropertiesARM     AutoStorage: The properties related to the auto-storage account.\n    encryption  EncryptionPropertiesARM     Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.\n    keyVaultReference  KeyVaultReferenceARM     KeyVaultReference: Identifies the Azure key vault associated with a Batch account.\n    poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode     PoolAllocationMode: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.\n    publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: If not specified, the default value is \u0026lsquo;enabled\u0026rsquo;.\n    BatchAccountCreatePropertiesPoolAllocationMode (string alias)  (Appears on:BatchAccountCreatePropertiesARM, BatchAccounts_Spec)      Value Description   \u0026#34;BatchService\u0026#34;\n  \u0026#34;UserSubscription\u0026#34;\n    BatchAccountCreatePropertiesPublicNetworkAccess (string alias)  (Appears on:BatchAccountCreatePropertiesARM, BatchAccounts_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    BatchAccountIdentity   (Appears on:BatchAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/BatchAccountIdentity\n    Field Description      type  BatchAccountIdentityType     Type: The type of identity used for the Batch account.\n    BatchAccountIdentityARM   (Appears on:BatchAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/BatchAccountIdentity\n    Field Description      type  BatchAccountIdentityType     Type: The type of identity used for the Batch account.\n    BatchAccountIdentityStatusType (string alias)  (Appears on:BatchAccountIdentity_Status, BatchAccountIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    BatchAccountIdentityType (string alias)  (Appears on:BatchAccountIdentity, BatchAccountIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    BatchAccountIdentity_Status   (Appears on:BatchAccount_Status)      Field Description      principalId  string    PrincipalId: The principal id of the Batch account. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.\n    type  BatchAccountIdentityStatusType     Type: The type of identity used for the Batch account.\n    userAssignedIdentities  map[string]./api/batch/v1beta20210101.BatchAccountIdentity_Status_UserAssignedIdentities     UserAssignedIdentities: The list of user identities associated with the Batch account. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    BatchAccountIdentity_StatusARM   (Appears on:BatchAccount_StatusARM)      Field Description      principalId  string    PrincipalId: The principal id of the Batch account. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.\n    type  BatchAccountIdentityStatusType     Type: The type of identity used for the Batch account.\n    userAssignedIdentities  map[string]./api/batch/v1beta20210101.BatchAccountIdentity_Status_UserAssignedIdentitiesARM     UserAssignedIdentities: The list of user identities associated with the Batch account. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    BatchAccountIdentity_Status_UserAssignedIdentities   (Appears on:BatchAccountIdentity_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    BatchAccountIdentity_Status_UserAssignedIdentitiesARM   (Appears on:BatchAccountIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    BatchAccountPropertiesStatusProvisioningState (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)      Value Description   \u0026#34;Cancelled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Invalid\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    BatchAccountProperties_StatusARM   (Appears on:BatchAccount_StatusARM)      Field Description      accountEndpoint  string    AccountEndpoint: The account endpoint used to interact with the Batch service.\n    activeJobAndJobScheduleQuota  int        autoStorage  AutoStorageProperties_StatusARM         dedicatedCoreQuota  int    DedicatedCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    dedicatedCoreQuotaPerVMFamily  []VirtualMachineFamilyCoreQuota_StatusARM     DedicatedCoreQuotaPerVMFamily: A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    dedicatedCoreQuotaPerVMFamilyEnforced  bool    DedicatedCoreQuotaPerVMFamilyEnforced: Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.\n    encryption  EncryptionProperties_StatusARM     Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.\n    keyVaultReference  KeyVaultReference_StatusARM         lowPriorityCoreQuota  int    LowPriorityCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    poolAllocationMode  PoolAllocationMode_Status         poolQuota  int        privateEndpointConnections  []PrivateEndpointConnection_StatusARM     PrivateEndpointConnections: List of private endpoint connections associated with the Batch account\n    provisioningState  BatchAccountPropertiesStatusProvisioningState     ProvisioningState: The provisioned state of the resource\n    publicNetworkAccess  PublicNetworkAccessType_Status     PublicNetworkAccess: If not specified, the default value is \u0026lsquo;enabled\u0026rsquo;.\n    BatchAccount_Status   (Appears on:BatchAccount)      Field Description      accountEndpoint  string    AccountEndpoint: The account endpoint used to interact with the Batch service.\n    activeJobAndJobScheduleQuota  int        autoStorage  AutoStorageProperties_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dedicatedCoreQuota  int    DedicatedCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    dedicatedCoreQuotaPerVMFamily  []VirtualMachineFamilyCoreQuota_Status     DedicatedCoreQuotaPerVMFamily: A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    dedicatedCoreQuotaPerVMFamilyEnforced  bool    DedicatedCoreQuotaPerVMFamilyEnforced: Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.\n    encryption  EncryptionProperties_Status     Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.\n    id  string    Id: The ID of the resource.\n    identity  BatchAccountIdentity_Status     Identity: The identity of the Batch account.\n    keyVaultReference  KeyVaultReference_Status         location  string    Location: The location of the resource.\n    lowPriorityCoreQuota  int    LowPriorityCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.\n    name  string    Name: The name of the resource.\n    poolAllocationMode  PoolAllocationMode_Status         poolQuota  int        privateEndpointConnections  []PrivateEndpointConnection_Status     PrivateEndpointConnections: List of private endpoint connections associated with the Batch account\n    provisioningState  BatchAccountPropertiesStatusProvisioningState     ProvisioningState: The provisioned state of the resource\n    publicNetworkAccess  PublicNetworkAccessType_Status     PublicNetworkAccess: If not specified, the default value is \u0026lsquo;enabled\u0026rsquo;.\n    tags  map[string]string    Tags: The tags of the resource.\n    type  string    Type: The type of the resource.\n    BatchAccount_StatusARM       Field Description      id  string    Id: The ID of the resource.\n    identity  BatchAccountIdentity_StatusARM     Identity: The identity of the Batch account.\n    location  string    Location: The location of the resource.\n    name  string    Name: The name of the resource.\n    properties  BatchAccountProperties_StatusARM     Properties: The properties associated with the account.\n    tags  map[string]string    Tags: The tags of the resource.\n    type  string    Type: The type of the resource.\n    BatchAccountsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-01-01\u0026#34;\n    BatchAccounts_Spec   (Appears on:BatchAccount)      Field Description      autoStorage  AutoStorageBaseProperties     AutoStorage: The properties related to the auto-storage account.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  EncryptionProperties     Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.\n    identity  BatchAccountIdentity     Identity: The identity of the Batch account, if configured. This is only used when the user specifies \u0026lsquo;Microsoft.KeyVault\u0026rsquo; as their Batch account encryption configuration.\n    keyVaultReference  KeyVaultReference     KeyVaultReference: Identifies the Azure key vault associated with a Batch account.\n    location  string    Location: The region in which to create the account.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    poolAllocationMode  BatchAccountCreatePropertiesPoolAllocationMode     PoolAllocationMode: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.\n    publicNetworkAccess  BatchAccountCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: If not specified, the default value is \u0026lsquo;enabled\u0026rsquo;.\n    tags  map[string]string    Tags: The user-specified tags associated with the account.\n    BatchAccounts_SpecARM       Field Description      identity  BatchAccountIdentityARM     Identity: The identity of the Batch account, if configured. This is only used when the user specifies \u0026lsquo;Microsoft.KeyVault\u0026rsquo; as their Batch account encryption configuration.\n    location  string    Location: The region in which to create the account.\n    name  string    Name: A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.\n    properties  BatchAccountCreatePropertiesARM     Properties: The properties of a Batch account.\n    tags  map[string]string    Tags: The user-specified tags associated with the account.\n    EncryptionProperties   (Appears on:BatchAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/EncryptionProperties\n    Field Description      keySource  EncryptionPropertiesKeySource     KeySource: Type of the key source.\n    keyVaultProperties  KeyVaultProperties     KeyVaultProperties: KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.\n    EncryptionPropertiesARM   (Appears on:BatchAccountCreatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/EncryptionProperties\n    Field Description      keySource  EncryptionPropertiesKeySource     KeySource: Type of the key source.\n    keyVaultProperties  KeyVaultPropertiesARM     KeyVaultProperties: KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.\n    EncryptionPropertiesKeySource (string alias)  (Appears on:EncryptionProperties, EncryptionPropertiesARM)      Value Description   \u0026#34;Microsoft.Batch\u0026#34;\n  \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionPropertiesStatusKeySource (string alias)  (Appears on:EncryptionProperties_Status, EncryptionProperties_StatusARM)      Value Description   \u0026#34;Microsoft.Batch\u0026#34;\n  \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionProperties_Status   (Appears on:BatchAccount_Status)      Field Description      keySource  EncryptionPropertiesStatusKeySource     KeySource: Type of the key source.\n    keyVaultProperties  KeyVaultProperties_Status     KeyVaultProperties: Additional details when using Microsoft.KeyVault\n    EncryptionProperties_StatusARM   (Appears on:BatchAccountProperties_StatusARM)      Field Description      keySource  EncryptionPropertiesStatusKeySource     KeySource: Type of the key source.\n    keyVaultProperties  KeyVaultProperties_StatusARM     KeyVaultProperties: Additional details when using Microsoft.KeyVault\n    KeyVaultProperties   (Appears on:EncryptionProperties)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/KeyVaultProperties\n    Field Description      keyIdentifier  string    KeyIdentifier: Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met: The Batch Account has a System Assigned identity The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions The KeyVault has soft-delete and purge protection enabled\n    KeyVaultPropertiesARM   (Appears on:EncryptionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/KeyVaultProperties\n    Field Description      keyIdentifier  string    KeyIdentifier: Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met: The Batch Account has a System Assigned identity The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions The KeyVault has soft-delete and purge protection enabled\n    KeyVaultProperties_Status   (Appears on:EncryptionProperties_Status)      Field Description      keyIdentifier  string    KeyIdentifier: Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met: The Batch Account has a System Assigned identity The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions The KeyVault has soft-delete and purge protection enabled\n    KeyVaultProperties_StatusARM   (Appears on:EncryptionProperties_StatusARM)      Field Description      keyIdentifier  string    KeyIdentifier: Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met: The Batch Account has a System Assigned identity The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions The KeyVault has soft-delete and purge protection enabled\n    KeyVaultReference   (Appears on:BatchAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/KeyVaultReference\n    Field Description      reference  genruntime.ResourceReference     Reference: The resource ID of the Azure key vault associated with the Batch account.\n    url  string    Url: The URL of the Azure key vault associated with the Batch account.\n    KeyVaultReferenceARM   (Appears on:BatchAccountCreatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01/Microsoft.Batch.json#/definitions/KeyVaultReference\n    Field Description      id  string        url  string    Url: The URL of the Azure key vault associated with the Batch account.\n    KeyVaultReference_Status   (Appears on:BatchAccount_Status)      Field Description      id  string    Id: The resource ID of the Azure key vault associated with the Batch account.\n    url  string    Url: The URL of the Azure key vault associated with the Batch account.\n    KeyVaultReference_StatusARM   (Appears on:BatchAccountProperties_StatusARM)      Field Description      id  string    Id: The resource ID of the Azure key vault associated with the Batch account.\n    url  string    Url: The URL of the Azure key vault associated with the Batch account.\n    PoolAllocationMode_Status (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)      Value Description   \u0026#34;BatchService\u0026#34;\n  \u0026#34;UserSubscription\u0026#34;\n    PrivateEndpointConnectionPropertiesStatusProvisioningState (string alias)  (Appears on:PrivateEndpointConnectionProperties_StatusARM, PrivateEndpointConnection_Status)      Value Description   \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    PrivateEndpointConnectionProperties_StatusARM   (Appears on:PrivateEndpointConnection_StatusARM)      Field Description      privateEndpoint  PrivateEndpoint_StatusARM         privateLinkServiceConnectionState  PrivateLinkServiceConnectionState_StatusARM         provisioningState  PrivateEndpointConnectionPropertiesStatusProvisioningState         PrivateEndpointConnection_Status   (Appears on:BatchAccount_Status)      Field Description      etag  string    Etag: The ETag of the resource, used for concurrency statements.\n    id  string    Id: The ID of the resource.\n    name  string    Name: The name of the resource.\n    privateEndpoint  PrivateEndpoint_Status         privateLinkServiceConnectionState  PrivateLinkServiceConnectionState_Status         provisioningState  PrivateEndpointConnectionPropertiesStatusProvisioningState         type  string    Type: The type of the resource.\n    PrivateEndpointConnection_StatusARM   (Appears on:BatchAccountProperties_StatusARM)      Field Description      etag  string    Etag: The ETag of the resource, used for concurrency statements.\n    id  string    Id: The ID of the resource.\n    name  string    Name: The name of the resource.\n    properties  PrivateEndpointConnectionProperties_StatusARM     Properties: The properties associated with the private endpoint connection.\n    type  string    Type: The type of the resource.\n    PrivateEndpoint_Status   (Appears on:PrivateEndpointConnection_Status)      Field Description      id  string        PrivateEndpoint_StatusARM   (Appears on:PrivateEndpointConnectionProperties_StatusARM)      Field Description      id  string        PrivateLinkServiceConnectionState_Status   (Appears on:PrivateEndpointConnection_Status)      Field Description      actionRequired  string        description  string        status  PrivateLinkServiceConnectionStatus_Status         PrivateLinkServiceConnectionState_StatusARM   (Appears on:PrivateEndpointConnectionProperties_StatusARM)      Field Description      actionRequired  string        description  string        status  PrivateLinkServiceConnectionStatus_Status         PrivateLinkServiceConnectionStatus_Status (string alias)  (Appears on:PrivateLinkServiceConnectionState_Status, PrivateLinkServiceConnectionState_StatusARM)      Value Description   \u0026#34;Approved\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Pending\u0026#34;\n  \u0026#34;Rejected\u0026#34;\n    PublicNetworkAccessType_Status (string alias)  (Appears on:BatchAccountProperties_StatusARM, BatchAccount_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    VirtualMachineFamilyCoreQuota_Status   (Appears on:BatchAccount_Status)      Field Description      coreQuota  int    CoreQuota: The core quota for the VM family for the Batch account.\n    name  string    Name: The Virtual Machine family name.\n    VirtualMachineFamilyCoreQuota_StatusARM   (Appears on:BatchAccountProperties_StatusARM)      Field Description      coreQuota  int    CoreQuota: The core quota for the VM family for the Batch account.\n    name  string    Name: The Virtual Machine family name.\n     "},{"id":20,"href":"/azure-service-operator/reference/cache.v1alpha1api20201201/","title":"cache.azure.com/v1alpha1api20201201","section":"References","content":"cache.azure.com/v1alpha1api20201201  Package v1alpha1api20201201 contains API Schema definitions for the cache v1alpha1api20201201 API group\n Resource Types:  PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:RedisResource_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20201201.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:RedisProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20201201.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        Redis   Deprecated version of Redis. Use v1beta20201201.Redis instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Redis_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    enableNonSslPort  bool        location  string        minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion         operatorSpec  RedisOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess         redisConfiguration  map[string]string        redisVersion  string        replicasPerMaster  int        replicasPerPrimary  int        shardCount  int        sku  Sku         staticIP  string        subnetReference  genruntime.ResourceReference         tags  map[string]string        tenantSettings  map[string]string        zones  []string           status  RedisResource_Status         RedisCreatePropertiesARM   (Appears on:Redis_SpecARM)  Deprecated version of RedisCreateProperties. Use v1beta20201201.RedisCreateProperties instead\n    Field Description      enableNonSslPort  bool        minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion         publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess         redisConfiguration  map[string]string        redisVersion  string        replicasPerMaster  int        replicasPerPrimary  int        shardCount  int        sku  SkuARM         staticIP  string        subnetId  string        tenantSettings  map[string]string        RedisCreatePropertiesMinimumTlsVersion (string alias)  (Appears on:RedisCreatePropertiesARM, Redis_Spec)  Deprecated version of RedisCreatePropertiesMinimumTlsVersion. Use v1beta20201201.RedisCreatePropertiesMinimumTlsVersion instead\n    Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    RedisCreatePropertiesPublicNetworkAccess (string alias)  (Appears on:RedisCreatePropertiesARM, Redis_Spec)  Deprecated version of RedisCreatePropertiesPublicNetworkAccess. Use v1beta20201201.RedisCreatePropertiesPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RedisFirewallRule   Deprecated version of RedisFirewallRule. Use v1beta20201201.RedisFirewallRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIP  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    startIP  string        tags  map[string]string           status  RedisFirewallRule_Status         RedisFirewallRulePropertiesARM   (Appears on:RedisFirewallRules_SpecARM)  Deprecated version of RedisFirewallRuleProperties. Use v1beta20201201.RedisFirewallRuleProperties instead\n    Field Description      endIP  string        startIP  string        RedisFirewallRuleProperties_StatusARM   (Appears on:RedisFirewallRule_StatusARM)  Deprecated version of RedisFirewallRuleProperties_Status. Use v1beta20201201.RedisFirewallRuleProperties_Status instead\n    Field Description      endIP  string        startIP  string        RedisFirewallRule_Status   (Appears on:RedisFirewallRule)  Deprecated version of RedisFirewallRule_Status. Use v1beta20201201.RedisFirewallRule_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIP  string        id  string        name  string        startIP  string        type  string        RedisFirewallRule_StatusARM   Deprecated version of RedisFirewallRule_Status. Use v1beta20201201.RedisFirewallRule_Status instead\n    Field Description      id  string        name  string        properties  RedisFirewallRuleProperties_StatusARM         type  string        RedisFirewallRules_Spec   (Appears on:RedisFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIP  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    startIP  string        tags  map[string]string        RedisFirewallRules_SpecARM   Deprecated version of RedisFirewallRules_Spec. Use v1beta20201201.RedisFirewallRules_Spec instead\n    Field Description      location  string        name  string        properties  RedisFirewallRulePropertiesARM         tags  map[string]string        RedisInstanceDetails_Status   (Appears on:RedisResource_Status)  Deprecated version of RedisInstanceDetails_Status. Use v1beta20201201.RedisInstanceDetails_Status instead\n    Field Description      isMaster  bool        isPrimary  bool        nonSslPort  int        shardId  int        sslPort  int        zone  string        RedisInstanceDetails_StatusARM   (Appears on:RedisProperties_StatusARM)  Deprecated version of RedisInstanceDetails_Status. Use v1beta20201201.RedisInstanceDetails_Status instead\n    Field Description      isMaster  bool        isPrimary  bool        nonSslPort  int        shardId  int        sslPort  int        zone  string        RedisLinkedServer   Deprecated version of RedisLinkedServer. Use v1beta20201201.RedisLinkedServer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisLinkedServers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    linkedRedisCacheLocation  string        linkedRedisCacheReference  genruntime.ResourceReference         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    serverRole  RedisLinkedServerCreatePropertiesServerRole         tags  map[string]string           status  RedisLinkedServerWithProperties_Status         RedisLinkedServerCreatePropertiesARM   (Appears on:RedisLinkedServers_SpecARM)  Deprecated version of RedisLinkedServerCreateProperties. Use v1beta20201201.RedisLinkedServerCreateProperties instead\n    Field Description      linkedRedisCacheId  string        linkedRedisCacheLocation  string        serverRole  RedisLinkedServerCreatePropertiesServerRole         RedisLinkedServerCreatePropertiesServerRole (string alias)  (Appears on:RedisLinkedServerCreatePropertiesARM, RedisLinkedServers_Spec)  Deprecated version of RedisLinkedServerCreatePropertiesServerRole. Use v1beta20201201.RedisLinkedServerCreatePropertiesServerRole instead\n    Value Description   \u0026#34;Primary\u0026#34;\n  \u0026#34;Secondary\u0026#34;\n    RedisLinkedServerPropertiesStatusServerRole (string alias)  (Appears on:RedisLinkedServerProperties_StatusARM, RedisLinkedServerWithProperties_Status)  Deprecated version of RedisLinkedServerPropertiesStatusServerRole. Use v1beta20201201.RedisLinkedServerPropertiesStatusServerRole instead\n    Value Description   \u0026#34;Primary\u0026#34;\n  \u0026#34;Secondary\u0026#34;\n    RedisLinkedServerProperties_StatusARM   (Appears on:RedisLinkedServerWithProperties_StatusARM)  Deprecated version of RedisLinkedServerProperties_Status. Use v1beta20201201.RedisLinkedServerProperties_Status instead\n    Field Description      linkedRedisCacheId  string        linkedRedisCacheLocation  string        provisioningState  string        serverRole  RedisLinkedServerPropertiesStatusServerRole         RedisLinkedServerWithProperties_Status   (Appears on:RedisLinkedServer)  Deprecated version of RedisLinkedServerWithProperties_Status. Use v1beta20201201.RedisLinkedServerWithProperties_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        linkedRedisCacheId  string        linkedRedisCacheLocation  string        name  string        provisioningState  string        serverRole  RedisLinkedServerPropertiesStatusServerRole         type  string        RedisLinkedServerWithProperties_StatusARM   Deprecated version of RedisLinkedServerWithProperties_Status. Use v1beta20201201.RedisLinkedServerWithProperties_Status instead\n    Field Description      id  string        name  string        properties  RedisLinkedServerProperties_StatusARM         type  string        RedisLinkedServer_Status   (Appears on:RedisResource_Status)  Deprecated version of RedisLinkedServer_Status. Use v1beta20201201.RedisLinkedServer_Status instead\n    Field Description      id  string        RedisLinkedServer_StatusARM   (Appears on:RedisProperties_StatusARM)  Deprecated version of RedisLinkedServer_Status. Use v1beta20201201.RedisLinkedServer_Status instead\n    Field Description      id  string        RedisLinkedServers_Spec   (Appears on:RedisLinkedServer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    linkedRedisCacheLocation  string        linkedRedisCacheReference  genruntime.ResourceReference         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    serverRole  RedisLinkedServerCreatePropertiesServerRole         tags  map[string]string        RedisLinkedServers_SpecARM   Deprecated version of RedisLinkedServers_Spec. Use v1beta20201201.RedisLinkedServers_Spec instead\n    Field Description      location  string        name  string        properties  RedisLinkedServerCreatePropertiesARM         tags  map[string]string        RedisOperatorSecrets   (Appears on:RedisOperatorSpec)      Field Description      hostName  genruntime.SecretDestination     HostName: indicates where the HostName secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    port  genruntime.SecretDestination     Port: indicates where the Port secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryKey  genruntime.SecretDestination     PrimaryKey: indicates where the PrimaryKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    sslPort  genruntime.SecretDestination     SSLPort: indicates where the SSLPort secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryKey  genruntime.SecretDestination     SecondaryKey: indicates where the SecondaryKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    RedisOperatorSpec   (Appears on:Redis_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  RedisOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    RedisPatchSchedule   Deprecated version of RedisPatchSchedule. Use v1beta20201201.RedisPatchSchedule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisPatchSchedules_Spec          location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    scheduleEntries  []ScheduleEntry         tags  map[string]string           status  RedisPatchSchedule_Status         RedisPatchSchedule_Status   (Appears on:RedisPatchSchedule)  Deprecated version of RedisPatchSchedule_Status. Use v1beta20201201.RedisPatchSchedule_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        name  string        scheduleEntries  []ScheduleEntry_Status         type  string        RedisPatchSchedule_StatusARM   Deprecated version of RedisPatchSchedule_Status. Use v1beta20201201.RedisPatchSchedule_Status instead\n    Field Description      id  string        name  string        properties  ScheduleEntries_StatusARM         type  string        RedisPatchSchedules_Spec   (Appears on:RedisPatchSchedule)      Field Description      location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    scheduleEntries  []ScheduleEntry         tags  map[string]string        RedisPatchSchedules_SpecARM   Deprecated version of RedisPatchSchedules_Spec. Use v1beta20201201.RedisPatchSchedules_Spec instead\n    Field Description      location  string        name  string        properties  ScheduleEntriesARM         tags  map[string]string        RedisPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)  Deprecated version of RedisPropertiesStatusMinimumTlsVersion. Use v1beta20201201.RedisPropertiesStatusMinimumTlsVersion instead\n    Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    RedisPropertiesStatusProvisioningState (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)  Deprecated version of RedisPropertiesStatusProvisioningState. Use v1beta20201201.RedisPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Linking\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;RecoveringScaleFailure\u0026#34;\n  \u0026#34;Scaling\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unlinking\u0026#34;\n  \u0026#34;Unprovisioning\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RedisPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)  Deprecated version of RedisPropertiesStatusPublicNetworkAccess. Use v1beta20201201.RedisPropertiesStatusPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RedisProperties_StatusARM   (Appears on:RedisResource_StatusARM)  Deprecated version of RedisProperties_Status. Use v1beta20201201.RedisProperties_Status instead\n    Field Description      enableNonSslPort  bool        hostName  string        instances  []RedisInstanceDetails_StatusARM         linkedServers  []RedisLinkedServer_StatusARM         minimumTlsVersion  RedisPropertiesStatusMinimumTlsVersion         port  int        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  RedisPropertiesStatusProvisioningState         publicNetworkAccess  RedisPropertiesStatusPublicNetworkAccess         redisConfiguration  map[string]string        redisVersion  string        replicasPerMaster  int        replicasPerPrimary  int        shardCount  int        sku  Sku_StatusARM         sslPort  int        staticIP  string        subnetId  string        tenantSettings  map[string]string        RedisResource_Status   (Appears on:Redis)  Deprecated version of RedisResource_Status. Use v1beta20201201.RedisResource_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    enableNonSslPort  bool        hostName  string        id  string        instances  []RedisInstanceDetails_Status         linkedServers  []RedisLinkedServer_Status         location  string        minimumTlsVersion  RedisPropertiesStatusMinimumTlsVersion         name  string        port  int        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  RedisPropertiesStatusProvisioningState         publicNetworkAccess  RedisPropertiesStatusPublicNetworkAccess         redisConfiguration  map[string]string        redisVersion  string        replicasPerMaster  int        replicasPerPrimary  int        shardCount  int        sku  Sku_Status         sslPort  int        staticIP  string        subnetId  string        tags  map[string]string        tenantSettings  map[string]string        type  string        zones  []string        RedisResource_StatusARM   Deprecated version of RedisResource_Status. Use v1beta20201201.RedisResource_Status instead\n    Field Description      id  string        location  string        name  string        properties  RedisProperties_StatusARM         tags  map[string]string        type  string        zones  []string        Redis_Spec   (Appears on:Redis)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    enableNonSslPort  bool        location  string        minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion         operatorSpec  RedisOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess         redisConfiguration  map[string]string        redisVersion  string        replicasPerMaster  int        replicasPerPrimary  int        shardCount  int        sku  Sku         staticIP  string        subnetReference  genruntime.ResourceReference         tags  map[string]string        tenantSettings  map[string]string        zones  []string        Redis_SpecARM   Deprecated version of Redis_Spec. Use v1beta20201201.Redis_Spec instead\n    Field Description      location  string        name  string        properties  RedisCreatePropertiesARM         tags  map[string]string        zones  []string        ScheduleEntriesARM   (Appears on:RedisPatchSchedules_SpecARM)  Deprecated version of ScheduleEntries. Use v1beta20201201.ScheduleEntries instead\n    Field Description      scheduleEntries  []ScheduleEntryARM         ScheduleEntries_StatusARM   (Appears on:RedisPatchSchedule_StatusARM)  Deprecated version of ScheduleEntries_Status. Use v1beta20201201.ScheduleEntries_Status instead\n    Field Description      scheduleEntries  []ScheduleEntry_StatusARM         ScheduleEntry   (Appears on:RedisPatchSchedules_Spec)  Deprecated version of ScheduleEntry. Use v1beta20201201.ScheduleEntry instead\n    Field Description      dayOfWeek  ScheduleEntryDayOfWeek         maintenanceWindow  string        startHourUtc  int        ScheduleEntryARM   (Appears on:ScheduleEntriesARM)  Deprecated version of ScheduleEntry. Use v1beta20201201.ScheduleEntry instead\n    Field Description      dayOfWeek  ScheduleEntryDayOfWeek         maintenanceWindow  string        startHourUtc  int        ScheduleEntryDayOfWeek (string alias)  (Appears on:ScheduleEntry, ScheduleEntryARM)  Deprecated version of ScheduleEntryDayOfWeek. Use v1beta20201201.ScheduleEntryDayOfWeek instead\n    Value Description   \u0026#34;Everyday\u0026#34;\n  \u0026#34;Friday\u0026#34;\n  \u0026#34;Monday\u0026#34;\n  \u0026#34;Saturday\u0026#34;\n  \u0026#34;Sunday\u0026#34;\n  \u0026#34;Thursday\u0026#34;\n  \u0026#34;Tuesday\u0026#34;\n  \u0026#34;Wednesday\u0026#34;\n  \u0026#34;Weekend\u0026#34;\n    ScheduleEntryStatusDayOfWeek (string alias)  (Appears on:ScheduleEntry_Status, ScheduleEntry_StatusARM)  Deprecated version of ScheduleEntryStatusDayOfWeek. Use v1beta20201201.ScheduleEntryStatusDayOfWeek instead\n    Value Description   \u0026#34;Everyday\u0026#34;\n  \u0026#34;Friday\u0026#34;\n  \u0026#34;Monday\u0026#34;\n  \u0026#34;Saturday\u0026#34;\n  \u0026#34;Sunday\u0026#34;\n  \u0026#34;Thursday\u0026#34;\n  \u0026#34;Tuesday\u0026#34;\n  \u0026#34;Wednesday\u0026#34;\n  \u0026#34;Weekend\u0026#34;\n    ScheduleEntry_Status   (Appears on:RedisPatchSchedule_Status)  Deprecated version of ScheduleEntry_Status. Use v1beta20201201.ScheduleEntry_Status instead\n    Field Description      dayOfWeek  ScheduleEntryStatusDayOfWeek         maintenanceWindow  string        startHourUtc  int        ScheduleEntry_StatusARM   (Appears on:ScheduleEntries_StatusARM)  Deprecated version of ScheduleEntry_Status. Use v1beta20201201.ScheduleEntry_Status instead\n    Field Description      dayOfWeek  ScheduleEntryStatusDayOfWeek         maintenanceWindow  string        startHourUtc  int        Sku   (Appears on:Redis_Spec)  Deprecated version of Sku. Use v1beta20201201.Sku instead\n    Field Description      capacity  int        family  SkuFamily         name  SkuName         SkuARM   (Appears on:RedisCreatePropertiesARM)  Deprecated version of Sku. Use v1beta20201201.Sku instead\n    Field Description      capacity  int        family  SkuFamily         name  SkuName         SkuFamily (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuFamily. Use v1beta20201201.SkuFamily instead\n    Value Description   \u0026#34;C\u0026#34;\n  \u0026#34;P\u0026#34;\n    SkuName (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuName. Use v1beta20201201.SkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusFamily (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusFamily. Use v1beta20201201.SkuStatusFamily instead\n    Value Description   \u0026#34;C\u0026#34;\n  \u0026#34;P\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusName. Use v1beta20201201.SkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:RedisResource_Status)  Deprecated version of Sku_Status. Use v1beta20201201.Sku_Status instead\n    Field Description      capacity  int        family  SkuStatusFamily         name  SkuStatusName         Sku_StatusARM   (Appears on:RedisProperties_StatusARM)  Deprecated version of Sku_Status. Use v1beta20201201.Sku_Status instead\n    Field Description      capacity  int        family  SkuStatusFamily         name  SkuStatusName          "},{"id":21,"href":"/azure-service-operator/reference/cache.v1alpha1api20210301/","title":"cache.azure.com/v1alpha1api20210301","section":"References","content":"cache.azure.com/v1alpha1api20210301  Package v1alpha1api20210301 contains API Schema definitions for the cache v1alpha1api20210301 API group\n Resource Types:  ClusterPropertiesARM   (Appears on:RedisEnterprise_SpecARM)  Deprecated version of ClusterProperties. Use v1beta20210301.ClusterProperties instead\n    Field Description      minimumTlsVersion  ClusterPropertiesMinimumTlsVersion         ClusterPropertiesMinimumTlsVersion (string alias)  (Appears on:ClusterPropertiesARM, RedisEnterprise_Spec)  Deprecated version of ClusterPropertiesMinimumTlsVersion. Use v1beta20210301.ClusterPropertiesMinimumTlsVersion instead\n    Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    ClusterPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status)  Deprecated version of ClusterPropertiesStatusMinimumTlsVersion. Use v1beta20210301.ClusterPropertiesStatusMinimumTlsVersion instead\n    Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    ClusterProperties_StatusARM   (Appears on:Cluster_StatusARM)  Deprecated version of ClusterProperties_Status. Use v1beta20210301.ClusterProperties_Status instead\n    Field Description      hostName  string        minimumTlsVersion  ClusterPropertiesStatusMinimumTlsVersion         privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  ProvisioningState_Status         redisVersion  string        resourceState  ResourceState_Status         Cluster_Status   (Appears on:RedisEnterprise)  Deprecated version of Cluster_Status. Use v1beta20210301.Cluster_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    hostName  string        id  string        location  string        minimumTlsVersion  ClusterPropertiesStatusMinimumTlsVersion         name  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  ProvisioningState_Status         redisVersion  string        resourceState  ResourceState_Status         sku  Sku_Status         tags  map[string]string        type  string        zones  []string        Cluster_StatusARM   Deprecated version of Cluster_Status. Use v1beta20210301.Cluster_Status instead\n    Field Description      id  string        location  string        name  string        properties  ClusterProperties_StatusARM         sku  Sku_StatusARM         tags  map[string]string        type  string        zones  []string        DatabasePropertiesARM   (Appears on:RedisEnterpriseDatabases_SpecARM)  Deprecated version of DatabaseProperties. Use v1beta20210301.DatabaseProperties instead\n    Field Description      clientProtocol  DatabasePropertiesClientProtocol         clusteringPolicy  DatabasePropertiesClusteringPolicy         evictionPolicy  DatabasePropertiesEvictionPolicy         modules  []ModuleARM         persistence  PersistenceARM         port  int        DatabasePropertiesClientProtocol (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)  Deprecated version of DatabasePropertiesClientProtocol. Use v1beta20210301.DatabasePropertiesClientProtocol instead\n    Value Description   \u0026#34;Encrypted\u0026#34;\n  \u0026#34;Plaintext\u0026#34;\n    DatabasePropertiesClusteringPolicy (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)  Deprecated version of DatabasePropertiesClusteringPolicy. Use v1beta20210301.DatabasePropertiesClusteringPolicy instead\n    Value Description   \u0026#34;EnterpriseCluster\u0026#34;\n  \u0026#34;OSSCluster\u0026#34;\n    DatabasePropertiesEvictionPolicy (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)  Deprecated version of DatabasePropertiesEvictionPolicy. Use v1beta20210301.DatabasePropertiesEvictionPolicy instead\n    Value Description   \u0026#34;AllKeysLFU\u0026#34;\n  \u0026#34;AllKeysLRU\u0026#34;\n  \u0026#34;AllKeysRandom\u0026#34;\n  \u0026#34;NoEviction\u0026#34;\n  \u0026#34;VolatileLFU\u0026#34;\n  \u0026#34;VolatileLRU\u0026#34;\n  \u0026#34;VolatileRandom\u0026#34;\n  \u0026#34;VolatileTTL\u0026#34;\n    DatabasePropertiesStatusClientProtocol (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)  Deprecated version of DatabasePropertiesStatusClientProtocol. Use v1beta20210301.DatabasePropertiesStatusClientProtocol instead\n    Value Description   \u0026#34;Encrypted\u0026#34;\n  \u0026#34;Plaintext\u0026#34;\n    DatabasePropertiesStatusClusteringPolicy (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)  Deprecated version of DatabasePropertiesStatusClusteringPolicy. Use v1beta20210301.DatabasePropertiesStatusClusteringPolicy instead\n    Value Description   \u0026#34;EnterpriseCluster\u0026#34;\n  \u0026#34;OSSCluster\u0026#34;\n    DatabasePropertiesStatusEvictionPolicy (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)  Deprecated version of DatabasePropertiesStatusEvictionPolicy. Use v1beta20210301.DatabasePropertiesStatusEvictionPolicy instead\n    Value Description   \u0026#34;AllKeysLFU\u0026#34;\n  \u0026#34;AllKeysLRU\u0026#34;\n  \u0026#34;AllKeysRandom\u0026#34;\n  \u0026#34;NoEviction\u0026#34;\n  \u0026#34;VolatileLFU\u0026#34;\n  \u0026#34;VolatileLRU\u0026#34;\n  \u0026#34;VolatileRandom\u0026#34;\n  \u0026#34;VolatileTTL\u0026#34;\n    DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)  Deprecated version of DatabaseProperties_Status. Use v1beta20210301.DatabaseProperties_Status instead\n    Field Description      clientProtocol  DatabasePropertiesStatusClientProtocol         clusteringPolicy  DatabasePropertiesStatusClusteringPolicy         evictionPolicy  DatabasePropertiesStatusEvictionPolicy         modules  []Module_StatusARM         persistence  Persistence_StatusARM         port  int        provisioningState  ProvisioningState_Status         resourceState  ResourceState_Status         Database_Status   (Appears on:RedisEnterpriseDatabase)  Deprecated version of Database_Status. Use v1beta20210301.Database_Status instead\n    Field Description      clientProtocol  DatabasePropertiesStatusClientProtocol         clusteringPolicy  DatabasePropertiesStatusClusteringPolicy         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    evictionPolicy  DatabasePropertiesStatusEvictionPolicy         id  string        modules  []Module_Status         name  string        persistence  Persistence_Status         port  int        provisioningState  ProvisioningState_Status         resourceState  ResourceState_Status         type  string        Database_StatusARM   Deprecated version of Database_Status. Use v1beta20210301.Database_Status instead\n    Field Description      id  string        name  string        properties  DatabaseProperties_StatusARM         type  string        Module   (Appears on:RedisEnterpriseDatabases_Spec)  Deprecated version of Module. Use v1beta20210301.Module instead\n    Field Description      args  string        name  string        ModuleARM   (Appears on:DatabasePropertiesARM)  Deprecated version of Module. Use v1beta20210301.Module instead\n    Field Description      args  string        name  string        Module_Status   (Appears on:Database_Status)  Deprecated version of Module_Status. Use v1beta20210301.Module_Status instead\n    Field Description      args  string        name  string        version  string        Module_StatusARM   (Appears on:DatabaseProperties_StatusARM)  Deprecated version of Module_Status. Use v1beta20210301.Module_Status instead\n    Field Description      args  string        name  string        version  string        Persistence   (Appears on:RedisEnterpriseDatabases_Spec)  Deprecated version of Persistence. Use v1beta20210301.Persistence instead\n    Field Description      aofEnabled  bool        aofFrequency  PersistenceAofFrequency         rdbEnabled  bool        rdbFrequency  PersistenceRdbFrequency         PersistenceARM   (Appears on:DatabasePropertiesARM)  Deprecated version of Persistence. Use v1beta20210301.Persistence instead\n    Field Description      aofEnabled  bool        aofFrequency  PersistenceAofFrequency         rdbEnabled  bool        rdbFrequency  PersistenceRdbFrequency         PersistenceAofFrequency (string alias)  (Appears on:Persistence, PersistenceARM)  Deprecated version of PersistenceAofFrequency. Use v1beta20210301.PersistenceAofFrequency instead\n    Value Description   \u0026#34;1s\u0026#34;\n  \u0026#34;always\u0026#34;\n    PersistenceRdbFrequency (string alias)  (Appears on:Persistence, PersistenceARM)  Deprecated version of PersistenceRdbFrequency. Use v1beta20210301.PersistenceRdbFrequency instead\n    Value Description   \u0026#34;12h\u0026#34;\n  \u0026#34;1h\u0026#34;\n  \u0026#34;6h\u0026#34;\n    PersistenceStatusAofFrequency (string alias)  (Appears on:Persistence_Status, Persistence_StatusARM)  Deprecated version of PersistenceStatusAofFrequency. Use v1beta20210301.PersistenceStatusAofFrequency instead\n    Value Description   \u0026#34;1s\u0026#34;\n  \u0026#34;always\u0026#34;\n    PersistenceStatusRdbFrequency (string alias)  (Appears on:Persistence_Status, Persistence_StatusARM)  Deprecated version of PersistenceStatusRdbFrequency. Use v1beta20210301.PersistenceStatusRdbFrequency instead\n    Value Description   \u0026#34;12h\u0026#34;\n  \u0026#34;1h\u0026#34;\n  \u0026#34;6h\u0026#34;\n    Persistence_Status   (Appears on:Database_Status)  Deprecated version of Persistence_Status. Use v1beta20210301.Persistence_Status instead\n    Field Description      aofEnabled  bool        aofFrequency  PersistenceStatusAofFrequency         rdbEnabled  bool        rdbFrequency  PersistenceStatusRdbFrequency         Persistence_StatusARM   (Appears on:DatabaseProperties_StatusARM)  Deprecated version of Persistence_Status. Use v1beta20210301.Persistence_Status instead\n    Field Description      aofEnabled  bool        aofFrequency  PersistenceStatusAofFrequency         rdbEnabled  bool        rdbFrequency  PersistenceStatusRdbFrequency         PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:Cluster_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210301.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:ClusterProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210301.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        ProvisioningState_Status (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status, DatabaseProperties_StatusARM, Database_Status)  Deprecated version of ProvisioningState_Status. Use v1beta20210301.ProvisioningState_Status instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RedisEnterprise   Deprecated version of RedisEnterprise. Use v1beta20210301.RedisEnterprise instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisEnterprise_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        minimumTlsVersion  ClusterPropertiesMinimumTlsVersion         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  Sku         tags  map[string]string        zones  []string           status  Cluster_Status         RedisEnterpriseDatabase   Deprecated version of RedisEnterpriseDatabase. Use v1beta20210301.RedisEnterpriseDatabase instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisEnterpriseDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clientProtocol  DatabasePropertiesClientProtocol         clusteringPolicy  DatabasePropertiesClusteringPolicy         evictionPolicy  DatabasePropertiesEvictionPolicy         location  string        modules  []Module         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/RedisEnterprise resource\n    persistence  Persistence         port  int        tags  map[string]string           status  Database_Status         RedisEnterpriseDatabases_Spec   (Appears on:RedisEnterpriseDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clientProtocol  DatabasePropertiesClientProtocol         clusteringPolicy  DatabasePropertiesClusteringPolicy         evictionPolicy  DatabasePropertiesEvictionPolicy         location  string        modules  []Module         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/RedisEnterprise resource\n    persistence  Persistence         port  int        tags  map[string]string        RedisEnterpriseDatabases_SpecARM   Deprecated version of RedisEnterpriseDatabases_Spec. Use v1beta20210301.RedisEnterpriseDatabases_Spec instead\n    Field Description      location  string        name  string        properties  DatabasePropertiesARM         tags  map[string]string        RedisEnterprise_Spec   (Appears on:RedisEnterprise)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        minimumTlsVersion  ClusterPropertiesMinimumTlsVersion         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  Sku         tags  map[string]string        zones  []string        RedisEnterprise_SpecARM   Deprecated version of RedisEnterprise_Spec. Use v1beta20210301.RedisEnterprise_Spec instead\n    Field Description      location  string        name  string        properties  ClusterPropertiesARM         sku  SkuARM         tags  map[string]string        zones  []string        ResourceState_Status (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status, DatabaseProperties_StatusARM, Database_Status)  Deprecated version of ResourceState_Status. Use v1beta20210301.ResourceState_Status instead\n    Value Description   \u0026#34;CreateFailed\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;DeleteFailed\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;DisableFailed\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;Disabling\u0026#34;\n  \u0026#34;EnableFailed\u0026#34;\n  \u0026#34;Enabling\u0026#34;\n  \u0026#34;Running\u0026#34;\n  \u0026#34;UpdateFailed\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    Sku   (Appears on:RedisEnterprise_Spec)  Deprecated version of Sku. Use v1beta20210301.Sku instead\n    Field Description      capacity  int        name  SkuName         SkuARM   (Appears on:RedisEnterprise_SpecARM)  Deprecated version of Sku. Use v1beta20210301.Sku instead\n    Field Description      capacity  int        name  SkuName         SkuName (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuName. Use v1beta20210301.SkuName instead\n    Value Description   \u0026#34;Enterprise_E10\u0026#34;\n  \u0026#34;Enterprise_E100\u0026#34;\n  \u0026#34;Enterprise_E20\u0026#34;\n  \u0026#34;Enterprise_E50\u0026#34;\n  \u0026#34;EnterpriseFlash_F1500\u0026#34;\n  \u0026#34;EnterpriseFlash_F300\u0026#34;\n  \u0026#34;EnterpriseFlash_F700\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusName. Use v1beta20210301.SkuStatusName instead\n    Value Description   \u0026#34;Enterprise_E10\u0026#34;\n  \u0026#34;Enterprise_E100\u0026#34;\n  \u0026#34;Enterprise_E20\u0026#34;\n  \u0026#34;Enterprise_E50\u0026#34;\n  \u0026#34;EnterpriseFlash_F1500\u0026#34;\n  \u0026#34;EnterpriseFlash_F300\u0026#34;\n  \u0026#34;EnterpriseFlash_F700\u0026#34;\n    Sku_Status   (Appears on:Cluster_Status)  Deprecated version of Sku_Status. Use v1beta20210301.Sku_Status instead\n    Field Description      capacity  int        name  SkuStatusName         Sku_StatusARM   (Appears on:Cluster_StatusARM)  Deprecated version of Sku_Status. Use v1beta20210301.Sku_Status instead\n    Field Description      capacity  int        name  SkuStatusName          "},{"id":22,"href":"/azure-service-operator/reference/cache.v1beta20201201/","title":"cache.azure.com/v1beta20201201","section":"References","content":"cache.azure.com/v1beta20201201  Package v1beta20201201 contains API Schema definitions for the cache v1beta20201201 API group\n Resource Types:  PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:RedisResource_Status)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:RedisProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    Redis   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/resourceDefinitions/redis\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Redis_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    enableNonSslPort  bool    EnableNonSslPort: Specifies whether the non-ssl Redis server port (6379) is enabled.\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion     MinimumTlsVersion: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, \u0026lsquo;1.0\u0026rsquo;, \u0026lsquo;1.1\u0026rsquo;, \u0026lsquo;1.2\u0026rsquo;).\n    operatorSpec  RedisOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be \u0026lsquo;Enabled\u0026rsquo; or \u0026lsquo;Disabled\u0026rsquo;. If \u0026lsquo;Disabled\u0026rsquo;, private endpoints are the exclusive access method. Default value is \u0026lsquo;Enabled\u0026rsquo;.\n    redisConfiguration  map[string]string    RedisConfiguration: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\n    redisVersion  string    RedisVersion: Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)\n    replicasPerMaster  int    ReplicasPerMaster: The number of replicas to be created per primary.\n    replicasPerPrimary  int    ReplicasPerPrimary: The number of replicas to be created per primary.\n    shardCount  int    ShardCount: The number of shards to be created on a Premium Cluster Cache.\n    sku  Sku     Sku: SKU parameters supplied to the create Redis operation.\n    staticIP  string    StaticIP: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.\n    subnetReference  genruntime.ResourceReference     SubnetReference: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    tenantSettings  map[string]string    TenantSettings: A dictionary of tenant settings\n    zones  []string    Zones: A list of availability zones denoting where the resource needs to come from.\n       status  RedisResource_Status         RedisCreatePropertiesARM   (Appears on:Redis_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/RedisCreateProperties\n    Field Description      enableNonSslPort  bool    EnableNonSslPort: Specifies whether the non-ssl Redis server port (6379) is enabled.\n    minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion     MinimumTlsVersion: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, \u0026lsquo;1.0\u0026rsquo;, \u0026lsquo;1.1\u0026rsquo;, \u0026lsquo;1.2\u0026rsquo;).\n    publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be \u0026lsquo;Enabled\u0026rsquo; or \u0026lsquo;Disabled\u0026rsquo;. If \u0026lsquo;Disabled\u0026rsquo;, private endpoints are the exclusive access method. Default value is \u0026lsquo;Enabled\u0026rsquo;.\n    redisConfiguration  map[string]string    RedisConfiguration: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\n    redisVersion  string    RedisVersion: Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)\n    replicasPerMaster  int    ReplicasPerMaster: The number of replicas to be created per primary.\n    replicasPerPrimary  int    ReplicasPerPrimary: The number of replicas to be created per primary.\n    shardCount  int    ShardCount: The number of shards to be created on a Premium Cluster Cache.\n    sku  SkuARM     Sku: SKU parameters supplied to the create Redis operation.\n    staticIP  string    StaticIP: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.\n    subnetId  string        tenantSettings  map[string]string    TenantSettings: A dictionary of tenant settings\n    RedisCreatePropertiesMinimumTlsVersion (string alias)  (Appears on:RedisCreatePropertiesARM, Redis_Spec)      Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    RedisCreatePropertiesPublicNetworkAccess (string alias)  (Appears on:RedisCreatePropertiesARM, Redis_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RedisFirewallRule   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/resourceDefinitions/redis_firewallRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIP  string    EndIP: highest IP address included in the range\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    startIP  string    StartIP: lowest IP address included in the range\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  RedisFirewallRule_Status         RedisFirewallRulePropertiesARM   (Appears on:RedisFirewallRules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/RedisFirewallRuleProperties\n    Field Description      endIP  string    EndIP: highest IP address included in the range\n    startIP  string    StartIP: lowest IP address included in the range\n    RedisFirewallRuleProperties_StatusARM   (Appears on:RedisFirewallRule_StatusARM)      Field Description      endIP  string    EndIP: highest IP address included in the range\n    startIP  string    StartIP: lowest IP address included in the range\n    RedisFirewallRule_Status   (Appears on:RedisFirewallRule)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIP  string    EndIP: highest IP address included in the range\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    startIP  string    StartIP: lowest IP address included in the range\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisFirewallRule_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  RedisFirewallRuleProperties_StatusARM     Properties: redis cache firewall rule properties\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisFirewallRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    RedisFirewallRules_Spec   (Appears on:RedisFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIP  string    EndIP: highest IP address included in the range\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    startIP  string    StartIP: lowest IP address included in the range\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisFirewallRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the firewall rule.\n    properties  RedisFirewallRulePropertiesARM     Properties: Specifies a range of IP addresses permitted to connect to the cache\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisInstanceDetails_Status   (Appears on:RedisResource_Status)      Field Description      isMaster  bool    IsMaster: Specifies whether the instance is a primary node.\n    isPrimary  bool    IsPrimary: Specifies whether the instance is a primary node.\n    nonSslPort  int    NonSslPort: If enableNonSslPort is true, provides Redis instance Non-SSL port.\n    shardId  int    ShardId: If clustering is enabled, the Shard ID of Redis Instance\n    sslPort  int    SslPort: Redis instance SSL port.\n    zone  string    Zone: If the Cache uses availability zones, specifies availability zone where this instance is located.\n    RedisInstanceDetails_StatusARM   (Appears on:RedisProperties_StatusARM)      Field Description      isMaster  bool    IsMaster: Specifies whether the instance is a primary node.\n    isPrimary  bool    IsPrimary: Specifies whether the instance is a primary node.\n    nonSslPort  int    NonSslPort: If enableNonSslPort is true, provides Redis instance Non-SSL port.\n    shardId  int    ShardId: If clustering is enabled, the Shard ID of Redis Instance\n    sslPort  int    SslPort: Redis instance SSL port.\n    zone  string    Zone: If the Cache uses availability zones, specifies availability zone where this instance is located.\n    RedisLinkedServer   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/resourceDefinitions/redis_linkedServers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisLinkedServers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    linkedRedisCacheLocation  string    LinkedRedisCacheLocation: Location of the linked redis cache.\n    linkedRedisCacheReference  genruntime.ResourceReference     LinkedRedisCacheReference: Fully qualified resourceId of the linked redis cache.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    serverRole  RedisLinkedServerCreatePropertiesServerRole     ServerRole: Role of the linked server.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  RedisLinkedServerWithProperties_Status         RedisLinkedServerCreatePropertiesARM   (Appears on:RedisLinkedServers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/RedisLinkedServerCreateProperties\n    Field Description      linkedRedisCacheId  string        linkedRedisCacheLocation  string    LinkedRedisCacheLocation: Location of the linked redis cache.\n    serverRole  RedisLinkedServerCreatePropertiesServerRole     ServerRole: Role of the linked server.\n    RedisLinkedServerCreatePropertiesServerRole (string alias)  (Appears on:RedisLinkedServerCreatePropertiesARM, RedisLinkedServers_Spec)      Value Description   \u0026#34;Primary\u0026#34;\n  \u0026#34;Secondary\u0026#34;\n    RedisLinkedServerPropertiesStatusServerRole (string alias)  (Appears on:RedisLinkedServerProperties_StatusARM, RedisLinkedServerWithProperties_Status)      Value Description   \u0026#34;Primary\u0026#34;\n  \u0026#34;Secondary\u0026#34;\n    RedisLinkedServerProperties_StatusARM   (Appears on:RedisLinkedServerWithProperties_StatusARM)      Field Description      linkedRedisCacheId  string    LinkedRedisCacheId: Fully qualified resourceId of the linked redis cache.\n    linkedRedisCacheLocation  string    LinkedRedisCacheLocation: Location of the linked redis cache.\n    provisioningState  string    ProvisioningState: Terminal state of the link between primary and secondary redis cache.\n    serverRole  RedisLinkedServerPropertiesStatusServerRole     ServerRole: Role of the linked server.\n    RedisLinkedServerWithProperties_Status   (Appears on:RedisLinkedServer)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    linkedRedisCacheId  string    LinkedRedisCacheId: Fully qualified resourceId of the linked redis cache.\n    linkedRedisCacheLocation  string    LinkedRedisCacheLocation: Location of the linked redis cache.\n    name  string    Name: The name of the resource\n    provisioningState  string    ProvisioningState: Terminal state of the link between primary and secondary redis cache.\n    serverRole  RedisLinkedServerPropertiesStatusServerRole     ServerRole: Role of the linked server.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisLinkedServerWithProperties_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  RedisLinkedServerProperties_StatusARM     Properties: Properties of the linked server.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisLinkedServer_Status   (Appears on:RedisResource_Status)      Field Description      id  string    Id: Linked server Id.\n    RedisLinkedServer_StatusARM   (Appears on:RedisProperties_StatusARM)      Field Description      id  string    Id: Linked server Id.\n    RedisLinkedServersSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    RedisLinkedServers_Spec   (Appears on:RedisLinkedServer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    linkedRedisCacheLocation  string    LinkedRedisCacheLocation: Location of the linked redis cache.\n    linkedRedisCacheReference  genruntime.ResourceReference     LinkedRedisCacheReference: Fully qualified resourceId of the linked redis cache.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    serverRole  RedisLinkedServerCreatePropertiesServerRole     ServerRole: Role of the linked server.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisLinkedServers_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the linked server that is being added to the Redis cache.\n    properties  RedisLinkedServerCreatePropertiesARM     Properties: Create properties for a linked server\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisOperatorSecrets   (Appears on:RedisOperatorSpec)      Field Description      hostName  genruntime.SecretDestination     HostName: indicates where the HostName secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    port  genruntime.SecretDestination     Port: indicates where the Port secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryKey  genruntime.SecretDestination     PrimaryKey: indicates where the PrimaryKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    sslPort  genruntime.SecretDestination     SSLPort: indicates where the SSLPort secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryKey  genruntime.SecretDestination     SecondaryKey: indicates where the SecondaryKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    RedisOperatorSpec   (Appears on:Redis_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  RedisOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    RedisPatchSchedule   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/resourceDefinitions/redis_patchSchedules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisPatchSchedules_Spec          location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    scheduleEntries  []ScheduleEntry     ScheduleEntries: List of patch schedules for a Redis cache.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  RedisPatchSchedule_Status         RedisPatchSchedule_Status   (Appears on:RedisPatchSchedule)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    scheduleEntries  []ScheduleEntry_Status     ScheduleEntries: List of patch schedules for a Redis cache.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisPatchSchedule_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  ScheduleEntries_StatusARM     Properties: List of patch schedules for a Redis cache.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    RedisPatchSchedulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    RedisPatchSchedules_Spec   (Appears on:RedisPatchSchedule)      Field Description      location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/Redis resource\n    scheduleEntries  []ScheduleEntry     ScheduleEntries: List of patch schedules for a Redis cache.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisPatchSchedules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Default string modeled as parameter for auto generation to work correctly.\n    properties  ScheduleEntriesARM     Properties: List of patch schedules for a Redis cache.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)      Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    RedisPropertiesStatusProvisioningState (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)      Value Description   \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Linking\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;RecoveringScaleFailure\u0026#34;\n  \u0026#34;Scaling\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unlinking\u0026#34;\n  \u0026#34;Unprovisioning\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RedisPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:RedisProperties_StatusARM, RedisResource_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RedisProperties_StatusARM   (Appears on:RedisResource_StatusARM)      Field Description      enableNonSslPort  bool    EnableNonSslPort: Specifies whether the non-ssl Redis server port (6379) is enabled.\n    hostName  string    HostName: Redis host name.\n    instances  []RedisInstanceDetails_StatusARM     Instances: List of the Redis instances associated with the cache\n    linkedServers  []RedisLinkedServer_StatusARM     LinkedServers: List of the linked servers associated with the cache\n    minimumTlsVersion  RedisPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, \u0026lsquo;1.0\u0026rsquo;, \u0026lsquo;1.1\u0026rsquo;, \u0026lsquo;1.2\u0026rsquo;)\n    port  int    Port: Redis non-SSL port.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connection associated with the specified redis cache\n    provisioningState  RedisPropertiesStatusProvisioningState     ProvisioningState: Redis instance provisioning status.\n    publicNetworkAccess  RedisPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be \u0026lsquo;Enabled\u0026rsquo; or \u0026lsquo;Disabled\u0026rsquo;. If \u0026lsquo;Disabled\u0026rsquo;, private endpoints are the exclusive access method. Default value is \u0026lsquo;Enabled\u0026rsquo;\n    redisConfiguration  map[string]string    RedisConfiguration: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\n    redisVersion  string    RedisVersion: Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)\n    replicasPerMaster  int    ReplicasPerMaster: The number of replicas to be created per primary.\n    replicasPerPrimary  int    ReplicasPerPrimary: The number of replicas to be created per primary.\n    shardCount  int    ShardCount: The number of shards to be created on a Premium Cluster Cache.\n    sku  Sku_StatusARM     Sku: The SKU of the Redis cache to deploy.\n    sslPort  int    SslPort: Redis SSL port.\n    staticIP  string    StaticIP: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.\n    subnetId  string    SubnetId: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1\n    tenantSettings  map[string]string    TenantSettings: A dictionary of tenant settings\n    RedisResource_Status   (Appears on:Redis)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    enableNonSslPort  bool    EnableNonSslPort: Specifies whether the non-ssl Redis server port (6379) is enabled.\n    hostName  string    HostName: Redis host name.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    instances  []RedisInstanceDetails_Status     Instances: List of the Redis instances associated with the cache\n    linkedServers  []RedisLinkedServer_Status     LinkedServers: List of the linked servers associated with the cache\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  RedisPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, \u0026lsquo;1.0\u0026rsquo;, \u0026lsquo;1.1\u0026rsquo;, \u0026lsquo;1.2\u0026rsquo;)\n    name  string    Name: The name of the resource\n    port  int    Port: Redis non-SSL port.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connection associated with the specified redis cache\n    provisioningState  RedisPropertiesStatusProvisioningState     ProvisioningState: Redis instance provisioning status.\n    publicNetworkAccess  RedisPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be \u0026lsquo;Enabled\u0026rsquo; or \u0026lsquo;Disabled\u0026rsquo;. If \u0026lsquo;Disabled\u0026rsquo;, private endpoints are the exclusive access method. Default value is \u0026lsquo;Enabled\u0026rsquo;\n    redisConfiguration  map[string]string    RedisConfiguration: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\n    redisVersion  string    RedisVersion: Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)\n    replicasPerMaster  int    ReplicasPerMaster: The number of replicas to be created per primary.\n    replicasPerPrimary  int    ReplicasPerPrimary: The number of replicas to be created per primary.\n    shardCount  int    ShardCount: The number of shards to be created on a Premium Cluster Cache.\n    sku  Sku_Status     Sku: The SKU of the Redis cache to deploy.\n    sslPort  int    SslPort: Redis SSL port.\n    staticIP  string    StaticIP: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.\n    subnetId  string    SubnetId: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1\n    tags  map[string]string    Tags: Resource tags.\n    tenantSettings  map[string]string    TenantSettings: A dictionary of tenant settings\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    zones  []string    Zones: A list of availability zones denoting where the resource needs to come from.\n    RedisResource_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  RedisProperties_StatusARM     Properties: Redis cache properties.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    zones  []string    Zones: A list of availability zones denoting where the resource needs to come from.\n    RedisSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    Redis_Spec   (Appears on:Redis)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    enableNonSslPort  bool    EnableNonSslPort: Specifies whether the non-ssl Redis server port (6379) is enabled.\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  RedisCreatePropertiesMinimumTlsVersion     MinimumTlsVersion: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, \u0026lsquo;1.0\u0026rsquo;, \u0026lsquo;1.1\u0026rsquo;, \u0026lsquo;1.2\u0026rsquo;).\n    operatorSpec  RedisOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  RedisCreatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be \u0026lsquo;Enabled\u0026rsquo; or \u0026lsquo;Disabled\u0026rsquo;. If \u0026lsquo;Disabled\u0026rsquo;, private endpoints are the exclusive access method. Default value is \u0026lsquo;Enabled\u0026rsquo;.\n    redisConfiguration  map[string]string    RedisConfiguration: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.\n    redisVersion  string    RedisVersion: Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)\n    replicasPerMaster  int    ReplicasPerMaster: The number of replicas to be created per primary.\n    replicasPerPrimary  int    ReplicasPerPrimary: The number of replicas to be created per primary.\n    shardCount  int    ShardCount: The number of shards to be created on a Premium Cluster Cache.\n    sku  Sku     Sku: SKU parameters supplied to the create Redis operation.\n    staticIP  string    StaticIP: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.\n    subnetReference  genruntime.ResourceReference     SubnetReference: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    tenantSettings  map[string]string    TenantSettings: A dictionary of tenant settings\n    zones  []string    Zones: A list of availability zones denoting where the resource needs to come from.\n    Redis_SpecARM       Field Description      location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the Redis cache.\n    properties  RedisCreatePropertiesARM     Properties: Properties supplied to Create Redis operation.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: A list of availability zones denoting where the resource needs to come from.\n    ScheduleEntriesARM   (Appears on:RedisPatchSchedules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/ScheduleEntries\n    Field Description      scheduleEntries  []ScheduleEntryARM     ScheduleEntries: List of patch schedules for a Redis cache.\n    ScheduleEntries_StatusARM   (Appears on:RedisPatchSchedule_StatusARM)      Field Description      scheduleEntries  []ScheduleEntry_StatusARM     ScheduleEntries: List of patch schedules for a Redis cache.\n    ScheduleEntry   (Appears on:RedisPatchSchedules_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/ScheduleEntry\n    Field Description      dayOfWeek  ScheduleEntryDayOfWeek     DayOfWeek: Day of the week when a cache can be patched.\n    maintenanceWindow  string    MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.\n    startHourUtc  int    StartHourUtc: Start hour after which cache patching can start.\n    ScheduleEntryARM   (Appears on:ScheduleEntriesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/ScheduleEntry\n    Field Description      dayOfWeek  ScheduleEntryDayOfWeek     DayOfWeek: Day of the week when a cache can be patched.\n    maintenanceWindow  string    MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.\n    startHourUtc  int    StartHourUtc: Start hour after which cache patching can start.\n    ScheduleEntryDayOfWeek (string alias)  (Appears on:ScheduleEntry, ScheduleEntryARM)      Value Description   \u0026#34;Everyday\u0026#34;\n  \u0026#34;Friday\u0026#34;\n  \u0026#34;Monday\u0026#34;\n  \u0026#34;Saturday\u0026#34;\n  \u0026#34;Sunday\u0026#34;\n  \u0026#34;Thursday\u0026#34;\n  \u0026#34;Tuesday\u0026#34;\n  \u0026#34;Wednesday\u0026#34;\n  \u0026#34;Weekend\u0026#34;\n    ScheduleEntryStatusDayOfWeek (string alias)  (Appears on:ScheduleEntry_Status, ScheduleEntry_StatusARM)      Value Description   \u0026#34;Everyday\u0026#34;\n  \u0026#34;Friday\u0026#34;\n  \u0026#34;Monday\u0026#34;\n  \u0026#34;Saturday\u0026#34;\n  \u0026#34;Sunday\u0026#34;\n  \u0026#34;Thursday\u0026#34;\n  \u0026#34;Tuesday\u0026#34;\n  \u0026#34;Wednesday\u0026#34;\n  \u0026#34;Weekend\u0026#34;\n    ScheduleEntry_Status   (Appears on:RedisPatchSchedule_Status)      Field Description      dayOfWeek  ScheduleEntryStatusDayOfWeek     DayOfWeek: Day of the week when a cache can be patched.\n    maintenanceWindow  string    MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.\n    startHourUtc  int    StartHourUtc: Start hour after which cache patching can start.\n    ScheduleEntry_StatusARM   (Appears on:ScheduleEntries_StatusARM)      Field Description      dayOfWeek  ScheduleEntryStatusDayOfWeek     DayOfWeek: Day of the week when a cache can be patched.\n    maintenanceWindow  string    MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.\n    startHourUtc  int    StartHourUtc: Start hour after which cache patching can start.\n    Sku   (Appears on:Redis_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).\n    family  SkuFamily     Family: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).\n    name  SkuName     Name: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium).\n    SkuARM   (Appears on:RedisCreatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Cache.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).\n    family  SkuFamily     Family: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).\n    name  SkuName     Name: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium).\n    SkuFamily (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;C\u0026#34;\n  \u0026#34;P\u0026#34;\n    SkuName (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusFamily (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;C\u0026#34;\n  \u0026#34;P\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:RedisResource_Status)      Field Description      capacity  int    Capacity: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).\n    family  SkuStatusFamily     Family: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).\n    name  SkuStatusName     Name: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)\n    Sku_StatusARM   (Appears on:RedisProperties_StatusARM)      Field Description      capacity  int    Capacity: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).\n    family  SkuStatusFamily     Family: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).\n    name  SkuStatusName     Name: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)\n     "},{"id":23,"href":"/azure-service-operator/reference/cache.v1beta20210301/","title":"cache.azure.com/v1beta20210301","section":"References","content":"cache.azure.com/v1beta20210301  Package v1beta20210301 contains API Schema definitions for the cache v1beta20210301 API group\n Resource Types:  ClusterPropertiesARM   (Appears on:RedisEnterprise_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/ClusterProperties\n    Field Description      minimumTlsVersion  ClusterPropertiesMinimumTlsVersion     MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. \u0026lsquo;1.2\u0026rsquo;.\n    ClusterPropertiesMinimumTlsVersion (string alias)  (Appears on:ClusterPropertiesARM, RedisEnterprise_Spec)      Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    ClusterPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status)      Value Description   \u0026#34;1.0\u0026#34;\n  \u0026#34;1.1\u0026#34;\n  \u0026#34;1.2\u0026#34;\n    ClusterProperties_StatusARM   (Appears on:Cluster_StatusARM)      Field Description      hostName  string    HostName: DNS name of the cluster endpoint\n    minimumTlsVersion  ClusterPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. \u0026lsquo;1.2\u0026rsquo;\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connections associated with the specified RedisEnterprise cluster\n    provisioningState  ProvisioningState_Status     ProvisioningState: Current provisioning status of the cluster\n    redisVersion  string    RedisVersion: Version of redis the cluster supports, e.g. \u0026lsquo;6\u0026rsquo;\n    resourceState  ResourceState_Status     ResourceState: Current resource status of the cluster\n    Cluster_Status   (Appears on:RedisEnterprise)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    hostName  string    HostName: DNS name of the cluster endpoint\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  ClusterPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. \u0026lsquo;1.2\u0026rsquo;\n    name  string    Name: The name of the resource\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connections associated with the specified RedisEnterprise cluster\n    provisioningState  ProvisioningState_Status     ProvisioningState: Current provisioning status of the cluster\n    redisVersion  string    RedisVersion: Version of redis the cluster supports, e.g. \u0026lsquo;6\u0026rsquo;\n    resourceState  ResourceState_Status     ResourceState: Current resource status of the cluster\n    sku  Sku_Status     Sku: The SKU to create, which affects price, performance, and features.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    zones  []string    Zones: The Availability Zones where this cluster will be deployed.\n    Cluster_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  ClusterProperties_StatusARM     Properties: Other properties of the cluster.\n    sku  Sku_StatusARM     Sku: The SKU to create, which affects price, performance, and features.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    zones  []string    Zones: The Availability Zones where this cluster will be deployed.\n    DatabasePropertiesARM   (Appears on:RedisEnterpriseDatabases_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/DatabaseProperties\n    Field Description      clientProtocol  DatabasePropertiesClientProtocol     ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.\n    clusteringPolicy  DatabasePropertiesClusteringPolicy     ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.\n    evictionPolicy  DatabasePropertiesEvictionPolicy     EvictionPolicy: Redis eviction policy - default is VolatileLRU.\n    modules  []ModuleARM     Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.\n    persistence  PersistenceARM     Persistence: Persistence-related configuration for the RedisEnterprise database\n    port  int    Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.\n    DatabasePropertiesClientProtocol (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)      Value Description   \u0026#34;Encrypted\u0026#34;\n  \u0026#34;Plaintext\u0026#34;\n    DatabasePropertiesClusteringPolicy (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)      Value Description   \u0026#34;EnterpriseCluster\u0026#34;\n  \u0026#34;OSSCluster\u0026#34;\n    DatabasePropertiesEvictionPolicy (string alias)  (Appears on:DatabasePropertiesARM, RedisEnterpriseDatabases_Spec)      Value Description   \u0026#34;AllKeysLFU\u0026#34;\n  \u0026#34;AllKeysLRU\u0026#34;\n  \u0026#34;AllKeysRandom\u0026#34;\n  \u0026#34;NoEviction\u0026#34;\n  \u0026#34;VolatileLFU\u0026#34;\n  \u0026#34;VolatileLRU\u0026#34;\n  \u0026#34;VolatileRandom\u0026#34;\n  \u0026#34;VolatileTTL\u0026#34;\n    DatabasePropertiesStatusClientProtocol (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)      Value Description   \u0026#34;Encrypted\u0026#34;\n  \u0026#34;Plaintext\u0026#34;\n    DatabasePropertiesStatusClusteringPolicy (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)      Value Description   \u0026#34;EnterpriseCluster\u0026#34;\n  \u0026#34;OSSCluster\u0026#34;\n    DatabasePropertiesStatusEvictionPolicy (string alias)  (Appears on:DatabaseProperties_StatusARM, Database_Status)      Value Description   \u0026#34;AllKeysLFU\u0026#34;\n  \u0026#34;AllKeysLRU\u0026#34;\n  \u0026#34;AllKeysRandom\u0026#34;\n  \u0026#34;NoEviction\u0026#34;\n  \u0026#34;VolatileLFU\u0026#34;\n  \u0026#34;VolatileLRU\u0026#34;\n  \u0026#34;VolatileRandom\u0026#34;\n  \u0026#34;VolatileTTL\u0026#34;\n    DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)      Field Description      clientProtocol  DatabasePropertiesStatusClientProtocol     ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.\n    clusteringPolicy  DatabasePropertiesStatusClusteringPolicy     ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.\n    evictionPolicy  DatabasePropertiesStatusEvictionPolicy     EvictionPolicy: Redis eviction policy - default is VolatileLRU\n    modules  []Module_StatusARM     Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.\n    persistence  Persistence_StatusARM     Persistence: Persistence settings\n    port  int    Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.\n    provisioningState  ProvisioningState_Status     ProvisioningState: Current provisioning status of the database\n    resourceState  ResourceState_Status     ResourceState: Current resource status of the database\n    Database_Status   (Appears on:RedisEnterpriseDatabase)      Field Description      clientProtocol  DatabasePropertiesStatusClientProtocol     ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.\n    clusteringPolicy  DatabasePropertiesStatusClusteringPolicy     ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    evictionPolicy  DatabasePropertiesStatusEvictionPolicy     EvictionPolicy: Redis eviction policy - default is VolatileLRU\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    modules  []Module_Status     Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.\n    name  string    Name: The name of the resource\n    persistence  Persistence_Status     Persistence: Persistence settings\n    port  int    Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.\n    provisioningState  ProvisioningState_Status     ProvisioningState: Current provisioning status of the database\n    resourceState  ResourceState_Status     ResourceState: Current resource status of the database\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Database_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  DatabaseProperties_StatusARM     Properties: Other properties of the database.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Module   (Appears on:RedisEnterpriseDatabases_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Module\n    Field Description      args  string    Args: Configuration options for the module, e.g. \u0026lsquo;ERROR_RATE 0.00 INITIAL_SIZE 400\u0026rsquo;.\n    name  string    Name: The name of the module, e.g. \u0026lsquo;RedisBloom\u0026rsquo;, \u0026lsquo;RediSearch\u0026rsquo;, \u0026lsquo;RedisTimeSeries\u0026rsquo;\n    ModuleARM   (Appears on:DatabasePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Module\n    Field Description      args  string    Args: Configuration options for the module, e.g. \u0026lsquo;ERROR_RATE 0.00 INITIAL_SIZE 400\u0026rsquo;.\n    name  string    Name: The name of the module, e.g. \u0026lsquo;RedisBloom\u0026rsquo;, \u0026lsquo;RediSearch\u0026rsquo;, \u0026lsquo;RedisTimeSeries\u0026rsquo;\n    Module_Status   (Appears on:Database_Status)      Field Description      args  string    Args: Configuration options for the module, e.g. \u0026lsquo;ERROR_RATE 0.00 INITIAL_SIZE 400\u0026rsquo;.\n    name  string    Name: The name of the module, e.g. \u0026lsquo;RedisBloom\u0026rsquo;, \u0026lsquo;RediSearch\u0026rsquo;, \u0026lsquo;RedisTimeSeries\u0026rsquo;\n    version  string    Version: The version of the module, e.g. \u0026lsquo;1.0\u0026rsquo;.\n    Module_StatusARM   (Appears on:DatabaseProperties_StatusARM)      Field Description      args  string    Args: Configuration options for the module, e.g. \u0026lsquo;ERROR_RATE 0.00 INITIAL_SIZE 400\u0026rsquo;.\n    name  string    Name: The name of the module, e.g. \u0026lsquo;RedisBloom\u0026rsquo;, \u0026lsquo;RediSearch\u0026rsquo;, \u0026lsquo;RedisTimeSeries\u0026rsquo;\n    version  string    Version: The version of the module, e.g. \u0026lsquo;1.0\u0026rsquo;.\n    Persistence   (Appears on:RedisEnterpriseDatabases_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Persistence\n    Field Description      aofEnabled  bool    AofEnabled: Sets whether AOF is enabled.\n    aofFrequency  PersistenceAofFrequency     AofFrequency: Sets the frequency at which data is written to disk.\n    rdbEnabled  bool    RdbEnabled: Sets whether RDB is enabled.\n    rdbFrequency  PersistenceRdbFrequency     RdbFrequency: Sets the frequency at which a snapshot of the database is created.\n    PersistenceARM   (Appears on:DatabasePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Persistence\n    Field Description      aofEnabled  bool    AofEnabled: Sets whether AOF is enabled.\n    aofFrequency  PersistenceAofFrequency     AofFrequency: Sets the frequency at which data is written to disk.\n    rdbEnabled  bool    RdbEnabled: Sets whether RDB is enabled.\n    rdbFrequency  PersistenceRdbFrequency     RdbFrequency: Sets the frequency at which a snapshot of the database is created.\n    PersistenceAofFrequency (string alias)  (Appears on:Persistence, PersistenceARM)      Value Description   \u0026#34;1s\u0026#34;\n  \u0026#34;always\u0026#34;\n    PersistenceRdbFrequency (string alias)  (Appears on:Persistence, PersistenceARM)      Value Description   \u0026#34;12h\u0026#34;\n  \u0026#34;1h\u0026#34;\n  \u0026#34;6h\u0026#34;\n    PersistenceStatusAofFrequency (string alias)  (Appears on:Persistence_Status, Persistence_StatusARM)      Value Description   \u0026#34;1s\u0026#34;\n  \u0026#34;always\u0026#34;\n    PersistenceStatusRdbFrequency (string alias)  (Appears on:Persistence_Status, Persistence_StatusARM)      Value Description   \u0026#34;12h\u0026#34;\n  \u0026#34;1h\u0026#34;\n  \u0026#34;6h\u0026#34;\n    Persistence_Status   (Appears on:Database_Status)      Field Description      aofEnabled  bool    AofEnabled: Sets whether AOF is enabled.\n    aofFrequency  PersistenceStatusAofFrequency     AofFrequency: Sets the frequency at which data is written to disk.\n    rdbEnabled  bool    RdbEnabled: Sets whether RDB is enabled.\n    rdbFrequency  PersistenceStatusRdbFrequency     RdbFrequency: Sets the frequency at which a snapshot of the database is created.\n    Persistence_StatusARM   (Appears on:DatabaseProperties_StatusARM)      Field Description      aofEnabled  bool    AofEnabled: Sets whether AOF is enabled.\n    aofFrequency  PersistenceStatusAofFrequency     AofFrequency: Sets the frequency at which data is written to disk.\n    rdbEnabled  bool    RdbEnabled: Sets whether RDB is enabled.\n    rdbFrequency  PersistenceStatusRdbFrequency     RdbFrequency: Sets the frequency at which a snapshot of the database is created.\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:Cluster_Status)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:ClusterProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    ProvisioningState_Status (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status, DatabaseProperties_StatusARM, Database_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RedisEnterprise   Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/resourceDefinitions/redisEnterprise\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisEnterprise_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  ClusterPropertiesMinimumTlsVersion     MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. \u0026lsquo;1.2\u0026rsquo;.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  Sku     Sku: SKU parameters supplied to the create RedisEnterprise operation.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The Availability Zones where this cluster will be deployed.\n       status  Cluster_Status         RedisEnterpriseDatabase   Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/resourceDefinitions/redisEnterprise_databases\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  RedisEnterpriseDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clientProtocol  DatabasePropertiesClientProtocol     ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.\n    clusteringPolicy  DatabasePropertiesClusteringPolicy     ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.\n    evictionPolicy  DatabasePropertiesEvictionPolicy     EvictionPolicy: Redis eviction policy - default is VolatileLRU.\n    location  string    Location: Location to deploy resource to\n    modules  []Module     Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/RedisEnterprise resource\n    persistence  Persistence     Persistence: Persistence-related configuration for the RedisEnterprise database\n    port  int    Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Database_Status         RedisEnterpriseDatabasesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-03-01\u0026#34;\n    RedisEnterpriseDatabases_Spec   (Appears on:RedisEnterpriseDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clientProtocol  DatabasePropertiesClientProtocol     ClientProtocol: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.\n    clusteringPolicy  DatabasePropertiesClusteringPolicy     ClusteringPolicy: Clustering policy - default is OSSCluster. Specified at create time.\n    evictionPolicy  DatabasePropertiesEvictionPolicy     EvictionPolicy: Redis eviction policy - default is VolatileLRU.\n    location  string    Location: Location to deploy resource to\n    modules  []Module     Modules: Optional set of redis modules to enable in this database - modules can only be added at creation time.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a cache.azure.com/RedisEnterprise resource\n    persistence  Persistence     Persistence: Persistence-related configuration for the RedisEnterprise database\n    port  int    Port: TCP port of the database endpoint. Specified at create time. Defaults to an available port.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisEnterpriseDatabases_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the database.\n    properties  DatabasePropertiesARM     Properties: Properties of RedisEnterprise databases, as opposed to general resource properties like location, tags\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    RedisEnterpriseSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-03-01\u0026#34;\n    RedisEnterprise_Spec   (Appears on:RedisEnterprise)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  ClusterPropertiesMinimumTlsVersion     MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. \u0026lsquo;1.2\u0026rsquo;.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  Sku     Sku: SKU parameters supplied to the create RedisEnterprise operation.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The Availability Zones where this cluster will be deployed.\n    RedisEnterprise_SpecARM       Field Description      location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the RedisEnterprise cluster.\n    properties  ClusterPropertiesARM     Properties: Properties of RedisEnterprise clusters, as opposed to general resource properties like location, tags\n    sku  SkuARM     Sku: SKU parameters supplied to the create RedisEnterprise operation.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The Availability Zones where this cluster will be deployed.\n    ResourceState_Status (string alias)  (Appears on:ClusterProperties_StatusARM, Cluster_Status, DatabaseProperties_StatusARM, Database_Status)      Value Description   \u0026#34;CreateFailed\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;DeleteFailed\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;DisableFailed\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;Disabling\u0026#34;\n  \u0026#34;EnableFailed\u0026#34;\n  \u0026#34;Enabling\u0026#34;\n  \u0026#34;Running\u0026#34;\n  \u0026#34;UpdateFailed\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    Sku   (Appears on:RedisEnterprise_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, \u0026hellip;) for Enterprise SKUs and (3, 9, 15, \u0026hellip;) for Flash SKUs.\n    name  SkuName     Name: The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.).\n    SkuARM   (Appears on:RedisEnterprise_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-03-01/Microsoft.Cache.Enterprise.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, \u0026hellip;) for Enterprise SKUs and (3, 9, 15, \u0026hellip;) for Flash SKUs.\n    name  SkuName     Name: The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.).\n    SkuName (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Enterprise_E10\u0026#34;\n  \u0026#34;Enterprise_E100\u0026#34;\n  \u0026#34;Enterprise_E20\u0026#34;\n  \u0026#34;Enterprise_E50\u0026#34;\n  \u0026#34;EnterpriseFlash_F1500\u0026#34;\n  \u0026#34;EnterpriseFlash_F300\u0026#34;\n  \u0026#34;EnterpriseFlash_F700\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Enterprise_E10\u0026#34;\n  \u0026#34;Enterprise_E100\u0026#34;\n  \u0026#34;Enterprise_E20\u0026#34;\n  \u0026#34;Enterprise_E50\u0026#34;\n  \u0026#34;EnterpriseFlash_F1500\u0026#34;\n  \u0026#34;EnterpriseFlash_F300\u0026#34;\n  \u0026#34;EnterpriseFlash_F700\u0026#34;\n    Sku_Status   (Appears on:Cluster_Status)      Field Description      capacity  int    Capacity: The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, \u0026hellip;) for Enterprise SKUs and (3, 9, 15, \u0026hellip;) for Flash SKUs.\n    name  SkuStatusName     Name: The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)\n    Sku_StatusARM   (Appears on:Cluster_StatusARM)      Field Description      capacity  int    Capacity: The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, \u0026hellip;) for Enterprise SKUs and (3, 9, 15, \u0026hellip;) for Flash SKUs.\n    name  SkuStatusName     Name: The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)\n     "},{"id":24,"href":"/azure-service-operator/design/versioning/case-studies/chained-storage-versions/","title":"Chained Storage Versions","section":"Case Studies","content":"Case Study - Chained Storage Versions #  This case study explores the alternative solution of using a chained storage versions. We update the storage schema of each resource each release of the service operator. We\u0026rsquo;ll keep the storage version up to date with the latest GA release of each resource. Older storage versions are retained, both as intermediate steps in the hub-and-spoke conversions, and to allow upgrades.\nFor the purposes of discussion, we\u0026rsquo;ll be following the version by version evolution of a theoretical ARM service that provides customer resource management (CRM) services. Synthetic examples are used to allow focus on specific scenarios one by one, providing motivation for specific features.\nExamples shown are deliberately simplified in order to focus, and therefore minutiae should be considered motivational, not binding. Reference the formal specification for precise details.\nVersion 2011-01-01 - Initial Release #  The initial release of the CRM includes a simple definition to capture information about a particular person:\npackage v20110101 type Person struct { Id Guid FirstName string LastName string } We\u0026rsquo;re not reusing the API version directly as our storage version. Instead, we define a separate (independent) type with a similar structure:\npackage v20110101storage type Person struct { PropertyBag FirstName *string Id *Guid LastName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Every property is marked as optional. Optionality doesn\u0026rsquo;t matter at this point, as we currently have only single version of the API. However, as we\u0026rsquo;ll see with later versions, forward and backward compatibility issues would arise if they were not optional.\nThe PropertyBag type provides storage for other properties, plus helper methods. It is always included in storage versions, but in this case will be unused. The method Hub() marks this version as the storage schema.\nStorage Conversion #  We need to implement the Convertible interface to allow conversion to and from the storage version:\npackage v20110101 import storage \u0026#34;v20110101storage\u0026#34; // ConvertTo converts this Person to the Hub storage version. func (person *Person) ConvertTo(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertToStorage(p) } // ConvertToStorage converts this Person to a storage version func (person *Person) ConvertToStorage(dest storage.Person) error { // Copy simple properties across  dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName return nil } // ConvertFrom converts from the Hub storage version func (person *Person) ConvertFrom(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertFromStorage(p) } // ConvertFrom converts from a storage version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { // Copy simple properties across  person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName return nil } Conversion is separated into two methods (e.g. ConvertFrom() and ConvertFromStorage()) to allow for reuse of the ConvertFromStorage() methods for conversion of nested complex properties, as we\u0026rsquo;ll see later on.\nThese methods will be automatically generated in order to handle the majority of the required conversions. Since they never change, the ConvertTo() and ConvertFrom() methods are omitted from the following discussion.\nVersion Map #  With only two classes, our version map is simple and straightforward.\nVersion 2012-02-02 - No Change #  In this release of the CRM service, there are no changes made to the structure of Person:\npackage v20120202 type Person struct { Id Guid FirstName string LastName string } Storage Conversion #  The existing conversion between the v20110101 API version and v20110101storage version is retained, preserving in-place a conversion that\u0026rsquo;s already known to be reliable.\nThe new API version 20120202 has a matching storage version v20120202storage which becomes the authoratative storage version for the CRD. This conversion is identical to the earlier version.\nAn additional bidirectional conversion between v20110101storage and v20120202storage is also generated. Since both versions have the same structure, this is also trivial.\nVersion Map #  Our version map diagram is becoming useful for seeing the relationship between versions:\nObserve that the prior storage version is still shown, with a bidirectional conversion with the current storage version. Existing users who upgrade their service operator will have their storage upgraded using this conversion. The conversion between storage versions will be generated with the same approach, and with the same structure, as all our other conversions.\nVersion 2013-03-03 - New Property #  In response to customer feedback, this release of the CRM adds a new property to Person to allow a persons middle name to be stored:\npackage v20130303 type Person struct { Id Guid FirstName string MiddleName string // *** New ***  LastName string } The new storage version, based on this version, is what you\u0026rsquo;d expect:\npackage v20130303storage type Person struct { PropertyBag Id *Guid FirstName *string MiddleName *string // *** New storage ***  LastName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversions #  Conversions to and from earlier versions of Person are unchanged, as those versions do not support MiddleName. For the new version of Person, the new property will be included in the generated methods:\npackage v20130303 import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName dest.MiddleName = person.MiddleName // *** New property copied too ***  return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName person.MiddleName = source.MiddleName // *** New property copied too ***  return nil } The new property is shown at the end of the list not because it is new, but because values are copied across in alphabetical order. This is to guarantee that code generation is deterministic and generates the same result each time.\nConversion methods for earlier API versions of Person are unchanged, as they still convert to the same storage versions.\nA new bidirectional conversion between v20120202storage and v20130303storage versions is introduced. When down-converting to v20120202storage, the MiddleName property is stashed in the property bag; when up-converting to v20130303storage, the PropertyBag is checked to see if it contains MiddleName:\npackage v20120202storage import vnext \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the storage Hub version. func (person *Person) ConvertToStorage(dest vnext.Person) error { dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName if middleName, ok := PropertyBag.ReadString(\u0026#34;MiddleName\u0026#34;); ok { dest.MiddleName = middleName // *** New property copied too ***  } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(vnext storage.Person) error { person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName person.WriteString(\u0026#34;MiddleName\u0026#34;, source.MiddleName) return nil } Version Map #  A graph of our conversions now starts to show the chaining between storage versions that gives the name to this approach. Bidirectional conversions to and from earlier versions of storage allow conversion between any pairs of API versions.\nHow often are new properties added? #  At the time of writing, there were 381 version-to-version changes where the only change between versions was solely the addition of new properties. Of those, 249 were adding just a single property, and 71 added two properties.\nVersion 2014-04-04 Preview - Schema Change #  To allow the CRM to better support cultures that have differing ideas about how names are written, a preview release of the service modifies the schema considerably:\npackage v20140404preview type Person struct { Id Guid // ** Only Id is unchanged ***  FullName string FamilyName string KnownAs string } This is a preview version, but it still gets a dedicated storage version, v20140404previewStorage. The official hub version is left unchanged as v20130303storage.\nStorage Conversion #  The new properties don\u0026rsquo;t exist on prior storage versions, so the generated ConvertToStorage() and ConvertFromStorage() methods used to convert between v20130303storage and v20140404previewStorage must use the PropertyBag to carry the properties:\npackage v20140404previewStorage import vprior \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest vprior.Person) error { dest.Id = person.Id // *** Store in the property bag ***  dest.WriteString(\u0026#34;FamilyName\u0026#34;, person.FamilyName) dest.WriteString(\u0026#34;FullName\u0026#34;, person.FullName) dest.WriteString(\u0026#34;KnownAs\u0026#34;, person.KnownAs) return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source vprior.Person) error { person.Id = source.Id // *** Read from the property bag ***  if familyName, ok := source.ReadString(\u0026#34;FamilyName\u0026#34;);ok { person.FamilyName = familyName } if fullName, ok := source.ReadString(\u0026#34;FullName\u0026#34;); ok { person.FullName = fullName } if knownAs, ok := source.ReadString(\u0026#34;KnownAs\u0026#34;); ok { person.KnownAs = knownAs } return nil } In the example above, we show first copying all the directly supported properties, then using the property bag. We may not separate these steps in the generated code.\nThese methods are always generated on the storage versions furthest from the hub version, converting towards that version. In the usual case we\u0026rsquo;ll use the import name vnext (or equivalent) but in this case, given we have a preview version, we\u0026rsquo;ll use vprior to emphasize the direction of conversion.\nThis provides round-trip support for the preview release, but does not provide backward compatibility with prior official releases.\nThe storage version of a Person written by the preview release will have no values for FirstName, LastName, and MiddleName. Similarly, an older version won\u0026rsquo;t have FamilyName, FullName nor KnownAs.\nThese kinds of cross-version conversions cannot be automatically generated as they require more understanding the semantic changes between versions.\nTo allow injection of manual conversion steps, interfaces will be generated as follows:\npackage v20130303storage // AssignableToPersonV20130303 provides methods to augment conversion to storage type AssignableToPersonV20130303 interface { AssignToV20130303(person Person) error } // AssignableFromPersonV20130303 provides methods to augment conversion from storage type AssignableFromPersonV20130303 interface { AssignFromV20130303(person Person) error } This interface can be optionally implemented by API versions (spoke types) to augment the generated conversion.\n Outstanding Issue: The interfaces and methods shown above include the version number of the target in order to disambiguate between versions. This is necessitated by having multiple storage versions in flight at the same time, and needing to avoid name collisions. Contrast this with the rolling storage version case study where there\u0026rsquo;s only one active storage version at a time.\nIs there a way we could structure this approach to avoid the need for version numbers in method names?\n The generated ConvertToStorage() and ConvertFromStorage() methods will test for the presence of this interface and will call it if available:\npackage v20140404preview import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { // … property copying and property bag use elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableToPersonV20130303); ok { assignable.AssignToV20130303(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { // … property copying and property bag use elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFromPersonV20130303); ok { assignable.AssignFromV20130303(source) } return nil } Version Map #  Preview releases, by definition, include unstable changes that may differ once the feature reaches general availability.\nWe don\u0026rsquo;t want to make changes to our storage versions based on these speculative changes, so we handle persistence of the preview release with the existing storage version, by way of a down-conversion to v20130303storage:\nVersion 2014-04-04 - Schema Change #  Based on feedback generated by the preview release, the CRM schema changes have gone ahead with a few minor changes:\npackage v20140404 type Person struct { Id Guid LegalName string // *** Was FullName in preview ***  FamilyName string KnownAs string AlphaKey string // *** Added after preview *** } As usual, a custom storage version is generated:\npackage v20140404storage type Person struct { PropertyBag AlphaKey *string FamilyName *string LegalName *string Id *Guid KnownAs *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The ConvertToStorage() and ConvertFromStorage() methods between the API version v20140404 and the storage version v20140404storage are trivial and not shown.\nFor conversions between storage versions, the preview storage version is not considered - it\u0026rsquo;s out of the main line of processing. Instead, we have a bidirectional conversion between v20130303storage and v20140404storage. As usual, the conversion is implemented further away from the (new) hub version, on v20130303storage.\nWith a large difference in structure between the two versions, the PropertyBag gets a workout:\npackage v20130303storage import vnext \u0026#34;v20140404storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest vnext.Person) error { dest.Id = person.Id dest.WriteString(\u0026#34;FirstName\u0026#34;, person.FirstName) dest.WriteString(\u0026#34;LastName\u0026#34;, person.LastName) dest.WriteString(\u0026#34;MiddleName\u0026#34;, person.MiddleName) if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source vnext.Person) error { person.Id = source.Id if firstName, ok := source.ReadString(\u0026#34;FirstName\u0026#34;); ok { person.FirstName = firstName } if middleName, ok := source.ReadString(\u0026#34;MiddleName\u0026#34;); ok { person.MiddleName = middleName } if lastName, ok := source.ReadString(\u0026#34;LastName\u0026#34;); ok { person.LastName = lastName } // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFromPersonV20140404); ok { assignable.AssignFromV20140404(source) } return nil } To interoperate between different versions of Person, we need to add manual conversions between the storage versions where the schema change occcurs.\nWhen we are converting from v20130303storage up to v20140404storage, we need to use FirstName, LastName and MiddleName to populate AlphaKey, FamilyName, KnownAs and LegalName.\nConversely, When we are converting from v20140404storage down to v20130303storage, we need to use AlphaKey, FamilyName, KnownAs and LegalName to populate FirstName, LastName and MiddleName.\nThese conversions occur in addition to use of the PropertyBag to store those same properties.\npackage v20130303storage import vnext \u0026#34;v20140404storage\u0026#34; func (person *Person) AssignToV20140404(dest vnext.Person) error { if dest.KnownAs == \u0026#34;\u0026#34; { dest.KnownAs = person.FirstName } if dest.FamilyName == \u0026#34;\u0026#34; { dest.FamilyName = person.LastName } if dest.LegalName == \u0026#34;\u0026#34; { dest.LegalName = person.FirstName +\u0026#34; \u0026#34;+ person.MiddleName + \u0026#34; \u0026#34; + person.LastName } if dest.AlphaKey == \u0026#34;\u0026#34; { dest.AlphaKey = person.lastName } } func (person *Person) AssignFrom(source vNext.Person) error { if person.FirstName == \u0026#34;\u0026#34; { person.FirstName = source.KnownAs } if person.LastName == \u0026#34;\u0026#34; { person.LastName = source.FamilyName } if person.MiddleName == \u0026#34;\u0026#34; { person.MiddleName = // ... elided ...  } } For each property we need to consider that it might have already been populated with a more accurate value from the PropertyBag, so we only synthesize values when needed.\nVersion Map #  We can see in our version map that the preview release is still supported, but the associated storage version is not in the main chain of interconvertible versions.\nVersion 2015-05-05 - Property Rename #  The term AlphaKey was found to be confusing to users, so in this release of the API it is renamed to SortKey. This better reflects its purpose of sorting names together (e.g. so that the family name McDonald gets sorted as though spelt MacDonald).\npackage v20150505 type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string // *** Used to be AlphaKey *** } As expected, a matching storage version is also generated:\npackage v20150505storage type Person struct { PropertyBag Id *Guid LegalName *string FamilyName *string KnownAs *string SortKey *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  By documenting the renames in the configuration of our code generator, this rename will be automatically handled within the ConvertTo() and ConvertFrom() methods that are generated between the v20140404storage and v20150505storage versions:\npackage v20140404 import vNext \u0026#34;v20150505storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest vNext.Person) error { dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Rename is automatically handled ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source vNext.Person) error { person.AlphaKey = source.SortKey // *** Rename is automatically handled ***  person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } While SortKey appears at the end of the list of assignments in the first method, the mirror assignment of AlphaKey appears at the start of the list in the second method. In both cases the properties are shown in alphabetical order.\nVersion Map #  Here we see our horizon policy coming into effect, with support for version 2011-01-01 being dropped in this release:\nFor users staying up to date with releases of the service operator, this will likely have no effect - but users still using the original release (storage version v2011-01-01storage) will need to update to an intermediate release before adopting this version.\nAn alternative approach would be to always support conversion from every storage version, even if the related API version has been dropped:\nThis would allow users to upgrade from almost any older version of the service operator. (\u0026ldquo;Almost\u0026rdquo; because we would still have older versions drop off when they are retired by ARM.)\nHow often do property renames happen? #  At the time of writing, there were nearly 60 cases of properties being renamed between versions; 17 of these involved changes to letter case alone. (Count is somewhat inexact because renaming was manually inferred from the similarity of names.)\nVersion 2016-06-06 - Complex Properties #  With some customers expressing a desire to send physical mail to their customers, this release extends the API with mailing address for each person.\npackage v20160606 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress Address } We now have two structs that make up our storage version:\npackage v20160606storage type Person struct { PropertyBag Id *Guid LegalName *string FamilyName *string KnownAs *string MailingAddress *Address // *** New ***  SortKey *string } type Address struct { PropertyBag City *string Street *string } // Hub marks this type of Person as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The required ConvertToStorage() and ConvertFromStorage() methods between the API version v20160606 and the storage version v201606061 get generated in the expected way:\npackage v20160606 import storage \u0026#34;v20160606storage\u0026#34; // ConvertTo converts this Person to the Storage version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Copy the mailing address over too ***  address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version func (address *Address) ConvertToStorage(dest storage.Address) error { dest.City = address.City dest.Street = address.Street if assignable, ok := person.(AssignableToAddress); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.AlphaKey = source.SortKey person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName // *** Copy the mailing address over too ***  if storage.MailingAddress != nil { address := \u0026amp;Address{} err := address.ConvertFromStorage(storage.Address) person.MailingAddress = address } if assignable, ok := person.(AssignableFromPerson); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } // ConvertFromStorage converts from the hub storage version to this version func (address *Address) ConvertFromStorage(source storage.Address) error { address.Street = source.Street address.City = source.City if assignable, ok := person.(AssignableFromAddress); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } We\u0026rsquo;re recursively applying the same conversion pattern to Address as we have already been using for Person. This scales to any level of nesting without the code becoming unweildy.\nVersion Map #  Again we see the oldest version drop out, allowing users of the three prior versions of the service operator to upgrade cleanly:\nVersion 2017-07-07 - Optionality changes #  In the 2016-06-06 version of the API, the MailingAddress property was mandatory. Since not everyone has a mailing address (some people receive no physical mail), this is now being made optional.\nThe change to the API declarations is simple:\npackage v20170707 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress *Address // *** Was mandatory, now optional *** } Storage Conversion #  The storage versions are identical to those used previously and are not shown here.\nWhat does change is the ConvertToStorage() method, which now needs to handle the case where the MailingAddress has not been included:\npackage v20170707 import storage \u0026#34;v20170707storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.SortKey = person.AlphaKey dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName // *** Need to check whether we have a mailing address to copy ***  if person.MailingAddress != nil { address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we instead had an optional field that became required in a later version of the API, the generated code for ConvertToStorage() would become simpler as the check for nil would not be needed.\nVersion Map #  How often does optionality change? #  At the time of writing, there are 100 version-to-version changes where fields became optional in the later version of the API, and 99 version-to-version changes where fields became required.\nVersion 2018-08-08 - Extending nested properties #  Defining an address simply as Street and City has been found to be overly simplistic, so this release makes changes to allow a more flexible approach.\npackage v20180808 type Address struct { // FullAddress shows the entire address as should be used on postage  FullAddress string City string Country string PostCode string } As before, the storage version is generated to match, with prior conversions using the property bag to store additional properties:\npackage v20180808storage type Address struct { PropertyBag City *string Country *string FullAddress *string PostCode *string } These changes are entirely similar to those previously covered in version 2014-04-04, above.\nVersion Map #  In this release, we see that support for both 2014-04-04 and the preview version 2014-04-04preview has been dropped:\nUsers still running earlier releases of the service operator that are using 2014-04-04 or earlier will need to install an intermediate release in order to upgrade to this one.\nVersion 2019-09-09 - Changing types #  Realizing that some people get deliveries to places that don\u0026rsquo;t appear in any formal database of addresses, in this release the name of the type changes to Location and location coordinates are added:\npackage v20190909 type Location struct { FullAddress string City string Country string PostCode string Latitude double Longitude double } The storage version gets generated in a straightforward way:\npackage v20190909storage type Location struct { PropertyBag City *string Country *string FullAddress *string Latitude *double Longitude *double PostCode *string } Storage Conversion #  The conversion methods need to change as well. If we configure metadata detailing the rename of the type (as we did for properties in version 2015-05-05), we can generate the required conversions automatically:\npackage v20180808storage // *** Updated storage version *** import vNext \u0026#34;v20190909storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest vNext.Person) error { // ... elided properties ...  if person.MailingAddress != nil { address := \u0026amp;vNext.Location{} // ** New Type ***  err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version // ** Different parameter type for dest *** func (address *Address) ConvertToStorage(dest vNext.Location) error { dest.Street = address.Street dest.City = address.City // *** Interface has been renamed too **  if assignable, ok := person.(AssignableToLocation); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we don\u0026rsquo;t include metadata to capture type renames, the conversion can be manually injected by implementing the AssignableToLocation interface.\nVersion Map #  How often do properties change their type? #  At the time of writing, there are 160 version-to-version changes where the type of the property changes. This count excludes cases where an optional property become mandatory, or vice versa.\n"},{"id":25,"href":"/azure-service-operator/design/clarifying-object-structure/","title":"Clarifying object structure","section":"Design \u0026 Specifications","content":"Clarifying object structure #  Today we have resources that look like:\napiVersion: microsoft.storage.infra.azure.com/v1alpha1api20190401 kind: StorageAccount metadata: name: samplekubestorage namespace: default spec: azureName: mykubestorage location: westcentralus kind: BlobStorage sku: name: Standard_LRS owner: name: k8sinfra-sample-rg accessTier: Hot tags: tag1: tag1 tag2: tag2 The problem #  There\u0026rsquo;s no good way with this object structure to differentiate stuff that is for Azure directly, versus stuff that is for the operator. owner almost falls into this category already, but there are other likely upcoming properties that definitely fall into this category:\n SecretConfiguration: details about where/how we should store secrets created by this entity. Credentials: per object credentials used to support CAPZ-like scenarios.  The problem also manifests in Status where ideally we would distinguish between properties from Azure directly (the result of a GET on the resource) and properties that we are presenting. For example, we may want to have a status field for deploymentId documenting the deployment ID used to create the resource, or the error if there was an error. If we do that there\u0026rsquo;s no easy way for the customer to understand that field is provided by ASO and not by Storage.\nProposal #  We introduce an additional level of hierarchy specifically to clarify what is coming or going directly from or to Azure. This is similar to what Crossplane does (see their MySQLServer). Unlike Crossplane though we will push the operator specific properties down a level and leave the Azure properties at the top level.\nOn the spec we could call this something like forOperator or operator, and on the status fromOperator or operator.\nOur structure would then look like:\napiVersion: microsoft.storage.infra.azure.com/v1alpha1api20190401 kind: StorageAccount metadata: name: samplekubestorage namespace: default spec: azureName: mykubestorage location: westcentralus kind: BlobStorage sku: name: Standard_LRS accessTier: Hot tags: tag1: tag1 tag2: tag2 owner: name: k8sinfra-sample-rg operatorSpec: credentials: credentials Similarly, a status might look like:\nstatus: id: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/mykubestorage location: westcentralus kind: BlobStorage sku: name: Standard_LRS accessTier: Hot tags: tag1: tag1 tag2: tag2 operatorStatus: deploymentId: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.Deployments/deployments/1234 goalSeekingState: GoalMet FAQ #  Q: What about the owner field? A: It is such an important field and cuts across both Azure (since it\u0026rsquo;s partially about resource relationships in Azure) and Kubernetes (since it\u0026rsquo;s partially about resource relationships in Kubernetes) so it makes sense to leave it at the top level.\nQ: What about the azureName field? A: It is for Azure, so stays at the top level.\nQ: Do we actually have any properties that need to move TODAY because of this change? A: No, because state and deploymentId are currently resource annotations, not fields in the status, and on the spec the only fields which might belong in operatorSpec are owner and azureName which as per the above FAQ are staying at the top level.\nOpen questions #   What should we call the property which we push things down \u0026ldquo;into\u0026rdquo;? Here are some options:   operator (for both) operatorData (for both) forOperator / fromOperator operatorSpec / operatorStatus ??? / operatorState  "},{"id":26,"href":"/azure-service-operator/contributing/generator-overview/","title":"Code Generator Overview","section":"For Contributors","content":"Code Generator Overview #  Core to Azure Service Operator (ASO) v2 is our code generator. This consumes ARM JSON Schema and Swagger specifications and generates code for each desired resource that works with our generic operator reconciler.\nCode Structure #  Key packages used to structure the code of the generator are as follows:\n   Package Content     astmodel Short for Abstract Syntax Tree Model, this package contains the core data types for defining the Go functions, data types, and methods we generate.   functions Support for generation of individual functions, based on the interface `astmodel.Function   interfaces Support for generation of interface implementations, based on the astmodel.InterfaceImplementer interface   testcases Support for generation of test cases (used to verify our generated code works as expected), based on the astmodel.TestCase interface   astbuilder Intention revealing utility methods for creating the underlying Go abstract syntax tree we serialize as the last step of generation.   codegen The core processing pipeline of the code generator   codegen/pipeline Individual pipeline stages that are composed to form the code generator itself.   test Support methods to make writing tests easier    Directory structure overview #  In this diagram is shown the full directory structure of the ASO code generator, including all the packages named above.\nThe size of each dot reflects the size of the file; the legend in the corner shows the meaning of colour.\nObject Model #  At the core, the code generator works with a rich semantic object model that captures the structure of the resources (and related types) we are generating.\nUnderpinning this object model is the astmodel package.\nThe interface astmodel.Type represents a specific data type. The most widely used implementations of Type fall into a few separate groups:\n  Simple Go types, including PrimitiveType, ArrayType, and MapType.\n  Complex types with internal structure, most notably ObjectType and ResourceType.\n  Wrapper types that provide additional semantics, including OptionalType, ErroredType, FlaggedType and ValidatedType.\n  This list is not exhaustive; other implementations of Type are used within limited scopes. For example, AllOfType and OneOfType represent JSON Schema techniques for creating object definitions via composition.\nUsefully, there is also TypeName which is both a type in itself and an indirect reference to a type defined elsewhere.\nWhen a Type is given a TypeName, it becomes a TypeDefinition and can be emitted as the source code for a Go type definition. A set of many TypeDefinition, each with a unique name is a TypeDefinitionSet.\nBoth ResourceType and ObjectType act as containers, each implementing PropertyContainer, FunctionContainer, and embedding InterfaceImplementer. These do pretty much what you\u0026rsquo;d expect from the names, though the implementations differ between ResourceType and ObjectType. For example, where an ObjectType implements PropertyContainer by providing support for an arbitrary set of properties, ResourceType has only Spec and Status.\nMost implementations of astmodel.Function are found in the functions package. New function implementations should go here; existing implementations are slowly being relocated.\nAll implementations of astmodel.TestCase are found in the testcases package. New test case implementations should go here.\nResources, Objects and other types #  Each distinct resource is represented by a ResourceType. The Spec of each resource is an ObjectType containing a collection of PropertyDefinition values, along with implementations of the Function, and TestCase interfaces. The Status of a resource is a different ObjectType.\nSome properties capture primitive values (strings, integers, and so on), while others are themselves complex ObjectType definitions, forming a hierarchy of information. MetaType wrappers (including OptionalType, and ValidatedType) are used to add semantic information to both properties and to type definitions.\nGenerator Pipeline #  The code generator itself, found in the package codegen, is structured as a pipeline, composed of a series of stages that transform our object model incrementally. All the pipeline stages are found in the subpackage codegen/pipeline.\nOne reason for this is to allow the creation of multiple pipelines (currently we have separate definitions targeting Azure, Crossplane, and for testing) each sharing the majority of their implementation. Another reason is to allow individual pipeline stages to be tested in isolation, though not all existing pipeline stages have tests in this form. New stage implementations should have isolated tests where possible. The helper method RunTestPipeline() is useful here.\nPipeline stages are instances of pipeline.Stage. Each has a factory method that returns a pipeline.Stage instance. In operation, each accepts a pipeline.State containing the current object model and transforms it into a new state, that is passed to the next stage in turn. If a stage returns an error, the pipeline run is aborted. Each State instance is immutable, allowing comparison between states when debugging.\nNew stages should use the NewStage() function. You\u0026rsquo;ll see some older stages that predate a structural change use the deprecated NewLegacyStage() factory instead; these older stages are slowly being migrated and NewLegacyStage() will be deleted when this is complete.\nCode Generation #  Code is generated as a Go abstract syntax tree fragments which are then serialized to files as compilable Go code, forming a part of the operator itself.\nTo make generation easier, our astbuilder package contains a wide variety of helper methods that allow declarative construction of the required tree. We are using the dst package instead of the standard Go core ast package, as it provides better control of comments and whitespace in the final output.\n"},{"id":27,"href":"/azure-service-operator/reference/compute.v1alpha1api20200930/","title":"compute.azure.com/v1alpha1api20200930","section":"References","content":"compute.azure.com/v1alpha1api20200930  Package v1alpha1api20200930 contains API Schema definitions for the compute v1alpha1api20200930 API group\n Resource Types:  CreationData   (Appears on:Disks_Spec, Snapshots_Spec)  Deprecated version of CreationData. Use v1beta20200930.CreationData instead\n    Field Description      createOption  CreationDataCreateOption         galleryImageReference  ImageDiskReference         imageReference  ImageDiskReference         logicalSectorSize  int        sourceResourceReference  genruntime.ResourceReference         sourceUri  string        storageAccountId  string        uploadSizeBytes  int        CreationDataARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Deprecated version of CreationData. Use v1beta20200930.CreationData instead\n    Field Description      createOption  CreationDataCreateOption         galleryImageReference  ImageDiskReferenceARM         imageReference  ImageDiskReferenceARM         logicalSectorSize  int        sourceResourceId  string        sourceUri  string        storageAccountId  string        uploadSizeBytes  int        CreationDataCreateOption (string alias)  (Appears on:CreationData, CreationDataARM)  Deprecated version of CreationDataCreateOption. Use v1beta20200930.CreationDataCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Copy\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n  \u0026#34;Import\u0026#34;\n  \u0026#34;Restore\u0026#34;\n  \u0026#34;Upload\u0026#34;\n    CreationDataStatusCreateOption (string alias)  (Appears on:CreationData_Status, CreationData_StatusARM)  Deprecated version of CreationDataStatusCreateOption. Use v1beta20200930.CreationDataStatusCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Copy\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n  \u0026#34;Import\u0026#34;\n  \u0026#34;Restore\u0026#34;\n  \u0026#34;Upload\u0026#34;\n    CreationData_Status   (Appears on:Disk_Status, Snapshot_Status)  Deprecated version of CreationData_Status. Use v1beta20200930.CreationData_Status instead\n    Field Description      createOption  CreationDataStatusCreateOption         galleryImageReference  ImageDiskReference_Status         imageReference  ImageDiskReference_Status         logicalSectorSize  int        sourceResourceId  string        sourceUniqueId  string        sourceUri  string        storageAccountId  string        uploadSizeBytes  int        CreationData_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)  Deprecated version of CreationData_Status. Use v1beta20200930.CreationData_Status instead\n    Field Description      createOption  CreationDataStatusCreateOption         galleryImageReference  ImageDiskReference_StatusARM         imageReference  ImageDiskReference_StatusARM         logicalSectorSize  int        sourceResourceId  string        sourceUniqueId  string        sourceUri  string        storageAccountId  string        uploadSizeBytes  int        Disk   Deprecated version of Disk. Use v1beta20200930.Disk instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Disks_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    burstingEnabled  bool        creationData  CreationData         diskAccessReference  genruntime.ResourceReference         diskIOPSReadOnly  int        diskIOPSReadWrite  int        diskMBpsReadOnly  int        diskMBpsReadWrite  int        diskSizeGB  int        encryption  Encryption         encryptionSettingsCollection  EncryptionSettingsCollection         extendedLocation  ExtendedLocation         hyperVGeneration  DiskPropertiesHyperVGeneration         location  string        maxShares  int        networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan         sku  DiskSku         tags  map[string]string        tier  string        zones  []string           status  Disk_Status         DiskPropertiesARM   (Appears on:Disks_SpecARM)  Deprecated version of DiskProperties. Use v1beta20200930.DiskProperties instead\n    Field Description      burstingEnabled  bool        creationData  CreationDataARM         diskAccessId  string        diskIOPSReadOnly  int        diskIOPSReadWrite  int        diskMBpsReadOnly  int        diskMBpsReadWrite  int        diskSizeGB  int        encryption  EncryptionARM         encryptionSettingsCollection  EncryptionSettingsCollectionARM         hyperVGeneration  DiskPropertiesHyperVGeneration         maxShares  int        networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType         purchasePlan  PurchasePlanARM         tier  string        DiskPropertiesHyperVGeneration (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)  Deprecated version of DiskPropertiesHyperVGeneration. Use v1beta20200930.DiskPropertiesHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    DiskPropertiesNetworkAccessPolicy (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)  Deprecated version of DiskPropertiesNetworkAccessPolicy. Use v1beta20200930.DiskPropertiesNetworkAccessPolicy instead\n    Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    DiskPropertiesOsType (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)  Deprecated version of DiskPropertiesOsType. Use v1beta20200930.DiskPropertiesOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    DiskPropertiesStatusHyperVGeneration (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status)  Deprecated version of DiskPropertiesStatusHyperVGeneration. Use v1beta20200930.DiskPropertiesStatusHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    DiskPropertiesStatusOsType (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status)  Deprecated version of DiskPropertiesStatusOsType. Use v1beta20200930.DiskPropertiesStatusOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    DiskProperties_StatusARM   (Appears on:Disk_StatusARM)  Deprecated version of DiskProperties_Status. Use v1beta20200930.DiskProperties_Status instead\n    Field Description      burstingEnabled  bool        creationData  CreationData_StatusARM         diskAccessId  string        diskIOPSReadOnly  int        diskIOPSReadWrite  int        diskMBpsReadOnly  int        diskMBpsReadWrite  int        diskSizeBytes  int        diskSizeGB  int        diskState  DiskState_Status         encryption  Encryption_StatusARM         encryptionSettingsCollection  EncryptionSettingsCollection_StatusARM         hyperVGeneration  DiskPropertiesStatusHyperVGeneration         maxShares  int        networkAccessPolicy  NetworkAccessPolicy_Status         osType  DiskPropertiesStatusOsType         provisioningState  string        purchasePlan  PurchasePlan_StatusARM         shareInfo  []ShareInfoElement_StatusARM         tier  string        timeCreated  string        uniqueId  string        DiskSku   (Appears on:Disks_Spec)  Deprecated version of DiskSku. Use v1beta20200930.DiskSku instead\n    Field Description      name  DiskSkuName         DiskSkuARM   (Appears on:Disks_SpecARM)  Deprecated version of DiskSku. Use v1beta20200930.DiskSku instead\n    Field Description      name  DiskSkuName         DiskSkuName (string alias)  (Appears on:DiskSku, DiskSkuARM)  Deprecated version of DiskSkuName. Use v1beta20200930.DiskSkuName instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    DiskSkuStatusName (string alias)  (Appears on:DiskSku_Status, DiskSku_StatusARM)  Deprecated version of DiskSkuStatusName. Use v1beta20200930.DiskSkuStatusName instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    DiskSku_Status   (Appears on:Disk_Status)  Deprecated version of DiskSku_Status. Use v1beta20200930.DiskSku_Status instead\n    Field Description      name  DiskSkuStatusName         tier  string        DiskSku_StatusARM   (Appears on:Disk_StatusARM)  Deprecated version of DiskSku_Status. Use v1beta20200930.DiskSku_Status instead\n    Field Description      name  DiskSkuStatusName         tier  string        DiskState_Status (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status, SnapshotProperties_StatusARM, Snapshot_Status)  Deprecated version of DiskState_Status. Use v1beta20200930.DiskState_Status instead\n    Value Description   \u0026#34;ActiveSAS\u0026#34;\n  \u0026#34;ActiveUpload\u0026#34;\n  \u0026#34;Attached\u0026#34;\n  \u0026#34;ReadyToUpload\u0026#34;\n  \u0026#34;Reserved\u0026#34;\n  \u0026#34;Unattached\u0026#34;\n    Disk_Status   (Appears on:Disk)  Deprecated version of Disk_Status. Use v1beta20200930.Disk_Status instead\n    Field Description      burstingEnabled  bool        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationData  CreationData_Status         diskAccessId  string        diskIOPSReadOnly  int        diskIOPSReadWrite  int        diskMBpsReadOnly  int        diskMBpsReadWrite  int        diskSizeBytes  int        diskSizeGB  int        diskState  DiskState_Status         encryption  Encryption_Status         encryptionSettingsCollection  EncryptionSettingsCollection_Status         extendedLocation  ExtendedLocation_Status         hyperVGeneration  DiskPropertiesStatusHyperVGeneration         id  string        location  string        managedBy  string        managedByExtended  []string        maxShares  int        name  string        networkAccessPolicy  NetworkAccessPolicy_Status         osType  DiskPropertiesStatusOsType         provisioningState  string        purchasePlan  PurchasePlan_Status         shareInfo  []ShareInfoElement_Status         sku  DiskSku_Status         tags  map[string]string        tier  string        timeCreated  string        type  string        uniqueId  string        zones  []string        Disk_StatusARM   Deprecated version of Disk_Status. Use v1beta20200930.Disk_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        managedBy  string        managedByExtended  []string        name  string        properties  DiskProperties_StatusARM         sku  DiskSku_StatusARM         tags  map[string]string        type  string        zones  []string        Disks_Spec   (Appears on:Disk)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    burstingEnabled  bool        creationData  CreationData         diskAccessReference  genruntime.ResourceReference         diskIOPSReadOnly  int        diskIOPSReadWrite  int        diskMBpsReadOnly  int        diskMBpsReadWrite  int        diskSizeGB  int        encryption  Encryption         encryptionSettingsCollection  EncryptionSettingsCollection         extendedLocation  ExtendedLocation         hyperVGeneration  DiskPropertiesHyperVGeneration         location  string        maxShares  int        networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan         sku  DiskSku         tags  map[string]string        tier  string        zones  []string        Disks_SpecARM   Deprecated version of Disks_Spec. Use v1beta20200930.Disks_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  DiskPropertiesARM         sku  DiskSkuARM         tags  map[string]string        zones  []string        Encryption   (Appears on:Disks_Spec, Snapshots_Spec)  Deprecated version of Encryption. Use v1beta20200930.Encryption instead\n    Field Description      diskEncryptionSetReference  genruntime.ResourceReference         type  EncryptionType         EncryptionARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Deprecated version of Encryption. Use v1beta20200930.Encryption instead\n    Field Description      diskEncryptionSetId  string        type  EncryptionType         EncryptionSettingsCollection   (Appears on:Disks_Spec, Snapshots_Spec)  Deprecated version of EncryptionSettingsCollection. Use v1beta20200930.EncryptionSettingsCollection instead\n    Field Description      enabled  bool        encryptionSettings  []EncryptionSettingsElement         encryptionSettingsVersion  string        EncryptionSettingsCollectionARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Deprecated version of EncryptionSettingsCollection. Use v1beta20200930.EncryptionSettingsCollection instead\n    Field Description      enabled  bool        encryptionSettings  []EncryptionSettingsElementARM         encryptionSettingsVersion  string        EncryptionSettingsCollection_Status   (Appears on:Disk_Status, Snapshot_Status)  Deprecated version of EncryptionSettingsCollection_Status. Use v1beta20200930.EncryptionSettingsCollection_Status instead\n    Field Description      enabled  bool        encryptionSettings  []EncryptionSettingsElement_Status         encryptionSettingsVersion  string        EncryptionSettingsCollection_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)  Deprecated version of EncryptionSettingsCollection_Status. Use v1beta20200930.EncryptionSettingsCollection_Status instead\n    Field Description      enabled  bool        encryptionSettings  []EncryptionSettingsElement_StatusARM         encryptionSettingsVersion  string        EncryptionSettingsElement   (Appears on:EncryptionSettingsCollection)  Deprecated version of EncryptionSettingsElement. Use v1beta20200930.EncryptionSettingsElement instead\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReference         keyEncryptionKey  KeyVaultAndKeyReference         EncryptionSettingsElementARM   (Appears on:EncryptionSettingsCollectionARM)  Deprecated version of EncryptionSettingsElement. Use v1beta20200930.EncryptionSettingsElement instead\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReferenceARM         keyEncryptionKey  KeyVaultAndKeyReferenceARM         EncryptionSettingsElement_Status   (Appears on:EncryptionSettingsCollection_Status)  Deprecated version of EncryptionSettingsElement_Status. Use v1beta20200930.EncryptionSettingsElement_Status instead\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReference_Status         keyEncryptionKey  KeyVaultAndKeyReference_Status         EncryptionSettingsElement_StatusARM   (Appears on:EncryptionSettingsCollection_StatusARM)  Deprecated version of EncryptionSettingsElement_Status. Use v1beta20200930.EncryptionSettingsElement_Status instead\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReference_StatusARM         keyEncryptionKey  KeyVaultAndKeyReference_StatusARM         EncryptionType (string alias)  (Appears on:Encryption, EncryptionARM)  Deprecated version of EncryptionType. Use v1beta20200930.EncryptionType instead\n    Value Description   \u0026#34;EncryptionAtRestWithCustomerKey\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformAndCustomerKeys\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformKey\u0026#34;\n    EncryptionType_Status (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)  Deprecated version of EncryptionType_Status. Use v1beta20200930.EncryptionType_Status instead\n    Value Description   \u0026#34;EncryptionAtRestWithCustomerKey\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformAndCustomerKeys\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformKey\u0026#34;\n    Encryption_Status   (Appears on:Disk_Status, Snapshot_Status)  Deprecated version of Encryption_Status. Use v1beta20200930.Encryption_Status instead\n    Field Description      diskEncryptionSetId  string        type  EncryptionType_Status         Encryption_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)  Deprecated version of Encryption_Status. Use v1beta20200930.Encryption_Status instead\n    Field Description      diskEncryptionSetId  string        type  EncryptionType_Status         ExtendedLocation   (Appears on:Disks_Spec, Snapshots_Spec)  Deprecated version of ExtendedLocation. Use v1beta20200930.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:Disks_SpecARM, Snapshots_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20200930.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20200930.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20200930.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:Disk_Status, Snapshot_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20200930.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:Disk_StatusARM, Snapshot_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20200930.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ImageDiskReference   (Appears on:CreationData)  Deprecated version of ImageDiskReference. Use v1beta20200930.ImageDiskReference instead\n    Field Description      lun  int        reference  genruntime.ResourceReference         ImageDiskReferenceARM   (Appears on:CreationDataARM)  Deprecated version of ImageDiskReference. Use v1beta20200930.ImageDiskReference instead\n    Field Description      id  string        lun  int        ImageDiskReference_Status   (Appears on:CreationData_Status)  Deprecated version of ImageDiskReference_Status. Use v1beta20200930.ImageDiskReference_Status instead\n    Field Description      id  string        lun  int        ImageDiskReference_StatusARM   (Appears on:CreationData_StatusARM)  Deprecated version of ImageDiskReference_Status. Use v1beta20200930.ImageDiskReference_Status instead\n    Field Description      id  string        lun  int        KeyVaultAndKeyReference   (Appears on:EncryptionSettingsElement)  Deprecated version of KeyVaultAndKeyReference. Use v1beta20200930.KeyVaultAndKeyReference instead\n    Field Description      keyUrl  string        sourceVault  SourceVault         KeyVaultAndKeyReferenceARM   (Appears on:EncryptionSettingsElementARM)  Deprecated version of KeyVaultAndKeyReference. Use v1beta20200930.KeyVaultAndKeyReference instead\n    Field Description      keyUrl  string        sourceVault  SourceVaultARM         KeyVaultAndKeyReference_Status   (Appears on:EncryptionSettingsElement_Status)  Deprecated version of KeyVaultAndKeyReference_Status. Use v1beta20200930.KeyVaultAndKeyReference_Status instead\n    Field Description      keyUrl  string        sourceVault  SourceVault_Status         KeyVaultAndKeyReference_StatusARM   (Appears on:EncryptionSettingsElement_StatusARM)  Deprecated version of KeyVaultAndKeyReference_Status. Use v1beta20200930.KeyVaultAndKeyReference_Status instead\n    Field Description      keyUrl  string        sourceVault  SourceVault_StatusARM         KeyVaultAndSecretReference   (Appears on:EncryptionSettingsElement)  Deprecated version of KeyVaultAndSecretReference. Use v1beta20200930.KeyVaultAndSecretReference instead\n    Field Description      secretUrl  string        sourceVault  SourceVault         KeyVaultAndSecretReferenceARM   (Appears on:EncryptionSettingsElementARM)  Deprecated version of KeyVaultAndSecretReference. Use v1beta20200930.KeyVaultAndSecretReference instead\n    Field Description      secretUrl  string        sourceVault  SourceVaultARM         KeyVaultAndSecretReference_Status   (Appears on:EncryptionSettingsElement_Status)  Deprecated version of KeyVaultAndSecretReference_Status. Use v1beta20200930.KeyVaultAndSecretReference_Status instead\n    Field Description      secretUrl  string        sourceVault  SourceVault_Status         KeyVaultAndSecretReference_StatusARM   (Appears on:EncryptionSettingsElement_StatusARM)  Deprecated version of KeyVaultAndSecretReference_Status. Use v1beta20200930.KeyVaultAndSecretReference_Status instead\n    Field Description      secretUrl  string        sourceVault  SourceVault_StatusARM         NetworkAccessPolicy_Status (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status, SnapshotProperties_StatusARM, Snapshot_Status)  Deprecated version of NetworkAccessPolicy_Status. Use v1beta20200930.NetworkAccessPolicy_Status instead\n    Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    PurchasePlan   (Appears on:Disks_Spec, Snapshots_Spec)  Deprecated version of PurchasePlan. Use v1beta20200930.PurchasePlan instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        PurchasePlanARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Deprecated version of PurchasePlan. Use v1beta20200930.PurchasePlan instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        PurchasePlan_Status   (Appears on:Disk_Status, Snapshot_Status)  Deprecated version of PurchasePlan_Status. Use v1beta20200930.PurchasePlan_Status instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        PurchasePlan_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)  Deprecated version of PurchasePlan_Status. Use v1beta20200930.PurchasePlan_Status instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        ShareInfoElement_Status   (Appears on:Disk_Status)  Deprecated version of ShareInfoElement_Status. Use v1beta20200930.ShareInfoElement_Status instead\n    Field Description      vmUri  string        ShareInfoElement_StatusARM   (Appears on:DiskProperties_StatusARM)  Deprecated version of ShareInfoElement_Status. Use v1beta20200930.ShareInfoElement_Status instead\n    Field Description      vmUri  string        Snapshot   Deprecated version of Snapshot. Use v1beta20200930.Snapshot instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Snapshots_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    creationData  CreationData         diskAccessReference  genruntime.ResourceReference         diskSizeGB  int        diskState  SnapshotPropertiesDiskState         encryption  Encryption         encryptionSettingsCollection  EncryptionSettingsCollection         extendedLocation  ExtendedLocation         hyperVGeneration  SnapshotPropertiesHyperVGeneration         incremental  bool        location  string        networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan         sku  SnapshotSku         tags  map[string]string           status  Snapshot_Status         SnapshotPropertiesARM   (Appears on:Snapshots_SpecARM)  Deprecated version of SnapshotProperties. Use v1beta20200930.SnapshotProperties instead\n    Field Description      creationData  CreationDataARM         diskAccessId  string        diskSizeGB  int        diskState  SnapshotPropertiesDiskState         encryption  EncryptionARM         encryptionSettingsCollection  EncryptionSettingsCollectionARM         hyperVGeneration  SnapshotPropertiesHyperVGeneration         incremental  bool        networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType         purchasePlan  PurchasePlanARM         SnapshotPropertiesDiskState (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)  Deprecated version of SnapshotPropertiesDiskState. Use v1beta20200930.SnapshotPropertiesDiskState instead\n    Value Description   \u0026#34;ActiveSAS\u0026#34;\n  \u0026#34;ActiveUpload\u0026#34;\n  \u0026#34;Attached\u0026#34;\n  \u0026#34;ReadyToUpload\u0026#34;\n  \u0026#34;Reserved\u0026#34;\n  \u0026#34;Unattached\u0026#34;\n    SnapshotPropertiesHyperVGeneration (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)  Deprecated version of SnapshotPropertiesHyperVGeneration. Use v1beta20200930.SnapshotPropertiesHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    SnapshotPropertiesNetworkAccessPolicy (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)  Deprecated version of SnapshotPropertiesNetworkAccessPolicy. Use v1beta20200930.SnapshotPropertiesNetworkAccessPolicy instead\n    Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    SnapshotPropertiesOsType (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)  Deprecated version of SnapshotPropertiesOsType. Use v1beta20200930.SnapshotPropertiesOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    SnapshotPropertiesStatusHyperVGeneration (string alias)  (Appears on:SnapshotProperties_StatusARM, Snapshot_Status)  Deprecated version of SnapshotPropertiesStatusHyperVGeneration. Use v1beta20200930.SnapshotPropertiesStatusHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    SnapshotPropertiesStatusOsType (string alias)  (Appears on:SnapshotProperties_StatusARM, Snapshot_Status)  Deprecated version of SnapshotPropertiesStatusOsType. Use v1beta20200930.SnapshotPropertiesStatusOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    SnapshotProperties_StatusARM   (Appears on:Snapshot_StatusARM)  Deprecated version of SnapshotProperties_Status. Use v1beta20200930.SnapshotProperties_Status instead\n    Field Description      creationData  CreationData_StatusARM         diskAccessId  string        diskSizeBytes  int        diskSizeGB  int        diskState  DiskState_Status         encryption  Encryption_StatusARM         encryptionSettingsCollection  EncryptionSettingsCollection_StatusARM         hyperVGeneration  SnapshotPropertiesStatusHyperVGeneration         incremental  bool        networkAccessPolicy  NetworkAccessPolicy_Status         osType  SnapshotPropertiesStatusOsType         provisioningState  string        purchasePlan  PurchasePlan_StatusARM         timeCreated  string        uniqueId  string        SnapshotSku   (Appears on:Snapshots_Spec)  Deprecated version of SnapshotSku. Use v1beta20200930.SnapshotSku instead\n    Field Description      name  SnapshotSkuName         SnapshotSkuARM   (Appears on:Snapshots_SpecARM)  Deprecated version of SnapshotSku. Use v1beta20200930.SnapshotSku instead\n    Field Description      name  SnapshotSkuName         SnapshotSkuName (string alias)  (Appears on:SnapshotSku, SnapshotSkuARM)  Deprecated version of SnapshotSkuName. Use v1beta20200930.SnapshotSkuName instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SnapshotSkuStatusName (string alias)  (Appears on:SnapshotSku_Status, SnapshotSku_StatusARM)  Deprecated version of SnapshotSkuStatusName. Use v1beta20200930.SnapshotSkuStatusName instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SnapshotSku_Status   (Appears on:Snapshot_Status)  Deprecated version of SnapshotSku_Status. Use v1beta20200930.SnapshotSku_Status instead\n    Field Description      name  SnapshotSkuStatusName         tier  string        SnapshotSku_StatusARM   (Appears on:Snapshot_StatusARM)  Deprecated version of SnapshotSku_Status. Use v1beta20200930.SnapshotSku_Status instead\n    Field Description      name  SnapshotSkuStatusName         tier  string        Snapshot_Status   (Appears on:Snapshot)  Deprecated version of Snapshot_Status. Use v1beta20200930.Snapshot_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationData  CreationData_Status         diskAccessId  string        diskSizeBytes  int        diskSizeGB  int        diskState  DiskState_Status         encryption  Encryption_Status         encryptionSettingsCollection  EncryptionSettingsCollection_Status         extendedLocation  ExtendedLocation_Status         hyperVGeneration  SnapshotPropertiesStatusHyperVGeneration         id  string        incremental  bool        location  string        managedBy  string        name  string        networkAccessPolicy  NetworkAccessPolicy_Status         osType  SnapshotPropertiesStatusOsType         provisioningState  string        purchasePlan  PurchasePlan_Status         sku  SnapshotSku_Status         tags  map[string]string        timeCreated  string        type  string        uniqueId  string        Snapshot_StatusARM   Deprecated version of Snapshot_Status. Use v1beta20200930.Snapshot_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        managedBy  string        name  string        properties  SnapshotProperties_StatusARM         sku  SnapshotSku_StatusARM         tags  map[string]string        type  string        Snapshots_Spec   (Appears on:Snapshot)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    creationData  CreationData         diskAccessReference  genruntime.ResourceReference         diskSizeGB  int        diskState  SnapshotPropertiesDiskState         encryption  Encryption         encryptionSettingsCollection  EncryptionSettingsCollection         extendedLocation  ExtendedLocation         hyperVGeneration  SnapshotPropertiesHyperVGeneration         incremental  bool        location  string        networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan         sku  SnapshotSku         tags  map[string]string        Snapshots_SpecARM   Deprecated version of Snapshots_Spec. Use v1beta20200930.Snapshots_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  SnapshotPropertiesARM         sku  SnapshotSkuARM         tags  map[string]string        SourceVault   (Appears on:KeyVaultAndKeyReference, KeyVaultAndSecretReference)  Deprecated version of SourceVault. Use v1beta20200930.SourceVault instead\n    Field Description      reference  genruntime.ResourceReference         SourceVaultARM   (Appears on:KeyVaultAndKeyReferenceARM, KeyVaultAndSecretReferenceARM)  Deprecated version of SourceVault. Use v1beta20200930.SourceVault instead\n    Field Description      id  string        SourceVault_Status   (Appears on:KeyVaultAndKeyReference_Status, KeyVaultAndSecretReference_Status)  Deprecated version of SourceVault_Status. Use v1beta20200930.SourceVault_Status instead\n    Field Description      id  string        SourceVault_StatusARM   (Appears on:KeyVaultAndKeyReference_StatusARM, KeyVaultAndSecretReference_StatusARM)  Deprecated version of SourceVault_Status. Use v1beta20200930.SourceVault_Status instead\n    Field Description      id  string         "},{"id":28,"href":"/azure-service-operator/reference/compute.v1alpha1api20201201/","title":"compute.azure.com/v1alpha1api20201201","section":"References","content":"compute.azure.com/v1alpha1api20201201  Package v1alpha1api20201201 contains API Schema definitions for the compute v1alpha1api20201201 API group\n Resource Types:  AdditionalCapabilities   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Deprecated version of AdditionalCapabilities. Use v1beta20201201.AdditionalCapabilities instead\n    Field Description      ultraSSDEnabled  bool        AdditionalCapabilitiesARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM, VirtualMachines_Spec_PropertiesARM)  Deprecated version of AdditionalCapabilities. Use v1beta20201201.AdditionalCapabilities instead\n    Field Description      ultraSSDEnabled  bool        AdditionalCapabilities_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)  Deprecated version of AdditionalCapabilities_Status. Use v1beta20201201.AdditionalCapabilities_Status instead\n    Field Description      ultraSSDEnabled  bool        AdditionalCapabilities_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetProperties_StatusARM)  Deprecated version of AdditionalCapabilities_Status. Use v1beta20201201.AdditionalCapabilities_Status instead\n    Field Description      ultraSSDEnabled  bool        AdditionalUnattendContent   (Appears on:WindowsConfiguration)  Deprecated version of AdditionalUnattendContent. Use v1beta20201201.AdditionalUnattendContent instead\n    Field Description      componentName  AdditionalUnattendContentComponentName         content  string        passName  AdditionalUnattendContentPassName         settingName  AdditionalUnattendContentSettingName         AdditionalUnattendContentARM   (Appears on:WindowsConfigurationARM)  Deprecated version of AdditionalUnattendContent. Use v1beta20201201.AdditionalUnattendContent instead\n    Field Description      componentName  AdditionalUnattendContentComponentName         content  string        passName  AdditionalUnattendContentPassName         settingName  AdditionalUnattendContentSettingName         AdditionalUnattendContentComponentName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)  Deprecated version of AdditionalUnattendContentComponentName. Use v1beta20201201.AdditionalUnattendContentComponentName instead\n    Value Description   \u0026#34;Microsoft-Windows-Shell-Setup\u0026#34;\n    AdditionalUnattendContentPassName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)  Deprecated version of AdditionalUnattendContentPassName. Use v1beta20201201.AdditionalUnattendContentPassName instead\n    Value Description   \u0026#34;OobeSystem\u0026#34;\n    AdditionalUnattendContentSettingName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)  Deprecated version of AdditionalUnattendContentSettingName. Use v1beta20201201.AdditionalUnattendContentSettingName instead\n    Value Description   \u0026#34;AutoLogon\u0026#34;\n  \u0026#34;FirstLogonCommands\u0026#34;\n    AdditionalUnattendContentStatusComponentName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)  Deprecated version of AdditionalUnattendContentStatusComponentName. Use v1beta20201201.AdditionalUnattendContentStatusComponentName instead\n    Value Description   \u0026#34;Microsoft-Windows-Shell-Setup\u0026#34;\n    AdditionalUnattendContentStatusPassName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)  Deprecated version of AdditionalUnattendContentStatusPassName. Use v1beta20201201.AdditionalUnattendContentStatusPassName instead\n    Value Description   \u0026#34;OobeSystem\u0026#34;\n    AdditionalUnattendContentStatusSettingName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)  Deprecated version of AdditionalUnattendContentStatusSettingName. Use v1beta20201201.AdditionalUnattendContentStatusSettingName instead\n    Value Description   \u0026#34;AutoLogon\u0026#34;\n  \u0026#34;FirstLogonCommands\u0026#34;\n    AdditionalUnattendContent_Status   (Appears on:WindowsConfiguration_Status)  Deprecated version of AdditionalUnattendContent_Status. Use v1beta20201201.AdditionalUnattendContent_Status instead\n    Field Description      componentName  AdditionalUnattendContentStatusComponentName         content  string        passName  AdditionalUnattendContentStatusPassName         settingName  AdditionalUnattendContentStatusSettingName         AdditionalUnattendContent_StatusARM   (Appears on:WindowsConfiguration_StatusARM)  Deprecated version of AdditionalUnattendContent_Status. Use v1beta20201201.AdditionalUnattendContent_Status instead\n    Field Description      componentName  AdditionalUnattendContentStatusComponentName         content  string        passName  AdditionalUnattendContentStatusPassName         settingName  AdditionalUnattendContentStatusSettingName         ApiEntityReference   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations)  Deprecated version of ApiEntityReference. Use v1beta20201201.ApiEntityReference instead\n    Field Description      reference  genruntime.ResourceReference         ApiEntityReferenceARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)  Deprecated version of ApiEntityReference. Use v1beta20201201.ApiEntityReference instead\n    Field Description      id  string        ApiEntityReference_Status   (Appears on:VirtualMachineScaleSetIPConfiguration_Status, VirtualMachineScaleSetNetworkProfile_Status)  Deprecated version of ApiEntityReference_Status. Use v1beta20201201.ApiEntityReference_Status instead\n    Field Description      id  string        ApiEntityReference_StatusARM   (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetNetworkProfile_StatusARM)  Deprecated version of ApiEntityReference_Status. Use v1beta20201201.ApiEntityReference_Status instead\n    Field Description      id  string        ApiErrorBase_Status   (Appears on:ApiError_Status)  Deprecated version of ApiErrorBase_Status. Use v1beta20201201.ApiErrorBase_Status instead\n    Field Description      code  string        message  string        target  string        ApiErrorBase_StatusARM   (Appears on:ApiError_StatusARM)  Deprecated version of ApiErrorBase_Status. Use v1beta20201201.ApiErrorBase_Status instead\n    Field Description      code  string        message  string        target  string        ApiError_Status   (Appears on:AvailablePatchSummary_Status, LastPatchInstallationSummary_Status)  Deprecated version of ApiError_Status. Use v1beta20201201.ApiError_Status instead\n    Field Description      code  string        details  []ApiErrorBase_Status         innererror  InnerError_Status         message  string        target  string        ApiError_StatusARM   (Appears on:AvailablePatchSummary_StatusARM, LastPatchInstallationSummary_StatusARM)  Deprecated version of ApiError_Status. Use v1beta20201201.ApiError_Status instead\n    Field Description      code  string        details  []ApiErrorBase_StatusARM         innererror  InnerError_StatusARM         message  string        target  string        AutomaticOSUpgradePolicy   (Appears on:UpgradePolicy)  Deprecated version of AutomaticOSUpgradePolicy. Use v1beta20201201.AutomaticOSUpgradePolicy instead\n    Field Description      disableAutomaticRollback  bool        enableAutomaticOSUpgrade  bool        AutomaticOSUpgradePolicyARM   (Appears on:UpgradePolicyARM)  Deprecated version of AutomaticOSUpgradePolicy. Use v1beta20201201.AutomaticOSUpgradePolicy instead\n    Field Description      disableAutomaticRollback  bool        enableAutomaticOSUpgrade  bool        AutomaticOSUpgradePolicy_Status   (Appears on:UpgradePolicy_Status)  Deprecated version of AutomaticOSUpgradePolicy_Status. Use v1beta20201201.AutomaticOSUpgradePolicy_Status instead\n    Field Description      disableAutomaticRollback  bool        enableAutomaticOSUpgrade  bool        AutomaticOSUpgradePolicy_StatusARM   (Appears on:UpgradePolicy_StatusARM)  Deprecated version of AutomaticOSUpgradePolicy_Status. Use v1beta20201201.AutomaticOSUpgradePolicy_Status instead\n    Field Description      disableAutomaticRollback  bool        enableAutomaticOSUpgrade  bool        AutomaticRepairsPolicy   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of AutomaticRepairsPolicy. Use v1beta20201201.AutomaticRepairsPolicy instead\n    Field Description      enabled  bool        gracePeriod  string        AutomaticRepairsPolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Deprecated version of AutomaticRepairsPolicy. Use v1beta20201201.AutomaticRepairsPolicy instead\n    Field Description      enabled  bool        gracePeriod  string        AutomaticRepairsPolicy_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of AutomaticRepairsPolicy_Status. Use v1beta20201201.AutomaticRepairsPolicy_Status instead\n    Field Description      enabled  bool        gracePeriod  string        AutomaticRepairsPolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)  Deprecated version of AutomaticRepairsPolicy_Status. Use v1beta20201201.AutomaticRepairsPolicy_Status instead\n    Field Description      enabled  bool        gracePeriod  string        AvailablePatchSummaryStatusStatus (string alias)  (Appears on:AvailablePatchSummary_Status, AvailablePatchSummary_StatusARM)  Deprecated version of AvailablePatchSummaryStatusStatus. Use v1beta20201201.AvailablePatchSummaryStatusStatus instead\n    Value Description   \u0026#34;CompletedWithWarnings\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    AvailablePatchSummary_Status   (Appears on:VirtualMachinePatchStatus_Status)  Deprecated version of AvailablePatchSummary_Status. Use v1beta20201201.AvailablePatchSummary_Status instead\n    Field Description      assessmentActivityId  string        criticalAndSecurityPatchCount  int        error  ApiError_Status         lastModifiedTime  string        otherPatchCount  int        rebootPending  bool        startTime  string        status  AvailablePatchSummaryStatusStatus         AvailablePatchSummary_StatusARM   (Appears on:VirtualMachinePatchStatus_StatusARM)  Deprecated version of AvailablePatchSummary_Status. Use v1beta20201201.AvailablePatchSummary_Status instead\n    Field Description      assessmentActivityId  string        criticalAndSecurityPatchCount  int        error  ApiError_StatusARM         lastModifiedTime  string        otherPatchCount  int        rebootPending  bool        startTime  string        status  AvailablePatchSummaryStatusStatus         BillingProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Deprecated version of BillingProfile. Use v1beta20201201.BillingProfile instead\n    Field Description      maxPrice  float64        BillingProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Deprecated version of BillingProfile. Use v1beta20201201.BillingProfile instead\n    Field Description      maxPrice  float64        BillingProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)  Deprecated version of BillingProfile_Status. Use v1beta20201201.BillingProfile_Status instead\n    Field Description      maxPrice  float64        BillingProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of BillingProfile_Status. Use v1beta20201201.BillingProfile_Status instead\n    Field Description      maxPrice  float64        BootDiagnostics   (Appears on:DiagnosticsProfile)  Deprecated version of BootDiagnostics. Use v1beta20201201.BootDiagnostics instead\n    Field Description      enabled  bool        storageUri  string        BootDiagnosticsARM   (Appears on:DiagnosticsProfileARM)  Deprecated version of BootDiagnostics. Use v1beta20201201.BootDiagnostics instead\n    Field Description      enabled  bool        storageUri  string        BootDiagnosticsInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of BootDiagnosticsInstanceView_Status. Use v1beta20201201.BootDiagnosticsInstanceView_Status instead\n    Field Description      consoleScreenshotBlobUri  string        serialConsoleLogBlobUri  string        status  InstanceViewStatus_Status         BootDiagnosticsInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of BootDiagnosticsInstanceView_Status. Use v1beta20201201.BootDiagnosticsInstanceView_Status instead\n    Field Description      consoleScreenshotBlobUri  string        serialConsoleLogBlobUri  string        status  InstanceViewStatus_StatusARM         BootDiagnostics_Status   (Appears on:DiagnosticsProfile_Status)  Deprecated version of BootDiagnostics_Status. Use v1beta20201201.BootDiagnostics_Status instead\n    Field Description      enabled  bool        storageUri  string        BootDiagnostics_StatusARM   (Appears on:DiagnosticsProfile_StatusARM)  Deprecated version of BootDiagnostics_Status. Use v1beta20201201.BootDiagnostics_Status instead\n    Field Description      enabled  bool        storageUri  string        Caching_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM, OSDisk_Status, OSDisk_StatusARM, VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of Caching_Status. Use v1beta20201201.Caching_Status instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    CreateOption_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM, OSDisk_Status, OSDisk_StatusARM, VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of CreateOption_Status. Use v1beta20201201.CreateOption_Status instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    DataDisk   (Appears on:StorageProfile)  Deprecated version of DataDisk. Use v1beta20201201.DataDisk instead\n    Field Description      caching  DataDiskCaching         createOption  DataDiskCreateOption         detachOption  DataDiskDetachOption         diskSizeGB  int        image  VirtualHardDisk         lun  int        managedDisk  ManagedDiskParameters         name  string        toBeDetached  bool        vhd  VirtualHardDisk         writeAcceleratorEnabled  bool        DataDiskARM   (Appears on:StorageProfileARM)  Deprecated version of DataDisk. Use v1beta20201201.DataDisk instead\n    Field Description      caching  DataDiskCaching         createOption  DataDiskCreateOption         detachOption  DataDiskDetachOption         diskSizeGB  int        image  VirtualHardDiskARM         lun  int        managedDisk  ManagedDiskParametersARM         name  string        toBeDetached  bool        vhd  VirtualHardDiskARM         writeAcceleratorEnabled  bool        DataDiskCaching (string alias)  (Appears on:DataDisk, DataDiskARM)  Deprecated version of DataDiskCaching. Use v1beta20201201.DataDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    DataDiskCreateOption (string alias)  (Appears on:DataDisk, DataDiskARM)  Deprecated version of DataDiskCreateOption. Use v1beta20201201.DataDiskCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    DataDiskDetachOption (string alias)  (Appears on:DataDisk, DataDiskARM)  Deprecated version of DataDiskDetachOption. Use v1beta20201201.DataDiskDetachOption instead\n    Value Description   \u0026#34;ForceDetach\u0026#34;\n    DataDisk_Status   (Appears on:StorageProfile_Status)  Deprecated version of DataDisk_Status. Use v1beta20201201.DataDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         detachOption  DetachOption_Status         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        image  VirtualHardDisk_Status         lun  int        managedDisk  ManagedDiskParameters_Status         name  string        toBeDetached  bool        vhd  VirtualHardDisk_Status         writeAcceleratorEnabled  bool        DataDisk_StatusARM   (Appears on:StorageProfile_StatusARM)  Deprecated version of DataDisk_Status. Use v1beta20201201.DataDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         detachOption  DetachOption_Status         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        image  VirtualHardDisk_StatusARM         lun  int        managedDisk  ManagedDiskParameters_StatusARM         name  string        toBeDetached  bool        vhd  VirtualHardDisk_StatusARM         writeAcceleratorEnabled  bool        DetachOption_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM)  Deprecated version of DetachOption_Status. Use v1beta20201201.DetachOption_Status instead\n    Value Description   \u0026#34;ForceDetach\u0026#34;\n    DiagnosticsProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Deprecated version of DiagnosticsProfile. Use v1beta20201201.DiagnosticsProfile instead\n    Field Description      bootDiagnostics  BootDiagnostics         DiagnosticsProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Deprecated version of DiagnosticsProfile. Use v1beta20201201.DiagnosticsProfile instead\n    Field Description      bootDiagnostics  BootDiagnosticsARM         DiagnosticsProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)  Deprecated version of DiagnosticsProfile_Status. Use v1beta20201201.DiagnosticsProfile_Status instead\n    Field Description      bootDiagnostics  BootDiagnostics_Status         DiagnosticsProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of DiagnosticsProfile_Status. Use v1beta20201201.DiagnosticsProfile_Status instead\n    Field Description      bootDiagnostics  BootDiagnostics_StatusARM         DiffDiskOption_Status (string alias)  (Appears on:DiffDiskSettings_Status, DiffDiskSettings_StatusARM)  Deprecated version of DiffDiskOption_Status. Use v1beta20201201.DiffDiskOption_Status instead\n    Value Description   \u0026#34;Local\u0026#34;\n    DiffDiskPlacement_Status (string alias)  (Appears on:DiffDiskSettings_Status, DiffDiskSettings_StatusARM)  Deprecated version of DiffDiskPlacement_Status. Use v1beta20201201.DiffDiskPlacement_Status instead\n    Value Description   \u0026#34;CacheDisk\u0026#34;\n  \u0026#34;ResourceDisk\u0026#34;\n    DiffDiskSettings   (Appears on:OSDisk, VirtualMachineScaleSetOSDisk)  Deprecated version of DiffDiskSettings. Use v1beta20201201.DiffDiskSettings instead\n    Field Description      option  DiffDiskSettingsOption         placement  DiffDiskSettingsPlacement         DiffDiskSettingsARM   (Appears on:OSDiskARM, VirtualMachineScaleSetOSDiskARM)  Deprecated version of DiffDiskSettings. Use v1beta20201201.DiffDiskSettings instead\n    Field Description      option  DiffDiskSettingsOption         placement  DiffDiskSettingsPlacement         DiffDiskSettingsOption (string alias)  (Appears on:DiffDiskSettings, DiffDiskSettingsARM)  Deprecated version of DiffDiskSettingsOption. Use v1beta20201201.DiffDiskSettingsOption instead\n    Value Description   \u0026#34;Local\u0026#34;\n    DiffDiskSettingsPlacement (string alias)  (Appears on:DiffDiskSettings, DiffDiskSettingsARM)  Deprecated version of DiffDiskSettingsPlacement. Use v1beta20201201.DiffDiskSettingsPlacement instead\n    Value Description   \u0026#34;CacheDisk\u0026#34;\n  \u0026#34;ResourceDisk\u0026#34;\n    DiffDiskSettings_Status   (Appears on:OSDisk_Status, VirtualMachineScaleSetOSDisk_Status)  Deprecated version of DiffDiskSettings_Status. Use v1beta20201201.DiffDiskSettings_Status instead\n    Field Description      option  DiffDiskOption_Status         placement  DiffDiskPlacement_Status         DiffDiskSettings_StatusARM   (Appears on:OSDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of DiffDiskSettings_Status. Use v1beta20201201.DiffDiskSettings_Status instead\n    Field Description      option  DiffDiskOption_Status         placement  DiffDiskPlacement_Status         DiskEncryptionSetParameters   (Appears on:ManagedDiskParameters, VirtualMachineScaleSetManagedDiskParameters)  Deprecated version of DiskEncryptionSetParameters. Use v1beta20201201.DiskEncryptionSetParameters instead\n    Field Description      reference  genruntime.ResourceReference         DiskEncryptionSetParametersARM   (Appears on:ManagedDiskParametersARM, VirtualMachineScaleSetManagedDiskParametersARM)  Deprecated version of DiskEncryptionSetParameters. Use v1beta20201201.DiskEncryptionSetParameters instead\n    Field Description      id  string        DiskEncryptionSettings   (Appears on:OSDisk)  Deprecated version of DiskEncryptionSettings. Use v1beta20201201.DiskEncryptionSettings instead\n    Field Description      diskEncryptionKey  KeyVaultSecretReference         enabled  bool        keyEncryptionKey  KeyVaultKeyReference         DiskEncryptionSettingsARM   (Appears on:OSDiskARM)  Deprecated version of DiskEncryptionSettings. Use v1beta20201201.DiskEncryptionSettings instead\n    Field Description      diskEncryptionKey  KeyVaultSecretReferenceARM         enabled  bool        keyEncryptionKey  KeyVaultKeyReferenceARM         DiskEncryptionSettings_Status   (Appears on:DiskInstanceView_Status, OSDisk_Status)  Deprecated version of DiskEncryptionSettings_Status. Use v1beta20201201.DiskEncryptionSettings_Status instead\n    Field Description      diskEncryptionKey  KeyVaultSecretReference_Status         enabled  bool        keyEncryptionKey  KeyVaultKeyReference_Status         DiskEncryptionSettings_StatusARM   (Appears on:DiskInstanceView_StatusARM, OSDisk_StatusARM)  Deprecated version of DiskEncryptionSettings_Status. Use v1beta20201201.DiskEncryptionSettings_Status instead\n    Field Description      diskEncryptionKey  KeyVaultSecretReference_StatusARM         enabled  bool        keyEncryptionKey  KeyVaultKeyReference_StatusARM         DiskInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of DiskInstanceView_Status. Use v1beta20201201.DiskInstanceView_Status instead\n    Field Description      encryptionSettings  []DiskEncryptionSettings_Status         name  string        statuses  []InstanceViewStatus_Status         DiskInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of DiskInstanceView_Status. Use v1beta20201201.DiskInstanceView_Status instead\n    Field Description      encryptionSettings  []DiskEncryptionSettings_StatusARM         name  string        statuses  []InstanceViewStatus_StatusARM         EvictionPolicy_Status (string alias)  (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_Status, VirtualMachineScaleSetVMProfile_StatusARM, VirtualMachine_Status)  Deprecated version of EvictionPolicy_Status. Use v1beta20201201.EvictionPolicy_Status instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ExtendedLocation   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Deprecated version of ExtendedLocation. Use v1beta20201201.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:VirtualMachineScaleSets_SpecARM, VirtualMachines_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20201201.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20201201.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20201201.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20201201.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM, VirtualMachine_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20201201.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         GenericExtensionARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM)  Deprecated version of GenericExtension. Use v1beta20201201.GenericExtension instead\n    Field Description      publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         type  string        typeHandlerVersion  string        HardwareProfile   (Appears on:VirtualMachines_Spec)  Deprecated version of HardwareProfile. Use v1beta20201201.HardwareProfile instead\n    Field Description      vmSize  HardwareProfileVmSize         HardwareProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Deprecated version of HardwareProfile. Use v1beta20201201.HardwareProfile instead\n    Field Description      vmSize  HardwareProfileVmSize         HardwareProfileStatusVmSize (string alias)  (Appears on:HardwareProfile_Status, HardwareProfile_StatusARM)  Deprecated version of HardwareProfileStatusVmSize. Use v1beta20201201.HardwareProfileStatusVmSize instead\n    Value Description   \u0026#34;Basic_A0\u0026#34;\n  \u0026#34;Basic_A1\u0026#34;\n  \u0026#34;Basic_A2\u0026#34;\n  \u0026#34;Basic_A3\u0026#34;\n  \u0026#34;Basic_A4\u0026#34;\n  \u0026#34;Standard_A0\u0026#34;\n  \u0026#34;Standard_A1\u0026#34;\n  \u0026#34;Standard_A10\u0026#34;\n  \u0026#34;Standard_A11\u0026#34;\n  \u0026#34;Standard_A1_v2\u0026#34;\n  \u0026#34;Standard_A2\u0026#34;\n  \u0026#34;Standard_A2m_v2\u0026#34;\n  \u0026#34;Standard_A2_v2\u0026#34;\n  \u0026#34;Standard_A3\u0026#34;\n  \u0026#34;Standard_A4\u0026#34;\n  \u0026#34;Standard_A4m_v2\u0026#34;\n  \u0026#34;Standard_A4_v2\u0026#34;\n  \u0026#34;Standard_A5\u0026#34;\n  \u0026#34;Standard_A6\u0026#34;\n  \u0026#34;Standard_A7\u0026#34;\n  \u0026#34;Standard_A8\u0026#34;\n  \u0026#34;Standard_A8m_v2\u0026#34;\n  \u0026#34;Standard_A8_v2\u0026#34;\n  \u0026#34;Standard_A9\u0026#34;\n  \u0026#34;Standard_B1ms\u0026#34;\n  \u0026#34;Standard_B1s\u0026#34;\n  \u0026#34;Standard_B2ms\u0026#34;\n  \u0026#34;Standard_B2s\u0026#34;\n  \u0026#34;Standard_B4ms\u0026#34;\n  \u0026#34;Standard_B8ms\u0026#34;\n  \u0026#34;Standard_D1\u0026#34;\n  \u0026#34;Standard_D11\u0026#34;\n  \u0026#34;Standard_D11_v2\u0026#34;\n  \u0026#34;Standard_D12\u0026#34;\n  \u0026#34;Standard_D12_v2\u0026#34;\n  \u0026#34;Standard_D13\u0026#34;\n  \u0026#34;Standard_D13_v2\u0026#34;\n  \u0026#34;Standard_D14\u0026#34;\n  \u0026#34;Standard_D14_v2\u0026#34;\n  \u0026#34;Standard_D15_v2\u0026#34;\n  \u0026#34;Standard_D16s_v3\u0026#34;\n  \u0026#34;Standard_D16_v3\u0026#34;\n  \u0026#34;Standard_D1_v2\u0026#34;\n  \u0026#34;Standard_D2\u0026#34;\n  \u0026#34;Standard_D2s_v3\u0026#34;\n  \u0026#34;Standard_D2_v2\u0026#34;\n  \u0026#34;Standard_D2_v3\u0026#34;\n  \u0026#34;Standard_D3\u0026#34;\n  \u0026#34;Standard_D32s_v3\u0026#34;\n  \u0026#34;Standard_D32_v3\u0026#34;\n  \u0026#34;Standard_D3_v2\u0026#34;\n  \u0026#34;Standard_D4\u0026#34;\n  \u0026#34;Standard_D4s_v3\u0026#34;\n  \u0026#34;Standard_D4_v2\u0026#34;\n  \u0026#34;Standard_D4_v3\u0026#34;\n  \u0026#34;Standard_D5_v2\u0026#34;\n  \u0026#34;Standard_D64s_v3\u0026#34;\n  \u0026#34;Standard_D64_v3\u0026#34;\n  \u0026#34;Standard_D8s_v3\u0026#34;\n  \u0026#34;Standard_D8_v3\u0026#34;\n  \u0026#34;Standard_DS1\u0026#34;\n  \u0026#34;Standard_DS11\u0026#34;\n  \u0026#34;Standard_DS11_v2\u0026#34;\n  \u0026#34;Standard_DS12\u0026#34;\n  \u0026#34;Standard_DS12_v2\u0026#34;\n  \u0026#34;Standard_DS13\u0026#34;\n  \u0026#34;Standard_DS13-2_v2\u0026#34;\n  \u0026#34;Standard_DS13-4_v2\u0026#34;\n  \u0026#34;Standard_DS13_v2\u0026#34;\n  \u0026#34;Standard_DS14\u0026#34;\n  \u0026#34;Standard_DS14-4_v2\u0026#34;\n  \u0026#34;Standard_DS14-8_v2\u0026#34;\n  \u0026#34;Standard_DS14_v2\u0026#34;\n  \u0026#34;Standard_DS15_v2\u0026#34;\n  \u0026#34;Standard_DS1_v2\u0026#34;\n  \u0026#34;Standard_DS2\u0026#34;\n  \u0026#34;Standard_DS2_v2\u0026#34;\n  \u0026#34;Standard_DS3\u0026#34;\n  \u0026#34;Standard_DS3_v2\u0026#34;\n  \u0026#34;Standard_DS4\u0026#34;\n  \u0026#34;Standard_DS4_v2\u0026#34;\n  \u0026#34;Standard_DS5_v2\u0026#34;\n  \u0026#34;Standard_E16s_v3\u0026#34;\n  \u0026#34;Standard_E16_v3\u0026#34;\n  \u0026#34;Standard_E2s_v3\u0026#34;\n  \u0026#34;Standard_E2_v3\u0026#34;\n  \u0026#34;Standard_E32-16_v3\u0026#34;\n  \u0026#34;Standard_E32-8s_v3\u0026#34;\n  \u0026#34;Standard_E32s_v3\u0026#34;\n  \u0026#34;Standard_E32_v3\u0026#34;\n  \u0026#34;Standard_E4s_v3\u0026#34;\n  \u0026#34;Standard_E4_v3\u0026#34;\n  \u0026#34;Standard_E64-16s_v3\u0026#34;\n  \u0026#34;Standard_E64-32s_v3\u0026#34;\n  \u0026#34;Standard_E64s_v3\u0026#34;\n  \u0026#34;Standard_E64_v3\u0026#34;\n  \u0026#34;Standard_E8s_v3\u0026#34;\n  \u0026#34;Standard_E8_v3\u0026#34;\n  \u0026#34;Standard_F1\u0026#34;\n  \u0026#34;Standard_F16\u0026#34;\n  \u0026#34;Standard_F16s\u0026#34;\n  \u0026#34;Standard_F16s_v2\u0026#34;\n  \u0026#34;Standard_F1s\u0026#34;\n  \u0026#34;Standard_F2\u0026#34;\n  \u0026#34;Standard_F2s\u0026#34;\n  \u0026#34;Standard_F2s_v2\u0026#34;\n  \u0026#34;Standard_F32s_v2\u0026#34;\n  \u0026#34;Standard_F4\u0026#34;\n  \u0026#34;Standard_F4s\u0026#34;\n  \u0026#34;Standard_F4s_v2\u0026#34;\n  \u0026#34;Standard_F64s_v2\u0026#34;\n  \u0026#34;Standard_F72s_v2\u0026#34;\n  \u0026#34;Standard_F8\u0026#34;\n  \u0026#34;Standard_F8s\u0026#34;\n  \u0026#34;Standard_F8s_v2\u0026#34;\n  \u0026#34;Standard_G1\u0026#34;\n  \u0026#34;Standard_G2\u0026#34;\n  \u0026#34;Standard_G3\u0026#34;\n  \u0026#34;Standard_G4\u0026#34;\n  \u0026#34;Standard_G5\u0026#34;\n  \u0026#34;Standard_GS1\u0026#34;\n  \u0026#34;Standard_GS2\u0026#34;\n  \u0026#34;Standard_GS3\u0026#34;\n  \u0026#34;Standard_GS4\u0026#34;\n  \u0026#34;Standard_GS4-4\u0026#34;\n  \u0026#34;Standard_GS4-8\u0026#34;\n  \u0026#34;Standard_GS5\u0026#34;\n  \u0026#34;Standard_GS5-16\u0026#34;\n  \u0026#34;Standard_GS5-8\u0026#34;\n  \u0026#34;Standard_H16\u0026#34;\n  \u0026#34;Standard_H16m\u0026#34;\n  \u0026#34;Standard_H16mr\u0026#34;\n  \u0026#34;Standard_H16r\u0026#34;\n  \u0026#34;Standard_H8\u0026#34;\n  \u0026#34;Standard_H8m\u0026#34;\n  \u0026#34;Standard_L16s\u0026#34;\n  \u0026#34;Standard_L32s\u0026#34;\n  \u0026#34;Standard_L4s\u0026#34;\n  \u0026#34;Standard_L8s\u0026#34;\n  \u0026#34;Standard_M128-32ms\u0026#34;\n  \u0026#34;Standard_M128-64ms\u0026#34;\n  \u0026#34;Standard_M128ms\u0026#34;\n  \u0026#34;Standard_M128s\u0026#34;\n  \u0026#34;Standard_M64-16ms\u0026#34;\n  \u0026#34;Standard_M64-32ms\u0026#34;\n  \u0026#34;Standard_M64ms\u0026#34;\n  \u0026#34;Standard_M64s\u0026#34;\n  \u0026#34;Standard_NC12\u0026#34;\n  \u0026#34;Standard_NC12s_v2\u0026#34;\n  \u0026#34;Standard_NC12s_v3\u0026#34;\n  \u0026#34;Standard_NC24\u0026#34;\n  \u0026#34;Standard_NC24r\u0026#34;\n  \u0026#34;Standard_NC24rs_v2\u0026#34;\n  \u0026#34;Standard_NC24rs_v3\u0026#34;\n  \u0026#34;Standard_NC24s_v2\u0026#34;\n  \u0026#34;Standard_NC24s_v3\u0026#34;\n  \u0026#34;Standard_NC6\u0026#34;\n  \u0026#34;Standard_NC6s_v2\u0026#34;\n  \u0026#34;Standard_NC6s_v3\u0026#34;\n  \u0026#34;Standard_ND12s\u0026#34;\n  \u0026#34;Standard_ND24rs\u0026#34;\n  \u0026#34;Standard_ND24s\u0026#34;\n  \u0026#34;Standard_ND6s\u0026#34;\n  \u0026#34;Standard_NV12\u0026#34;\n  \u0026#34;Standard_NV24\u0026#34;\n  \u0026#34;Standard_NV6\u0026#34;\n    HardwareProfileVmSize (string alias)  (Appears on:HardwareProfile, HardwareProfileARM)  Deprecated version of HardwareProfileVmSize. Use v1beta20201201.HardwareProfileVmSize instead\n    Value Description   \u0026#34;Basic_A0\u0026#34;\n  \u0026#34;Basic_A1\u0026#34;\n  \u0026#34;Basic_A2\u0026#34;\n  \u0026#34;Basic_A3\u0026#34;\n  \u0026#34;Basic_A4\u0026#34;\n  \u0026#34;Standard_A0\u0026#34;\n  \u0026#34;Standard_A1\u0026#34;\n  \u0026#34;Standard_A10\u0026#34;\n  \u0026#34;Standard_A11\u0026#34;\n  \u0026#34;Standard_A1_v2\u0026#34;\n  \u0026#34;Standard_A2\u0026#34;\n  \u0026#34;Standard_A2m_v2\u0026#34;\n  \u0026#34;Standard_A2_v2\u0026#34;\n  \u0026#34;Standard_A3\u0026#34;\n  \u0026#34;Standard_A4\u0026#34;\n  \u0026#34;Standard_A4m_v2\u0026#34;\n  \u0026#34;Standard_A4_v2\u0026#34;\n  \u0026#34;Standard_A5\u0026#34;\n  \u0026#34;Standard_A6\u0026#34;\n  \u0026#34;Standard_A7\u0026#34;\n  \u0026#34;Standard_A8\u0026#34;\n  \u0026#34;Standard_A8m_v2\u0026#34;\n  \u0026#34;Standard_A8_v2\u0026#34;\n  \u0026#34;Standard_A9\u0026#34;\n  \u0026#34;Standard_B1ms\u0026#34;\n  \u0026#34;Standard_B1s\u0026#34;\n  \u0026#34;Standard_B2ms\u0026#34;\n  \u0026#34;Standard_B2s\u0026#34;\n  \u0026#34;Standard_B4ms\u0026#34;\n  \u0026#34;Standard_B8ms\u0026#34;\n  \u0026#34;Standard_D1\u0026#34;\n  \u0026#34;Standard_D11\u0026#34;\n  \u0026#34;Standard_D11_v2\u0026#34;\n  \u0026#34;Standard_D12\u0026#34;\n  \u0026#34;Standard_D12_v2\u0026#34;\n  \u0026#34;Standard_D13\u0026#34;\n  \u0026#34;Standard_D13_v2\u0026#34;\n  \u0026#34;Standard_D14\u0026#34;\n  \u0026#34;Standard_D14_v2\u0026#34;\n  \u0026#34;Standard_D15_v2\u0026#34;\n  \u0026#34;Standard_D16s_v3\u0026#34;\n  \u0026#34;Standard_D16_v3\u0026#34;\n  \u0026#34;Standard_D1_v2\u0026#34;\n  \u0026#34;Standard_D2\u0026#34;\n  \u0026#34;Standard_D2s_v3\u0026#34;\n  \u0026#34;Standard_D2_v2\u0026#34;\n  \u0026#34;Standard_D2_v3\u0026#34;\n  \u0026#34;Standard_D3\u0026#34;\n  \u0026#34;Standard_D32s_v3\u0026#34;\n  \u0026#34;Standard_D32_v3\u0026#34;\n  \u0026#34;Standard_D3_v2\u0026#34;\n  \u0026#34;Standard_D4\u0026#34;\n  \u0026#34;Standard_D4s_v3\u0026#34;\n  \u0026#34;Standard_D4_v2\u0026#34;\n  \u0026#34;Standard_D4_v3\u0026#34;\n  \u0026#34;Standard_D5_v2\u0026#34;\n  \u0026#34;Standard_D64s_v3\u0026#34;\n  \u0026#34;Standard_D64_v3\u0026#34;\n  \u0026#34;Standard_D8s_v3\u0026#34;\n  \u0026#34;Standard_D8_v3\u0026#34;\n  \u0026#34;Standard_DS1\u0026#34;\n  \u0026#34;Standard_DS11\u0026#34;\n  \u0026#34;Standard_DS11_v2\u0026#34;\n  \u0026#34;Standard_DS12\u0026#34;\n  \u0026#34;Standard_DS12_v2\u0026#34;\n  \u0026#34;Standard_DS13\u0026#34;\n  \u0026#34;Standard_DS13-2_v2\u0026#34;\n  \u0026#34;Standard_DS13-4_v2\u0026#34;\n  \u0026#34;Standard_DS13_v2\u0026#34;\n  \u0026#34;Standard_DS14\u0026#34;\n  \u0026#34;Standard_DS14-4_v2\u0026#34;\n  \u0026#34;Standard_DS14-8_v2\u0026#34;\n  \u0026#34;Standard_DS14_v2\u0026#34;\n  \u0026#34;Standard_DS15_v2\u0026#34;\n  \u0026#34;Standard_DS1_v2\u0026#34;\n  \u0026#34;Standard_DS2\u0026#34;\n  \u0026#34;Standard_DS2_v2\u0026#34;\n  \u0026#34;Standard_DS3\u0026#34;\n  \u0026#34;Standard_DS3_v2\u0026#34;\n  \u0026#34;Standard_DS4\u0026#34;\n  \u0026#34;Standard_DS4_v2\u0026#34;\n  \u0026#34;Standard_DS5_v2\u0026#34;\n  \u0026#34;Standard_E16s_v3\u0026#34;\n  \u0026#34;Standard_E16_v3\u0026#34;\n  \u0026#34;Standard_E2s_v3\u0026#34;\n  \u0026#34;Standard_E2_v3\u0026#34;\n  \u0026#34;Standard_E32-16_v3\u0026#34;\n  \u0026#34;Standard_E32-8s_v3\u0026#34;\n  \u0026#34;Standard_E32s_v3\u0026#34;\n  \u0026#34;Standard_E32_v3\u0026#34;\n  \u0026#34;Standard_E4s_v3\u0026#34;\n  \u0026#34;Standard_E4_v3\u0026#34;\n  \u0026#34;Standard_E64-16s_v3\u0026#34;\n  \u0026#34;Standard_E64-32s_v3\u0026#34;\n  \u0026#34;Standard_E64s_v3\u0026#34;\n  \u0026#34;Standard_E64_v3\u0026#34;\n  \u0026#34;Standard_E8s_v3\u0026#34;\n  \u0026#34;Standard_E8_v3\u0026#34;\n  \u0026#34;Standard_F1\u0026#34;\n  \u0026#34;Standard_F16\u0026#34;\n  \u0026#34;Standard_F16s\u0026#34;\n  \u0026#34;Standard_F16s_v2\u0026#34;\n  \u0026#34;Standard_F1s\u0026#34;\n  \u0026#34;Standard_F2\u0026#34;\n  \u0026#34;Standard_F2s\u0026#34;\n  \u0026#34;Standard_F2s_v2\u0026#34;\n  \u0026#34;Standard_F32s_v2\u0026#34;\n  \u0026#34;Standard_F4\u0026#34;\n  \u0026#34;Standard_F4s\u0026#34;\n  \u0026#34;Standard_F4s_v2\u0026#34;\n  \u0026#34;Standard_F64s_v2\u0026#34;\n  \u0026#34;Standard_F72s_v2\u0026#34;\n  \u0026#34;Standard_F8\u0026#34;\n  \u0026#34;Standard_F8s\u0026#34;\n  \u0026#34;Standard_F8s_v2\u0026#34;\n  \u0026#34;Standard_G1\u0026#34;\n  \u0026#34;Standard_G2\u0026#34;\n  \u0026#34;Standard_G3\u0026#34;\n  \u0026#34;Standard_G4\u0026#34;\n  \u0026#34;Standard_G5\u0026#34;\n  \u0026#34;Standard_GS1\u0026#34;\n  \u0026#34;Standard_GS2\u0026#34;\n  \u0026#34;Standard_GS3\u0026#34;\n  \u0026#34;Standard_GS4\u0026#34;\n  \u0026#34;Standard_GS4-4\u0026#34;\n  \u0026#34;Standard_GS4-8\u0026#34;\n  \u0026#34;Standard_GS5\u0026#34;\n  \u0026#34;Standard_GS5-16\u0026#34;\n  \u0026#34;Standard_GS5-8\u0026#34;\n  \u0026#34;Standard_H16\u0026#34;\n  \u0026#34;Standard_H16m\u0026#34;\n  \u0026#34;Standard_H16mr\u0026#34;\n  \u0026#34;Standard_H16r\u0026#34;\n  \u0026#34;Standard_H8\u0026#34;\n  \u0026#34;Standard_H8m\u0026#34;\n  \u0026#34;Standard_L16s\u0026#34;\n  \u0026#34;Standard_L32s\u0026#34;\n  \u0026#34;Standard_L4s\u0026#34;\n  \u0026#34;Standard_L8s\u0026#34;\n  \u0026#34;Standard_M128-32ms\u0026#34;\n  \u0026#34;Standard_M128-64ms\u0026#34;\n  \u0026#34;Standard_M128ms\u0026#34;\n  \u0026#34;Standard_M128s\u0026#34;\n  \u0026#34;Standard_M64-16ms\u0026#34;\n  \u0026#34;Standard_M64-32ms\u0026#34;\n  \u0026#34;Standard_M64ms\u0026#34;\n  \u0026#34;Standard_M64s\u0026#34;\n  \u0026#34;Standard_NC12\u0026#34;\n  \u0026#34;Standard_NC12s_v2\u0026#34;\n  \u0026#34;Standard_NC12s_v3\u0026#34;\n  \u0026#34;Standard_NC24\u0026#34;\n  \u0026#34;Standard_NC24r\u0026#34;\n  \u0026#34;Standard_NC24rs_v2\u0026#34;\n  \u0026#34;Standard_NC24rs_v3\u0026#34;\n  \u0026#34;Standard_NC24s_v2\u0026#34;\n  \u0026#34;Standard_NC24s_v3\u0026#34;\n  \u0026#34;Standard_NC6\u0026#34;\n  \u0026#34;Standard_NC6s_v2\u0026#34;\n  \u0026#34;Standard_NC6s_v3\u0026#34;\n  \u0026#34;Standard_ND12s\u0026#34;\n  \u0026#34;Standard_ND24rs\u0026#34;\n  \u0026#34;Standard_ND24s\u0026#34;\n  \u0026#34;Standard_ND6s\u0026#34;\n  \u0026#34;Standard_NV12\u0026#34;\n  \u0026#34;Standard_NV24\u0026#34;\n  \u0026#34;Standard_NV6\u0026#34;\n    HardwareProfile_Status   (Appears on:VirtualMachine_Status)  Deprecated version of HardwareProfile_Status. Use v1beta20201201.HardwareProfile_Status instead\n    Field Description      vmSize  HardwareProfileStatusVmSize         HardwareProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)  Deprecated version of HardwareProfile_Status. Use v1beta20201201.HardwareProfile_Status instead\n    Field Description      vmSize  HardwareProfileStatusVmSize         ImageReference   (Appears on:StorageProfile, VirtualMachineScaleSetStorageProfile)  Deprecated version of ImageReference. Use v1beta20201201.ImageReference instead\n    Field Description      offer  string        publisher  string        reference  genruntime.ResourceReference         sku  string        version  string        ImageReferenceARM   (Appears on:StorageProfileARM, VirtualMachineScaleSetStorageProfileARM)  Deprecated version of ImageReference. Use v1beta20201201.ImageReference instead\n    Field Description      id  string        offer  string        publisher  string        sku  string        version  string        ImageReference_Status   (Appears on:StorageProfile_Status, VirtualMachineScaleSetStorageProfile_Status)  Deprecated version of ImageReference_Status. Use v1beta20201201.ImageReference_Status instead\n    Field Description      exactVersion  string        id  string        offer  string        publisher  string        sku  string        version  string        ImageReference_StatusARM   (Appears on:StorageProfile_StatusARM, VirtualMachineScaleSetStorageProfile_StatusARM)  Deprecated version of ImageReference_Status. Use v1beta20201201.ImageReference_Status instead\n    Field Description      exactVersion  string        id  string        offer  string        publisher  string        sku  string        version  string        InnerError_Status   (Appears on:ApiError_Status)  Deprecated version of InnerError_Status. Use v1beta20201201.InnerError_Status instead\n    Field Description      errordetail  string        exceptiontype  string        InnerError_StatusARM   (Appears on:ApiError_StatusARM)  Deprecated version of InnerError_Status. Use v1beta20201201.InnerError_Status instead\n    Field Description      errordetail  string        exceptiontype  string        InstanceViewStatusStatusLevel (string alias)  (Appears on:InstanceViewStatus_Status, InstanceViewStatus_StatusARM)  Deprecated version of InstanceViewStatusStatusLevel. Use v1beta20201201.InstanceViewStatusStatusLevel instead\n    Value Description   \u0026#34;Error\u0026#34;\n  \u0026#34;Info\u0026#34;\n  \u0026#34;Warning\u0026#34;\n    InstanceViewStatus_Status   (Appears on:BootDiagnosticsInstanceView_Status, DiskInstanceView_Status, VirtualMachineAgentInstanceView_Status, VirtualMachineExtensionHandlerInstanceView_Status, VirtualMachineExtensionInstanceView_Status, VirtualMachineHealthStatus_Status, VirtualMachineInstanceView_Status, VirtualMachinePatchStatus_Status)  Deprecated version of InstanceViewStatus_Status. Use v1beta20201201.InstanceViewStatus_Status instead\n    Field Description      code  string        displayStatus  string        level  InstanceViewStatusStatusLevel         message  string        time  string        InstanceViewStatus_StatusARM   (Appears on:BootDiagnosticsInstanceView_StatusARM, DiskInstanceView_StatusARM, VirtualMachineAgentInstanceView_StatusARM, VirtualMachineExtensionHandlerInstanceView_StatusARM, VirtualMachineExtensionInstanceView_StatusARM, VirtualMachineHealthStatus_StatusARM, VirtualMachineInstanceView_StatusARM, VirtualMachinePatchStatus_StatusARM)  Deprecated version of InstanceViewStatus_Status. Use v1beta20201201.InstanceViewStatus_Status instead\n    Field Description      code  string        displayStatus  string        level  InstanceViewStatusStatusLevel         message  string        time  string        KeyVaultKeyReference   (Appears on:DiskEncryptionSettings)  Deprecated version of KeyVaultKeyReference. Use v1beta20201201.KeyVaultKeyReference instead\n    Field Description      keyUrl  string        sourceVault  SubResource         KeyVaultKeyReferenceARM   (Appears on:DiskEncryptionSettingsARM)  Deprecated version of KeyVaultKeyReference. Use v1beta20201201.KeyVaultKeyReference instead\n    Field Description      keyUrl  string        sourceVault  SubResourceARM         KeyVaultKeyReference_Status   (Appears on:DiskEncryptionSettings_Status)  Deprecated version of KeyVaultKeyReference_Status. Use v1beta20201201.KeyVaultKeyReference_Status instead\n    Field Description      keyUrl  string        sourceVault  SubResource_Status         KeyVaultKeyReference_StatusARM   (Appears on:DiskEncryptionSettings_StatusARM)  Deprecated version of KeyVaultKeyReference_Status. Use v1beta20201201.KeyVaultKeyReference_Status instead\n    Field Description      keyUrl  string        sourceVault  SubResource_StatusARM         KeyVaultSecretReference   (Appears on:DiskEncryptionSettings)  Deprecated version of KeyVaultSecretReference. Use v1beta20201201.KeyVaultSecretReference instead\n    Field Description      secretUrl  string        sourceVault  SubResource         KeyVaultSecretReferenceARM   (Appears on:DiskEncryptionSettingsARM)  Deprecated version of KeyVaultSecretReference. Use v1beta20201201.KeyVaultSecretReference instead\n    Field Description      secretUrl  string        sourceVault  SubResourceARM         KeyVaultSecretReference_Status   (Appears on:DiskEncryptionSettings_Status)  Deprecated version of KeyVaultSecretReference_Status. Use v1beta20201201.KeyVaultSecretReference_Status instead\n    Field Description      secretUrl  string        sourceVault  SubResource_Status         KeyVaultSecretReference_StatusARM   (Appears on:DiskEncryptionSettings_StatusARM)  Deprecated version of KeyVaultSecretReference_Status. Use v1beta20201201.KeyVaultSecretReference_Status instead\n    Field Description      secretUrl  string        sourceVault  SubResource_StatusARM         LastPatchInstallationSummaryStatusStatus (string alias)  (Appears on:LastPatchInstallationSummary_Status, LastPatchInstallationSummary_StatusARM)  Deprecated version of LastPatchInstallationSummaryStatusStatus. Use v1beta20201201.LastPatchInstallationSummaryStatusStatus instead\n    Value Description   \u0026#34;CompletedWithWarnings\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    LastPatchInstallationSummary_Status   (Appears on:VirtualMachinePatchStatus_Status)  Deprecated version of LastPatchInstallationSummary_Status. Use v1beta20201201.LastPatchInstallationSummary_Status instead\n    Field Description      error  ApiError_Status         excludedPatchCount  int        failedPatchCount  int        installationActivityId  string        installedPatchCount  int        lastModifiedTime  string        maintenanceWindowExceeded  bool        notSelectedPatchCount  int        pendingPatchCount  int        startTime  string        status  LastPatchInstallationSummaryStatusStatus         LastPatchInstallationSummary_StatusARM   (Appears on:VirtualMachinePatchStatus_StatusARM)  Deprecated version of LastPatchInstallationSummary_Status. Use v1beta20201201.LastPatchInstallationSummary_Status instead\n    Field Description      error  ApiError_StatusARM         excludedPatchCount  int        failedPatchCount  int        installationActivityId  string        installedPatchCount  int        lastModifiedTime  string        maintenanceWindowExceeded  bool        notSelectedPatchCount  int        pendingPatchCount  int        startTime  string        status  LastPatchInstallationSummaryStatusStatus         LinuxConfiguration   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Deprecated version of LinuxConfiguration. Use v1beta20201201.LinuxConfiguration instead\n    Field Description      disablePasswordAuthentication  bool        patchSettings  LinuxPatchSettings         provisionVMAgent  bool        ssh  SshConfiguration         LinuxConfigurationARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Deprecated version of LinuxConfiguration. Use v1beta20201201.LinuxConfiguration instead\n    Field Description      disablePasswordAuthentication  bool        patchSettings  LinuxPatchSettingsARM         provisionVMAgent  bool        ssh  SshConfigurationARM         LinuxConfiguration_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)  Deprecated version of LinuxConfiguration_Status. Use v1beta20201201.LinuxConfiguration_Status instead\n    Field Description      disablePasswordAuthentication  bool        patchSettings  LinuxPatchSettings_Status         provisionVMAgent  bool        ssh  SshConfiguration_Status         LinuxConfiguration_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)  Deprecated version of LinuxConfiguration_Status. Use v1beta20201201.LinuxConfiguration_Status instead\n    Field Description      disablePasswordAuthentication  bool        patchSettings  LinuxPatchSettings_StatusARM         provisionVMAgent  bool        ssh  SshConfiguration_StatusARM         LinuxPatchSettings   (Appears on:LinuxConfiguration)  Deprecated version of LinuxPatchSettings. Use v1beta20201201.LinuxPatchSettings instead\n    Field Description      patchMode  LinuxPatchSettingsPatchMode         LinuxPatchSettingsARM   (Appears on:LinuxConfigurationARM)  Deprecated version of LinuxPatchSettings. Use v1beta20201201.LinuxPatchSettings instead\n    Field Description      patchMode  LinuxPatchSettingsPatchMode         LinuxPatchSettingsPatchMode (string alias)  (Appears on:LinuxPatchSettings, LinuxPatchSettingsARM)  Deprecated version of LinuxPatchSettingsPatchMode. Use v1beta20201201.LinuxPatchSettingsPatchMode instead\n    Value Description   \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;ImageDefault\u0026#34;\n    LinuxPatchSettingsStatusPatchMode (string alias)  (Appears on:LinuxPatchSettings_Status, LinuxPatchSettings_StatusARM)  Deprecated version of LinuxPatchSettingsStatusPatchMode. Use v1beta20201201.LinuxPatchSettingsStatusPatchMode instead\n    Value Description   \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;ImageDefault\u0026#34;\n    LinuxPatchSettings_Status   (Appears on:LinuxConfiguration_Status)  Deprecated version of LinuxPatchSettings_Status. Use v1beta20201201.LinuxPatchSettings_Status instead\n    Field Description      patchMode  LinuxPatchSettingsStatusPatchMode         LinuxPatchSettings_StatusARM   (Appears on:LinuxConfiguration_StatusARM)  Deprecated version of LinuxPatchSettings_Status. Use v1beta20201201.LinuxPatchSettings_Status instead\n    Field Description      patchMode  LinuxPatchSettingsStatusPatchMode         MaintenanceRedeployStatusStatusLastOperationResultCode (string alias)  (Appears on:MaintenanceRedeployStatus_Status, MaintenanceRedeployStatus_StatusARM)  Deprecated version of MaintenanceRedeployStatusStatusLastOperationResultCode. Use v1beta20201201.MaintenanceRedeployStatusStatusLastOperationResultCode instead\n    Value Description   \u0026#34;MaintenanceAborted\u0026#34;\n  \u0026#34;MaintenanceCompleted\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;RetryLater\u0026#34;\n    MaintenanceRedeployStatus_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of MaintenanceRedeployStatus_Status. Use v1beta20201201.MaintenanceRedeployStatus_Status instead\n    Field Description      isCustomerInitiatedMaintenanceAllowed  bool        lastOperationMessage  string        lastOperationResultCode  MaintenanceRedeployStatusStatusLastOperationResultCode         maintenanceWindowEndTime  string        maintenanceWindowStartTime  string        preMaintenanceWindowEndTime  string        preMaintenanceWindowStartTime  string        MaintenanceRedeployStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of MaintenanceRedeployStatus_Status. Use v1beta20201201.MaintenanceRedeployStatus_Status instead\n    Field Description      isCustomerInitiatedMaintenanceAllowed  bool        lastOperationMessage  string        lastOperationResultCode  MaintenanceRedeployStatusStatusLastOperationResultCode         maintenanceWindowEndTime  string        maintenanceWindowStartTime  string        preMaintenanceWindowEndTime  string        preMaintenanceWindowStartTime  string        ManagedDiskParameters   (Appears on:DataDisk, OSDisk)  Deprecated version of ManagedDiskParameters. Use v1beta20201201.ManagedDiskParameters instead\n    Field Description      diskEncryptionSet  DiskEncryptionSetParameters         reference  genruntime.ResourceReference         storageAccountType  ManagedDiskParametersStorageAccountType         ManagedDiskParametersARM   (Appears on:DataDiskARM, OSDiskARM)  Deprecated version of ManagedDiskParameters. Use v1beta20201201.ManagedDiskParameters instead\n    Field Description      diskEncryptionSet  DiskEncryptionSetParametersARM         id  string        storageAccountType  ManagedDiskParametersStorageAccountType         ManagedDiskParametersStorageAccountType (string alias)  (Appears on:ManagedDiskParameters, ManagedDiskParametersARM)  Deprecated version of ManagedDiskParametersStorageAccountType. Use v1beta20201201.ManagedDiskParametersStorageAccountType instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ManagedDiskParameters_Status   (Appears on:DataDisk_Status, OSDisk_Status)  Deprecated version of ManagedDiskParameters_Status. Use v1beta20201201.ManagedDiskParameters_Status instead\n    Field Description      diskEncryptionSet  SubResource_Status         id  string        storageAccountType  StorageAccountType_Status         ManagedDiskParameters_StatusARM   (Appears on:DataDisk_StatusARM, OSDisk_StatusARM)  Deprecated version of ManagedDiskParameters_Status. Use v1beta20201201.ManagedDiskParameters_Status instead\n    Field Description      diskEncryptionSet  SubResource_StatusARM         id  string        storageAccountType  StorageAccountType_Status         NetworkInterfaceReferencePropertiesARM   (Appears on:VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM)  Deprecated version of NetworkInterfaceReferenceProperties. Use v1beta20201201.NetworkInterfaceReferenceProperties instead\n    Field Description      primary  bool        NetworkInterfaceReferenceProperties_StatusARM   (Appears on:NetworkInterfaceReference_StatusARM)  Deprecated version of NetworkInterfaceReferenceProperties_Status. Use v1beta20201201.NetworkInterfaceReferenceProperties_Status instead\n    Field Description      primary  bool        NetworkInterfaceReference_Status   (Appears on:NetworkProfile_Status)  Deprecated version of NetworkInterfaceReference_Status. Use v1beta20201201.NetworkInterfaceReference_Status instead\n    Field Description      id  string        primary  bool        NetworkInterfaceReference_StatusARM   (Appears on:NetworkProfile_StatusARM)  Deprecated version of NetworkInterfaceReference_Status. Use v1beta20201201.NetworkInterfaceReference_Status instead\n    Field Description      id  string        properties  NetworkInterfaceReferenceProperties_StatusARM         NetworkProfile_Status   (Appears on:VirtualMachine_Status)  Deprecated version of NetworkProfile_Status. Use v1beta20201201.NetworkProfile_Status instead\n    Field Description      networkInterfaces  []NetworkInterfaceReference_Status         NetworkProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)  Deprecated version of NetworkProfile_Status. Use v1beta20201201.NetworkProfile_Status instead\n    Field Description      networkInterfaces  []NetworkInterfaceReference_StatusARM         OSDisk   (Appears on:StorageProfile)  Deprecated version of OSDisk. Use v1beta20201201.OSDisk instead\n    Field Description      caching  OSDiskCaching         createOption  OSDiskCreateOption         diffDiskSettings  DiffDiskSettings         diskSizeGB  int        encryptionSettings  DiskEncryptionSettings         image  VirtualHardDisk         managedDisk  ManagedDiskParameters         name  string        osType  OSDiskOsType         vhd  VirtualHardDisk         writeAcceleratorEnabled  bool        OSDiskARM   (Appears on:StorageProfileARM)  Deprecated version of OSDisk. Use v1beta20201201.OSDisk instead\n    Field Description      caching  OSDiskCaching         createOption  OSDiskCreateOption         diffDiskSettings  DiffDiskSettingsARM         diskSizeGB  int        encryptionSettings  DiskEncryptionSettingsARM         image  VirtualHardDiskARM         managedDisk  ManagedDiskParametersARM         name  string        osType  OSDiskOsType         vhd  VirtualHardDiskARM         writeAcceleratorEnabled  bool        OSDiskCaching (string alias)  (Appears on:OSDisk, OSDiskARM)  Deprecated version of OSDiskCaching. Use v1beta20201201.OSDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    OSDiskCreateOption (string alias)  (Appears on:OSDisk, OSDiskARM)  Deprecated version of OSDiskCreateOption. Use v1beta20201201.OSDiskCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    OSDiskOsType (string alias)  (Appears on:OSDisk, OSDiskARM)  Deprecated version of OSDiskOsType. Use v1beta20201201.OSDiskOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    OSDiskStatusOsType (string alias)  (Appears on:OSDisk_Status, OSDisk_StatusARM)  Deprecated version of OSDiskStatusOsType. Use v1beta20201201.OSDiskStatusOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    OSDisk_Status   (Appears on:StorageProfile_Status)  Deprecated version of OSDisk_Status. Use v1beta20201201.OSDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diffDiskSettings  DiffDiskSettings_Status         diskSizeGB  int        encryptionSettings  DiskEncryptionSettings_Status         image  VirtualHardDisk_Status         managedDisk  ManagedDiskParameters_Status         name  string        osType  OSDiskStatusOsType         vhd  VirtualHardDisk_Status         writeAcceleratorEnabled  bool        OSDisk_StatusARM   (Appears on:StorageProfile_StatusARM)  Deprecated version of OSDisk_Status. Use v1beta20201201.OSDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diffDiskSettings  DiffDiskSettings_StatusARM         diskSizeGB  int        encryptionSettings  DiskEncryptionSettings_StatusARM         image  VirtualHardDisk_StatusARM         managedDisk  ManagedDiskParameters_StatusARM         name  string        osType  OSDiskStatusOsType         vhd  VirtualHardDisk_StatusARM         writeAcceleratorEnabled  bool        OSProfile   (Appears on:VirtualMachines_Spec)  Deprecated version of OSProfile. Use v1beta20201201.OSProfile instead\n    Field Description      adminPassword  genruntime.SecretReference         adminUsername  string        allowExtensionOperations  bool        computerName  string        customData  string        linuxConfiguration  LinuxConfiguration         requireGuestProvisionSignal  bool        secrets  []VaultSecretGroup         windowsConfiguration  WindowsConfiguration         OSProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Deprecated version of OSProfile. Use v1beta20201201.OSProfile instead\n    Field Description      adminPassword  string        adminUsername  string        allowExtensionOperations  bool        computerName  string        customData  string        linuxConfiguration  LinuxConfigurationARM         requireGuestProvisionSignal  bool        secrets  []VaultSecretGroupARM         windowsConfiguration  WindowsConfigurationARM         OSProfile_Status   (Appears on:VirtualMachine_Status)  Deprecated version of OSProfile_Status. Use v1beta20201201.OSProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        allowExtensionOperations  bool        computerName  string        customData  string        linuxConfiguration  LinuxConfiguration_Status         requireGuestProvisionSignal  bool        secrets  []VaultSecretGroup_Status         windowsConfiguration  WindowsConfiguration_Status         OSProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)  Deprecated version of OSProfile_Status. Use v1beta20201201.OSProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        allowExtensionOperations  bool        computerName  string        customData  string        linuxConfiguration  LinuxConfiguration_StatusARM         requireGuestProvisionSignal  bool        secrets  []VaultSecretGroup_StatusARM         windowsConfiguration  WindowsConfiguration_StatusARM         OrchestrationMode_Status (string alias)  (Appears on:VirtualMachineScaleSetProperties_StatusARM, VirtualMachineScaleSet_Status)  Deprecated version of OrchestrationMode_Status. Use v1beta20201201.OrchestrationMode_Status instead\n    Value Description   \u0026#34;Flexible\u0026#34;\n  \u0026#34;Uniform\u0026#34;\n    PatchSettings   (Appears on:WindowsConfiguration)  Deprecated version of PatchSettings. Use v1beta20201201.PatchSettings instead\n    Field Description      enableHotpatching  bool        patchMode  PatchSettingsPatchMode         PatchSettingsARM   (Appears on:WindowsConfigurationARM)  Deprecated version of PatchSettings. Use v1beta20201201.PatchSettings instead\n    Field Description      enableHotpatching  bool        patchMode  PatchSettingsPatchMode         PatchSettingsPatchMode (string alias)  (Appears on:PatchSettings, PatchSettingsARM)  Deprecated version of PatchSettingsPatchMode. Use v1beta20201201.PatchSettingsPatchMode instead\n    Value Description   \u0026#34;AutomaticByOS\u0026#34;\n  \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;Manual\u0026#34;\n    PatchSettingsStatusPatchMode (string alias)  (Appears on:PatchSettings_Status, PatchSettings_StatusARM)  Deprecated version of PatchSettingsStatusPatchMode. Use v1beta20201201.PatchSettingsStatusPatchMode instead\n    Value Description   \u0026#34;AutomaticByOS\u0026#34;\n  \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;Manual\u0026#34;\n    PatchSettings_Status   (Appears on:WindowsConfiguration_Status)  Deprecated version of PatchSettings_Status. Use v1beta20201201.PatchSettings_Status instead\n    Field Description      enableHotpatching  bool        patchMode  PatchSettingsStatusPatchMode         PatchSettings_StatusARM   (Appears on:WindowsConfiguration_StatusARM)  Deprecated version of PatchSettings_Status. Use v1beta20201201.PatchSettings_Status instead\n    Field Description      enableHotpatching  bool        patchMode  PatchSettingsStatusPatchMode         Plan   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Deprecated version of Plan. Use v1beta20201201.Plan instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        PlanARM   (Appears on:VirtualMachineScaleSets_SpecARM, VirtualMachines_SpecARM)  Deprecated version of Plan. Use v1beta20201201.Plan instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        Plan_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)  Deprecated version of Plan_Status. Use v1beta20201201.Plan_Status instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        Plan_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM, VirtualMachine_StatusARM)  Deprecated version of Plan_Status. Use v1beta20201201.Plan_Status instead\n    Field Description      name  string        product  string        promotionCode  string        publisher  string        Priority_Status (string alias)  (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_Status, VirtualMachineScaleSetVMProfile_StatusARM, VirtualMachine_Status)  Deprecated version of Priority_Status. Use v1beta20201201.Priority_Status instead\n    Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    RollingUpgradePolicy   (Appears on:UpgradePolicy)  Deprecated version of RollingUpgradePolicy. Use v1beta20201201.RollingUpgradePolicy instead\n    Field Description      enableCrossZoneUpgrade  bool        maxBatchInstancePercent  int        maxUnhealthyInstancePercent  int        maxUnhealthyUpgradedInstancePercent  int        pauseTimeBetweenBatches  string        prioritizeUnhealthyInstances  bool        RollingUpgradePolicyARM   (Appears on:UpgradePolicyARM)  Deprecated version of RollingUpgradePolicy. Use v1beta20201201.RollingUpgradePolicy instead\n    Field Description      enableCrossZoneUpgrade  bool        maxBatchInstancePercent  int        maxUnhealthyInstancePercent  int        maxUnhealthyUpgradedInstancePercent  int        pauseTimeBetweenBatches  string        prioritizeUnhealthyInstances  bool        RollingUpgradePolicy_Status   (Appears on:UpgradePolicy_Status)  Deprecated version of RollingUpgradePolicy_Status. Use v1beta20201201.RollingUpgradePolicy_Status instead\n    Field Description      enableCrossZoneUpgrade  bool        maxBatchInstancePercent  int        maxUnhealthyInstancePercent  int        maxUnhealthyUpgradedInstancePercent  int        pauseTimeBetweenBatches  string        prioritizeUnhealthyInstances  bool        RollingUpgradePolicy_StatusARM   (Appears on:UpgradePolicy_StatusARM)  Deprecated version of RollingUpgradePolicy_Status. Use v1beta20201201.RollingUpgradePolicy_Status instead\n    Field Description      enableCrossZoneUpgrade  bool        maxBatchInstancePercent  int        maxUnhealthyInstancePercent  int        maxUnhealthyUpgradedInstancePercent  int        pauseTimeBetweenBatches  string        prioritizeUnhealthyInstances  bool        ScaleInPolicy   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of ScaleInPolicy. Use v1beta20201201.ScaleInPolicy instead\n    Field Description      rules  []ScaleInPolicyRules         ScaleInPolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Deprecated version of ScaleInPolicy. Use v1beta20201201.ScaleInPolicy instead\n    Field Description      rules  []ScaleInPolicyRules         ScaleInPolicyRules (string alias)  (Appears on:ScaleInPolicy, ScaleInPolicyARM)  Deprecated version of ScaleInPolicyRules. Use v1beta20201201.ScaleInPolicyRules instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;NewestVM\u0026#34;\n  \u0026#34;OldestVM\u0026#34;\n    ScaleInPolicyStatusRules (string alias)  (Appears on:ScaleInPolicy_Status, ScaleInPolicy_StatusARM)  Deprecated version of ScaleInPolicyStatusRules. Use v1beta20201201.ScaleInPolicyStatusRules instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;NewestVM\u0026#34;\n  \u0026#34;OldestVM\u0026#34;\n    ScaleInPolicy_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of ScaleInPolicy_Status. Use v1beta20201201.ScaleInPolicy_Status instead\n    Field Description      rules  []ScaleInPolicyStatusRules         ScaleInPolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)  Deprecated version of ScaleInPolicy_Status. Use v1beta20201201.ScaleInPolicy_Status instead\n    Field Description      rules  []ScaleInPolicyStatusRules         ScheduledEventsProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Deprecated version of ScheduledEventsProfile. Use v1beta20201201.ScheduledEventsProfile instead\n    Field Description      terminateNotificationProfile  TerminateNotificationProfile         ScheduledEventsProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of ScheduledEventsProfile. Use v1beta20201201.ScheduledEventsProfile instead\n    Field Description      terminateNotificationProfile  TerminateNotificationProfileARM         ScheduledEventsProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)  Deprecated version of ScheduledEventsProfile_Status. Use v1beta20201201.ScheduledEventsProfile_Status instead\n    Field Description      terminateNotificationProfile  TerminateNotificationProfile_Status         ScheduledEventsProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of ScheduledEventsProfile_Status. Use v1beta20201201.ScheduledEventsProfile_Status instead\n    Field Description      terminateNotificationProfile  TerminateNotificationProfile_StatusARM         SecurityProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Deprecated version of SecurityProfile. Use v1beta20201201.SecurityProfile instead\n    Field Description      encryptionAtHost  bool        securityType  SecurityProfileSecurityType         uefiSettings  UefiSettings         SecurityProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Deprecated version of SecurityProfile. Use v1beta20201201.SecurityProfile instead\n    Field Description      encryptionAtHost  bool        securityType  SecurityProfileSecurityType         uefiSettings  UefiSettingsARM         SecurityProfileSecurityType (string alias)  (Appears on:SecurityProfile, SecurityProfileARM)  Deprecated version of SecurityProfileSecurityType. Use v1beta20201201.SecurityProfileSecurityType instead\n    Value Description   \u0026#34;TrustedLaunch\u0026#34;\n    SecurityProfileStatusSecurityType (string alias)  (Appears on:SecurityProfile_Status, SecurityProfile_StatusARM)  Deprecated version of SecurityProfileStatusSecurityType. Use v1beta20201201.SecurityProfileStatusSecurityType instead\n    Value Description   \u0026#34;TrustedLaunch\u0026#34;\n    SecurityProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)  Deprecated version of SecurityProfile_Status. Use v1beta20201201.SecurityProfile_Status instead\n    Field Description      encryptionAtHost  bool        securityType  SecurityProfileStatusSecurityType         uefiSettings  UefiSettings_Status         SecurityProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of SecurityProfile_Status. Use v1beta20201201.SecurityProfile_Status instead\n    Field Description      encryptionAtHost  bool        securityType  SecurityProfileStatusSecurityType         uefiSettings  UefiSettings_StatusARM         Sku   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of Sku. Use v1beta20201201.Sku instead\n    Field Description      capacity  int        name  string        tier  string        SkuARM   (Appears on:VirtualMachineScaleSets_SpecARM)  Deprecated version of Sku. Use v1beta20201201.Sku instead\n    Field Description      capacity  int        name  string        tier  string        Sku_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of Sku_Status. Use v1beta20201201.Sku_Status instead\n    Field Description      capacity  int        name  string        tier  string        Sku_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)  Deprecated version of Sku_Status. Use v1beta20201201.Sku_Status instead\n    Field Description      capacity  int        name  string        tier  string        SshConfiguration   (Appears on:LinuxConfiguration)  Deprecated version of SshConfiguration. Use v1beta20201201.SshConfiguration instead\n    Field Description      publicKeys  []SshPublicKey         SshConfigurationARM   (Appears on:LinuxConfigurationARM)  Deprecated version of SshConfiguration. Use v1beta20201201.SshConfiguration instead\n    Field Description      publicKeys  []SshPublicKeyARM         SshConfiguration_Status   (Appears on:LinuxConfiguration_Status)  Deprecated version of SshConfiguration_Status. Use v1beta20201201.SshConfiguration_Status instead\n    Field Description      publicKeys  []SshPublicKey_Status         SshConfiguration_StatusARM   (Appears on:LinuxConfiguration_StatusARM)  Deprecated version of SshConfiguration_Status. Use v1beta20201201.SshConfiguration_Status instead\n    Field Description      publicKeys  []SshPublicKey_StatusARM         SshPublicKey   (Appears on:SshConfiguration)  Deprecated version of SshPublicKey. Use v1beta20201201.SshPublicKey instead\n    Field Description      keyData  string        path  string        SshPublicKeyARM   (Appears on:SshConfigurationARM)  Deprecated version of SshPublicKey. Use v1beta20201201.SshPublicKey instead\n    Field Description      keyData  string        path  string        SshPublicKey_Status   (Appears on:SshConfiguration_Status)  Deprecated version of SshPublicKey_Status. Use v1beta20201201.SshPublicKey_Status instead\n    Field Description      keyData  string        path  string        SshPublicKey_StatusARM   (Appears on:SshConfiguration_StatusARM)  Deprecated version of SshPublicKey_Status. Use v1beta20201201.SshPublicKey_Status instead\n    Field Description      keyData  string        path  string        StorageAccountType_Status (string alias)  (Appears on:ManagedDiskParameters_Status, ManagedDiskParameters_StatusARM, VirtualMachineScaleSetManagedDiskParameters_Status, VirtualMachineScaleSetManagedDiskParameters_StatusARM)  Deprecated version of StorageAccountType_Status. Use v1beta20201201.StorageAccountType_Status instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    StorageProfile   (Appears on:VirtualMachines_Spec)  Deprecated version of StorageProfile. Use v1beta20201201.StorageProfile instead\n    Field Description      dataDisks  []DataDisk         imageReference  ImageReference         osDisk  OSDisk         StorageProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Deprecated version of StorageProfile. Use v1beta20201201.StorageProfile instead\n    Field Description      dataDisks  []DataDiskARM         imageReference  ImageReferenceARM         osDisk  OSDiskARM         StorageProfile_Status   (Appears on:VirtualMachine_Status)  Deprecated version of StorageProfile_Status. Use v1beta20201201.StorageProfile_Status instead\n    Field Description      dataDisks  []DataDisk_Status         imageReference  ImageReference_Status         osDisk  OSDisk_Status         StorageProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)  Deprecated version of StorageProfile_Status. Use v1beta20201201.StorageProfile_Status instead\n    Field Description      dataDisks  []DataDisk_StatusARM         imageReference  ImageReference_StatusARM         osDisk  OSDisk_StatusARM         SubResource   (Appears on:KeyVaultKeyReference, KeyVaultSecretReference, VaultSecretGroup, VirtualMachineScaleSets_Spec, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration, VirtualMachines_Spec)  Deprecated version of SubResource. Use v1beta20201201.SubResource instead\n    Field Description      reference  genruntime.ResourceReference         SubResourceARM   (Appears on:KeyVaultKeyReferenceARM, KeyVaultSecretReferenceARM, VaultSecretGroupARM, VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM, VirtualMachineScaleSets_Spec_PropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM, VirtualMachines_Spec_PropertiesARM)  Deprecated version of SubResource. Use v1beta20201201.SubResource instead\n    Field Description      id  string        SubResource_Status   (Appears on:KeyVaultKeyReference_Status, KeyVaultSecretReference_Status, ManagedDiskParameters_Status, VaultSecretGroup_Status, VirtualMachineScaleSetIPConfiguration_Status, VirtualMachineScaleSetManagedDiskParameters_Status, VirtualMachineScaleSetNetworkConfiguration_Status, VirtualMachineScaleSetPublicIPAddressConfiguration_Status, VirtualMachineScaleSet_Status, VirtualMachine_Status)  Deprecated version of SubResource_Status. Use v1beta20201201.SubResource_Status instead\n    Field Description      id  string        SubResource_StatusARM   (Appears on:KeyVaultKeyReference_StatusARM, KeyVaultSecretReference_StatusARM, ManagedDiskParameters_StatusARM, VaultSecretGroup_StatusARM, VirtualMachineProperties_StatusARM, VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetManagedDiskParameters_StatusARM, VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM, VirtualMachineScaleSetProperties_StatusARM, VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)  Deprecated version of SubResource_Status. Use v1beta20201201.SubResource_Status instead\n    Field Description      id  string        TerminateNotificationProfile   (Appears on:ScheduledEventsProfile)  Deprecated version of TerminateNotificationProfile. Use v1beta20201201.TerminateNotificationProfile instead\n    Field Description      enable  bool        notBeforeTimeout  string        TerminateNotificationProfileARM   (Appears on:ScheduledEventsProfileARM)  Deprecated version of TerminateNotificationProfile. Use v1beta20201201.TerminateNotificationProfile instead\n    Field Description      enable  bool        notBeforeTimeout  string        TerminateNotificationProfile_Status   (Appears on:ScheduledEventsProfile_Status)  Deprecated version of TerminateNotificationProfile_Status. Use v1beta20201201.TerminateNotificationProfile_Status instead\n    Field Description      enable  bool        notBeforeTimeout  string        TerminateNotificationProfile_StatusARM   (Appears on:ScheduledEventsProfile_StatusARM)  Deprecated version of TerminateNotificationProfile_Status. Use v1beta20201201.TerminateNotificationProfile_Status instead\n    Field Description      enable  bool        notBeforeTimeout  string        UefiSettings   (Appears on:SecurityProfile)  Deprecated version of UefiSettings. Use v1beta20201201.UefiSettings instead\n    Field Description      secureBootEnabled  bool        vTpmEnabled  bool        UefiSettingsARM   (Appears on:SecurityProfileARM)  Deprecated version of UefiSettings. Use v1beta20201201.UefiSettings instead\n    Field Description      secureBootEnabled  bool        vTpmEnabled  bool        UefiSettings_Status   (Appears on:SecurityProfile_Status)  Deprecated version of UefiSettings_Status. Use v1beta20201201.UefiSettings_Status instead\n    Field Description      secureBootEnabled  bool        vTpmEnabled  bool        UefiSettings_StatusARM   (Appears on:SecurityProfile_StatusARM)  Deprecated version of UefiSettings_Status. Use v1beta20201201.UefiSettings_Status instead\n    Field Description      secureBootEnabled  bool        vTpmEnabled  bool        UpgradePolicy   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of UpgradePolicy. Use v1beta20201201.UpgradePolicy instead\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy         mode  UpgradePolicyMode         rollingUpgradePolicy  RollingUpgradePolicy         UpgradePolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Deprecated version of UpgradePolicy. Use v1beta20201201.UpgradePolicy instead\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicyARM         mode  UpgradePolicyMode         rollingUpgradePolicy  RollingUpgradePolicyARM         UpgradePolicyMode (string alias)  (Appears on:UpgradePolicy, UpgradePolicyARM)  Deprecated version of UpgradePolicyMode. Use v1beta20201201.UpgradePolicyMode instead\n    Value Description   \u0026#34;Automatic\u0026#34;\n  \u0026#34;Manual\u0026#34;\n  \u0026#34;Rolling\u0026#34;\n    UpgradePolicyStatusMode (string alias)  (Appears on:UpgradePolicy_Status, UpgradePolicy_StatusARM)  Deprecated version of UpgradePolicyStatusMode. Use v1beta20201201.UpgradePolicyStatusMode instead\n    Value Description   \u0026#34;Automatic\u0026#34;\n  \u0026#34;Manual\u0026#34;\n  \u0026#34;Rolling\u0026#34;\n    UpgradePolicy_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of UpgradePolicy_Status. Use v1beta20201201.UpgradePolicy_Status instead\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy_Status         mode  UpgradePolicyStatusMode         rollingUpgradePolicy  RollingUpgradePolicy_Status         UpgradePolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)  Deprecated version of UpgradePolicy_Status. Use v1beta20201201.UpgradePolicy_Status instead\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy_StatusARM         mode  UpgradePolicyStatusMode         rollingUpgradePolicy  RollingUpgradePolicy_StatusARM         VaultCertificate   (Appears on:VaultSecretGroup)  Deprecated version of VaultCertificate. Use v1beta20201201.VaultCertificate instead\n    Field Description      certificateStore  string        certificateUrl  string        VaultCertificateARM   (Appears on:VaultSecretGroupARM)  Deprecated version of VaultCertificate. Use v1beta20201201.VaultCertificate instead\n    Field Description      certificateStore  string        certificateUrl  string        VaultCertificate_Status   (Appears on:VaultSecretGroup_Status)  Deprecated version of VaultCertificate_Status. Use v1beta20201201.VaultCertificate_Status instead\n    Field Description      certificateStore  string        certificateUrl  string        VaultCertificate_StatusARM   (Appears on:VaultSecretGroup_StatusARM)  Deprecated version of VaultCertificate_Status. Use v1beta20201201.VaultCertificate_Status instead\n    Field Description      certificateStore  string        certificateUrl  string        VaultSecretGroup   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Deprecated version of VaultSecretGroup. Use v1beta20201201.VaultSecretGroup instead\n    Field Description      sourceVault  SubResource         vaultCertificates  []VaultCertificate         VaultSecretGroupARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Deprecated version of VaultSecretGroup. Use v1beta20201201.VaultSecretGroup instead\n    Field Description      sourceVault  SubResourceARM         vaultCertificates  []VaultCertificateARM         VaultSecretGroup_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)  Deprecated version of VaultSecretGroup_Status. Use v1beta20201201.VaultSecretGroup_Status instead\n    Field Description      sourceVault  SubResource_Status         vaultCertificates  []VaultCertificate_Status         VaultSecretGroup_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)  Deprecated version of VaultSecretGroup_Status. Use v1beta20201201.VaultSecretGroup_Status instead\n    Field Description      sourceVault  SubResource_StatusARM         vaultCertificates  []VaultCertificate_StatusARM         VirtualHardDisk   (Appears on:DataDisk, OSDisk, VirtualMachineScaleSetOSDisk)  Deprecated version of VirtualHardDisk. Use v1beta20201201.VirtualHardDisk instead\n    Field Description      uri  string        VirtualHardDiskARM   (Appears on:DataDiskARM, OSDiskARM, VirtualMachineScaleSetOSDiskARM)  Deprecated version of VirtualHardDisk. Use v1beta20201201.VirtualHardDisk instead\n    Field Description      uri  string        VirtualHardDisk_Status   (Appears on:DataDisk_Status, OSDisk_Status, VirtualMachineScaleSetOSDisk_Status)  Deprecated version of VirtualHardDisk_Status. Use v1beta20201201.VirtualHardDisk_Status instead\n    Field Description      uri  string        VirtualHardDisk_StatusARM   (Appears on:DataDisk_StatusARM, OSDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of VirtualHardDisk_Status. Use v1beta20201201.VirtualHardDisk_Status instead\n    Field Description      uri  string        VirtualMachine   Deprecated version of VirtualMachine. Use v1beta20201201.VirtualMachine instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualMachines_Spec          additionalCapabilities  AdditionalCapabilities         availabilitySet  SubResource         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    billingProfile  BillingProfile         diagnosticsProfile  DiagnosticsProfile         evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy         extendedLocation  ExtendedLocation         extensionsTimeBudget  string        hardwareProfile  HardwareProfile         host  SubResource         hostGroup  SubResource         identity  VirtualMachineIdentity         licenseType  string        location  string        networkProfile  VirtualMachines_Spec_Properties_NetworkProfile         osProfile  OSProfile         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan         platformFaultDomain  int        priority  VirtualMachinesSpecPropertiesPriority         proximityPlacementGroup  SubResource         securityProfile  SecurityProfile         storageProfile  StorageProfile         tags  map[string]string        virtualMachineScaleSet  SubResource         zones  []string           status  VirtualMachine_Status         VirtualMachineAgentInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of VirtualMachineAgentInstanceView_Status. Use v1beta20201201.VirtualMachineAgentInstanceView_Status instead\n    Field Description      extensionHandlers  []VirtualMachineExtensionHandlerInstanceView_Status         statuses  []InstanceViewStatus_Status         vmAgentVersion  string        VirtualMachineAgentInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of VirtualMachineAgentInstanceView_Status. Use v1beta20201201.VirtualMachineAgentInstanceView_Status instead\n    Field Description      extensionHandlers  []VirtualMachineExtensionHandlerInstanceView_StatusARM         statuses  []InstanceViewStatus_StatusARM         vmAgentVersion  string        VirtualMachineExtensionHandlerInstanceView_Status   (Appears on:VirtualMachineAgentInstanceView_Status)  Deprecated version of VirtualMachineExtensionHandlerInstanceView_Status. Use v1beta20201201.VirtualMachineExtensionHandlerInstanceView_Status instead\n    Field Description      status  InstanceViewStatus_Status         type  string        typeHandlerVersion  string        VirtualMachineExtensionHandlerInstanceView_StatusARM   (Appears on:VirtualMachineAgentInstanceView_StatusARM)  Deprecated version of VirtualMachineExtensionHandlerInstanceView_Status. Use v1beta20201201.VirtualMachineExtensionHandlerInstanceView_Status instead\n    Field Description      status  InstanceViewStatus_StatusARM         type  string        typeHandlerVersion  string        VirtualMachineExtensionInstanceView_Status   (Appears on:VirtualMachineExtension_Status, VirtualMachineInstanceView_Status)  Deprecated version of VirtualMachineExtensionInstanceView_Status. Use v1beta20201201.VirtualMachineExtensionInstanceView_Status instead\n    Field Description      name  string        statuses  []InstanceViewStatus_Status         substatuses  []InstanceViewStatus_Status         type  string        typeHandlerVersion  string        VirtualMachineExtensionInstanceView_StatusARM   (Appears on:VirtualMachineExtensionProperties_StatusARM, VirtualMachineInstanceView_StatusARM)  Deprecated version of VirtualMachineExtensionInstanceView_Status. Use v1beta20201201.VirtualMachineExtensionInstanceView_Status instead\n    Field Description      name  string        statuses  []InstanceViewStatus_StatusARM         substatuses  []InstanceViewStatus_StatusARM         type  string        typeHandlerVersion  string        VirtualMachineExtensionProperties_StatusARM   (Appears on:VirtualMachineExtension_StatusARM)  Deprecated version of VirtualMachineExtensionProperties_Status. Use v1beta20201201.VirtualMachineExtensionProperties_Status instead\n    Field Description      autoUpgradeMinorVersion  bool        enableAutomaticUpgrade  bool        forceUpdateTag  string        instanceView  VirtualMachineExtensionInstanceView_StatusARM         protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         provisioningState  string        publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         type  string        typeHandlerVersion  string        VirtualMachineExtension_Status   (Appears on:VirtualMachine_Status)  Deprecated version of VirtualMachineExtension_Status. Use v1beta20201201.VirtualMachineExtension_Status instead\n    Field Description      autoUpgradeMinorVersion  bool        enableAutomaticUpgrade  bool        forceUpdateTag  string        id  string        instanceView  VirtualMachineExtensionInstanceView_Status         location  string        name  string        properties_type  string        protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         provisioningState  string        publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         tags  map[string]string        type  string        typeHandlerVersion  string        VirtualMachineExtension_StatusARM   (Appears on:VirtualMachine_StatusARM)  Deprecated version of VirtualMachineExtension_Status. Use v1beta20201201.VirtualMachineExtension_Status instead\n    Field Description      id  string        location  string        name  string        properties  VirtualMachineExtensionProperties_StatusARM         tags  map[string]string        type  string        VirtualMachineHealthStatus_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of VirtualMachineHealthStatus_Status. Use v1beta20201201.VirtualMachineHealthStatus_Status instead\n    Field Description      status  InstanceViewStatus_Status         VirtualMachineHealthStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of VirtualMachineHealthStatus_Status. Use v1beta20201201.VirtualMachineHealthStatus_Status instead\n    Field Description      status  InstanceViewStatus_StatusARM         VirtualMachineIdentity   (Appears on:VirtualMachines_Spec)  Deprecated version of VirtualMachineIdentity. Use v1beta20201201.VirtualMachineIdentity instead\n    Field Description      type  VirtualMachineIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         VirtualMachineIdentityARM   (Appears on:VirtualMachines_SpecARM)  Deprecated version of VirtualMachineIdentity. Use v1beta20201201.VirtualMachineIdentity instead\n    Field Description      type  VirtualMachineIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         VirtualMachineIdentityStatusType (string alias)  (Appears on:VirtualMachineIdentity_Status, VirtualMachineIdentity_StatusARM)  Deprecated version of VirtualMachineIdentityStatusType. Use v1beta20201201.VirtualMachineIdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineIdentityType (string alias)  (Appears on:VirtualMachineIdentity, VirtualMachineIdentityARM)  Deprecated version of VirtualMachineIdentityType. Use v1beta20201201.VirtualMachineIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineIdentity_Status   (Appears on:VirtualMachine_Status)  Deprecated version of VirtualMachineIdentity_Status. Use v1beta20201201.VirtualMachineIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  VirtualMachineIdentityStatusType         userAssignedIdentities  map[string]./api/compute/v1alpha1api20201201.VirtualMachineIdentity_Status_UserAssignedIdentities         VirtualMachineIdentity_StatusARM   (Appears on:VirtualMachine_StatusARM)  Deprecated version of VirtualMachineIdentity_Status. Use v1beta20201201.VirtualMachineIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  VirtualMachineIdentityStatusType         userAssignedIdentities  map[string]./api/compute/v1alpha1api20201201.VirtualMachineIdentity_Status_UserAssignedIdentitiesARM         VirtualMachineIdentity_Status_UserAssignedIdentities   (Appears on:VirtualMachineIdentity_Status)  Deprecated version of VirtualMachineIdentity_Status_UserAssignedIdentities. Use v1beta20201201.VirtualMachineIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        VirtualMachineIdentity_Status_UserAssignedIdentitiesARM   (Appears on:VirtualMachineIdentity_StatusARM)  Deprecated version of VirtualMachineIdentity_Status_UserAssignedIdentities. Use v1beta20201201.VirtualMachineIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        VirtualMachineInstanceViewStatusHyperVGeneration (string alias)  (Appears on:VirtualMachineInstanceView_Status, VirtualMachineInstanceView_StatusARM)  Deprecated version of VirtualMachineInstanceViewStatusHyperVGeneration. Use v1beta20201201.VirtualMachineInstanceViewStatusHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    VirtualMachineInstanceView_Status   (Appears on:VirtualMachine_Status)  Deprecated version of VirtualMachineInstanceView_Status. Use v1beta20201201.VirtualMachineInstanceView_Status instead\n    Field Description      assignedHost  string        bootDiagnostics  BootDiagnosticsInstanceView_Status         computerName  string        disks  []DiskInstanceView_Status         extensions  []VirtualMachineExtensionInstanceView_Status         hyperVGeneration  VirtualMachineInstanceViewStatusHyperVGeneration         maintenanceRedeployStatus  MaintenanceRedeployStatus_Status         osName  string        osVersion  string        patchStatus  VirtualMachinePatchStatus_Status         platformFaultDomain  int        platformUpdateDomain  int        rdpThumbPrint  string        statuses  []InstanceViewStatus_Status         vmAgent  VirtualMachineAgentInstanceView_Status         vmHealth  VirtualMachineHealthStatus_Status         VirtualMachineInstanceView_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)  Deprecated version of VirtualMachineInstanceView_Status. Use v1beta20201201.VirtualMachineInstanceView_Status instead\n    Field Description      assignedHost  string        bootDiagnostics  BootDiagnosticsInstanceView_StatusARM         computerName  string        disks  []DiskInstanceView_StatusARM         extensions  []VirtualMachineExtensionInstanceView_StatusARM         hyperVGeneration  VirtualMachineInstanceViewStatusHyperVGeneration         maintenanceRedeployStatus  MaintenanceRedeployStatus_StatusARM         osName  string        osVersion  string        patchStatus  VirtualMachinePatchStatus_StatusARM         platformFaultDomain  int        platformUpdateDomain  int        rdpThumbPrint  string        statuses  []InstanceViewStatus_StatusARM         vmAgent  VirtualMachineAgentInstanceView_StatusARM         vmHealth  VirtualMachineHealthStatus_StatusARM         VirtualMachinePatchStatus_Status   (Appears on:VirtualMachineInstanceView_Status)  Deprecated version of VirtualMachinePatchStatus_Status. Use v1beta20201201.VirtualMachinePatchStatus_Status instead\n    Field Description      availablePatchSummary  AvailablePatchSummary_Status         configurationStatuses  []InstanceViewStatus_Status         lastPatchInstallationSummary  LastPatchInstallationSummary_Status         VirtualMachinePatchStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)  Deprecated version of VirtualMachinePatchStatus_Status. Use v1beta20201201.VirtualMachinePatchStatus_Status instead\n    Field Description      availablePatchSummary  AvailablePatchSummary_StatusARM         configurationStatuses  []InstanceViewStatus_StatusARM         lastPatchInstallationSummary  LastPatchInstallationSummary_StatusARM         VirtualMachineProperties_StatusARM   (Appears on:VirtualMachine_StatusARM)  Deprecated version of VirtualMachineProperties_Status. Use v1beta20201201.VirtualMachineProperties_Status instead\n    Field Description      additionalCapabilities  AdditionalCapabilities_StatusARM         availabilitySet  SubResource_StatusARM         billingProfile  BillingProfile_StatusARM         diagnosticsProfile  DiagnosticsProfile_StatusARM         evictionPolicy  EvictionPolicy_Status         extensionsTimeBudget  string        hardwareProfile  HardwareProfile_StatusARM         host  SubResource_StatusARM         hostGroup  SubResource_StatusARM         instanceView  VirtualMachineInstanceView_StatusARM         licenseType  string        networkProfile  NetworkProfile_StatusARM         osProfile  OSProfile_StatusARM         platformFaultDomain  int        priority  Priority_Status         provisioningState  string        proximityPlacementGroup  SubResource_StatusARM         securityProfile  SecurityProfile_StatusARM         storageProfile  StorageProfile_StatusARM         virtualMachineScaleSet  SubResource_StatusARM         vmId  string        VirtualMachineScaleSet   Deprecated version of VirtualMachineScaleSet. Use v1beta20201201.VirtualMachineScaleSet instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualMachineScaleSets_Spec          additionalCapabilities  AdditionalCapabilities         automaticRepairsPolicy  AutomaticRepairsPolicy         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    doNotRunExtensionsOnOverprovisionedVMs  bool        extendedLocation  ExtendedLocation         hostGroup  SubResource         identity  VirtualMachineScaleSetIdentity         location  string        orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode         overprovision  bool        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan         platformFaultDomainCount  int        proximityPlacementGroup  SubResource         scaleInPolicy  ScaleInPolicy         singlePlacementGroup  bool        sku  Sku         tags  map[string]string        upgradePolicy  UpgradePolicy         virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile         zoneBalance  bool        zones  []string           status  VirtualMachineScaleSet_Status         VirtualMachineScaleSetDataDisk   (Appears on:VirtualMachineScaleSetStorageProfile)  Deprecated version of VirtualMachineScaleSetDataDisk. Use v1beta20201201.VirtualMachineScaleSetDataDisk instead\n    Field Description      caching  VirtualMachineScaleSetDataDiskCaching         createOption  VirtualMachineScaleSetDataDiskCreateOption         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        lun  int        managedDisk  VirtualMachineScaleSetManagedDiskParameters         name  string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetDataDiskARM   (Appears on:VirtualMachineScaleSetStorageProfileARM)  Deprecated version of VirtualMachineScaleSetDataDisk. Use v1beta20201201.VirtualMachineScaleSetDataDisk instead\n    Field Description      caching  VirtualMachineScaleSetDataDiskCaching         createOption  VirtualMachineScaleSetDataDiskCreateOption         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        lun  int        managedDisk  VirtualMachineScaleSetManagedDiskParametersARM         name  string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetDataDiskCaching (string alias)  (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetDataDiskARM)  Deprecated version of VirtualMachineScaleSetDataDiskCaching. Use v1beta20201201.VirtualMachineScaleSetDataDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    VirtualMachineScaleSetDataDiskCreateOption (string alias)  (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetDataDiskARM)  Deprecated version of VirtualMachineScaleSetDataDiskCreateOption. Use v1beta20201201.VirtualMachineScaleSetDataDiskCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    VirtualMachineScaleSetDataDisk_Status   (Appears on:VirtualMachineScaleSetStorageProfile_Status)  Deprecated version of VirtualMachineScaleSetDataDisk_Status. Use v1beta20201201.VirtualMachineScaleSetDataDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        lun  int        managedDisk  VirtualMachineScaleSetManagedDiskParameters_Status         name  string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetDataDisk_StatusARM   (Appears on:VirtualMachineScaleSetStorageProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetDataDisk_Status. Use v1beta20201201.VirtualMachineScaleSetDataDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diskIOPSReadWrite  int        diskMBpsReadWrite  int        diskSizeGB  int        lun  int        managedDisk  VirtualMachineScaleSetManagedDiskParameters_StatusARM         name  string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetExtensionProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)  Deprecated version of VirtualMachineScaleSetExtensionProfile_Status. Use v1beta20201201.VirtualMachineScaleSetExtensionProfile_Status instead\n    Field Description      extensions  []VirtualMachineScaleSetExtension_Status         extensionsTimeBudget  string        VirtualMachineScaleSetExtensionProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetExtensionProfile_Status. Use v1beta20201201.VirtualMachineScaleSetExtensionProfile_Status instead\n    Field Description      extensions  []VirtualMachineScaleSetExtension_StatusARM         extensionsTimeBudget  string        VirtualMachineScaleSetExtensionProperties_StatusARM   (Appears on:VirtualMachineScaleSetExtension_StatusARM)  Deprecated version of VirtualMachineScaleSetExtensionProperties_Status. Use v1beta20201201.VirtualMachineScaleSetExtensionProperties_Status instead\n    Field Description      autoUpgradeMinorVersion  bool        enableAutomaticUpgrade  bool        forceUpdateTag  string        protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         provisionAfterExtensions  []string        provisioningState  string        publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         type  string        typeHandlerVersion  string        VirtualMachineScaleSetExtension_Status   (Appears on:VirtualMachineScaleSetExtensionProfile_Status)  Deprecated version of VirtualMachineScaleSetExtension_Status. Use v1beta20201201.VirtualMachineScaleSetExtension_Status instead\n    Field Description      autoUpgradeMinorVersion  bool        enableAutomaticUpgrade  bool        forceUpdateTag  string        id  string        name  string        properties_type  string        protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         provisionAfterExtensions  []string        provisioningState  string        publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         type  string        typeHandlerVersion  string        VirtualMachineScaleSetExtension_StatusARM   (Appears on:VirtualMachineScaleSetExtensionProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetExtension_Status. Use v1beta20201201.VirtualMachineScaleSetExtension_Status instead\n    Field Description      id  string        name  string        properties  VirtualMachineScaleSetExtensionProperties_StatusARM         type  string        VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetIPConfiguration_Status)  Deprecated version of VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion. Use v1beta20201201.VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetIPConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetIPConfiguration_StatusARM)  Deprecated version of VirtualMachineScaleSetIPConfigurationProperties_Status. Use v1beta20201201.VirtualMachineScaleSetIPConfigurationProperties_Status instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResource_StatusARM         applicationSecurityGroups  []SubResource_StatusARM         loadBalancerBackendAddressPools  []SubResource_StatusARM         loadBalancerInboundNatPools  []SubResource_StatusARM         primary  bool        privateIPAddressVersion  VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion         publicIPAddressConfiguration  VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM         subnet  ApiEntityReference_StatusARM         VirtualMachineScaleSetIPConfiguration_Status   (Appears on:VirtualMachineScaleSetNetworkConfiguration_Status)  Deprecated version of VirtualMachineScaleSetIPConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetIPConfiguration_Status instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResource_Status         applicationSecurityGroups  []SubResource_Status         id  string        loadBalancerBackendAddressPools  []SubResource_Status         loadBalancerInboundNatPools  []SubResource_Status         name  string        primary  bool        privateIPAddressVersion  VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion         publicIPAddressConfiguration  VirtualMachineScaleSetPublicIPAddressConfiguration_Status         subnet  ApiEntityReference_Status         VirtualMachineScaleSetIPConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetIPConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetIPConfiguration_Status instead\n    Field Description      id  string        name  string        properties  VirtualMachineScaleSetIPConfigurationProperties_StatusARM         VirtualMachineScaleSetIdentity   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of VirtualMachineScaleSetIdentity. Use v1beta20201201.VirtualMachineScaleSetIdentity instead\n    Field Description      type  VirtualMachineScaleSetIdentityType         VirtualMachineScaleSetIdentityARM   (Appears on:VirtualMachineScaleSets_SpecARM)  Deprecated version of VirtualMachineScaleSetIdentity. Use v1beta20201201.VirtualMachineScaleSetIdentity instead\n    Field Description      type  VirtualMachineScaleSetIdentityType         VirtualMachineScaleSetIdentityStatusType (string alias)  (Appears on:VirtualMachineScaleSetIdentity_Status, VirtualMachineScaleSetIdentity_StatusARM)  Deprecated version of VirtualMachineScaleSetIdentityStatusType. Use v1beta20201201.VirtualMachineScaleSetIdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineScaleSetIdentityType (string alias)  (Appears on:VirtualMachineScaleSetIdentity, VirtualMachineScaleSetIdentityARM)  Deprecated version of VirtualMachineScaleSetIdentityType. Use v1beta20201201.VirtualMachineScaleSetIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineScaleSetIdentity_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of VirtualMachineScaleSetIdentity_Status. Use v1beta20201201.VirtualMachineScaleSetIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  VirtualMachineScaleSetIdentityStatusType         userAssignedIdentities  map[string]./api/compute/v1alpha1api20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities         VirtualMachineScaleSetIdentity_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)  Deprecated version of VirtualMachineScaleSetIdentity_Status. Use v1beta20201201.VirtualMachineScaleSetIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  VirtualMachineScaleSetIdentityStatusType         userAssignedIdentities  map[string]./api/compute/v1alpha1api20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentitiesARM         VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities   (Appears on:VirtualMachineScaleSetIdentity_Status)  Deprecated version of VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities. Use v1beta20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        VirtualMachineScaleSetIdentity_Status_UserAssignedIdentitiesARM   (Appears on:VirtualMachineScaleSetIdentity_StatusARM)  Deprecated version of VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities. Use v1beta20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        VirtualMachineScaleSetIpTag   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)  Deprecated version of VirtualMachineScaleSetIpTag. Use v1beta20201201.VirtualMachineScaleSetIpTag instead\n    Field Description      ipTagType  string        tag  string        VirtualMachineScaleSetIpTagARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM)  Deprecated version of VirtualMachineScaleSetIpTag. Use v1beta20201201.VirtualMachineScaleSetIpTag instead\n    Field Description      ipTagType  string        tag  string        VirtualMachineScaleSetIpTag_Status   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_Status)  Deprecated version of VirtualMachineScaleSetIpTag_Status. Use v1beta20201201.VirtualMachineScaleSetIpTag_Status instead\n    Field Description      ipTagType  string        tag  string        VirtualMachineScaleSetIpTag_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetIpTag_Status. Use v1beta20201201.VirtualMachineScaleSetIpTag_Status instead\n    Field Description      ipTagType  string        tag  string        VirtualMachineScaleSetManagedDiskParameters   (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetOSDisk)  Deprecated version of VirtualMachineScaleSetManagedDiskParameters. Use v1beta20201201.VirtualMachineScaleSetManagedDiskParameters instead\n    Field Description      diskEncryptionSet  DiskEncryptionSetParameters         storageAccountType  VirtualMachineScaleSetManagedDiskParametersStorageAccountType         VirtualMachineScaleSetManagedDiskParametersARM   (Appears on:VirtualMachineScaleSetDataDiskARM, VirtualMachineScaleSetOSDiskARM)  Deprecated version of VirtualMachineScaleSetManagedDiskParameters. Use v1beta20201201.VirtualMachineScaleSetManagedDiskParameters instead\n    Field Description      diskEncryptionSet  DiskEncryptionSetParametersARM         storageAccountType  VirtualMachineScaleSetManagedDiskParametersStorageAccountType         VirtualMachineScaleSetManagedDiskParametersStorageAccountType (string alias)  (Appears on:VirtualMachineScaleSetManagedDiskParameters, VirtualMachineScaleSetManagedDiskParametersARM)  Deprecated version of VirtualMachineScaleSetManagedDiskParametersStorageAccountType. Use v1beta20201201.VirtualMachineScaleSetManagedDiskParametersStorageAccountType instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    VirtualMachineScaleSetManagedDiskParameters_Status   (Appears on:VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetOSDisk_Status)  Deprecated version of VirtualMachineScaleSetManagedDiskParameters_Status. Use v1beta20201201.VirtualMachineScaleSetManagedDiskParameters_Status instead\n    Field Description      diskEncryptionSet  SubResource_Status         storageAccountType  StorageAccountType_Status         VirtualMachineScaleSetManagedDiskParameters_StatusARM   (Appears on:VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of VirtualMachineScaleSetManagedDiskParameters_Status. Use v1beta20201201.VirtualMachineScaleSetManagedDiskParameters_Status instead\n    Field Description      diskEncryptionSet  SubResource_StatusARM         storageAccountType  StorageAccountType_Status         VirtualMachineScaleSetNetworkConfigurationDnsSettings   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations)  Deprecated version of VirtualMachineScaleSetNetworkConfigurationDnsSettings. Use v1beta20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings instead\n    Field Description      dnsServers  []string        VirtualMachineScaleSetNetworkConfigurationDnsSettingsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM)  Deprecated version of VirtualMachineScaleSetNetworkConfigurationDnsSettings. Use v1beta20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings instead\n    Field Description      dnsServers  []string        VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status   (Appears on:VirtualMachineScaleSetNetworkConfiguration_Status)  Deprecated version of VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status instead\n    Field Description      dnsServers  []string        VirtualMachineScaleSetNetworkConfigurationDnsSettings_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status instead\n    Field Description      dnsServers  []string        VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfiguration_StatusARM)  Deprecated version of VirtualMachineScaleSetNetworkConfigurationProperties_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkConfigurationProperties_Status instead\n    Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings_StatusARM         enableAcceleratedNetworking  bool        enableFpga  bool        enableIPForwarding  bool        ipConfigurations  []VirtualMachineScaleSetIPConfiguration_StatusARM         networkSecurityGroup  SubResource_StatusARM         primary  bool        VirtualMachineScaleSetNetworkConfiguration_Status   (Appears on:VirtualMachineScaleSetNetworkProfile_Status)  Deprecated version of VirtualMachineScaleSetNetworkConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkConfiguration_Status instead\n    Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status         enableAcceleratedNetworking  bool        enableFpga  bool        enableIPForwarding  bool        id  string        ipConfigurations  []VirtualMachineScaleSetIPConfiguration_Status         name  string        networkSecurityGroup  SubResource_Status         primary  bool        VirtualMachineScaleSetNetworkConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetNetworkProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetNetworkConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkConfiguration_Status instead\n    Field Description      id  string        name  string        properties  VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM         VirtualMachineScaleSetNetworkProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)  Deprecated version of VirtualMachineScaleSetNetworkProfile_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkProfile_Status instead\n    Field Description      healthProbe  ApiEntityReference_Status         networkInterfaceConfigurations  []VirtualMachineScaleSetNetworkConfiguration_Status         VirtualMachineScaleSetNetworkProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetNetworkProfile_Status. Use v1beta20201201.VirtualMachineScaleSetNetworkProfile_Status instead\n    Field Description      healthProbe  ApiEntityReference_StatusARM         networkInterfaceConfigurations  []VirtualMachineScaleSetNetworkConfiguration_StatusARM         VirtualMachineScaleSetOSDisk   (Appears on:VirtualMachineScaleSetStorageProfile)  Deprecated version of VirtualMachineScaleSetOSDisk. Use v1beta20201201.VirtualMachineScaleSetOSDisk instead\n    Field Description      caching  VirtualMachineScaleSetOSDiskCaching         createOption  VirtualMachineScaleSetOSDiskCreateOption         diffDiskSettings  DiffDiskSettings         diskSizeGB  int        image  VirtualHardDisk         managedDisk  VirtualMachineScaleSetManagedDiskParameters         name  string        osType  VirtualMachineScaleSetOSDiskOsType         vhdContainers  []string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetOSDiskARM   (Appears on:VirtualMachineScaleSetStorageProfileARM)  Deprecated version of VirtualMachineScaleSetOSDisk. Use v1beta20201201.VirtualMachineScaleSetOSDisk instead\n    Field Description      caching  VirtualMachineScaleSetOSDiskCaching         createOption  VirtualMachineScaleSetOSDiskCreateOption         diffDiskSettings  DiffDiskSettingsARM         diskSizeGB  int        image  VirtualHardDiskARM         managedDisk  VirtualMachineScaleSetManagedDiskParametersARM         name  string        osType  VirtualMachineScaleSetOSDiskOsType         vhdContainers  []string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetOSDiskCaching (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)  Deprecated version of VirtualMachineScaleSetOSDiskCaching. Use v1beta20201201.VirtualMachineScaleSetOSDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    VirtualMachineScaleSetOSDiskCreateOption (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)  Deprecated version of VirtualMachineScaleSetOSDiskCreateOption. Use v1beta20201201.VirtualMachineScaleSetOSDiskCreateOption instead\n    Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    VirtualMachineScaleSetOSDiskOsType (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)  Deprecated version of VirtualMachineScaleSetOSDiskOsType. Use v1beta20201201.VirtualMachineScaleSetOSDiskOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    VirtualMachineScaleSetOSDiskStatusOsType (string alias)  (Appears on:VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)  Deprecated version of VirtualMachineScaleSetOSDiskStatusOsType. Use v1beta20201201.VirtualMachineScaleSetOSDiskStatusOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    VirtualMachineScaleSetOSDisk_Status   (Appears on:VirtualMachineScaleSetStorageProfile_Status)  Deprecated version of VirtualMachineScaleSetOSDisk_Status. Use v1beta20201201.VirtualMachineScaleSetOSDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diffDiskSettings  DiffDiskSettings_Status         diskSizeGB  int        image  VirtualHardDisk_Status         managedDisk  VirtualMachineScaleSetManagedDiskParameters_Status         name  string        osType  VirtualMachineScaleSetOSDiskStatusOsType         vhdContainers  []string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetOSDisk_StatusARM   (Appears on:VirtualMachineScaleSetStorageProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetOSDisk_Status. Use v1beta20201201.VirtualMachineScaleSetOSDisk_Status instead\n    Field Description      caching  Caching_Status         createOption  CreateOption_Status         diffDiskSettings  DiffDiskSettings_StatusARM         diskSizeGB  int        image  VirtualHardDisk_StatusARM         managedDisk  VirtualMachineScaleSetManagedDiskParameters_StatusARM         name  string        osType  VirtualMachineScaleSetOSDiskStatusOsType         vhdContainers  []string        writeAcceleratorEnabled  bool        VirtualMachineScaleSetOSProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Deprecated version of VirtualMachineScaleSetOSProfile. Use v1beta20201201.VirtualMachineScaleSetOSProfile instead\n    Field Description      adminPassword  genruntime.SecretReference         adminUsername  string        computerNamePrefix  string        customData  string        linuxConfiguration  LinuxConfiguration         secrets  []VaultSecretGroup         windowsConfiguration  WindowsConfiguration         VirtualMachineScaleSetOSProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSetOSProfile. Use v1beta20201201.VirtualMachineScaleSetOSProfile instead\n    Field Description      adminPassword  string        adminUsername  string        computerNamePrefix  string        customData  string        linuxConfiguration  LinuxConfigurationARM         secrets  []VaultSecretGroupARM         windowsConfiguration  WindowsConfigurationARM         VirtualMachineScaleSetOSProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)  Deprecated version of VirtualMachineScaleSetOSProfile_Status. Use v1beta20201201.VirtualMachineScaleSetOSProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        computerNamePrefix  string        customData  string        linuxConfiguration  LinuxConfiguration_Status         secrets  []VaultSecretGroup_Status         windowsConfiguration  WindowsConfiguration_Status         VirtualMachineScaleSetOSProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetOSProfile_Status. Use v1beta20201201.VirtualMachineScaleSetOSProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        computerNamePrefix  string        customData  string        linuxConfiguration  LinuxConfiguration_StatusARM         secrets  []VaultSecretGroup_StatusARM         windowsConfiguration  WindowsConfiguration_StatusARM         VirtualMachineScaleSetProperties_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)  Deprecated version of VirtualMachineScaleSetProperties_Status. Use v1beta20201201.VirtualMachineScaleSetProperties_Status instead\n    Field Description      additionalCapabilities  AdditionalCapabilities_StatusARM         automaticRepairsPolicy  AutomaticRepairsPolicy_StatusARM         doNotRunExtensionsOnOverprovisionedVMs  bool        hostGroup  SubResource_StatusARM         orchestrationMode  OrchestrationMode_Status         overprovision  bool        platformFaultDomainCount  int        provisioningState  string        proximityPlacementGroup  SubResource_StatusARM         scaleInPolicy  ScaleInPolicy_StatusARM         singlePlacementGroup  bool        uniqueId  string        upgradePolicy  UpgradePolicy_StatusARM         virtualMachineProfile  VirtualMachineScaleSetVMProfile_StatusARM         zoneBalance  bool        VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings instead\n    Field Description      domainNameLabel  string        VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings instead\n    Field Description      domainNameLabel  string        VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_Status)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status instead\n    Field Description      domainNameLabel  string        VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status instead\n    Field Description      domainNameLabel  string        VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationProperties. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationProperties instead\n    Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsARM         idleTimeoutInMinutes  int        ipTags  []VirtualMachineScaleSetIpTagARM         publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion         publicIPPrefix  SubResourceARM         VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM, VirtualMachineScaleSetPublicIPAddressConfiguration_Status)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfigurationProperties_Status. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfigurationProperties_Status instead\n    Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_StatusARM         idleTimeoutInMinutes  int        ipTags  []VirtualMachineScaleSetIpTag_StatusARM         publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion         publicIPPrefix  SubResource_StatusARM         VirtualMachineScaleSetPublicIPAddressConfiguration_Status   (Appears on:VirtualMachineScaleSetIPConfiguration_Status)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfiguration_Status instead\n    Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status         idleTimeoutInMinutes  int        ipTags  []VirtualMachineScaleSetIpTag_Status         name  string        publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion         publicIPPrefix  SubResource_Status         VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetPublicIPAddressConfiguration_Status. Use v1beta20201201.VirtualMachineScaleSetPublicIPAddressConfiguration_Status instead\n    Field Description      name  string        properties  VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM         VirtualMachineScaleSetStorageProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Deprecated version of VirtualMachineScaleSetStorageProfile. Use v1beta20201201.VirtualMachineScaleSetStorageProfile instead\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDisk         imageReference  ImageReference         osDisk  VirtualMachineScaleSetOSDisk         VirtualMachineScaleSetStorageProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSetStorageProfile. Use v1beta20201201.VirtualMachineScaleSetStorageProfile instead\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDiskARM         imageReference  ImageReferenceARM         osDisk  VirtualMachineScaleSetOSDiskARM         VirtualMachineScaleSetStorageProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)  Deprecated version of VirtualMachineScaleSetStorageProfile_Status. Use v1beta20201201.VirtualMachineScaleSetStorageProfile_Status instead\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDisk_Status         imageReference  ImageReference_Status         osDisk  VirtualMachineScaleSetOSDisk_Status         VirtualMachineScaleSetStorageProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)  Deprecated version of VirtualMachineScaleSetStorageProfile_Status. Use v1beta20201201.VirtualMachineScaleSetStorageProfile_Status instead\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDisk_StatusARM         imageReference  ImageReference_StatusARM         osDisk  VirtualMachineScaleSetOSDisk_StatusARM         VirtualMachineScaleSetVMProfile_Status   (Appears on:VirtualMachineScaleSet_Status)  Deprecated version of VirtualMachineScaleSetVMProfile_Status. Use v1beta20201201.VirtualMachineScaleSetVMProfile_Status instead\n    Field Description      billingProfile  BillingProfile_Status         diagnosticsProfile  DiagnosticsProfile_Status         evictionPolicy  EvictionPolicy_Status         extensionProfile  VirtualMachineScaleSetExtensionProfile_Status         licenseType  string        networkProfile  VirtualMachineScaleSetNetworkProfile_Status         osProfile  VirtualMachineScaleSetOSProfile_Status         priority  Priority_Status         scheduledEventsProfile  ScheduledEventsProfile_Status         securityProfile  SecurityProfile_Status         storageProfile  VirtualMachineScaleSetStorageProfile_Status         VirtualMachineScaleSetVMProfile_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)  Deprecated version of VirtualMachineScaleSetVMProfile_Status. Use v1beta20201201.VirtualMachineScaleSetVMProfile_Status instead\n    Field Description      billingProfile  BillingProfile_StatusARM         diagnosticsProfile  DiagnosticsProfile_StatusARM         evictionPolicy  EvictionPolicy_Status         extensionProfile  VirtualMachineScaleSetExtensionProfile_StatusARM         licenseType  string        networkProfile  VirtualMachineScaleSetNetworkProfile_StatusARM         osProfile  VirtualMachineScaleSetOSProfile_StatusARM         priority  Priority_Status         scheduledEventsProfile  ScheduledEventsProfile_StatusARM         securityProfile  SecurityProfile_StatusARM         storageProfile  VirtualMachineScaleSetStorageProfile_StatusARM         VirtualMachineScaleSet_Status   (Appears on:VirtualMachineScaleSet)  Deprecated version of VirtualMachineScaleSet_Status. Use v1beta20201201.VirtualMachineScaleSet_Status instead\n    Field Description      additionalCapabilities  AdditionalCapabilities_Status         automaticRepairsPolicy  AutomaticRepairsPolicy_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    doNotRunExtensionsOnOverprovisionedVMs  bool        extendedLocation  ExtendedLocation_Status         hostGroup  SubResource_Status         id  string        identity  VirtualMachineScaleSetIdentity_Status         location  string        name  string        orchestrationMode  OrchestrationMode_Status         overprovision  bool        plan  Plan_Status         platformFaultDomainCount  int        provisioningState  string        proximityPlacementGroup  SubResource_Status         scaleInPolicy  ScaleInPolicy_Status         singlePlacementGroup  bool        sku  Sku_Status         tags  map[string]string        type  string        uniqueId  string        upgradePolicy  UpgradePolicy_Status         virtualMachineProfile  VirtualMachineScaleSetVMProfile_Status         zoneBalance  bool        zones  []string        VirtualMachineScaleSet_StatusARM   Deprecated version of VirtualMachineScaleSet_Status. Use v1beta20201201.VirtualMachineScaleSet_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        identity  VirtualMachineScaleSetIdentity_StatusARM         location  string        name  string        plan  Plan_StatusARM         properties  VirtualMachineScaleSetProperties_StatusARM         sku  Sku_StatusARM         tags  map[string]string        type  string        zones  []string        VirtualMachineScaleSetsSpecPropertiesOrchestrationMode (string alias)  (Appears on:VirtualMachineScaleSets_Spec, VirtualMachineScaleSets_Spec_PropertiesARM)  Deprecated version of VirtualMachineScaleSetsSpecPropertiesOrchestrationMode. Use v1beta20201201.VirtualMachineScaleSetsSpecPropertiesOrchestrationMode instead\n    Value Description   \u0026#34;Flexible\u0026#34;\n  \u0026#34;Uniform\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy. Use v1beta20201201.VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)  Deprecated version of VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion. Use v1beta20201201.VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority. Use v1beta20201201.VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority instead\n    Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    VirtualMachineScaleSets_Spec   (Appears on:VirtualMachineScaleSet)      Field Description      additionalCapabilities  AdditionalCapabilities         automaticRepairsPolicy  AutomaticRepairsPolicy         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    doNotRunExtensionsOnOverprovisionedVMs  bool        extendedLocation  ExtendedLocation         hostGroup  SubResource         identity  VirtualMachineScaleSetIdentity         location  string        orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode         overprovision  bool        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan         platformFaultDomainCount  int        proximityPlacementGroup  SubResource         scaleInPolicy  ScaleInPolicy         singlePlacementGroup  bool        sku  Sku         tags  map[string]string        upgradePolicy  UpgradePolicy         virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile         zoneBalance  bool        zones  []string        VirtualMachineScaleSets_SpecARM   Deprecated version of VirtualMachineScaleSets_Spec. Use v1beta20201201.VirtualMachineScaleSets_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         identity  VirtualMachineScaleSetIdentityARM         location  string        name  string        plan  PlanARM         properties  VirtualMachineScaleSets_Spec_PropertiesARM         sku  SkuARM         tags  map[string]string        zones  []string        VirtualMachineScaleSets_Spec_PropertiesARM   (Appears on:VirtualMachineScaleSets_SpecARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties instead\n    Field Description      additionalCapabilities  AdditionalCapabilitiesARM         automaticRepairsPolicy  AutomaticRepairsPolicyARM         doNotRunExtensionsOnOverprovisionedVMs  bool        hostGroup  SubResourceARM         orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode         overprovision  bool        platformFaultDomainCount  int        proximityPlacementGroup  SubResourceARM         scaleInPolicy  ScaleInPolicyARM         singlePlacementGroup  bool        upgradePolicy  UpgradePolicyARM         virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM         zoneBalance  bool        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile   (Appears on:VirtualMachineScaleSets_Spec)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile instead\n    Field Description      billingProfile  BillingProfile         diagnosticsProfile  DiagnosticsProfile         evictionPolicy  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy         extensionProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile         licenseType  string        networkProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile         osProfile  VirtualMachineScaleSetOSProfile         priority  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority         scheduledEventsProfile  ScheduledEventsProfile         securityProfile  SecurityProfile         storageProfile  VirtualMachineScaleSetStorageProfile         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile instead\n    Field Description      billingProfile  BillingProfileARM         diagnosticsProfile  DiagnosticsProfileARM         evictionPolicy  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy         extensionProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM         licenseType  string        networkProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM         osProfile  VirtualMachineScaleSetOSProfileARM         priority  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority         scheduledEventsProfile  ScheduledEventsProfileARM         securityProfile  SecurityProfileARM         storageProfile  VirtualMachineScaleSetStorageProfileARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile instead\n    Field Description      extensions  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions         extensionsTimeBudget  string        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile instead\n    Field Description      extensions  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM         extensionsTimeBudget  string        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions instead\n    Field Description      name  string        publisher  string        settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         type  string        typeHandlerVersion  string        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions instead\n    Field Description      name  string        properties  GenericExtensionARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile instead\n    Field Description      healthProbe  ApiEntityReference         networkInterfaceConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile instead\n    Field Description      healthProbe  ApiEntityReferenceARM         networkInterfaceConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations instead\n    Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings         enableAcceleratedNetworking  bool        enableFpga  bool        enableIPForwarding  bool        id  string        ipConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations         name  string        networkSecurityGroup  SubResource         primary  bool        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations instead\n    Field Description      id  string        name  string        properties  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties instead\n    Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettingsARM         enableAcceleratedNetworking  bool        enableFpga  bool        enableIPForwarding  bool        ipConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM         networkSecurityGroup  SubResourceARM         primary  bool        VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResource         applicationSecurityGroups  []SubResource         id  string        loadBalancerBackendAddressPools  []SubResource         loadBalancerInboundNatPools  []SubResource         name  string        primary  bool        privateIPAddressVersion  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion         publicIPAddressConfiguration  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration         subnet  ApiEntityReference         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations instead\n    Field Description      id  string        name  string        properties  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResourceARM         applicationSecurityGroups  []SubResourceARM         loadBalancerBackendAddressPools  []SubResourceARM         loadBalancerInboundNatPools  []SubResourceARM         primary  bool        privateIPAddressVersion  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion         publicIPAddressConfiguration  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM         subnet  ApiEntityReferenceARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration instead\n    Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings         idleTimeoutInMinutes  int        ipTags  []VirtualMachineScaleSetIpTag         name  string        publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion         publicIPPrefix  SubResource         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)  Deprecated version of VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration. Use v1beta20201201.VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration instead\n    Field Description      name  string        properties  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM         VirtualMachine_Status   (Appears on:VirtualMachine)  Deprecated version of VirtualMachine_Status. Use v1beta20201201.VirtualMachine_Status instead\n    Field Description      additionalCapabilities  AdditionalCapabilities_Status         availabilitySet  SubResource_Status         billingProfile  BillingProfile_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    diagnosticsProfile  DiagnosticsProfile_Status         evictionPolicy  EvictionPolicy_Status         extendedLocation  ExtendedLocation_Status         extensionsTimeBudget  string        hardwareProfile  HardwareProfile_Status         host  SubResource_Status         hostGroup  SubResource_Status         id  string        identity  VirtualMachineIdentity_Status         instanceView  VirtualMachineInstanceView_Status         licenseType  string        location  string        name  string        networkProfile  NetworkProfile_Status         osProfile  OSProfile_Status         plan  Plan_Status         platformFaultDomain  int        priority  Priority_Status         provisioningState  string        proximityPlacementGroup  SubResource_Status         resources  []VirtualMachineExtension_Status         securityProfile  SecurityProfile_Status         storageProfile  StorageProfile_Status         tags  map[string]string        type  string        virtualMachineScaleSet  SubResource_Status         vmId  string        zones  []string        VirtualMachine_StatusARM   Deprecated version of VirtualMachine_Status. Use v1beta20201201.VirtualMachine_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        identity  VirtualMachineIdentity_StatusARM         location  string        name  string        plan  Plan_StatusARM         properties  VirtualMachineProperties_StatusARM         resources  []VirtualMachineExtension_StatusARM         tags  map[string]string        type  string        zones  []string        VirtualMachinesSpecPropertiesEvictionPolicy (string alias)  (Appears on:VirtualMachines_Spec, VirtualMachines_Spec_PropertiesARM)  Deprecated version of VirtualMachinesSpecPropertiesEvictionPolicy. Use v1beta20201201.VirtualMachinesSpecPropertiesEvictionPolicy instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    VirtualMachinesSpecPropertiesPriority (string alias)  (Appears on:VirtualMachines_Spec, VirtualMachines_Spec_PropertiesARM)  Deprecated version of VirtualMachinesSpecPropertiesPriority. Use v1beta20201201.VirtualMachinesSpecPropertiesPriority instead\n    Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    VirtualMachines_Spec   (Appears on:VirtualMachine)      Field Description      additionalCapabilities  AdditionalCapabilities         availabilitySet  SubResource         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    billingProfile  BillingProfile         diagnosticsProfile  DiagnosticsProfile         evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy         extendedLocation  ExtendedLocation         extensionsTimeBudget  string        hardwareProfile  HardwareProfile         host  SubResource         hostGroup  SubResource         identity  VirtualMachineIdentity         licenseType  string        location  string        networkProfile  VirtualMachines_Spec_Properties_NetworkProfile         osProfile  OSProfile         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan         platformFaultDomain  int        priority  VirtualMachinesSpecPropertiesPriority         proximityPlacementGroup  SubResource         securityProfile  SecurityProfile         storageProfile  StorageProfile         tags  map[string]string        virtualMachineScaleSet  SubResource         zones  []string        VirtualMachines_SpecARM   Deprecated version of VirtualMachines_Spec. Use v1beta20201201.VirtualMachines_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         identity  VirtualMachineIdentityARM         location  string        name  string        plan  PlanARM         properties  VirtualMachines_Spec_PropertiesARM         tags  map[string]string        zones  []string        VirtualMachines_Spec_PropertiesARM   (Appears on:VirtualMachines_SpecARM)  Deprecated version of VirtualMachines_Spec_Properties. Use v1beta20201201.VirtualMachines_Spec_Properties instead\n    Field Description      additionalCapabilities  AdditionalCapabilitiesARM         availabilitySet  SubResourceARM         billingProfile  BillingProfileARM         diagnosticsProfile  DiagnosticsProfileARM         evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy         extensionsTimeBudget  string        hardwareProfile  HardwareProfileARM         host  SubResourceARM         hostGroup  SubResourceARM         licenseType  string        networkProfile  VirtualMachines_Spec_Properties_NetworkProfileARM         osProfile  OSProfileARM         platformFaultDomain  int        priority  VirtualMachinesSpecPropertiesPriority         proximityPlacementGroup  SubResourceARM         securityProfile  SecurityProfileARM         storageProfile  StorageProfileARM         virtualMachineScaleSet  SubResourceARM         VirtualMachines_Spec_Properties_NetworkProfile   (Appears on:VirtualMachines_Spec)  Deprecated version of VirtualMachines_Spec_Properties_NetworkProfile. Use v1beta20201201.VirtualMachines_Spec_Properties_NetworkProfile instead\n    Field Description      networkInterfaces  []VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces         VirtualMachines_Spec_Properties_NetworkProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Deprecated version of VirtualMachines_Spec_Properties_NetworkProfile. Use v1beta20201201.VirtualMachines_Spec_Properties_NetworkProfile instead\n    Field Description      networkInterfaces  []VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM         VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces   (Appears on:VirtualMachines_Spec_Properties_NetworkProfile)  Deprecated version of VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces. Use v1beta20201201.VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces instead\n    Field Description      primary  bool        reference  genruntime.ResourceReference         VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM   (Appears on:VirtualMachines_Spec_Properties_NetworkProfileARM)  Deprecated version of VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces. Use v1beta20201201.VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces instead\n    Field Description      id  string        properties  NetworkInterfaceReferencePropertiesARM         WinRMConfiguration   (Appears on:WindowsConfiguration)  Deprecated version of WinRMConfiguration. Use v1beta20201201.WinRMConfiguration instead\n    Field Description      listeners  []WinRMListener         WinRMConfigurationARM   (Appears on:WindowsConfigurationARM)  Deprecated version of WinRMConfiguration. Use v1beta20201201.WinRMConfiguration instead\n    Field Description      listeners  []WinRMListenerARM         WinRMConfiguration_Status   (Appears on:WindowsConfiguration_Status)  Deprecated version of WinRMConfiguration_Status. Use v1beta20201201.WinRMConfiguration_Status instead\n    Field Description      listeners  []WinRMListener_Status         WinRMConfiguration_StatusARM   (Appears on:WindowsConfiguration_StatusARM)  Deprecated version of WinRMConfiguration_Status. Use v1beta20201201.WinRMConfiguration_Status instead\n    Field Description      listeners  []WinRMListener_StatusARM         WinRMListener   (Appears on:WinRMConfiguration)  Deprecated version of WinRMListener. Use v1beta20201201.WinRMListener instead\n    Field Description      certificateUrl  string        protocol  WinRMListenerProtocol         WinRMListenerARM   (Appears on:WinRMConfigurationARM)  Deprecated version of WinRMListener. Use v1beta20201201.WinRMListener instead\n    Field Description      certificateUrl  string        protocol  WinRMListenerProtocol         WinRMListenerProtocol (string alias)  (Appears on:WinRMListener, WinRMListenerARM)  Deprecated version of WinRMListenerProtocol. Use v1beta20201201.WinRMListenerProtocol instead\n    Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n    WinRMListenerStatusProtocol (string alias)  (Appears on:WinRMListener_Status, WinRMListener_StatusARM)  Deprecated version of WinRMListenerStatusProtocol. Use v1beta20201201.WinRMListenerStatusProtocol instead\n    Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n    WinRMListener_Status   (Appears on:WinRMConfiguration_Status)  Deprecated version of WinRMListener_Status. Use v1beta20201201.WinRMListener_Status instead\n    Field Description      certificateUrl  string        protocol  WinRMListenerStatusProtocol         WinRMListener_StatusARM   (Appears on:WinRMConfiguration_StatusARM)  Deprecated version of WinRMListener_Status. Use v1beta20201201.WinRMListener_Status instead\n    Field Description      certificateUrl  string        protocol  WinRMListenerStatusProtocol         WindowsConfiguration   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Deprecated version of WindowsConfiguration. Use v1beta20201201.WindowsConfiguration instead\n    Field Description      additionalUnattendContent  []AdditionalUnattendContent         enableAutomaticUpdates  bool        patchSettings  PatchSettings         provisionVMAgent  bool        timeZone  string        winRM  WinRMConfiguration         WindowsConfigurationARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Deprecated version of WindowsConfiguration. Use v1beta20201201.WindowsConfiguration instead\n    Field Description      additionalUnattendContent  []AdditionalUnattendContentARM         enableAutomaticUpdates  bool        patchSettings  PatchSettingsARM         provisionVMAgent  bool        timeZone  string        winRM  WinRMConfigurationARM         WindowsConfiguration_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)  Deprecated version of WindowsConfiguration_Status. Use v1beta20201201.WindowsConfiguration_Status instead\n    Field Description      additionalUnattendContent  []AdditionalUnattendContent_Status         enableAutomaticUpdates  bool        patchSettings  PatchSettings_Status         provisionVMAgent  bool        timeZone  string        winRM  WinRMConfiguration_Status         WindowsConfiguration_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)  Deprecated version of WindowsConfiguration_Status. Use v1beta20201201.WindowsConfiguration_Status instead\n    Field Description      additionalUnattendContent  []AdditionalUnattendContent_StatusARM         enableAutomaticUpdates  bool        patchSettings  PatchSettings_StatusARM         provisionVMAgent  bool        timeZone  string        winRM  WinRMConfiguration_StatusARM          "},{"id":29,"href":"/azure-service-operator/reference/compute.v1alpha1api20210701/","title":"compute.azure.com/v1alpha1api20210701","section":"References","content":"compute.azure.com/v1alpha1api20210701  Package v1alpha1api20210701 contains API Schema definitions for the compute v1alpha1api20210701 API group\n Resource Types:  DiskEncryptionSetParameters   (Appears on:ImageDataDisk, ImageOSDisk)  Deprecated version of DiskEncryptionSetParameters. Use v1beta20210701.DiskEncryptionSetParameters instead\n    Field Description      reference  genruntime.ResourceReference         DiskEncryptionSetParametersARM   (Appears on:ImageDataDiskARM, ImageOSDiskARM)  Deprecated version of DiskEncryptionSetParameters. Use v1beta20210701.DiskEncryptionSetParameters instead\n    Field Description      id  string        ExtendedLocation   (Appears on:Images_Spec)  Deprecated version of ExtendedLocation. Use v1beta20210701.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:Images_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20210701.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20210701.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20210701.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:Image_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20210701.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:Image_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20210701.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         HyperVGenerationType_Status (string alias)  (Appears on:ImageProperties_StatusARM, Image_Status)  Deprecated version of HyperVGenerationType_Status. Use v1beta20210701.HyperVGenerationType_Status instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    Image   Deprecated version of Image. Use v1beta20210701.Image instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Images_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    extendedLocation  ExtendedLocation         hyperVGeneration  ImagePropertiesHyperVGeneration         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sourceVirtualMachine  SubResource         storageProfile  ImageStorageProfile         tags  map[string]string           status  Image_Status         ImageDataDisk   (Appears on:ImageStorageProfile)  Deprecated version of ImageDataDisk. Use v1beta20210701.ImageDataDisk instead\n    Field Description      blobUri  string        caching  ImageDataDiskCaching         diskEncryptionSet  DiskEncryptionSetParameters         diskSizeGB  int        lun  int        managedDisk  SubResource         snapshot  SubResource         storageAccountType  ImageDataDiskStorageAccountType         ImageDataDiskARM   (Appears on:ImageStorageProfileARM)  Deprecated version of ImageDataDisk. Use v1beta20210701.ImageDataDisk instead\n    Field Description      blobUri  string        caching  ImageDataDiskCaching         diskEncryptionSet  DiskEncryptionSetParametersARM         diskSizeGB  int        lun  int        managedDisk  SubResourceARM         snapshot  SubResourceARM         storageAccountType  ImageDataDiskStorageAccountType         ImageDataDiskCaching (string alias)  (Appears on:ImageDataDisk, ImageDataDiskARM)  Deprecated version of ImageDataDiskCaching. Use v1beta20210701.ImageDataDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageDataDiskStatusCaching (string alias)  (Appears on:ImageDataDisk_Status, ImageDataDisk_StatusARM)  Deprecated version of ImageDataDiskStatusCaching. Use v1beta20210701.ImageDataDiskStatusCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageDataDiskStorageAccountType (string alias)  (Appears on:ImageDataDisk, ImageDataDiskARM)  Deprecated version of ImageDataDiskStorageAccountType. Use v1beta20210701.ImageDataDiskStorageAccountType instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ImageDataDisk_Status   (Appears on:ImageStorageProfile_Status)  Deprecated version of ImageDataDisk_Status. Use v1beta20210701.ImageDataDisk_Status instead\n    Field Description      blobUri  string        caching  ImageDataDiskStatusCaching         diskEncryptionSet  SubResource_Status         diskSizeGB  int        lun  int        managedDisk  SubResource_Status         snapshot  SubResource_Status         storageAccountType  StorageAccountType_Status         ImageDataDisk_StatusARM   (Appears on:ImageStorageProfile_StatusARM)  Deprecated version of ImageDataDisk_Status. Use v1beta20210701.ImageDataDisk_Status instead\n    Field Description      blobUri  string        caching  ImageDataDiskStatusCaching         diskEncryptionSet  SubResource_StatusARM         diskSizeGB  int        lun  int        managedDisk  SubResource_StatusARM         snapshot  SubResource_StatusARM         storageAccountType  StorageAccountType_Status         ImageOSDisk   (Appears on:ImageStorageProfile)  Deprecated version of ImageOSDisk. Use v1beta20210701.ImageOSDisk instead\n    Field Description      blobUri  string        caching  ImageOSDiskCaching         diskEncryptionSet  DiskEncryptionSetParameters         diskSizeGB  int        managedDisk  SubResource         osState  ImageOSDiskOsState         osType  ImageOSDiskOsType         snapshot  SubResource         storageAccountType  ImageOSDiskStorageAccountType         ImageOSDiskARM   (Appears on:ImageStorageProfileARM)  Deprecated version of ImageOSDisk. Use v1beta20210701.ImageOSDisk instead\n    Field Description      blobUri  string        caching  ImageOSDiskCaching         diskEncryptionSet  DiskEncryptionSetParametersARM         diskSizeGB  int        managedDisk  SubResourceARM         osState  ImageOSDiskOsState         osType  ImageOSDiskOsType         snapshot  SubResourceARM         storageAccountType  ImageOSDiskStorageAccountType         ImageOSDiskCaching (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)  Deprecated version of ImageOSDiskCaching. Use v1beta20210701.ImageOSDiskCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageOSDiskOsState (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)  Deprecated version of ImageOSDiskOsState. Use v1beta20210701.ImageOSDiskOsState instead\n    Value Description   \u0026#34;Generalized\u0026#34;\n  \u0026#34;Specialized\u0026#34;\n    ImageOSDiskOsType (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)  Deprecated version of ImageOSDiskOsType. Use v1beta20210701.ImageOSDiskOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ImageOSDiskStatusCaching (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)  Deprecated version of ImageOSDiskStatusCaching. Use v1beta20210701.ImageOSDiskStatusCaching instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageOSDiskStatusOsState (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)  Deprecated version of ImageOSDiskStatusOsState. Use v1beta20210701.ImageOSDiskStatusOsState instead\n    Value Description   \u0026#34;Generalized\u0026#34;\n  \u0026#34;Specialized\u0026#34;\n    ImageOSDiskStatusOsType (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)  Deprecated version of ImageOSDiskStatusOsType. Use v1beta20210701.ImageOSDiskStatusOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ImageOSDiskStorageAccountType (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)  Deprecated version of ImageOSDiskStorageAccountType. Use v1beta20210701.ImageOSDiskStorageAccountType instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ImageOSDisk_Status   (Appears on:ImageStorageProfile_Status)  Deprecated version of ImageOSDisk_Status. Use v1beta20210701.ImageOSDisk_Status instead\n    Field Description      blobUri  string        caching  ImageOSDiskStatusCaching         diskEncryptionSet  SubResource_Status         diskSizeGB  int        managedDisk  SubResource_Status         osState  ImageOSDiskStatusOsState         osType  ImageOSDiskStatusOsType         snapshot  SubResource_Status         storageAccountType  StorageAccountType_Status         ImageOSDisk_StatusARM   (Appears on:ImageStorageProfile_StatusARM)  Deprecated version of ImageOSDisk_Status. Use v1beta20210701.ImageOSDisk_Status instead\n    Field Description      blobUri  string        caching  ImageOSDiskStatusCaching         diskEncryptionSet  SubResource_StatusARM         diskSizeGB  int        managedDisk  SubResource_StatusARM         osState  ImageOSDiskStatusOsState         osType  ImageOSDiskStatusOsType         snapshot  SubResource_StatusARM         storageAccountType  StorageAccountType_Status         ImagePropertiesARM   (Appears on:Images_SpecARM)  Deprecated version of ImageProperties. Use v1beta20210701.ImageProperties instead\n    Field Description      hyperVGeneration  ImagePropertiesHyperVGeneration         sourceVirtualMachine  SubResourceARM         storageProfile  ImageStorageProfileARM         ImagePropertiesHyperVGeneration (string alias)  (Appears on:ImagePropertiesARM, Images_Spec)  Deprecated version of ImagePropertiesHyperVGeneration. Use v1beta20210701.ImagePropertiesHyperVGeneration instead\n    Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    ImageProperties_StatusARM   (Appears on:Image_StatusARM)  Deprecated version of ImageProperties_Status. Use v1beta20210701.ImageProperties_Status instead\n    Field Description      hyperVGeneration  HyperVGenerationType_Status         provisioningState  string        sourceVirtualMachine  SubResource_StatusARM         storageProfile  ImageStorageProfile_StatusARM         ImageStorageProfile   (Appears on:Images_Spec)  Deprecated version of ImageStorageProfile. Use v1beta20210701.ImageStorageProfile instead\n    Field Description      dataDisks  []ImageDataDisk         osDisk  ImageOSDisk         zoneResilient  bool        ImageStorageProfileARM   (Appears on:ImagePropertiesARM)  Deprecated version of ImageStorageProfile. Use v1beta20210701.ImageStorageProfile instead\n    Field Description      dataDisks  []ImageDataDiskARM         osDisk  ImageOSDiskARM         zoneResilient  bool        ImageStorageProfile_Status   (Appears on:Image_Status)  Deprecated version of ImageStorageProfile_Status. Use v1beta20210701.ImageStorageProfile_Status instead\n    Field Description      dataDisks  []ImageDataDisk_Status         osDisk  ImageOSDisk_Status         zoneResilient  bool        ImageStorageProfile_StatusARM   (Appears on:ImageProperties_StatusARM)  Deprecated version of ImageStorageProfile_Status. Use v1beta20210701.ImageStorageProfile_Status instead\n    Field Description      dataDisks  []ImageDataDisk_StatusARM         osDisk  ImageOSDisk_StatusARM         zoneResilient  bool        Image_Status   (Appears on:Image)  Deprecated version of Image_Status. Use v1beta20210701.Image_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    extendedLocation  ExtendedLocation_Status         hyperVGeneration  HyperVGenerationType_Status         id  string        location  string        name  string        provisioningState  string        sourceVirtualMachine  SubResource_Status         storageProfile  ImageStorageProfile_Status         tags  map[string]string        type  string        Image_StatusARM   Deprecated version of Image_Status. Use v1beta20210701.Image_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  ImageProperties_StatusARM         tags  map[string]string        type  string        Images_Spec   (Appears on:Image)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    extendedLocation  ExtendedLocation         hyperVGeneration  ImagePropertiesHyperVGeneration         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sourceVirtualMachine  SubResource         storageProfile  ImageStorageProfile         tags  map[string]string        Images_SpecARM   Deprecated version of Images_Spec. Use v1beta20210701.Images_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  ImagePropertiesARM         tags  map[string]string        StorageAccountType_Status (string alias)  (Appears on:ImageDataDisk_Status, ImageDataDisk_StatusARM, ImageOSDisk_Status, ImageOSDisk_StatusARM)  Deprecated version of StorageAccountType_Status. Use v1beta20210701.StorageAccountType_Status instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    SubResource   (Appears on:ImageDataDisk, ImageOSDisk, Images_Spec)  Deprecated version of SubResource. Use v1beta20210701.SubResource instead\n    Field Description      reference  genruntime.ResourceReference         SubResourceARM   (Appears on:ImageDataDiskARM, ImageOSDiskARM, ImagePropertiesARM)  Deprecated version of SubResource. Use v1beta20210701.SubResource instead\n    Field Description      id  string        SubResource_Status   (Appears on:ImageDataDisk_Status, ImageOSDisk_Status, Image_Status)  Deprecated version of SubResource_Status. Use v1beta20210701.SubResource_Status instead\n    Field Description      id  string        SubResource_StatusARM   (Appears on:ImageDataDisk_StatusARM, ImageOSDisk_StatusARM, ImageProperties_StatusARM)  Deprecated version of SubResource_Status. Use v1beta20210701.SubResource_Status instead\n    Field Description      id  string         "},{"id":30,"href":"/azure-service-operator/reference/compute.v1beta20200930/","title":"compute.azure.com/v1beta20200930","section":"References","content":"compute.azure.com/v1beta20200930  Package v1beta20200930 contains API Schema definitions for the compute v1beta20200930 API group\n Resource Types:  CreationData   (Appears on:Disks_Spec, Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/CreationData\n    Field Description      createOption  CreationDataCreateOption     CreateOption: This enumerates the possible sources of a disk\u0026rsquo;s creation.\n    galleryImageReference  ImageDiskReference     GalleryImageReference: The source image used for creating the disk.\n    imageReference  ImageDiskReference     ImageReference: The source image used for creating the disk.\n    logicalSectorSize  int    LogicalSectorSize: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.\n    sourceResourceReference  genruntime.ResourceReference     SourceResourceReference: If createOption is Copy, this is the ARM id of the source snapshot or disk.\n    sourceUri  string    SourceUri: If createOption is Import, this is the URI of a blob to be imported into a managed disk.\n    storageAccountId  string    StorageAccountId: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.\n    uploadSizeBytes  int    UploadSizeBytes: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).\n    CreationDataARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/CreationData\n    Field Description      createOption  CreationDataCreateOption     CreateOption: This enumerates the possible sources of a disk\u0026rsquo;s creation.\n    galleryImageReference  ImageDiskReferenceARM     GalleryImageReference: The source image used for creating the disk.\n    imageReference  ImageDiskReferenceARM     ImageReference: The source image used for creating the disk.\n    logicalSectorSize  int    LogicalSectorSize: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.\n    sourceResourceId  string        sourceUri  string    SourceUri: If createOption is Import, this is the URI of a blob to be imported into a managed disk.\n    storageAccountId  string    StorageAccountId: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.\n    uploadSizeBytes  int    UploadSizeBytes: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).\n    CreationDataCreateOption (string alias)  (Appears on:CreationData, CreationDataARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Copy\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n  \u0026#34;Import\u0026#34;\n  \u0026#34;Restore\u0026#34;\n  \u0026#34;Upload\u0026#34;\n    CreationDataStatusCreateOption (string alias)  (Appears on:CreationData_Status, CreationData_StatusARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Copy\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n  \u0026#34;Import\u0026#34;\n  \u0026#34;Restore\u0026#34;\n  \u0026#34;Upload\u0026#34;\n    CreationData_Status   (Appears on:Disk_Status, Snapshot_Status)      Field Description      createOption  CreationDataStatusCreateOption     CreateOption: This enumerates the possible sources of a disk\u0026rsquo;s creation.\n    galleryImageReference  ImageDiskReference_Status     GalleryImageReference: Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.\n    imageReference  ImageDiskReference_Status     ImageReference: Disk source information.\n    logicalSectorSize  int    LogicalSectorSize: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.\n    sourceResourceId  string    SourceResourceId: If createOption is Copy, this is the ARM id of the source snapshot or disk.\n    sourceUniqueId  string    SourceUniqueId: If this field is set, this is the unique id identifying the source of this resource.\n    sourceUri  string    SourceUri: If createOption is Import, this is the URI of a blob to be imported into a managed disk.\n    storageAccountId  string    StorageAccountId: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.\n    uploadSizeBytes  int    UploadSizeBytes: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).\n    CreationData_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)      Field Description      createOption  CreationDataStatusCreateOption     CreateOption: This enumerates the possible sources of a disk\u0026rsquo;s creation.\n    galleryImageReference  ImageDiskReference_StatusARM     GalleryImageReference: Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.\n    imageReference  ImageDiskReference_StatusARM     ImageReference: Disk source information.\n    logicalSectorSize  int    LogicalSectorSize: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.\n    sourceResourceId  string    SourceResourceId: If createOption is Copy, this is the ARM id of the source snapshot or disk.\n    sourceUniqueId  string    SourceUniqueId: If this field is set, this is the unique id identifying the source of this resource.\n    sourceUri  string    SourceUri: If createOption is Import, this is the URI of a blob to be imported into a managed disk.\n    storageAccountId  string    StorageAccountId: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.\n    uploadSizeBytes  int    UploadSizeBytes: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).\n    Disk   Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/resourceDefinitions/disks\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Disks_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    burstingEnabled  bool    BurstingEnabled: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.\n    creationData  CreationData     CreationData: Data used when creating a disk.\n    diskAccessReference  genruntime.ResourceReference     DiskAccessReference: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskIOPSReadOnly  int    DiskIOPSReadOnly: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.\n    diskMBpsReadOnly  int    DiskMBpsReadOnly: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    encryption  Encryption     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollection     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  DiskPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    location  string    Location: Location to deploy resource to\n    maxShares  int    MaxShares: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.\n    networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType     OsType: The Operating System type.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    sku  DiskSku     Sku: The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    tier  string    Tier: Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.\n    zones  []string    Zones: The Logical zone list for Disk.\n       status  Disk_Status         DiskPropertiesARM   (Appears on:Disks_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/DiskProperties\n    Field Description      burstingEnabled  bool    BurstingEnabled: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.\n    creationData  CreationDataARM     CreationData: Data used when creating a disk.\n    diskAccessId  string        diskIOPSReadOnly  int    DiskIOPSReadOnly: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.\n    diskMBpsReadOnly  int    DiskMBpsReadOnly: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    encryption  EncryptionARM     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollectionARM     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    hyperVGeneration  DiskPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    maxShares  int    MaxShares: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.\n    networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType     OsType: The Operating System type.\n    purchasePlan  PurchasePlanARM     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    tier  string    Tier: Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.\n    DiskPropertiesHyperVGeneration (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    DiskPropertiesNetworkAccessPolicy (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)      Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    DiskPropertiesOsType (string alias)  (Appears on:DiskPropertiesARM, Disks_Spec)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    DiskPropertiesStatusHyperVGeneration (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    DiskPropertiesStatusOsType (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    DiskProperties_StatusARM   (Appears on:Disk_StatusARM)      Field Description      burstingEnabled  bool    BurstingEnabled: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.\n    creationData  CreationData_StatusARM     CreationData: Disk source information. CreationData information cannot be changed after the disk has been created.\n    diskAccessId  string    DiskAccessId: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskIOPSReadOnly  int    DiskIOPSReadOnly: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.\n    diskMBpsReadOnly  int    DiskMBpsReadOnly: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskSizeBytes  int    DiskSizeBytes: The size of the disk in bytes. This field is read only.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  DiskState_Status     DiskState: The state of the disk.\n    encryption  Encryption_StatusARM     Encryption: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.\n    encryptionSettingsCollection  EncryptionSettingsCollection_StatusARM     EncryptionSettingsCollection: Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.\n    hyperVGeneration  DiskPropertiesStatusHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    maxShares  int    MaxShares: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.\n    networkAccessPolicy  NetworkAccessPolicy_Status         osType  DiskPropertiesStatusOsType     OsType: The Operating System type.\n    provisioningState  string    ProvisioningState: The disk provisioning state.\n    purchasePlan  PurchasePlan_StatusARM     PurchasePlan: Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}\n    shareInfo  []ShareInfoElement_StatusARM     ShareInfo: Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n    tier  string    Tier: Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.\n    timeCreated  string    TimeCreated: The time when the disk was created.\n    uniqueId  string    UniqueId: Unique Guid identifying the resource.\n    DiskSku   (Appears on:Disks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/DiskSku\n    Field Description      name  DiskSkuName     Name: The sku name.\n    DiskSkuARM   (Appears on:Disks_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/DiskSku\n    Field Description      name  DiskSkuName     Name: The sku name.\n    DiskSkuName (string alias)  (Appears on:DiskSku, DiskSkuARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    DiskSkuStatusName (string alias)  (Appears on:DiskSku_Status, DiskSku_StatusARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    DiskSku_Status   (Appears on:Disk_Status)      Field Description      name  DiskSkuStatusName     Name: The sku name.\n    tier  string    Tier: The sku tier.\n    DiskSku_StatusARM   (Appears on:Disk_StatusARM)      Field Description      name  DiskSkuStatusName     Name: The sku name.\n    tier  string    Tier: The sku tier.\n    DiskState_Status (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status, SnapshotProperties_StatusARM, Snapshot_Status)      Value Description   \u0026#34;ActiveSAS\u0026#34;\n  \u0026#34;ActiveUpload\u0026#34;\n  \u0026#34;Attached\u0026#34;\n  \u0026#34;ReadyToUpload\u0026#34;\n  \u0026#34;Reserved\u0026#34;\n  \u0026#34;Unattached\u0026#34;\n    Disk_Status   (Appears on:Disk)      Field Description      burstingEnabled  bool    BurstingEnabled: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationData  CreationData_Status     CreationData: Disk source information. CreationData information cannot be changed after the disk has been created.\n    diskAccessId  string    DiskAccessId: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskIOPSReadOnly  int    DiskIOPSReadOnly: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.\n    diskMBpsReadOnly  int    DiskMBpsReadOnly: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskSizeBytes  int    DiskSizeBytes: The size of the disk in bytes. This field is read only.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  DiskState_Status     DiskState: The state of the disk.\n    encryption  Encryption_Status     Encryption: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.\n    encryptionSettingsCollection  EncryptionSettingsCollection_Status     EncryptionSettingsCollection: Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location where the disk will be created. Extended location cannot be changed.\n    hyperVGeneration  DiskPropertiesStatusHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    id  string    Id: Resource Id\n    location  string    Location: Resource location\n    managedBy  string    ManagedBy: A relative URI containing the ID of the VM that has the disk attached.\n    managedByExtended  []string    ManagedByExtended: List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n    maxShares  int    MaxShares: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.\n    name  string    Name: Resource name\n    networkAccessPolicy  NetworkAccessPolicy_Status         osType  DiskPropertiesStatusOsType     OsType: The Operating System type.\n    provisioningState  string    ProvisioningState: The disk provisioning state.\n    purchasePlan  PurchasePlan_Status     PurchasePlan: Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}\n    shareInfo  []ShareInfoElement_Status     ShareInfo: Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n    sku  DiskSku_Status         tags  map[string]string    Tags: Resource tags\n    tier  string    Tier: Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.\n    timeCreated  string    TimeCreated: The time when the disk was created.\n    type  string    Type: Resource type\n    uniqueId  string    UniqueId: Unique Guid identifying the resource.\n    zones  []string    Zones: The Logical zone list for Disk.\n    Disk_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location where the disk will be created. Extended location cannot be changed.\n    id  string    Id: Resource Id\n    location  string    Location: Resource location\n    managedBy  string    ManagedBy: A relative URI containing the ID of the VM that has the disk attached.\n    managedByExtended  []string    ManagedByExtended: List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n    name  string    Name: Resource name\n    properties  DiskProperties_StatusARM         sku  DiskSku_StatusARM         tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    zones  []string    Zones: The Logical zone list for Disk.\n    DisksSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-09-30\u0026#34;\n    Disks_Spec   (Appears on:Disk)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    burstingEnabled  bool    BurstingEnabled: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.\n    creationData  CreationData     CreationData: Data used when creating a disk.\n    diskAccessReference  genruntime.ResourceReference     DiskAccessReference: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskIOPSReadOnly  int    DiskIOPSReadOnly: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.\n    diskMBpsReadOnly  int    DiskMBpsReadOnly: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    encryption  Encryption     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollection     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  DiskPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    location  string    Location: Location to deploy resource to\n    maxShares  int    MaxShares: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.\n    networkAccessPolicy  DiskPropertiesNetworkAccessPolicy         osType  DiskPropertiesOsType     OsType: The Operating System type.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    sku  DiskSku     Sku: The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    tier  string    Tier: Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.\n    zones  []string    Zones: The Logical zone list for Disk.\n    Disks_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the managed disk that is being created. The name can\u0026rsquo;t be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.\n    properties  DiskPropertiesARM     Properties: Disk resource properties.\n    sku  DiskSkuARM     Sku: The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The Logical zone list for Disk.\n    Encryption   (Appears on:Disks_Spec, Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/Encryption\n    Field Description      diskEncryptionSetReference  genruntime.ResourceReference     DiskEncryptionSetReference: ResourceId of the disk encryption set to use for enabling encryption at rest.\n    type  EncryptionType         EncryptionARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/Encryption\n    Field Description      diskEncryptionSetId  string        type  EncryptionType         EncryptionSettingsCollection   (Appears on:Disks_Spec, Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/EncryptionSettingsCollection\n    Field Description      enabled  bool    Enabled: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.\n    encryptionSettings  []EncryptionSettingsElement     EncryptionSettings: A collection of encryption settings, one for each disk volume.\n    encryptionSettingsVersion  string    EncryptionSettingsVersion: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. \u0026lsquo;1.0\u0026rsquo; corresponds to Azure Disk Encryption with AAD app.\u0026lsquo;1.1\u0026rsquo; corresponds to Azure Disk Encryption.\n    EncryptionSettingsCollectionARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/EncryptionSettingsCollection\n    Field Description      enabled  bool    Enabled: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.\n    encryptionSettings  []EncryptionSettingsElementARM     EncryptionSettings: A collection of encryption settings, one for each disk volume.\n    encryptionSettingsVersion  string    EncryptionSettingsVersion: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. \u0026lsquo;1.0\u0026rsquo; corresponds to Azure Disk Encryption with AAD app.\u0026lsquo;1.1\u0026rsquo; corresponds to Azure Disk Encryption.\n    EncryptionSettingsCollection_Status   (Appears on:Disk_Status, Snapshot_Status)      Field Description      enabled  bool    Enabled: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.\n    encryptionSettings  []EncryptionSettingsElement_Status     EncryptionSettings: A collection of encryption settings, one for each disk volume.\n    encryptionSettingsVersion  string    EncryptionSettingsVersion: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. \u0026lsquo;1.0\u0026rsquo; corresponds to Azure Disk Encryption with AAD app.\u0026lsquo;1.1\u0026rsquo; corresponds to Azure Disk Encryption.\n    EncryptionSettingsCollection_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)      Field Description      enabled  bool    Enabled: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.\n    encryptionSettings  []EncryptionSettingsElement_StatusARM     EncryptionSettings: A collection of encryption settings, one for each disk volume.\n    encryptionSettingsVersion  string    EncryptionSettingsVersion: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. \u0026lsquo;1.0\u0026rsquo; corresponds to Azure Disk Encryption with AAD app.\u0026lsquo;1.1\u0026rsquo; corresponds to Azure Disk Encryption.\n    EncryptionSettingsElement   (Appears on:EncryptionSettingsCollection)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/EncryptionSettingsElement\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReference     DiskEncryptionKey: Key Vault Secret Url and vault id of the encryption key\n    keyEncryptionKey  KeyVaultAndKeyReference     KeyEncryptionKey: Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey\n    EncryptionSettingsElementARM   (Appears on:EncryptionSettingsCollectionARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/EncryptionSettingsElement\n    Field Description      diskEncryptionKey  KeyVaultAndSecretReferenceARM     DiskEncryptionKey: Key Vault Secret Url and vault id of the encryption key\n    keyEncryptionKey  KeyVaultAndKeyReferenceARM     KeyEncryptionKey: Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey\n    EncryptionSettingsElement_Status   (Appears on:EncryptionSettingsCollection_Status)      Field Description      diskEncryptionKey  KeyVaultAndSecretReference_Status     DiskEncryptionKey: Key Vault Secret Url and vault id of the disk encryption key\n    keyEncryptionKey  KeyVaultAndKeyReference_Status     KeyEncryptionKey: Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.\n    EncryptionSettingsElement_StatusARM   (Appears on:EncryptionSettingsCollection_StatusARM)      Field Description      diskEncryptionKey  KeyVaultAndSecretReference_StatusARM     DiskEncryptionKey: Key Vault Secret Url and vault id of the disk encryption key\n    keyEncryptionKey  KeyVaultAndKeyReference_StatusARM     KeyEncryptionKey: Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.\n    EncryptionType (string alias)  (Appears on:Encryption, EncryptionARM)      Value Description   \u0026#34;EncryptionAtRestWithCustomerKey\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformAndCustomerKeys\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformKey\u0026#34;\n    EncryptionType_Status (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)      Value Description   \u0026#34;EncryptionAtRestWithCustomerKey\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformAndCustomerKeys\u0026#34;\n  \u0026#34;EncryptionAtRestWithPlatformKey\u0026#34;\n    Encryption_Status   (Appears on:Disk_Status, Snapshot_Status)      Field Description      diskEncryptionSetId  string    DiskEncryptionSetId: ResourceId of the disk encryption set to use for enabling encryption at rest.\n    type  EncryptionType_Status         Encryption_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)      Field Description      diskEncryptionSetId  string    DiskEncryptionSetId: ResourceId of the disk encryption set to use for enabling encryption at rest.\n    type  EncryptionType_Status         ExtendedLocation   (Appears on:Disks_Spec, Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:Disks_SpecARM, Snapshots_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:Disk_Status, Snapshot_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:Disk_StatusARM, Snapshot_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ImageDiskReference   (Appears on:CreationData)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/ImageDiskReference\n    Field Description      lun  int    Lun: If the disk is created from an image\u0026rsquo;s data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.\n    reference  genruntime.ResourceReference     Reference: A relative uri containing either a Platform Image Repository or user image reference.\n    ImageDiskReferenceARM   (Appears on:CreationDataARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/ImageDiskReference\n    Field Description      id  string        lun  int    Lun: If the disk is created from an image\u0026rsquo;s data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.\n    ImageDiskReference_Status   (Appears on:CreationData_Status)      Field Description      id  string    Id: A relative uri containing either a Platform Image Repository or user image reference.\n    lun  int    Lun: If the disk is created from an image\u0026rsquo;s data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.\n    ImageDiskReference_StatusARM   (Appears on:CreationData_StatusARM)      Field Description      id  string    Id: A relative uri containing either a Platform Image Repository or user image reference.\n    lun  int    Lun: If the disk is created from an image\u0026rsquo;s data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.\n    KeyVaultAndKeyReference   (Appears on:EncryptionSettingsElement)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/KeyVaultAndKeyReference\n    Field Description      keyUrl  string    KeyUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault     SourceVault: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\n    KeyVaultAndKeyReferenceARM   (Appears on:EncryptionSettingsElementARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/KeyVaultAndKeyReference\n    Field Description      keyUrl  string    KeyUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVaultARM     SourceVault: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\n    KeyVaultAndKeyReference_Status   (Appears on:EncryptionSettingsElement_Status)      Field Description      keyUrl  string    KeyUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault_Status     SourceVault: Resource id of the KeyVault containing the key or secret\n    KeyVaultAndKeyReference_StatusARM   (Appears on:EncryptionSettingsElement_StatusARM)      Field Description      keyUrl  string    KeyUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault_StatusARM     SourceVault: Resource id of the KeyVault containing the key or secret\n    KeyVaultAndSecretReference   (Appears on:EncryptionSettingsElement)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/KeyVaultAndSecretReference\n    Field Description      secretUrl  string    SecretUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault     SourceVault: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\n    KeyVaultAndSecretReferenceARM   (Appears on:EncryptionSettingsElementARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/KeyVaultAndSecretReference\n    Field Description      secretUrl  string    SecretUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVaultARM     SourceVault: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\n    KeyVaultAndSecretReference_Status   (Appears on:EncryptionSettingsElement_Status)      Field Description      secretUrl  string    SecretUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault_Status     SourceVault: Resource id of the KeyVault containing the key or secret\n    KeyVaultAndSecretReference_StatusARM   (Appears on:EncryptionSettingsElement_StatusARM)      Field Description      secretUrl  string    SecretUrl: Url pointing to a key or secret in KeyVault\n    sourceVault  SourceVault_StatusARM     SourceVault: Resource id of the KeyVault containing the key or secret\n    NetworkAccessPolicy_Status (string alias)  (Appears on:DiskProperties_StatusARM, Disk_Status, SnapshotProperties_StatusARM, Snapshot_Status)      Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    PurchasePlan   (Appears on:Disks_Spec, Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/PurchasePlan\n    Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The Offer Promotion Code.\n    publisher  string    Publisher: The publisher ID.\n    PurchasePlanARM   (Appears on:DiskPropertiesARM, SnapshotPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/PurchasePlan\n    Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The Offer Promotion Code.\n    publisher  string    Publisher: The publisher ID.\n    PurchasePlan_Status   (Appears on:Disk_Status, Snapshot_Status)      Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The Offer Promotion Code.\n    publisher  string    Publisher: The publisher ID.\n    PurchasePlan_StatusARM   (Appears on:DiskProperties_StatusARM, SnapshotProperties_StatusARM)      Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The Offer Promotion Code.\n    publisher  string    Publisher: The publisher ID.\n    ShareInfoElement_Status   (Appears on:Disk_Status)      Field Description      vmUri  string    VmUri: A relative URI containing the ID of the VM that has the disk attached.\n    ShareInfoElement_StatusARM   (Appears on:DiskProperties_StatusARM)      Field Description      vmUri  string    VmUri: A relative URI containing the ID of the VM that has the disk attached.\n    Snapshot   Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/resourceDefinitions/snapshots\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Snapshots_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    creationData  CreationData     CreationData: Data used when creating a disk.\n    diskAccessReference  genruntime.ResourceReference     DiskAccessReference: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  SnapshotPropertiesDiskState     DiskState: The state of the snapshot.\n    encryption  Encryption     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollection     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  SnapshotPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    incremental  bool    Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.\n    location  string    Location: Location to deploy resource to\n    networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType     OsType: The Operating System type.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    sku  SnapshotSku     Sku: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Snapshot_Status         SnapshotPropertiesARM   (Appears on:Snapshots_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/SnapshotProperties\n    Field Description      creationData  CreationDataARM     CreationData: Data used when creating a disk.\n    diskAccessId  string        diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  SnapshotPropertiesDiskState     DiskState: The state of the snapshot.\n    encryption  EncryptionARM     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollectionARM     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    hyperVGeneration  SnapshotPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    incremental  bool    Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.\n    networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType     OsType: The Operating System type.\n    purchasePlan  PurchasePlanARM     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    SnapshotPropertiesDiskState (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)      Value Description   \u0026#34;ActiveSAS\u0026#34;\n  \u0026#34;ActiveUpload\u0026#34;\n  \u0026#34;Attached\u0026#34;\n  \u0026#34;ReadyToUpload\u0026#34;\n  \u0026#34;Reserved\u0026#34;\n  \u0026#34;Unattached\u0026#34;\n    SnapshotPropertiesHyperVGeneration (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    SnapshotPropertiesNetworkAccessPolicy (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)      Value Description   \u0026#34;AllowAll\u0026#34;\n  \u0026#34;AllowPrivate\u0026#34;\n  \u0026#34;DenyAll\u0026#34;\n    SnapshotPropertiesOsType (string alias)  (Appears on:SnapshotPropertiesARM, Snapshots_Spec)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    SnapshotPropertiesStatusHyperVGeneration (string alias)  (Appears on:SnapshotProperties_StatusARM, Snapshot_Status)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    SnapshotPropertiesStatusOsType (string alias)  (Appears on:SnapshotProperties_StatusARM, Snapshot_Status)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    SnapshotProperties_StatusARM   (Appears on:Snapshot_StatusARM)      Field Description      creationData  CreationData_StatusARM     CreationData: Disk source information. CreationData information cannot be changed after the disk has been created.\n    diskAccessId  string    DiskAccessId: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskSizeBytes  int    DiskSizeBytes: The size of the disk in bytes. This field is read only.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  DiskState_Status     DiskState: The state of the snapshot.\n    encryption  Encryption_StatusARM     Encryption: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.\n    encryptionSettingsCollection  EncryptionSettingsCollection_StatusARM     EncryptionSettingsCollection: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.\n    hyperVGeneration  SnapshotPropertiesStatusHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    incremental  bool    Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.\n    networkAccessPolicy  NetworkAccessPolicy_Status         osType  SnapshotPropertiesStatusOsType     OsType: The Operating System type.\n    provisioningState  string    ProvisioningState: The disk provisioning state.\n    purchasePlan  PurchasePlan_StatusARM     PurchasePlan: Purchase plan information for the image from which the source disk for the snapshot was originally created.\n    timeCreated  string    TimeCreated: The time when the snapshot was created.\n    uniqueId  string    UniqueId: Unique Guid identifying the resource.\n    SnapshotSku   (Appears on:Snapshots_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/SnapshotSku\n    Field Description      name  SnapshotSkuName     Name: The sku name.\n    SnapshotSkuARM   (Appears on:Snapshots_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/SnapshotSku\n    Field Description      name  SnapshotSkuName     Name: The sku name.\n    SnapshotSkuName (string alias)  (Appears on:SnapshotSku, SnapshotSkuARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SnapshotSkuStatusName (string alias)  (Appears on:SnapshotSku_Status, SnapshotSku_StatusARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SnapshotSku_Status   (Appears on:Snapshot_Status)      Field Description      name  SnapshotSkuStatusName     Name: The sku name.\n    tier  string    Tier: The sku tier.\n    SnapshotSku_StatusARM   (Appears on:Snapshot_StatusARM)      Field Description      name  SnapshotSkuStatusName     Name: The sku name.\n    tier  string    Tier: The sku tier.\n    Snapshot_Status   (Appears on:Snapshot)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationData  CreationData_Status     CreationData: Disk source information. CreationData information cannot be changed after the disk has been created.\n    diskAccessId  string    DiskAccessId: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskSizeBytes  int    DiskSizeBytes: The size of the disk in bytes. This field is read only.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  DiskState_Status     DiskState: The state of the snapshot.\n    encryption  Encryption_Status     Encryption: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.\n    encryptionSettingsCollection  EncryptionSettingsCollection_Status     EncryptionSettingsCollection: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location where the snapshot will be created. Extended location cannot be changed.\n    hyperVGeneration  SnapshotPropertiesStatusHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    id  string    Id: Resource Id\n    incremental  bool    Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.\n    location  string    Location: Resource location\n    managedBy  string    ManagedBy: Unused. Always Null.\n    name  string    Name: Resource name\n    networkAccessPolicy  NetworkAccessPolicy_Status         osType  SnapshotPropertiesStatusOsType     OsType: The Operating System type.\n    provisioningState  string    ProvisioningState: The disk provisioning state.\n    purchasePlan  PurchasePlan_Status     PurchasePlan: Purchase plan information for the image from which the source disk for the snapshot was originally created.\n    sku  SnapshotSku_Status         tags  map[string]string    Tags: Resource tags\n    timeCreated  string    TimeCreated: The time when the snapshot was created.\n    type  string    Type: Resource type\n    uniqueId  string    UniqueId: Unique Guid identifying the resource.\n    Snapshot_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location where the snapshot will be created. Extended location cannot be changed.\n    id  string    Id: Resource Id\n    location  string    Location: Resource location\n    managedBy  string    ManagedBy: Unused. Always Null.\n    name  string    Name: Resource name\n    properties  SnapshotProperties_StatusARM         sku  SnapshotSku_StatusARM         tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    SnapshotsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-09-30\u0026#34;\n    Snapshots_Spec   (Appears on:Snapshot)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    creationData  CreationData     CreationData: Data used when creating a disk.\n    diskAccessReference  genruntime.ResourceReference     DiskAccessReference: ARM id of the DiskAccess resource for using private endpoints on disks.\n    diskSizeGB  int    DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk\u0026rsquo;s size.\n    diskState  SnapshotPropertiesDiskState     DiskState: The state of the snapshot.\n    encryption  Encryption     Encryption: Encryption at rest settings for disk or snapshot\n    encryptionSettingsCollection  EncryptionSettingsCollection     EncryptionSettingsCollection: Encryption settings for disk or snapshot\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  SnapshotPropertiesHyperVGeneration     HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.\n    incremental  bool    Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.\n    location  string    Location: Location to deploy resource to\n    networkAccessPolicy  SnapshotPropertiesNetworkAccessPolicy         osType  SnapshotPropertiesOsType     OsType: The Operating System type.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    purchasePlan  PurchasePlan     PurchasePlan: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.\n    sku  SnapshotSku     Sku: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Snapshots_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the snapshot that is being created. The name can\u0026rsquo;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.\n    properties  SnapshotPropertiesARM     Properties: Snapshot resource properties.\n    sku  SnapshotSkuARM     Sku: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    SourceVault   (Appears on:KeyVaultAndKeyReference, KeyVaultAndSecretReference)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/SourceVault\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource Id\n    SourceVaultARM   (Appears on:KeyVaultAndKeyReferenceARM, KeyVaultAndSecretReferenceARM)  Generated from: https://schema.management.azure.com/schemas/2020-09-30/Microsoft.Compute.json#/definitions/SourceVault\n    Field Description      id  string        SourceVault_Status   (Appears on:KeyVaultAndKeyReference_Status, KeyVaultAndSecretReference_Status)      Field Description      id  string    Id: Resource Id\n    SourceVault_StatusARM   (Appears on:KeyVaultAndKeyReference_StatusARM, KeyVaultAndSecretReference_StatusARM)      Field Description      id  string    Id: Resource Id\n     "},{"id":31,"href":"/azure-service-operator/reference/compute.v1beta20201201/","title":"compute.azure.com/v1beta20201201","section":"References","content":"compute.azure.com/v1beta20201201  Package v1beta20201201 contains API Schema definitions for the compute v1beta20201201 API group\n Resource Types:  AdditionalCapabilities   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AdditionalCapabilities\n    Field Description      ultraSSDEnabled  bool    UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.\n    AdditionalCapabilitiesARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM, VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AdditionalCapabilities\n    Field Description      ultraSSDEnabled  bool    UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.\n    AdditionalCapabilities_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)      Field Description      ultraSSDEnabled  bool    UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.\n    AdditionalCapabilities_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetProperties_StatusARM)      Field Description      ultraSSDEnabled  bool    UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.\n    AdditionalUnattendContent   (Appears on:WindowsConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AdditionalUnattendContent\n    Field Description      componentName  AdditionalUnattendContentComponentName     ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.\n    content  string    Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.\n    passName  AdditionalUnattendContentPassName     PassName: The pass name. Currently, the only allowable value is OobeSystem.\n    settingName  AdditionalUnattendContentSettingName     SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.\n    AdditionalUnattendContentARM   (Appears on:WindowsConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AdditionalUnattendContent\n    Field Description      componentName  AdditionalUnattendContentComponentName     ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.\n    content  string    Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.\n    passName  AdditionalUnattendContentPassName     PassName: The pass name. Currently, the only allowable value is OobeSystem.\n    settingName  AdditionalUnattendContentSettingName     SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.\n    AdditionalUnattendContentComponentName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)      Value Description   \u0026#34;Microsoft-Windows-Shell-Setup\u0026#34;\n    AdditionalUnattendContentPassName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)      Value Description   \u0026#34;OobeSystem\u0026#34;\n    AdditionalUnattendContentSettingName (string alias)  (Appears on:AdditionalUnattendContent, AdditionalUnattendContentARM)      Value Description   \u0026#34;AutoLogon\u0026#34;\n  \u0026#34;FirstLogonCommands\u0026#34;\n    AdditionalUnattendContentStatusComponentName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)      Value Description   \u0026#34;Microsoft-Windows-Shell-Setup\u0026#34;\n    AdditionalUnattendContentStatusPassName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)      Value Description   \u0026#34;OobeSystem\u0026#34;\n    AdditionalUnattendContentStatusSettingName (string alias)  (Appears on:AdditionalUnattendContent_Status, AdditionalUnattendContent_StatusARM)      Value Description   \u0026#34;AutoLogon\u0026#34;\n  \u0026#34;FirstLogonCommands\u0026#34;\n    AdditionalUnattendContent_Status   (Appears on:WindowsConfiguration_Status)      Field Description      componentName  AdditionalUnattendContentStatusComponentName     ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.\n    content  string    Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.\n    passName  AdditionalUnattendContentStatusPassName     PassName: The pass name. Currently, the only allowable value is OobeSystem.\n    settingName  AdditionalUnattendContentStatusSettingName     SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.\n    AdditionalUnattendContent_StatusARM   (Appears on:WindowsConfiguration_StatusARM)      Field Description      componentName  AdditionalUnattendContentStatusComponentName     ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.\n    content  string    Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.\n    passName  AdditionalUnattendContentStatusPassName     PassName: The pass name. Currently, the only allowable value is OobeSystem.\n    settingName  AdditionalUnattendContentStatusSettingName     SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.\n    ApiEntityReference   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ApiEntityReference\n    Field Description      reference  genruntime.ResourceReference     Reference: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/\u0026hellip;\n    ApiEntityReferenceARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ApiEntityReference\n    Field Description      id  string        ApiEntityReference_Status   (Appears on:VirtualMachineScaleSetIPConfiguration_Status, VirtualMachineScaleSetNetworkProfile_Status)      Field Description      id  string    Id: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/\u0026hellip;\n    ApiEntityReference_StatusARM   (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetNetworkProfile_StatusARM)      Field Description      id  string    Id: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/\u0026hellip;\n    ApiErrorBase_Status   (Appears on:ApiError_Status)      Field Description      code  string    Code: The error code.\n    message  string    Message: The error message.\n    target  string    Target: The target of the particular error.\n    ApiErrorBase_StatusARM   (Appears on:ApiError_StatusARM)      Field Description      code  string    Code: The error code.\n    message  string    Message: The error message.\n    target  string    Target: The target of the particular error.\n    ApiError_Status   (Appears on:AvailablePatchSummary_Status, LastPatchInstallationSummary_Status)      Field Description      code  string    Code: The error code.\n    details  []ApiErrorBase_Status     Details: The Api error details\n    innererror  InnerError_Status     Innererror: The Api inner error\n    message  string    Message: The error message.\n    target  string    Target: The target of the particular error.\n    ApiError_StatusARM   (Appears on:AvailablePatchSummary_StatusARM, LastPatchInstallationSummary_StatusARM)      Field Description      code  string    Code: The error code.\n    details  []ApiErrorBase_StatusARM     Details: The Api error details\n    innererror  InnerError_StatusARM     Innererror: The Api inner error\n    message  string    Message: The error message.\n    target  string    Target: The target of the particular error.\n    AutomaticOSUpgradePolicy   (Appears on:UpgradePolicy)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AutomaticOSUpgradePolicy\n    Field Description      disableAutomaticRollback  bool    DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.\n    enableAutomaticOSUpgrade  bool    EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, enableAutomaticUpdates is automatically set to false and cannot be set to true.\n    AutomaticOSUpgradePolicyARM   (Appears on:UpgradePolicyARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AutomaticOSUpgradePolicy\n    Field Description      disableAutomaticRollback  bool    DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.\n    enableAutomaticOSUpgrade  bool    EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, enableAutomaticUpdates is automatically set to false and cannot be set to true.\n    AutomaticOSUpgradePolicy_Status   (Appears on:UpgradePolicy_Status)      Field Description      disableAutomaticRollback  bool    DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.\n    enableAutomaticOSUpgrade  bool    EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, enableAutomaticUpdates is automatically set to false and cannot be set to true.\n    AutomaticOSUpgradePolicy_StatusARM   (Appears on:UpgradePolicy_StatusARM)      Field Description      disableAutomaticRollback  bool    DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.\n    enableAutomaticOSUpgrade  bool    EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, enableAutomaticUpdates is automatically set to false and cannot be set to true.\n    AutomaticRepairsPolicy   (Appears on:VirtualMachineScaleSets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AutomaticRepairsPolicy\n    Field Description      enabled  bool    Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.\n    gracePeriod  string    GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).\n    AutomaticRepairsPolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/AutomaticRepairsPolicy\n    Field Description      enabled  bool    Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.\n    gracePeriod  string    GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).\n    AutomaticRepairsPolicy_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      enabled  bool    Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.\n    gracePeriod  string    GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).\n    AutomaticRepairsPolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)      Field Description      enabled  bool    Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.\n    gracePeriod  string    GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).\n    AvailablePatchSummaryStatusStatus (string alias)  (Appears on:AvailablePatchSummary_Status, AvailablePatchSummary_StatusARM)      Value Description   \u0026#34;CompletedWithWarnings\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    AvailablePatchSummary_Status   (Appears on:VirtualMachinePatchStatus_Status)      Field Description      assessmentActivityId  string    AssessmentActivityId: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n    criticalAndSecurityPatchCount  int    CriticalAndSecurityPatchCount: The number of critical or security patches that have been detected as available and not yet installed.\n    error  ApiError_Status     Error: The errors that were encountered during execution of the operation. The details array contains the list of them.\n    lastModifiedTime  string    LastModifiedTime: The UTC timestamp when the operation began.\n    otherPatchCount  int    OtherPatchCount: The number of all available patches excluding critical and security.\n    rebootPending  bool    RebootPending: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.\n    startTime  string    StartTime: The UTC timestamp when the operation began.\n    status  AvailablePatchSummaryStatusStatus     Status: The overall success or failure status of the operation. It remains \u0026ldquo;InProgress\u0026rdquo; until the operation completes. At that point it will become \u0026ldquo;Unknown\u0026rdquo;, \u0026ldquo;Failed\u0026rdquo;, \u0026ldquo;Succeeded\u0026rdquo;, or \u0026ldquo;CompletedWithWarnings.\u0026rdquo;\n    AvailablePatchSummary_StatusARM   (Appears on:VirtualMachinePatchStatus_StatusARM)      Field Description      assessmentActivityId  string    AssessmentActivityId: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n    criticalAndSecurityPatchCount  int    CriticalAndSecurityPatchCount: The number of critical or security patches that have been detected as available and not yet installed.\n    error  ApiError_StatusARM     Error: The errors that were encountered during execution of the operation. The details array contains the list of them.\n    lastModifiedTime  string    LastModifiedTime: The UTC timestamp when the operation began.\n    otherPatchCount  int    OtherPatchCount: The number of all available patches excluding critical and security.\n    rebootPending  bool    RebootPending: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.\n    startTime  string    StartTime: The UTC timestamp when the operation began.\n    status  AvailablePatchSummaryStatusStatus     Status: The overall success or failure status of the operation. It remains \u0026ldquo;InProgress\u0026rdquo; until the operation completes. At that point it will become \u0026ldquo;Unknown\u0026rdquo;, \u0026ldquo;Failed\u0026rdquo;, \u0026ldquo;Succeeded\u0026rdquo;, or \u0026ldquo;CompletedWithWarnings.\u0026rdquo;\n    BillingProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/BillingProfile\n    Field Description      maxPrice  float64    MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure Spot price. The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. Possible values are: - Any decimal value greater than zero. Example: 0.01538 -1 – indicates default price to be up-to on-demand. You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. Minimum api-version: 2019-03-01.\n    BillingProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/BillingProfile\n    Field Description      maxPrice  float64    MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure Spot price. The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. Possible values are: - Any decimal value greater than zero. Example: 0.01538 -1 – indicates default price to be up-to on-demand. You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. Minimum api-version: 2019-03-01.\n    BillingProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)      Field Description      maxPrice  float64    MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure Spot price. The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. Possible values are: - Any decimal value greater than zero. Example: 0.01538 -1 – indicates default price to be up-to on-demand. You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. Minimum api-version: 2019-03-01.\n    BillingProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      maxPrice  float64    MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if the maxPrice is greater than the current Azure Spot price. The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. Possible values are: - Any decimal value greater than zero. Example: 0.01538 -1 – indicates default price to be up-to on-demand. You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. Minimum api-version: 2019-03-01.\n    BootDiagnostics   (Appears on:DiagnosticsProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/BootDiagnostics\n    Field Description      enabled  bool    Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.\n    storageUri  string    StorageUri: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.\n    BootDiagnosticsARM   (Appears on:DiagnosticsProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/BootDiagnostics\n    Field Description      enabled  bool    Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.\n    storageUri  string    StorageUri: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.\n    BootDiagnosticsInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      consoleScreenshotBlobUri  string    ConsoleScreenshotBlobUri: The console screenshot blob URI. NOTE: This will not be set if boot diagnostics is currently enabled with managed storage.\n    serialConsoleLogBlobUri  string    SerialConsoleLogBlobUri: The serial console log blob Uri. NOTE: This will not be set if boot diagnostics is currently enabled with managed storage.\n    status  InstanceViewStatus_Status     Status: The boot diagnostics status information for the VM. NOTE: It will be set only if there are errors encountered in enabling boot diagnostics.\n    BootDiagnosticsInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      consoleScreenshotBlobUri  string    ConsoleScreenshotBlobUri: The console screenshot blob URI. NOTE: This will not be set if boot diagnostics is currently enabled with managed storage.\n    serialConsoleLogBlobUri  string    SerialConsoleLogBlobUri: The serial console log blob Uri. NOTE: This will not be set if boot diagnostics is currently enabled with managed storage.\n    status  InstanceViewStatus_StatusARM     Status: The boot diagnostics status information for the VM. NOTE: It will be set only if there are errors encountered in enabling boot diagnostics.\n    BootDiagnostics_Status   (Appears on:DiagnosticsProfile_Status)      Field Description      enabled  bool    Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.\n    storageUri  string    StorageUri: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.\n    BootDiagnostics_StatusARM   (Appears on:DiagnosticsProfile_StatusARM)      Field Description      enabled  bool    Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.\n    storageUri  string    StorageUri: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.\n    Caching_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM, OSDisk_Status, OSDisk_StatusARM, VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    CreateOption_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM, OSDisk_Status, OSDisk_StatusARM, VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    DataDisk   (Appears on:StorageProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DataDisk\n    Field Description      caching  DataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  DataDiskCreateOption     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    detachOption  DataDiskDetachOption     DetachOption: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. detachOption: ForceDetach is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to \u0026lsquo;true\u0026rsquo; along with setting detachOption: \u0026lsquo;ForceDetach\u0026rsquo;.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk     Image: Describes the uri of a disk.\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  ManagedDiskParameters     ManagedDisk: The parameters of a managed disk.\n    name  string    Name: The disk name.\n    toBeDetached  bool    ToBeDetached: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset\n    vhd  VirtualHardDisk     Vhd: Describes the uri of a disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    DataDiskARM   (Appears on:StorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DataDisk\n    Field Description      caching  DataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  DataDiskCreateOption     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    detachOption  DataDiskDetachOption     DetachOption: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. detachOption: ForceDetach is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to \u0026lsquo;true\u0026rsquo; along with setting detachOption: \u0026lsquo;ForceDetach\u0026rsquo;.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDiskARM     Image: Describes the uri of a disk.\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  ManagedDiskParametersARM     ManagedDisk: The parameters of a managed disk.\n    name  string    Name: The disk name.\n    toBeDetached  bool    ToBeDetached: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset\n    vhd  VirtualHardDiskARM     Vhd: Describes the uri of a disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    DataDiskCaching (string alias)  (Appears on:DataDisk, DataDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    DataDiskCreateOption (string alias)  (Appears on:DataDisk, DataDiskARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    DataDiskDetachOption (string alias)  (Appears on:DataDisk, DataDiskARM)      Value Description   \u0026#34;ForceDetach\u0026#34;\n    DataDisk_Status   (Appears on:StorageProfile_Status)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    detachOption  DetachOption_Status     DetachOption: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. detachOption: ForceDetach is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to \u0026lsquo;true\u0026rsquo; along with setting detachOption: \u0026lsquo;ForceDetach\u0026rsquo;.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk_Status     Image: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  ManagedDiskParameters_Status     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    toBeDetached  bool    ToBeDetached: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset\n    vhd  VirtualHardDisk_Status     Vhd: The virtual hard disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    DataDisk_StatusARM   (Appears on:StorageProfile_StatusARM)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    detachOption  DetachOption_Status     DetachOption: Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: ForceDetach. detachOption: ForceDetach is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to \u0026lsquo;true\u0026rsquo; along with setting detachOption: \u0026lsquo;ForceDetach\u0026rsquo;.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk_StatusARM     Image: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  ManagedDiskParameters_StatusARM     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    toBeDetached  bool    ToBeDetached: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset\n    vhd  VirtualHardDisk_StatusARM     Vhd: The virtual hard disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    DetachOption_Status (string alias)  (Appears on:DataDisk_Status, DataDisk_StatusARM)      Value Description   \u0026#34;ForceDetach\u0026#34;\n    DiagnosticsProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiagnosticsProfile\n    Field Description      bootDiagnostics  BootDiagnostics     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    DiagnosticsProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiagnosticsProfile\n    Field Description      bootDiagnostics  BootDiagnosticsARM     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    DiagnosticsProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)      Field Description      bootDiagnostics  BootDiagnostics_Status     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    DiagnosticsProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      bootDiagnostics  BootDiagnostics_StatusARM     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    DiffDiskOption_Status (string alias)  (Appears on:DiffDiskSettings_Status, DiffDiskSettings_StatusARM)      Value Description   \u0026#34;Local\u0026#34;\n    DiffDiskPlacement_Status (string alias)  (Appears on:DiffDiskSettings_Status, DiffDiskSettings_StatusARM)      Value Description   \u0026#34;CacheDisk\u0026#34;\n  \u0026#34;ResourceDisk\u0026#34;\n    DiffDiskSettings   (Appears on:OSDisk, VirtualMachineScaleSetOSDisk)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiffDiskSettings\n    Field Description      option  DiffDiskSettingsOption     Option: Specifies the ephemeral disk settings for operating system disk.\n    placement  DiffDiskSettingsPlacement     Placement: Specifies the ephemeral disk placement for operating system disk. Possible values are: CacheDisk ResourceDisk Default: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used. Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.\n    DiffDiskSettingsARM   (Appears on:OSDiskARM, VirtualMachineScaleSetOSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiffDiskSettings\n    Field Description      option  DiffDiskSettingsOption     Option: Specifies the ephemeral disk settings for operating system disk.\n    placement  DiffDiskSettingsPlacement     Placement: Specifies the ephemeral disk placement for operating system disk. Possible values are: CacheDisk ResourceDisk Default: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used. Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.\n    DiffDiskSettingsOption (string alias)  (Appears on:DiffDiskSettings, DiffDiskSettingsARM)      Value Description   \u0026#34;Local\u0026#34;\n    DiffDiskSettingsPlacement (string alias)  (Appears on:DiffDiskSettings, DiffDiskSettingsARM)      Value Description   \u0026#34;CacheDisk\u0026#34;\n  \u0026#34;ResourceDisk\u0026#34;\n    DiffDiskSettings_Status   (Appears on:OSDisk_Status, VirtualMachineScaleSetOSDisk_Status)      Field Description      option  DiffDiskOption_Status     Option: Specifies the ephemeral disk settings for operating system disk.\n    placement  DiffDiskPlacement_Status     Placement: Specifies the ephemeral disk placement for operating system disk. Possible values are: CacheDisk ResourceDisk Default: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used. Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.\n    DiffDiskSettings_StatusARM   (Appears on:OSDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)      Field Description      option  DiffDiskOption_Status     Option: Specifies the ephemeral disk settings for operating system disk.\n    placement  DiffDiskPlacement_Status     Placement: Specifies the ephemeral disk placement for operating system disk. Possible values are: CacheDisk ResourceDisk Default: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used. Refer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.\n    DiskEncryptionSetParameters   (Appears on:ManagedDiskParameters, VirtualMachineScaleSetManagedDiskParameters)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiskEncryptionSetParameters\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource Id\n    DiskEncryptionSetParametersARM   (Appears on:ManagedDiskParametersARM, VirtualMachineScaleSetManagedDiskParametersARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiskEncryptionSetParameters\n    Field Description      id  string        DiskEncryptionSettings   (Appears on:OSDisk)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiskEncryptionSettings\n    Field Description      diskEncryptionKey  KeyVaultSecretReference     DiskEncryptionKey: Describes a reference to Key Vault Secret\n    enabled  bool    Enabled: Specifies whether disk encryption should be enabled on the virtual machine.\n    keyEncryptionKey  KeyVaultKeyReference     KeyEncryptionKey: Describes a reference to Key Vault Key\n    DiskEncryptionSettingsARM   (Appears on:OSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/DiskEncryptionSettings\n    Field Description      diskEncryptionKey  KeyVaultSecretReferenceARM     DiskEncryptionKey: Describes a reference to Key Vault Secret\n    enabled  bool    Enabled: Specifies whether disk encryption should be enabled on the virtual machine.\n    keyEncryptionKey  KeyVaultKeyReferenceARM     KeyEncryptionKey: Describes a reference to Key Vault Key\n    DiskEncryptionSettings_Status   (Appears on:DiskInstanceView_Status, OSDisk_Status)      Field Description      diskEncryptionKey  KeyVaultSecretReference_Status     DiskEncryptionKey: Specifies the location of the disk encryption key, which is a Key Vault Secret.\n    enabled  bool    Enabled: Specifies whether disk encryption should be enabled on the virtual machine.\n    keyEncryptionKey  KeyVaultKeyReference_Status     KeyEncryptionKey: Specifies the location of the key encryption key in Key Vault.\n    DiskEncryptionSettings_StatusARM   (Appears on:DiskInstanceView_StatusARM, OSDisk_StatusARM)      Field Description      diskEncryptionKey  KeyVaultSecretReference_StatusARM     DiskEncryptionKey: Specifies the location of the disk encryption key, which is a Key Vault Secret.\n    enabled  bool    Enabled: Specifies whether disk encryption should be enabled on the virtual machine.\n    keyEncryptionKey  KeyVaultKeyReference_StatusARM     KeyEncryptionKey: Specifies the location of the key encryption key in Key Vault.\n    DiskInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      encryptionSettings  []DiskEncryptionSettings_Status     EncryptionSettings: Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15\n    name  string    Name: The disk name.\n    statuses  []InstanceViewStatus_Status     Statuses: The resource status information.\n    DiskInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      encryptionSettings  []DiskEncryptionSettings_StatusARM     EncryptionSettings: Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15\n    name  string    Name: The disk name.\n    statuses  []InstanceViewStatus_StatusARM     Statuses: The resource status information.\n    EvictionPolicy_Status (string alias)  (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_Status, VirtualMachineScaleSetVMProfile_StatusARM, VirtualMachine_Status)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ExtendedLocation   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:VirtualMachineScaleSets_SpecARM, VirtualMachines_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM, VirtualMachine_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    GenericExtensionARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.Extensions.json#/definitions/genericExtension\n    Field Description      publisher  string    Publisher: Microsoft.Compute/extensions - Publisher\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Microsoft.Compute/extensions - Settings\n    type  string    Type: Microsoft.Compute/extensions - Type\n    typeHandlerVersion  string    TypeHandlerVersion: Microsoft.Compute/extensions - Type handler version\n    HardwareProfile   (Appears on:VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/HardwareProfile\n    Field Description      vmSize  HardwareProfileVmSize     VmSize: Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. Recommended way to get the list of available sizes is using these APIs: List all available virtual machine sizes in an availability set List all available virtual machine sizes in a region List all available virtual machine sizes for resizing. For more information about virtual machine sizes, see Sizes for virtual machines. The available VM sizes depend on region and availability set.\n    HardwareProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/HardwareProfile\n    Field Description      vmSize  HardwareProfileVmSize     VmSize: Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. Recommended way to get the list of available sizes is using these APIs: List all available virtual machine sizes in an availability set List all available virtual machine sizes in a region List all available virtual machine sizes for resizing. For more information about virtual machine sizes, see Sizes for virtual machines. The available VM sizes depend on region and availability set.\n    HardwareProfileStatusVmSize (string alias)  (Appears on:HardwareProfile_Status, HardwareProfile_StatusARM)      Value Description   \u0026#34;Basic_A0\u0026#34;\n  \u0026#34;Basic_A1\u0026#34;\n  \u0026#34;Basic_A2\u0026#34;\n  \u0026#34;Basic_A3\u0026#34;\n  \u0026#34;Basic_A4\u0026#34;\n  \u0026#34;Standard_A0\u0026#34;\n  \u0026#34;Standard_A1\u0026#34;\n  \u0026#34;Standard_A10\u0026#34;\n  \u0026#34;Standard_A11\u0026#34;\n  \u0026#34;Standard_A1_v2\u0026#34;\n  \u0026#34;Standard_A2\u0026#34;\n  \u0026#34;Standard_A2m_v2\u0026#34;\n  \u0026#34;Standard_A2_v2\u0026#34;\n  \u0026#34;Standard_A3\u0026#34;\n  \u0026#34;Standard_A4\u0026#34;\n  \u0026#34;Standard_A4m_v2\u0026#34;\n  \u0026#34;Standard_A4_v2\u0026#34;\n  \u0026#34;Standard_A5\u0026#34;\n  \u0026#34;Standard_A6\u0026#34;\n  \u0026#34;Standard_A7\u0026#34;\n  \u0026#34;Standard_A8\u0026#34;\n  \u0026#34;Standard_A8m_v2\u0026#34;\n  \u0026#34;Standard_A8_v2\u0026#34;\n  \u0026#34;Standard_A9\u0026#34;\n  \u0026#34;Standard_B1ms\u0026#34;\n  \u0026#34;Standard_B1s\u0026#34;\n  \u0026#34;Standard_B2ms\u0026#34;\n  \u0026#34;Standard_B2s\u0026#34;\n  \u0026#34;Standard_B4ms\u0026#34;\n  \u0026#34;Standard_B8ms\u0026#34;\n  \u0026#34;Standard_D1\u0026#34;\n  \u0026#34;Standard_D11\u0026#34;\n  \u0026#34;Standard_D11_v2\u0026#34;\n  \u0026#34;Standard_D12\u0026#34;\n  \u0026#34;Standard_D12_v2\u0026#34;\n  \u0026#34;Standard_D13\u0026#34;\n  \u0026#34;Standard_D13_v2\u0026#34;\n  \u0026#34;Standard_D14\u0026#34;\n  \u0026#34;Standard_D14_v2\u0026#34;\n  \u0026#34;Standard_D15_v2\u0026#34;\n  \u0026#34;Standard_D16s_v3\u0026#34;\n  \u0026#34;Standard_D16_v3\u0026#34;\n  \u0026#34;Standard_D1_v2\u0026#34;\n  \u0026#34;Standard_D2\u0026#34;\n  \u0026#34;Standard_D2s_v3\u0026#34;\n  \u0026#34;Standard_D2_v2\u0026#34;\n  \u0026#34;Standard_D2_v3\u0026#34;\n  \u0026#34;Standard_D3\u0026#34;\n  \u0026#34;Standard_D32s_v3\u0026#34;\n  \u0026#34;Standard_D32_v3\u0026#34;\n  \u0026#34;Standard_D3_v2\u0026#34;\n  \u0026#34;Standard_D4\u0026#34;\n  \u0026#34;Standard_D4s_v3\u0026#34;\n  \u0026#34;Standard_D4_v2\u0026#34;\n  \u0026#34;Standard_D4_v3\u0026#34;\n  \u0026#34;Standard_D5_v2\u0026#34;\n  \u0026#34;Standard_D64s_v3\u0026#34;\n  \u0026#34;Standard_D64_v3\u0026#34;\n  \u0026#34;Standard_D8s_v3\u0026#34;\n  \u0026#34;Standard_D8_v3\u0026#34;\n  \u0026#34;Standard_DS1\u0026#34;\n  \u0026#34;Standard_DS11\u0026#34;\n  \u0026#34;Standard_DS11_v2\u0026#34;\n  \u0026#34;Standard_DS12\u0026#34;\n  \u0026#34;Standard_DS12_v2\u0026#34;\n  \u0026#34;Standard_DS13\u0026#34;\n  \u0026#34;Standard_DS13-2_v2\u0026#34;\n  \u0026#34;Standard_DS13-4_v2\u0026#34;\n  \u0026#34;Standard_DS13_v2\u0026#34;\n  \u0026#34;Standard_DS14\u0026#34;\n  \u0026#34;Standard_DS14-4_v2\u0026#34;\n  \u0026#34;Standard_DS14-8_v2\u0026#34;\n  \u0026#34;Standard_DS14_v2\u0026#34;\n  \u0026#34;Standard_DS15_v2\u0026#34;\n  \u0026#34;Standard_DS1_v2\u0026#34;\n  \u0026#34;Standard_DS2\u0026#34;\n  \u0026#34;Standard_DS2_v2\u0026#34;\n  \u0026#34;Standard_DS3\u0026#34;\n  \u0026#34;Standard_DS3_v2\u0026#34;\n  \u0026#34;Standard_DS4\u0026#34;\n  \u0026#34;Standard_DS4_v2\u0026#34;\n  \u0026#34;Standard_DS5_v2\u0026#34;\n  \u0026#34;Standard_E16s_v3\u0026#34;\n  \u0026#34;Standard_E16_v3\u0026#34;\n  \u0026#34;Standard_E2s_v3\u0026#34;\n  \u0026#34;Standard_E2_v3\u0026#34;\n  \u0026#34;Standard_E32-16_v3\u0026#34;\n  \u0026#34;Standard_E32-8s_v3\u0026#34;\n  \u0026#34;Standard_E32s_v3\u0026#34;\n  \u0026#34;Standard_E32_v3\u0026#34;\n  \u0026#34;Standard_E4s_v3\u0026#34;\n  \u0026#34;Standard_E4_v3\u0026#34;\n  \u0026#34;Standard_E64-16s_v3\u0026#34;\n  \u0026#34;Standard_E64-32s_v3\u0026#34;\n  \u0026#34;Standard_E64s_v3\u0026#34;\n  \u0026#34;Standard_E64_v3\u0026#34;\n  \u0026#34;Standard_E8s_v3\u0026#34;\n  \u0026#34;Standard_E8_v3\u0026#34;\n  \u0026#34;Standard_F1\u0026#34;\n  \u0026#34;Standard_F16\u0026#34;\n  \u0026#34;Standard_F16s\u0026#34;\n  \u0026#34;Standard_F16s_v2\u0026#34;\n  \u0026#34;Standard_F1s\u0026#34;\n  \u0026#34;Standard_F2\u0026#34;\n  \u0026#34;Standard_F2s\u0026#34;\n  \u0026#34;Standard_F2s_v2\u0026#34;\n  \u0026#34;Standard_F32s_v2\u0026#34;\n  \u0026#34;Standard_F4\u0026#34;\n  \u0026#34;Standard_F4s\u0026#34;\n  \u0026#34;Standard_F4s_v2\u0026#34;\n  \u0026#34;Standard_F64s_v2\u0026#34;\n  \u0026#34;Standard_F72s_v2\u0026#34;\n  \u0026#34;Standard_F8\u0026#34;\n  \u0026#34;Standard_F8s\u0026#34;\n  \u0026#34;Standard_F8s_v2\u0026#34;\n  \u0026#34;Standard_G1\u0026#34;\n  \u0026#34;Standard_G2\u0026#34;\n  \u0026#34;Standard_G3\u0026#34;\n  \u0026#34;Standard_G4\u0026#34;\n  \u0026#34;Standard_G5\u0026#34;\n  \u0026#34;Standard_GS1\u0026#34;\n  \u0026#34;Standard_GS2\u0026#34;\n  \u0026#34;Standard_GS3\u0026#34;\n  \u0026#34;Standard_GS4\u0026#34;\n  \u0026#34;Standard_GS4-4\u0026#34;\n  \u0026#34;Standard_GS4-8\u0026#34;\n  \u0026#34;Standard_GS5\u0026#34;\n  \u0026#34;Standard_GS5-16\u0026#34;\n  \u0026#34;Standard_GS5-8\u0026#34;\n  \u0026#34;Standard_H16\u0026#34;\n  \u0026#34;Standard_H16m\u0026#34;\n  \u0026#34;Standard_H16mr\u0026#34;\n  \u0026#34;Standard_H16r\u0026#34;\n  \u0026#34;Standard_H8\u0026#34;\n  \u0026#34;Standard_H8m\u0026#34;\n  \u0026#34;Standard_L16s\u0026#34;\n  \u0026#34;Standard_L32s\u0026#34;\n  \u0026#34;Standard_L4s\u0026#34;\n  \u0026#34;Standard_L8s\u0026#34;\n  \u0026#34;Standard_M128-32ms\u0026#34;\n  \u0026#34;Standard_M128-64ms\u0026#34;\n  \u0026#34;Standard_M128ms\u0026#34;\n  \u0026#34;Standard_M128s\u0026#34;\n  \u0026#34;Standard_M64-16ms\u0026#34;\n  \u0026#34;Standard_M64-32ms\u0026#34;\n  \u0026#34;Standard_M64ms\u0026#34;\n  \u0026#34;Standard_M64s\u0026#34;\n  \u0026#34;Standard_NC12\u0026#34;\n  \u0026#34;Standard_NC12s_v2\u0026#34;\n  \u0026#34;Standard_NC12s_v3\u0026#34;\n  \u0026#34;Standard_NC24\u0026#34;\n  \u0026#34;Standard_NC24r\u0026#34;\n  \u0026#34;Standard_NC24rs_v2\u0026#34;\n  \u0026#34;Standard_NC24rs_v3\u0026#34;\n  \u0026#34;Standard_NC24s_v2\u0026#34;\n  \u0026#34;Standard_NC24s_v3\u0026#34;\n  \u0026#34;Standard_NC6\u0026#34;\n  \u0026#34;Standard_NC6s_v2\u0026#34;\n  \u0026#34;Standard_NC6s_v3\u0026#34;\n  \u0026#34;Standard_ND12s\u0026#34;\n  \u0026#34;Standard_ND24rs\u0026#34;\n  \u0026#34;Standard_ND24s\u0026#34;\n  \u0026#34;Standard_ND6s\u0026#34;\n  \u0026#34;Standard_NV12\u0026#34;\n  \u0026#34;Standard_NV24\u0026#34;\n  \u0026#34;Standard_NV6\u0026#34;\n    HardwareProfileVmSize (string alias)  (Appears on:HardwareProfile, HardwareProfileARM)      Value Description   \u0026#34;Basic_A0\u0026#34;\n  \u0026#34;Basic_A1\u0026#34;\n  \u0026#34;Basic_A2\u0026#34;\n  \u0026#34;Basic_A3\u0026#34;\n  \u0026#34;Basic_A4\u0026#34;\n  \u0026#34;Standard_A0\u0026#34;\n  \u0026#34;Standard_A1\u0026#34;\n  \u0026#34;Standard_A10\u0026#34;\n  \u0026#34;Standard_A11\u0026#34;\n  \u0026#34;Standard_A1_v2\u0026#34;\n  \u0026#34;Standard_A2\u0026#34;\n  \u0026#34;Standard_A2m_v2\u0026#34;\n  \u0026#34;Standard_A2_v2\u0026#34;\n  \u0026#34;Standard_A3\u0026#34;\n  \u0026#34;Standard_A4\u0026#34;\n  \u0026#34;Standard_A4m_v2\u0026#34;\n  \u0026#34;Standard_A4_v2\u0026#34;\n  \u0026#34;Standard_A5\u0026#34;\n  \u0026#34;Standard_A6\u0026#34;\n  \u0026#34;Standard_A7\u0026#34;\n  \u0026#34;Standard_A8\u0026#34;\n  \u0026#34;Standard_A8m_v2\u0026#34;\n  \u0026#34;Standard_A8_v2\u0026#34;\n  \u0026#34;Standard_A9\u0026#34;\n  \u0026#34;Standard_B1ms\u0026#34;\n  \u0026#34;Standard_B1s\u0026#34;\n  \u0026#34;Standard_B2ms\u0026#34;\n  \u0026#34;Standard_B2s\u0026#34;\n  \u0026#34;Standard_B4ms\u0026#34;\n  \u0026#34;Standard_B8ms\u0026#34;\n  \u0026#34;Standard_D1\u0026#34;\n  \u0026#34;Standard_D11\u0026#34;\n  \u0026#34;Standard_D11_v2\u0026#34;\n  \u0026#34;Standard_D12\u0026#34;\n  \u0026#34;Standard_D12_v2\u0026#34;\n  \u0026#34;Standard_D13\u0026#34;\n  \u0026#34;Standard_D13_v2\u0026#34;\n  \u0026#34;Standard_D14\u0026#34;\n  \u0026#34;Standard_D14_v2\u0026#34;\n  \u0026#34;Standard_D15_v2\u0026#34;\n  \u0026#34;Standard_D16s_v3\u0026#34;\n  \u0026#34;Standard_D16_v3\u0026#34;\n  \u0026#34;Standard_D1_v2\u0026#34;\n  \u0026#34;Standard_D2\u0026#34;\n  \u0026#34;Standard_D2s_v3\u0026#34;\n  \u0026#34;Standard_D2_v2\u0026#34;\n  \u0026#34;Standard_D2_v3\u0026#34;\n  \u0026#34;Standard_D3\u0026#34;\n  \u0026#34;Standard_D32s_v3\u0026#34;\n  \u0026#34;Standard_D32_v3\u0026#34;\n  \u0026#34;Standard_D3_v2\u0026#34;\n  \u0026#34;Standard_D4\u0026#34;\n  \u0026#34;Standard_D4s_v3\u0026#34;\n  \u0026#34;Standard_D4_v2\u0026#34;\n  \u0026#34;Standard_D4_v3\u0026#34;\n  \u0026#34;Standard_D5_v2\u0026#34;\n  \u0026#34;Standard_D64s_v3\u0026#34;\n  \u0026#34;Standard_D64_v3\u0026#34;\n  \u0026#34;Standard_D8s_v3\u0026#34;\n  \u0026#34;Standard_D8_v3\u0026#34;\n  \u0026#34;Standard_DS1\u0026#34;\n  \u0026#34;Standard_DS11\u0026#34;\n  \u0026#34;Standard_DS11_v2\u0026#34;\n  \u0026#34;Standard_DS12\u0026#34;\n  \u0026#34;Standard_DS12_v2\u0026#34;\n  \u0026#34;Standard_DS13\u0026#34;\n  \u0026#34;Standard_DS13-2_v2\u0026#34;\n  \u0026#34;Standard_DS13-4_v2\u0026#34;\n  \u0026#34;Standard_DS13_v2\u0026#34;\n  \u0026#34;Standard_DS14\u0026#34;\n  \u0026#34;Standard_DS14-4_v2\u0026#34;\n  \u0026#34;Standard_DS14-8_v2\u0026#34;\n  \u0026#34;Standard_DS14_v2\u0026#34;\n  \u0026#34;Standard_DS15_v2\u0026#34;\n  \u0026#34;Standard_DS1_v2\u0026#34;\n  \u0026#34;Standard_DS2\u0026#34;\n  \u0026#34;Standard_DS2_v2\u0026#34;\n  \u0026#34;Standard_DS3\u0026#34;\n  \u0026#34;Standard_DS3_v2\u0026#34;\n  \u0026#34;Standard_DS4\u0026#34;\n  \u0026#34;Standard_DS4_v2\u0026#34;\n  \u0026#34;Standard_DS5_v2\u0026#34;\n  \u0026#34;Standard_E16s_v3\u0026#34;\n  \u0026#34;Standard_E16_v3\u0026#34;\n  \u0026#34;Standard_E2s_v3\u0026#34;\n  \u0026#34;Standard_E2_v3\u0026#34;\n  \u0026#34;Standard_E32-16_v3\u0026#34;\n  \u0026#34;Standard_E32-8s_v3\u0026#34;\n  \u0026#34;Standard_E32s_v3\u0026#34;\n  \u0026#34;Standard_E32_v3\u0026#34;\n  \u0026#34;Standard_E4s_v3\u0026#34;\n  \u0026#34;Standard_E4_v3\u0026#34;\n  \u0026#34;Standard_E64-16s_v3\u0026#34;\n  \u0026#34;Standard_E64-32s_v3\u0026#34;\n  \u0026#34;Standard_E64s_v3\u0026#34;\n  \u0026#34;Standard_E64_v3\u0026#34;\n  \u0026#34;Standard_E8s_v3\u0026#34;\n  \u0026#34;Standard_E8_v3\u0026#34;\n  \u0026#34;Standard_F1\u0026#34;\n  \u0026#34;Standard_F16\u0026#34;\n  \u0026#34;Standard_F16s\u0026#34;\n  \u0026#34;Standard_F16s_v2\u0026#34;\n  \u0026#34;Standard_F1s\u0026#34;\n  \u0026#34;Standard_F2\u0026#34;\n  \u0026#34;Standard_F2s\u0026#34;\n  \u0026#34;Standard_F2s_v2\u0026#34;\n  \u0026#34;Standard_F32s_v2\u0026#34;\n  \u0026#34;Standard_F4\u0026#34;\n  \u0026#34;Standard_F4s\u0026#34;\n  \u0026#34;Standard_F4s_v2\u0026#34;\n  \u0026#34;Standard_F64s_v2\u0026#34;\n  \u0026#34;Standard_F72s_v2\u0026#34;\n  \u0026#34;Standard_F8\u0026#34;\n  \u0026#34;Standard_F8s\u0026#34;\n  \u0026#34;Standard_F8s_v2\u0026#34;\n  \u0026#34;Standard_G1\u0026#34;\n  \u0026#34;Standard_G2\u0026#34;\n  \u0026#34;Standard_G3\u0026#34;\n  \u0026#34;Standard_G4\u0026#34;\n  \u0026#34;Standard_G5\u0026#34;\n  \u0026#34;Standard_GS1\u0026#34;\n  \u0026#34;Standard_GS2\u0026#34;\n  \u0026#34;Standard_GS3\u0026#34;\n  \u0026#34;Standard_GS4\u0026#34;\n  \u0026#34;Standard_GS4-4\u0026#34;\n  \u0026#34;Standard_GS4-8\u0026#34;\n  \u0026#34;Standard_GS5\u0026#34;\n  \u0026#34;Standard_GS5-16\u0026#34;\n  \u0026#34;Standard_GS5-8\u0026#34;\n  \u0026#34;Standard_H16\u0026#34;\n  \u0026#34;Standard_H16m\u0026#34;\n  \u0026#34;Standard_H16mr\u0026#34;\n  \u0026#34;Standard_H16r\u0026#34;\n  \u0026#34;Standard_H8\u0026#34;\n  \u0026#34;Standard_H8m\u0026#34;\n  \u0026#34;Standard_L16s\u0026#34;\n  \u0026#34;Standard_L32s\u0026#34;\n  \u0026#34;Standard_L4s\u0026#34;\n  \u0026#34;Standard_L8s\u0026#34;\n  \u0026#34;Standard_M128-32ms\u0026#34;\n  \u0026#34;Standard_M128-64ms\u0026#34;\n  \u0026#34;Standard_M128ms\u0026#34;\n  \u0026#34;Standard_M128s\u0026#34;\n  \u0026#34;Standard_M64-16ms\u0026#34;\n  \u0026#34;Standard_M64-32ms\u0026#34;\n  \u0026#34;Standard_M64ms\u0026#34;\n  \u0026#34;Standard_M64s\u0026#34;\n  \u0026#34;Standard_NC12\u0026#34;\n  \u0026#34;Standard_NC12s_v2\u0026#34;\n  \u0026#34;Standard_NC12s_v3\u0026#34;\n  \u0026#34;Standard_NC24\u0026#34;\n  \u0026#34;Standard_NC24r\u0026#34;\n  \u0026#34;Standard_NC24rs_v2\u0026#34;\n  \u0026#34;Standard_NC24rs_v3\u0026#34;\n  \u0026#34;Standard_NC24s_v2\u0026#34;\n  \u0026#34;Standard_NC24s_v3\u0026#34;\n  \u0026#34;Standard_NC6\u0026#34;\n  \u0026#34;Standard_NC6s_v2\u0026#34;\n  \u0026#34;Standard_NC6s_v3\u0026#34;\n  \u0026#34;Standard_ND12s\u0026#34;\n  \u0026#34;Standard_ND24rs\u0026#34;\n  \u0026#34;Standard_ND24s\u0026#34;\n  \u0026#34;Standard_ND6s\u0026#34;\n  \u0026#34;Standard_NV12\u0026#34;\n  \u0026#34;Standard_NV24\u0026#34;\n  \u0026#34;Standard_NV6\u0026#34;\n    HardwareProfile_Status   (Appears on:VirtualMachine_Status)      Field Description      vmSize  HardwareProfileStatusVmSize     VmSize: Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. Recommended way to get the list of available sizes is using these APIs: List all available virtual machine sizes in an availability set List all available virtual machine sizes in a region List all available virtual machine sizes for resizing. For more information about virtual machine sizes, see Sizes for virtual machines. The available VM sizes depend on region and availability set.\n    HardwareProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)      Field Description      vmSize  HardwareProfileStatusVmSize     VmSize: Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. Recommended way to get the list of available sizes is using these APIs: List all available virtual machine sizes in an availability set List all available virtual machine sizes in a region List all available virtual machine sizes for resizing. For more information about virtual machine sizes, see Sizes for virtual machines. The available VM sizes depend on region and availability set.\n    ImageReference   (Appears on:StorageProfile, VirtualMachineScaleSetStorageProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ImageReference\n    Field Description      offer  string    Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.\n    publisher  string    Publisher: The image publisher.\n    reference  genruntime.ResourceReference     Reference: Resource Id\n    sku  string    Sku: The image SKU.\n    version  string    Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or \u0026lsquo;latest\u0026rsquo;. Major, Minor, and Build are decimal numbers. Specify \u0026lsquo;latest\u0026rsquo; to use the latest version of an image available at deploy time. Even if you use \u0026lsquo;latest\u0026rsquo;, the VM image will not automatically update after deploy time even if a new version becomes available.\n    ImageReferenceARM   (Appears on:StorageProfileARM, VirtualMachineScaleSetStorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ImageReference\n    Field Description      id  string        offer  string    Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.\n    publisher  string    Publisher: The image publisher.\n    sku  string    Sku: The image SKU.\n    version  string    Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or \u0026lsquo;latest\u0026rsquo;. Major, Minor, and Build are decimal numbers. Specify \u0026lsquo;latest\u0026rsquo; to use the latest version of an image available at deploy time. Even if you use \u0026lsquo;latest\u0026rsquo;, the VM image will not automatically update after deploy time even if a new version becomes available.\n    ImageReference_Status   (Appears on:StorageProfile_Status, VirtualMachineScaleSetStorageProfile_Status)      Field Description      exactVersion  string    ExactVersion: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from \u0026lsquo;version\u0026rsquo;, only if the value specified in \u0026lsquo;version\u0026rsquo; field is \u0026lsquo;latest\u0026rsquo;.\n    id  string    Id: Resource Id\n    offer  string    Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.\n    publisher  string    Publisher: The image publisher.\n    sku  string    Sku: The image SKU.\n    version  string    Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or \u0026lsquo;latest\u0026rsquo;. Major, Minor, and Build are decimal numbers. Specify \u0026lsquo;latest\u0026rsquo; to use the latest version of an image available at deploy time. Even if you use \u0026lsquo;latest\u0026rsquo;, the VM image will not automatically update after deploy time even if a new version becomes available.\n    ImageReference_StatusARM   (Appears on:StorageProfile_StatusARM, VirtualMachineScaleSetStorageProfile_StatusARM)      Field Description      exactVersion  string    ExactVersion: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from \u0026lsquo;version\u0026rsquo;, only if the value specified in \u0026lsquo;version\u0026rsquo; field is \u0026lsquo;latest\u0026rsquo;.\n    id  string    Id: Resource Id\n    offer  string    Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.\n    publisher  string    Publisher: The image publisher.\n    sku  string    Sku: The image SKU.\n    version  string    Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or \u0026lsquo;latest\u0026rsquo;. Major, Minor, and Build are decimal numbers. Specify \u0026lsquo;latest\u0026rsquo; to use the latest version of an image available at deploy time. Even if you use \u0026lsquo;latest\u0026rsquo;, the VM image will not automatically update after deploy time even if a new version becomes available.\n    InnerError_Status   (Appears on:ApiError_Status)      Field Description      errordetail  string    Errordetail: The internal error message or exception dump.\n    exceptiontype  string    Exceptiontype: The exception type.\n    InnerError_StatusARM   (Appears on:ApiError_StatusARM)      Field Description      errordetail  string    Errordetail: The internal error message or exception dump.\n    exceptiontype  string    Exceptiontype: The exception type.\n    InstanceViewStatusStatusLevel (string alias)  (Appears on:InstanceViewStatus_Status, InstanceViewStatus_StatusARM)      Value Description   \u0026#34;Error\u0026#34;\n  \u0026#34;Info\u0026#34;\n  \u0026#34;Warning\u0026#34;\n    InstanceViewStatus_Status   (Appears on:BootDiagnosticsInstanceView_Status, DiskInstanceView_Status, VirtualMachineAgentInstanceView_Status, VirtualMachineExtensionHandlerInstanceView_Status, VirtualMachineExtensionInstanceView_Status, VirtualMachineHealthStatus_Status, VirtualMachineInstanceView_Status, VirtualMachinePatchStatus_Status)      Field Description      code  string    Code: The status code.\n    displayStatus  string    DisplayStatus: The short localizable label for the status.\n    level  InstanceViewStatusStatusLevel     Level: The level code.\n    message  string    Message: The detailed status message, including for alerts and error messages.\n    time  string    Time: The time of the status.\n    InstanceViewStatus_StatusARM   (Appears on:BootDiagnosticsInstanceView_StatusARM, DiskInstanceView_StatusARM, VirtualMachineAgentInstanceView_StatusARM, VirtualMachineExtensionHandlerInstanceView_StatusARM, VirtualMachineExtensionInstanceView_StatusARM, VirtualMachineHealthStatus_StatusARM, VirtualMachineInstanceView_StatusARM, VirtualMachinePatchStatus_StatusARM)      Field Description      code  string    Code: The status code.\n    displayStatus  string    DisplayStatus: The short localizable label for the status.\n    level  InstanceViewStatusStatusLevel     Level: The level code.\n    message  string    Message: The detailed status message, including for alerts and error messages.\n    time  string    Time: The time of the status.\n    KeyVaultKeyReference   (Appears on:DiskEncryptionSettings)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/KeyVaultKeyReference\n    Field Description      keyUrl  string    KeyUrl: The URL referencing a key encryption key in Key Vault.\n    sourceVault  SubResource         KeyVaultKeyReferenceARM   (Appears on:DiskEncryptionSettingsARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/KeyVaultKeyReference\n    Field Description      keyUrl  string    KeyUrl: The URL referencing a key encryption key in Key Vault.\n    sourceVault  SubResourceARM         KeyVaultKeyReference_Status   (Appears on:DiskEncryptionSettings_Status)      Field Description      keyUrl  string    KeyUrl: The URL referencing a key encryption key in Key Vault.\n    sourceVault  SubResource_Status     SourceVault: The relative URL of the Key Vault containing the key.\n    KeyVaultKeyReference_StatusARM   (Appears on:DiskEncryptionSettings_StatusARM)      Field Description      keyUrl  string    KeyUrl: The URL referencing a key encryption key in Key Vault.\n    sourceVault  SubResource_StatusARM     SourceVault: The relative URL of the Key Vault containing the key.\n    KeyVaultSecretReference   (Appears on:DiskEncryptionSettings)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/KeyVaultSecretReference\n    Field Description      secretUrl  string    SecretUrl: The URL referencing a secret in a Key Vault.\n    sourceVault  SubResource         KeyVaultSecretReferenceARM   (Appears on:DiskEncryptionSettingsARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/KeyVaultSecretReference\n    Field Description      secretUrl  string    SecretUrl: The URL referencing a secret in a Key Vault.\n    sourceVault  SubResourceARM         KeyVaultSecretReference_Status   (Appears on:DiskEncryptionSettings_Status)      Field Description      secretUrl  string    SecretUrl: The URL referencing a secret in a Key Vault.\n    sourceVault  SubResource_Status     SourceVault: The relative URL of the Key Vault containing the secret.\n    KeyVaultSecretReference_StatusARM   (Appears on:DiskEncryptionSettings_StatusARM)      Field Description      secretUrl  string    SecretUrl: The URL referencing a secret in a Key Vault.\n    sourceVault  SubResource_StatusARM     SourceVault: The relative URL of the Key Vault containing the secret.\n    LastPatchInstallationSummaryStatusStatus (string alias)  (Appears on:LastPatchInstallationSummary_Status, LastPatchInstallationSummary_StatusARM)      Value Description   \u0026#34;CompletedWithWarnings\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    LastPatchInstallationSummary_Status   (Appears on:VirtualMachinePatchStatus_Status)      Field Description      error  ApiError_Status     Error: The errors that were encountered during execution of the operation. The details array contains the list of them.\n    excludedPatchCount  int    ExcludedPatchCount: The number of all available patches but excluded explicitly by a customer-specified exclusion list match.\n    failedPatchCount  int    FailedPatchCount: The count of patches that failed installation.\n    installationActivityId  string    InstallationActivityId: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n    installedPatchCount  int    InstalledPatchCount: The count of patches that successfully installed.\n    lastModifiedTime  string    LastModifiedTime: The UTC timestamp when the operation began.\n    maintenanceWindowExceeded  bool    MaintenanceWindowExceeded: Describes whether the operation ran out of time before it completed all its intended actions\n    notSelectedPatchCount  int    NotSelectedPatchCount: The number of all available patches but not going to be installed because it didn\u0026rsquo;t match a classification or inclusion list entry.\n    pendingPatchCount  int    PendingPatchCount: The number of all available patches expected to be installed over the course of the patch installation operation.\n    startTime  string    StartTime: The UTC timestamp when the operation began.\n    status  LastPatchInstallationSummaryStatusStatus     Status: The overall success or failure status of the operation. It remains \u0026ldquo;InProgress\u0026rdquo; until the operation completes. At that point it will become \u0026ldquo;Unknown\u0026rdquo;, \u0026ldquo;Failed\u0026rdquo;, \u0026ldquo;Succeeded\u0026rdquo;, or \u0026ldquo;CompletedWithWarnings.\u0026rdquo;\n    LastPatchInstallationSummary_StatusARM   (Appears on:VirtualMachinePatchStatus_StatusARM)      Field Description      error  ApiError_StatusARM     Error: The errors that were encountered during execution of the operation. The details array contains the list of them.\n    excludedPatchCount  int    ExcludedPatchCount: The number of all available patches but excluded explicitly by a customer-specified exclusion list match.\n    failedPatchCount  int    FailedPatchCount: The count of patches that failed installation.\n    installationActivityId  string    InstallationActivityId: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n    installedPatchCount  int    InstalledPatchCount: The count of patches that successfully installed.\n    lastModifiedTime  string    LastModifiedTime: The UTC timestamp when the operation began.\n    maintenanceWindowExceeded  bool    MaintenanceWindowExceeded: Describes whether the operation ran out of time before it completed all its intended actions\n    notSelectedPatchCount  int    NotSelectedPatchCount: The number of all available patches but not going to be installed because it didn\u0026rsquo;t match a classification or inclusion list entry.\n    pendingPatchCount  int    PendingPatchCount: The number of all available patches expected to be installed over the course of the patch installation operation.\n    startTime  string    StartTime: The UTC timestamp when the operation began.\n    status  LastPatchInstallationSummaryStatusStatus     Status: The overall success or failure status of the operation. It remains \u0026ldquo;InProgress\u0026rdquo; until the operation completes. At that point it will become \u0026ldquo;Unknown\u0026rdquo;, \u0026ldquo;Failed\u0026rdquo;, \u0026ldquo;Succeeded\u0026rdquo;, or \u0026ldquo;CompletedWithWarnings.\u0026rdquo;\n    LinuxConfiguration   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/LinuxConfiguration\n    Field Description      disablePasswordAuthentication  bool    DisablePasswordAuthentication: Specifies whether password authentication should be disabled.\n    patchSettings  LinuxPatchSettings     PatchSettings: Specifies settings related to VM Guest Patching on Linux.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    ssh  SshConfiguration     Ssh: SSH configuration for Linux based VMs running on Azure\n    LinuxConfigurationARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/LinuxConfiguration\n    Field Description      disablePasswordAuthentication  bool    DisablePasswordAuthentication: Specifies whether password authentication should be disabled.\n    patchSettings  LinuxPatchSettingsARM     PatchSettings: Specifies settings related to VM Guest Patching on Linux.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    ssh  SshConfigurationARM     Ssh: SSH configuration for Linux based VMs running on Azure\n    LinuxConfiguration_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)      Field Description      disablePasswordAuthentication  bool    DisablePasswordAuthentication: Specifies whether password authentication should be disabled.\n    patchSettings  LinuxPatchSettings_Status     PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Linux.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    ssh  SshConfiguration_Status     Ssh: Specifies the ssh key configuration for a Linux OS.\n    LinuxConfiguration_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)      Field Description      disablePasswordAuthentication  bool    DisablePasswordAuthentication: Specifies whether password authentication should be disabled.\n    patchSettings  LinuxPatchSettings_StatusARM     PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Linux.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    ssh  SshConfiguration_StatusARM     Ssh: Specifies the ssh key configuration for a Linux OS.\n    LinuxPatchSettings   (Appears on:LinuxConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/LinuxPatchSettings\n    Field Description      patchMode  LinuxPatchSettingsPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: ImageDefault - The virtual machine\u0026rsquo;s default patching configuration is used. AutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true.\n    LinuxPatchSettingsARM   (Appears on:LinuxConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/LinuxPatchSettings\n    Field Description      patchMode  LinuxPatchSettingsPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: ImageDefault - The virtual machine\u0026rsquo;s default patching configuration is used. AutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true.\n    LinuxPatchSettingsPatchMode (string alias)  (Appears on:LinuxPatchSettings, LinuxPatchSettingsARM)      Value Description   \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;ImageDefault\u0026#34;\n    LinuxPatchSettingsStatusPatchMode (string alias)  (Appears on:LinuxPatchSettings_Status, LinuxPatchSettings_StatusARM)      Value Description   \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;ImageDefault\u0026#34;\n    LinuxPatchSettings_Status   (Appears on:LinuxConfiguration_Status)      Field Description      patchMode  LinuxPatchSettingsStatusPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: ImageDefault - The virtual machine\u0026rsquo;s default patching configuration is used. AutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true\n    LinuxPatchSettings_StatusARM   (Appears on:LinuxConfiguration_StatusARM)      Field Description      patchMode  LinuxPatchSettingsStatusPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: ImageDefault - The virtual machine\u0026rsquo;s default patching configuration is used. AutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true\n    MaintenanceRedeployStatusStatusLastOperationResultCode (string alias)  (Appears on:MaintenanceRedeployStatus_Status, MaintenanceRedeployStatus_StatusARM)      Value Description   \u0026#34;MaintenanceAborted\u0026#34;\n  \u0026#34;MaintenanceCompleted\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;RetryLater\u0026#34;\n    MaintenanceRedeployStatus_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      isCustomerInitiatedMaintenanceAllowed  bool    IsCustomerInitiatedMaintenanceAllowed: True, if customer is allowed to perform Maintenance.\n    lastOperationMessage  string    LastOperationMessage: Message returned for the last Maintenance Operation.\n    lastOperationResultCode  MaintenanceRedeployStatusStatusLastOperationResultCode     LastOperationResultCode: The Last Maintenance Operation Result Code.\n    maintenanceWindowEndTime  string    MaintenanceWindowEndTime: End Time for the Maintenance Window.\n    maintenanceWindowStartTime  string    MaintenanceWindowStartTime: Start Time for the Maintenance Window.\n    preMaintenanceWindowEndTime  string    PreMaintenanceWindowEndTime: End Time for the Pre Maintenance Window.\n    preMaintenanceWindowStartTime  string    PreMaintenanceWindowStartTime: Start Time for the Pre Maintenance Window.\n    MaintenanceRedeployStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      isCustomerInitiatedMaintenanceAllowed  bool    IsCustomerInitiatedMaintenanceAllowed: True, if customer is allowed to perform Maintenance.\n    lastOperationMessage  string    LastOperationMessage: Message returned for the last Maintenance Operation.\n    lastOperationResultCode  MaintenanceRedeployStatusStatusLastOperationResultCode     LastOperationResultCode: The Last Maintenance Operation Result Code.\n    maintenanceWindowEndTime  string    MaintenanceWindowEndTime: End Time for the Maintenance Window.\n    maintenanceWindowStartTime  string    MaintenanceWindowStartTime: Start Time for the Maintenance Window.\n    preMaintenanceWindowEndTime  string    PreMaintenanceWindowEndTime: End Time for the Pre Maintenance Window.\n    preMaintenanceWindowStartTime  string    PreMaintenanceWindowStartTime: Start Time for the Pre Maintenance Window.\n    ManagedDiskParameters   (Appears on:DataDisk, OSDisk)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ManagedDiskParameters\n    Field Description      diskEncryptionSet  DiskEncryptionSetParameters     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    reference  genruntime.ResourceReference     Reference: Resource Id\n    storageAccountType  ManagedDiskParametersStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ManagedDiskParametersARM   (Appears on:DataDiskARM, OSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ManagedDiskParameters\n    Field Description      diskEncryptionSet  DiskEncryptionSetParametersARM     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    id  string        storageAccountType  ManagedDiskParametersStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ManagedDiskParametersStorageAccountType (string alias)  (Appears on:ManagedDiskParameters, ManagedDiskParametersARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ManagedDiskParameters_Status   (Appears on:DataDisk_Status, OSDisk_Status)      Field Description      diskEncryptionSet  SubResource_Status     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.\n    id  string    Id: Resource Id\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ManagedDiskParameters_StatusARM   (Appears on:DataDisk_StatusARM, OSDisk_StatusARM)      Field Description      diskEncryptionSet  SubResource_StatusARM     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.\n    id  string    Id: Resource Id\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    NetworkInterfaceReferencePropertiesARM   (Appears on:VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/NetworkInterfaceReferenceProperties\n    Field Description      primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    NetworkInterfaceReferenceProperties_StatusARM   (Appears on:NetworkInterfaceReference_StatusARM)      Field Description      primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    NetworkInterfaceReference_Status   (Appears on:NetworkProfile_Status)      Field Description      id  string    Id: Resource Id\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    NetworkInterfaceReference_StatusARM   (Appears on:NetworkProfile_StatusARM)      Field Description      id  string    Id: Resource Id\n    properties  NetworkInterfaceReferenceProperties_StatusARM         NetworkProfile_Status   (Appears on:VirtualMachine_Status)      Field Description      networkInterfaces  []NetworkInterfaceReference_Status     NetworkInterfaces: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.\n    NetworkProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)      Field Description      networkInterfaces  []NetworkInterfaceReference_StatusARM     NetworkInterfaces: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.\n    OSDisk   (Appears on:StorageProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/OSDisk\n    Field Description      caching  OSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  OSDiskCreateOption     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings     DiffDiskSettings: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. NOTE: The ephemeral disk settings can only be specified for managed disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    encryptionSettings  DiskEncryptionSettings     EncryptionSettings: Describes a Encryption Settings for a Disk\n    image  VirtualHardDisk     Image: Describes the uri of a disk.\n    managedDisk  ManagedDiskParameters     ManagedDisk: The parameters of a managed disk.\n    name  string    Name: The disk name.\n    osType  OSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux.\n    vhd  VirtualHardDisk     Vhd: Describes the uri of a disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    OSDiskARM   (Appears on:StorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/OSDisk\n    Field Description      caching  OSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  OSDiskCreateOption     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettingsARM     DiffDiskSettings: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. NOTE: The ephemeral disk settings can only be specified for managed disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    encryptionSettings  DiskEncryptionSettingsARM     EncryptionSettings: Describes a Encryption Settings for a Disk\n    image  VirtualHardDiskARM     Image: Describes the uri of a disk.\n    managedDisk  ManagedDiskParametersARM     ManagedDisk: The parameters of a managed disk.\n    name  string    Name: The disk name.\n    osType  OSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux.\n    vhd  VirtualHardDiskARM     Vhd: Describes the uri of a disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    OSDiskCaching (string alias)  (Appears on:OSDisk, OSDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    OSDiskCreateOption (string alias)  (Appears on:OSDisk, OSDiskARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    OSDiskOsType (string alias)  (Appears on:OSDisk, OSDiskARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    OSDiskStatusOsType (string alias)  (Appears on:OSDisk_Status, OSDisk_StatusARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    OSDisk_Status   (Appears on:StorageProfile_Status)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings_Status     DiffDiskSettings: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    encryptionSettings  DiskEncryptionSettings_Status     EncryptionSettings: Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15\n    image  VirtualHardDisk_Status     Image: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.\n    managedDisk  ManagedDiskParameters_Status     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    osType  OSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux\n    vhd  VirtualHardDisk_Status     Vhd: The virtual hard disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    OSDisk_StatusARM   (Appears on:StorageProfile_StatusARM)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machine should be created. Possible values are: Attach \\u2013 This value is used when you are using a specialized disk to create the virtual machine. FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings_StatusARM     DiffDiskSettings: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    encryptionSettings  DiskEncryptionSettings_StatusARM     EncryptionSettings: Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15\n    image  VirtualHardDisk_StatusARM     Image: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.\n    managedDisk  ManagedDiskParameters_StatusARM     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    osType  OSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux\n    vhd  VirtualHardDisk_StatusARM     Vhd: The virtual hard disk.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    OSProfile   (Appears on:VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/OSProfile\n    Field Description      adminPassword  genruntime.SecretReference     AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. This property cannot be updated after the VM is created. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    allowExtensionOperations  bool    AllowExtensionOperations: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.\n    computerName  string    ComputerName: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. Max-length (Windows): 15 characters Max-length (Linux): 64 characters. For naming conventions and restrictions see Azure infrastructure services implementation guidelines.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. Note: Do not pass any secrets or passwords in customData property This property cannot be updated after the VM is created. customData is passed to the VM to be saved as a file, for more information see Custom Data on Azure VMs For using cloud-init for your Linux VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    requireGuestProvisionSignal  bool    RequireGuestProvisionSignal: Specifies whether the guest provision signal is required to infer provision success of the virtual machine. Note: This property is for private testing only, and all customers must not set the property to false.\n    secrets  []VaultSecretGroup     Secrets: Specifies set of certificates that should be installed onto the virtual machine.\n    windowsConfiguration  WindowsConfiguration     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    OSProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/OSProfile\n    Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. This property cannot be updated after the VM is created. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    allowExtensionOperations  bool    AllowExtensionOperations: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.\n    computerName  string    ComputerName: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. Max-length (Windows): 15 characters Max-length (Linux): 64 characters. For naming conventions and restrictions see Azure infrastructure services implementation guidelines.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. Note: Do not pass any secrets or passwords in customData property This property cannot be updated after the VM is created. customData is passed to the VM to be saved as a file, for more information see Custom Data on Azure VMs For using cloud-init for your Linux VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfigurationARM     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    requireGuestProvisionSignal  bool    RequireGuestProvisionSignal: Specifies whether the guest provision signal is required to infer provision success of the virtual machine. Note: This property is for private testing only, and all customers must not set the property to false.\n    secrets  []VaultSecretGroupARM     Secrets: Specifies set of certificates that should be installed onto the virtual machine.\n    windowsConfiguration  WindowsConfigurationARM     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    OSProfile_Status   (Appears on:VirtualMachine_Status)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. This property cannot be updated after the VM is created. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    allowExtensionOperations  bool    AllowExtensionOperations: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.\n    computerName  string    ComputerName: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. Max-length (Windows): 15 characters Max-length (Linux): 64 characters. For naming conventions and restrictions see Azure infrastructure services implementation guidelines.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. Note: Do not pass any secrets or passwords in customData property This property cannot be updated after the VM is created. customData is passed to the VM to be saved as a file, for more information see Custom Data on Azure VMs For using cloud-init for your Linux VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration_Status     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    requireGuestProvisionSignal  bool    RequireGuestProvisionSignal: Specifies whether the guest provision signal is required to infer provision success of the virtual machine. Note: This property is for private testing only, and all customers must not set the property to false.\n    secrets  []VaultSecretGroup_Status     Secrets: Specifies set of certificates that should be installed onto the virtual machine.\n    windowsConfiguration  WindowsConfiguration_Status     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    OSProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. This property cannot be updated after the VM is created. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    allowExtensionOperations  bool    AllowExtensionOperations: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.\n    computerName  string    ComputerName: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. Max-length (Windows): 15 characters Max-length (Linux): 64 characters. For naming conventions and restrictions see Azure infrastructure services implementation guidelines.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. Note: Do not pass any secrets or passwords in customData property This property cannot be updated after the VM is created. customData is passed to the VM to be saved as a file, for more information see Custom Data on Azure VMs For using cloud-init for your Linux VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration_StatusARM     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    requireGuestProvisionSignal  bool    RequireGuestProvisionSignal: Specifies whether the guest provision signal is required to infer provision success of the virtual machine. Note: This property is for private testing only, and all customers must not set the property to false.\n    secrets  []VaultSecretGroup_StatusARM     Secrets: Specifies set of certificates that should be installed onto the virtual machine.\n    windowsConfiguration  WindowsConfiguration_StatusARM     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    OrchestrationMode_Status (string alias)  (Appears on:VirtualMachineScaleSetProperties_StatusARM, VirtualMachineScaleSet_Status)      Value Description   \u0026#34;Flexible\u0026#34;\n  \u0026#34;Uniform\u0026#34;\n    PatchSettings   (Appears on:WindowsConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/PatchSettings\n    Field Description      enableHotpatching  bool    EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the \u0026lsquo;provisionVMAgent\u0026rsquo; must be set to true and \u0026lsquo;patchMode\u0026rsquo; must be set to \u0026lsquo;AutomaticByPlatform\u0026rsquo;.\n    patchMode  PatchSettingsPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: Manual - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false AutomaticByOS - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. AutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true.\n    PatchSettingsARM   (Appears on:WindowsConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/PatchSettings\n    Field Description      enableHotpatching  bool    EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the \u0026lsquo;provisionVMAgent\u0026rsquo; must be set to true and \u0026lsquo;patchMode\u0026rsquo; must be set to \u0026lsquo;AutomaticByPlatform\u0026rsquo;.\n    patchMode  PatchSettingsPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: Manual - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false AutomaticByOS - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. AutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true.\n    PatchSettingsPatchMode (string alias)  (Appears on:PatchSettings, PatchSettingsARM)      Value Description   \u0026#34;AutomaticByOS\u0026#34;\n  \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;Manual\u0026#34;\n    PatchSettingsStatusPatchMode (string alias)  (Appears on:PatchSettings_Status, PatchSettings_StatusARM)      Value Description   \u0026#34;AutomaticByOS\u0026#34;\n  \u0026#34;AutomaticByPlatform\u0026#34;\n  \u0026#34;Manual\u0026#34;\n    PatchSettings_Status   (Appears on:WindowsConfiguration_Status)      Field Description      enableHotpatching  bool    EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the \u0026lsquo;provisionVMAgent\u0026rsquo; must be set to true and \u0026lsquo;patchMode\u0026rsquo; must be set to \u0026lsquo;AutomaticByPlatform\u0026rsquo;.\n    patchMode  PatchSettingsStatusPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: Manual - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false AutomaticByOS - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. AutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true\n    PatchSettings_StatusARM   (Appears on:WindowsConfiguration_StatusARM)      Field Description      enableHotpatching  bool    EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the \u0026lsquo;provisionVMAgent\u0026rsquo; must be set to true and \u0026lsquo;patchMode\u0026rsquo; must be set to \u0026lsquo;AutomaticByPlatform\u0026rsquo;.\n    patchMode  PatchSettingsStatusPatchMode     PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine. Possible values are: Manual - You control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false AutomaticByOS - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. AutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true\n    Plan   (Appears on:VirtualMachineScaleSets_Spec, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/Plan\n    Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The promotion code.\n    publisher  string    Publisher: The publisher ID.\n    PlanARM   (Appears on:VirtualMachineScaleSets_SpecARM, VirtualMachines_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/Plan\n    Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The promotion code.\n    publisher  string    Publisher: The publisher ID.\n    Plan_Status   (Appears on:VirtualMachineScaleSet_Status, VirtualMachine_Status)      Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The promotion code.\n    publisher  string    Publisher: The publisher ID.\n    Plan_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM, VirtualMachine_StatusARM)      Field Description      name  string    Name: The plan ID.\n    product  string    Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.\n    promotionCode  string    PromotionCode: The promotion code.\n    publisher  string    Publisher: The publisher ID.\n    Priority_Status (string alias)  (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_Status, VirtualMachineScaleSetVMProfile_StatusARM, VirtualMachine_Status)      Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    RollingUpgradePolicy   (Appears on:UpgradePolicy)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/RollingUpgradePolicy\n    Field Description      enableCrossZoneUpgrade  bool    EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.\n    maxBatchInstancePercent  int    MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.\n    maxUnhealthyInstancePercent  int    MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.\n    maxUnhealthyUpgradedInstancePercent  int    MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.\n    pauseTimeBetweenBatches  string    PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).\n    prioritizeUnhealthyInstances  bool    PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.\n    RollingUpgradePolicyARM   (Appears on:UpgradePolicyARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/RollingUpgradePolicy\n    Field Description      enableCrossZoneUpgrade  bool    EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.\n    maxBatchInstancePercent  int    MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.\n    maxUnhealthyInstancePercent  int    MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.\n    maxUnhealthyUpgradedInstancePercent  int    MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.\n    pauseTimeBetweenBatches  string    PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).\n    prioritizeUnhealthyInstances  bool    PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.\n    RollingUpgradePolicy_Status   (Appears on:UpgradePolicy_Status)      Field Description      enableCrossZoneUpgrade  bool    EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.\n    maxBatchInstancePercent  int    MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.\n    maxUnhealthyInstancePercent  int    MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.\n    maxUnhealthyUpgradedInstancePercent  int    MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.\n    pauseTimeBetweenBatches  string    PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).\n    prioritizeUnhealthyInstances  bool    PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.\n    RollingUpgradePolicy_StatusARM   (Appears on:UpgradePolicy_StatusARM)      Field Description      enableCrossZoneUpgrade  bool    EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.\n    maxBatchInstancePercent  int    MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.\n    maxUnhealthyInstancePercent  int    MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.\n    maxUnhealthyUpgradedInstancePercent  int    MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.\n    pauseTimeBetweenBatches  string    PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).\n    prioritizeUnhealthyInstances  bool    PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.\n    ScaleInPolicy   (Appears on:VirtualMachineScaleSets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ScaleInPolicy\n    Field Description      rules  []ScaleInPolicyRules     Rules: The rules to be followed when scaling-in a virtual machine scale set. Possible values are: Default When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. OldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. NewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.\n    ScaleInPolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ScaleInPolicy\n    Field Description      rules  []ScaleInPolicyRules     Rules: The rules to be followed when scaling-in a virtual machine scale set. Possible values are: Default When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. OldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. NewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.\n    ScaleInPolicyRules (string alias)  (Appears on:ScaleInPolicy, ScaleInPolicyARM)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;NewestVM\u0026#34;\n  \u0026#34;OldestVM\u0026#34;\n    ScaleInPolicyStatusRules (string alias)  (Appears on:ScaleInPolicy_Status, ScaleInPolicy_StatusARM)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;NewestVM\u0026#34;\n  \u0026#34;OldestVM\u0026#34;\n    ScaleInPolicy_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      rules  []ScaleInPolicyStatusRules     Rules: The rules to be followed when scaling-in a virtual machine scale set. Possible values are: Default When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. OldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. NewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.\n    ScaleInPolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)      Field Description      rules  []ScaleInPolicyStatusRules     Rules: The rules to be followed when scaling-in a virtual machine scale set. Possible values are: Default When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. OldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. NewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.\n    ScheduledEventsProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ScheduledEventsProfile\n    Field Description      terminateNotificationProfile  TerminateNotificationProfile         ScheduledEventsProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/ScheduledEventsProfile\n    Field Description      terminateNotificationProfile  TerminateNotificationProfileARM         ScheduledEventsProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)      Field Description      terminateNotificationProfile  TerminateNotificationProfile_Status     TerminateNotificationProfile: Specifies Terminate Scheduled Event related configurations.\n    ScheduledEventsProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      terminateNotificationProfile  TerminateNotificationProfile_StatusARM     TerminateNotificationProfile: Specifies Terminate Scheduled Event related configurations.\n    SecurityProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SecurityProfile\n    Field Description      encryptionAtHost  bool    EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.\n    securityType  SecurityProfileSecurityType     SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.\n    uefiSettings  UefiSettings     UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01\n    SecurityProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM, VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SecurityProfile\n    Field Description      encryptionAtHost  bool    EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.\n    securityType  SecurityProfileSecurityType     SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.\n    uefiSettings  UefiSettingsARM     UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01\n    SecurityProfileSecurityType (string alias)  (Appears on:SecurityProfile, SecurityProfileARM)      Value Description   \u0026#34;TrustedLaunch\u0026#34;\n    SecurityProfileStatusSecurityType (string alias)  (Appears on:SecurityProfile_Status, SecurityProfile_StatusARM)      Value Description   \u0026#34;TrustedLaunch\u0026#34;\n    SecurityProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status, VirtualMachine_Status)      Field Description      encryptionAtHost  bool    EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.\n    securityType  SecurityProfileStatusSecurityType     SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.\n    uefiSettings  UefiSettings_Status     UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01\n    SecurityProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM, VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      encryptionAtHost  bool    EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.\n    securityType  SecurityProfileStatusSecurityType     SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.\n    uefiSettings  UefiSettings_StatusARM     UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01\n    Sku   (Appears on:VirtualMachineScaleSets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: Specifies the number of virtual machines in the scale set.\n    name  string    Name: The sku name.\n    tier  string    Tier: Specifies the tier of virtual machines in a scale set. Possible Values: Standard Basic\n    SkuARM   (Appears on:VirtualMachineScaleSets_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: Specifies the number of virtual machines in the scale set.\n    name  string    Name: The sku name.\n    tier  string    Tier: Specifies the tier of virtual machines in a scale set. Possible Values: Standard Basic\n    Sku_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      capacity  int    Capacity: Specifies the number of virtual machines in the scale set.\n    name  string    Name: The sku name.\n    tier  string    Tier: Specifies the tier of virtual machines in a scale set. Possible Values: Standard Basic\n    Sku_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)      Field Description      capacity  int    Capacity: Specifies the number of virtual machines in the scale set.\n    name  string    Name: The sku name.\n    tier  string    Tier: Specifies the tier of virtual machines in a scale set. Possible Values: Standard Basic\n    SshConfiguration   (Appears on:LinuxConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SshConfiguration\n    Field Description      publicKeys  []SshPublicKey     PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.\n    SshConfigurationARM   (Appears on:LinuxConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SshConfiguration\n    Field Description      publicKeys  []SshPublicKeyARM     PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.\n    SshConfiguration_Status   (Appears on:LinuxConfiguration_Status)      Field Description      publicKeys  []SshPublicKey_Status     PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.\n    SshConfiguration_StatusARM   (Appears on:LinuxConfiguration_StatusARM)      Field Description      publicKeys  []SshPublicKey_StatusARM     PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.\n    SshPublicKey   (Appears on:SshConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SshPublicKey\n    Field Description      keyData  string    KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see Create SSH keys on Linux and Mac for Linux VMs in Azure.\n    path  string    Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys\n    SshPublicKeyARM   (Appears on:SshConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SshPublicKey\n    Field Description      keyData  string    KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see Create SSH keys on Linux and Mac for Linux VMs in Azure.\n    path  string    Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys\n    SshPublicKey_Status   (Appears on:SshConfiguration_Status)      Field Description      keyData  string    KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see Create SSH keys on Linux and Mac for Linux VMs in Azure.\n    path  string    Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys\n    SshPublicKey_StatusARM   (Appears on:SshConfiguration_StatusARM)      Field Description      keyData  string    KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see Create SSH keys on Linux and Mac for Linux VMs in Azure.\n    path  string    Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys\n    StorageAccountType_Status (string alias)  (Appears on:ManagedDiskParameters_Status, ManagedDiskParameters_StatusARM, VirtualMachineScaleSetManagedDiskParameters_Status, VirtualMachineScaleSetManagedDiskParameters_StatusARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    StorageProfile   (Appears on:VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/StorageProfile\n    Field Description      dataDisks  []DataDisk     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.\n    osDisk  OSDisk     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    StorageProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/StorageProfile\n    Field Description      dataDisks  []DataDiskARM     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReferenceARM     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.\n    osDisk  OSDiskARM     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    StorageProfile_Status   (Appears on:VirtualMachine_Status)      Field Description      dataDisks  []DataDisk_Status     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference_Status     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.\n    osDisk  OSDisk_Status     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    StorageProfile_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)      Field Description      dataDisks  []DataDisk_StatusARM     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference_StatusARM     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.\n    osDisk  OSDisk_StatusARM     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    SubResource   (Appears on:KeyVaultKeyReference, KeyVaultSecretReference, VaultSecretGroup, VirtualMachineScaleSets_Spec, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration, VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SubResource\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource Id\n    SubResourceARM   (Appears on:KeyVaultKeyReferenceARM, KeyVaultSecretReferenceARM, VaultSecretGroupARM, VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM, VirtualMachineScaleSets_Spec_PropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM, VirtualMachines_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/SubResource\n    Field Description      id  string        SubResource_Status   (Appears on:KeyVaultKeyReference_Status, KeyVaultSecretReference_Status, ManagedDiskParameters_Status, VaultSecretGroup_Status, VirtualMachineScaleSetIPConfiguration_Status, VirtualMachineScaleSetManagedDiskParameters_Status, VirtualMachineScaleSetNetworkConfiguration_Status, VirtualMachineScaleSetPublicIPAddressConfiguration_Status, VirtualMachineScaleSet_Status, VirtualMachine_Status)      Field Description      id  string    Id: Resource Id\n    SubResource_StatusARM   (Appears on:KeyVaultKeyReference_StatusARM, KeyVaultSecretReference_StatusARM, ManagedDiskParameters_StatusARM, VaultSecretGroup_StatusARM, VirtualMachineProperties_StatusARM, VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetManagedDiskParameters_StatusARM, VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM, VirtualMachineScaleSetProperties_StatusARM, VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)      Field Description      id  string    Id: Resource Id\n    TerminateNotificationProfile   (Appears on:ScheduledEventsProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/TerminateNotificationProfile\n    Field Description      enable  bool    Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.\n    notBeforeTimeout  string    NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)\n    TerminateNotificationProfileARM   (Appears on:ScheduledEventsProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/TerminateNotificationProfile\n    Field Description      enable  bool    Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.\n    notBeforeTimeout  string    NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)\n    TerminateNotificationProfile_Status   (Appears on:ScheduledEventsProfile_Status)      Field Description      enable  bool    Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.\n    notBeforeTimeout  string    NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)\n    TerminateNotificationProfile_StatusARM   (Appears on:ScheduledEventsProfile_StatusARM)      Field Description      enable  bool    Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.\n    notBeforeTimeout  string    NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)\n    UefiSettings   (Appears on:SecurityProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/UefiSettings\n    Field Description      secureBootEnabled  bool    SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    vTpmEnabled  bool    VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    UefiSettingsARM   (Appears on:SecurityProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/UefiSettings\n    Field Description      secureBootEnabled  bool    SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    vTpmEnabled  bool    VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    UefiSettings_Status   (Appears on:SecurityProfile_Status)      Field Description      secureBootEnabled  bool    SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    vTpmEnabled  bool    VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    UefiSettings_StatusARM   (Appears on:SecurityProfile_StatusARM)      Field Description      secureBootEnabled  bool    SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    vTpmEnabled  bool    VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01\n    UpgradePolicy   (Appears on:VirtualMachineScaleSets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/UpgradePolicy\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy     AutomaticOSUpgradePolicy: The configuration parameters used for performing automatic OS upgrade.\n    mode  UpgradePolicyMode     Mode: Specifies the mode of an upgrade to virtual machines in the scale set. Possible values are: Manual - You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action. Automatic - All virtual machines in the scale set are automatically updated at the same time.\n    rollingUpgradePolicy  RollingUpgradePolicy     RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.\n    UpgradePolicyARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/UpgradePolicy\n    Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicyARM     AutomaticOSUpgradePolicy: The configuration parameters used for performing automatic OS upgrade.\n    mode  UpgradePolicyMode     Mode: Specifies the mode of an upgrade to virtual machines in the scale set. Possible values are: Manual - You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action. Automatic - All virtual machines in the scale set are automatically updated at the same time.\n    rollingUpgradePolicy  RollingUpgradePolicyARM     RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.\n    UpgradePolicyMode (string alias)  (Appears on:UpgradePolicy, UpgradePolicyARM)      Value Description   \u0026#34;Automatic\u0026#34;\n  \u0026#34;Manual\u0026#34;\n  \u0026#34;Rolling\u0026#34;\n    UpgradePolicyStatusMode (string alias)  (Appears on:UpgradePolicy_Status, UpgradePolicy_StatusARM)      Value Description   \u0026#34;Automatic\u0026#34;\n  \u0026#34;Manual\u0026#34;\n  \u0026#34;Rolling\u0026#34;\n    UpgradePolicy_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy_Status     AutomaticOSUpgradePolicy: Configuration parameters used for performing automatic OS Upgrade.\n    mode  UpgradePolicyStatusMode     Mode: Specifies the mode of an upgrade to virtual machines in the scale set. Possible values are: Manual - You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action. Automatic - All virtual machines in the scale set are automatically updated at the same time.\n    rollingUpgradePolicy  RollingUpgradePolicy_Status     RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.\n    UpgradePolicy_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)      Field Description      automaticOSUpgradePolicy  AutomaticOSUpgradePolicy_StatusARM     AutomaticOSUpgradePolicy: Configuration parameters used for performing automatic OS Upgrade.\n    mode  UpgradePolicyStatusMode     Mode: Specifies the mode of an upgrade to virtual machines in the scale set. Possible values are: Manual - You control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action. Automatic - All virtual machines in the scale set are automatically updated at the same time.\n    rollingUpgradePolicy  RollingUpgradePolicy_StatusARM     RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.\n    VaultCertificate   (Appears on:VaultSecretGroup)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VaultCertificate\n    Field Description      certificateStore  string    CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.crt for the X509 certificate file and \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.prv for private key. Both of these files are .pem formatted.\n    certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    VaultCertificateARM   (Appears on:VaultSecretGroupARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VaultCertificate\n    Field Description      certificateStore  string    CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.crt for the X509 certificate file and \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.prv for private key. Both of these files are .pem formatted.\n    certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    VaultCertificate_Status   (Appears on:VaultSecretGroup_Status)      Field Description      certificateStore  string    CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.crt for the X509 certificate file and \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.prv for private key. Both of these files are .pem formatted.\n    certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    VaultCertificate_StatusARM   (Appears on:VaultSecretGroup_StatusARM)      Field Description      certificateStore  string    CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.crt for the X509 certificate file and \u0026amp;lt;UppercaseThumbprint\u0026amp;gt;.prv for private key. Both of these files are .pem formatted.\n    certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    VaultSecretGroup   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VaultSecretGroup\n    Field Description      sourceVault  SubResource         vaultCertificates  []VaultCertificate     VaultCertificates: The list of key vault references in SourceVault which contain certificates.\n    VaultSecretGroupARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VaultSecretGroup\n    Field Description      sourceVault  SubResourceARM         vaultCertificates  []VaultCertificateARM     VaultCertificates: The list of key vault references in SourceVault which contain certificates.\n    VaultSecretGroup_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)      Field Description      sourceVault  SubResource_Status     SourceVault: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.\n    vaultCertificates  []VaultCertificate_Status     VaultCertificates: The list of key vault references in SourceVault which contain certificates.\n    VaultSecretGroup_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)      Field Description      sourceVault  SubResource_StatusARM     SourceVault: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.\n    vaultCertificates  []VaultCertificate_StatusARM     VaultCertificates: The list of key vault references in SourceVault which contain certificates.\n    VirtualHardDisk   (Appears on:DataDisk, OSDisk, VirtualMachineScaleSetOSDisk)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualHardDisk\n    Field Description      uri  string    Uri: Specifies the virtual hard disk\u0026rsquo;s uri.\n    VirtualHardDiskARM   (Appears on:DataDiskARM, OSDiskARM, VirtualMachineScaleSetOSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualHardDisk\n    Field Description      uri  string    Uri: Specifies the virtual hard disk\u0026rsquo;s uri.\n    VirtualHardDisk_Status   (Appears on:DataDisk_Status, OSDisk_Status, VirtualMachineScaleSetOSDisk_Status)      Field Description      uri  string    Uri: Specifies the virtual hard disk\u0026rsquo;s uri.\n    VirtualHardDisk_StatusARM   (Appears on:DataDisk_StatusARM, OSDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)      Field Description      uri  string    Uri: Specifies the virtual hard disk\u0026rsquo;s uri.\n    VirtualMachine   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/resourceDefinitions/virtualMachines\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualMachines_Spec          additionalCapabilities  AdditionalCapabilities     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    availabilitySet  SubResource         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    billingProfile  BillingProfile     BillingProfile: Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    hardwareProfile  HardwareProfile     HardwareProfile: Specifies the hardware settings for the virtual machine.\n    host  SubResource         hostGroup  SubResource         identity  VirtualMachineIdentity     Identity: Identity for the virtual machine.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    location  string    Location: Location to deploy resource to\n    networkProfile  VirtualMachines_Spec_Properties_NetworkProfile     NetworkProfile: Specifies the network interfaces of the virtual machine.\n    osProfile  OSProfile     OsProfile: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the \u0026lsquo;virtualMachineScaleSet\u0026rsquo; property of this Virtual Machine is set.The Virtual Machine Scale Set that is referenced, must have \u0026lsquo;platformFaultDomainCount\u0026rsquo; \u0026amp;gt; 1.This property cannot be updated once the Virtual Machine is created.Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01\n    priority  VirtualMachinesSpecPropertiesPriority     Priority: Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01.\n    proximityPlacementGroup  SubResource         securityProfile  SecurityProfile     SecurityProfile: Specifies the Security profile settings for the virtual machine or virtual machine scale set.\n    storageProfile  StorageProfile     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    virtualMachineScaleSet  SubResource         zones  []string    Zones: The virtual machine zones.\n       status  VirtualMachine_Status         VirtualMachineAgentInstanceView_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      extensionHandlers  []VirtualMachineExtensionHandlerInstanceView_Status     ExtensionHandlers: The virtual machine extension handler instance view.\n    statuses  []InstanceViewStatus_Status     Statuses: The resource status information.\n    vmAgentVersion  string    VmAgentVersion: The VM Agent full version.\n    VirtualMachineAgentInstanceView_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      extensionHandlers  []VirtualMachineExtensionHandlerInstanceView_StatusARM     ExtensionHandlers: The virtual machine extension handler instance view.\n    statuses  []InstanceViewStatus_StatusARM     Statuses: The resource status information.\n    vmAgentVersion  string    VmAgentVersion: The VM Agent full version.\n    VirtualMachineExtensionHandlerInstanceView_Status   (Appears on:VirtualMachineAgentInstanceView_Status)      Field Description      status  InstanceViewStatus_Status     Status: The extension handler status.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtensionHandlerInstanceView_StatusARM   (Appears on:VirtualMachineAgentInstanceView_StatusARM)      Field Description      status  InstanceViewStatus_StatusARM     Status: The extension handler status.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtensionInstanceView_Status   (Appears on:VirtualMachineExtension_Status, VirtualMachineInstanceView_Status)      Field Description      name  string    Name: The virtual machine extension name.\n    statuses  []InstanceViewStatus_Status     Statuses: The resource status information.\n    substatuses  []InstanceViewStatus_Status     Substatuses: The resource status information.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtensionInstanceView_StatusARM   (Appears on:VirtualMachineExtensionProperties_StatusARM, VirtualMachineInstanceView_StatusARM)      Field Description      name  string    Name: The virtual machine extension name.\n    statuses  []InstanceViewStatus_StatusARM     Statuses: The resource status information.\n    substatuses  []InstanceViewStatus_StatusARM     Substatuses: The resource status information.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtensionProperties_StatusARM   (Appears on:VirtualMachineExtension_StatusARM)      Field Description      autoUpgradeMinorVersion  bool    AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.\n    enableAutomaticUpgrade  bool    EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n    forceUpdateTag  string    ForceUpdateTag: How the extension handler should be forced to update even if the extension configuration has not changed.\n    instanceView  VirtualMachineExtensionInstanceView_StatusARM     InstanceView: The virtual machine extension instance view.\n    protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     ProtectedSettings: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    publisher  string    Publisher: The name of the extension handler publisher.\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Json formatted public settings for the extension.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtension_Status   (Appears on:VirtualMachine_Status)      Field Description      autoUpgradeMinorVersion  bool    AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.\n    enableAutomaticUpgrade  bool    EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n    forceUpdateTag  string    ForceUpdateTag: How the extension handler should be forced to update even if the extension configuration has not changed.\n    id  string    Id: Resource Id\n    instanceView  VirtualMachineExtensionInstanceView_Status     InstanceView: The virtual machine extension instance view.\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    properties_type  string    PropertiesType: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     ProtectedSettings: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    publisher  string    Publisher: The name of the extension handler publisher.\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Json formatted public settings for the extension.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineExtension_StatusARM   (Appears on:VirtualMachine_StatusARM)      Field Description      id  string    Id: Resource Id\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    properties  VirtualMachineExtensionProperties_StatusARM         tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    VirtualMachineHealthStatus_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      status  InstanceViewStatus_Status     Status: The health status information for the VM.\n    VirtualMachineHealthStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      status  InstanceViewStatus_StatusARM     Status: The health status information for the VM.\n    VirtualMachineIdentity   (Appears on:VirtualMachines_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineIdentity\n    Field Description      type  VirtualMachineIdentityType     Type: The type of identity used for the virtual machine. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine.\n    userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineIdentityARM   (Appears on:VirtualMachines_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineIdentity\n    Field Description      type  VirtualMachineIdentityType     Type: The type of identity used for the virtual machine. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine.\n    userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineIdentityStatusType (string alias)  (Appears on:VirtualMachineIdentity_Status, VirtualMachineIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineIdentityType (string alias)  (Appears on:VirtualMachineIdentity, VirtualMachineIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineIdentity_Status   (Appears on:VirtualMachine_Status)      Field Description      principalId  string    PrincipalId: The principal id of virtual machine identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.\n    type  VirtualMachineIdentityStatusType     Type: The type of identity used for the virtual machine. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine.\n    userAssignedIdentities  map[string]./api/compute/v1beta20201201.VirtualMachineIdentity_Status_UserAssignedIdentities     UserAssignedIdentities: The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineIdentity_StatusARM   (Appears on:VirtualMachine_StatusARM)      Field Description      principalId  string    PrincipalId: The principal id of virtual machine identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.\n    type  VirtualMachineIdentityStatusType     Type: The type of identity used for the virtual machine. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine.\n    userAssignedIdentities  map[string]./api/compute/v1beta20201201.VirtualMachineIdentity_Status_UserAssignedIdentitiesARM     UserAssignedIdentities: The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineIdentity_Status_UserAssignedIdentities   (Appears on:VirtualMachineIdentity_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    VirtualMachineIdentity_Status_UserAssignedIdentitiesARM   (Appears on:VirtualMachineIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    VirtualMachineInstanceViewStatusHyperVGeneration (string alias)  (Appears on:VirtualMachineInstanceView_Status, VirtualMachineInstanceView_StatusARM)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    VirtualMachineInstanceView_Status   (Appears on:VirtualMachine_Status)      Field Description      assignedHost  string    AssignedHost: Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.\n    bootDiagnostics  BootDiagnosticsInstanceView_Status     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    computerName  string    ComputerName: The computer name assigned to the virtual machine.\n    disks  []DiskInstanceView_Status     Disks: The virtual machine disk information.\n    extensions  []VirtualMachineExtensionInstanceView_Status     Extensions: The extensions information.\n    hyperVGeneration  VirtualMachineInstanceViewStatusHyperVGeneration     HyperVGeneration: Specifies the HyperVGeneration Type associated with a resource\n    maintenanceRedeployStatus  MaintenanceRedeployStatus_Status     MaintenanceRedeployStatus: The Maintenance Operation status on the virtual machine.\n    osName  string    OsName: The Operating System running on the virtual machine.\n    osVersion  string    OsVersion: The version of Operating System running on the virtual machine.\n    patchStatus  VirtualMachinePatchStatus_Status     PatchStatus: [Preview Feature] The status of virtual machine patch operations.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the fault domain of the virtual machine.\n    platformUpdateDomain  int    PlatformUpdateDomain: Specifies the update domain of the virtual machine.\n    rdpThumbPrint  string    RdpThumbPrint: The Remote desktop certificate thumbprint.\n    statuses  []InstanceViewStatus_Status     Statuses: The resource status information.\n    vmAgent  VirtualMachineAgentInstanceView_Status     VmAgent: The VM Agent running on the virtual machine.\n    vmHealth  VirtualMachineHealthStatus_Status     VmHealth: The health status for the VM.\n    VirtualMachineInstanceView_StatusARM   (Appears on:VirtualMachineProperties_StatusARM)      Field Description      assignedHost  string    AssignedHost: Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.\n    bootDiagnostics  BootDiagnosticsInstanceView_StatusARM     BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.\n    computerName  string    ComputerName: The computer name assigned to the virtual machine.\n    disks  []DiskInstanceView_StatusARM     Disks: The virtual machine disk information.\n    extensions  []VirtualMachineExtensionInstanceView_StatusARM     Extensions: The extensions information.\n    hyperVGeneration  VirtualMachineInstanceViewStatusHyperVGeneration     HyperVGeneration: Specifies the HyperVGeneration Type associated with a resource\n    maintenanceRedeployStatus  MaintenanceRedeployStatus_StatusARM     MaintenanceRedeployStatus: The Maintenance Operation status on the virtual machine.\n    osName  string    OsName: The Operating System running on the virtual machine.\n    osVersion  string    OsVersion: The version of Operating System running on the virtual machine.\n    patchStatus  VirtualMachinePatchStatus_StatusARM     PatchStatus: [Preview Feature] The status of virtual machine patch operations.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the fault domain of the virtual machine.\n    platformUpdateDomain  int    PlatformUpdateDomain: Specifies the update domain of the virtual machine.\n    rdpThumbPrint  string    RdpThumbPrint: The Remote desktop certificate thumbprint.\n    statuses  []InstanceViewStatus_StatusARM     Statuses: The resource status information.\n    vmAgent  VirtualMachineAgentInstanceView_StatusARM     VmAgent: The VM Agent running on the virtual machine.\n    vmHealth  VirtualMachineHealthStatus_StatusARM     VmHealth: The health status for the VM.\n    VirtualMachinePatchStatus_Status   (Appears on:VirtualMachineInstanceView_Status)      Field Description      availablePatchSummary  AvailablePatchSummary_Status     AvailablePatchSummary: The available patch summary of the latest assessment operation for the virtual machine.\n    configurationStatuses  []InstanceViewStatus_Status     ConfigurationStatuses: The enablement status of the specified patchMode\n    lastPatchInstallationSummary  LastPatchInstallationSummary_Status     LastPatchInstallationSummary: The installation summary of the latest installation operation for the virtual machine.\n    VirtualMachinePatchStatus_StatusARM   (Appears on:VirtualMachineInstanceView_StatusARM)      Field Description      availablePatchSummary  AvailablePatchSummary_StatusARM     AvailablePatchSummary: The available patch summary of the latest assessment operation for the virtual machine.\n    configurationStatuses  []InstanceViewStatus_StatusARM     ConfigurationStatuses: The enablement status of the specified patchMode\n    lastPatchInstallationSummary  LastPatchInstallationSummary_StatusARM     LastPatchInstallationSummary: The installation summary of the latest installation operation for the virtual machine.\n    VirtualMachineProperties_StatusARM   (Appears on:VirtualMachine_StatusARM)      Field Description      additionalCapabilities  AdditionalCapabilities_StatusARM     AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the virtual machine.\n    availabilitySet  SubResource_StatusARM     AvailabilitySet: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see Manage the availability of virtual machines. For more information on Azure planned maintenance, see Planned maintenance for virtual machines in Azure Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.\n    billingProfile  BillingProfile_StatusARM     BillingProfile: Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile_StatusARM     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  EvictionPolicy_Status     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    hardwareProfile  HardwareProfile_StatusARM     HardwareProfile: Specifies the hardware settings for the virtual machine.\n    host  SubResource_StatusARM     Host: Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01.\n    hostGroup  SubResource_StatusARM     HostGroup: Specifies information about the dedicated host group that the virtual machine resides in. Minimum api-version: 2020-06-01. NOTE: User cannot specify both host and hostGroup properties.\n    instanceView  VirtualMachineInstanceView_StatusARM     InstanceView: The virtual machine instance view.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  NetworkProfile_StatusARM     NetworkProfile: Specifies the network interfaces of the virtual machine.\n    osProfile  OSProfile_StatusARM     OsProfile: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the \u0026lsquo;virtualMachineScaleSet\u0026rsquo; property of this Virtual Machine is set.The Virtual Machine Scale Set that is referenced, must have \u0026lsquo;platformFaultDomainCount\u0026rsquo; \u0026amp;gt; 1.This property cannot be updated once the Virtual Machine is created.Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01\n    priority  Priority_Status     Priority: Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    proximityPlacementGroup  SubResource_StatusARM     ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01.\n    securityProfile  SecurityProfile_StatusARM     SecurityProfile: Specifies the Security related profile settings for the virtual machine.\n    storageProfile  StorageProfile_StatusARM     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    virtualMachineScaleSet  SubResource_StatusARM     VirtualMachineScaleSet: Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01\n    vmId  string    VmId: Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.\n    VirtualMachineScaleSet   Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/resourceDefinitions/virtualMachineScaleSets\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualMachineScaleSets_Spec          additionalCapabilities  AdditionalCapabilities     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    automaticRepairsPolicy  AutomaticRepairsPolicy     AutomaticRepairsPolicy: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    doNotRunExtensionsOnOverprovisionedVMs  bool    DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hostGroup  SubResource         identity  VirtualMachineScaleSetIdentity     Identity: Identity for the virtual machine scale set.\n    location  string    Location: Location to deploy resource to\n    orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode     OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.\n    overprovision  bool    Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomainCount  int    PlatformFaultDomainCount: Fault Domain count for each placement group.\n    proximityPlacementGroup  SubResource         scaleInPolicy  ScaleInPolicy     ScaleInPolicy: Describes a scale-in policy for a virtual machine scale set.\n    singlePlacementGroup  bool    SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.\n    sku  Sku     Sku: Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    upgradePolicy  UpgradePolicy     UpgradePolicy: Describes an upgrade policy - automatic, manual, or rolling.\n    virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile     VirtualMachineProfile: Describes a virtual machine scale set virtual machine profile.\n    zoneBalance  bool    ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.\n    zones  []string    Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set\n       status  VirtualMachineScaleSet_Status         VirtualMachineScaleSetDataDisk   (Appears on:VirtualMachineScaleSetStorageProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetDataDisk\n    Field Description      caching  VirtualMachineScaleSetDataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  VirtualMachineScaleSetDataDiskCreateOption     CreateOption: The create option.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters     ManagedDisk: Describes the parameters of a ScaleSet managed disk.\n    name  string    Name: The disk name.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetDataDiskARM   (Appears on:VirtualMachineScaleSetStorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetDataDisk\n    Field Description      caching  VirtualMachineScaleSetDataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  VirtualMachineScaleSetDataDiskCreateOption     CreateOption: The create option.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  VirtualMachineScaleSetManagedDiskParametersARM     ManagedDisk: Describes the parameters of a ScaleSet managed disk.\n    name  string    Name: The disk name.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetDataDiskCaching (string alias)  (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetDataDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    VirtualMachineScaleSetDataDiskCreateOption (string alias)  (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetDataDiskARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    VirtualMachineScaleSetDataDisk_Status   (Appears on:VirtualMachineScaleSetStorageProfile_Status)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: The create option.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters_Status     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetDataDisk_StatusARM   (Appears on:VirtualMachineScaleSetStorageProfile_StatusARM)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: The create option.\n    diskIOPSReadWrite  int    DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskMBpsReadWrite  int    DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters_StatusARM     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetExtensionProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)      Field Description      extensions  []VirtualMachineScaleSetExtension_Status     Extensions: The virtual machine scale set child extension resources.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    VirtualMachineScaleSetExtensionProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      extensions  []VirtualMachineScaleSetExtension_StatusARM     Extensions: The virtual machine scale set child extension resources.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    VirtualMachineScaleSetExtensionProperties_StatusARM   (Appears on:VirtualMachineScaleSetExtension_StatusARM)      Field Description      autoUpgradeMinorVersion  bool    AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.\n    enableAutomaticUpgrade  bool    EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n    forceUpdateTag  string    ForceUpdateTag: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.\n    protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     ProtectedSettings: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\n    provisionAfterExtensions  []string    ProvisionAfterExtensions: Collection of extension names after which this extension needs to be provisioned.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    publisher  string    Publisher: The name of the extension handler publisher.\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Json formatted public settings for the extension.\n    type  string    Type: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineScaleSetExtension_Status   (Appears on:VirtualMachineScaleSetExtensionProfile_Status)      Field Description      autoUpgradeMinorVersion  bool    AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.\n    enableAutomaticUpgrade  bool    EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.\n    forceUpdateTag  string    ForceUpdateTag: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.\n    id  string    Id: Resource Id\n    name  string    Name: The name of the extension.\n    properties_type  string    PropertiesType: Specifies the type of the extension; an example is \u0026ldquo;CustomScriptExtension\u0026rdquo;.\n    protectedSettings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     ProtectedSettings: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.\n    provisionAfterExtensions  []string    ProvisionAfterExtensions: Collection of extension names after which this extension needs to be provisioned.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    publisher  string    Publisher: The name of the extension handler publisher.\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Json formatted public settings for the extension.\n    type  string    Type: Resource type\n    typeHandlerVersion  string    TypeHandlerVersion: Specifies the version of the script handler.\n    VirtualMachineScaleSetExtension_StatusARM   (Appears on:VirtualMachineScaleSetExtensionProfile_StatusARM)      Field Description      id  string    Id: Resource Id\n    name  string    Name: The name of the extension.\n    properties  VirtualMachineScaleSetExtensionProperties_StatusARM         type  string    Type: Resource type\n    VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM, VirtualMachineScaleSetIPConfiguration_Status)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetIPConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetIPConfiguration_StatusARM)      Field Description      applicationGatewayBackendAddressPools  []SubResource_StatusARM     ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.\n    applicationSecurityGroups  []SubResource_StatusARM     ApplicationSecurityGroups: Specifies an array of references to application security group.\n    loadBalancerBackendAddressPools  []SubResource_StatusARM     LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    loadBalancerInboundNatPools  []SubResource_StatusARM     LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    privateIPAddressVersion  VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion     PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPAddressConfiguration  VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM     PublicIPAddressConfiguration: The publicIPAddressConfiguration.\n    subnet  ApiEntityReference_StatusARM     Subnet: Specifies the identifier of the subnet.\n    VirtualMachineScaleSetIPConfiguration_Status   (Appears on:VirtualMachineScaleSetNetworkConfiguration_Status)      Field Description      applicationGatewayBackendAddressPools  []SubResource_Status     ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.\n    applicationSecurityGroups  []SubResource_Status     ApplicationSecurityGroups: Specifies an array of references to application security group.\n    id  string    Id: Resource Id\n    loadBalancerBackendAddressPools  []SubResource_Status     LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    loadBalancerInboundNatPools  []SubResource_Status     LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    name  string    Name: The IP configuration name.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    privateIPAddressVersion  VirtualMachineScaleSetIPConfigurationPropertiesStatusPrivateIPAddressVersion     PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPAddressConfiguration  VirtualMachineScaleSetPublicIPAddressConfiguration_Status     PublicIPAddressConfiguration: The publicIPAddressConfiguration.\n    subnet  ApiEntityReference_Status     Subnet: Specifies the identifier of the subnet.\n    VirtualMachineScaleSetIPConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM)      Field Description      id  string    Id: Resource Id\n    name  string    Name: The IP configuration name.\n    properties  VirtualMachineScaleSetIPConfigurationProperties_StatusARM         VirtualMachineScaleSetIdentity   (Appears on:VirtualMachineScaleSets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetIdentity\n    Field Description      type  VirtualMachineScaleSetIdentityType     Type: The type of identity used for the virtual machine scale set. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine scale set.\n    VirtualMachineScaleSetIdentityARM   (Appears on:VirtualMachineScaleSets_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetIdentity\n    Field Description      type  VirtualMachineScaleSetIdentityType     Type: The type of identity used for the virtual machine scale set. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine scale set.\n    VirtualMachineScaleSetIdentityStatusType (string alias)  (Appears on:VirtualMachineScaleSetIdentity_Status, VirtualMachineScaleSetIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineScaleSetIdentityType (string alias)  (Appears on:VirtualMachineScaleSetIdentity, VirtualMachineScaleSetIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    VirtualMachineScaleSetIdentity_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      principalId  string    PrincipalId: The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.\n    type  VirtualMachineScaleSetIdentityStatusType     Type: The type of identity used for the virtual machine scale set. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine scale set.\n    userAssignedIdentities  map[string]./api/compute/v1beta20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities     UserAssignedIdentities: The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineScaleSetIdentity_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)      Field Description      principalId  string    PrincipalId: The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.\n    type  VirtualMachineScaleSetIdentityStatusType     Type: The type of identity used for the virtual machine scale set. The type \u0026lsquo;SystemAssigned, UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the virtual machine scale set.\n    userAssignedIdentities  map[string]./api/compute/v1beta20201201.VirtualMachineScaleSetIdentity_Status_UserAssignedIdentitiesARM     UserAssignedIdentities: The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    VirtualMachineScaleSetIdentity_Status_UserAssignedIdentities   (Appears on:VirtualMachineScaleSetIdentity_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    VirtualMachineScaleSetIdentity_Status_UserAssignedIdentitiesARM   (Appears on:VirtualMachineScaleSetIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    VirtualMachineScaleSetIpTag   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetIpTag\n    Field Description      ipTagType  string    IpTagType: IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: IP tag associated with the public IP. Example: SQL, Storage etc.\n    VirtualMachineScaleSetIpTagARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetIpTag\n    Field Description      ipTagType  string    IpTagType: IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: IP tag associated with the public IP. Example: SQL, Storage etc.\n    VirtualMachineScaleSetIpTag_Status   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_Status)      Field Description      ipTagType  string    IpTagType: IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: IP tag associated with the public IP. Example: SQL, Storage etc.\n    VirtualMachineScaleSetIpTag_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)      Field Description      ipTagType  string    IpTagType: IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: IP tag associated with the public IP. Example: SQL, Storage etc.\n    VirtualMachineScaleSetManagedDiskParameters   (Appears on:VirtualMachineScaleSetDataDisk, VirtualMachineScaleSetOSDisk)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetManagedDiskParameters\n    Field Description      diskEncryptionSet  DiskEncryptionSetParameters     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    storageAccountType  VirtualMachineScaleSetManagedDiskParametersStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    VirtualMachineScaleSetManagedDiskParametersARM   (Appears on:VirtualMachineScaleSetDataDiskARM, VirtualMachineScaleSetOSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetManagedDiskParameters\n    Field Description      diskEncryptionSet  DiskEncryptionSetParametersARM     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    storageAccountType  VirtualMachineScaleSetManagedDiskParametersStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    VirtualMachineScaleSetManagedDiskParametersStorageAccountType (string alias)  (Appears on:VirtualMachineScaleSetManagedDiskParameters, VirtualMachineScaleSetManagedDiskParametersARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    VirtualMachineScaleSetManagedDiskParameters_Status   (Appears on:VirtualMachineScaleSetDataDisk_Status, VirtualMachineScaleSetOSDisk_Status)      Field Description      diskEncryptionSet  SubResource_Status     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    VirtualMachineScaleSetManagedDiskParameters_StatusARM   (Appears on:VirtualMachineScaleSetDataDisk_StatusARM, VirtualMachineScaleSetOSDisk_StatusARM)      Field Description      diskEncryptionSet  SubResource_StatusARM     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    VirtualMachineScaleSetNetworkConfigurationDnsSettings   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetNetworkConfigurationDnsSettings\n    Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses\n    VirtualMachineScaleSetNetworkConfigurationDnsSettingsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetNetworkConfigurationDnsSettings\n    Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses\n    VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status   (Appears on:VirtualMachineScaleSetNetworkConfiguration_Status)      Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses\n    VirtualMachineScaleSetNetworkConfigurationDnsSettings_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM)      Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses\n    VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetNetworkConfiguration_StatusARM)      Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings_StatusARM     DnsSettings: The dns settings to be applied on the network interfaces.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.\n    enableFpga  bool    EnableFpga: Specifies whether the network interface is FPGA networking-enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Whether IP forwarding enabled on this NIC.\n    ipConfigurations  []VirtualMachineScaleSetIPConfiguration_StatusARM     IpConfigurations: Specifies the IP configurations of the network interface.\n    networkSecurityGroup  SubResource_StatusARM     NetworkSecurityGroup: The network security group.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    VirtualMachineScaleSetNetworkConfiguration_Status   (Appears on:VirtualMachineScaleSetNetworkProfile_Status)      Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status     DnsSettings: The dns settings to be applied on the network interfaces.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.\n    enableFpga  bool    EnableFpga: Specifies whether the network interface is FPGA networking-enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Whether IP forwarding enabled on this NIC.\n    id  string    Id: Resource Id\n    ipConfigurations  []VirtualMachineScaleSetIPConfiguration_Status     IpConfigurations: Specifies the IP configurations of the network interface.\n    name  string    Name: The network configuration name.\n    networkSecurityGroup  SubResource_Status     NetworkSecurityGroup: The network security group.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    VirtualMachineScaleSetNetworkConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetNetworkProfile_StatusARM)      Field Description      id  string    Id: Resource Id\n    name  string    Name: The network configuration name.\n    properties  VirtualMachineScaleSetNetworkConfigurationProperties_StatusARM         VirtualMachineScaleSetNetworkProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)      Field Description      healthProbe  ApiEntityReference_Status     HealthProbe: A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}\u0026rsquo;.\n    networkInterfaceConfigurations  []VirtualMachineScaleSetNetworkConfiguration_Status     NetworkInterfaceConfigurations: The list of network configurations.\n    VirtualMachineScaleSetNetworkProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      healthProbe  ApiEntityReference_StatusARM     HealthProbe: A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}\u0026rsquo;.\n    networkInterfaceConfigurations  []VirtualMachineScaleSetNetworkConfiguration_StatusARM     NetworkInterfaceConfigurations: The list of network configurations.\n    VirtualMachineScaleSetOSDisk   (Appears on:VirtualMachineScaleSetStorageProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetOSDisk\n    Field Description      caching  VirtualMachineScaleSetOSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  VirtualMachineScaleSetOSDiskCreateOption     CreateOption: Specifies how the virtual machines in the scale set should be created. The only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings     DiffDiskSettings: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. NOTE: The ephemeral disk settings can only be specified for managed disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk     Image: Describes the uri of a disk.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters     ManagedDisk: Describes the parameters of a ScaleSet managed disk.\n    name  string    Name: The disk name.\n    osType  VirtualMachineScaleSetOSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux.\n    vhdContainers  []string    VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetOSDiskARM   (Appears on:VirtualMachineScaleSetStorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetOSDisk\n    Field Description      caching  VirtualMachineScaleSetOSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    createOption  VirtualMachineScaleSetOSDiskCreateOption     CreateOption: Specifies how the virtual machines in the scale set should be created. The only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettingsARM     DiffDiskSettings: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. NOTE: The ephemeral disk settings can only be specified for managed disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDiskARM     Image: Describes the uri of a disk.\n    managedDisk  VirtualMachineScaleSetManagedDiskParametersARM     ManagedDisk: Describes the parameters of a ScaleSet managed disk.\n    name  string    Name: The disk name.\n    osType  VirtualMachineScaleSetOSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux.\n    vhdContainers  []string    VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetOSDiskCaching (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    VirtualMachineScaleSetOSDiskCreateOption (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)      Value Description   \u0026#34;Attach\u0026#34;\n  \u0026#34;Empty\u0026#34;\n  \u0026#34;FromImage\u0026#34;\n    VirtualMachineScaleSetOSDiskOsType (string alias)  (Appears on:VirtualMachineScaleSetOSDisk, VirtualMachineScaleSetOSDiskARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    VirtualMachineScaleSetOSDiskStatusOsType (string alias)  (Appears on:VirtualMachineScaleSetOSDisk_Status, VirtualMachineScaleSetOSDisk_StatusARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    VirtualMachineScaleSetOSDisk_Status   (Appears on:VirtualMachineScaleSetStorageProfile_Status)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machines in the scale set should be created. The only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings_Status     DiffDiskSettings: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk_Status     Image: Specifies information about the unmanaged user image to base the scale set on.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters_Status     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    osType  VirtualMachineScaleSetOSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux\n    vhdContainers  []string    VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetOSDisk_StatusARM   (Appears on:VirtualMachineScaleSetStorageProfile_StatusARM)      Field Description      caching  Caching_Status     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    createOption  CreateOption_Status     CreateOption: Specifies how the virtual machines in the scale set should be created. The only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.\n    diffDiskSettings  DiffDiskSettings_StatusARM     DiffDiskSettings: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    image  VirtualHardDisk_StatusARM     Image: Specifies information about the unmanaged user image to base the scale set on.\n    managedDisk  VirtualMachineScaleSetManagedDiskParameters_StatusARM     ManagedDisk: The managed disk parameters.\n    name  string    Name: The disk name.\n    osType  VirtualMachineScaleSetOSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows Linux\n    vhdContainers  []string    VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.\n    writeAcceleratorEnabled  bool    WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.\n    VirtualMachineScaleSetOSProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetOSProfile\n    Field Description      adminPassword  genruntime.SecretReference     AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    computerNamePrefix  string    ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    secrets  []VaultSecretGroup     Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.\n    windowsConfiguration  WindowsConfiguration     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    VirtualMachineScaleSetOSProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetOSProfile\n    Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    computerNamePrefix  string    ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfigurationARM     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    secrets  []VaultSecretGroupARM     Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.\n    windowsConfiguration  WindowsConfigurationARM     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    VirtualMachineScaleSetOSProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    computerNamePrefix  string    ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration_Status     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    secrets  []VaultSecretGroup_Status     Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.\n    windowsConfiguration  WindowsConfiguration_Status     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    VirtualMachineScaleSetOSProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length (Windows): 8 characters Minimum-length (Linux): 6 characters Max-length (Windows): 123 characters Max-length (Linux): 72 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo; For resetting the password, see How to reset the Remote Desktop service or its login password in a Windows VM For resetting root password, see Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Windows-only restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length (Linux): 1 character Max-length (Linux): 64 characters Max-length (Windows): 20 characters  For root access to the Linux VM, see Using root privileges on Linux virtual machines in Azure  For a list of built-in system users on Linux that should not be used in this field, see Selecting User Names for Linux on Azure\n    computerNamePrefix  string    ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.\n    customData  string    CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see Using cloud-init to customize a Linux VM during creation\n    linuxConfiguration  LinuxConfiguration_StatusARM     LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see Linux on Azure-Endorsed Distributions For running non-endorsed distributions, see Information for Non-Endorsed Distributions.\n    secrets  []VaultSecretGroup_StatusARM     Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.\n    windowsConfiguration  WindowsConfiguration_StatusARM     WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.\n    VirtualMachineScaleSetProperties_StatusARM   (Appears on:VirtualMachineScaleSet_StatusARM)      Field Description      additionalCapabilities  AdditionalCapabilities_StatusARM     AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.\n    automaticRepairsPolicy  AutomaticRepairsPolicy_StatusARM     AutomaticRepairsPolicy: Policy for automatic repairs.\n    doNotRunExtensionsOnOverprovisionedVMs  bool    DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.\n    hostGroup  SubResource_StatusARM     HostGroup: Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.\n    orchestrationMode  OrchestrationMode_Status     OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.\n    overprovision  bool    Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.\n    platformFaultDomainCount  int    PlatformFaultDomainCount: Fault Domain count for each placement group.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    proximityPlacementGroup  SubResource_StatusARM     ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.\n    scaleInPolicy  ScaleInPolicy_StatusARM     ScaleInPolicy: Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.\n    singlePlacementGroup  bool    SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.\n    uniqueId  string    UniqueId: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.\n    upgradePolicy  UpgradePolicy_StatusARM     UpgradePolicy: The upgrade policy.\n    virtualMachineProfile  VirtualMachineScaleSetVMProfile_StatusARM     VirtualMachineProfile: The virtual machine profile.\n    zoneBalance  bool    ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.\n    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings\n    Field Description      domainNameLabel  string    DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created\n    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings\n    Field Description      domainNameLabel  string    DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created\n    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_Status)      Field Description      domainNameLabel  string    DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created\n    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM)      Field Description      domainNameLabel  string    DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created\n    VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetPublicIPAddressConfigurationProperties\n    Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsARM     DnsSettings: Describes a virtual machines scale sets network configuration\u0026rsquo;s DNS settings.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipTags  []VirtualMachineScaleSetIpTagARM     IpTags: The list of IP tags associated with the public IP address.\n    publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion     PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPPrefix  SubResourceARM         VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM, VirtualMachineScaleSetPublicIPAddressConfiguration_Status)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM   (Appears on:VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM)      Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_StatusARM     DnsSettings: The dns settings to be applied on the publicIP addresses .\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipTags  []VirtualMachineScaleSetIpTag_StatusARM     IpTags: The list of IP tags associated with the public IP address.\n    publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion     PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPPrefix  SubResource_StatusARM     PublicIPPrefix: The PublicIPPrefix from which to allocate publicIP addresses.\n    VirtualMachineScaleSetPublicIPAddressConfiguration_Status   (Appears on:VirtualMachineScaleSetIPConfiguration_Status)      Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status     DnsSettings: The dns settings to be applied on the publicIP addresses .\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipTags  []VirtualMachineScaleSetIpTag_Status     IpTags: The list of IP tags associated with the public IP address.\n    name  string    Name: The publicIP address configuration name.\n    publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesStatusPublicIPAddressVersion     PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPPrefix  SubResource_Status     PublicIPPrefix: The PublicIPPrefix from which to allocate publicIP addresses.\n    VirtualMachineScaleSetPublicIPAddressConfiguration_StatusARM   (Appears on:VirtualMachineScaleSetIPConfigurationProperties_StatusARM)      Field Description      name  string    Name: The publicIP address configuration name.\n    properties  VirtualMachineScaleSetPublicIPAddressConfigurationProperties_StatusARM         VirtualMachineScaleSetStorageProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetStorageProfile\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDisk     DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.\n    osDisk  VirtualMachineScaleSetOSDisk     OsDisk: Describes a virtual machine scale set operating system disk.\n    VirtualMachineScaleSetStorageProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/VirtualMachineScaleSetStorageProfile\n    Field Description      dataDisks  []VirtualMachineScaleSetDataDiskARM     DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReferenceARM     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.\n    osDisk  VirtualMachineScaleSetOSDiskARM     OsDisk: Describes a virtual machine scale set operating system disk.\n    VirtualMachineScaleSetStorageProfile_Status   (Appears on:VirtualMachineScaleSetVMProfile_Status)      Field Description      dataDisks  []VirtualMachineScaleSetDataDisk_Status     DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference_Status     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.\n    osDisk  VirtualMachineScaleSetOSDisk_Status     OsDisk: Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    VirtualMachineScaleSetStorageProfile_StatusARM   (Appears on:VirtualMachineScaleSetVMProfile_StatusARM)      Field Description      dataDisks  []VirtualMachineScaleSetDataDisk_StatusARM     DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    imageReference  ImageReference_StatusARM     ImageReference: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.\n    osDisk  VirtualMachineScaleSetOSDisk_StatusARM     OsDisk: Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    VirtualMachineScaleSetVMProfile_Status   (Appears on:VirtualMachineScaleSet_Status)      Field Description      billingProfile  BillingProfile_Status     BillingProfile: Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile_Status     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  EvictionPolicy_Status     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionProfile  VirtualMachineScaleSetExtensionProfile_Status     ExtensionProfile: Specifies a collection of settings for extensions installed on virtual machines in the scale set.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  VirtualMachineScaleSetNetworkProfile_Status     NetworkProfile: Specifies properties of the network interfaces of the virtual machines in the scale set.\n    osProfile  VirtualMachineScaleSetOSProfile_Status     OsProfile: Specifies the operating system settings for the virtual machines in the scale set.\n    priority  Priority_Status     Priority: Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview\n    scheduledEventsProfile  ScheduledEventsProfile_Status     ScheduledEventsProfile: Specifies Scheduled Event related configurations.\n    securityProfile  SecurityProfile_Status     SecurityProfile: Specifies the Security related profile settings for the virtual machines in the scale set.\n    storageProfile  VirtualMachineScaleSetStorageProfile_Status     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    VirtualMachineScaleSetVMProfile_StatusARM   (Appears on:VirtualMachineScaleSetProperties_StatusARM)      Field Description      billingProfile  BillingProfile_StatusARM     BillingProfile: Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile_StatusARM     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  EvictionPolicy_Status     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionProfile  VirtualMachineScaleSetExtensionProfile_StatusARM     ExtensionProfile: Specifies a collection of settings for extensions installed on virtual machines in the scale set.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  VirtualMachineScaleSetNetworkProfile_StatusARM     NetworkProfile: Specifies properties of the network interfaces of the virtual machines in the scale set.\n    osProfile  VirtualMachineScaleSetOSProfile_StatusARM     OsProfile: Specifies the operating system settings for the virtual machines in the scale set.\n    priority  Priority_Status     Priority: Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview\n    scheduledEventsProfile  ScheduledEventsProfile_StatusARM     ScheduledEventsProfile: Specifies Scheduled Event related configurations.\n    securityProfile  SecurityProfile_StatusARM     SecurityProfile: Specifies the Security related profile settings for the virtual machines in the scale set.\n    storageProfile  VirtualMachineScaleSetStorageProfile_StatusARM     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    VirtualMachineScaleSet_Status   (Appears on:VirtualMachineScaleSet)      Field Description      additionalCapabilities  AdditionalCapabilities_Status     AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.\n    automaticRepairsPolicy  AutomaticRepairsPolicy_Status     AutomaticRepairsPolicy: Policy for automatic repairs.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    doNotRunExtensionsOnOverprovisionedVMs  bool    DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the Virtual Machine Scale Set.\n    hostGroup  SubResource_Status     HostGroup: Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.\n    id  string    Id: Resource Id\n    identity  VirtualMachineScaleSetIdentity_Status     Identity: The identity of the virtual machine scale set, if configured.\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    orchestrationMode  OrchestrationMode_Status     OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.\n    overprovision  bool    Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.\n    plan  Plan_Status     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomainCount  int    PlatformFaultDomainCount: Fault Domain count for each placement group.\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    proximityPlacementGroup  SubResource_Status     ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.\n    scaleInPolicy  ScaleInPolicy_Status     ScaleInPolicy: Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.\n    singlePlacementGroup  bool    SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.\n    sku  Sku_Status     Sku: The virtual machine scale set sku.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    uniqueId  string    UniqueId: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.\n    upgradePolicy  UpgradePolicy_Status     UpgradePolicy: The upgrade policy.\n    virtualMachineProfile  VirtualMachineScaleSetVMProfile_Status     VirtualMachineProfile: The virtual machine profile.\n    zoneBalance  bool    ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.\n    zones  []string    Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set\n    VirtualMachineScaleSet_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the Virtual Machine Scale Set.\n    id  string    Id: Resource Id\n    identity  VirtualMachineScaleSetIdentity_StatusARM     Identity: The identity of the virtual machine scale set, if configured.\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    plan  Plan_StatusARM     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    properties  VirtualMachineScaleSetProperties_StatusARM         sku  Sku_StatusARM     Sku: The virtual machine scale set sku.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    zones  []string    Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set\n    VirtualMachineScaleSetsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesOrchestrationMode (string alias)  (Appears on:VirtualMachineScaleSets_Spec, VirtualMachineScaleSets_Spec_PropertiesARM)      Value Description   \u0026#34;Flexible\u0026#34;\n  \u0026#34;Uniform\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority (string alias)  (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile, VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)      Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    VirtualMachineScaleSets_Spec   (Appears on:VirtualMachineScaleSet)      Field Description      additionalCapabilities  AdditionalCapabilities     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    automaticRepairsPolicy  AutomaticRepairsPolicy     AutomaticRepairsPolicy: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    doNotRunExtensionsOnOverprovisionedVMs  bool    DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hostGroup  SubResource         identity  VirtualMachineScaleSetIdentity     Identity: Identity for the virtual machine scale set.\n    location  string    Location: Location to deploy resource to\n    orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode     OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.\n    overprovision  bool    Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomainCount  int    PlatformFaultDomainCount: Fault Domain count for each placement group.\n    proximityPlacementGroup  SubResource         scaleInPolicy  ScaleInPolicy     ScaleInPolicy: Describes a scale-in policy for a virtual machine scale set.\n    singlePlacementGroup  bool    SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.\n    sku  Sku     Sku: Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    upgradePolicy  UpgradePolicy     UpgradePolicy: Describes an upgrade policy - automatic, manual, or rolling.\n    virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile     VirtualMachineProfile: Describes a virtual machine scale set virtual machine profile.\n    zoneBalance  bool    ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.\n    zones  []string    Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set\n    VirtualMachineScaleSets_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    identity  VirtualMachineScaleSetIdentityARM     Identity: Identity for the virtual machine scale set.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the VM scale set to create or update.\n    plan  PlanARM     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    properties  VirtualMachineScaleSets_Spec_PropertiesARM     Properties: Describes the properties of a Virtual Machine Scale Set.\n    sku  SkuARM     Sku: Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set\n    VirtualMachineScaleSets_Spec_PropertiesARM   (Appears on:VirtualMachineScaleSets_SpecARM)      Field Description      additionalCapabilities  AdditionalCapabilitiesARM     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    automaticRepairsPolicy  AutomaticRepairsPolicyARM     AutomaticRepairsPolicy: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.\n    doNotRunExtensionsOnOverprovisionedVMs  bool    DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.\n    hostGroup  SubResourceARM         orchestrationMode  VirtualMachineScaleSetsSpecPropertiesOrchestrationMode     OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.\n    overprovision  bool    Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.\n    platformFaultDomainCount  int    PlatformFaultDomainCount: Fault Domain count for each placement group.\n    proximityPlacementGroup  SubResourceARM         scaleInPolicy  ScaleInPolicyARM     ScaleInPolicy: Describes a scale-in policy for a virtual machine scale set.\n    singlePlacementGroup  bool    SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.\n    upgradePolicy  UpgradePolicyARM     UpgradePolicy: Describes an upgrade policy - automatic, manual, or rolling.\n    virtualMachineProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM     VirtualMachineProfile: Describes a virtual machine scale set virtual machine profile.\n    zoneBalance  bool    ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile   (Appears on:VirtualMachineScaleSets_Spec)      Field Description      billingProfile  BillingProfile     BillingProfile: Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile     ExtensionProfile: Describes a virtual machine scale set extension profile.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile     NetworkProfile: Describes a virtual machine scale set network profile.\n    osProfile  VirtualMachineScaleSetOSProfile     OsProfile: Describes a virtual machine scale set OS profile.\n    priority  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority     Priority: Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview.\n    scheduledEventsProfile  ScheduledEventsProfile         securityProfile  SecurityProfile     SecurityProfile: Specifies the Security profile settings for the virtual machine or virtual machine scale set.\n    storageProfile  VirtualMachineScaleSetStorageProfile     StorageProfile: Describes a virtual machine scale set storage profile.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM   (Appears on:VirtualMachineScaleSets_Spec_PropertiesARM)      Field Description      billingProfile  BillingProfileARM     BillingProfile: Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfileARM     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileEvictionPolicy     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM     ExtensionProfile: Describes a virtual machine scale set extension profile.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM     NetworkProfile: Describes a virtual machine scale set network profile.\n    osProfile  VirtualMachineScaleSetOSProfileARM     OsProfile: Describes a virtual machine scale set OS profile.\n    priority  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfilePriority     Priority: Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview.\n    scheduledEventsProfile  ScheduledEventsProfileARM         securityProfile  SecurityProfileARM     SecurityProfile: Specifies the Security profile settings for the virtual machine or virtual machine scale set.\n    storageProfile  VirtualMachineScaleSetStorageProfileARM     StorageProfile: Describes a virtual machine scale set storage profile.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)      Field Description      extensions  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions     Extensions: The virtual machine scale set child extension resources.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)      Field Description      extensions  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM     Extensions: The virtual machine scale set child extension resources.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_Extensions   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile)      Field Description      name  string    Name: The name of the extension.\n    publisher  string    Publisher: Microsoft.Compute/extensions - Publisher\n    settings  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     Settings: Microsoft.Compute/extensions - Settings\n    type  string    Type: Microsoft.Compute/extensions - Type\n    typeHandlerVersion  string    TypeHandlerVersion: Microsoft.Compute/extensions - Type handler version\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfile_ExtensionsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_ExtensionProfileARM)      Field Description      name  string    Name: The name of the extension.\n    properties  GenericExtensionARM         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile)      Field Description      healthProbe  ApiEntityReference     HealthProbe: The API entity reference.\n    networkInterfaceConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations     NetworkInterfaceConfigurations: The list of network configurations.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfileARM)      Field Description      healthProbe  ApiEntityReferenceARM     HealthProbe: The API entity reference.\n    networkInterfaceConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM     NetworkInterfaceConfigurations: The list of network configurations.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile)      Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettings     DnsSettings: Describes a virtual machines scale sets network configuration\u0026rsquo;s DNS settings.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.\n    enableFpga  bool    EnableFpga: Specifies whether the network interface is FPGA networking-enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Whether IP forwarding enabled on this NIC.\n    id  string    Id: Resource Id\n    ipConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations     IpConfigurations: Specifies the IP configurations of the network interface.\n    name  string    Name: The network configuration name.\n    networkSecurityGroup  SubResource         primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfileARM)      Field Description      id  string    Id: Resource Id\n    name  string    Name: The network configuration name.\n    properties  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM     Properties: Describes a virtual machine scale set network profile\u0026rsquo;s IP configuration.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurationsARM)      Field Description      dnsSettings  VirtualMachineScaleSetNetworkConfigurationDnsSettingsARM     DnsSettings: Describes a virtual machines scale sets network configuration\u0026rsquo;s DNS settings.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.\n    enableFpga  bool    EnableFpga: Specifies whether the network interface is FPGA networking-enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Whether IP forwarding enabled on this NIC.\n    ipConfigurations  []VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM     IpConfigurations: Specifies the IP configurations of the network interface.\n    networkSecurityGroup  SubResourceARM         primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations)      Field Description      applicationGatewayBackendAddressPools  []SubResource     ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.\n    applicationSecurityGroups  []SubResource     ApplicationSecurityGroups: Specifies an array of references to application security group.\n    id  string    Id: Resource Id\n    loadBalancerBackendAddressPools  []SubResource     LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    loadBalancerInboundNatPools  []SubResource     LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    name  string    Name: The IP configuration name.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    privateIPAddressVersion  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion     PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPAddressConfiguration  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration     PublicIPAddressConfiguration: Describes a virtual machines scale set IP Configuration\u0026rsquo;s PublicIPAddress configuration\n    subnet  ApiEntityReference     Subnet: The API entity reference.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_PropertiesARM)      Field Description      id  string    Id: Resource Id\n    name  string    Name: The IP configuration name.\n    properties  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM     Properties: Describes a virtual machine scale set network profile\u0026rsquo;s IP configuration properties.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurationsARM)      Field Description      applicationGatewayBackendAddressPools  []SubResourceARM     ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.\n    applicationSecurityGroups  []SubResourceARM     ApplicationSecurityGroups: Specifies an array of references to application security group.\n    loadBalancerBackendAddressPools  []SubResourceARM     LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    loadBalancerInboundNatPools  []SubResourceARM     LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.\n    primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    privateIPAddressVersion  VirtualMachineScaleSetsSpecPropertiesVirtualMachineProfileNetworkProfileNetworkInterfaceConfigurationsPropertiesIpConfigurationsPropertiesPrivateIPAddressVersion     PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPAddressConfiguration  VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM     PublicIPAddressConfiguration: Describes a virtual machines scale set IP Configuration\u0026rsquo;s PublicIPAddress configuration\n    subnet  ApiEntityReferenceARM     Subnet: The API entity reference.\n    VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfiguration   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations)      Field Description      dnsSettings  VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings     DnsSettings: Describes a virtual machines scale sets network configuration\u0026rsquo;s DNS settings.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipTags  []VirtualMachineScaleSetIpTag     IpTags: The list of IP tags associated with the public IP address.\n    name  string    Name: The publicIP address configuration name.\n    publicIPAddressVersion  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesPublicIPAddressVersion     PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: \u0026lsquo;IPv4\u0026rsquo; and \u0026lsquo;IPv6\u0026rsquo;.\n    publicIPPrefix  SubResource         VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_Properties_PublicIPAddressConfigurationARM   (Appears on:VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations_PropertiesARM)      Field Description      name  string    Name: The publicIP address configuration name.\n    properties  VirtualMachineScaleSetPublicIPAddressConfigurationPropertiesARM     Properties: Describes a virtual machines scale set IP Configuration\u0026rsquo;s PublicIPAddress configuration\n    VirtualMachine_Status   (Appears on:VirtualMachine)      Field Description      additionalCapabilities  AdditionalCapabilities_Status     AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the virtual machine.\n    availabilitySet  SubResource_Status     AvailabilitySet: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see Manage the availability of virtual machines. For more information on Azure planned maintenance, see Planned maintenance for virtual machines in Azure Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.\n    billingProfile  BillingProfile_Status     BillingProfile: Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    diagnosticsProfile  DiagnosticsProfile_Status     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  EvictionPolicy_Status     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the Virtual Machine.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    hardwareProfile  HardwareProfile_Status     HardwareProfile: Specifies the hardware settings for the virtual machine.\n    host  SubResource_Status     Host: Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01.\n    hostGroup  SubResource_Status     HostGroup: Specifies information about the dedicated host group that the virtual machine resides in. Minimum api-version: 2020-06-01. NOTE: User cannot specify both host and hostGroup properties.\n    id  string    Id: Resource Id\n    identity  VirtualMachineIdentity_Status     Identity: The identity of the virtual machine, if configured.\n    instanceView  VirtualMachineInstanceView_Status     InstanceView: The virtual machine instance view.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    networkProfile  NetworkProfile_Status     NetworkProfile: Specifies the network interfaces of the virtual machine.\n    osProfile  OSProfile_Status     OsProfile: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.\n    plan  Plan_Status     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the \u0026lsquo;virtualMachineScaleSet\u0026rsquo; property of this Virtual Machine is set.The Virtual Machine Scale Set that is referenced, must have \u0026lsquo;platformFaultDomainCount\u0026rsquo; \u0026amp;gt; 1.This property cannot be updated once the Virtual Machine is created.Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01\n    priority  Priority_Status     Priority: Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01\n    provisioningState  string    ProvisioningState: The provisioning state, which only appears in the response.\n    proximityPlacementGroup  SubResource_Status     ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01.\n    resources  []VirtualMachineExtension_Status     Resources: The virtual machine child extension resources.\n    securityProfile  SecurityProfile_Status     SecurityProfile: Specifies the Security related profile settings for the virtual machine.\n    storageProfile  StorageProfile_Status     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    virtualMachineScaleSet  SubResource_Status     VirtualMachineScaleSet: Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01\n    vmId  string    VmId: Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.\n    zones  []string    Zones: The virtual machine zones.\n    VirtualMachine_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the Virtual Machine.\n    id  string    Id: Resource Id\n    identity  VirtualMachineIdentity_StatusARM     Identity: The identity of the virtual machine, if configured.\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    plan  Plan_StatusARM     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    properties  VirtualMachineProperties_StatusARM         resources  []VirtualMachineExtension_StatusARM     Resources: The virtual machine child extension resources.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    zones  []string    Zones: The virtual machine zones.\n    VirtualMachinesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-12-01\u0026#34;\n    VirtualMachinesSpecPropertiesEvictionPolicy (string alias)  (Appears on:VirtualMachines_Spec, VirtualMachines_Spec_PropertiesARM)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    VirtualMachinesSpecPropertiesPriority (string alias)  (Appears on:VirtualMachines_Spec, VirtualMachines_Spec_PropertiesARM)      Value Description   \u0026#34;Low\u0026#34;\n  \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    VirtualMachines_Spec   (Appears on:VirtualMachine)      Field Description      additionalCapabilities  AdditionalCapabilities     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    availabilitySet  SubResource         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    billingProfile  BillingProfile     BillingProfile: Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfile     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    hardwareProfile  HardwareProfile     HardwareProfile: Specifies the hardware settings for the virtual machine.\n    host  SubResource         hostGroup  SubResource         identity  VirtualMachineIdentity     Identity: Identity for the virtual machine.\n    licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    location  string    Location: Location to deploy resource to\n    networkProfile  VirtualMachines_Spec_Properties_NetworkProfile     NetworkProfile: Specifies the network interfaces of the virtual machine.\n    osProfile  OSProfile     OsProfile: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    plan  Plan     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the \u0026lsquo;virtualMachineScaleSet\u0026rsquo; property of this Virtual Machine is set.The Virtual Machine Scale Set that is referenced, must have \u0026lsquo;platformFaultDomainCount\u0026rsquo; \u0026amp;gt; 1.This property cannot be updated once the Virtual Machine is created.Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01\n    priority  VirtualMachinesSpecPropertiesPriority     Priority: Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01.\n    proximityPlacementGroup  SubResource         securityProfile  SecurityProfile     SecurityProfile: Specifies the Security profile settings for the virtual machine or virtual machine scale set.\n    storageProfile  StorageProfile     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    virtualMachineScaleSet  SubResource         zones  []string    Zones: The virtual machine zones.\n    VirtualMachines_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    identity  VirtualMachineIdentityARM     Identity: Identity for the virtual machine.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the virtual machine.\n    plan  PlanARM     Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -\u0026gt;. Enter any required information and then click Save.\n    properties  VirtualMachines_Spec_PropertiesARM     Properties: Describes the properties of a Virtual Machine.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: The virtual machine zones.\n    VirtualMachines_Spec_PropertiesARM   (Appears on:VirtualMachines_SpecARM)      Field Description      additionalCapabilities  AdditionalCapabilitiesARM     AdditionalCapabilities: Enables or disables a capability on the virtual machine or virtual machine scale set.\n    availabilitySet  SubResourceARM         billingProfile  BillingProfileARM     BillingProfile: Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.\n    diagnosticsProfile  DiagnosticsProfileARM     DiagnosticsProfile: Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.\n    evictionPolicy  VirtualMachinesSpecPropertiesEvictionPolicy     EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both \u0026lsquo;Deallocate\u0026rsquo; and \u0026lsquo;Delete\u0026rsquo; are supported and the minimum api-version is 2017-10-30-preview.\n    extensionsTimeBudget  string    ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01\n    hardwareProfile  HardwareProfileARM     HardwareProfile: Specifies the hardware settings for the virtual machine.\n    host  SubResourceARM         hostGroup  SubResourceARM         licenseType  string    LicenseType: Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see Azure Hybrid Use Benefit for Windows Server Azure Hybrid Use Benefit for Linux Server Minimum api-version: 2015-06-15\n    networkProfile  VirtualMachines_Spec_Properties_NetworkProfileARM     NetworkProfile: Specifies the network interfaces of the virtual machine.\n    osProfile  OSProfileARM     OsProfile: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.\n    platformFaultDomain  int    PlatformFaultDomain: Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the \u0026lsquo;virtualMachineScaleSet\u0026rsquo; property of this Virtual Machine is set.The Virtual Machine Scale Set that is referenced, must have \u0026lsquo;platformFaultDomainCount\u0026rsquo; \u0026amp;gt; 1.This property cannot be updated once the Virtual Machine is created.Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01\n    priority  VirtualMachinesSpecPropertiesPriority     Priority: Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01.\n    proximityPlacementGroup  SubResourceARM         securityProfile  SecurityProfileARM     SecurityProfile: Specifies the Security profile settings for the virtual machine or virtual machine scale set.\n    storageProfile  StorageProfileARM     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    virtualMachineScaleSet  SubResourceARM         VirtualMachines_Spec_Properties_NetworkProfile   (Appears on:VirtualMachines_Spec)      Field Description      networkInterfaces  []VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces     NetworkInterfaces: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.\n    VirtualMachines_Spec_Properties_NetworkProfileARM   (Appears on:VirtualMachines_Spec_PropertiesARM)      Field Description      networkInterfaces  []VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM     NetworkInterfaces: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.\n    VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces   (Appears on:VirtualMachines_Spec_Properties_NetworkProfile)      Field Description      primary  bool    Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.\n    reference  genruntime.ResourceReference     Reference: Resource Id\n    VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfacesARM   (Appears on:VirtualMachines_Spec_Properties_NetworkProfileARM)      Field Description      id  string        properties  NetworkInterfaceReferencePropertiesARM     Properties: Describes a network interface reference properties.\n    WinRMConfiguration   (Appears on:WindowsConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WinRMConfiguration\n    Field Description      listeners  []WinRMListener     Listeners: The list of Windows Remote Management listeners\n    WinRMConfigurationARM   (Appears on:WindowsConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WinRMConfiguration\n    Field Description      listeners  []WinRMListenerARM     Listeners: The list of Windows Remote Management listeners\n    WinRMConfiguration_Status   (Appears on:WindowsConfiguration_Status)      Field Description      listeners  []WinRMListener_Status     Listeners: The list of Windows Remote Management listeners\n    WinRMConfiguration_StatusARM   (Appears on:WindowsConfiguration_StatusARM)      Field Description      listeners  []WinRMListener_StatusARM     Listeners: The list of Windows Remote Management listeners\n    WinRMListener   (Appears on:WinRMConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WinRMListener\n    Field Description      certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    protocol  WinRMListenerProtocol     Protocol: Specifies the protocol of WinRM listener. Possible values are: http https.\n    WinRMListenerARM   (Appears on:WinRMConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WinRMListener\n    Field Description      certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    protocol  WinRMListenerProtocol     Protocol: Specifies the protocol of WinRM listener. Possible values are: http https.\n    WinRMListenerProtocol (string alias)  (Appears on:WinRMListener, WinRMListenerARM)      Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n    WinRMListenerStatusProtocol (string alias)  (Appears on:WinRMListener_Status, WinRMListener_StatusARM)      Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n    WinRMListener_Status   (Appears on:WinRMConfiguration_Status)      Field Description      certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    protocol  WinRMListenerStatusProtocol     Protocol: Specifies the protocol of WinRM listener. Possible values are: http https\n    WinRMListener_StatusARM   (Appears on:WinRMConfiguration_StatusARM)      Field Description      certificateUrl  string    CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see Add a key or secret to the key vault. In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: { \u0026ldquo;data\u0026rdquo;:\u0026rdquo;\u0026rdquo;, \u0026ldquo;dataType\u0026rdquo;:\u0026ldquo;pfx\u0026rdquo;, \u0026ldquo;password\u0026rdquo;:\u0026rdquo;\u0026rdquo; }\n    protocol  WinRMListenerStatusProtocol     Protocol: Specifies the protocol of WinRM listener. Possible values are: http https\n    WindowsConfiguration   (Appears on:OSProfile, VirtualMachineScaleSetOSProfile)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WindowsConfiguration\n    Field Description      additionalUnattendContent  []AdditionalUnattendContent     AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.\n    enableAutomaticUpdates  bool    EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.\n    patchSettings  PatchSettings     PatchSettings: Specifies settings related to VM Guest Patching on Windows.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    timeZone  string    TimeZone: Specifies the time zone of the virtual machine. e.g. \u0026ldquo;Pacific Standard Time\u0026rdquo;. Possible values can be TimeZoneInfo.Id value from time zones returned by TimeZoneInfo.GetSystemTimeZones.\n    winRM  WinRMConfiguration     WinRM: Describes Windows Remote Management configuration of the VM\n    WindowsConfigurationARM   (Appears on:OSProfileARM, VirtualMachineScaleSetOSProfileARM)  Generated from: https://schema.management.azure.com/schemas/2020-12-01/Microsoft.Compute.json#/definitions/WindowsConfiguration\n    Field Description      additionalUnattendContent  []AdditionalUnattendContentARM     AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.\n    enableAutomaticUpdates  bool    EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.\n    patchSettings  PatchSettingsARM     PatchSettings: Specifies settings related to VM Guest Patching on Windows.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    timeZone  string    TimeZone: Specifies the time zone of the virtual machine. e.g. \u0026ldquo;Pacific Standard Time\u0026rdquo;. Possible values can be TimeZoneInfo.Id value from time zones returned by TimeZoneInfo.GetSystemTimeZones.\n    winRM  WinRMConfigurationARM     WinRM: Describes Windows Remote Management configuration of the VM\n    WindowsConfiguration_Status   (Appears on:OSProfile_Status, VirtualMachineScaleSetOSProfile_Status)      Field Description      additionalUnattendContent  []AdditionalUnattendContent_Status     AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.\n    enableAutomaticUpdates  bool    EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.\n    patchSettings  PatchSettings_Status     PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Windows.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    timeZone  string    TimeZone: Specifies the time zone of the virtual machine. e.g. \u0026ldquo;Pacific Standard Time\u0026rdquo;. Possible values can be TimeZoneInfo.Id value from time zones returned by TimeZoneInfo.GetSystemTimeZones.\n    winRM  WinRMConfiguration_Status     WinRM: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.\n    WindowsConfiguration_StatusARM   (Appears on:OSProfile_StatusARM, VirtualMachineScaleSetOSProfile_StatusARM)      Field Description      additionalUnattendContent  []AdditionalUnattendContent_StatusARM     AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.\n    enableAutomaticUpdates  bool    EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.\n    patchSettings  PatchSettings_StatusARM     PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Windows.\n    provisionVMAgent  bool    ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.\n    timeZone  string    TimeZone: Specifies the time zone of the virtual machine. e.g. \u0026ldquo;Pacific Standard Time\u0026rdquo;. Possible values can be TimeZoneInfo.Id value from time zones returned by TimeZoneInfo.GetSystemTimeZones.\n    winRM  WinRMConfiguration_StatusARM     WinRM: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.\n     "},{"id":32,"href":"/azure-service-operator/reference/compute.v1beta20210701/","title":"compute.azure.com/v1beta20210701","section":"References","content":"compute.azure.com/v1beta20210701  Package v1beta20210701 contains API Schema definitions for the compute v1beta20210701 API group\n Resource Types:  DiskEncryptionSetParameters   (Appears on:ImageDataDisk, ImageOSDisk)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/DiskEncryptionSetParameters\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource Id\n    DiskEncryptionSetParametersARM   (Appears on:ImageDataDiskARM, ImageOSDiskARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/DiskEncryptionSetParameters\n    Field Description      id  string        ExtendedLocation   (Appears on:Images_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:Images_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:Image_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:Image_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    HyperVGenerationType_Status (string alias)  (Appears on:ImageProperties_StatusARM, Image_Status)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    Image   Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/resourceDefinitions/images\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Images_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  ImagePropertiesHyperVGeneration     HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sourceVirtualMachine  SubResource         storageProfile  ImageStorageProfile     StorageProfile: Describes a storage profile.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Image_Status         ImageDataDisk   (Appears on:ImageStorageProfile)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageDataDisk\n    Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageDataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    diskEncryptionSet  DiskEncryptionSetParameters     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  SubResource         snapshot  SubResource         storageAccountType  ImageDataDiskStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageDataDiskARM   (Appears on:ImageStorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageDataDisk\n    Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageDataDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    diskEncryptionSet  DiskEncryptionSetParametersARM     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  SubResourceARM         snapshot  SubResourceARM         storageAccountType  ImageDataDiskStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageDataDiskCaching (string alias)  (Appears on:ImageDataDisk, ImageDataDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageDataDiskStatusCaching (string alias)  (Appears on:ImageDataDisk_Status, ImageDataDisk_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageDataDiskStorageAccountType (string alias)  (Appears on:ImageDataDisk, ImageDataDiskARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ImageDataDisk_Status   (Appears on:ImageStorageProfile_Status)      Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageDataDiskStatusCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    diskEncryptionSet  SubResource_Status     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  SubResource_Status     ManagedDisk: The managedDisk.\n    snapshot  SubResource_Status     Snapshot: The snapshot.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageDataDisk_StatusARM   (Appears on:ImageStorageProfile_StatusARM)      Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageDataDiskStatusCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    diskEncryptionSet  SubResource_StatusARM     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    lun  int    Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n    managedDisk  SubResource_StatusARM     ManagedDisk: The managedDisk.\n    snapshot  SubResource_StatusARM     Snapshot: The snapshot.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageOSDisk   (Appears on:ImageStorageProfile)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageOSDisk\n    Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageOSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    diskEncryptionSet  DiskEncryptionSetParameters     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    managedDisk  SubResource         osState  ImageOSDiskOsState     OsState: The OS State.\n    osType  ImageOSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. Possible values are: Windows Linux.\n    snapshot  SubResource         storageAccountType  ImageOSDiskStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageOSDiskARM   (Appears on:ImageStorageProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageOSDisk\n    Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageOSDiskCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage.\n    diskEncryptionSet  DiskEncryptionSetParametersARM     DiskEncryptionSet: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    managedDisk  SubResourceARM         osState  ImageOSDiskOsState     OsState: The OS State.\n    osType  ImageOSDiskOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. Possible values are: Windows Linux.\n    snapshot  SubResourceARM         storageAccountType  ImageOSDiskStorageAccountType     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageOSDiskCaching (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageOSDiskOsState (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)      Value Description   \u0026#34;Generalized\u0026#34;\n  \u0026#34;Specialized\u0026#34;\n    ImageOSDiskOsType (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ImageOSDiskStatusCaching (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;ReadOnly\u0026#34;\n  \u0026#34;ReadWrite\u0026#34;\n    ImageOSDiskStatusOsState (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)      Value Description   \u0026#34;Generalized\u0026#34;\n  \u0026#34;Specialized\u0026#34;\n    ImageOSDiskStatusOsType (string alias)  (Appears on:ImageOSDisk_Status, ImageOSDisk_StatusARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ImageOSDiskStorageAccountType (string alias)  (Appears on:ImageOSDisk, ImageOSDiskARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    ImageOSDisk_Status   (Appears on:ImageStorageProfile_Status)      Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageOSDiskStatusCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    diskEncryptionSet  SubResource_Status     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    managedDisk  SubResource_Status     ManagedDisk: The managedDisk.\n    osState  ImageOSDiskStatusOsState     OsState: The OS State.\n    osType  ImageOSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. Possible values are: Windows Linux\n    snapshot  SubResource_Status     Snapshot: The snapshot.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImageOSDisk_StatusARM   (Appears on:ImageStorageProfile_StatusARM)      Field Description      blobUri  string    BlobUri: The Virtual Hard Disk.\n    caching  ImageOSDiskStatusCaching     Caching: Specifies the caching requirements. Possible values are: None ReadOnly ReadWrite Default: None for Standard storage. ReadOnly for Premium storage\n    diskEncryptionSet  SubResource_StatusARM     DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.\n    diskSizeGB  int    DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB\n    managedDisk  SubResource_StatusARM     ManagedDisk: The managedDisk.\n    osState  ImageOSDiskStatusOsState     OsState: The OS State.\n    osType  ImageOSDiskStatusOsType     OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. Possible values are: Windows Linux\n    snapshot  SubResource_StatusARM     Snapshot: The snapshot.\n    storageAccountType  StorageAccountType_Status     StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.\n    ImagePropertiesARM   (Appears on:Images_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageProperties\n    Field Description      hyperVGeneration  ImagePropertiesHyperVGeneration     HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.\n    sourceVirtualMachine  SubResourceARM         storageProfile  ImageStorageProfileARM     StorageProfile: Describes a storage profile.\n    ImagePropertiesHyperVGeneration (string alias)  (Appears on:ImagePropertiesARM, Images_Spec)      Value Description   \u0026#34;V1\u0026#34;\n  \u0026#34;V2\u0026#34;\n    ImageProperties_StatusARM   (Appears on:Image_StatusARM)      Field Description      hyperVGeneration  HyperVGenerationType_Status     HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.\n    provisioningState  string    ProvisioningState: The provisioning state.\n    sourceVirtualMachine  SubResource_StatusARM     SourceVirtualMachine: The source virtual machine from which Image is created.\n    storageProfile  ImageStorageProfile_StatusARM     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    ImageStorageProfile   (Appears on:Images_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageStorageProfile\n    Field Description      dataDisks  []ImageDataDisk     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    osDisk  ImageOSDisk     OsDisk: Describes an Operating System disk.\n    zoneResilient  bool    ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).\n    ImageStorageProfileARM   (Appears on:ImagePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/ImageStorageProfile\n    Field Description      dataDisks  []ImageDataDiskARM     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    osDisk  ImageOSDiskARM     OsDisk: Describes an Operating System disk.\n    zoneResilient  bool    ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).\n    ImageStorageProfile_Status   (Appears on:Image_Status)      Field Description      dataDisks  []ImageDataDisk_Status     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    osDisk  ImageOSDisk_Status     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    zoneResilient  bool    ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).\n    ImageStorageProfile_StatusARM   (Appears on:ImageProperties_StatusARM)      Field Description      dataDisks  []ImageDataDisk_StatusARM     DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    osDisk  ImageOSDisk_StatusARM     OsDisk: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see About disks and VHDs for Azure virtual machines.\n    zoneResilient  bool    ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).\n    Image_Status   (Appears on:Image)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the Image.\n    hyperVGeneration  HyperVGenerationType_Status     HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.\n    id  string    Id: Resource Id\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    provisioningState  string    ProvisioningState: The provisioning state.\n    sourceVirtualMachine  SubResource_Status     SourceVirtualMachine: The source virtual machine from which Image is created.\n    storageProfile  ImageStorageProfile_Status     StorageProfile: Specifies the storage settings for the virtual machine disks.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    Image_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the Image.\n    id  string    Id: Resource Id\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    properties  ImageProperties_StatusARM         tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    ImagesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-07-01\u0026#34;\n    Images_Spec   (Appears on:Image)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    hyperVGeneration  ImagePropertiesHyperVGeneration     HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sourceVirtualMachine  SubResource         storageProfile  ImageStorageProfile     StorageProfile: Describes a storage profile.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Images_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the image.\n    properties  ImagePropertiesARM     Properties: Describes the properties of an Image.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountType_Status (string alias)  (Appears on:ImageDataDisk_Status, ImageDataDisk_StatusARM, ImageOSDisk_Status, ImageOSDisk_StatusARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;StandardSSD_LRS\u0026#34;\n  \u0026#34;StandardSSD_ZRS\u0026#34;\n  \u0026#34;UltraSSD_LRS\u0026#34;\n    SubResource   (Appears on:ImageDataDisk, ImageOSDisk, Images_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/SubResource\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource Id\n    SubResourceARM   (Appears on:ImageDataDiskARM, ImageOSDiskARM, ImagePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-07-01/Microsoft.Compute.json#/definitions/SubResource\n    Field Description      id  string        SubResource_Status   (Appears on:ImageDataDisk_Status, ImageOSDisk_Status, Image_Status)      Field Description      id  string    Id: Resource Id\n    SubResource_StatusARM   (Appears on:ImageDataDisk_StatusARM, ImageOSDisk_StatusARM, ImageProperties_StatusARM)      Field Description      id  string    Id: Resource Id\n     "},{"id":33,"href":"/azure-service-operator/reference/containerregistry.v1alpha1api20210901/","title":"containerregistry.azure.com/v1alpha1api20210901","section":"References","content":"containerregistry.azure.com/v1alpha1api20210901  Package v1alpha1api20210901 contains API Schema definitions for the containerregistry v1alpha1api20210901 API group\n Resource Types:  EncryptionProperty   (Appears on:Registries_Spec)  Deprecated version of EncryptionProperty. Use v1beta20210901.EncryptionProperty instead\n    Field Description      keyVaultProperties  KeyVaultProperties         status  EncryptionPropertyStatus         EncryptionPropertyARM   (Appears on:RegistryPropertiesARM)  Deprecated version of EncryptionProperty. Use v1beta20210901.EncryptionProperty instead\n    Field Description      keyVaultProperties  KeyVaultPropertiesARM         status  EncryptionPropertyStatus         EncryptionPropertyStatus (string alias)  (Appears on:EncryptionProperty, EncryptionPropertyARM)  Deprecated version of EncryptionPropertyStatus. Use v1beta20210901.EncryptionPropertyStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    EncryptionPropertyStatusStatus (string alias)  (Appears on:EncryptionProperty_Status, EncryptionProperty_StatusARM)  Deprecated version of EncryptionPropertyStatusStatus. Use v1beta20210901.EncryptionPropertyStatusStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    EncryptionProperty_Status   (Appears on:Registry_Status)  Deprecated version of EncryptionProperty_Status. Use v1beta20210901.EncryptionProperty_Status instead\n    Field Description      keyVaultProperties  KeyVaultProperties_Status         status  EncryptionPropertyStatusStatus         EncryptionProperty_StatusARM   (Appears on:RegistryProperties_StatusARM)  Deprecated version of EncryptionProperty_Status. Use v1beta20210901.EncryptionProperty_Status instead\n    Field Description      keyVaultProperties  KeyVaultProperties_StatusARM         status  EncryptionPropertyStatusStatus         ExportPolicy   (Appears on:Policies)  Deprecated version of ExportPolicy. Use v1beta20210901.ExportPolicy instead\n    Field Description      status  ExportPolicyStatus         ExportPolicyARM   (Appears on:PoliciesARM)  Deprecated version of ExportPolicy. Use v1beta20210901.ExportPolicy instead\n    Field Description      status  ExportPolicyStatus         ExportPolicyStatus (string alias)  (Appears on:ExportPolicy, ExportPolicyARM)  Deprecated version of ExportPolicyStatus. Use v1beta20210901.ExportPolicyStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    ExportPolicyStatusStatus (string alias)  (Appears on:ExportPolicy_Status, ExportPolicy_StatusARM)  Deprecated version of ExportPolicyStatusStatus. Use v1beta20210901.ExportPolicyStatusStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    ExportPolicy_Status   (Appears on:Policies_Status)  Deprecated version of ExportPolicy_Status. Use v1beta20210901.ExportPolicy_Status instead\n    Field Description      status  ExportPolicyStatusStatus         ExportPolicy_StatusARM   (Appears on:Policies_StatusARM)  Deprecated version of ExportPolicy_Status. Use v1beta20210901.ExportPolicy_Status instead\n    Field Description      status  ExportPolicyStatusStatus         IPRule   (Appears on:NetworkRuleSet)  Deprecated version of IPRule. Use v1beta20210901.IPRule instead\n    Field Description      action  IPRuleAction         value  string        IPRuleARM   (Appears on:NetworkRuleSetARM)  Deprecated version of IPRule. Use v1beta20210901.IPRule instead\n    Field Description      action  IPRuleAction         value  string        IPRuleAction (string alias)  (Appears on:IPRule, IPRuleARM)  Deprecated version of IPRuleAction. Use v1beta20210901.IPRuleAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    IPRuleStatusAction (string alias)  (Appears on:IPRule_Status, IPRule_StatusARM)  Deprecated version of IPRuleStatusAction. Use v1beta20210901.IPRuleStatusAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    IPRule_Status   (Appears on:NetworkRuleSet_Status)  Deprecated version of IPRule_Status. Use v1beta20210901.IPRule_Status instead\n    Field Description      action  IPRuleStatusAction         value  string        IPRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)  Deprecated version of IPRule_Status. Use v1beta20210901.IPRule_Status instead\n    Field Description      action  IPRuleStatusAction         value  string        IdentityProperties   (Appears on:Registries_Spec)  Deprecated version of IdentityProperties. Use v1beta20210901.IdentityProperties instead\n    Field Description      principalId  string        tenantId  string        type  IdentityPropertiesType         userAssignedIdentities  map[string]./api/containerregistry/v1alpha1api20210901.UserIdentityProperties         IdentityPropertiesARM   (Appears on:Registries_SpecARM)  Deprecated version of IdentityProperties. Use v1beta20210901.IdentityProperties instead\n    Field Description      principalId  string        tenantId  string        type  IdentityPropertiesType         userAssignedIdentities  map[string]./api/containerregistry/v1alpha1api20210901.UserIdentityPropertiesARM         IdentityPropertiesStatusType (string alias)  (Appears on:IdentityProperties_Status, IdentityProperties_StatusARM)  Deprecated version of IdentityPropertiesStatusType. Use v1beta20210901.IdentityPropertiesStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityPropertiesType (string alias)  (Appears on:IdentityProperties, IdentityPropertiesARM)  Deprecated version of IdentityPropertiesType. Use v1beta20210901.IdentityPropertiesType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityProperties_Status   (Appears on:Registry_Status)  Deprecated version of IdentityProperties_Status. Use v1beta20210901.IdentityProperties_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityPropertiesStatusType         userAssignedIdentities  map[string]./api/containerregistry/v1alpha1api20210901.UserIdentityProperties_Status         IdentityProperties_StatusARM   (Appears on:Registry_StatusARM)  Deprecated version of IdentityProperties_Status. Use v1beta20210901.IdentityProperties_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityPropertiesStatusType         userAssignedIdentities  map[string]./api/containerregistry/v1alpha1api20210901.UserIdentityProperties_StatusARM         KeyVaultProperties   (Appears on:EncryptionProperty)  Deprecated version of KeyVaultProperties. Use v1beta20210901.KeyVaultProperties instead\n    Field Description      identity  string        keyIdentifier  string        KeyVaultPropertiesARM   (Appears on:EncryptionPropertyARM)  Deprecated version of KeyVaultProperties. Use v1beta20210901.KeyVaultProperties instead\n    Field Description      identity  string        keyIdentifier  string        KeyVaultProperties_Status   (Appears on:EncryptionProperty_Status)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210901.KeyVaultProperties_Status instead\n    Field Description      identity  string        keyIdentifier  string        keyRotationEnabled  bool        lastKeyRotationTimestamp  string        versionedKeyIdentifier  string        KeyVaultProperties_StatusARM   (Appears on:EncryptionProperty_StatusARM)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210901.KeyVaultProperties_Status instead\n    Field Description      identity  string        keyIdentifier  string        keyRotationEnabled  bool        lastKeyRotationTimestamp  string        versionedKeyIdentifier  string        NetworkRuleSet   (Appears on:Registries_Spec)  Deprecated version of NetworkRuleSet. Use v1beta20210901.NetworkRuleSet instead\n    Field Description      defaultAction  NetworkRuleSetDefaultAction         ipRules  []IPRule         NetworkRuleSetARM   (Appears on:RegistryPropertiesARM)  Deprecated version of NetworkRuleSet. Use v1beta20210901.NetworkRuleSet instead\n    Field Description      defaultAction  NetworkRuleSetDefaultAction         ipRules  []IPRuleARM         NetworkRuleSetDefaultAction (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)  Deprecated version of NetworkRuleSetDefaultAction. Use v1beta20210901.NetworkRuleSetDefaultAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSetStatusDefaultAction (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)  Deprecated version of NetworkRuleSetStatusDefaultAction. Use v1beta20210901.NetworkRuleSetStatusDefaultAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSet_Status   (Appears on:Registry_Status)  Deprecated version of NetworkRuleSet_Status. Use v1beta20210901.NetworkRuleSet_Status instead\n    Field Description      defaultAction  NetworkRuleSetStatusDefaultAction         ipRules  []IPRule_Status         NetworkRuleSet_StatusARM   (Appears on:RegistryProperties_StatusARM)  Deprecated version of NetworkRuleSet_Status. Use v1beta20210901.NetworkRuleSet_Status instead\n    Field Description      defaultAction  NetworkRuleSetStatusDefaultAction         ipRules  []IPRule_StatusARM         Policies   (Appears on:Registries_Spec)  Deprecated version of Policies. Use v1beta20210901.Policies instead\n    Field Description      exportPolicy  ExportPolicy         quarantinePolicy  QuarantinePolicy         retentionPolicy  RetentionPolicy         trustPolicy  TrustPolicy         PoliciesARM   (Appears on:RegistryPropertiesARM)  Deprecated version of Policies. Use v1beta20210901.Policies instead\n    Field Description      exportPolicy  ExportPolicyARM         quarantinePolicy  QuarantinePolicyARM         retentionPolicy  RetentionPolicyARM         trustPolicy  TrustPolicyARM         Policies_Status   (Appears on:Registry_Status)  Deprecated version of Policies_Status. Use v1beta20210901.Policies_Status instead\n    Field Description      exportPolicy  ExportPolicy_Status         quarantinePolicy  QuarantinePolicy_Status         retentionPolicy  RetentionPolicy_Status         trustPolicy  TrustPolicy_Status         Policies_StatusARM   (Appears on:RegistryProperties_StatusARM)  Deprecated version of Policies_Status. Use v1beta20210901.Policies_Status instead\n    Field Description      exportPolicy  ExportPolicy_StatusARM         quarantinePolicy  QuarantinePolicy_StatusARM         retentionPolicy  RetentionPolicy_StatusARM         trustPolicy  TrustPolicy_StatusARM         PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:Registry_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210901.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_Status         PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:RegistryProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210901.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_StatusARM         QuarantinePolicy   (Appears on:Policies)  Deprecated version of QuarantinePolicy. Use v1beta20210901.QuarantinePolicy instead\n    Field Description      status  QuarantinePolicyStatus         QuarantinePolicyARM   (Appears on:PoliciesARM)  Deprecated version of QuarantinePolicy. Use v1beta20210901.QuarantinePolicy instead\n    Field Description      status  QuarantinePolicyStatus         QuarantinePolicyStatus (string alias)  (Appears on:QuarantinePolicy, QuarantinePolicyARM)  Deprecated version of QuarantinePolicyStatus. Use v1beta20210901.QuarantinePolicyStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    QuarantinePolicyStatusStatus (string alias)  (Appears on:QuarantinePolicy_Status, QuarantinePolicy_StatusARM)  Deprecated version of QuarantinePolicyStatusStatus. Use v1beta20210901.QuarantinePolicyStatusStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    QuarantinePolicy_Status   (Appears on:Policies_Status)  Deprecated version of QuarantinePolicy_Status. Use v1beta20210901.QuarantinePolicy_Status instead\n    Field Description      status  QuarantinePolicyStatusStatus         QuarantinePolicy_StatusARM   (Appears on:Policies_StatusARM)  Deprecated version of QuarantinePolicy_Status. Use v1beta20210901.QuarantinePolicy_Status instead\n    Field Description      status  QuarantinePolicyStatusStatus         Registries_Spec   (Appears on:Registry)      Field Description      adminUserEnabled  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dataEndpointEnabled  bool        encryption  EncryptionProperty         identity  IdentityProperties         location  string        networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions         networkRuleSet  NetworkRuleSet         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    policies  Policies         publicNetworkAccess  RegistryPropertiesPublicNetworkAccess         sku  Sku         tags  map[string]string        zoneRedundancy  RegistryPropertiesZoneRedundancy         Registries_SpecARM   Deprecated version of Registries_Spec. Use v1beta20210901.Registries_Spec instead\n    Field Description      identity  IdentityPropertiesARM         location  string        name  string        properties  RegistryPropertiesARM         sku  SkuARM         tags  map[string]string        Registry   Deprecated version of Registry. Use v1beta20210901.Registry instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Registries_Spec          adminUserEnabled  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dataEndpointEnabled  bool        encryption  EncryptionProperty         identity  IdentityProperties         location  string        networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions         networkRuleSet  NetworkRuleSet         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    policies  Policies         publicNetworkAccess  RegistryPropertiesPublicNetworkAccess         sku  Sku         tags  map[string]string        zoneRedundancy  RegistryPropertiesZoneRedundancy            status  Registry_Status         RegistryPropertiesARM   (Appears on:Registries_SpecARM)  Deprecated version of RegistryProperties. Use v1beta20210901.RegistryProperties instead\n    Field Description      adminUserEnabled  bool        dataEndpointEnabled  bool        encryption  EncryptionPropertyARM         networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions         networkRuleSet  NetworkRuleSetARM         policies  PoliciesARM         publicNetworkAccess  RegistryPropertiesPublicNetworkAccess         zoneRedundancy  RegistryPropertiesZoneRedundancy         RegistryPropertiesNetworkRuleBypassOptions (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)  Deprecated version of RegistryPropertiesNetworkRuleBypassOptions. Use v1beta20210901.RegistryPropertiesNetworkRuleBypassOptions instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    RegistryPropertiesPublicNetworkAccess (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)  Deprecated version of RegistryPropertiesPublicNetworkAccess. Use v1beta20210901.RegistryPropertiesPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesStatusNetworkRuleBypassOptions (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)  Deprecated version of RegistryPropertiesStatusNetworkRuleBypassOptions. Use v1beta20210901.RegistryPropertiesStatusNetworkRuleBypassOptions instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    RegistryPropertiesStatusProvisioningState (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)  Deprecated version of RegistryPropertiesStatusProvisioningState. Use v1beta20210901.RegistryPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RegistryPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)  Deprecated version of RegistryPropertiesStatusPublicNetworkAccess. Use v1beta20210901.RegistryPropertiesStatusPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesStatusZoneRedundancy (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)  Deprecated version of RegistryPropertiesStatusZoneRedundancy. Use v1beta20210901.RegistryPropertiesStatusZoneRedundancy instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesZoneRedundancy (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)  Deprecated version of RegistryPropertiesZoneRedundancy. Use v1beta20210901.RegistryPropertiesZoneRedundancy instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryProperties_StatusARM   (Appears on:Registry_StatusARM)  Deprecated version of RegistryProperties_Status. Use v1beta20210901.RegistryProperties_Status instead\n    Field Description      adminUserEnabled  bool        creationDate  string        dataEndpointEnabled  bool        dataEndpointHostNames  []string        encryption  EncryptionProperty_StatusARM         loginServer  string        networkRuleBypassOptions  RegistryPropertiesStatusNetworkRuleBypassOptions         networkRuleSet  NetworkRuleSet_StatusARM         policies  Policies_StatusARM         privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  RegistryPropertiesStatusProvisioningState         publicNetworkAccess  RegistryPropertiesStatusPublicNetworkAccess         status  Status_StatusARM         zoneRedundancy  RegistryPropertiesStatusZoneRedundancy         Registry_Status   (Appears on:Registry)  Deprecated version of Registry_Status. Use v1beta20210901.Registry_Status instead\n    Field Description      adminUserEnabled  bool        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationDate  string        dataEndpointEnabled  bool        dataEndpointHostNames  []string        encryption  EncryptionProperty_Status         id  string        identity  IdentityProperties_Status         location  string        loginServer  string        name  string        networkRuleBypassOptions  RegistryPropertiesStatusNetworkRuleBypassOptions         networkRuleSet  NetworkRuleSet_Status         policies  Policies_Status         privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  RegistryPropertiesStatusProvisioningState         publicNetworkAccess  RegistryPropertiesStatusPublicNetworkAccess         sku  Sku_Status         status  Status_Status         systemData  SystemData_Status         tags  map[string]string        type  string        zoneRedundancy  RegistryPropertiesStatusZoneRedundancy         Registry_StatusARM   Deprecated version of Registry_Status. Use v1beta20210901.Registry_Status instead\n    Field Description      id  string        identity  IdentityProperties_StatusARM         location  string        name  string        properties  RegistryProperties_StatusARM         sku  Sku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        RetentionPolicy   (Appears on:Policies)  Deprecated version of RetentionPolicy. Use v1beta20210901.RetentionPolicy instead\n    Field Description      days  int        status  RetentionPolicyStatus         RetentionPolicyARM   (Appears on:PoliciesARM)  Deprecated version of RetentionPolicy. Use v1beta20210901.RetentionPolicy instead\n    Field Description      days  int        status  RetentionPolicyStatus         RetentionPolicyStatus (string alias)  (Appears on:RetentionPolicy, RetentionPolicyARM)  Deprecated version of RetentionPolicyStatus. Use v1beta20210901.RetentionPolicyStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    RetentionPolicyStatusStatus (string alias)  (Appears on:RetentionPolicy_Status, RetentionPolicy_StatusARM)  Deprecated version of RetentionPolicyStatusStatus. Use v1beta20210901.RetentionPolicyStatusStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    RetentionPolicy_Status   (Appears on:Policies_Status)  Deprecated version of RetentionPolicy_Status. Use v1beta20210901.RetentionPolicy_Status instead\n    Field Description      days  int        lastUpdatedTime  string        status  RetentionPolicyStatusStatus         RetentionPolicy_StatusARM   (Appears on:Policies_StatusARM)  Deprecated version of RetentionPolicy_Status. Use v1beta20210901.RetentionPolicy_Status instead\n    Field Description      days  int        lastUpdatedTime  string        status  RetentionPolicyStatusStatus         Sku   (Appears on:Registries_Spec)  Deprecated version of Sku. Use v1beta20210901.Sku instead\n    Field Description      name  SkuName         SkuARM   (Appears on:Registries_SpecARM)  Deprecated version of Sku. Use v1beta20210901.Sku instead\n    Field Description      name  SkuName         SkuName (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuName. Use v1beta20210901.SkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusName. Use v1beta20210901.SkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusTier. Use v1beta20210901.SkuStatusTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:Registry_Status)  Deprecated version of Sku_Status. Use v1beta20210901.Sku_Status instead\n    Field Description      name  SkuStatusName         tier  SkuStatusTier         Sku_StatusARM   (Appears on:Registry_StatusARM)  Deprecated version of Sku_Status. Use v1beta20210901.Sku_Status instead\n    Field Description      name  SkuStatusName         tier  SkuStatusTier         Status_Status   (Appears on:Registry_Status)  Deprecated version of Status_Status. Use v1beta20210901.Status_Status instead\n    Field Description      displayStatus  string        message  string        timestamp  string        Status_StatusARM   (Appears on:RegistryProperties_StatusARM)  Deprecated version of Status_Status. Use v1beta20210901.Status_Status instead\n    Field Description      displayStatus  string        message  string        timestamp  string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20210901.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20210901.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbedded, Registry_Status)  Deprecated version of SystemData_Status. Use v1beta20210901.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbeddedARM, Registry_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20210901.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         TrustPolicy   (Appears on:Policies)  Deprecated version of TrustPolicy. Use v1beta20210901.TrustPolicy instead\n    Field Description      status  TrustPolicyStatus         type  TrustPolicyType         TrustPolicyARM   (Appears on:PoliciesARM)  Deprecated version of TrustPolicy. Use v1beta20210901.TrustPolicy instead\n    Field Description      status  TrustPolicyStatus         type  TrustPolicyType         TrustPolicyStatus (string alias)  (Appears on:TrustPolicy, TrustPolicyARM)  Deprecated version of TrustPolicyStatus. Use v1beta20210901.TrustPolicyStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    TrustPolicyStatusStatus (string alias)  (Appears on:TrustPolicy_Status, TrustPolicy_StatusARM)  Deprecated version of TrustPolicyStatusStatus. Use v1beta20210901.TrustPolicyStatusStatus instead\n    Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    TrustPolicyStatusType (string alias)  (Appears on:TrustPolicy_Status, TrustPolicy_StatusARM)  Deprecated version of TrustPolicyStatusType. Use v1beta20210901.TrustPolicyStatusType instead\n    Value Description   \u0026#34;Notary\u0026#34;\n    TrustPolicyType (string alias)  (Appears on:TrustPolicy, TrustPolicyARM)  Deprecated version of TrustPolicyType. Use v1beta20210901.TrustPolicyType instead\n    Value Description   \u0026#34;Notary\u0026#34;\n    TrustPolicy_Status   (Appears on:Policies_Status)  Deprecated version of TrustPolicy_Status. Use v1beta20210901.TrustPolicy_Status instead\n    Field Description      status  TrustPolicyStatusStatus         type  TrustPolicyStatusType         TrustPolicy_StatusARM   (Appears on:Policies_StatusARM)  Deprecated version of TrustPolicy_Status. Use v1beta20210901.TrustPolicy_Status instead\n    Field Description      status  TrustPolicyStatusStatus         type  TrustPolicyStatusType         UserIdentityProperties   (Appears on:IdentityProperties)  Deprecated version of UserIdentityProperties. Use v1beta20210901.UserIdentityProperties instead\n    Field Description      clientId  string        principalId  string        UserIdentityPropertiesARM   (Appears on:IdentityPropertiesARM)  Deprecated version of UserIdentityProperties. Use v1beta20210901.UserIdentityProperties instead\n    Field Description      clientId  string        principalId  string        UserIdentityProperties_Status   (Appears on:IdentityProperties_Status)  Deprecated version of UserIdentityProperties_Status. Use v1beta20210901.UserIdentityProperties_Status instead\n    Field Description      clientId  string        principalId  string        UserIdentityProperties_StatusARM   (Appears on:IdentityProperties_StatusARM)  Deprecated version of UserIdentityProperties_Status. Use v1beta20210901.UserIdentityProperties_Status instead\n    Field Description      clientId  string        principalId  string         "},{"id":34,"href":"/azure-service-operator/reference/containerregistry.v1beta20210901/","title":"containerregistry.azure.com/v1beta20210901","section":"References","content":"containerregistry.azure.com/v1beta20210901  Package v1beta20210901 contains API Schema definitions for the containerregistry v1beta20210901 API group\n Resource Types:  EncryptionProperty   (Appears on:Registries_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/EncryptionProperty\n    Field Description      keyVaultProperties  KeyVaultProperties         status  EncryptionPropertyStatus     Status: Indicates whether or not the encryption is enabled for container registry.\n    EncryptionPropertyARM   (Appears on:RegistryPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/EncryptionProperty\n    Field Description      keyVaultProperties  KeyVaultPropertiesARM         status  EncryptionPropertyStatus     Status: Indicates whether or not the encryption is enabled for container registry.\n    EncryptionPropertyStatus (string alias)  (Appears on:EncryptionProperty, EncryptionPropertyARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    EncryptionPropertyStatusStatus (string alias)  (Appears on:EncryptionProperty_Status, EncryptionProperty_StatusARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    EncryptionProperty_Status   (Appears on:Registry_Status)      Field Description      keyVaultProperties  KeyVaultProperties_Status     KeyVaultProperties: Key vault properties.\n    status  EncryptionPropertyStatusStatus     Status: Indicates whether or not the encryption is enabled for container registry.\n    EncryptionProperty_StatusARM   (Appears on:RegistryProperties_StatusARM)      Field Description      keyVaultProperties  KeyVaultProperties_StatusARM     KeyVaultProperties: Key vault properties.\n    status  EncryptionPropertyStatusStatus     Status: Indicates whether or not the encryption is enabled for container registry.\n    ExportPolicy   (Appears on:Policies)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/ExportPolicy\n    Field Description      status  ExportPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    ExportPolicyARM   (Appears on:PoliciesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/ExportPolicy\n    Field Description      status  ExportPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    ExportPolicyStatus (string alias)  (Appears on:ExportPolicy, ExportPolicyARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    ExportPolicyStatusStatus (string alias)  (Appears on:ExportPolicy_Status, ExportPolicy_StatusARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    ExportPolicy_Status   (Appears on:Policies_Status)      Field Description      status  ExportPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    ExportPolicy_StatusARM   (Appears on:Policies_StatusARM)      Field Description      status  ExportPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    IPRule   (Appears on:NetworkRuleSet)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/IPRule\n    Field Description      action  IPRuleAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRuleARM   (Appears on:NetworkRuleSetARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/IPRule\n    Field Description      action  IPRuleAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRuleAction (string alias)  (Appears on:IPRule, IPRuleARM)      Value Description   \u0026#34;Allow\u0026#34;\n    IPRuleStatusAction (string alias)  (Appears on:IPRule_Status, IPRule_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n    IPRule_Status   (Appears on:NetworkRuleSet_Status)      Field Description      action  IPRuleStatusAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)      Field Description      action  IPRuleStatusAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IdentityProperties   (Appears on:Registries_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/IdentityProperties\n    Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityPropertiesType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/containerregistry/v1beta20210901.UserIdentityProperties     UserAssignedIdentities: The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/ providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    IdentityPropertiesARM   (Appears on:Registries_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/IdentityProperties\n    Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityPropertiesType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/containerregistry/v1beta20210901.UserIdentityPropertiesARM     UserAssignedIdentities: The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/ providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    IdentityPropertiesStatusType (string alias)  (Appears on:IdentityProperties_Status, IdentityProperties_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityPropertiesType (string alias)  (Appears on:IdentityProperties, IdentityPropertiesARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityProperties_Status   (Appears on:Registry_Status)      Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityPropertiesStatusType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/containerregistry/v1beta20210901.UserIdentityProperties_Status     UserAssignedIdentities: The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/ providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    IdentityProperties_StatusARM   (Appears on:Registry_StatusARM)      Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityPropertiesStatusType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/containerregistry/v1beta20210901.UserIdentityProperties_StatusARM     UserAssignedIdentities: The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/ providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    KeyVaultProperties   (Appears on:EncryptionProperty)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/KeyVaultProperties\n    Field Description      identity  string    Identity: The client id of the identity which will be used to access key vault.\n    keyIdentifier  string    KeyIdentifier: Key vault uri to access the encryption key.\n    KeyVaultPropertiesARM   (Appears on:EncryptionPropertyARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/KeyVaultProperties\n    Field Description      identity  string    Identity: The client id of the identity which will be used to access key vault.\n    keyIdentifier  string    KeyIdentifier: Key vault uri to access the encryption key.\n    KeyVaultProperties_Status   (Appears on:EncryptionProperty_Status)      Field Description      identity  string    Identity: The client id of the identity which will be used to access key vault.\n    keyIdentifier  string    KeyIdentifier: Key vault uri to access the encryption key.\n    keyRotationEnabled  bool    KeyRotationEnabled: Auto key rotation status for a CMK enabled registry.\n    lastKeyRotationTimestamp  string    LastKeyRotationTimestamp: Timestamp of the last successful key rotation.\n    versionedKeyIdentifier  string    VersionedKeyIdentifier: The fully qualified key identifier that includes the version of the key that is actually used for encryption.\n    KeyVaultProperties_StatusARM   (Appears on:EncryptionProperty_StatusARM)      Field Description      identity  string    Identity: The client id of the identity which will be used to access key vault.\n    keyIdentifier  string    KeyIdentifier: Key vault uri to access the encryption key.\n    keyRotationEnabled  bool    KeyRotationEnabled: Auto key rotation status for a CMK enabled registry.\n    lastKeyRotationTimestamp  string    LastKeyRotationTimestamp: Timestamp of the last successful key rotation.\n    versionedKeyIdentifier  string    VersionedKeyIdentifier: The fully qualified key identifier that includes the version of the key that is actually used for encryption.\n    NetworkRuleSet   (Appears on:Registries_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/NetworkRuleSet\n    Field Description      defaultAction  NetworkRuleSetDefaultAction     DefaultAction: The default action of allow or deny when no other rules match.\n    ipRules  []IPRule     IpRules: The IP ACL rules.\n    NetworkRuleSetARM   (Appears on:RegistryPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/NetworkRuleSet\n    Field Description      defaultAction  NetworkRuleSetDefaultAction     DefaultAction: The default action of allow or deny when no other rules match.\n    ipRules  []IPRuleARM     IpRules: The IP ACL rules.\n    NetworkRuleSetDefaultAction (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSetStatusDefaultAction (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSet_Status   (Appears on:Registry_Status)      Field Description      defaultAction  NetworkRuleSetStatusDefaultAction     DefaultAction: The default action of allow or deny when no other rules match.\n    ipRules  []IPRule_Status     IpRules: The IP ACL rules.\n    NetworkRuleSet_StatusARM   (Appears on:RegistryProperties_StatusARM)      Field Description      defaultAction  NetworkRuleSetStatusDefaultAction     DefaultAction: The default action of allow or deny when no other rules match.\n    ipRules  []IPRule_StatusARM     IpRules: The IP ACL rules.\n    Policies   (Appears on:Registries_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/Policies\n    Field Description      exportPolicy  ExportPolicy     ExportPolicy: The export policy for a container registry.\n    quarantinePolicy  QuarantinePolicy     QuarantinePolicy: The quarantine policy for a container registry.\n    retentionPolicy  RetentionPolicy     RetentionPolicy: The retention policy for a container registry.\n    trustPolicy  TrustPolicy     TrustPolicy: The content trust policy for a container registry.\n    PoliciesARM   (Appears on:RegistryPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/Policies\n    Field Description      exportPolicy  ExportPolicyARM     ExportPolicy: The export policy for a container registry.\n    quarantinePolicy  QuarantinePolicyARM     QuarantinePolicy: The quarantine policy for a container registry.\n    retentionPolicy  RetentionPolicyARM     RetentionPolicy: The retention policy for a container registry.\n    trustPolicy  TrustPolicyARM     TrustPolicy: The content trust policy for a container registry.\n    Policies_Status   (Appears on:Registry_Status)      Field Description      exportPolicy  ExportPolicy_Status     ExportPolicy: The export policy for a container registry.\n    quarantinePolicy  QuarantinePolicy_Status     QuarantinePolicy: The quarantine policy for a container registry.\n    retentionPolicy  RetentionPolicy_Status     RetentionPolicy: The retention policy for a container registry.\n    trustPolicy  TrustPolicy_Status     TrustPolicy: The content trust policy for a container registry.\n    Policies_StatusARM   (Appears on:RegistryProperties_StatusARM)      Field Description      exportPolicy  ExportPolicy_StatusARM     ExportPolicy: The export policy for a container registry.\n    quarantinePolicy  QuarantinePolicy_StatusARM     QuarantinePolicy: The quarantine policy for a container registry.\n    retentionPolicy  RetentionPolicy_StatusARM     RetentionPolicy: The retention policy for a container registry.\n    trustPolicy  TrustPolicy_StatusARM     TrustPolicy: The content trust policy for a container registry.\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:Registry_Status)      Field Description      id  string    Id: The resource ID.\n    systemData  SystemData_Status     SystemData: Metadata pertaining to creation and last modification of the resource.\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:RegistryProperties_StatusARM)      Field Description      id  string    Id: The resource ID.\n    systemData  SystemData_StatusARM     SystemData: Metadata pertaining to creation and last modification of the resource.\n    QuarantinePolicy   (Appears on:Policies)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/QuarantinePolicy\n    Field Description      status  QuarantinePolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    QuarantinePolicyARM   (Appears on:PoliciesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/QuarantinePolicy\n    Field Description      status  QuarantinePolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    QuarantinePolicyStatus (string alias)  (Appears on:QuarantinePolicy, QuarantinePolicyARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    QuarantinePolicyStatusStatus (string alias)  (Appears on:QuarantinePolicy_Status, QuarantinePolicy_StatusARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    QuarantinePolicy_Status   (Appears on:Policies_Status)      Field Description      status  QuarantinePolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    QuarantinePolicy_StatusARM   (Appears on:Policies_StatusARM)      Field Description      status  QuarantinePolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    RegistriesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-09-01\u0026#34;\n    Registries_Spec   (Appears on:Registry)      Field Description      adminUserEnabled  bool    AdminUserEnabled: The value that indicates whether the admin user is enabled.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dataEndpointEnabled  bool    DataEndpointEnabled: Enable a single data endpoint per region for serving data.\n    encryption  EncryptionProperty         identity  IdentityProperties     Identity: Managed identity for the resource.\n    location  string    Location: The location of the resource. This cannot be changed after the resource is created.\n    networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions     NetworkRuleBypassOptions: Whether to allow trusted Azure services to access a network restricted registry.\n    networkRuleSet  NetworkRuleSet     NetworkRuleSet: The network rule set for a container registry.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    policies  Policies     Policies: The policies for a container registry.\n    publicNetworkAccess  RegistryPropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public network access is allowed for the container registry.\n    sku  Sku     Sku: The SKU of a container registry.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundancy  RegistryPropertiesZoneRedundancy     ZoneRedundancy: Whether or not zone redundancy is enabled for this container registry.\n    Registries_SpecARM       Field Description      identity  IdentityPropertiesARM     Identity: Managed identity for the resource.\n    location  string    Location: The location of the resource. This cannot be changed after the resource is created.\n    name  string    Name: The name of the container registry.\n    properties  RegistryPropertiesARM     Properties: The properties of a container registry.\n    sku  SkuARM     Sku: The SKU of a container registry.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Registry   Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/resourceDefinitions/registries\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Registries_Spec          adminUserEnabled  bool    AdminUserEnabled: The value that indicates whether the admin user is enabled.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dataEndpointEnabled  bool    DataEndpointEnabled: Enable a single data endpoint per region for serving data.\n    encryption  EncryptionProperty         identity  IdentityProperties     Identity: Managed identity for the resource.\n    location  string    Location: The location of the resource. This cannot be changed after the resource is created.\n    networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions     NetworkRuleBypassOptions: Whether to allow trusted Azure services to access a network restricted registry.\n    networkRuleSet  NetworkRuleSet     NetworkRuleSet: The network rule set for a container registry.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    policies  Policies     Policies: The policies for a container registry.\n    publicNetworkAccess  RegistryPropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public network access is allowed for the container registry.\n    sku  Sku     Sku: The SKU of a container registry.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundancy  RegistryPropertiesZoneRedundancy     ZoneRedundancy: Whether or not zone redundancy is enabled for this container registry.\n       status  Registry_Status         RegistryPropertiesARM   (Appears on:Registries_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/RegistryProperties\n    Field Description      adminUserEnabled  bool    AdminUserEnabled: The value that indicates whether the admin user is enabled.\n    dataEndpointEnabled  bool    DataEndpointEnabled: Enable a single data endpoint per region for serving data.\n    encryption  EncryptionPropertyARM         networkRuleBypassOptions  RegistryPropertiesNetworkRuleBypassOptions     NetworkRuleBypassOptions: Whether to allow trusted Azure services to access a network restricted registry.\n    networkRuleSet  NetworkRuleSetARM     NetworkRuleSet: The network rule set for a container registry.\n    policies  PoliciesARM     Policies: The policies for a container registry.\n    publicNetworkAccess  RegistryPropertiesPublicNetworkAccess     PublicNetworkAccess: Whether or not public network access is allowed for the container registry.\n    zoneRedundancy  RegistryPropertiesZoneRedundancy     ZoneRedundancy: Whether or not zone redundancy is enabled for this container registry.\n    RegistryPropertiesNetworkRuleBypassOptions (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    RegistryPropertiesPublicNetworkAccess (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesStatusNetworkRuleBypassOptions (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    RegistryPropertiesStatusProvisioningState (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    RegistryPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesStatusZoneRedundancy (string alias)  (Appears on:RegistryProperties_StatusARM, Registry_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryPropertiesZoneRedundancy (string alias)  (Appears on:Registries_Spec, RegistryPropertiesARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    RegistryProperties_StatusARM   (Appears on:Registry_StatusARM)      Field Description      adminUserEnabled  bool    AdminUserEnabled: The value that indicates whether the admin user is enabled.\n    creationDate  string    CreationDate: The creation date of the container registry in ISO8601 format.\n    dataEndpointEnabled  bool    DataEndpointEnabled: Enable a single data endpoint per region for serving data.\n    dataEndpointHostNames  []string    DataEndpointHostNames: List of host names that will serve data when dataEndpointEnabled is true.\n    encryption  EncryptionProperty_StatusARM     Encryption: The encryption settings of container registry.\n    loginServer  string    LoginServer: The URL that can be used to log into the container registry.\n    networkRuleBypassOptions  RegistryPropertiesStatusNetworkRuleBypassOptions     NetworkRuleBypassOptions: Whether to allow trusted Azure services to access a network restricted registry.\n    networkRuleSet  NetworkRuleSet_StatusARM     NetworkRuleSet: The network rule set for a container registry.\n    policies  Policies_StatusARM     Policies: The policies for a container registry.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connections for a container registry.\n    provisioningState  RegistryPropertiesStatusProvisioningState     ProvisioningState: The provisioning state of the container registry at the time the operation was called.\n    publicNetworkAccess  RegistryPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: Whether or not public network access is allowed for the container registry.\n    status  Status_StatusARM     Status: The status of the container registry at the time the operation was called.\n    zoneRedundancy  RegistryPropertiesStatusZoneRedundancy     ZoneRedundancy: Whether or not zone redundancy is enabled for this container registry\n    Registry_Status   (Appears on:Registry)      Field Description      adminUserEnabled  bool    AdminUserEnabled: The value that indicates whether the admin user is enabled.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationDate  string    CreationDate: The creation date of the container registry in ISO8601 format.\n    dataEndpointEnabled  bool    DataEndpointEnabled: Enable a single data endpoint per region for serving data.\n    dataEndpointHostNames  []string    DataEndpointHostNames: List of host names that will serve data when dataEndpointEnabled is true.\n    encryption  EncryptionProperty_Status     Encryption: The encryption settings of container registry.\n    id  string    Id: The resource ID.\n    identity  IdentityProperties_Status     Identity: The identity of the container registry.\n    location  string    Location: The location of the resource. This cannot be changed after the resource is created.\n    loginServer  string    LoginServer: The URL that can be used to log into the container registry.\n    name  string    Name: The name of the resource.\n    networkRuleBypassOptions  RegistryPropertiesStatusNetworkRuleBypassOptions     NetworkRuleBypassOptions: Whether to allow trusted Azure services to access a network restricted registry.\n    networkRuleSet  NetworkRuleSet_Status     NetworkRuleSet: The network rule set for a container registry.\n    policies  Policies_Status     Policies: The policies for a container registry.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connections for a container registry.\n    provisioningState  RegistryPropertiesStatusProvisioningState     ProvisioningState: The provisioning state of the container registry at the time the operation was called.\n    publicNetworkAccess  RegistryPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: Whether or not public network access is allowed for the container registry.\n    sku  Sku_Status     Sku: The SKU of the container registry.\n    status  Status_Status     Status: The status of the container registry at the time the operation was called.\n    systemData  SystemData_Status     SystemData: Metadata pertaining to creation and last modification of the resource.\n    tags  map[string]string    Tags: The tags of the resource.\n    type  string    Type: The type of the resource.\n    zoneRedundancy  RegistryPropertiesStatusZoneRedundancy     ZoneRedundancy: Whether or not zone redundancy is enabled for this container registry\n    Registry_StatusARM       Field Description      id  string    Id: The resource ID.\n    identity  IdentityProperties_StatusARM     Identity: The identity of the container registry.\n    location  string    Location: The location of the resource. This cannot be changed after the resource is created.\n    name  string    Name: The name of the resource.\n    properties  RegistryProperties_StatusARM     Properties: The properties of the container registry.\n    sku  Sku_StatusARM     Sku: The SKU of the container registry.\n    systemData  SystemData_StatusARM     SystemData: Metadata pertaining to creation and last modification of the resource.\n    tags  map[string]string    Tags: The tags of the resource.\n    type  string    Type: The type of the resource.\n    RetentionPolicy   (Appears on:Policies)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/RetentionPolicy\n    Field Description      days  int    Days: The number of days to retain an untagged manifest after which it gets purged.\n    status  RetentionPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    RetentionPolicyARM   (Appears on:PoliciesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/RetentionPolicy\n    Field Description      days  int    Days: The number of days to retain an untagged manifest after which it gets purged.\n    status  RetentionPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    RetentionPolicyStatus (string alias)  (Appears on:RetentionPolicy, RetentionPolicyARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    RetentionPolicyStatusStatus (string alias)  (Appears on:RetentionPolicy_Status, RetentionPolicy_StatusARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    RetentionPolicy_Status   (Appears on:Policies_Status)      Field Description      days  int    Days: The number of days to retain an untagged manifest after which it gets purged.\n    lastUpdatedTime  string    LastUpdatedTime: The timestamp when the policy was last updated.\n    status  RetentionPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    RetentionPolicy_StatusARM   (Appears on:Policies_StatusARM)      Field Description      days  int    Days: The number of days to retain an untagged manifest after which it gets purged.\n    lastUpdatedTime  string    LastUpdatedTime: The timestamp when the policy was last updated.\n    status  RetentionPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    Sku   (Appears on:Registries_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/Sku\n    Field Description      name  SkuName     Name: The SKU name of the container registry. Required for registry creation.\n    SkuARM   (Appears on:Registries_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/Sku\n    Field Description      name  SkuName     Name: The SKU name of the container registry. Required for registry creation.\n    SkuName (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Classic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:Registry_Status)      Field Description      name  SkuStatusName     Name: The SKU name of the container registry. Required for registry creation.\n    tier  SkuStatusTier     Tier: The SKU tier based on the SKU name.\n    Sku_StatusARM   (Appears on:Registry_StatusARM)      Field Description      name  SkuStatusName     Name: The SKU name of the container registry. Required for registry creation.\n    tier  SkuStatusTier     Tier: The SKU tier based on the SKU name.\n    Status_Status   (Appears on:Registry_Status)      Field Description      displayStatus  string    DisplayStatus: The short label for the status.\n    message  string    Message: The detailed message for the status, including alerts and error messages.\n    timestamp  string    Timestamp: The timestamp when the status was changed to the current value.\n    Status_StatusARM   (Appears on:RegistryProperties_StatusARM)      Field Description      displayStatus  string    DisplayStatus: The short label for the status.\n    message  string    Message: The detailed message for the status, including alerts and error messages.\n    timestamp  string    Timestamp: The timestamp when the status was changed to the current value.\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbedded, Registry_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource modification (UTC).\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbeddedARM, Registry_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource modification (UTC).\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    TrustPolicy   (Appears on:Policies)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/TrustPolicy\n    Field Description      status  TrustPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    type  TrustPolicyType     Type: The type of trust policy.\n    TrustPolicyARM   (Appears on:PoliciesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/TrustPolicy\n    Field Description      status  TrustPolicyStatus     Status: The value that indicates whether the policy is enabled or not.\n    type  TrustPolicyType     Type: The type of trust policy.\n    TrustPolicyStatus (string alias)  (Appears on:TrustPolicy, TrustPolicyARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    TrustPolicyStatusStatus (string alias)  (Appears on:TrustPolicy_Status, TrustPolicy_StatusARM)      Value Description   \u0026#34;disabled\u0026#34;\n  \u0026#34;enabled\u0026#34;\n    TrustPolicyStatusType (string alias)  (Appears on:TrustPolicy_Status, TrustPolicy_StatusARM)      Value Description   \u0026#34;Notary\u0026#34;\n    TrustPolicyType (string alias)  (Appears on:TrustPolicy, TrustPolicyARM)      Value Description   \u0026#34;Notary\u0026#34;\n    TrustPolicy_Status   (Appears on:Policies_Status)      Field Description      status  TrustPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    type  TrustPolicyStatusType     Type: The type of trust policy.\n    TrustPolicy_StatusARM   (Appears on:Policies_StatusARM)      Field Description      status  TrustPolicyStatusStatus     Status: The value that indicates whether the policy is enabled or not.\n    type  TrustPolicyStatusType     Type: The type of trust policy.\n    UserIdentityProperties   (Appears on:IdentityProperties)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/UserIdentityProperties\n    Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    UserIdentityPropertiesARM   (Appears on:IdentityPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-09-01/Microsoft.ContainerRegistry.json#/definitions/UserIdentityProperties\n    Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    UserIdentityProperties_Status   (Appears on:IdentityProperties_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    UserIdentityProperties_StatusARM   (Appears on:IdentityProperties_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n     "},{"id":35,"href":"/azure-service-operator/reference/containerservice.v1alpha1api20210501/","title":"containerservice.azure.com/v1alpha1api20210501","section":"References","content":"containerservice.azure.com/v1alpha1api20210501  Package v1alpha1api20210501 contains API Schema definitions for the containerservice v1alpha1api20210501 API group\n Resource Types:  AgentPoolMode_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of AgentPoolMode_Status. Use v1beta20210501.AgentPoolMode_Status instead\n    Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    AgentPoolType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of AgentPoolType_Status. Use v1beta20210501.AgentPoolType_Status instead\n    Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    AgentPoolUpgradeSettings   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Deprecated version of AgentPoolUpgradeSettings. Use v1beta20210501.AgentPoolUpgradeSettings instead\n    Field Description      maxSurge  string        AgentPoolUpgradeSettingsARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Deprecated version of AgentPoolUpgradeSettings. Use v1beta20210501.AgentPoolUpgradeSettings instead\n    Field Description      maxSurge  string        AgentPoolUpgradeSettings_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)  Deprecated version of AgentPoolUpgradeSettings_Status. Use v1beta20210501.AgentPoolUpgradeSettings_Status instead\n    Field Description      maxSurge  string        AgentPoolUpgradeSettings_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of AgentPoolUpgradeSettings_Status. Use v1beta20210501.AgentPoolUpgradeSettings_Status instead\n    Field Description      maxSurge  string        AgentPool_Status   (Appears on:ManagedClustersAgentPool)  Deprecated version of AgentPool_Status. Use v1beta20210501.AgentPool_Status instead\n    Field Description      availabilityZones  []string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  GPUInstanceProfile_Status         id  string        kubeletConfig  KubeletConfig_Status         kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_Status         maxCount  int        maxPods  int        minCount  int        mode  AgentPoolMode_Status         name  string        nodeImageVersion  string        nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string        powerState  PowerState_Status         properties_type  AgentPoolType_Status         provisioningState  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status         scaleSetPriority  ScaleSetPriority_Status         spotMaxPrice  float64        tags  map[string]string        type  string        upgradeSettings  AgentPoolUpgradeSettings_Status         vmSize  string        vnetSubnetID  string        AgentPool_StatusARM   Deprecated version of AgentPool_Status. Use v1beta20210501.AgentPool_Status instead\n    Field Description      id  string        name  string        properties  ManagedClusterAgentPoolProfileProperties_StatusARM         type  string        Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties   (Appears on:ManagedClusters_Spec)  Deprecated version of Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties. Use v1beta20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties instead\n    Field Description      clientId  string        objectId  string        resourceReference  genruntime.ResourceReference         Componentsqit0EtschemasmanagedclusterpropertiespropertiesidentityprofileadditionalpropertiesARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties. Use v1beta20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties instead\n    Field Description      clientId  string        objectId  string        resourceId  string        ContainerServiceLinuxProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ContainerServiceLinuxProfile. Use v1beta20210501.ContainerServiceLinuxProfile instead\n    Field Description      adminUsername  string        ssh  ContainerServiceSshConfiguration         ContainerServiceLinuxProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ContainerServiceLinuxProfile. Use v1beta20210501.ContainerServiceLinuxProfile instead\n    Field Description      adminUsername  string        ssh  ContainerServiceSshConfigurationARM         ContainerServiceLinuxProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ContainerServiceLinuxProfile_Status. Use v1beta20210501.ContainerServiceLinuxProfile_Status instead\n    Field Description      adminUsername  string        ssh  ContainerServiceSshConfiguration_Status         ContainerServiceLinuxProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ContainerServiceLinuxProfile_Status. Use v1beta20210501.ContainerServiceLinuxProfile_Status instead\n    Field Description      adminUsername  string        ssh  ContainerServiceSshConfiguration_StatusARM         ContainerServiceNetworkProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ContainerServiceNetworkProfile. Use v1beta20210501.ContainerServiceNetworkProfile instead\n    Field Description      dnsServiceIP  string        dockerBridgeCidr  string        loadBalancerProfile  ManagedClusterLoadBalancerProfile         loadBalancerSku  ContainerServiceNetworkProfileLoadBalancerSku         networkMode  ContainerServiceNetworkProfileNetworkMode         networkPlugin  ContainerServiceNetworkProfileNetworkPlugin         networkPolicy  ContainerServiceNetworkProfileNetworkPolicy         outboundType  ContainerServiceNetworkProfileOutboundType         podCidr  string        serviceCidr  string        ContainerServiceNetworkProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ContainerServiceNetworkProfile. Use v1beta20210501.ContainerServiceNetworkProfile instead\n    Field Description      dnsServiceIP  string        dockerBridgeCidr  string        loadBalancerProfile  ManagedClusterLoadBalancerProfileARM         loadBalancerSku  ContainerServiceNetworkProfileLoadBalancerSku         networkMode  ContainerServiceNetworkProfileNetworkMode         networkPlugin  ContainerServiceNetworkProfileNetworkPlugin         networkPolicy  ContainerServiceNetworkProfileNetworkPolicy         outboundType  ContainerServiceNetworkProfileOutboundType         podCidr  string        serviceCidr  string        ContainerServiceNetworkProfileLoadBalancerSku (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)  Deprecated version of ContainerServiceNetworkProfileLoadBalancerSku. Use v1beta20210501.ContainerServiceNetworkProfileLoadBalancerSku instead\n    Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;standard\u0026#34;\n    ContainerServiceNetworkProfileNetworkMode (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)  Deprecated version of ContainerServiceNetworkProfileNetworkMode. Use v1beta20210501.ContainerServiceNetworkProfileNetworkMode instead\n    Value Description   \u0026#34;bridge\u0026#34;\n  \u0026#34;transparent\u0026#34;\n    ContainerServiceNetworkProfileNetworkPlugin (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)  Deprecated version of ContainerServiceNetworkProfileNetworkPlugin. Use v1beta20210501.ContainerServiceNetworkProfileNetworkPlugin instead\n    Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;kubenet\u0026#34;\n    ContainerServiceNetworkProfileNetworkPolicy (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)  Deprecated version of ContainerServiceNetworkProfileNetworkPolicy. Use v1beta20210501.ContainerServiceNetworkProfileNetworkPolicy instead\n    Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;calico\u0026#34;\n    ContainerServiceNetworkProfileOutboundType (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)  Deprecated version of ContainerServiceNetworkProfileOutboundType. Use v1beta20210501.ContainerServiceNetworkProfileOutboundType instead\n    Value Description   \u0026#34;loadBalancer\u0026#34;\n  \u0026#34;userDefinedRouting\u0026#34;\n    ContainerServiceNetworkProfileStatusLoadBalancerSku (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ContainerServiceNetworkProfileStatusLoadBalancerSku. Use v1beta20210501.ContainerServiceNetworkProfileStatusLoadBalancerSku instead\n    Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;standard\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkMode (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ContainerServiceNetworkProfileStatusNetworkMode. Use v1beta20210501.ContainerServiceNetworkProfileStatusNetworkMode instead\n    Value Description   \u0026#34;bridge\u0026#34;\n  \u0026#34;transparent\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkPlugin (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ContainerServiceNetworkProfileStatusNetworkPlugin. Use v1beta20210501.ContainerServiceNetworkProfileStatusNetworkPlugin instead\n    Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;kubenet\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkPolicy (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ContainerServiceNetworkProfileStatusNetworkPolicy. Use v1beta20210501.ContainerServiceNetworkProfileStatusNetworkPolicy instead\n    Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;calico\u0026#34;\n    ContainerServiceNetworkProfileStatusOutboundType (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ContainerServiceNetworkProfileStatusOutboundType. Use v1beta20210501.ContainerServiceNetworkProfileStatusOutboundType instead\n    Value Description   \u0026#34;loadBalancer\u0026#34;\n  \u0026#34;userDefinedRouting\u0026#34;\n    ContainerServiceNetworkProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ContainerServiceNetworkProfile_Status. Use v1beta20210501.ContainerServiceNetworkProfile_Status instead\n    Field Description      dnsServiceIP  string        dockerBridgeCidr  string        loadBalancerProfile  ManagedClusterLoadBalancerProfile_Status         loadBalancerSku  ContainerServiceNetworkProfileStatusLoadBalancerSku         networkMode  ContainerServiceNetworkProfileStatusNetworkMode         networkPlugin  ContainerServiceNetworkProfileStatusNetworkPlugin         networkPolicy  ContainerServiceNetworkProfileStatusNetworkPolicy         outboundType  ContainerServiceNetworkProfileStatusOutboundType         podCidr  string        serviceCidr  string        ContainerServiceNetworkProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ContainerServiceNetworkProfile_Status. Use v1beta20210501.ContainerServiceNetworkProfile_Status instead\n    Field Description      dnsServiceIP  string        dockerBridgeCidr  string        loadBalancerProfile  ManagedClusterLoadBalancerProfile_StatusARM         loadBalancerSku  ContainerServiceNetworkProfileStatusLoadBalancerSku         networkMode  ContainerServiceNetworkProfileStatusNetworkMode         networkPlugin  ContainerServiceNetworkProfileStatusNetworkPlugin         networkPolicy  ContainerServiceNetworkProfileStatusNetworkPolicy         outboundType  ContainerServiceNetworkProfileStatusOutboundType         podCidr  string        serviceCidr  string        ContainerServiceSshConfiguration   (Appears on:ContainerServiceLinuxProfile)  Deprecated version of ContainerServiceSshConfiguration. Use v1beta20210501.ContainerServiceSshConfiguration instead\n    Field Description      publicKeys  []ContainerServiceSshPublicKey         ContainerServiceSshConfigurationARM   (Appears on:ContainerServiceLinuxProfileARM)  Deprecated version of ContainerServiceSshConfiguration. Use v1beta20210501.ContainerServiceSshConfiguration instead\n    Field Description      publicKeys  []ContainerServiceSshPublicKeyARM         ContainerServiceSshConfiguration_Status   (Appears on:ContainerServiceLinuxProfile_Status)  Deprecated version of ContainerServiceSshConfiguration_Status. Use v1beta20210501.ContainerServiceSshConfiguration_Status instead\n    Field Description      publicKeys  []ContainerServiceSshPublicKey_Status         ContainerServiceSshConfiguration_StatusARM   (Appears on:ContainerServiceLinuxProfile_StatusARM)  Deprecated version of ContainerServiceSshConfiguration_Status. Use v1beta20210501.ContainerServiceSshConfiguration_Status instead\n    Field Description      publicKeys  []ContainerServiceSshPublicKey_StatusARM         ContainerServiceSshPublicKey   (Appears on:ContainerServiceSshConfiguration)  Deprecated version of ContainerServiceSshPublicKey. Use v1beta20210501.ContainerServiceSshPublicKey instead\n    Field Description      keyData  string        ContainerServiceSshPublicKeyARM   (Appears on:ContainerServiceSshConfigurationARM)  Deprecated version of ContainerServiceSshPublicKey. Use v1beta20210501.ContainerServiceSshPublicKey instead\n    Field Description      keyData  string        ContainerServiceSshPublicKey_Status   (Appears on:ContainerServiceSshConfiguration_Status)  Deprecated version of ContainerServiceSshPublicKey_Status. Use v1beta20210501.ContainerServiceSshPublicKey_Status instead\n    Field Description      keyData  string        ContainerServiceSshPublicKey_StatusARM   (Appears on:ContainerServiceSshConfiguration_StatusARM)  Deprecated version of ContainerServiceSshPublicKey_Status. Use v1beta20210501.ContainerServiceSshPublicKey_Status instead\n    Field Description      keyData  string        ExtendedLocation   (Appears on:ManagedClusters_Spec)  Deprecated version of ExtendedLocation. Use v1beta20210501.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:ManagedClusters_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20210501.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20210501.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20210501.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20210501.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:ManagedCluster_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20210501.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         GPUInstanceProfile_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of GPUInstanceProfile_Status. Use v1beta20210501.GPUInstanceProfile_Status instead\n    Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    KubeletConfig   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Deprecated version of KubeletConfig. Use v1beta20210501.KubeletConfig instead\n    Field Description      allowedUnsafeSysctls  []string        containerLogMaxFiles  int        containerLogMaxSizeMB  int        cpuCfsQuota  bool        cpuCfsQuotaPeriod  string        cpuManagerPolicy  string        failSwapOn  bool        imageGcHighThreshold  int        imageGcLowThreshold  int        podMaxPids  int        topologyManagerPolicy  string        KubeletConfigARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Deprecated version of KubeletConfig. Use v1beta20210501.KubeletConfig instead\n    Field Description      allowedUnsafeSysctls  []string        containerLogMaxFiles  int        containerLogMaxSizeMB  int        cpuCfsQuota  bool        cpuCfsQuotaPeriod  string        cpuManagerPolicy  string        failSwapOn  bool        imageGcHighThreshold  int        imageGcLowThreshold  int        podMaxPids  int        topologyManagerPolicy  string        KubeletConfig_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)  Deprecated version of KubeletConfig_Status. Use v1beta20210501.KubeletConfig_Status instead\n    Field Description      allowedUnsafeSysctls  []string        containerLogMaxFiles  int        containerLogMaxSizeMB  int        cpuCfsQuota  bool        cpuCfsQuotaPeriod  string        cpuManagerPolicy  string        failSwapOn  bool        imageGcHighThreshold  int        imageGcLowThreshold  int        podMaxPids  int        topologyManagerPolicy  string        KubeletConfig_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of KubeletConfig_Status. Use v1beta20210501.KubeletConfig_Status instead\n    Field Description      allowedUnsafeSysctls  []string        containerLogMaxFiles  int        containerLogMaxSizeMB  int        cpuCfsQuota  bool        cpuCfsQuotaPeriod  string        cpuManagerPolicy  string        failSwapOn  bool        imageGcHighThreshold  int        imageGcLowThreshold  int        podMaxPids  int        topologyManagerPolicy  string        KubeletDiskType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of KubeletDiskType_Status. Use v1beta20210501.KubeletDiskType_Status instead\n    Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    LinuxOSConfig   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Deprecated version of LinuxOSConfig. Use v1beta20210501.LinuxOSConfig instead\n    Field Description      swapFileSizeMB  int        sysctls  SysctlConfig         transparentHugePageDefrag  string        transparentHugePageEnabled  string        LinuxOSConfigARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Deprecated version of LinuxOSConfig. Use v1beta20210501.LinuxOSConfig instead\n    Field Description      swapFileSizeMB  int        sysctls  SysctlConfigARM         transparentHugePageDefrag  string        transparentHugePageEnabled  string        LinuxOSConfig_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)  Deprecated version of LinuxOSConfig_Status. Use v1beta20210501.LinuxOSConfig_Status instead\n    Field Description      swapFileSizeMB  int        sysctls  SysctlConfig_Status         transparentHugePageDefrag  string        transparentHugePageEnabled  string        LinuxOSConfig_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of LinuxOSConfig_Status. Use v1beta20210501.LinuxOSConfig_Status instead\n    Field Description      swapFileSizeMB  int        sysctls  SysctlConfig_StatusARM         transparentHugePageDefrag  string        transparentHugePageEnabled  string        ManagedCluster   Deprecated version of ManagedCluster. Use v1beta20210501.ManagedCluster instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ManagedClusters_Spec          aadProfile  ManagedClusterAADProfile         addonProfiles  map[string]./api/containerservice/v1alpha1api20210501.ManagedClusterAddonProfile         agentPoolProfiles  []ManagedClusterAgentPoolProfile         apiServerAccessProfile  ManagedClusterAPIServerAccessProfile         autoScalerProfile  ManagedClusterPropertiesAutoScalerProfile         autoUpgradeProfile  ManagedClusterAutoUpgradeProfile         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    disableLocalAccounts  bool        diskEncryptionSetIDReference  genruntime.ResourceReference         dnsPrefix  string        enablePodSecurityPolicy  bool        enableRBAC  bool        extendedLocation  ExtendedLocation         fqdnSubdomain  string        httpProxyConfig  ManagedClusterHTTPProxyConfig         identity  ManagedClusterIdentity         identityProfile  map[string]./api/containerservice/v1alpha1api20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties         kubernetesVersion  string        linuxProfile  ContainerServiceLinuxProfile         location  string        networkProfile  ContainerServiceNetworkProfile         nodeResourceGroup  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    podIdentityProfile  ManagedClusterPodIdentityProfile         privateLinkResources  []PrivateLinkResource         servicePrincipalProfile  ManagedClusterServicePrincipalProfile         sku  ManagedClusterSKU         tags  map[string]string        windowsProfile  ManagedClusterWindowsProfile            status  ManagedCluster_Status         ManagedClusterAADProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterAADProfile. Use v1beta20210501.ManagedClusterAADProfile instead\n    Field Description      adminGroupObjectIDs  []string        clientAppID  string        enableAzureRBAC  bool        managed  bool        serverAppID  string        serverAppSecret  string        tenantID  string        ManagedClusterAADProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterAADProfile. Use v1beta20210501.ManagedClusterAADProfile instead\n    Field Description      adminGroupObjectIDs  []string        clientAppID  string        enableAzureRBAC  bool        managed  bool        serverAppID  string        serverAppSecret  string        tenantID  string        ManagedClusterAADProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterAADProfile_Status. Use v1beta20210501.ManagedClusterAADProfile_Status instead\n    Field Description      adminGroupObjectIDs  []string        clientAppID  string        enableAzureRBAC  bool        managed  bool        serverAppID  string        serverAppSecret  string        tenantID  string        ManagedClusterAADProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterAADProfile_Status. Use v1beta20210501.ManagedClusterAADProfile_Status instead\n    Field Description      adminGroupObjectIDs  []string        clientAppID  string        enableAzureRBAC  bool        managed  bool        serverAppID  string        serverAppSecret  string        tenantID  string        ManagedClusterAPIServerAccessProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterAPIServerAccessProfile. Use v1beta20210501.ManagedClusterAPIServerAccessProfile instead\n    Field Description      authorizedIPRanges  []string        enablePrivateCluster  bool        enablePrivateClusterPublicFQDN  bool        privateDNSZone  string        ManagedClusterAPIServerAccessProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterAPIServerAccessProfile. Use v1beta20210501.ManagedClusterAPIServerAccessProfile instead\n    Field Description      authorizedIPRanges  []string        enablePrivateCluster  bool        enablePrivateClusterPublicFQDN  bool        privateDNSZone  string        ManagedClusterAPIServerAccessProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterAPIServerAccessProfile_Status. Use v1beta20210501.ManagedClusterAPIServerAccessProfile_Status instead\n    Field Description      authorizedIPRanges  []string        enablePrivateCluster  bool        enablePrivateClusterPublicFQDN  bool        privateDNSZone  string        ManagedClusterAPIServerAccessProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterAPIServerAccessProfile_Status. Use v1beta20210501.ManagedClusterAPIServerAccessProfile_Status instead\n    Field Description      authorizedIPRanges  []string        enablePrivateCluster  bool        enablePrivateClusterPublicFQDN  bool        privateDNSZone  string        ManagedClusterAddonProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterAddonProfile. Use v1beta20210501.ManagedClusterAddonProfile instead\n    Field Description      config  map[string]string        enabled  bool        ManagedClusterAddonProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterAddonProfile. Use v1beta20210501.ManagedClusterAddonProfile instead\n    Field Description      config  map[string]string        enabled  bool        ManagedClusterAgentPoolProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterAgentPoolProfile. Use v1beta20210501.ManagedClusterAgentPoolProfile instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  ManagedClusterAgentPoolProfileGpuInstanceProfile         kubeletConfig  KubeletConfig         kubeletDiskType  ManagedClusterAgentPoolProfileKubeletDiskType         linuxOSConfig  LinuxOSConfig         maxCount  int        maxPods  int        minCount  int        mode  ManagedClusterAgentPoolProfileMode         name  string        nodeLabels  map[string]string        nodePublicIPPrefixIDReference  genruntime.ResourceReference         nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  ManagedClusterAgentPoolProfileOsDiskType         osSKU  ManagedClusterAgentPoolProfileOsSKU         osType  ManagedClusterAgentPoolProfileOsType         podSubnetIDReference  genruntime.ResourceReference         proximityPlacementGroupID  string        scaleSetEvictionPolicy  ManagedClusterAgentPoolProfileScaleSetEvictionPolicy         scaleSetPriority  ManagedClusterAgentPoolProfileScaleSetPriority         spotMaxPrice  float64        tags  map[string]string        type  ManagedClusterAgentPoolProfileType         upgradeSettings  AgentPoolUpgradeSettings         vmSize  string        vnetSubnetIDReference  genruntime.ResourceReference         ManagedClusterAgentPoolProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterAgentPoolProfile. Use v1beta20210501.ManagedClusterAgentPoolProfile instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  ManagedClusterAgentPoolProfileGpuInstanceProfile         kubeletConfig  KubeletConfigARM         kubeletDiskType  ManagedClusterAgentPoolProfileKubeletDiskType         linuxOSConfig  LinuxOSConfigARM         maxCount  int        maxPods  int        minCount  int        mode  ManagedClusterAgentPoolProfileMode         name  string        nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  ManagedClusterAgentPoolProfileOsDiskType         osSKU  ManagedClusterAgentPoolProfileOsSKU         osType  ManagedClusterAgentPoolProfileOsType         podSubnetID  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ManagedClusterAgentPoolProfileScaleSetEvictionPolicy         scaleSetPriority  ManagedClusterAgentPoolProfileScaleSetPriority         spotMaxPrice  float64        tags  map[string]string        type  ManagedClusterAgentPoolProfileType         upgradeSettings  AgentPoolUpgradeSettingsARM         vmSize  string        vnetSubnetID  string        ManagedClusterAgentPoolProfileGpuInstanceProfile (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileGpuInstanceProfile. Use v1beta20210501.ManagedClusterAgentPoolProfileGpuInstanceProfile instead\n    Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    ManagedClusterAgentPoolProfileKubeletDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileKubeletDiskType. Use v1beta20210501.ManagedClusterAgentPoolProfileKubeletDiskType instead\n    Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    ManagedClusterAgentPoolProfileMode (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileMode. Use v1beta20210501.ManagedClusterAgentPoolProfileMode instead\n    Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    ManagedClusterAgentPoolProfileOsDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileOsDiskType. Use v1beta20210501.ManagedClusterAgentPoolProfileOsDiskType instead\n    Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    ManagedClusterAgentPoolProfileOsSKU (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileOsSKU. Use v1beta20210501.ManagedClusterAgentPoolProfileOsSKU instead\n    Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    ManagedClusterAgentPoolProfileOsType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileOsType. Use v1beta20210501.ManagedClusterAgentPoolProfileOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesARM   (Appears on:ManagedClustersAgentPools_SpecARM)  Deprecated version of ManagedClusterAgentPoolProfileProperties. Use v1beta20210501.ManagedClusterAgentPoolProfileProperties instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile         kubeletConfig  KubeletConfigARM         kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfigARM         maxCount  int        maxPods  int        minCount  int        mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         podSubnetID  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy         scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority         spotMaxPrice  float64        tags  map[string]string        type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettingsARM         vmSize  string        vnetSubnetID  string        ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile instead\n    Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesKubeletDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesKubeletDiskType. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesKubeletDiskType instead\n    Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesMode (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesMode. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesMode instead\n    Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesOsDiskType. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesOsDiskType instead\n    Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsSKU (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesOsSKU. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesOsSKU instead\n    Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesOsType. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesOsType instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesScaleSetPriority (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesScaleSetPriority. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesScaleSetPriority instead\n    Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)  Deprecated version of ManagedClusterAgentPoolProfilePropertiesType. Use v1beta20210501.ManagedClusterAgentPoolProfilePropertiesType instead\n    Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    ManagedClusterAgentPoolProfileProperties_StatusARM   (Appears on:AgentPool_StatusARM)  Deprecated version of ManagedClusterAgentPoolProfileProperties_Status. Use v1beta20210501.ManagedClusterAgentPoolProfileProperties_Status instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  GPUInstanceProfile_Status         kubeletConfig  KubeletConfig_StatusARM         kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_StatusARM         maxCount  int        maxPods  int        minCount  int        mode  AgentPoolMode_Status         nodeImageVersion  string        nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string        powerState  PowerState_StatusARM         provisioningState  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status         scaleSetPriority  ScaleSetPriority_Status         spotMaxPrice  float64        tags  map[string]string        type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_StatusARM         vmSize  string        vnetSubnetID  string        ManagedClusterAgentPoolProfileScaleSetEvictionPolicy (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileScaleSetEvictionPolicy. Use v1beta20210501.ManagedClusterAgentPoolProfileScaleSetEvictionPolicy instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ManagedClusterAgentPoolProfileScaleSetPriority (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileScaleSetPriority. Use v1beta20210501.ManagedClusterAgentPoolProfileScaleSetPriority instead\n    Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    ManagedClusterAgentPoolProfileType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)  Deprecated version of ManagedClusterAgentPoolProfileType. Use v1beta20210501.ManagedClusterAgentPoolProfileType instead\n    Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    ManagedClusterAgentPoolProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterAgentPoolProfile_Status. Use v1beta20210501.ManagedClusterAgentPoolProfile_Status instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  GPUInstanceProfile_Status         kubeletConfig  KubeletConfig_Status         kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_Status         maxCount  int        maxPods  int        minCount  int        mode  AgentPoolMode_Status         name  string        nodeImageVersion  string        nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string        powerState  PowerState_Status         provisioningState  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status         scaleSetPriority  ScaleSetPriority_Status         spotMaxPrice  float64        tags  map[string]string        type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_Status         vmSize  string        vnetSubnetID  string        ManagedClusterAgentPoolProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterAgentPoolProfile_Status. Use v1beta20210501.ManagedClusterAgentPoolProfile_Status instead\n    Field Description      availabilityZones  []string        count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  GPUInstanceProfile_Status         kubeletConfig  KubeletConfig_StatusARM         kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_StatusARM         maxCount  int        maxPods  int        minCount  int        mode  AgentPoolMode_Status         name  string        nodeImageVersion  string        nodeLabels  map[string]string        nodePublicIPPrefixID  string        nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string        powerState  PowerState_StatusARM         provisioningState  string        proximityPlacementGroupID  string        scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status         scaleSetPriority  ScaleSetPriority_Status         spotMaxPrice  float64        tags  map[string]string        type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_StatusARM         vmSize  string        vnetSubnetID  string        ManagedClusterAutoUpgradeProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterAutoUpgradeProfile. Use v1beta20210501.ManagedClusterAutoUpgradeProfile instead\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileUpgradeChannel         ManagedClusterAutoUpgradeProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterAutoUpgradeProfile. Use v1beta20210501.ManagedClusterAutoUpgradeProfile instead\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileUpgradeChannel         ManagedClusterAutoUpgradeProfileStatusUpgradeChannel (string alias)  (Appears on:ManagedClusterAutoUpgradeProfile_Status, ManagedClusterAutoUpgradeProfile_StatusARM)  Deprecated version of ManagedClusterAutoUpgradeProfileStatusUpgradeChannel. Use v1beta20210501.ManagedClusterAutoUpgradeProfileStatusUpgradeChannel instead\n    Value Description   \u0026#34;node-image\u0026#34;\n  \u0026#34;none\u0026#34;\n  \u0026#34;patch\u0026#34;\n  \u0026#34;rapid\u0026#34;\n  \u0026#34;stable\u0026#34;\n    ManagedClusterAutoUpgradeProfileUpgradeChannel (string alias)  (Appears on:ManagedClusterAutoUpgradeProfile, ManagedClusterAutoUpgradeProfileARM)  Deprecated version of ManagedClusterAutoUpgradeProfileUpgradeChannel. Use v1beta20210501.ManagedClusterAutoUpgradeProfileUpgradeChannel instead\n    Value Description   \u0026#34;node-image\u0026#34;\n  \u0026#34;none\u0026#34;\n  \u0026#34;patch\u0026#34;\n  \u0026#34;rapid\u0026#34;\n  \u0026#34;stable\u0026#34;\n    ManagedClusterAutoUpgradeProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterAutoUpgradeProfile_Status. Use v1beta20210501.ManagedClusterAutoUpgradeProfile_Status instead\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileStatusUpgradeChannel         ManagedClusterAutoUpgradeProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterAutoUpgradeProfile_Status. Use v1beta20210501.ManagedClusterAutoUpgradeProfile_Status instead\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileStatusUpgradeChannel         ManagedClusterHTTPProxyConfig   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterHTTPProxyConfig. Use v1beta20210501.ManagedClusterHTTPProxyConfig instead\n    Field Description      httpProxy  string        httpsProxy  string        noProxy  []string        trustedCa  string        ManagedClusterHTTPProxyConfigARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterHTTPProxyConfig. Use v1beta20210501.ManagedClusterHTTPProxyConfig instead\n    Field Description      httpProxy  string        httpsProxy  string        noProxy  []string        trustedCa  string        ManagedClusterHTTPProxyConfig_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterHTTPProxyConfig_Status. Use v1beta20210501.ManagedClusterHTTPProxyConfig_Status instead\n    Field Description      httpProxy  string        httpsProxy  string        noProxy  []string        trustedCa  string        ManagedClusterHTTPProxyConfig_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterHTTPProxyConfig_Status. Use v1beta20210501.ManagedClusterHTTPProxyConfig_Status instead\n    Field Description      httpProxy  string        httpsProxy  string        noProxy  []string        trustedCa  string        ManagedClusterIdentity   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterIdentity. Use v1beta20210501.ManagedClusterIdentity instead\n    Field Description      type  ManagedClusterIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         ManagedClusterIdentityARM   (Appears on:ManagedClusters_SpecARM)  Deprecated version of ManagedClusterIdentity. Use v1beta20210501.ManagedClusterIdentity instead\n    Field Description      type  ManagedClusterIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         ManagedClusterIdentityStatusType (string alias)  (Appears on:ManagedClusterIdentity_Status, ManagedClusterIdentity_StatusARM)  Deprecated version of ManagedClusterIdentityStatusType. Use v1beta20210501.ManagedClusterIdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedClusterIdentityType (string alias)  (Appears on:ManagedClusterIdentity, ManagedClusterIdentityARM)  Deprecated version of ManagedClusterIdentityType. Use v1beta20210501.ManagedClusterIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedClusterIdentity_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterIdentity_Status. Use v1beta20210501.ManagedClusterIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedClusterIdentityStatusType         userAssignedIdentities  map[string]./api/containerservice/v1alpha1api20210501.ManagedClusterIdentity_Status_UserAssignedIdentities         ManagedClusterIdentity_StatusARM   (Appears on:ManagedCluster_StatusARM)  Deprecated version of ManagedClusterIdentity_Status. Use v1beta20210501.ManagedClusterIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedClusterIdentityStatusType         userAssignedIdentities  map[string]./api/containerservice/v1alpha1api20210501.ManagedClusterIdentity_Status_UserAssignedIdentitiesARM         ManagedClusterIdentity_Status_UserAssignedIdentities   (Appears on:ManagedClusterIdentity_Status)  Deprecated version of ManagedClusterIdentity_Status_UserAssignedIdentities. Use v1beta20210501.ManagedClusterIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        ManagedClusterIdentity_Status_UserAssignedIdentitiesARM   (Appears on:ManagedClusterIdentity_StatusARM)  Deprecated version of ManagedClusterIdentity_Status_UserAssignedIdentities. Use v1beta20210501.ManagedClusterIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        ManagedClusterLoadBalancerProfile   (Appears on:ContainerServiceNetworkProfile)  Deprecated version of ManagedClusterLoadBalancerProfile. Use v1beta20210501.ManagedClusterLoadBalancerProfile instead\n    Field Description      allocatedOutboundPorts  int        effectiveOutboundIPs  []ResourceReference         idleTimeoutInMinutes  int        managedOutboundIPs  ManagedClusterLoadBalancerProfileManagedOutboundIPs         outboundIPPrefixes  ManagedClusterLoadBalancerProfileOutboundIPPrefixes         outboundIPs  ManagedClusterLoadBalancerProfileOutboundIPs         ManagedClusterLoadBalancerProfileARM   (Appears on:ContainerServiceNetworkProfileARM)  Deprecated version of ManagedClusterLoadBalancerProfile. Use v1beta20210501.ManagedClusterLoadBalancerProfile instead\n    Field Description      allocatedOutboundPorts  int        effectiveOutboundIPs  []ResourceReferenceARM         idleTimeoutInMinutes  int        managedOutboundIPs  ManagedClusterLoadBalancerProfileManagedOutboundIPsARM         outboundIPPrefixes  ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM         outboundIPs  ManagedClusterLoadBalancerProfileOutboundIPsARM         ManagedClusterLoadBalancerProfileManagedOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile)  Deprecated version of ManagedClusterLoadBalancerProfileManagedOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfileManagedOutboundIPs instead\n    Field Description      count  int        ManagedClusterLoadBalancerProfileManagedOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Deprecated version of ManagedClusterLoadBalancerProfileManagedOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfileManagedOutboundIPs instead\n    Field Description      count  int        ManagedClusterLoadBalancerProfileOutboundIPPrefixes   (Appears on:ManagedClusterLoadBalancerProfile)  Deprecated version of ManagedClusterLoadBalancerProfileOutboundIPPrefixes. Use v1beta20210501.ManagedClusterLoadBalancerProfileOutboundIPPrefixes instead\n    Field Description      publicIPPrefixes  []ResourceReference         ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Deprecated version of ManagedClusterLoadBalancerProfileOutboundIPPrefixes. Use v1beta20210501.ManagedClusterLoadBalancerProfileOutboundIPPrefixes instead\n    Field Description      publicIPPrefixes  []ResourceReferenceARM         ManagedClusterLoadBalancerProfileOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile)  Deprecated version of ManagedClusterLoadBalancerProfileOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfileOutboundIPs instead\n    Field Description      publicIPs  []ResourceReference         ManagedClusterLoadBalancerProfileOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Deprecated version of ManagedClusterLoadBalancerProfileOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfileOutboundIPs instead\n    Field Description      publicIPs  []ResourceReferenceARM         ManagedClusterLoadBalancerProfile_Status   (Appears on:ContainerServiceNetworkProfile_Status)  Deprecated version of ManagedClusterLoadBalancerProfile_Status. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status instead\n    Field Description      allocatedOutboundPorts  int        effectiveOutboundIPs  []ResourceReference_Status         idleTimeoutInMinutes  int        managedOutboundIPs  ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs         outboundIPPrefixes  ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes         outboundIPs  ManagedClusterLoadBalancerProfile_Status_OutboundIPs         ManagedClusterLoadBalancerProfile_StatusARM   (Appears on:ContainerServiceNetworkProfile_StatusARM)  Deprecated version of ManagedClusterLoadBalancerProfile_Status. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status instead\n    Field Description      allocatedOutboundPorts  int        effectiveOutboundIPs  []ResourceReference_StatusARM         idleTimeoutInMinutes  int        managedOutboundIPs  ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM         outboundIPPrefixes  ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM         outboundIPs  ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM         ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile_Status)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs instead\n    Field Description      count  int        ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs instead\n    Field Description      count  int        ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes   (Appears on:ManagedClusterLoadBalancerProfile_Status)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes instead\n    Field Description      publicIPPrefixes  []ResourceReference_Status         ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes instead\n    Field Description      publicIPPrefixes  []ResourceReference_StatusARM         ManagedClusterLoadBalancerProfile_Status_OutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile_Status)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_OutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_OutboundIPs instead\n    Field Description      publicIPs  []ResourceReference_Status         ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)  Deprecated version of ManagedClusterLoadBalancerProfile_Status_OutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_Status_OutboundIPs instead\n    Field Description      publicIPs  []ResourceReference_StatusARM         ManagedClusterPodIdentity   (Appears on:ManagedClusterPodIdentityProfile)  Deprecated version of ManagedClusterPodIdentity. Use v1beta20210501.ManagedClusterPodIdentity instead\n    Field Description      bindingSelector  string        identity  UserAssignedIdentity         name  string        namespace  string        ManagedClusterPodIdentityARM   (Appears on:ManagedClusterPodIdentityProfileARM)  Deprecated version of ManagedClusterPodIdentity. Use v1beta20210501.ManagedClusterPodIdentity instead\n    Field Description      bindingSelector  string        identity  UserAssignedIdentityARM         name  string        namespace  string        ManagedClusterPodIdentityException   (Appears on:ManagedClusterPodIdentityProfile)  Deprecated version of ManagedClusterPodIdentityException. Use v1beta20210501.ManagedClusterPodIdentityException instead\n    Field Description      name  string        namespace  string        podLabels  map[string]string        ManagedClusterPodIdentityExceptionARM   (Appears on:ManagedClusterPodIdentityProfileARM)  Deprecated version of ManagedClusterPodIdentityException. Use v1beta20210501.ManagedClusterPodIdentityException instead\n    Field Description      name  string        namespace  string        podLabels  map[string]string        ManagedClusterPodIdentityException_Status   (Appears on:ManagedClusterPodIdentityProfile_Status)  Deprecated version of ManagedClusterPodIdentityException_Status. Use v1beta20210501.ManagedClusterPodIdentityException_Status instead\n    Field Description      name  string        namespace  string        podLabels  map[string]string        ManagedClusterPodIdentityException_StatusARM   (Appears on:ManagedClusterPodIdentityProfile_StatusARM)  Deprecated version of ManagedClusterPodIdentityException_Status. Use v1beta20210501.ManagedClusterPodIdentityException_Status instead\n    Field Description      name  string        namespace  string        podLabels  map[string]string        ManagedClusterPodIdentityProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterPodIdentityProfile. Use v1beta20210501.ManagedClusterPodIdentityProfile instead\n    Field Description      allowNetworkPluginKubenet  bool        enabled  bool        userAssignedIdentities  []ManagedClusterPodIdentity         userAssignedIdentityExceptions  []ManagedClusterPodIdentityException         ManagedClusterPodIdentityProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterPodIdentityProfile. Use v1beta20210501.ManagedClusterPodIdentityProfile instead\n    Field Description      allowNetworkPluginKubenet  bool        enabled  bool        userAssignedIdentities  []ManagedClusterPodIdentityARM         userAssignedIdentityExceptions  []ManagedClusterPodIdentityExceptionARM         ManagedClusterPodIdentityProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterPodIdentityProfile_Status. Use v1beta20210501.ManagedClusterPodIdentityProfile_Status instead\n    Field Description      allowNetworkPluginKubenet  bool        enabled  bool        userAssignedIdentities  []ManagedClusterPodIdentity_Status         userAssignedIdentityExceptions  []ManagedClusterPodIdentityException_Status         ManagedClusterPodIdentityProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterPodIdentityProfile_Status. Use v1beta20210501.ManagedClusterPodIdentityProfile_Status instead\n    Field Description      allowNetworkPluginKubenet  bool        enabled  bool        userAssignedIdentities  []ManagedClusterPodIdentity_StatusARM         userAssignedIdentityExceptions  []ManagedClusterPodIdentityException_StatusARM         ManagedClusterPodIdentityProvisioningErrorBody_Status   (Appears on:ManagedClusterPodIdentityProvisioningError_Status)  Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody_Status. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status instead\n    Field Description      code  string        details  []ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled         message  string        target  string        ManagedClusterPodIdentityProvisioningErrorBody_StatusARM   (Appears on:ManagedClusterPodIdentityProvisioningError_StatusARM)  Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody_Status. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status instead\n    Field Description      code  string        details  []ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM         message  string        target  string        ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled   (Appears on:ManagedClusterPodIdentityProvisioningErrorBody_Status)  Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled instead\n    Field Description      code  string        message  string        target  string        ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM   (Appears on:ManagedClusterPodIdentityProvisioningErrorBody_StatusARM)  Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled instead\n    Field Description      code  string        message  string        target  string        ManagedClusterPodIdentityProvisioningError_Status   (Appears on:ManagedClusterPodIdentity_Status_ProvisioningInfo)  Deprecated version of ManagedClusterPodIdentityProvisioningError_Status. Use v1beta20210501.ManagedClusterPodIdentityProvisioningError_Status instead\n    Field Description      error  ManagedClusterPodIdentityProvisioningErrorBody_Status         ManagedClusterPodIdentityProvisioningError_StatusARM   (Appears on:ManagedClusterPodIdentity_Status_ProvisioningInfoARM)  Deprecated version of ManagedClusterPodIdentityProvisioningError_Status. Use v1beta20210501.ManagedClusterPodIdentityProvisioningError_Status instead\n    Field Description      error  ManagedClusterPodIdentityProvisioningErrorBody_StatusARM         ManagedClusterPodIdentityStatusProvisioningState (string alias)  (Appears on:ManagedClusterPodIdentity_Status, ManagedClusterPodIdentity_StatusARM)  Deprecated version of ManagedClusterPodIdentityStatusProvisioningState. Use v1beta20210501.ManagedClusterPodIdentityStatusProvisioningState instead\n    Value Description   \u0026#34;Assigned\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ManagedClusterPodIdentity_Status   (Appears on:ManagedClusterPodIdentityProfile_Status)  Deprecated version of ManagedClusterPodIdentity_Status. Use v1beta20210501.ManagedClusterPodIdentity_Status instead\n    Field Description      bindingSelector  string        identity  UserAssignedIdentity_Status         name  string        namespace  string        provisioningInfo  ManagedClusterPodIdentity_Status_ProvisioningInfo         provisioningState  ManagedClusterPodIdentityStatusProvisioningState         ManagedClusterPodIdentity_StatusARM   (Appears on:ManagedClusterPodIdentityProfile_StatusARM)  Deprecated version of ManagedClusterPodIdentity_Status. Use v1beta20210501.ManagedClusterPodIdentity_Status instead\n    Field Description      bindingSelector  string        identity  UserAssignedIdentity_StatusARM         name  string        namespace  string        provisioningInfo  ManagedClusterPodIdentity_Status_ProvisioningInfoARM         provisioningState  ManagedClusterPodIdentityStatusProvisioningState         ManagedClusterPodIdentity_Status_ProvisioningInfo   (Appears on:ManagedClusterPodIdentity_Status)  Deprecated version of ManagedClusterPodIdentity_Status_ProvisioningInfo. Use v1beta20210501.ManagedClusterPodIdentity_Status_ProvisioningInfo instead\n    Field Description      error  ManagedClusterPodIdentityProvisioningError_Status         ManagedClusterPodIdentity_Status_ProvisioningInfoARM   (Appears on:ManagedClusterPodIdentity_StatusARM)  Deprecated version of ManagedClusterPodIdentity_Status_ProvisioningInfo. Use v1beta20210501.ManagedClusterPodIdentity_Status_ProvisioningInfo instead\n    Field Description      error  ManagedClusterPodIdentityProvisioningError_StatusARM         ManagedClusterPropertiesARM   (Appears on:ManagedClusters_SpecARM)  Deprecated version of ManagedClusterProperties. Use v1beta20210501.ManagedClusterProperties instead\n    Field Description      aadProfile  ManagedClusterAADProfileARM         addonProfiles  map[string]./api/containerservice/v1alpha1api20210501.ManagedClusterAddonProfileARM         agentPoolProfiles  []ManagedClusterAgentPoolProfileARM         apiServerAccessProfile  ManagedClusterAPIServerAccessProfileARM         autoScalerProfile  ManagedClusterPropertiesAutoScalerProfileARM         autoUpgradeProfile  ManagedClusterAutoUpgradeProfileARM         disableLocalAccounts  bool        diskEncryptionSetID  string        dnsPrefix  string        enablePodSecurityPolicy  bool        enableRBAC  bool        fqdnSubdomain  string        httpProxyConfig  ManagedClusterHTTPProxyConfigARM         identityProfile  map[string]./api/containerservice/v1alpha1api20210501.Componentsqit0EtschemasmanagedclusterpropertiespropertiesidentityprofileadditionalpropertiesARM         kubernetesVersion  string        linuxProfile  ContainerServiceLinuxProfileARM         networkProfile  ContainerServiceNetworkProfileARM         nodeResourceGroup  string        podIdentityProfile  ManagedClusterPodIdentityProfileARM         privateLinkResources  []PrivateLinkResourceARM         servicePrincipalProfile  ManagedClusterServicePrincipalProfileARM         windowsProfile  ManagedClusterWindowsProfileARM         ManagedClusterPropertiesAutoScalerProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterPropertiesAutoScalerProfile. Use v1beta20210501.ManagedClusterPropertiesAutoScalerProfile instead\n    Field Description      balance-similar-node-groups  string        expander  ManagedClusterPropertiesAutoScalerProfileExpander         max-empty-bulk-delete  string        max-graceful-termination-sec  string        max-node-provision-time  string        max-total-unready-percentage  string        new-pod-scale-up-delay  string        ok-total-unready-count  string        scale-down-delay-after-add  string        scale-down-delay-after-delete  string        scale-down-delay-after-failure  string        scale-down-unneeded-time  string        scale-down-unready-time  string        scale-down-utilization-threshold  string        scan-interval  string        skip-nodes-with-local-storage  string        skip-nodes-with-system-pods  string        ManagedClusterPropertiesAutoScalerProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterPropertiesAutoScalerProfile. Use v1beta20210501.ManagedClusterPropertiesAutoScalerProfile instead\n    Field Description      balance-similar-node-groups  string        expander  ManagedClusterPropertiesAutoScalerProfileExpander         max-empty-bulk-delete  string        max-graceful-termination-sec  string        max-node-provision-time  string        max-total-unready-percentage  string        new-pod-scale-up-delay  string        ok-total-unready-count  string        scale-down-delay-after-add  string        scale-down-delay-after-delete  string        scale-down-delay-after-failure  string        scale-down-unneeded-time  string        scale-down-unready-time  string        scale-down-utilization-threshold  string        scan-interval  string        skip-nodes-with-local-storage  string        skip-nodes-with-system-pods  string        ManagedClusterPropertiesAutoScalerProfileExpander (string alias)  (Appears on:ManagedClusterPropertiesAutoScalerProfile, ManagedClusterPropertiesAutoScalerProfileARM)  Deprecated version of ManagedClusterPropertiesAutoScalerProfileExpander. Use v1beta20210501.ManagedClusterPropertiesAutoScalerProfileExpander instead\n    Value Description   \u0026#34;least-waste\u0026#34;\n  \u0026#34;most-pods\u0026#34;\n  \u0026#34;priority\u0026#34;\n  \u0026#34;random\u0026#34;\n    ManagedClusterPropertiesStatusAutoScalerProfileExpander (string alias)  (Appears on:ManagedClusterProperties_Status_AutoScalerProfile, ManagedClusterProperties_Status_AutoScalerProfileARM)  Deprecated version of ManagedClusterPropertiesStatusAutoScalerProfileExpander. Use v1beta20210501.ManagedClusterPropertiesStatusAutoScalerProfileExpander instead\n    Value Description   \u0026#34;least-waste\u0026#34;\n  \u0026#34;most-pods\u0026#34;\n  \u0026#34;priority\u0026#34;\n  \u0026#34;random\u0026#34;\n    ManagedClusterProperties_StatusARM   (Appears on:ManagedCluster_StatusARM)  Deprecated version of ManagedClusterProperties_Status. Use v1beta20210501.ManagedClusterProperties_Status instead\n    Field Description      aadProfile  ManagedClusterAADProfile_StatusARM         addonProfiles  Kubernetes v1.JSON         agentPoolProfiles  []ManagedClusterAgentPoolProfile_StatusARM         apiServerAccessProfile  ManagedClusterAPIServerAccessProfile_StatusARM         autoScalerProfile  ManagedClusterProperties_Status_AutoScalerProfileARM         autoUpgradeProfile  ManagedClusterAutoUpgradeProfile_StatusARM         azurePortalFQDN  string        disableLocalAccounts  bool        diskEncryptionSetID  string        dnsPrefix  string        enablePodSecurityPolicy  bool        enableRBAC  bool        fqdn  string        fqdnSubdomain  string        httpProxyConfig  ManagedClusterHTTPProxyConfig_StatusARM         identityProfile  Kubernetes v1.JSON         kubernetesVersion  string        linuxProfile  ContainerServiceLinuxProfile_StatusARM         maxAgentPools  int        networkProfile  ContainerServiceNetworkProfile_StatusARM         nodeResourceGroup  string        podIdentityProfile  ManagedClusterPodIdentityProfile_StatusARM         powerState  PowerState_StatusARM         privateFQDN  string        privateLinkResources  []PrivateLinkResource_StatusARM         provisioningState  string        servicePrincipalProfile  ManagedClusterServicePrincipalProfile_StatusARM         windowsProfile  ManagedClusterWindowsProfile_StatusARM         ManagedClusterProperties_Status_AutoScalerProfile   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterProperties_Status_AutoScalerProfile. Use v1beta20210501.ManagedClusterProperties_Status_AutoScalerProfile instead\n    Field Description      balance-similar-node-groups  string        expander  ManagedClusterPropertiesStatusAutoScalerProfileExpander         max-empty-bulk-delete  string        max-graceful-termination-sec  string        max-node-provision-time  string        max-total-unready-percentage  string        new-pod-scale-up-delay  string        ok-total-unready-count  string        scale-down-delay-after-add  string        scale-down-delay-after-delete  string        scale-down-delay-after-failure  string        scale-down-unneeded-time  string        scale-down-unready-time  string        scale-down-utilization-threshold  string        scan-interval  string        skip-nodes-with-local-storage  string        skip-nodes-with-system-pods  string        ManagedClusterProperties_Status_AutoScalerProfileARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterProperties_Status_AutoScalerProfile. Use v1beta20210501.ManagedClusterProperties_Status_AutoScalerProfile instead\n    Field Description      balance-similar-node-groups  string        expander  ManagedClusterPropertiesStatusAutoScalerProfileExpander         max-empty-bulk-delete  string        max-graceful-termination-sec  string        max-node-provision-time  string        max-total-unready-percentage  string        new-pod-scale-up-delay  string        ok-total-unready-count  string        scale-down-delay-after-add  string        scale-down-delay-after-delete  string        scale-down-delay-after-failure  string        scale-down-unneeded-time  string        scale-down-unready-time  string        scale-down-utilization-threshold  string        scan-interval  string        skip-nodes-with-local-storage  string        skip-nodes-with-system-pods  string        ManagedClusterSKU   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterSKU. Use v1beta20210501.ManagedClusterSKU instead\n    Field Description      name  ManagedClusterSKUName         tier  ManagedClusterSKUTier         ManagedClusterSKUARM   (Appears on:ManagedClusters_SpecARM)  Deprecated version of ManagedClusterSKU. Use v1beta20210501.ManagedClusterSKU instead\n    Field Description      name  ManagedClusterSKUName         tier  ManagedClusterSKUTier         ManagedClusterSKUName (string alias)  (Appears on:ManagedClusterSKU, ManagedClusterSKUARM)  Deprecated version of ManagedClusterSKUName. Use v1beta20210501.ManagedClusterSKUName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n    ManagedClusterSKUStatusName (string alias)  (Appears on:ManagedClusterSKU_Status, ManagedClusterSKU_StatusARM)  Deprecated version of ManagedClusterSKUStatusName. Use v1beta20210501.ManagedClusterSKUStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n    ManagedClusterSKUStatusTier (string alias)  (Appears on:ManagedClusterSKU_Status, ManagedClusterSKU_StatusARM)  Deprecated version of ManagedClusterSKUStatusTier. Use v1beta20210501.ManagedClusterSKUStatusTier instead\n    Value Description   \u0026#34;Free\u0026#34;\n  \u0026#34;Paid\u0026#34;\n    ManagedClusterSKUTier (string alias)  (Appears on:ManagedClusterSKU, ManagedClusterSKUARM)  Deprecated version of ManagedClusterSKUTier. Use v1beta20210501.ManagedClusterSKUTier instead\n    Value Description   \u0026#34;Free\u0026#34;\n  \u0026#34;Paid\u0026#34;\n    ManagedClusterSKU_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterSKU_Status. Use v1beta20210501.ManagedClusterSKU_Status instead\n    Field Description      name  ManagedClusterSKUStatusName         tier  ManagedClusterSKUStatusTier         ManagedClusterSKU_StatusARM   (Appears on:ManagedCluster_StatusARM)  Deprecated version of ManagedClusterSKU_Status. Use v1beta20210501.ManagedClusterSKU_Status instead\n    Field Description      name  ManagedClusterSKUStatusName         tier  ManagedClusterSKUStatusTier         ManagedClusterServicePrincipalProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterServicePrincipalProfile. Use v1beta20210501.ManagedClusterServicePrincipalProfile instead\n    Field Description      clientId  string        secret  string        ManagedClusterServicePrincipalProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterServicePrincipalProfile. Use v1beta20210501.ManagedClusterServicePrincipalProfile instead\n    Field Description      clientId  string        secret  string        ManagedClusterServicePrincipalProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterServicePrincipalProfile_Status. Use v1beta20210501.ManagedClusterServicePrincipalProfile_Status instead\n    Field Description      clientId  string        secret  string        ManagedClusterServicePrincipalProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterServicePrincipalProfile_Status. Use v1beta20210501.ManagedClusterServicePrincipalProfile_Status instead\n    Field Description      clientId  string        secret  string        ManagedClusterWindowsProfile   (Appears on:ManagedClusters_Spec)  Deprecated version of ManagedClusterWindowsProfile. Use v1beta20210501.ManagedClusterWindowsProfile instead\n    Field Description      adminPassword  string        adminUsername  string        enableCSIProxy  bool        licenseType  ManagedClusterWindowsProfileLicenseType         ManagedClusterWindowsProfileARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of ManagedClusterWindowsProfile. Use v1beta20210501.ManagedClusterWindowsProfile instead\n    Field Description      adminPassword  string        adminUsername  string        enableCSIProxy  bool        licenseType  ManagedClusterWindowsProfileLicenseType         ManagedClusterWindowsProfileLicenseType (string alias)  (Appears on:ManagedClusterWindowsProfile, ManagedClusterWindowsProfileARM)  Deprecated version of ManagedClusterWindowsProfileLicenseType. Use v1beta20210501.ManagedClusterWindowsProfileLicenseType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Windows_Server\u0026#34;\n    ManagedClusterWindowsProfileStatusLicenseType (string alias)  (Appears on:ManagedClusterWindowsProfile_Status, ManagedClusterWindowsProfile_StatusARM)  Deprecated version of ManagedClusterWindowsProfileStatusLicenseType. Use v1beta20210501.ManagedClusterWindowsProfileStatusLicenseType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Windows_Server\u0026#34;\n    ManagedClusterWindowsProfile_Status   (Appears on:ManagedCluster_Status)  Deprecated version of ManagedClusterWindowsProfile_Status. Use v1beta20210501.ManagedClusterWindowsProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        enableCSIProxy  bool        licenseType  ManagedClusterWindowsProfileStatusLicenseType         ManagedClusterWindowsProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of ManagedClusterWindowsProfile_Status. Use v1beta20210501.ManagedClusterWindowsProfile_Status instead\n    Field Description      adminPassword  string        adminUsername  string        enableCSIProxy  bool        licenseType  ManagedClusterWindowsProfileStatusLicenseType         ManagedCluster_Status   (Appears on:ManagedCluster)  Deprecated version of ManagedCluster_Status. Use v1beta20210501.ManagedCluster_Status instead\n    Field Description      aadProfile  ManagedClusterAADProfile_Status         addonProfiles  Kubernetes v1.JSON         agentPoolProfiles  []ManagedClusterAgentPoolProfile_Status         apiServerAccessProfile  ManagedClusterAPIServerAccessProfile_Status         autoScalerProfile  ManagedClusterProperties_Status_AutoScalerProfile         autoUpgradeProfile  ManagedClusterAutoUpgradeProfile_Status         azurePortalFQDN  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    disableLocalAccounts  bool        diskEncryptionSetID  string        dnsPrefix  string        enablePodSecurityPolicy  bool        enableRBAC  bool        extendedLocation  ExtendedLocation_Status         fqdn  string        fqdnSubdomain  string        httpProxyConfig  ManagedClusterHTTPProxyConfig_Status         id  string        identity  ManagedClusterIdentity_Status         identityProfile  Kubernetes v1.JSON         kubernetesVersion  string        linuxProfile  ContainerServiceLinuxProfile_Status         location  string        maxAgentPools  int        name  string        networkProfile  ContainerServiceNetworkProfile_Status         nodeResourceGroup  string        podIdentityProfile  ManagedClusterPodIdentityProfile_Status         powerState  PowerState_Status         privateFQDN  string        privateLinkResources  []PrivateLinkResource_Status         provisioningState  string        servicePrincipalProfile  ManagedClusterServicePrincipalProfile_Status         sku  ManagedClusterSKU_Status         tags  map[string]string        type  string        windowsProfile  ManagedClusterWindowsProfile_Status         ManagedCluster_StatusARM   Deprecated version of ManagedCluster_Status. Use v1beta20210501.ManagedCluster_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        identity  ManagedClusterIdentity_StatusARM         location  string        name  string        properties  ManagedClusterProperties_StatusARM         sku  ManagedClusterSKU_StatusARM         tags  map[string]string        type  string        ManagedClustersAgentPool   Deprecated version of ManagedClustersAgentPool. Use v1beta20210501.ManagedClustersAgentPool instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ManagedClustersAgentPools_Spec          availabilityZones  []string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile         kubeletConfig  KubeletConfig         kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfig         location  string        maxCount  int        maxPods  int        minCount  int        mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string        nodePublicIPPrefixIDReference  genruntime.ResourceReference         nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a containerservice.azure.com/ManagedCluster resource\n    podSubnetIDReference  genruntime.ResourceReference         proximityPlacementGroupID  string        scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy         scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority         spotMaxPrice  float64        tags  map[string]string        type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettings         vmSize  string        vnetSubnetIDReference  genruntime.ResourceReference            status  AgentPool_Status         ManagedClustersAgentPools_Spec   (Appears on:ManagedClustersAgentPool)      Field Description      availabilityZones  []string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    count  int        enableAutoScaling  bool        enableEncryptionAtHost  bool        enableFIPS  bool        enableNodePublicIP  bool        enableUltraSSD  bool        gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile         kubeletConfig  KubeletConfig         kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfig         location  string        maxCount  int        maxPods  int        minCount  int        mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string        nodePublicIPPrefixIDReference  genruntime.ResourceReference         nodeTaints  []string        orchestratorVersion  string        osDiskSizeGB  int        osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a containerservice.azure.com/ManagedCluster resource\n    podSubnetIDReference  genruntime.ResourceReference         proximityPlacementGroupID  string        scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy         scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority         spotMaxPrice  float64        tags  map[string]string        type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettings         vmSize  string        vnetSubnetIDReference  genruntime.ResourceReference         ManagedClustersAgentPools_SpecARM   Deprecated version of ManagedClustersAgentPools_Spec. Use v1beta20210501.ManagedClustersAgentPools_Spec instead\n    Field Description      location  string        name  string        properties  ManagedClusterAgentPoolProfilePropertiesARM         ManagedClusters_Spec   (Appears on:ManagedCluster)      Field Description      aadProfile  ManagedClusterAADProfile         addonProfiles  map[string]./api/containerservice/v1alpha1api20210501.ManagedClusterAddonProfile         agentPoolProfiles  []ManagedClusterAgentPoolProfile         apiServerAccessProfile  ManagedClusterAPIServerAccessProfile         autoScalerProfile  ManagedClusterPropertiesAutoScalerProfile         autoUpgradeProfile  ManagedClusterAutoUpgradeProfile         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    disableLocalAccounts  bool        diskEncryptionSetIDReference  genruntime.ResourceReference         dnsPrefix  string        enablePodSecurityPolicy  bool        enableRBAC  bool        extendedLocation  ExtendedLocation         fqdnSubdomain  string        httpProxyConfig  ManagedClusterHTTPProxyConfig         identity  ManagedClusterIdentity         identityProfile  map[string]./api/containerservice/v1alpha1api20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties         kubernetesVersion  string        linuxProfile  ContainerServiceLinuxProfile         location  string        networkProfile  ContainerServiceNetworkProfile         nodeResourceGroup  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    podIdentityProfile  ManagedClusterPodIdentityProfile         privateLinkResources  []PrivateLinkResource         servicePrincipalProfile  ManagedClusterServicePrincipalProfile         sku  ManagedClusterSKU         tags  map[string]string        windowsProfile  ManagedClusterWindowsProfile         ManagedClusters_SpecARM   Deprecated version of ManagedClusters_Spec. Use v1beta20210501.ManagedClusters_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         identity  ManagedClusterIdentityARM         location  string        name  string        properties  ManagedClusterPropertiesARM         sku  ManagedClusterSKUARM         tags  map[string]string        OSDiskType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of OSDiskType_Status. Use v1beta20210501.OSDiskType_Status instead\n    Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    OSSKU_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of OSSKU_Status. Use v1beta20210501.OSSKU_Status instead\n    Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    OSType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of OSType_Status. Use v1beta20210501.OSType_Status instead\n    Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    PowerStateStatusCode (string alias)  (Appears on:PowerState_Status, PowerState_StatusARM)  Deprecated version of PowerStateStatusCode. Use v1beta20210501.PowerStateStatusCode instead\n    Value Description   \u0026#34;Running\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n    PowerState_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status, ManagedCluster_Status)  Deprecated version of PowerState_Status. Use v1beta20210501.PowerState_Status instead\n    Field Description      code  PowerStateStatusCode         PowerState_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM, ManagedClusterProperties_StatusARM)  Deprecated version of PowerState_Status. Use v1beta20210501.PowerState_Status instead\n    Field Description      code  PowerStateStatusCode         PrivateLinkResource   (Appears on:ManagedClusters_Spec)  Deprecated version of PrivateLinkResource. Use v1beta20210501.PrivateLinkResource instead\n    Field Description      groupId  string        name  string        reference  genruntime.ResourceReference         requiredMembers  []string        type  string        PrivateLinkResourceARM   (Appears on:ManagedClusterPropertiesARM)  Deprecated version of PrivateLinkResource. Use v1beta20210501.PrivateLinkResource instead\n    Field Description      groupId  string        id  string        name  string        requiredMembers  []string        type  string        PrivateLinkResource_Status   (Appears on:ManagedCluster_Status)  Deprecated version of PrivateLinkResource_Status. Use v1beta20210501.PrivateLinkResource_Status instead\n    Field Description      groupId  string        id  string        name  string        privateLinkServiceID  string        requiredMembers  []string        type  string        PrivateLinkResource_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)  Deprecated version of PrivateLinkResource_Status. Use v1beta20210501.PrivateLinkResource_Status instead\n    Field Description      groupId  string        id  string        name  string        privateLinkServiceID  string        requiredMembers  []string        type  string        ResourceReference   (Appears on:ManagedClusterLoadBalancerProfile, ManagedClusterLoadBalancerProfileOutboundIPPrefixes, ManagedClusterLoadBalancerProfileOutboundIPs)  Deprecated version of ResourceReference. Use v1beta20210501.ResourceReference instead\n    Field Description      reference  genruntime.ResourceReference         ResourceReferenceARM   (Appears on:ManagedClusterLoadBalancerProfileARM, ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM, ManagedClusterLoadBalancerProfileOutboundIPsARM)  Deprecated version of ResourceReference. Use v1beta20210501.ResourceReference instead\n    Field Description      id  string        ResourceReference_Status   (Appears on:ManagedClusterLoadBalancerProfile_Status, ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes, ManagedClusterLoadBalancerProfile_Status_OutboundIPs)  Deprecated version of ResourceReference_Status. Use v1beta20210501.ResourceReference_Status instead\n    Field Description      id  string        ResourceReference_StatusARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM, ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM, ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM)  Deprecated version of ResourceReference_Status. Use v1beta20210501.ResourceReference_Status instead\n    Field Description      id  string        ScaleSetEvictionPolicy_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of ScaleSetEvictionPolicy_Status. Use v1beta20210501.ScaleSetEvictionPolicy_Status instead\n    Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ScaleSetPriority_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)  Deprecated version of ScaleSetPriority_Status. Use v1beta20210501.ScaleSetPriority_Status instead\n    Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    SysctlConfig   (Appears on:LinuxOSConfig)  Deprecated version of SysctlConfig. Use v1beta20210501.SysctlConfig instead\n    Field Description      fsAioMaxNr  int        fsFileMax  int        fsInotifyMaxUserWatches  int        fsNrOpen  int        kernelThreadsMax  int        netCoreNetdevMaxBacklog  int        netCoreOptmemMax  int        netCoreRmemDefault  int        netCoreRmemMax  int        netCoreSomaxconn  int        netCoreWmemDefault  int        netCoreWmemMax  int        netIpv4IpLocalPortRange  string        netIpv4NeighDefaultGcThresh1  int        netIpv4NeighDefaultGcThresh2  int        netIpv4NeighDefaultGcThresh3  int        netIpv4TcpFinTimeout  int        netIpv4TcpKeepaliveProbes  int        netIpv4TcpKeepaliveTime  int        netIpv4TcpMaxSynBacklog  int        netIpv4TcpMaxTwBuckets  int        netIpv4TcpTwReuse  bool        netIpv4TcpkeepaliveIntvl  int        netNetfilterNfConntrackBuckets  int        netNetfilterNfConntrackMax  int        vmMaxMapCount  int        vmSwappiness  int        vmVfsCachePressure  int        SysctlConfigARM   (Appears on:LinuxOSConfigARM)  Deprecated version of SysctlConfig. Use v1beta20210501.SysctlConfig instead\n    Field Description      fsAioMaxNr  int        fsFileMax  int        fsInotifyMaxUserWatches  int        fsNrOpen  int        kernelThreadsMax  int        netCoreNetdevMaxBacklog  int        netCoreOptmemMax  int        netCoreRmemDefault  int        netCoreRmemMax  int        netCoreSomaxconn  int        netCoreWmemDefault  int        netCoreWmemMax  int        netIpv4IpLocalPortRange  string        netIpv4NeighDefaultGcThresh1  int        netIpv4NeighDefaultGcThresh2  int        netIpv4NeighDefaultGcThresh3  int        netIpv4TcpFinTimeout  int        netIpv4TcpKeepaliveProbes  int        netIpv4TcpKeepaliveTime  int        netIpv4TcpMaxSynBacklog  int        netIpv4TcpMaxTwBuckets  int        netIpv4TcpTwReuse  bool        netIpv4TcpkeepaliveIntvl  int        netNetfilterNfConntrackBuckets  int        netNetfilterNfConntrackMax  int        vmMaxMapCount  int        vmSwappiness  int        vmVfsCachePressure  int        SysctlConfig_Status   (Appears on:LinuxOSConfig_Status)  Deprecated version of SysctlConfig_Status. Use v1beta20210501.SysctlConfig_Status instead\n    Field Description      fsAioMaxNr  int        fsFileMax  int        fsInotifyMaxUserWatches  int        fsNrOpen  int        kernelThreadsMax  int        netCoreNetdevMaxBacklog  int        netCoreOptmemMax  int        netCoreRmemDefault  int        netCoreRmemMax  int        netCoreSomaxconn  int        netCoreWmemDefault  int        netCoreWmemMax  int        netIpv4IpLocalPortRange  string        netIpv4NeighDefaultGcThresh1  int        netIpv4NeighDefaultGcThresh2  int        netIpv4NeighDefaultGcThresh3  int        netIpv4TcpFinTimeout  int        netIpv4TcpKeepaliveProbes  int        netIpv4TcpKeepaliveTime  int        netIpv4TcpMaxSynBacklog  int        netIpv4TcpMaxTwBuckets  int        netIpv4TcpTwReuse  bool        netIpv4TcpkeepaliveIntvl  int        netNetfilterNfConntrackBuckets  int        netNetfilterNfConntrackMax  int        vmMaxMapCount  int        vmSwappiness  int        vmVfsCachePressure  int        SysctlConfig_StatusARM   (Appears on:LinuxOSConfig_StatusARM)  Deprecated version of SysctlConfig_Status. Use v1beta20210501.SysctlConfig_Status instead\n    Field Description      fsAioMaxNr  int        fsFileMax  int        fsInotifyMaxUserWatches  int        fsNrOpen  int        kernelThreadsMax  int        netCoreNetdevMaxBacklog  int        netCoreOptmemMax  int        netCoreRmemDefault  int        netCoreRmemMax  int        netCoreSomaxconn  int        netCoreWmemDefault  int        netCoreWmemMax  int        netIpv4IpLocalPortRange  string        netIpv4NeighDefaultGcThresh1  int        netIpv4NeighDefaultGcThresh2  int        netIpv4NeighDefaultGcThresh3  int        netIpv4TcpFinTimeout  int        netIpv4TcpKeepaliveProbes  int        netIpv4TcpKeepaliveTime  int        netIpv4TcpMaxSynBacklog  int        netIpv4TcpMaxTwBuckets  int        netIpv4TcpTwReuse  bool        netIpv4TcpkeepaliveIntvl  int        netNetfilterNfConntrackBuckets  int        netNetfilterNfConntrackMax  int        vmMaxMapCount  int        vmSwappiness  int        vmVfsCachePressure  int        UserAssignedIdentity   (Appears on:ManagedClusterPodIdentity)  Deprecated version of UserAssignedIdentity. Use v1beta20210501.UserAssignedIdentity instead\n    Field Description      clientId  string        objectId  string        resourceReference  genruntime.ResourceReference         UserAssignedIdentityARM   (Appears on:ManagedClusterPodIdentityARM)  Deprecated version of UserAssignedIdentity. Use v1beta20210501.UserAssignedIdentity instead\n    Field Description      clientId  string        objectId  string        resourceId  string        UserAssignedIdentity_Status   (Appears on:ManagedClusterPodIdentity_Status)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20210501.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        objectId  string        resourceId  string        UserAssignedIdentity_StatusARM   (Appears on:ManagedClusterPodIdentity_StatusARM)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20210501.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        objectId  string        resourceId  string         "},{"id":36,"href":"/azure-service-operator/reference/containerservice.v1beta20210501/","title":"containerservice.azure.com/v1beta20210501","section":"References","content":"containerservice.azure.com/v1beta20210501  Package v1beta20210501 contains API Schema definitions for the containerservice v1beta20210501 API group\n Resource Types:  AgentPoolMode_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    AgentPoolType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    AgentPoolUpgradeSettings   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/AgentPoolUpgradeSettings\n    Field Description      maxSurge  string    MaxSurge: This can either be set to an integer (e.g. \u0026lsquo;5\u0026rsquo;) or a percentage (e.g. \u0026lsquo;50%\u0026rsquo;). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade\n    AgentPoolUpgradeSettingsARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/AgentPoolUpgradeSettings\n    Field Description      maxSurge  string    MaxSurge: This can either be set to an integer (e.g. \u0026lsquo;5\u0026rsquo;) or a percentage (e.g. \u0026lsquo;50%\u0026rsquo;). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade\n    AgentPoolUpgradeSettings_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)      Field Description      maxSurge  string    MaxSurge: This can either be set to an integer (e.g. \u0026lsquo;5\u0026rsquo;) or a percentage (e.g. \u0026lsquo;50%\u0026rsquo;). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade\n    AgentPoolUpgradeSettings_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)      Field Description      maxSurge  string    MaxSurge: This can either be set to an integer (e.g. \u0026lsquo;5\u0026rsquo;) or a percentage (e.g. \u0026lsquo;50%\u0026rsquo;). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade\n    AgentPool_Status   (Appears on:ManagedClustersAgentPool)      Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  GPUInstanceProfile_Status     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    id  string    Id: Resource ID.\n    kubeletConfig  KubeletConfig_Status     KubeletConfig: The Kubelet configuration on the agent pool nodes.\n    kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_Status     LinuxOSConfig: The OS configuration of Linux agent nodes.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  AgentPoolMode_Status         name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    nodeImageVersion  string    NodeImageVersion: The version of node image\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string    NodePublicIPPrefixID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string    PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    powerState  PowerState_Status     PowerState: Describes whether the Agent Pool is Running or Stopped\n    properties_type  AgentPoolType_Status         provisioningState  string    ProvisioningState: The current deployment or provisioning state.\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ScaleSetPriority_Status     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  string    Type: Resource type\n    upgradeSettings  AgentPoolUpgradeSettings_Status     UpgradeSettings: Settings for upgrading the agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string    VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    AgentPool_StatusARM       Field Description      id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  ManagedClusterAgentPoolProfileProperties_StatusARM     Properties: Properties of an agent pool.\n    type  string    Type: Resource type\n    Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/Componentsqit0etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties\n    Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceReference  genruntime.ResourceReference     ResourceReference: The resource ID of the user assigned identity.\n    Componentsqit0EtschemasmanagedclusterpropertiespropertiesidentityprofileadditionalpropertiesARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/Componentsqit0etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties\n    Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceId  string        ContainerServiceLinuxProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceLinuxProfile\n    Field Description      adminUsername  string    AdminUsername: The administrator username to use for Linux VMs.\n    ssh  ContainerServiceSshConfiguration     Ssh: SSH configuration for Linux-based VMs running on Azure.\n    ContainerServiceLinuxProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceLinuxProfile\n    Field Description      adminUsername  string    AdminUsername: The administrator username to use for Linux VMs.\n    ssh  ContainerServiceSshConfigurationARM     Ssh: SSH configuration for Linux-based VMs running on Azure.\n    ContainerServiceLinuxProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      adminUsername  string    AdminUsername: The administrator username to use for Linux VMs.\n    ssh  ContainerServiceSshConfiguration_Status     Ssh: The SSH configuration for Linux-based VMs running on Azure.\n    ContainerServiceLinuxProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      adminUsername  string    AdminUsername: The administrator username to use for Linux VMs.\n    ssh  ContainerServiceSshConfiguration_StatusARM     Ssh: The SSH configuration for Linux-based VMs running on Azure.\n    ContainerServiceNetworkProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceNetworkProfile\n    Field Description      dnsServiceIP  string    DnsServiceIP: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.\n    dockerBridgeCidr  string    DockerBridgeCidr: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.\n    loadBalancerProfile  ManagedClusterLoadBalancerProfile     LoadBalancerProfile: Profile of the managed cluster load balancer.\n    loadBalancerSku  ContainerServiceNetworkProfileLoadBalancerSku     LoadBalancerSku: The default is \u0026lsquo;standard\u0026rsquo;. See Azure Load Balancer SKUs for more information about the differences between load balancer SKUs.\n    networkMode  ContainerServiceNetworkProfileNetworkMode     NetworkMode: This cannot be specified if networkPlugin is anything other than \u0026lsquo;azure\u0026rsquo;.\n    networkPlugin  ContainerServiceNetworkProfileNetworkPlugin     NetworkPlugin: Network plugin used for building the Kubernetes network.\n    networkPolicy  ContainerServiceNetworkProfileNetworkPolicy     NetworkPolicy: Network policy used for building the Kubernetes network.\n    outboundType  ContainerServiceNetworkProfileOutboundType     OutboundType: This can only be set at cluster creation time and cannot be changed later. For more information see egress outbound type.\n    podCidr  string    PodCidr: A CIDR notation IP range from which to assign pod IPs when kubenet is used.\n    serviceCidr  string    ServiceCidr: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.\n    ContainerServiceNetworkProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceNetworkProfile\n    Field Description      dnsServiceIP  string    DnsServiceIP: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.\n    dockerBridgeCidr  string    DockerBridgeCidr: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.\n    loadBalancerProfile  ManagedClusterLoadBalancerProfileARM     LoadBalancerProfile: Profile of the managed cluster load balancer.\n    loadBalancerSku  ContainerServiceNetworkProfileLoadBalancerSku     LoadBalancerSku: The default is \u0026lsquo;standard\u0026rsquo;. See Azure Load Balancer SKUs for more information about the differences between load balancer SKUs.\n    networkMode  ContainerServiceNetworkProfileNetworkMode     NetworkMode: This cannot be specified if networkPlugin is anything other than \u0026lsquo;azure\u0026rsquo;.\n    networkPlugin  ContainerServiceNetworkProfileNetworkPlugin     NetworkPlugin: Network plugin used for building the Kubernetes network.\n    networkPolicy  ContainerServiceNetworkProfileNetworkPolicy     NetworkPolicy: Network policy used for building the Kubernetes network.\n    outboundType  ContainerServiceNetworkProfileOutboundType     OutboundType: This can only be set at cluster creation time and cannot be changed later. For more information see egress outbound type.\n    podCidr  string    PodCidr: A CIDR notation IP range from which to assign pod IPs when kubenet is used.\n    serviceCidr  string    ServiceCidr: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.\n    ContainerServiceNetworkProfileLoadBalancerSku (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)      Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;standard\u0026#34;\n    ContainerServiceNetworkProfileNetworkMode (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)      Value Description   \u0026#34;bridge\u0026#34;\n  \u0026#34;transparent\u0026#34;\n    ContainerServiceNetworkProfileNetworkPlugin (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)      Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;kubenet\u0026#34;\n    ContainerServiceNetworkProfileNetworkPolicy (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)      Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;calico\u0026#34;\n    ContainerServiceNetworkProfileOutboundType (string alias)  (Appears on:ContainerServiceNetworkProfile, ContainerServiceNetworkProfileARM)      Value Description   \u0026#34;loadBalancer\u0026#34;\n  \u0026#34;userDefinedRouting\u0026#34;\n    ContainerServiceNetworkProfileStatusLoadBalancerSku (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)      Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;standard\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkMode (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)      Value Description   \u0026#34;bridge\u0026#34;\n  \u0026#34;transparent\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkPlugin (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)      Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;kubenet\u0026#34;\n    ContainerServiceNetworkProfileStatusNetworkPolicy (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)      Value Description   \u0026#34;azure\u0026#34;\n  \u0026#34;calico\u0026#34;\n    ContainerServiceNetworkProfileStatusOutboundType (string alias)  (Appears on:ContainerServiceNetworkProfile_Status, ContainerServiceNetworkProfile_StatusARM)      Value Description   \u0026#34;loadBalancer\u0026#34;\n  \u0026#34;userDefinedRouting\u0026#34;\n    ContainerServiceNetworkProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      dnsServiceIP  string    DnsServiceIP: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.\n    dockerBridgeCidr  string    DockerBridgeCidr: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.\n    loadBalancerProfile  ManagedClusterLoadBalancerProfile_Status     LoadBalancerProfile: Profile of the cluster load balancer.\n    loadBalancerSku  ContainerServiceNetworkProfileStatusLoadBalancerSku     LoadBalancerSku: The default is \u0026lsquo;standard\u0026rsquo;. See Azure Load Balancer SKUs for more information about the differences between load balancer SKUs.\n    networkMode  ContainerServiceNetworkProfileStatusNetworkMode     NetworkMode: This cannot be specified if networkPlugin is anything other than \u0026lsquo;azure\u0026rsquo;.\n    networkPlugin  ContainerServiceNetworkProfileStatusNetworkPlugin     NetworkPlugin: Network plugin used for building the Kubernetes network.\n    networkPolicy  ContainerServiceNetworkProfileStatusNetworkPolicy     NetworkPolicy: Network policy used for building the Kubernetes network.\n    outboundType  ContainerServiceNetworkProfileStatusOutboundType     OutboundType: This can only be set at cluster creation time and cannot be changed later. For more information see egress outbound type.\n    podCidr  string    PodCidr: A CIDR notation IP range from which to assign pod IPs when kubenet is used.\n    serviceCidr  string    ServiceCidr: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.\n    ContainerServiceNetworkProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      dnsServiceIP  string    DnsServiceIP: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.\n    dockerBridgeCidr  string    DockerBridgeCidr: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.\n    loadBalancerProfile  ManagedClusterLoadBalancerProfile_StatusARM     LoadBalancerProfile: Profile of the cluster load balancer.\n    loadBalancerSku  ContainerServiceNetworkProfileStatusLoadBalancerSku     LoadBalancerSku: The default is \u0026lsquo;standard\u0026rsquo;. See Azure Load Balancer SKUs for more information about the differences between load balancer SKUs.\n    networkMode  ContainerServiceNetworkProfileStatusNetworkMode     NetworkMode: This cannot be specified if networkPlugin is anything other than \u0026lsquo;azure\u0026rsquo;.\n    networkPlugin  ContainerServiceNetworkProfileStatusNetworkPlugin     NetworkPlugin: Network plugin used for building the Kubernetes network.\n    networkPolicy  ContainerServiceNetworkProfileStatusNetworkPolicy     NetworkPolicy: Network policy used for building the Kubernetes network.\n    outboundType  ContainerServiceNetworkProfileStatusOutboundType     OutboundType: This can only be set at cluster creation time and cannot be changed later. For more information see egress outbound type.\n    podCidr  string    PodCidr: A CIDR notation IP range from which to assign pod IPs when kubenet is used.\n    serviceCidr  string    ServiceCidr: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.\n    ContainerServiceSshConfiguration   (Appears on:ContainerServiceLinuxProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceSshConfiguration\n    Field Description      publicKeys  []ContainerServiceSshPublicKey     PublicKeys: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.\n    ContainerServiceSshConfigurationARM   (Appears on:ContainerServiceLinuxProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceSshConfiguration\n    Field Description      publicKeys  []ContainerServiceSshPublicKeyARM     PublicKeys: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.\n    ContainerServiceSshConfiguration_Status   (Appears on:ContainerServiceLinuxProfile_Status)      Field Description      publicKeys  []ContainerServiceSshPublicKey_Status     PublicKeys: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.\n    ContainerServiceSshConfiguration_StatusARM   (Appears on:ContainerServiceLinuxProfile_StatusARM)      Field Description      publicKeys  []ContainerServiceSshPublicKey_StatusARM     PublicKeys: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.\n    ContainerServiceSshPublicKey   (Appears on:ContainerServiceSshConfiguration)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceSshPublicKey\n    Field Description      keyData  string    KeyData: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.\n    ContainerServiceSshPublicKeyARM   (Appears on:ContainerServiceSshConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ContainerServiceSshPublicKey\n    Field Description      keyData  string    KeyData: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.\n    ContainerServiceSshPublicKey_Status   (Appears on:ContainerServiceSshConfiguration_Status)      Field Description      keyData  string    KeyData: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.\n    ContainerServiceSshPublicKey_StatusARM   (Appears on:ContainerServiceSshConfiguration_StatusARM)      Field Description      keyData  string    KeyData: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.\n    ExtendedLocation   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:ManagedClusters_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:ManagedCluster_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:ManagedCluster_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    GPUInstanceProfile_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    KubeletConfig   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/KubeletConfig\n    Field Description      allowedUnsafeSysctls  []string    AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in *).\n    containerLogMaxFiles  int    ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.\n    containerLogMaxSizeMB  int    ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.\n    cpuCfsQuota  bool    CpuCfsQuota: The default is true.\n    cpuCfsQuotaPeriod  string    CpuCfsQuotaPeriod: The default is \u0026lsquo;100ms.\u0026rsquo; Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: \u0026lsquo;300ms\u0026rsquo;, \u0026lsquo;2h45m\u0026rsquo;. Supported units are \u0026lsquo;ns\u0026rsquo;, \u0026lsquo;us\u0026rsquo;, \u0026lsquo;ms\u0026rsquo;, \u0026rsquo;s\u0026rsquo;, \u0026rsquo;m\u0026rsquo;, and \u0026lsquo;h\u0026rsquo;.\n    cpuManagerPolicy  string    CpuManagerPolicy: The default is \u0026lsquo;none\u0026rsquo;. See Kubernetes CPU management policies for more information. Allowed values are \u0026lsquo;none\u0026rsquo; and \u0026lsquo;static\u0026rsquo;.\n    failSwapOn  bool    FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.\n    imageGcHighThreshold  int    ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%\n    imageGcLowThreshold  int    ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%\n    podMaxPids  int    PodMaxPids: The maximum number of processes per pod.\n    topologyManagerPolicy  string    TopologyManagerPolicy: For more information see Kubernetes Topology Manager. The default is \u0026lsquo;none\u0026rsquo;. Allowed values are \u0026lsquo;none\u0026rsquo;, \u0026lsquo;best-effort\u0026rsquo;, \u0026lsquo;restricted\u0026rsquo;, and \u0026lsquo;single-numa-node\u0026rsquo;.\n    KubeletConfigARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/KubeletConfig\n    Field Description      allowedUnsafeSysctls  []string    AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in *).\n    containerLogMaxFiles  int    ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.\n    containerLogMaxSizeMB  int    ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.\n    cpuCfsQuota  bool    CpuCfsQuota: The default is true.\n    cpuCfsQuotaPeriod  string    CpuCfsQuotaPeriod: The default is \u0026lsquo;100ms.\u0026rsquo; Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: \u0026lsquo;300ms\u0026rsquo;, \u0026lsquo;2h45m\u0026rsquo;. Supported units are \u0026lsquo;ns\u0026rsquo;, \u0026lsquo;us\u0026rsquo;, \u0026lsquo;ms\u0026rsquo;, \u0026rsquo;s\u0026rsquo;, \u0026rsquo;m\u0026rsquo;, and \u0026lsquo;h\u0026rsquo;.\n    cpuManagerPolicy  string    CpuManagerPolicy: The default is \u0026lsquo;none\u0026rsquo;. See Kubernetes CPU management policies for more information. Allowed values are \u0026lsquo;none\u0026rsquo; and \u0026lsquo;static\u0026rsquo;.\n    failSwapOn  bool    FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.\n    imageGcHighThreshold  int    ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%\n    imageGcLowThreshold  int    ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%\n    podMaxPids  int    PodMaxPids: The maximum number of processes per pod.\n    topologyManagerPolicy  string    TopologyManagerPolicy: For more information see Kubernetes Topology Manager. The default is \u0026lsquo;none\u0026rsquo;. Allowed values are \u0026lsquo;none\u0026rsquo;, \u0026lsquo;best-effort\u0026rsquo;, \u0026lsquo;restricted\u0026rsquo;, and \u0026lsquo;single-numa-node\u0026rsquo;.\n    KubeletConfig_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)      Field Description      allowedUnsafeSysctls  []string    AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in *).\n    containerLogMaxFiles  int    ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.\n    containerLogMaxSizeMB  int    ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.\n    cpuCfsQuota  bool    CpuCfsQuota: The default is true.\n    cpuCfsQuotaPeriod  string    CpuCfsQuotaPeriod: The default is \u0026lsquo;100ms.\u0026rsquo; Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: \u0026lsquo;300ms\u0026rsquo;, \u0026lsquo;2h45m\u0026rsquo;. Supported units are \u0026lsquo;ns\u0026rsquo;, \u0026lsquo;us\u0026rsquo;, \u0026lsquo;ms\u0026rsquo;, \u0026rsquo;s\u0026rsquo;, \u0026rsquo;m\u0026rsquo;, and \u0026lsquo;h\u0026rsquo;.\n    cpuManagerPolicy  string    CpuManagerPolicy: The default is \u0026lsquo;none\u0026rsquo;. See Kubernetes CPU management policies for more information. Allowed values are \u0026lsquo;none\u0026rsquo; and \u0026lsquo;static\u0026rsquo;.\n    failSwapOn  bool    FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.\n    imageGcHighThreshold  int    ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%\n    imageGcLowThreshold  int    ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%\n    podMaxPids  int    PodMaxPids: The maximum number of processes per pod.\n    topologyManagerPolicy  string    TopologyManagerPolicy: For more information see Kubernetes Topology Manager. The default is \u0026lsquo;none\u0026rsquo;. Allowed values are \u0026lsquo;none\u0026rsquo;, \u0026lsquo;best-effort\u0026rsquo;, \u0026lsquo;restricted\u0026rsquo;, and \u0026lsquo;single-numa-node\u0026rsquo;.\n    KubeletConfig_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)      Field Description      allowedUnsafeSysctls  []string    AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in *).\n    containerLogMaxFiles  int    ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.\n    containerLogMaxSizeMB  int    ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.\n    cpuCfsQuota  bool    CpuCfsQuota: The default is true.\n    cpuCfsQuotaPeriod  string    CpuCfsQuotaPeriod: The default is \u0026lsquo;100ms.\u0026rsquo; Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: \u0026lsquo;300ms\u0026rsquo;, \u0026lsquo;2h45m\u0026rsquo;. Supported units are \u0026lsquo;ns\u0026rsquo;, \u0026lsquo;us\u0026rsquo;, \u0026lsquo;ms\u0026rsquo;, \u0026rsquo;s\u0026rsquo;, \u0026rsquo;m\u0026rsquo;, and \u0026lsquo;h\u0026rsquo;.\n    cpuManagerPolicy  string    CpuManagerPolicy: The default is \u0026lsquo;none\u0026rsquo;. See Kubernetes CPU management policies for more information. Allowed values are \u0026lsquo;none\u0026rsquo; and \u0026lsquo;static\u0026rsquo;.\n    failSwapOn  bool    FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.\n    imageGcHighThreshold  int    ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%\n    imageGcLowThreshold  int    ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%\n    podMaxPids  int    PodMaxPids: The maximum number of processes per pod.\n    topologyManagerPolicy  string    TopologyManagerPolicy: For more information see Kubernetes Topology Manager. The default is \u0026lsquo;none\u0026rsquo;. Allowed values are \u0026lsquo;none\u0026rsquo;, \u0026lsquo;best-effort\u0026rsquo;, \u0026lsquo;restricted\u0026rsquo;, and \u0026lsquo;single-numa-node\u0026rsquo;.\n    KubeletDiskType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    LinuxOSConfig   (Appears on:ManagedClusterAgentPoolProfile, ManagedClustersAgentPools_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/LinuxOSConfig\n    Field Description      swapFileSizeMB  int    SwapFileSizeMB: The size in MB of a swap file that will be created on each node.\n    sysctls  SysctlConfig     Sysctls: Sysctl settings for Linux agent nodes.\n    transparentHugePageDefrag  string    TransparentHugePageDefrag: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;defer\u0026rsquo;, \u0026lsquo;defer+madvise\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo; and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;madvise\u0026rsquo;. For more information see Transparent Hugepages.\n    transparentHugePageEnabled  string    TransparentHugePageEnabled: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo;, and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;always\u0026rsquo;. For more information see Transparent Hugepages.\n    LinuxOSConfigARM   (Appears on:ManagedClusterAgentPoolProfileARM, ManagedClusterAgentPoolProfilePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/LinuxOSConfig\n    Field Description      swapFileSizeMB  int    SwapFileSizeMB: The size in MB of a swap file that will be created on each node.\n    sysctls  SysctlConfigARM     Sysctls: Sysctl settings for Linux agent nodes.\n    transparentHugePageDefrag  string    TransparentHugePageDefrag: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;defer\u0026rsquo;, \u0026lsquo;defer+madvise\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo; and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;madvise\u0026rsquo;. For more information see Transparent Hugepages.\n    transparentHugePageEnabled  string    TransparentHugePageEnabled: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo;, and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;always\u0026rsquo;. For more information see Transparent Hugepages.\n    LinuxOSConfig_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status)      Field Description      swapFileSizeMB  int    SwapFileSizeMB: The size in MB of a swap file that will be created on each node.\n    sysctls  SysctlConfig_Status     Sysctls: Sysctl settings for Linux agent nodes.\n    transparentHugePageDefrag  string    TransparentHugePageDefrag: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;defer\u0026rsquo;, \u0026lsquo;defer+madvise\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo; and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;madvise\u0026rsquo;. For more information see Transparent Hugepages.\n    transparentHugePageEnabled  string    TransparentHugePageEnabled: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo;, and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;always\u0026rsquo;. For more information see Transparent Hugepages.\n    LinuxOSConfig_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM)      Field Description      swapFileSizeMB  int    SwapFileSizeMB: The size in MB of a swap file that will be created on each node.\n    sysctls  SysctlConfig_StatusARM     Sysctls: Sysctl settings for Linux agent nodes.\n    transparentHugePageDefrag  string    TransparentHugePageDefrag: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;defer\u0026rsquo;, \u0026lsquo;defer+madvise\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo; and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;madvise\u0026rsquo;. For more information see Transparent Hugepages.\n    transparentHugePageEnabled  string    TransparentHugePageEnabled: Valid values are \u0026lsquo;always\u0026rsquo;, \u0026lsquo;madvise\u0026rsquo;, and \u0026lsquo;never\u0026rsquo;. The default is \u0026lsquo;always\u0026rsquo;. For more information see Transparent Hugepages.\n    ManagedCluster   Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/resourceDefinitions/managedClusters\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ManagedClusters_Spec          aadProfile  ManagedClusterAADProfile     AadProfile: For more details see managed AAD on AKS.\n    addonProfiles  map[string]./api/containerservice/v1beta20210501.ManagedClusterAddonProfile     AddonProfiles: The profile of managed cluster add-on.\n    agentPoolProfiles  []ManagedClusterAgentPoolProfile     AgentPoolProfiles: The agent pool properties.\n    apiServerAccessProfile  ManagedClusterAPIServerAccessProfile     ApiServerAccessProfile: Access profile for managed cluster API server.\n    autoScalerProfile  ManagedClusterPropertiesAutoScalerProfile     AutoScalerProfile: Parameters to be applied to the cluster-autoscaler when enabled\n    autoUpgradeProfile  ManagedClusterAutoUpgradeProfile     AutoUpgradeProfile: Auto upgrade profile for a managed cluster.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    disableLocalAccounts  bool    DisableLocalAccounts: If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.\n    diskEncryptionSetIDReference  genruntime.ResourceReference     DiskEncryptionSetIDReference: This is of the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}\u0026rsquo;\n    dnsPrefix  string    DnsPrefix: This cannot be updated once the Managed Cluster has been created.\n    enablePodSecurityPolicy  bool    EnablePodSecurityPolicy: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.\n    enableRBAC  bool    EnableRBAC: Whether to enable Kubernetes Role-Based Access Control.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    fqdnSubdomain  string    FqdnSubdomain: This cannot be updated once the Managed Cluster has been created.\n    httpProxyConfig  ManagedClusterHTTPProxyConfig     HttpProxyConfig: Cluster HTTP proxy configuration.\n    identity  ManagedClusterIdentity     Identity: Identity for the managed cluster.\n    identityProfile  map[string]./api/containerservice/v1beta20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties     IdentityProfile: Identities associated with the cluster.\n    kubernetesVersion  string    KubernetesVersion: When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -\u0026gt; 1.15.x or 1.15.x -\u0026gt; 1.16.x are allowed, however 1.14.x -\u0026gt; 1.16.x is not allowed. See upgrading an AKS cluster for more details.\n    linuxProfile  ContainerServiceLinuxProfile     LinuxProfile: Profile for Linux VMs in the container service cluster.\n    location  string    Location: Location to deploy resource to\n    networkProfile  ContainerServiceNetworkProfile     NetworkProfile: Profile of network configuration.\n    nodeResourceGroup  string    NodeResourceGroup: The name of the resource group containing agent pool nodes.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    podIdentityProfile  ManagedClusterPodIdentityProfile     PodIdentityProfile: See use AAD pod identity for more details on pod identity integration.\n    privateLinkResources  []PrivateLinkResource     PrivateLinkResources: Private link resources associated with the cluster.\n    servicePrincipalProfile  ManagedClusterServicePrincipalProfile     ServicePrincipalProfile: Information about a service principal identity for the cluster to use for manipulating Azure APIs.\n    sku  ManagedClusterSKU     Sku: The SKU of a Managed Cluster.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    windowsProfile  ManagedClusterWindowsProfile     WindowsProfile: Profile for Windows VMs in the managed cluster.\n       status  ManagedCluster_Status         ManagedClusterAADProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAADProfile\n    Field Description      adminGroupObjectIDs  []string    AdminGroupObjectIDs: The list of AAD group object IDs that will have admin role of the cluster.\n    clientAppID  string    ClientAppID: The client AAD application ID.\n    enableAzureRBAC  bool    EnableAzureRBAC: Whether to enable Azure RBAC for Kubernetes authorization.\n    managed  bool    Managed: Whether to enable managed AAD.\n    serverAppID  string    ServerAppID: The server AAD application ID.\n    serverAppSecret  string    ServerAppSecret: The server AAD application secret.\n    tenantID  string    TenantID: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.\n    ManagedClusterAADProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAADProfile\n    Field Description      adminGroupObjectIDs  []string    AdminGroupObjectIDs: The list of AAD group object IDs that will have admin role of the cluster.\n    clientAppID  string    ClientAppID: The client AAD application ID.\n    enableAzureRBAC  bool    EnableAzureRBAC: Whether to enable Azure RBAC for Kubernetes authorization.\n    managed  bool    Managed: Whether to enable managed AAD.\n    serverAppID  string    ServerAppID: The server AAD application ID.\n    serverAppSecret  string    ServerAppSecret: The server AAD application secret.\n    tenantID  string    TenantID: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.\n    ManagedClusterAADProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      adminGroupObjectIDs  []string    AdminGroupObjectIDs: The list of AAD group object IDs that will have admin role of the cluster.\n    clientAppID  string    ClientAppID: The client AAD application ID.\n    enableAzureRBAC  bool    EnableAzureRBAC: Whether to enable Azure RBAC for Kubernetes authorization.\n    managed  bool    Managed: Whether to enable managed AAD.\n    serverAppID  string    ServerAppID: The server AAD application ID.\n    serverAppSecret  string    ServerAppSecret: The server AAD application secret.\n    tenantID  string    TenantID: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.\n    ManagedClusterAADProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      adminGroupObjectIDs  []string    AdminGroupObjectIDs: The list of AAD group object IDs that will have admin role of the cluster.\n    clientAppID  string    ClientAppID: The client AAD application ID.\n    enableAzureRBAC  bool    EnableAzureRBAC: Whether to enable Azure RBAC for Kubernetes authorization.\n    managed  bool    Managed: Whether to enable managed AAD.\n    serverAppID  string    ServerAppID: The server AAD application ID.\n    serverAppSecret  string    ServerAppSecret: The server AAD application secret.\n    tenantID  string    TenantID: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.\n    ManagedClusterAPIServerAccessProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAPIServerAccessProfile\n    Field Description      authorizedIPRanges  []string    AuthorizedIPRanges: IP ranges are specified in CIDR format, e.g. 137.117.106.88\u0026frasl;29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see API server authorized IP ranges.\n    enablePrivateCluster  bool    EnablePrivateCluster: For more details, see Creating a private AKS cluster.\n    enablePrivateClusterPublicFQDN  bool    EnablePrivateClusterPublicFQDN: Whether to create additional public FQDN for private cluster or not.\n    privateDNSZone  string    PrivateDNSZone: The default is System. For more details see configure private DNS zone. Allowed values are \u0026lsquo;system\u0026rsquo; and \u0026lsquo;none\u0026rsquo;.\n    ManagedClusterAPIServerAccessProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAPIServerAccessProfile\n    Field Description      authorizedIPRanges  []string    AuthorizedIPRanges: IP ranges are specified in CIDR format, e.g. 137.117.106.88\u0026frasl;29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see API server authorized IP ranges.\n    enablePrivateCluster  bool    EnablePrivateCluster: For more details, see Creating a private AKS cluster.\n    enablePrivateClusterPublicFQDN  bool    EnablePrivateClusterPublicFQDN: Whether to create additional public FQDN for private cluster or not.\n    privateDNSZone  string    PrivateDNSZone: The default is System. For more details see configure private DNS zone. Allowed values are \u0026lsquo;system\u0026rsquo; and \u0026lsquo;none\u0026rsquo;.\n    ManagedClusterAPIServerAccessProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      authorizedIPRanges  []string    AuthorizedIPRanges: IP ranges are specified in CIDR format, e.g. 137.117.106.88\u0026frasl;29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see API server authorized IP ranges.\n    enablePrivateCluster  bool    EnablePrivateCluster: For more details, see Creating a private AKS cluster.\n    enablePrivateClusterPublicFQDN  bool    EnablePrivateClusterPublicFQDN: Whether to create additional public FQDN for private cluster or not.\n    privateDNSZone  string    PrivateDNSZone: The default is System. For more details see configure private DNS zone. Allowed values are \u0026lsquo;system\u0026rsquo; and \u0026lsquo;none\u0026rsquo;.\n    ManagedClusterAPIServerAccessProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      authorizedIPRanges  []string    AuthorizedIPRanges: IP ranges are specified in CIDR format, e.g. 137.117.106.88\u0026frasl;29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see API server authorized IP ranges.\n    enablePrivateCluster  bool    EnablePrivateCluster: For more details, see Creating a private AKS cluster.\n    enablePrivateClusterPublicFQDN  bool    EnablePrivateClusterPublicFQDN: Whether to create additional public FQDN for private cluster or not.\n    privateDNSZone  string    PrivateDNSZone: The default is System. For more details see configure private DNS zone. Allowed values are \u0026lsquo;system\u0026rsquo; and \u0026lsquo;none\u0026rsquo;.\n    ManagedClusterAddonProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAddonProfile\n    Field Description      config  map[string]string    Config: Key-value pairs for configuring an add-on.\n    enabled  bool    Enabled: Whether the add-on is enabled or not.\n    ManagedClusterAddonProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAddonProfile\n    Field Description      config  map[string]string    Config: Key-value pairs for configuring an add-on.\n    enabled  bool    Enabled: Whether the add-on is enabled or not.\n    ManagedClusterAgentPoolProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAgentPoolProfile\n    Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  ManagedClusterAgentPoolProfileGpuInstanceProfile     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig     KubeletConfig: See AKS custom node configuration for more details.\n    kubeletDiskType  ManagedClusterAgentPoolProfileKubeletDiskType         linuxOSConfig  LinuxOSConfig     LinuxOSConfig: See AKS custom node configuration for more details.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  ManagedClusterAgentPoolProfileMode         name  string    Name: Windows agent pool names must be 6 characters or less.\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixIDReference  genruntime.ResourceReference     NodePublicIPPrefixIDReference: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int    OsDiskSizeGB: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.\n    osDiskType  ManagedClusterAgentPoolProfileOsDiskType         osSKU  ManagedClusterAgentPoolProfileOsSKU         osType  ManagedClusterAgentPoolProfileOsType         podSubnetIDReference  genruntime.ResourceReference     PodSubnetIDReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ManagedClusterAgentPoolProfileScaleSetEvictionPolicy     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ManagedClusterAgentPoolProfileScaleSetPriority     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  ManagedClusterAgentPoolProfileType         upgradeSettings  AgentPoolUpgradeSettings     UpgradeSettings: Settings for upgrading an agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetIDReference  genruntime.ResourceReference     VnetSubnetIDReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    ManagedClusterAgentPoolProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAgentPoolProfile\n    Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  ManagedClusterAgentPoolProfileGpuInstanceProfile     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfigARM     KubeletConfig: See AKS custom node configuration for more details.\n    kubeletDiskType  ManagedClusterAgentPoolProfileKubeletDiskType         linuxOSConfig  LinuxOSConfigARM     LinuxOSConfig: See AKS custom node configuration for more details.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  ManagedClusterAgentPoolProfileMode         name  string    Name: Windows agent pool names must be 6 characters or less.\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string        nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int    OsDiskSizeGB: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.\n    osDiskType  ManagedClusterAgentPoolProfileOsDiskType         osSKU  ManagedClusterAgentPoolProfileOsSKU         osType  ManagedClusterAgentPoolProfileOsType         podSubnetID  string        proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ManagedClusterAgentPoolProfileScaleSetEvictionPolicy     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ManagedClusterAgentPoolProfileScaleSetPriority     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  ManagedClusterAgentPoolProfileType         upgradeSettings  AgentPoolUpgradeSettingsARM     UpgradeSettings: Settings for upgrading an agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string        ManagedClusterAgentPoolProfileGpuInstanceProfile (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    ManagedClusterAgentPoolProfileKubeletDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    ManagedClusterAgentPoolProfileMode (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    ManagedClusterAgentPoolProfileOsDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    ManagedClusterAgentPoolProfileOsSKU (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    ManagedClusterAgentPoolProfileOsType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesARM   (Appears on:ManagedClustersAgentPools_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAgentPoolProfileProperties\n    Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfigARM     KubeletConfig: See AKS custom node configuration for more details.\n    kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfigARM     LinuxOSConfig: See AKS custom node configuration for more details.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string        nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int    OsDiskSizeGB: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.\n    osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         podSubnetID  string        proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettingsARM     UpgradeSettings: Settings for upgrading an agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string        ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;MIG1g\u0026#34;\n  \u0026#34;MIG2g\u0026#34;\n  \u0026#34;MIG3g\u0026#34;\n  \u0026#34;MIG4g\u0026#34;\n  \u0026#34;MIG7g\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesKubeletDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;OS\u0026#34;\n  \u0026#34;Temporary\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesMode (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;System\u0026#34;\n  \u0026#34;User\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsDiskType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsSKU (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesOsType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesScaleSetPriority (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    ManagedClusterAgentPoolProfilePropertiesType (string alias)  (Appears on:ManagedClusterAgentPoolProfilePropertiesARM, ManagedClustersAgentPools_Spec)      Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    ManagedClusterAgentPoolProfileProperties_StatusARM   (Appears on:AgentPool_StatusARM)      Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  GPUInstanceProfile_Status     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig_StatusARM     KubeletConfig: The Kubelet configuration on the agent pool nodes.\n    kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_StatusARM     LinuxOSConfig: The OS configuration of Linux agent nodes.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  AgentPoolMode_Status         nodeImageVersion  string    NodeImageVersion: The version of node image\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string    NodePublicIPPrefixID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string    PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    powerState  PowerState_StatusARM     PowerState: Describes whether the Agent Pool is Running or Stopped\n    provisioningState  string    ProvisioningState: The current deployment or provisioning state.\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ScaleSetPriority_Status     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_StatusARM     UpgradeSettings: Settings for upgrading the agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string    VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    ManagedClusterAgentPoolProfileScaleSetEvictionPolicy (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ManagedClusterAgentPoolProfileScaleSetPriority (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    ManagedClusterAgentPoolProfileType (string alias)  (Appears on:ManagedClusterAgentPoolProfile, ManagedClusterAgentPoolProfileARM)      Value Description   \u0026#34;AvailabilitySet\u0026#34;\n  \u0026#34;VirtualMachineScaleSets\u0026#34;\n    ManagedClusterAgentPoolProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  GPUInstanceProfile_Status     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig_Status     KubeletConfig: The Kubelet configuration on the agent pool nodes.\n    kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_Status     LinuxOSConfig: The OS configuration of Linux agent nodes.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  AgentPoolMode_Status         name  string    Name: Windows agent pool names must be 6 characters or less.\n    nodeImageVersion  string    NodeImageVersion: The version of node image\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string    NodePublicIPPrefixID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string    PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    powerState  PowerState_Status     PowerState: Describes whether the Agent Pool is Running or Stopped\n    provisioningState  string    ProvisioningState: The current deployment or provisioning state.\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ScaleSetPriority_Status     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_Status     UpgradeSettings: Settings for upgrading the agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string    VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    ManagedClusterAgentPoolProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  GPUInstanceProfile_Status     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig_StatusARM     KubeletConfig: The Kubelet configuration on the agent pool nodes.\n    kubeletDiskType  KubeletDiskType_Status         linuxOSConfig  LinuxOSConfig_StatusARM     LinuxOSConfig: The OS configuration of Linux agent nodes.\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  AgentPoolMode_Status         name  string    Name: Windows agent pool names must be 6 characters or less.\n    nodeImageVersion  string    NodeImageVersion: The version of node image\n    nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixID  string    NodePublicIPPrefixID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int        osDiskType  OSDiskType_Status         osSKU  OSSKU_Status         osType  OSType_Status         podSubnetID  string    PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    powerState  PowerState_StatusARM     PowerState: Describes whether the Agent Pool is Running or Stopped\n    provisioningState  string    ProvisioningState: The current deployment or provisioning state.\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ScaleSetEvictionPolicy_Status     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ScaleSetPriority_Status     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  AgentPoolType_Status         upgradeSettings  AgentPoolUpgradeSettings_StatusARM     UpgradeSettings: Settings for upgrading the agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetID  string    VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    ManagedClusterAutoUpgradeProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAutoUpgradeProfile\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileUpgradeChannel     UpgradeChannel: For more information see setting the AKS cluster auto-upgrade channel.\n    ManagedClusterAutoUpgradeProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterAutoUpgradeProfile\n    Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileUpgradeChannel     UpgradeChannel: For more information see setting the AKS cluster auto-upgrade channel.\n    ManagedClusterAutoUpgradeProfileStatusUpgradeChannel (string alias)  (Appears on:ManagedClusterAutoUpgradeProfile_Status, ManagedClusterAutoUpgradeProfile_StatusARM)      Value Description   \u0026#34;node-image\u0026#34;\n  \u0026#34;none\u0026#34;\n  \u0026#34;patch\u0026#34;\n  \u0026#34;rapid\u0026#34;\n  \u0026#34;stable\u0026#34;\n    ManagedClusterAutoUpgradeProfileUpgradeChannel (string alias)  (Appears on:ManagedClusterAutoUpgradeProfile, ManagedClusterAutoUpgradeProfileARM)      Value Description   \u0026#34;node-image\u0026#34;\n  \u0026#34;none\u0026#34;\n  \u0026#34;patch\u0026#34;\n  \u0026#34;rapid\u0026#34;\n  \u0026#34;stable\u0026#34;\n    ManagedClusterAutoUpgradeProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileStatusUpgradeChannel     UpgradeChannel: For more information see setting the AKS cluster auto-upgrade channel.\n    ManagedClusterAutoUpgradeProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      upgradeChannel  ManagedClusterAutoUpgradeProfileStatusUpgradeChannel     UpgradeChannel: For more information see setting the AKS cluster auto-upgrade channel.\n    ManagedClusterHTTPProxyConfig   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterHTTPProxyConfig\n    Field Description      httpProxy  string    HttpProxy: The HTTP proxy server endpoint to use.\n    httpsProxy  string    HttpsProxy: The HTTPS proxy server endpoint to use.\n    noProxy  []string    NoProxy: The endpoints that should not go through proxy.\n    trustedCa  string    TrustedCa: Alternative CA cert to use for connecting to proxy servers.\n    ManagedClusterHTTPProxyConfigARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterHTTPProxyConfig\n    Field Description      httpProxy  string    HttpProxy: The HTTP proxy server endpoint to use.\n    httpsProxy  string    HttpsProxy: The HTTPS proxy server endpoint to use.\n    noProxy  []string    NoProxy: The endpoints that should not go through proxy.\n    trustedCa  string    TrustedCa: Alternative CA cert to use for connecting to proxy servers.\n    ManagedClusterHTTPProxyConfig_Status   (Appears on:ManagedCluster_Status)      Field Description      httpProxy  string    HttpProxy: The HTTP proxy server endpoint to use.\n    httpsProxy  string    HttpsProxy: The HTTPS proxy server endpoint to use.\n    noProxy  []string    NoProxy: The endpoints that should not go through proxy.\n    trustedCa  string    TrustedCa: Alternative CA cert to use for connecting to proxy servers.\n    ManagedClusterHTTPProxyConfig_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      httpProxy  string    HttpProxy: The HTTP proxy server endpoint to use.\n    httpsProxy  string    HttpsProxy: The HTTPS proxy server endpoint to use.\n    noProxy  []string    NoProxy: The endpoints that should not go through proxy.\n    trustedCa  string    TrustedCa: Alternative CA cert to use for connecting to proxy servers.\n    ManagedClusterIdentity   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterIdentity\n    Field Description      type  ManagedClusterIdentityType     Type: For more information see use managed identities in AKS.\n    userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: The keys must be ARM resource IDs in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedClusterIdentityARM   (Appears on:ManagedClusters_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterIdentity\n    Field Description      type  ManagedClusterIdentityType     Type: For more information see use managed identities in AKS.\n    userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: The keys must be ARM resource IDs in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedClusterIdentityStatusType (string alias)  (Appears on:ManagedClusterIdentity_Status, ManagedClusterIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedClusterIdentityType (string alias)  (Appears on:ManagedClusterIdentity, ManagedClusterIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedClusterIdentity_Status   (Appears on:ManagedCluster_Status)      Field Description      principalId  string    PrincipalId: The principal id of the system assigned identity which is used by master components.\n    tenantId  string    TenantId: The tenant id of the system assigned identity which is used by master components.\n    type  ManagedClusterIdentityStatusType     Type: For more information see use managed identities in AKS.\n    userAssignedIdentities  map[string]./api/containerservice/v1beta20210501.ManagedClusterIdentity_Status_UserAssignedIdentities     UserAssignedIdentities: The keys must be ARM resource IDs in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedClusterIdentity_StatusARM   (Appears on:ManagedCluster_StatusARM)      Field Description      principalId  string    PrincipalId: The principal id of the system assigned identity which is used by master components.\n    tenantId  string    TenantId: The tenant id of the system assigned identity which is used by master components.\n    type  ManagedClusterIdentityStatusType     Type: For more information see use managed identities in AKS.\n    userAssignedIdentities  map[string]./api/containerservice/v1beta20210501.ManagedClusterIdentity_Status_UserAssignedIdentitiesARM     UserAssignedIdentities: The keys must be ARM resource IDs in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedClusterIdentity_Status_UserAssignedIdentities   (Appears on:ManagedClusterIdentity_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    ManagedClusterIdentity_Status_UserAssignedIdentitiesARM   (Appears on:ManagedClusterIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    ManagedClusterLoadBalancerProfile   (Appears on:ContainerServiceNetworkProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfile\n    Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.\n    effectiveOutboundIPs  []ResourceReference     EffectiveOutboundIPs: The effective outbound IP resources of the cluster load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.\n    managedOutboundIPs  ManagedClusterLoadBalancerProfileManagedOutboundIPs     ManagedOutboundIPs: Desired managed outbound IPs for the cluster load balancer.\n    outboundIPPrefixes  ManagedClusterLoadBalancerProfileOutboundIPPrefixes     OutboundIPPrefixes: Desired outbound IP Prefix resources for the cluster load balancer.\n    outboundIPs  ManagedClusterLoadBalancerProfileOutboundIPs     OutboundIPs: Desired outbound IP resources for the cluster load balancer.\n    ManagedClusterLoadBalancerProfileARM   (Appears on:ContainerServiceNetworkProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfile\n    Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.\n    effectiveOutboundIPs  []ResourceReferenceARM     EffectiveOutboundIPs: The effective outbound IP resources of the cluster load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.\n    managedOutboundIPs  ManagedClusterLoadBalancerProfileManagedOutboundIPsARM     ManagedOutboundIPs: Desired managed outbound IPs for the cluster load balancer.\n    outboundIPPrefixes  ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM     OutboundIPPrefixes: Desired outbound IP Prefix resources for the cluster load balancer.\n    outboundIPs  ManagedClusterLoadBalancerProfileOutboundIPsARM     OutboundIPs: Desired outbound IP resources for the cluster load balancer.\n    ManagedClusterLoadBalancerProfileManagedOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileManagedOutboundIPs\n    Field Description      count  int    Count: The desired number of outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.\n    ManagedClusterLoadBalancerProfileManagedOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileManagedOutboundIPs\n    Field Description      count  int    Count: The desired number of outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.\n    ManagedClusterLoadBalancerProfileOutboundIPPrefixes   (Appears on:ManagedClusterLoadBalancerProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileOutboundIPPrefixes\n    Field Description      publicIPPrefixes  []ResourceReference     PublicIPPrefixes: A list of public IP prefix resources.\n    ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileOutboundIPPrefixes\n    Field Description      publicIPPrefixes  []ResourceReferenceARM     PublicIPPrefixes: A list of public IP prefix resources.\n    ManagedClusterLoadBalancerProfileOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileOutboundIPs\n    Field Description      publicIPs  []ResourceReference     PublicIPs: A list of public IP resources.\n    ManagedClusterLoadBalancerProfileOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterLoadBalancerProfileOutboundIPs\n    Field Description      publicIPs  []ResourceReferenceARM     PublicIPs: A list of public IP resources.\n    ManagedClusterLoadBalancerProfile_Status   (Appears on:ContainerServiceNetworkProfile_Status)      Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.\n    effectiveOutboundIPs  []ResourceReference_Status     EffectiveOutboundIPs: The effective outbound IP resources of the cluster load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.\n    managedOutboundIPs  ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs     ManagedOutboundIPs: Desired managed outbound IPs for the cluster load balancer.\n    outboundIPPrefixes  ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes     OutboundIPPrefixes: Desired outbound IP Prefix resources for the cluster load balancer.\n    outboundIPs  ManagedClusterLoadBalancerProfile_Status_OutboundIPs     OutboundIPs: Desired outbound IP resources for the cluster load balancer.\n    ManagedClusterLoadBalancerProfile_StatusARM   (Appears on:ContainerServiceNetworkProfile_StatusARM)      Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.\n    effectiveOutboundIPs  []ResourceReference_StatusARM     EffectiveOutboundIPs: The effective outbound IP resources of the cluster load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.\n    managedOutboundIPs  ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM     ManagedOutboundIPs: Desired managed outbound IPs for the cluster load balancer.\n    outboundIPPrefixes  ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM     OutboundIPPrefixes: Desired outbound IP Prefix resources for the cluster load balancer.\n    outboundIPs  ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM     OutboundIPs: Desired outbound IP resources for the cluster load balancer.\n    ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile_Status)      Field Description      count  int    Count: The desired number of outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.\n    ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)      Field Description      count  int    Count: The desired number of outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.\n    ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes   (Appears on:ManagedClusterLoadBalancerProfile_Status)      Field Description      publicIPPrefixes  []ResourceReference_Status     PublicIPPrefixes: A list of public IP prefix resources.\n    ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)      Field Description      publicIPPrefixes  []ResourceReference_StatusARM     PublicIPPrefixes: A list of public IP prefix resources.\n    ManagedClusterLoadBalancerProfile_Status_OutboundIPs   (Appears on:ManagedClusterLoadBalancerProfile_Status)      Field Description      publicIPs  []ResourceReference_Status     PublicIPs: A list of public IP resources.\n    ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM)      Field Description      publicIPs  []ResourceReference_StatusARM     PublicIPs: A list of public IP resources.\n    ManagedClusterPodIdentity   (Appears on:ManagedClusterPodIdentityProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentity\n    Field Description      bindingSelector  string    BindingSelector: The binding selector to use for the AzureIdentityBinding resource.\n    identity  UserAssignedIdentity     Identity: Details about a user assigned identity.\n    name  string    Name: The name of the pod identity.\n    namespace  string    Namespace: The namespace of the pod identity.\n    ManagedClusterPodIdentityARM   (Appears on:ManagedClusterPodIdentityProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentity\n    Field Description      bindingSelector  string    BindingSelector: The binding selector to use for the AzureIdentityBinding resource.\n    identity  UserAssignedIdentityARM     Identity: Details about a user assigned identity.\n    name  string    Name: The name of the pod identity.\n    namespace  string    Namespace: The namespace of the pod identity.\n    ManagedClusterPodIdentityException   (Appears on:ManagedClusterPodIdentityProfile)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentityException\n    Field Description      name  string    Name: The name of the pod identity exception.\n    namespace  string    Namespace: The namespace of the pod identity exception.\n    podLabels  map[string]string    PodLabels: The pod labels to match.\n    ManagedClusterPodIdentityExceptionARM   (Appears on:ManagedClusterPodIdentityProfileARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentityException\n    Field Description      name  string    Name: The name of the pod identity exception.\n    namespace  string    Namespace: The namespace of the pod identity exception.\n    podLabels  map[string]string    PodLabels: The pod labels to match.\n    ManagedClusterPodIdentityException_Status   (Appears on:ManagedClusterPodIdentityProfile_Status)      Field Description      name  string    Name: The name of the pod identity exception.\n    namespace  string    Namespace: The namespace of the pod identity exception.\n    podLabels  map[string]string    PodLabels: The pod labels to match.\n    ManagedClusterPodIdentityException_StatusARM   (Appears on:ManagedClusterPodIdentityProfile_StatusARM)      Field Description      name  string    Name: The name of the pod identity exception.\n    namespace  string    Namespace: The namespace of the pod identity exception.\n    podLabels  map[string]string    PodLabels: The pod labels to match.\n    ManagedClusterPodIdentityProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentityProfile\n    Field Description      allowNetworkPluginKubenet  bool    AllowNetworkPluginKubenet: Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See using Kubenet network plugin with AAD Pod Identity for more information.\n    enabled  bool    Enabled: Whether the pod identity addon is enabled.\n    userAssignedIdentities  []ManagedClusterPodIdentity     UserAssignedIdentities: The pod identities to use in the cluster.\n    userAssignedIdentityExceptions  []ManagedClusterPodIdentityException     UserAssignedIdentityExceptions: The pod identity exceptions to allow.\n    ManagedClusterPodIdentityProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPodIdentityProfile\n    Field Description      allowNetworkPluginKubenet  bool    AllowNetworkPluginKubenet: Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See using Kubenet network plugin with AAD Pod Identity for more information.\n    enabled  bool    Enabled: Whether the pod identity addon is enabled.\n    userAssignedIdentities  []ManagedClusterPodIdentityARM     UserAssignedIdentities: The pod identities to use in the cluster.\n    userAssignedIdentityExceptions  []ManagedClusterPodIdentityExceptionARM     UserAssignedIdentityExceptions: The pod identity exceptions to allow.\n    ManagedClusterPodIdentityProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      allowNetworkPluginKubenet  bool    AllowNetworkPluginKubenet: Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See using Kubenet network plugin with AAD Pod Identity for more information.\n    enabled  bool    Enabled: Whether the pod identity addon is enabled.\n    userAssignedIdentities  []ManagedClusterPodIdentity_Status     UserAssignedIdentities: The pod identities to use in the cluster.\n    userAssignedIdentityExceptions  []ManagedClusterPodIdentityException_Status     UserAssignedIdentityExceptions: The pod identity exceptions to allow.\n    ManagedClusterPodIdentityProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      allowNetworkPluginKubenet  bool    AllowNetworkPluginKubenet: Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See using Kubenet network plugin with AAD Pod Identity for more information.\n    enabled  bool    Enabled: Whether the pod identity addon is enabled.\n    userAssignedIdentities  []ManagedClusterPodIdentity_StatusARM     UserAssignedIdentities: The pod identities to use in the cluster.\n    userAssignedIdentityExceptions  []ManagedClusterPodIdentityException_StatusARM     UserAssignedIdentityExceptions: The pod identity exceptions to allow.\n    ManagedClusterPodIdentityProvisioningErrorBody_Status   (Appears on:ManagedClusterPodIdentityProvisioningError_Status)      Field Description      code  string    Code: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n    details  []ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled     Details: A list of additional details about the error.\n    message  string    Message: A message describing the error, intended to be suitable for display in a user interface.\n    target  string    Target: The target of the particular error. For example, the name of the property in error.\n    ManagedClusterPodIdentityProvisioningErrorBody_StatusARM   (Appears on:ManagedClusterPodIdentityProvisioningError_StatusARM)      Field Description      code  string    Code: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n    details  []ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM     Details: A list of additional details about the error.\n    message  string    Message: A message describing the error, intended to be suitable for display in a user interface.\n    target  string    Target: The target of the particular error. For example, the name of the property in error.\n    ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled   (Appears on:ManagedClusterPodIdentityProvisioningErrorBody_Status)      Field Description      code  string    Code: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n    message  string    Message: A message describing the error, intended to be suitable for display in a user interface.\n    target  string    Target: The target of the particular error. For example, the name of the property in error.\n    ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM   (Appears on:ManagedClusterPodIdentityProvisioningErrorBody_StatusARM)      Field Description      code  string    Code: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n    message  string    Message: A message describing the error, intended to be suitable for display in a user interface.\n    target  string    Target: The target of the particular error. For example, the name of the property in error.\n    ManagedClusterPodIdentityProvisioningError_Status   (Appears on:ManagedClusterPodIdentity_Status_ProvisioningInfo)      Field Description      error  ManagedClusterPodIdentityProvisioningErrorBody_Status     Error: Details about the error.\n    ManagedClusterPodIdentityProvisioningError_StatusARM   (Appears on:ManagedClusterPodIdentity_Status_ProvisioningInfoARM)      Field Description      error  ManagedClusterPodIdentityProvisioningErrorBody_StatusARM     Error: Details about the error.\n    ManagedClusterPodIdentityStatusProvisioningState (string alias)  (Appears on:ManagedClusterPodIdentity_Status, ManagedClusterPodIdentity_StatusARM)      Value Description   \u0026#34;Assigned\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ManagedClusterPodIdentity_Status   (Appears on:ManagedClusterPodIdentityProfile_Status)      Field Description      bindingSelector  string    BindingSelector: The binding selector to use for the AzureIdentityBinding resource.\n    identity  UserAssignedIdentity_Status     Identity: The user assigned identity details.\n    name  string    Name: The name of the pod identity.\n    namespace  string    Namespace: The namespace of the pod identity.\n    provisioningInfo  ManagedClusterPodIdentity_Status_ProvisioningInfo         provisioningState  ManagedClusterPodIdentityStatusProvisioningState     ProvisioningState: The current provisioning state of the pod identity.\n    ManagedClusterPodIdentity_StatusARM   (Appears on:ManagedClusterPodIdentityProfile_StatusARM)      Field Description      bindingSelector  string    BindingSelector: The binding selector to use for the AzureIdentityBinding resource.\n    identity  UserAssignedIdentity_StatusARM     Identity: The user assigned identity details.\n    name  string    Name: The name of the pod identity.\n    namespace  string    Namespace: The namespace of the pod identity.\n    provisioningInfo  ManagedClusterPodIdentity_Status_ProvisioningInfoARM         provisioningState  ManagedClusterPodIdentityStatusProvisioningState     ProvisioningState: The current provisioning state of the pod identity.\n    ManagedClusterPodIdentity_Status_ProvisioningInfo   (Appears on:ManagedClusterPodIdentity_Status)      Field Description      error  ManagedClusterPodIdentityProvisioningError_Status     Error: Pod identity assignment error (if any).\n    ManagedClusterPodIdentity_Status_ProvisioningInfoARM   (Appears on:ManagedClusterPodIdentity_StatusARM)      Field Description      error  ManagedClusterPodIdentityProvisioningError_StatusARM     Error: Pod identity assignment error (if any).\n    ManagedClusterPropertiesARM   (Appears on:ManagedClusters_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterProperties\n    Field Description      aadProfile  ManagedClusterAADProfileARM     AadProfile: For more details see managed AAD on AKS.\n    addonProfiles  map[string]./api/containerservice/v1beta20210501.ManagedClusterAddonProfileARM     AddonProfiles: The profile of managed cluster add-on.\n    agentPoolProfiles  []ManagedClusterAgentPoolProfileARM     AgentPoolProfiles: The agent pool properties.\n    apiServerAccessProfile  ManagedClusterAPIServerAccessProfileARM     ApiServerAccessProfile: Access profile for managed cluster API server.\n    autoScalerProfile  ManagedClusterPropertiesAutoScalerProfileARM     AutoScalerProfile: Parameters to be applied to the cluster-autoscaler when enabled\n    autoUpgradeProfile  ManagedClusterAutoUpgradeProfileARM     AutoUpgradeProfile: Auto upgrade profile for a managed cluster.\n    disableLocalAccounts  bool    DisableLocalAccounts: If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.\n    diskEncryptionSetID  string        dnsPrefix  string    DnsPrefix: This cannot be updated once the Managed Cluster has been created.\n    enablePodSecurityPolicy  bool    EnablePodSecurityPolicy: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.\n    enableRBAC  bool    EnableRBAC: Whether to enable Kubernetes Role-Based Access Control.\n    fqdnSubdomain  string    FqdnSubdomain: This cannot be updated once the Managed Cluster has been created.\n    httpProxyConfig  ManagedClusterHTTPProxyConfigARM     HttpProxyConfig: Cluster HTTP proxy configuration.\n    identityProfile  map[string]./api/containerservice/v1beta20210501.Componentsqit0EtschemasmanagedclusterpropertiespropertiesidentityprofileadditionalpropertiesARM     IdentityProfile: Identities associated with the cluster.\n    kubernetesVersion  string    KubernetesVersion: When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -\u0026gt; 1.15.x or 1.15.x -\u0026gt; 1.16.x are allowed, however 1.14.x -\u0026gt; 1.16.x is not allowed. See upgrading an AKS cluster for more details.\n    linuxProfile  ContainerServiceLinuxProfileARM     LinuxProfile: Profile for Linux VMs in the container service cluster.\n    networkProfile  ContainerServiceNetworkProfileARM     NetworkProfile: Profile of network configuration.\n    nodeResourceGroup  string    NodeResourceGroup: The name of the resource group containing agent pool nodes.\n    podIdentityProfile  ManagedClusterPodIdentityProfileARM     PodIdentityProfile: See use AAD pod identity for more details on pod identity integration.\n    privateLinkResources  []PrivateLinkResourceARM     PrivateLinkResources: Private link resources associated with the cluster.\n    servicePrincipalProfile  ManagedClusterServicePrincipalProfileARM     ServicePrincipalProfile: Information about a service principal identity for the cluster to use for manipulating Azure APIs.\n    windowsProfile  ManagedClusterWindowsProfileARM     WindowsProfile: Profile for Windows VMs in the managed cluster.\n    ManagedClusterPropertiesAutoScalerProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPropertiesAutoScalerProfile\n    Field Description      balance-similar-node-groups  string    BalanceSimilarNodeGroups: Valid values are \u0026lsquo;true\u0026rsquo; and \u0026lsquo;false\u0026rsquo;\n    expander  ManagedClusterPropertiesAutoScalerProfileExpander     Expander: If not specified, the default is \u0026lsquo;random\u0026rsquo;. See expanders for more information.\n    max-empty-bulk-delete  string    MaxEmptyBulkDelete: The default is 10.\n    max-graceful-termination-sec  string    MaxGracefulTerminationSec: The default is 600.\n    max-node-provision-time  string    MaxNodeProvisionTime: The default is \u0026lsquo;15m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    max-total-unready-percentage  string    MaxTotalUnreadyPercentage: The default is 45. The maximum is 100 and the minimum is 0.\n    new-pod-scale-up-delay  string    NewPodScaleUpDelay: For scenarios like burst/batch scale where you don\u0026rsquo;t want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they\u0026rsquo;re a certain age. The default is \u0026lsquo;0s\u0026rsquo;. Values must be an integer followed by a unit (\u0026rsquo;s\u0026rsquo; for seconds, \u0026rsquo;m\u0026rsquo; for minutes, \u0026lsquo;h\u0026rsquo; for hours, etc).\n    ok-total-unready-count  string    OkTotalUnreadyCount: This must be an integer. The default is 3.\n    scale-down-delay-after-add  string    ScaleDownDelayAfterAdd: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-delete  string    ScaleDownDelayAfterDelete: The default is the scan-interval. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-failure  string    ScaleDownDelayAfterFailure: The default is \u0026lsquo;3m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unneeded-time  string    ScaleDownUnneededTime: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unready-time  string    ScaleDownUnreadyTime: The default is \u0026lsquo;20m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-utilization-threshold  string    ScaleDownUtilizationThreshold: The default is \u0026lsquo;0.5\u0026rsquo;.\n    scan-interval  string    ScanInterval: The default is \u0026lsquo;10\u0026rsquo;. Values must be an integer number of seconds.\n    skip-nodes-with-local-storage  string    SkipNodesWithLocalStorage: The default is true.\n    skip-nodes-with-system-pods  string    SkipNodesWithSystemPods: The default is true.\n    ManagedClusterPropertiesAutoScalerProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterPropertiesAutoScalerProfile\n    Field Description      balance-similar-node-groups  string    BalanceSimilarNodeGroups: Valid values are \u0026lsquo;true\u0026rsquo; and \u0026lsquo;false\u0026rsquo;\n    expander  ManagedClusterPropertiesAutoScalerProfileExpander     Expander: If not specified, the default is \u0026lsquo;random\u0026rsquo;. See expanders for more information.\n    max-empty-bulk-delete  string    MaxEmptyBulkDelete: The default is 10.\n    max-graceful-termination-sec  string    MaxGracefulTerminationSec: The default is 600.\n    max-node-provision-time  string    MaxNodeProvisionTime: The default is \u0026lsquo;15m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    max-total-unready-percentage  string    MaxTotalUnreadyPercentage: The default is 45. The maximum is 100 and the minimum is 0.\n    new-pod-scale-up-delay  string    NewPodScaleUpDelay: For scenarios like burst/batch scale where you don\u0026rsquo;t want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they\u0026rsquo;re a certain age. The default is \u0026lsquo;0s\u0026rsquo;. Values must be an integer followed by a unit (\u0026rsquo;s\u0026rsquo; for seconds, \u0026rsquo;m\u0026rsquo; for minutes, \u0026lsquo;h\u0026rsquo; for hours, etc).\n    ok-total-unready-count  string    OkTotalUnreadyCount: This must be an integer. The default is 3.\n    scale-down-delay-after-add  string    ScaleDownDelayAfterAdd: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-delete  string    ScaleDownDelayAfterDelete: The default is the scan-interval. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-failure  string    ScaleDownDelayAfterFailure: The default is \u0026lsquo;3m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unneeded-time  string    ScaleDownUnneededTime: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unready-time  string    ScaleDownUnreadyTime: The default is \u0026lsquo;20m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-utilization-threshold  string    ScaleDownUtilizationThreshold: The default is \u0026lsquo;0.5\u0026rsquo;.\n    scan-interval  string    ScanInterval: The default is \u0026lsquo;10\u0026rsquo;. Values must be an integer number of seconds.\n    skip-nodes-with-local-storage  string    SkipNodesWithLocalStorage: The default is true.\n    skip-nodes-with-system-pods  string    SkipNodesWithSystemPods: The default is true.\n    ManagedClusterPropertiesAutoScalerProfileExpander (string alias)  (Appears on:ManagedClusterPropertiesAutoScalerProfile, ManagedClusterPropertiesAutoScalerProfileARM)      Value Description   \u0026#34;least-waste\u0026#34;\n  \u0026#34;most-pods\u0026#34;\n  \u0026#34;priority\u0026#34;\n  \u0026#34;random\u0026#34;\n    ManagedClusterPropertiesStatusAutoScalerProfileExpander (string alias)  (Appears on:ManagedClusterProperties_Status_AutoScalerProfile, ManagedClusterProperties_Status_AutoScalerProfileARM)      Value Description   \u0026#34;least-waste\u0026#34;\n  \u0026#34;most-pods\u0026#34;\n  \u0026#34;priority\u0026#34;\n  \u0026#34;random\u0026#34;\n    ManagedClusterProperties_StatusARM   (Appears on:ManagedCluster_StatusARM)      Field Description      aadProfile  ManagedClusterAADProfile_StatusARM     AadProfile: The Azure Active Directory configuration.\n    addonProfiles  Kubernetes v1.JSON     AddonProfiles: The profile of managed cluster add-on.\n    agentPoolProfiles  []ManagedClusterAgentPoolProfile_StatusARM     AgentPoolProfiles: The agent pool properties.\n    apiServerAccessProfile  ManagedClusterAPIServerAccessProfile_StatusARM     ApiServerAccessProfile: The access profile for managed cluster API server.\n    autoScalerProfile  ManagedClusterProperties_Status_AutoScalerProfileARM     AutoScalerProfile: Parameters to be applied to the cluster-autoscaler when enabled\n    autoUpgradeProfile  ManagedClusterAutoUpgradeProfile_StatusARM     AutoUpgradeProfile: The auto upgrade configuration.\n    azurePortalFQDN  string    AzurePortalFQDN: The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn\u0026rsquo;t handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.\n    disableLocalAccounts  bool    DisableLocalAccounts: If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.\n    diskEncryptionSetID  string    DiskEncryptionSetID: This is of the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}\u0026rsquo;\n    dnsPrefix  string    DnsPrefix: This cannot be updated once the Managed Cluster has been created.\n    enablePodSecurityPolicy  bool    EnablePodSecurityPolicy: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.\n    enableRBAC  bool    EnableRBAC: Whether to enable Kubernetes Role-Based Access Control.\n    fqdn  string    Fqdn: The FQDN of the master pool.\n    fqdnSubdomain  string    FqdnSubdomain: This cannot be updated once the Managed Cluster has been created.\n    httpProxyConfig  ManagedClusterHTTPProxyConfig_StatusARM     HttpProxyConfig: Configurations for provisioning the cluster with HTTP proxy servers.\n    identityProfile  Kubernetes v1.JSON     IdentityProfile: Identities associated with the cluster.\n    kubernetesVersion  string    KubernetesVersion: When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -\u0026gt; 1.15.x or 1.15.x -\u0026gt; 1.16.x are allowed, however 1.14.x -\u0026gt; 1.16.x is not allowed. See upgrading an AKS cluster for more details.\n    linuxProfile  ContainerServiceLinuxProfile_StatusARM     LinuxProfile: The profile for Linux VMs in the Managed Cluster.\n    maxAgentPools  int    MaxAgentPools: The max number of agent pools for the managed cluster.\n    networkProfile  ContainerServiceNetworkProfile_StatusARM     NetworkProfile: The network configuration profile.\n    nodeResourceGroup  string    NodeResourceGroup: The name of the resource group containing agent pool nodes.\n    podIdentityProfile  ManagedClusterPodIdentityProfile_StatusARM     PodIdentityProfile: See use AAD pod identity for more details on AAD pod identity integration.\n    powerState  PowerState_StatusARM     PowerState: The Power State of the cluster.\n    privateFQDN  string    PrivateFQDN: The FQDN of private cluster.\n    privateLinkResources  []PrivateLinkResource_StatusARM     PrivateLinkResources: Private link resources associated with the cluster.\n    provisioningState  string    ProvisioningState: The current provisioning state.\n    servicePrincipalProfile  ManagedClusterServicePrincipalProfile_StatusARM     ServicePrincipalProfile: Information about a service principal identity for the cluster to use for manipulating Azure APIs.\n    windowsProfile  ManagedClusterWindowsProfile_StatusARM     WindowsProfile: The profile for Windows VMs in the Managed Cluster.\n    ManagedClusterProperties_Status_AutoScalerProfile   (Appears on:ManagedCluster_Status)      Field Description      balance-similar-node-groups  string    BalanceSimilarNodeGroups: Valid values are \u0026lsquo;true\u0026rsquo; and \u0026lsquo;false\u0026rsquo;\n    expander  ManagedClusterPropertiesStatusAutoScalerProfileExpander     Expander: If not specified, the default is \u0026lsquo;random\u0026rsquo;. See expanders for more information.\n    max-empty-bulk-delete  string    MaxEmptyBulkDelete: The default is 10.\n    max-graceful-termination-sec  string    MaxGracefulTerminationSec: The default is 600.\n    max-node-provision-time  string    MaxNodeProvisionTime: The default is \u0026lsquo;15m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    max-total-unready-percentage  string    MaxTotalUnreadyPercentage: The default is 45. The maximum is 100 and the minimum is 0.\n    new-pod-scale-up-delay  string    NewPodScaleUpDelay: For scenarios like burst/batch scale where you don\u0026rsquo;t want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they\u0026rsquo;re a certain age. The default is \u0026lsquo;0s\u0026rsquo;. Values must be an integer followed by a unit (\u0026rsquo;s\u0026rsquo; for seconds, \u0026rsquo;m\u0026rsquo; for minutes, \u0026lsquo;h\u0026rsquo; for hours, etc).\n    ok-total-unready-count  string    OkTotalUnreadyCount: This must be an integer. The default is 3.\n    scale-down-delay-after-add  string    ScaleDownDelayAfterAdd: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-delete  string    ScaleDownDelayAfterDelete: The default is the scan-interval. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-failure  string    ScaleDownDelayAfterFailure: The default is \u0026lsquo;3m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unneeded-time  string    ScaleDownUnneededTime: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unready-time  string    ScaleDownUnreadyTime: The default is \u0026lsquo;20m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-utilization-threshold  string    ScaleDownUtilizationThreshold: The default is \u0026lsquo;0.5\u0026rsquo;.\n    scan-interval  string    ScanInterval: The default is \u0026lsquo;10\u0026rsquo;. Values must be an integer number of seconds.\n    skip-nodes-with-local-storage  string    SkipNodesWithLocalStorage: The default is true.\n    skip-nodes-with-system-pods  string    SkipNodesWithSystemPods: The default is true.\n    ManagedClusterProperties_Status_AutoScalerProfileARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      balance-similar-node-groups  string    BalanceSimilarNodeGroups: Valid values are \u0026lsquo;true\u0026rsquo; and \u0026lsquo;false\u0026rsquo;\n    expander  ManagedClusterPropertiesStatusAutoScalerProfileExpander     Expander: If not specified, the default is \u0026lsquo;random\u0026rsquo;. See expanders for more information.\n    max-empty-bulk-delete  string    MaxEmptyBulkDelete: The default is 10.\n    max-graceful-termination-sec  string    MaxGracefulTerminationSec: The default is 600.\n    max-node-provision-time  string    MaxNodeProvisionTime: The default is \u0026lsquo;15m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    max-total-unready-percentage  string    MaxTotalUnreadyPercentage: The default is 45. The maximum is 100 and the minimum is 0.\n    new-pod-scale-up-delay  string    NewPodScaleUpDelay: For scenarios like burst/batch scale where you don\u0026rsquo;t want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they\u0026rsquo;re a certain age. The default is \u0026lsquo;0s\u0026rsquo;. Values must be an integer followed by a unit (\u0026rsquo;s\u0026rsquo; for seconds, \u0026rsquo;m\u0026rsquo; for minutes, \u0026lsquo;h\u0026rsquo; for hours, etc).\n    ok-total-unready-count  string    OkTotalUnreadyCount: This must be an integer. The default is 3.\n    scale-down-delay-after-add  string    ScaleDownDelayAfterAdd: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-delete  string    ScaleDownDelayAfterDelete: The default is the scan-interval. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-delay-after-failure  string    ScaleDownDelayAfterFailure: The default is \u0026lsquo;3m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unneeded-time  string    ScaleDownUnneededTime: The default is \u0026lsquo;10m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-unready-time  string    ScaleDownUnreadyTime: The default is \u0026lsquo;20m\u0026rsquo;. Values must be an integer followed by an \u0026rsquo;m\u0026rsquo;. No unit of time other than minutes (m) is supported.\n    scale-down-utilization-threshold  string    ScaleDownUtilizationThreshold: The default is \u0026lsquo;0.5\u0026rsquo;.\n    scan-interval  string    ScanInterval: The default is \u0026lsquo;10\u0026rsquo;. Values must be an integer number of seconds.\n    skip-nodes-with-local-storage  string    SkipNodesWithLocalStorage: The default is true.\n    skip-nodes-with-system-pods  string    SkipNodesWithSystemPods: The default is true.\n    ManagedClusterSKU   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterSKU\n    Field Description      name  ManagedClusterSKUName     Name: The name of a managed cluster SKU.\n    tier  ManagedClusterSKUTier     Tier: If not specified, the default is \u0026lsquo;Free\u0026rsquo;. See uptime SLA for more details.\n    ManagedClusterSKUARM   (Appears on:ManagedClusters_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterSKU\n    Field Description      name  ManagedClusterSKUName     Name: The name of a managed cluster SKU.\n    tier  ManagedClusterSKUTier     Tier: If not specified, the default is \u0026lsquo;Free\u0026rsquo;. See uptime SLA for more details.\n    ManagedClusterSKUName (string alias)  (Appears on:ManagedClusterSKU, ManagedClusterSKUARM)      Value Description   \u0026#34;Basic\u0026#34;\n    ManagedClusterSKUStatusName (string alias)  (Appears on:ManagedClusterSKU_Status, ManagedClusterSKU_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n    ManagedClusterSKUStatusTier (string alias)  (Appears on:ManagedClusterSKU_Status, ManagedClusterSKU_StatusARM)      Value Description   \u0026#34;Free\u0026#34;\n  \u0026#34;Paid\u0026#34;\n    ManagedClusterSKUTier (string alias)  (Appears on:ManagedClusterSKU, ManagedClusterSKUARM)      Value Description   \u0026#34;Free\u0026#34;\n  \u0026#34;Paid\u0026#34;\n    ManagedClusterSKU_Status   (Appears on:ManagedCluster_Status)      Field Description      name  ManagedClusterSKUStatusName     Name: The name of a managed cluster SKU.\n    tier  ManagedClusterSKUStatusTier     Tier: If not specified, the default is \u0026lsquo;Free\u0026rsquo;. See uptime SLA for more details.\n    ManagedClusterSKU_StatusARM   (Appears on:ManagedCluster_StatusARM)      Field Description      name  ManagedClusterSKUStatusName     Name: The name of a managed cluster SKU.\n    tier  ManagedClusterSKUStatusTier     Tier: If not specified, the default is \u0026lsquo;Free\u0026rsquo;. See uptime SLA for more details.\n    ManagedClusterServicePrincipalProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterServicePrincipalProfile\n    Field Description      clientId  string    ClientId: The ID for the service principal.\n    secret  string    Secret: The secret password associated with the service principal in plain text.\n    ManagedClusterServicePrincipalProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterServicePrincipalProfile\n    Field Description      clientId  string    ClientId: The ID for the service principal.\n    secret  string    Secret: The secret password associated with the service principal in plain text.\n    ManagedClusterServicePrincipalProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      clientId  string    ClientId: The ID for the service principal.\n    secret  string    Secret: The secret password associated with the service principal in plain text.\n    ManagedClusterServicePrincipalProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      clientId  string    ClientId: The ID for the service principal.\n    secret  string    Secret: The secret password associated with the service principal in plain text.\n    ManagedClusterWindowsProfile   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterWindowsProfile\n    Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length: 8 characters Max-length: 123 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo;\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length: 1 character Max-length: 20 characters\n    enableCSIProxy  bool    EnableCSIProxy: For more details on CSI proxy, see the CSI proxy GitHub repo.\n    licenseType  ManagedClusterWindowsProfileLicenseType     LicenseType: The license type to use for Windows VMs. See Azure Hybrid User Benefits for more details.\n    ManagedClusterWindowsProfileARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ManagedClusterWindowsProfile\n    Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length: 8 characters Max-length: 123 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo;\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length: 1 character Max-length: 20 characters\n    enableCSIProxy  bool    EnableCSIProxy: For more details on CSI proxy, see the CSI proxy GitHub repo.\n    licenseType  ManagedClusterWindowsProfileLicenseType     LicenseType: The license type to use for Windows VMs. See Azure Hybrid User Benefits for more details.\n    ManagedClusterWindowsProfileLicenseType (string alias)  (Appears on:ManagedClusterWindowsProfile, ManagedClusterWindowsProfileARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Windows_Server\u0026#34;\n    ManagedClusterWindowsProfileStatusLicenseType (string alias)  (Appears on:ManagedClusterWindowsProfile_Status, ManagedClusterWindowsProfile_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Windows_Server\u0026#34;\n    ManagedClusterWindowsProfile_Status   (Appears on:ManagedCluster_Status)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length: 8 characters Max-length: 123 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo;\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length: 1 character Max-length: 20 characters\n    enableCSIProxy  bool    EnableCSIProxy: For more details on CSI proxy, see the CSI proxy GitHub repo.\n    licenseType  ManagedClusterWindowsProfileStatusLicenseType     LicenseType: The license type to use for Windows VMs. See Azure Hybrid User Benefits for more details.\n    ManagedClusterWindowsProfile_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      adminPassword  string    AdminPassword: Specifies the password of the administrator account. Minimum-length: 8 characters Max-length: 123 characters Complexity requirements: 3 out of 4 conditions below need to be fulfilled Has lower characters Has upper characters Has a digit Has a special character (Regex match [\\W_]) Disallowed values: \u0026ldquo;abc@123\u0026rdquo;, \u0026ldquo;P@$$w0rd\u0026rdquo;, \u0026ldquo;P@ssw0rd\u0026rdquo;, \u0026ldquo;P@ssword123\u0026rdquo;, \u0026ldquo;Pa$$word\u0026rdquo;, \u0026ldquo;pass@word1\u0026rdquo;, \u0026ldquo;Password!\u0026rdquo;, \u0026ldquo;Password1\u0026rdquo;, \u0026ldquo;Password22\u0026rdquo;, \u0026ldquo;iloveyou!\u0026rdquo;\n    adminUsername  string    AdminUsername: Specifies the name of the administrator account. Restriction: Cannot end in \u0026ldquo;.\u0026rdquo; Disallowed values: \u0026ldquo;administrator\u0026rdquo;, \u0026ldquo;admin\u0026rdquo;, \u0026ldquo;user\u0026rdquo;, \u0026ldquo;user1\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;user2\u0026rdquo;, \u0026ldquo;test1\u0026rdquo;, \u0026ldquo;user3\u0026rdquo;, \u0026ldquo;admin1\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;123\u0026rdquo;, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;actuser\u0026rdquo;, \u0026ldquo;adm\u0026rdquo;, \u0026ldquo;admin2\u0026rdquo;, \u0026ldquo;aspnet\u0026rdquo;, \u0026ldquo;backup\u0026rdquo;, \u0026ldquo;console\u0026rdquo;, \u0026ldquo;david\u0026rdquo;, \u0026ldquo;guest\u0026rdquo;, \u0026ldquo;john\u0026rdquo;, \u0026ldquo;owner\u0026rdquo;, \u0026ldquo;root\u0026rdquo;, \u0026ldquo;server\u0026rdquo;, \u0026ldquo;sql\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support_388945a0\u0026rdquo;, \u0026ldquo;sys\u0026rdquo;, \u0026ldquo;test2\u0026rdquo;, \u0026ldquo;test3\u0026rdquo;, \u0026ldquo;user4\u0026rdquo;, \u0026ldquo;user5\u0026rdquo;. Minimum-length: 1 character Max-length: 20 characters\n    enableCSIProxy  bool    EnableCSIProxy: For more details on CSI proxy, see the CSI proxy GitHub repo.\n    licenseType  ManagedClusterWindowsProfileStatusLicenseType     LicenseType: The license type to use for Windows VMs. See Azure Hybrid User Benefits for more details.\n    ManagedCluster_Status   (Appears on:ManagedCluster)      Field Description      aadProfile  ManagedClusterAADProfile_Status     AadProfile: The Azure Active Directory configuration.\n    addonProfiles  Kubernetes v1.JSON     AddonProfiles: The profile of managed cluster add-on.\n    agentPoolProfiles  []ManagedClusterAgentPoolProfile_Status     AgentPoolProfiles: The agent pool properties.\n    apiServerAccessProfile  ManagedClusterAPIServerAccessProfile_Status     ApiServerAccessProfile: The access profile for managed cluster API server.\n    autoScalerProfile  ManagedClusterProperties_Status_AutoScalerProfile     AutoScalerProfile: Parameters to be applied to the cluster-autoscaler when enabled\n    autoUpgradeProfile  ManagedClusterAutoUpgradeProfile_Status     AutoUpgradeProfile: The auto upgrade configuration.\n    azurePortalFQDN  string    AzurePortalFQDN: The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn\u0026rsquo;t handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    disableLocalAccounts  bool    DisableLocalAccounts: If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.\n    diskEncryptionSetID  string    DiskEncryptionSetID: This is of the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}\u0026rsquo;\n    dnsPrefix  string    DnsPrefix: This cannot be updated once the Managed Cluster has been created.\n    enablePodSecurityPolicy  bool    EnablePodSecurityPolicy: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.\n    enableRBAC  bool    EnableRBAC: Whether to enable Kubernetes Role-Based Access Control.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the Virtual Machine.\n    fqdn  string    Fqdn: The FQDN of the master pool.\n    fqdnSubdomain  string    FqdnSubdomain: This cannot be updated once the Managed Cluster has been created.\n    httpProxyConfig  ManagedClusterHTTPProxyConfig_Status     HttpProxyConfig: Configurations for provisioning the cluster with HTTP proxy servers.\n    id  string    Id: Resource Id\n    identity  ManagedClusterIdentity_Status     Identity: The identity of the managed cluster, if configured.\n    identityProfile  Kubernetes v1.JSON     IdentityProfile: Identities associated with the cluster.\n    kubernetesVersion  string    KubernetesVersion: When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -\u0026gt; 1.15.x or 1.15.x -\u0026gt; 1.16.x are allowed, however 1.14.x -\u0026gt; 1.16.x is not allowed. See upgrading an AKS cluster for more details.\n    linuxProfile  ContainerServiceLinuxProfile_Status     LinuxProfile: The profile for Linux VMs in the Managed Cluster.\n    location  string    Location: Resource location\n    maxAgentPools  int    MaxAgentPools: The max number of agent pools for the managed cluster.\n    name  string    Name: Resource name\n    networkProfile  ContainerServiceNetworkProfile_Status     NetworkProfile: The network configuration profile.\n    nodeResourceGroup  string    NodeResourceGroup: The name of the resource group containing agent pool nodes.\n    podIdentityProfile  ManagedClusterPodIdentityProfile_Status     PodIdentityProfile: See use AAD pod identity for more details on AAD pod identity integration.\n    powerState  PowerState_Status     PowerState: The Power State of the cluster.\n    privateFQDN  string    PrivateFQDN: The FQDN of private cluster.\n    privateLinkResources  []PrivateLinkResource_Status     PrivateLinkResources: Private link resources associated with the cluster.\n    provisioningState  string    ProvisioningState: The current provisioning state.\n    servicePrincipalProfile  ManagedClusterServicePrincipalProfile_Status     ServicePrincipalProfile: Information about a service principal identity for the cluster to use for manipulating Azure APIs.\n    sku  ManagedClusterSKU_Status     Sku: The managed cluster SKU.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    windowsProfile  ManagedClusterWindowsProfile_Status     WindowsProfile: The profile for Windows VMs in the Managed Cluster.\n    ManagedCluster_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the Virtual Machine.\n    id  string    Id: Resource Id\n    identity  ManagedClusterIdentity_StatusARM     Identity: The identity of the managed cluster, if configured.\n    location  string    Location: Resource location\n    name  string    Name: Resource name\n    properties  ManagedClusterProperties_StatusARM     Properties: Properties of a managed cluster.\n    sku  ManagedClusterSKU_StatusARM     Sku: The managed cluster SKU.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    ManagedClustersAgentPool   Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/resourceDefinitions/managedClusters_agentPools\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ManagedClustersAgentPools_Spec          availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig     KubeletConfig: See AKS custom node configuration for more details.\n    kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfig     LinuxOSConfig: See AKS custom node configuration for more details.\n    location  string    Location: Location to deploy resource to\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixIDReference  genruntime.ResourceReference     NodePublicIPPrefixIDReference: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int    OsDiskSizeGB: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.\n    osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a containerservice.azure.com/ManagedCluster resource\n    podSubnetIDReference  genruntime.ResourceReference     PodSubnetIDReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettings     UpgradeSettings: Settings for upgrading an agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetIDReference  genruntime.ResourceReference     VnetSubnetIDReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n       status  AgentPool_Status         ManagedClustersAgentPoolsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-01\u0026#34;\n    ManagedClustersAgentPools_Spec   (Appears on:ManagedClustersAgentPool)      Field Description      availabilityZones  []string    AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is \u0026lsquo;VirtualMachineScaleSets\u0026rsquo;.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    count  int    Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.\n    enableAutoScaling  bool    EnableAutoScaling: Whether to enable auto-scaler\n    enableEncryptionAtHost  bool    EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption\n    enableFIPS  bool    EnableFIPS: See Add a FIPS-enabled node pool for more details.\n    enableNodePublicIP  bool    EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see assigning a public IP per node. The default is false.\n    enableUltraSSD  bool    EnableUltraSSD: Whether to enable UltraSSD\n    gpuInstanceProfile  ManagedClusterAgentPoolProfilePropertiesGpuInstanceProfile     GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.\n    kubeletConfig  KubeletConfig     KubeletConfig: See AKS custom node configuration for more details.\n    kubeletDiskType  ManagedClusterAgentPoolProfilePropertiesKubeletDiskType         linuxOSConfig  LinuxOSConfig     LinuxOSConfig: See AKS custom node configuration for more details.\n    location  string    Location: Location to deploy resource to\n    maxCount  int    MaxCount: The maximum number of nodes for auto-scaling\n    maxPods  int    MaxPods: The maximum number of pods that can run on a node.\n    minCount  int    MinCount: The minimum number of nodes for auto-scaling\n    mode  ManagedClusterAgentPoolProfilePropertiesMode         nodeLabels  map[string]string    NodeLabels: The node labels to be persisted across all nodes in agent pool.\n    nodePublicIPPrefixIDReference  genruntime.ResourceReference     NodePublicIPPrefixIDReference: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}\n    nodeTaints  []string    NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.\n    orchestratorVersion  string    OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see upgrading a node pool.\n    osDiskSizeGB  int    OsDiskSizeGB: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.\n    osDiskType  ManagedClusterAgentPoolProfilePropertiesOsDiskType         osSKU  ManagedClusterAgentPoolProfilePropertiesOsSKU         osType  ManagedClusterAgentPoolProfilePropertiesOsType         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a containerservice.azure.com/ManagedCluster resource\n    podSubnetIDReference  genruntime.ResourceReference     PodSubnetIDReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    proximityPlacementGroupID  string    ProximityPlacementGroupID: The ID for Proximity Placement Group.\n    scaleSetEvictionPolicy  ManagedClusterAgentPoolProfilePropertiesScaleSetEvictionPolicy     ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is \u0026lsquo;Spot\u0026rsquo;. If not specified, the default is \u0026lsquo;Delete\u0026rsquo;.\n    scaleSetPriority  ManagedClusterAgentPoolProfilePropertiesScaleSetPriority     ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is \u0026lsquo;Regular\u0026rsquo;.\n    spotMaxPrice  float64    SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see spot VMs pricing\n    tags  map[string]string    Tags: The tags to be persisted on the agent pool virtual machine scale set.\n    type  ManagedClusterAgentPoolProfilePropertiesType         upgradeSettings  AgentPoolUpgradeSettings     UpgradeSettings: Settings for upgrading an agentpool\n    vmSize  string    VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions\n    vnetSubnetIDReference  genruntime.ResourceReference     VnetSubnetIDReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}\n    ManagedClustersAgentPools_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the agent pool.\n    properties  ManagedClusterAgentPoolProfilePropertiesARM     Properties: Properties for the container service agent pool profile.\n    ManagedClustersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-01\u0026#34;\n    ManagedClusters_Spec   (Appears on:ManagedCluster)      Field Description      aadProfile  ManagedClusterAADProfile     AadProfile: For more details see managed AAD on AKS.\n    addonProfiles  map[string]./api/containerservice/v1beta20210501.ManagedClusterAddonProfile     AddonProfiles: The profile of managed cluster add-on.\n    agentPoolProfiles  []ManagedClusterAgentPoolProfile     AgentPoolProfiles: The agent pool properties.\n    apiServerAccessProfile  ManagedClusterAPIServerAccessProfile     ApiServerAccessProfile: Access profile for managed cluster API server.\n    autoScalerProfile  ManagedClusterPropertiesAutoScalerProfile     AutoScalerProfile: Parameters to be applied to the cluster-autoscaler when enabled\n    autoUpgradeProfile  ManagedClusterAutoUpgradeProfile     AutoUpgradeProfile: Auto upgrade profile for a managed cluster.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    disableLocalAccounts  bool    DisableLocalAccounts: If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.\n    diskEncryptionSetIDReference  genruntime.ResourceReference     DiskEncryptionSetIDReference: This is of the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}\u0026rsquo;\n    dnsPrefix  string    DnsPrefix: This cannot be updated once the Managed Cluster has been created.\n    enablePodSecurityPolicy  bool    EnablePodSecurityPolicy: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.\n    enableRBAC  bool    EnableRBAC: Whether to enable Kubernetes Role-Based Access Control.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    fqdnSubdomain  string    FqdnSubdomain: This cannot be updated once the Managed Cluster has been created.\n    httpProxyConfig  ManagedClusterHTTPProxyConfig     HttpProxyConfig: Cluster HTTP proxy configuration.\n    identity  ManagedClusterIdentity     Identity: Identity for the managed cluster.\n    identityProfile  map[string]./api/containerservice/v1beta20210501.Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties     IdentityProfile: Identities associated with the cluster.\n    kubernetesVersion  string    KubernetesVersion: When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -\u0026gt; 1.15.x or 1.15.x -\u0026gt; 1.16.x are allowed, however 1.14.x -\u0026gt; 1.16.x is not allowed. See upgrading an AKS cluster for more details.\n    linuxProfile  ContainerServiceLinuxProfile     LinuxProfile: Profile for Linux VMs in the container service cluster.\n    location  string    Location: Location to deploy resource to\n    networkProfile  ContainerServiceNetworkProfile     NetworkProfile: Profile of network configuration.\n    nodeResourceGroup  string    NodeResourceGroup: The name of the resource group containing agent pool nodes.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    podIdentityProfile  ManagedClusterPodIdentityProfile     PodIdentityProfile: See use AAD pod identity for more details on pod identity integration.\n    privateLinkResources  []PrivateLinkResource     PrivateLinkResources: Private link resources associated with the cluster.\n    servicePrincipalProfile  ManagedClusterServicePrincipalProfile     ServicePrincipalProfile: Information about a service principal identity for the cluster to use for manipulating Azure APIs.\n    sku  ManagedClusterSKU     Sku: The SKU of a Managed Cluster.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    windowsProfile  ManagedClusterWindowsProfile     WindowsProfile: Profile for Windows VMs in the managed cluster.\n    ManagedClusters_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    identity  ManagedClusterIdentityARM     Identity: Identity for the managed cluster.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the managed cluster resource.\n    properties  ManagedClusterPropertiesARM     Properties: Properties of the managed cluster.\n    sku  ManagedClusterSKUARM     Sku: The SKU of a Managed Cluster.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    OSDiskType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;Ephemeral\u0026#34;\n  \u0026#34;Managed\u0026#34;\n    OSSKU_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;CBLMariner\u0026#34;\n  \u0026#34;Ubuntu\u0026#34;\n    OSType_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;Linux\u0026#34;\n  \u0026#34;Windows\u0026#34;\n    PowerStateStatusCode (string alias)  (Appears on:PowerState_Status, PowerState_StatusARM)      Value Description   \u0026#34;Running\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n    PowerState_Status   (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfile_Status, ManagedCluster_Status)      Field Description      code  PowerStateStatusCode     Code: Tells whether the cluster is Running or Stopped\n    PowerState_StatusARM   (Appears on:ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_StatusARM, ManagedClusterProperties_StatusARM)      Field Description      code  PowerStateStatusCode     Code: Tells whether the cluster is Running or Stopped\n    PrivateLinkResource   (Appears on:ManagedClusters_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/PrivateLinkResource\n    Field Description      groupId  string    GroupId: The group ID of the resource.\n    name  string    Name: The name of the private link resource.\n    reference  genruntime.ResourceReference     Reference: The ID of the private link resource.\n    requiredMembers  []string    RequiredMembers: The RequiredMembers of the resource\n    type  string    Type: The resource type.\n    PrivateLinkResourceARM   (Appears on:ManagedClusterPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/PrivateLinkResource\n    Field Description      groupId  string    GroupId: The group ID of the resource.\n    id  string        name  string    Name: The name of the private link resource.\n    requiredMembers  []string    RequiredMembers: The RequiredMembers of the resource\n    type  string    Type: The resource type.\n    PrivateLinkResource_Status   (Appears on:ManagedCluster_Status)      Field Description      groupId  string    GroupId: The group ID of the resource.\n    id  string    Id: The ID of the private link resource.\n    name  string    Name: The name of the private link resource.\n    privateLinkServiceID  string    PrivateLinkServiceID: The private link service ID of the resource, this field is exposed only to NRP internally.\n    requiredMembers  []string    RequiredMembers: The RequiredMembers of the resource\n    type  string    Type: The resource type.\n    PrivateLinkResource_StatusARM   (Appears on:ManagedClusterProperties_StatusARM)      Field Description      groupId  string    GroupId: The group ID of the resource.\n    id  string    Id: The ID of the private link resource.\n    name  string    Name: The name of the private link resource.\n    privateLinkServiceID  string    PrivateLinkServiceID: The private link service ID of the resource, this field is exposed only to NRP internally.\n    requiredMembers  []string    RequiredMembers: The RequiredMembers of the resource\n    type  string    Type: The resource type.\n    ResourceReference   (Appears on:ManagedClusterLoadBalancerProfile, ManagedClusterLoadBalancerProfileOutboundIPPrefixes, ManagedClusterLoadBalancerProfileOutboundIPs)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ResourceReference\n    Field Description      reference  genruntime.ResourceReference     Reference: The fully qualified Azure resource id.\n    ResourceReferenceARM   (Appears on:ManagedClusterLoadBalancerProfileARM, ManagedClusterLoadBalancerProfileOutboundIPPrefixesARM, ManagedClusterLoadBalancerProfileOutboundIPsARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/ResourceReference\n    Field Description      id  string        ResourceReference_Status   (Appears on:ManagedClusterLoadBalancerProfile_Status, ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes, ManagedClusterLoadBalancerProfile_Status_OutboundIPs)      Field Description      id  string    Id: The fully qualified Azure resource id.\n    ResourceReference_StatusARM   (Appears on:ManagedClusterLoadBalancerProfile_StatusARM, ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM, ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM)      Field Description      id  string    Id: The fully qualified Azure resource id.\n    ScaleSetEvictionPolicy_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;Deallocate\u0026#34;\n  \u0026#34;Delete\u0026#34;\n    ScaleSetPriority_Status (string alias)  (Appears on:AgentPool_Status, ManagedClusterAgentPoolProfileProperties_StatusARM, ManagedClusterAgentPoolProfile_Status, ManagedClusterAgentPoolProfile_StatusARM)      Value Description   \u0026#34;Regular\u0026#34;\n  \u0026#34;Spot\u0026#34;\n    SysctlConfig   (Appears on:LinuxOSConfig)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/SysctlConfig\n    Field Description      fsAioMaxNr  int    FsAioMaxNr: Sysctl setting fs.aio-max-nr.\n    fsFileMax  int    FsFileMax: Sysctl setting fs.file-max.\n    fsInotifyMaxUserWatches  int    FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.\n    fsNrOpen  int    FsNrOpen: Sysctl setting fs.nr_open.\n    kernelThreadsMax  int    KernelThreadsMax: Sysctl setting kernel.threads-max.\n    netCoreNetdevMaxBacklog  int    NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.\n    netCoreOptmemMax  int    NetCoreOptmemMax: Sysctl setting net.core.optmem_max.\n    netCoreRmemDefault  int    NetCoreRmemDefault: Sysctl setting net.core.rmem_default.\n    netCoreRmemMax  int    NetCoreRmemMax: Sysctl setting net.core.rmem_max.\n    netCoreSomaxconn  int    NetCoreSomaxconn: Sysctl setting net.core.somaxconn.\n    netCoreWmemDefault  int    NetCoreWmemDefault: Sysctl setting net.core.wmem_default.\n    netCoreWmemMax  int    NetCoreWmemMax: Sysctl setting net.core.wmem_max.\n    netIpv4IpLocalPortRange  string    NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.\n    netIpv4NeighDefaultGcThresh1  int    NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.\n    netIpv4NeighDefaultGcThresh2  int    NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.\n    netIpv4NeighDefaultGcThresh3  int    NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.\n    netIpv4TcpFinTimeout  int    NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.\n    netIpv4TcpKeepaliveProbes  int    NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.\n    netIpv4TcpKeepaliveTime  int    NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.\n    netIpv4TcpMaxSynBacklog  int    NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.\n    netIpv4TcpMaxTwBuckets  int    NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.\n    netIpv4TcpTwReuse  bool    NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.\n    netIpv4TcpkeepaliveIntvl  int    NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.\n    netNetfilterNfConntrackBuckets  int    NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.\n    netNetfilterNfConntrackMax  int    NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.\n    vmMaxMapCount  int    VmMaxMapCount: Sysctl setting vm.max_map_count.\n    vmSwappiness  int    VmSwappiness: Sysctl setting vm.swappiness.\n    vmVfsCachePressure  int    VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.\n    SysctlConfigARM   (Appears on:LinuxOSConfigARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/SysctlConfig\n    Field Description      fsAioMaxNr  int    FsAioMaxNr: Sysctl setting fs.aio-max-nr.\n    fsFileMax  int    FsFileMax: Sysctl setting fs.file-max.\n    fsInotifyMaxUserWatches  int    FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.\n    fsNrOpen  int    FsNrOpen: Sysctl setting fs.nr_open.\n    kernelThreadsMax  int    KernelThreadsMax: Sysctl setting kernel.threads-max.\n    netCoreNetdevMaxBacklog  int    NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.\n    netCoreOptmemMax  int    NetCoreOptmemMax: Sysctl setting net.core.optmem_max.\n    netCoreRmemDefault  int    NetCoreRmemDefault: Sysctl setting net.core.rmem_default.\n    netCoreRmemMax  int    NetCoreRmemMax: Sysctl setting net.core.rmem_max.\n    netCoreSomaxconn  int    NetCoreSomaxconn: Sysctl setting net.core.somaxconn.\n    netCoreWmemDefault  int    NetCoreWmemDefault: Sysctl setting net.core.wmem_default.\n    netCoreWmemMax  int    NetCoreWmemMax: Sysctl setting net.core.wmem_max.\n    netIpv4IpLocalPortRange  string    NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.\n    netIpv4NeighDefaultGcThresh1  int    NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.\n    netIpv4NeighDefaultGcThresh2  int    NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.\n    netIpv4NeighDefaultGcThresh3  int    NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.\n    netIpv4TcpFinTimeout  int    NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.\n    netIpv4TcpKeepaliveProbes  int    NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.\n    netIpv4TcpKeepaliveTime  int    NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.\n    netIpv4TcpMaxSynBacklog  int    NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.\n    netIpv4TcpMaxTwBuckets  int    NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.\n    netIpv4TcpTwReuse  bool    NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.\n    netIpv4TcpkeepaliveIntvl  int    NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.\n    netNetfilterNfConntrackBuckets  int    NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.\n    netNetfilterNfConntrackMax  int    NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.\n    vmMaxMapCount  int    VmMaxMapCount: Sysctl setting vm.max_map_count.\n    vmSwappiness  int    VmSwappiness: Sysctl setting vm.swappiness.\n    vmVfsCachePressure  int    VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.\n    SysctlConfig_Status   (Appears on:LinuxOSConfig_Status)      Field Description      fsAioMaxNr  int    FsAioMaxNr: Sysctl setting fs.aio-max-nr.\n    fsFileMax  int    FsFileMax: Sysctl setting fs.file-max.\n    fsInotifyMaxUserWatches  int    FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.\n    fsNrOpen  int    FsNrOpen: Sysctl setting fs.nr_open.\n    kernelThreadsMax  int    KernelThreadsMax: Sysctl setting kernel.threads-max.\n    netCoreNetdevMaxBacklog  int    NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.\n    netCoreOptmemMax  int    NetCoreOptmemMax: Sysctl setting net.core.optmem_max.\n    netCoreRmemDefault  int    NetCoreRmemDefault: Sysctl setting net.core.rmem_default.\n    netCoreRmemMax  int    NetCoreRmemMax: Sysctl setting net.core.rmem_max.\n    netCoreSomaxconn  int    NetCoreSomaxconn: Sysctl setting net.core.somaxconn.\n    netCoreWmemDefault  int    NetCoreWmemDefault: Sysctl setting net.core.wmem_default.\n    netCoreWmemMax  int    NetCoreWmemMax: Sysctl setting net.core.wmem_max.\n    netIpv4IpLocalPortRange  string    NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.\n    netIpv4NeighDefaultGcThresh1  int    NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.\n    netIpv4NeighDefaultGcThresh2  int    NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.\n    netIpv4NeighDefaultGcThresh3  int    NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.\n    netIpv4TcpFinTimeout  int    NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.\n    netIpv4TcpKeepaliveProbes  int    NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.\n    netIpv4TcpKeepaliveTime  int    NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.\n    netIpv4TcpMaxSynBacklog  int    NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.\n    netIpv4TcpMaxTwBuckets  int    NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.\n    netIpv4TcpTwReuse  bool    NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.\n    netIpv4TcpkeepaliveIntvl  int    NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.\n    netNetfilterNfConntrackBuckets  int    NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.\n    netNetfilterNfConntrackMax  int    NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.\n    vmMaxMapCount  int    VmMaxMapCount: Sysctl setting vm.max_map_count.\n    vmSwappiness  int    VmSwappiness: Sysctl setting vm.swappiness.\n    vmVfsCachePressure  int    VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.\n    SysctlConfig_StatusARM   (Appears on:LinuxOSConfig_StatusARM)      Field Description      fsAioMaxNr  int    FsAioMaxNr: Sysctl setting fs.aio-max-nr.\n    fsFileMax  int    FsFileMax: Sysctl setting fs.file-max.\n    fsInotifyMaxUserWatches  int    FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.\n    fsNrOpen  int    FsNrOpen: Sysctl setting fs.nr_open.\n    kernelThreadsMax  int    KernelThreadsMax: Sysctl setting kernel.threads-max.\n    netCoreNetdevMaxBacklog  int    NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.\n    netCoreOptmemMax  int    NetCoreOptmemMax: Sysctl setting net.core.optmem_max.\n    netCoreRmemDefault  int    NetCoreRmemDefault: Sysctl setting net.core.rmem_default.\n    netCoreRmemMax  int    NetCoreRmemMax: Sysctl setting net.core.rmem_max.\n    netCoreSomaxconn  int    NetCoreSomaxconn: Sysctl setting net.core.somaxconn.\n    netCoreWmemDefault  int    NetCoreWmemDefault: Sysctl setting net.core.wmem_default.\n    netCoreWmemMax  int    NetCoreWmemMax: Sysctl setting net.core.wmem_max.\n    netIpv4IpLocalPortRange  string    NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.\n    netIpv4NeighDefaultGcThresh1  int    NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.\n    netIpv4NeighDefaultGcThresh2  int    NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.\n    netIpv4NeighDefaultGcThresh3  int    NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.\n    netIpv4TcpFinTimeout  int    NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.\n    netIpv4TcpKeepaliveProbes  int    NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.\n    netIpv4TcpKeepaliveTime  int    NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.\n    netIpv4TcpMaxSynBacklog  int    NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.\n    netIpv4TcpMaxTwBuckets  int    NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.\n    netIpv4TcpTwReuse  bool    NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.\n    netIpv4TcpkeepaliveIntvl  int    NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.\n    netNetfilterNfConntrackBuckets  int    NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.\n    netNetfilterNfConntrackMax  int    NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.\n    vmMaxMapCount  int    VmMaxMapCount: Sysctl setting vm.max_map_count.\n    vmSwappiness  int    VmSwappiness: Sysctl setting vm.swappiness.\n    vmVfsCachePressure  int    VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.\n    UserAssignedIdentity   (Appears on:ManagedClusterPodIdentity)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/UserAssignedIdentity\n    Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceReference  genruntime.ResourceReference     ResourceReference: The resource ID of the user assigned identity.\n    UserAssignedIdentityARM   (Appears on:ManagedClusterPodIdentityARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.ContainerService.json#/definitions/UserAssignedIdentity\n    Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceId  string        UserAssignedIdentity_Status   (Appears on:ManagedClusterPodIdentity_Status)      Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceId  string    ResourceId: The resource ID of the user assigned identity.\n    UserAssignedIdentity_StatusARM   (Appears on:ManagedClusterPodIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client ID of the user assigned identity.\n    objectId  string    ObjectId: The object ID of the user assigned identity.\n    resourceId  string    ResourceId: The resource ID of the user assigned identity.\n     "},{"id":37,"href":"/azure-service-operator/contributing/create-a-new-release/","title":"Creating a new release of ASO v2","section":"For Contributors","content":"Creating a new release of ASO v2 #   Go to the releases page and draft a new release. In the tag dropdown, type the name of the new tag you\u0026rsquo;d like to create (it should match the pattern of previous releases tags, for example: v2.0.0-alpha.1). The release target should be main (the default). Use the GitHub \u0026ldquo;auto-generate release notes\u0026rdquo; button to generate a set of release notes to work with. You will need to clean this up quite a bit before actually publishing it. If publishing an alpha/beta, be sure to mark the release as a pre-release. Write a \u0026ldquo;Release Notes\u0026rdquo; section. You can edit the autogenerated section as a start. You can also look through the commits between the last release and now: git log v2.0.0-alpha.6..main. Publish the release. This will automatically trigger a GitHub action to build and publish an updated Docker image with the latest manager changes. Ensure that the action associated with your release finishes successfully.  Testing the new release #   Download the yaml file from the release page Create a kind cluster: task controller:kind-create Install cert-manager: task controller:install-cert-manager Create the namespace for the operator: k create namespace azureserviceoperator-system Source the SP credentials to use for the secret and then run ./scripts/deploy_testing_secret.sh sp Deploy the operator from MCR: k apply --server-side=true -f \u0026lt;path-to-downloaded-yaml\u0026gt; (We need to use server-side apply because the CRD for VirtualMachines is large enough that it can\u0026rsquo;t fit in the last-applied-configuration annotation client-side kubectl apply uses.) Wait for it to start: k get all -n azureserviceoperator-system Create a resource group and a vnet in it (the vnet is to check that conversion webhooks are working, since there aren\u0026rsquo;t any for RGs): k apply -f v2/config/samples/resources/v1alpha1api20200601_resourcegroup.yaml k apply -f v2/config/samples/network/v1alpha1api20201101_virtualnetwork.yaml  Make sure they deploy successfully - check in the portal as well.  Creating and testing Helm chart for new release #   Create a new branch from \u0026lt;NEW_RELEASE_TAG\u0026gt; HEAD Generate helm manifest for new release: task controller:gen-helm-manifest Check the version in /v2/charts/azure-service-operator/Chart.yaml if matches with the latest release tag. Install helm chart: helm install --set azureSubscriptionID=$AZURE_SUBSCRIPTION_ID \\ --set azureTenantID=$AZURE_TENANT_ID \\ --set azureClientSecret=$AZURE_CLIENT_SECRET \\ --set azureClientID=$AZURE_CLIENT_ID \\ asov2 -n azureserviceoperator-system --create-namespace ./v2/charts/azure-service-operator/.  Wait for the chart installation. Wait for it to start: k get all -n azureserviceoperator-system Create a resource group and a vnet in it (the vnet is to check that conversion webhooks are working, since there aren\u0026rsquo;t any for RGs): k apply -f v2/config/samples/resources/v1alpha1api20200601_resourcegroup.yaml k apply -f v2/config/samples/network/v1alpha1api20201101_virtualnetwork.yaml  Make sure they deploy successfully - check in the portal as well. If installed successfully, commit the files under v2/charts/azure-service-operator. Send a PR.  Fixing an incorrect release #  If there was an issue publishing a new release, we may want to delete the existing release and try again. Only do this if you\u0026rsquo;ve just published the release and there is something wrong with it. We shouldn\u0026rsquo;t be deleting releases people are actually using.\n Delete the release in the releases page. Delete the tag: git push \u0026lt;origin\u0026gt; --delete \u0026lt;tag\u0026gt;, for example git push origin --delete v2.0.0-alpha.1.  At this point, you can safely publish a \u0026ldquo;new\u0026rdquo; release with the same name.\n"},{"id":38,"href":"/azure-service-operator/design/defaulter-validator/","title":"Custom validation and defaulting for code generated resources","section":"Design \u0026 Specifications","content":"Custom validation and defaulting for code generated resources #  Reasoning #  controller-runtime defines admission.Defaulter and admission.Validator. These interfaces only give you a single Default or ValidateX method, which means that all validation/defaulting needs to be done in that method. I think we\u0026rsquo;re going to quickly run into situations where we want custom (handcrafted) validations or defaults for a particular resource and we\u0026rsquo;re not going to want to teach the code generator about these.\nSuggestion #  Structure our autogenerated webhooks such that there an ability to override the default behavior by implementing an interface.\nFor defaulting, implement this interface to hook into the autogenerated defaulting process:\ntype Defaulter interface { CustomDefault() } For validation, the interface being implemented should allow easy collation of errors, so we expand the controller-runtime Validator interface to return a collection of validation functions whose errors the autogenerated code can aggeregate:\ntype Validator interface { CreateValidations() []func() error UpdateValidations() []func(old runtime.Object) error DeleteValidations() []func() error } Sample Default:\n// +kubebuilder:webhook:path=/mutate-microsoft-storage-infra-azure-com-v1alpha1api20190401-storageaccount,mutating=true,sideEffects=None,matchPolicy=Exact,failurePolicy=fail,groups=microsoft.storage.infra.azure.com,resources=storageaccounts,verbs=create;update,versions=v1alpha1api20190401,name=default.v1alpha1api20190401.storageaccounts.microsoft.storage.infra.azure.com,admissionReviewVersions=v1beta1  var _ admission.Defaulter = \u0026amp;StorageAccount{} // Default defaults the Azure name of the resource to the Kubernetes name func (storageAccount *StorageAccount) Default() { storageAccount.default() var temp interface{} = storageAccount if runtimeDefaulter, ok := temp.(genruntime.Defaulter); ok { runtimeDefaulter.CustomDefault() } } func (storageAccount *StorageAccount) default() []func() { storageAccount.defaultAzureName() } func (storageAccount *StorageAccount) defaultAzureName() { if storageAccount.Spec.AzureName == \u0026#34;\u0026#34; { storageAccount.Spec.AzureName = storageAccount.Name } } Sample Validate:\n// +kubebuilder:webhook:path=/validate-microsoft-storage-infra-azure-com-v1alpha1api20190401-storageaccount,mutating=false,sideEffects=None,matchPolicy=Exact,failurePolicy=fail,groups=microsoft.storage.infra.azure.com,resources=storageaccounts,verbs=create;update,versions=v1alpha1api20190401,name=validate.v1alpha1api20190401.storageaccounts.microsoft.storage.infra.azure.com,admissionReviewVersions=v1beta1  var _ admission.Validator = \u0026amp;StorageAccount{} // ValidateCreate validates the creation of the resource func (storageAccount *StorageAccount) ValidateCreate() error { validations := storageAccount.createValidations() var temp interface{} = storageAccount if runtimeValidator, ok := temp.(genruntime.Validator); ok { validations = append(validations, runtimeValidator.CreateValidations()...) } var errs []error for _, validation := range validations { err := validation() if err != nil { errs = append(errs, err) } } return kerrors.NewAggregate(errs) } func (storageAccount *StorageAccount) createValidations() []func() error { return []func() error{ storageAccount.validateResourceReferences, } } func (storageAccount *StorageAccount) validateResourceReferences() error { refs, err := reflecthelpers.FindResourceReferences(\u0026amp;storageAccount.Spec) if err != nil { return err } return genruntime.ValidateResourceReferences(refs) } // \u0026lt;other Validator methods elided...\u0026gt; Open questions #   How awkward is var temp runtime.Object = storageAccount + if runtimeValidator, ok := temp.(genruntime.Validator); ok - is there a better way to do this?   Other possibilities #   Don\u0026rsquo;t use admission.Defaulter or admission.Validator, instead register N webhooks. This has significant downsides though because the Defaulter and Validator webhooks are automatically registered by our registerWebhook method in generic_controller (ctrl.NewWebhookManagedBy(mgr).For(obj).Complete())  "},{"id":39,"href":"/azure-service-operator/reference/dbformysql.v1alpha1api20210501/","title":"dbformysql.azure.com/v1alpha1api20210501","section":"References","content":"dbformysql.azure.com/v1alpha1api20210501  Package v1alpha1api20210501 contains API Schema definitions for the dbformysql v1alpha1api20210501 API group\n Resource Types:  Backup   (Appears on:FlexibleServers_Spec)  Deprecated version of Backup. Use v1beta20210501.Backup instead\n    Field Description      backupRetentionDays  int        geoRedundantBackup  BackupGeoRedundantBackup         BackupARM   (Appears on:ServerPropertiesARM)  Deprecated version of Backup. Use v1beta20210501.Backup instead\n    Field Description      backupRetentionDays  int        geoRedundantBackup  BackupGeoRedundantBackup         BackupGeoRedundantBackup (string alias)  (Appears on:Backup, BackupARM)  Deprecated version of BackupGeoRedundantBackup. Use v1beta20210501.BackupGeoRedundantBackup instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Backup_Status   (Appears on:Server_Status)  Deprecated version of Backup_Status. Use v1beta20210501.Backup_Status instead\n    Field Description      backupRetentionDays  int        earliestRestoreDate  string        geoRedundantBackup  EnableStatusEnum_Status         Backup_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Backup_Status. Use v1beta20210501.Backup_Status instead\n    Field Description      backupRetentionDays  int        earliestRestoreDate  string        geoRedundantBackup  EnableStatusEnum_Status         DatabasePropertiesARM   (Appears on:FlexibleServersDatabases_SpecARM)  Deprecated version of DatabaseProperties. Use v1beta20210501.DatabaseProperties instead\n    Field Description      charset  string        collation  string        DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)  Deprecated version of DatabaseProperties_Status. Use v1beta20210501.DatabaseProperties_Status instead\n    Field Description      charset  string        collation  string        Database_Status   (Appears on:FlexibleServersDatabase)  Deprecated version of Database_Status. Use v1beta20210501.Database_Status instead\n    Field Description      charset  string        collation  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        name  string        systemData  SystemData_Status         type  string        Database_StatusARM   Deprecated version of Database_Status. Use v1beta20210501.Database_Status instead\n    Field Description      id  string        name  string        properties  DatabaseProperties_StatusARM         systemData  SystemData_StatusARM         type  string        EnableStatusEnum_Status (string alias)  (Appears on:Backup_Status, Backup_StatusARM, Network_Status, Network_StatusARM, Storage_Status, Storage_StatusARM)  Deprecated version of EnableStatusEnum_Status. Use v1beta20210501.EnableStatusEnum_Status instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    FirewallRulePropertiesARM   (Appears on:FlexibleServersFirewallRules_SpecARM)  Deprecated version of FirewallRuleProperties. Use v1beta20210501.FirewallRuleProperties instead\n    Field Description      endIpAddress  string        startIpAddress  string        FirewallRuleProperties_StatusARM   (Appears on:FirewallRule_StatusARM)  Deprecated version of FirewallRuleProperties_Status. Use v1beta20210501.FirewallRuleProperties_Status instead\n    Field Description      endIpAddress  string        startIpAddress  string        FirewallRule_Status   (Appears on:FlexibleServersFirewallRule)  Deprecated version of FirewallRule_Status. Use v1beta20210501.FirewallRule_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIpAddress  string        id  string        name  string        startIpAddress  string        systemData  SystemData_Status         type  string        FirewallRule_StatusARM   Deprecated version of FirewallRule_Status. Use v1beta20210501.FirewallRule_Status instead\n    Field Description      id  string        name  string        properties  FirewallRuleProperties_StatusARM         systemData  SystemData_StatusARM         type  string        FlexibleServer   Deprecated version of FlexibleServer. Use v1beta20210501.FlexibleServer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServers_Spec          administratorLogin  string        administratorLoginPassword  genruntime.SecretReference         availabilityZone  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailability         location  string        maintenanceWindow  MaintenanceWindow         network  Network         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    replicationRole  ServerPropertiesReplicationRole         restorePointInTime  string        sku  Sku         sourceServerResourceId  string        storage  Storage         tags  map[string]string        version  ServerPropertiesVersion            status  Server_Status         FlexibleServersDatabase   Deprecated version of FlexibleServersDatabase. Use v1beta20210501.FlexibleServersDatabase instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string        collation  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    tags  map[string]string           status  Database_Status         FlexibleServersDatabases_Spec   (Appears on:FlexibleServersDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string        collation  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    tags  map[string]string        FlexibleServersDatabases_SpecARM   Deprecated version of FlexibleServersDatabases_Spec. Use v1beta20210501.FlexibleServersDatabases_Spec instead\n    Field Description      location  string        name  string        properties  DatabasePropertiesARM         tags  map[string]string        FlexibleServersFirewallRule   Deprecated version of FlexibleServersFirewallRule. Use v1beta20210501.FlexibleServersFirewallRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    startIpAddress  string        tags  map[string]string           status  FirewallRule_Status         FlexibleServersFirewallRules_Spec   (Appears on:FlexibleServersFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    startIpAddress  string        tags  map[string]string        FlexibleServersFirewallRules_SpecARM   Deprecated version of FlexibleServersFirewallRules_Spec. Use v1beta20210501.FlexibleServersFirewallRules_Spec instead\n    Field Description      location  string        name  string        properties  FirewallRulePropertiesARM         tags  map[string]string        FlexibleServers_Spec   (Appears on:FlexibleServer)      Field Description      administratorLogin  string        administratorLoginPassword  genruntime.SecretReference         availabilityZone  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailability         location  string        maintenanceWindow  MaintenanceWindow         network  Network         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    replicationRole  ServerPropertiesReplicationRole         restorePointInTime  string        sku  Sku         sourceServerResourceId  string        storage  Storage         tags  map[string]string        version  ServerPropertiesVersion         FlexibleServers_SpecARM   Deprecated version of FlexibleServers_Spec. Use v1beta20210501.FlexibleServers_Spec instead\n    Field Description      location  string        name  string        properties  ServerPropertiesARM         sku  SkuARM         tags  map[string]string        HighAvailability   (Appears on:FlexibleServers_Spec)  Deprecated version of HighAvailability. Use v1beta20210501.HighAvailability instead\n    Field Description      mode  HighAvailabilityMode         standbyAvailabilityZone  string        HighAvailabilityARM   (Appears on:ServerPropertiesARM)  Deprecated version of HighAvailability. Use v1beta20210501.HighAvailability instead\n    Field Description      mode  HighAvailabilityMode         standbyAvailabilityZone  string        HighAvailabilityMode (string alias)  (Appears on:HighAvailability, HighAvailabilityARM)  Deprecated version of HighAvailabilityMode. Use v1beta20210501.HighAvailabilityMode instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;SameZone\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusMode (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)  Deprecated version of HighAvailabilityStatusMode. Use v1beta20210501.HighAvailabilityStatusMode instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;SameZone\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusState (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)  Deprecated version of HighAvailabilityStatusState. Use v1beta20210501.HighAvailabilityStatusState instead\n    Value Description   \u0026#34;CreatingStandby\u0026#34;\n  \u0026#34;FailingOver\u0026#34;\n  \u0026#34;Healthy\u0026#34;\n  \u0026#34;NotEnabled\u0026#34;\n  \u0026#34;RemovingStandby\u0026#34;\n    HighAvailability_Status   (Appears on:Server_Status)  Deprecated version of HighAvailability_Status. Use v1beta20210501.HighAvailability_Status instead\n    Field Description      mode  HighAvailabilityStatusMode         standbyAvailabilityZone  string        state  HighAvailabilityStatusState         HighAvailability_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of HighAvailability_Status. Use v1beta20210501.HighAvailability_Status instead\n    Field Description      mode  HighAvailabilityStatusMode         standbyAvailabilityZone  string        state  HighAvailabilityStatusState         MaintenanceWindow   (Appears on:FlexibleServers_Spec)  Deprecated version of MaintenanceWindow. Use v1beta20210501.MaintenanceWindow instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindowARM   (Appears on:ServerPropertiesARM)  Deprecated version of MaintenanceWindow. Use v1beta20210501.MaintenanceWindow instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindow_Status   (Appears on:Server_Status)  Deprecated version of MaintenanceWindow_Status. Use v1beta20210501.MaintenanceWindow_Status instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindow_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of MaintenanceWindow_Status. Use v1beta20210501.MaintenanceWindow_Status instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        Network   (Appears on:FlexibleServers_Spec)  Deprecated version of Network. Use v1beta20210501.Network instead\n    Field Description      delegatedSubnetResourceReference  genruntime.ResourceReference         privateDnsZoneResourceReference  genruntime.ResourceReference         NetworkARM   (Appears on:ServerPropertiesARM)  Deprecated version of Network. Use v1beta20210501.Network instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneResourceId  string        Network_Status   (Appears on:Server_Status)  Deprecated version of Network_Status. Use v1beta20210501.Network_Status instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneResourceId  string        publicNetworkAccess  EnableStatusEnum_Status         Network_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Network_Status. Use v1beta20210501.Network_Status instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneResourceId  string        publicNetworkAccess  EnableStatusEnum_Status         ReplicationRole_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ReplicationRole_Status. Use v1beta20210501.ReplicationRole_Status instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Replica\u0026#34;\n  \u0026#34;Source\u0026#34;\n    ServerPropertiesARM   (Appears on:FlexibleServers_SpecARM)  Deprecated version of ServerProperties. Use v1beta20210501.ServerProperties instead\n    Field Description      administratorLogin  string        administratorLoginPassword  string        availabilityZone  string        backup  BackupARM         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailabilityARM         maintenanceWindow  MaintenanceWindowARM         network  NetworkARM         replicationRole  ServerPropertiesReplicationRole         restorePointInTime  string        sourceServerResourceId  string        storage  StorageARM         version  ServerPropertiesVersion         ServerPropertiesCreateMode (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)  Deprecated version of ServerPropertiesCreateMode. Use v1beta20210501.ServerPropertiesCreateMode instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;GeoRestore\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Replica\u0026#34;\n    ServerPropertiesReplicationRole (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)  Deprecated version of ServerPropertiesReplicationRole. Use v1beta20210501.ServerPropertiesReplicationRole instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Replica\u0026#34;\n  \u0026#34;Source\u0026#34;\n    ServerPropertiesStatusCreateMode (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerPropertiesStatusCreateMode. Use v1beta20210501.ServerPropertiesStatusCreateMode instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;GeoRestore\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Replica\u0026#34;\n    ServerPropertiesStatusState (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerPropertiesStatusState. Use v1beta20210501.ServerPropertiesStatusState instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Dropping\u0026#34;\n  \u0026#34;Ready\u0026#34;\n  \u0026#34;Starting\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n  \u0026#34;Stopping\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ServerPropertiesVersion (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)  Deprecated version of ServerPropertiesVersion. Use v1beta20210501.ServerPropertiesVersion instead\n    Value Description   \u0026#34;5.7\u0026#34;\n  \u0026#34;8.0.21\u0026#34;\n    ServerProperties_StatusARM   (Appears on:Server_StatusARM)  Deprecated version of ServerProperties_Status. Use v1beta20210501.ServerProperties_Status instead\n    Field Description      administratorLogin  string        availabilityZone  string        backup  Backup_StatusARM         createMode  ServerPropertiesStatusCreateMode         fullyQualifiedDomainName  string        highAvailability  HighAvailability_StatusARM         maintenanceWindow  MaintenanceWindow_StatusARM         network  Network_StatusARM         replicaCapacity  int        replicationRole  ReplicationRole_Status         restorePointInTime  string        sourceServerResourceId  string        state  ServerPropertiesStatusState         storage  Storage_StatusARM         version  ServerVersion_Status         ServerVersion_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerVersion_Status. Use v1beta20210501.ServerVersion_Status instead\n    Value Description   \u0026#34;5.7\u0026#34;\n  \u0026#34;8.0.21\u0026#34;\n    Server_Status   (Appears on:FlexibleServer)  Deprecated version of Server_Status. Use v1beta20210501.Server_Status instead\n    Field Description      administratorLogin  string        availabilityZone  string        backup  Backup_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createMode  ServerPropertiesStatusCreateMode         fullyQualifiedDomainName  string        highAvailability  HighAvailability_Status         id  string        location  string        maintenanceWindow  MaintenanceWindow_Status         name  string        network  Network_Status         replicaCapacity  int        replicationRole  ReplicationRole_Status         restorePointInTime  string        sku  Sku_Status         sourceServerResourceId  string        state  ServerPropertiesStatusState         storage  Storage_Status         systemData  SystemData_Status         tags  map[string]string        type  string        version  ServerVersion_Status         Server_StatusARM   Deprecated version of Server_Status. Use v1beta20210501.Server_Status instead\n    Field Description      id  string        location  string        name  string        properties  ServerProperties_StatusARM         sku  Sku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        Sku   (Appears on:FlexibleServers_Spec)  Deprecated version of Sku. Use v1beta20210501.Sku instead\n    Field Description      name  string        tier  SkuTier         SkuARM   (Appears on:FlexibleServers_SpecARM)  Deprecated version of Sku. Use v1beta20210501.Sku instead\n    Field Description      name  string        tier  SkuTier         SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusTier. Use v1beta20210501.SkuStatusTier instead\n    Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuTier. Use v1beta20210501.SkuTier instead\n    Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    Sku_Status   (Appears on:Server_Status)  Deprecated version of Sku_Status. Use v1beta20210501.Sku_Status instead\n    Field Description      name  string        tier  SkuStatusTier         Sku_StatusARM   (Appears on:Server_StatusARM)  Deprecated version of Sku_Status. Use v1beta20210501.Sku_Status instead\n    Field Description      name  string        tier  SkuStatusTier         Storage   (Appears on:FlexibleServers_Spec)  Deprecated version of Storage. Use v1beta20210501.Storage instead\n    Field Description      autoGrow  StorageAutoGrow         iops  int        storageSizeGB  int        StorageARM   (Appears on:ServerPropertiesARM)  Deprecated version of Storage. Use v1beta20210501.Storage instead\n    Field Description      autoGrow  StorageAutoGrow         iops  int        storageSizeGB  int        StorageAutoGrow (string alias)  (Appears on:Storage, StorageARM)  Deprecated version of StorageAutoGrow. Use v1beta20210501.StorageAutoGrow instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Storage_Status   (Appears on:Server_Status)  Deprecated version of Storage_Status. Use v1beta20210501.Storage_Status instead\n    Field Description      autoGrow  EnableStatusEnum_Status         iops  int        storageSizeGB  int        storageSku  string        Storage_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Storage_Status. Use v1beta20210501.Storage_Status instead\n    Field Description      autoGrow  EnableStatusEnum_Status         iops  int        storageSizeGB  int        storageSku  string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20210501.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20210501.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:Database_Status, FirewallRule_Status, Server_Status)  Deprecated version of SystemData_Status. Use v1beta20210501.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:Database_StatusARM, FirewallRule_StatusARM, Server_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20210501.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType          "},{"id":40,"href":"/azure-service-operator/reference/dbformysql.v1beta20210501/","title":"dbformysql.azure.com/v1beta20210501","section":"References","content":"dbformysql.azure.com/v1beta20210501  Package v1beta20210501 contains API Schema definitions for the dbformysql v1beta20210501 API group\n Resource Types:  Backup   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Backup\n    Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    geoRedundantBackup  BackupGeoRedundantBackup     GeoRedundantBackup: Whether or not geo redundant backup is enabled.\n    BackupARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Backup\n    Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    geoRedundantBackup  BackupGeoRedundantBackup     GeoRedundantBackup: Whether or not geo redundant backup is enabled.\n    BackupGeoRedundantBackup (string alias)  (Appears on:Backup, BackupARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Backup_Status   (Appears on:Server_Status)      Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    earliestRestoreDate  string    EarliestRestoreDate: Earliest restore point creation time (ISO8601 format)\n    geoRedundantBackup  EnableStatusEnum_Status     GeoRedundantBackup: Whether or not geo redundant backup is enabled.\n    Backup_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    earliestRestoreDate  string    EarliestRestoreDate: Earliest restore point creation time (ISO8601 format)\n    geoRedundantBackup  EnableStatusEnum_Status     GeoRedundantBackup: Whether or not geo redundant backup is enabled.\n    DatabasePropertiesARM   (Appears on:FlexibleServersDatabases_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/DatabaseProperties\n    Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)      Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    Database_Status   (Appears on:FlexibleServersDatabase)      Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Database_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  DatabaseProperties_StatusARM     Properties: The properties of a database.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    EnableStatusEnum_Status (string alias)  (Appears on:Backup_Status, Backup_StatusARM, Network_Status, Network_StatusARM, Storage_Status, Storage_StatusARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    FirewallRulePropertiesARM   (Appears on:FlexibleServersFirewallRules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/FirewallRuleProperties\n    Field Description      endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    FirewallRuleProperties_StatusARM   (Appears on:FirewallRule_StatusARM)      Field Description      endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    FirewallRule_Status   (Appears on:FlexibleServersFirewallRule)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    FirewallRule_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  FirewallRuleProperties_StatusARM     Properties: The properties of a firewall rule.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    FlexibleServer   Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/resourceDefinitions/flexibleServers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServers_Spec          administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  genruntime.SecretReference     AdministratorLoginPassword: The password of the administrator login (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability Zone information of the server.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup     Backup: Storage Profile properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new MySQL server.\n    highAvailability  HighAvailability     HighAvailability: Network related properties of a server\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow     MaintenanceWindow: Maintenance window of a server.\n    network  Network     Network: Network related properties of a server\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    replicationRole  ServerPropertiesReplicationRole     ReplicationRole: The replication role.\n    restorePointInTime  string    RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.\n    sku  Sku     Sku: Billing information related properties of a server.\n    sourceServerResourceId  string    SourceServerResourceId: The source MySQL server id.\n    storage  Storage     Storage: Storage Profile properties of a server\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    version  ServerPropertiesVersion     Version: Server version.\n       status  Server_Status         FlexibleServersDatabase   Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/resourceDefinitions/flexibleServers_databases\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Database_Status         FlexibleServersDatabasesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-01\u0026#34;\n    FlexibleServersDatabases_Spec   (Appears on:FlexibleServersDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersDatabases_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the database.\n    properties  DatabasePropertiesARM     Properties: The properties of a database.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersFirewallRule   Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/resourceDefinitions/flexibleServers_firewallRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  FirewallRule_Status         FlexibleServersFirewallRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-01\u0026#34;\n    FlexibleServersFirewallRules_Spec   (Appears on:FlexibleServersFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbformysql.azure.com/FlexibleServer resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersFirewallRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the server firewall rule.\n    properties  FirewallRulePropertiesARM     Properties: The properties of a server firewall rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-01\u0026#34;\n    FlexibleServers_Spec   (Appears on:FlexibleServer)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  genruntime.SecretReference     AdministratorLoginPassword: The password of the administrator login (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability Zone information of the server.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup     Backup: Storage Profile properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new MySQL server.\n    highAvailability  HighAvailability     HighAvailability: Network related properties of a server\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow     MaintenanceWindow: Maintenance window of a server.\n    network  Network     Network: Network related properties of a server\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    replicationRole  ServerPropertiesReplicationRole     ReplicationRole: The replication role.\n    restorePointInTime  string    RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.\n    sku  Sku     Sku: Billing information related properties of a server.\n    sourceServerResourceId  string    SourceServerResourceId: The source MySQL server id.\n    storage  Storage     Storage: Storage Profile properties of a server\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    version  ServerPropertiesVersion     Version: Server version.\n    FlexibleServers_SpecARM       Field Description      location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the server.\n    properties  ServerPropertiesARM     Properties: The properties of a server.\n    sku  SkuARM     Sku: Billing information related properties of a server.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    HighAvailability   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/HighAvailability\n    Field Description      mode  HighAvailabilityMode     Mode: High availability mode for a server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: Availability zone of the standby server.\n    HighAvailabilityARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/HighAvailability\n    Field Description      mode  HighAvailabilityMode     Mode: High availability mode for a server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: Availability zone of the standby server.\n    HighAvailabilityMode (string alias)  (Appears on:HighAvailability, HighAvailabilityARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;SameZone\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusMode (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;SameZone\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusState (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)      Value Description   \u0026#34;CreatingStandby\u0026#34;\n  \u0026#34;FailingOver\u0026#34;\n  \u0026#34;Healthy\u0026#34;\n  \u0026#34;NotEnabled\u0026#34;\n  \u0026#34;RemovingStandby\u0026#34;\n    HighAvailability_Status   (Appears on:Server_Status)      Field Description      mode  HighAvailabilityStatusMode     Mode: High availability mode for a server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: Availability zone of the standby server.\n    state  HighAvailabilityStatusState     State: The state of server high availability.\n    HighAvailability_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      mode  HighAvailabilityStatusMode     Mode: High availability mode for a server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: Availability zone of the standby server.\n    state  HighAvailabilityStatusState     State: The state of server high availability.\n    MaintenanceWindow   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/MaintenanceWindow\n    Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindowARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/MaintenanceWindow\n    Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindow_Status   (Appears on:Server_Status)      Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindow_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    Network   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Network\n    Field Description      delegatedSubnetResourceReference  genruntime.ResourceReference     DelegatedSubnetResourceReference: Delegated subnet resource id used to setup vnet for a server.\n    privateDnsZoneResourceReference  genruntime.ResourceReference     PrivateDnsZoneResourceReference: Private DNS zone resource id.\n    NetworkARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Network\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneResourceId  string        Network_Status   (Appears on:Server_Status)      Field Description      delegatedSubnetResourceId  string    DelegatedSubnetResourceId: Delegated subnet resource id used to setup vnet for a server.\n    privateDnsZoneResourceId  string    PrivateDnsZoneResourceId: Private DNS zone resource id.\n    publicNetworkAccess  EnableStatusEnum_Status     PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is \u0026lsquo;Disabled\u0026rsquo; when server has VNet integration.\n    Network_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      delegatedSubnetResourceId  string    DelegatedSubnetResourceId: Delegated subnet resource id used to setup vnet for a server.\n    privateDnsZoneResourceId  string    PrivateDnsZoneResourceId: Private DNS zone resource id.\n    publicNetworkAccess  EnableStatusEnum_Status     PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is \u0026lsquo;Disabled\u0026rsquo; when server has VNet integration.\n    ReplicationRole_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Replica\u0026#34;\n  \u0026#34;Source\u0026#34;\n    ServerPropertiesARM   (Appears on:FlexibleServers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/ServerProperties\n    Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  string    AdministratorLoginPassword: The password of the administrator login (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability Zone information of the server.\n    backup  BackupARM     Backup: Storage Profile properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new MySQL server.\n    highAvailability  HighAvailabilityARM     HighAvailability: Network related properties of a server\n    maintenanceWindow  MaintenanceWindowARM     MaintenanceWindow: Maintenance window of a server.\n    network  NetworkARM     Network: Network related properties of a server\n    replicationRole  ServerPropertiesReplicationRole     ReplicationRole: The replication role.\n    restorePointInTime  string    RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.\n    sourceServerResourceId  string    SourceServerResourceId: The source MySQL server id.\n    storage  StorageARM     Storage: Storage Profile properties of a server\n    version  ServerPropertiesVersion     Version: Server version.\n    ServerPropertiesCreateMode (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;GeoRestore\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Replica\u0026#34;\n    ServerPropertiesReplicationRole (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;Replica\u0026#34;\n  \u0026#34;Source\u0026#34;\n    ServerPropertiesStatusCreateMode (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;GeoRestore\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Replica\u0026#34;\n    ServerPropertiesStatusState (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Dropping\u0026#34;\n  \u0026#34;Ready\u0026#34;\n  \u0026#34;Starting\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n  \u0026#34;Stopping\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ServerPropertiesVersion (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)      Value Description   \u0026#34;5.7\u0026#34;\n  \u0026#34;8.0.21\u0026#34;\n    ServerProperties_StatusARM   (Appears on:Server_StatusARM)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    availabilityZone  string    AvailabilityZone: availability Zone information of the server.\n    backup  Backup_StatusARM     Backup: Backup related properties of a server.\n    createMode  ServerPropertiesStatusCreateMode     CreateMode: The mode to create a new MySQL server.\n    fullyQualifiedDomainName  string    FullyQualifiedDomainName: The fully qualified domain name of a server.\n    highAvailability  HighAvailability_StatusARM     HighAvailability: High availability related properties of a server.\n    maintenanceWindow  MaintenanceWindow_StatusARM     MaintenanceWindow: Maintenance window of a server.\n    network  Network_StatusARM     Network: Network related properties of a server.\n    replicaCapacity  int    ReplicaCapacity: The maximum number of replicas that a primary server can have.\n    replicationRole  ReplicationRole_Status     ReplicationRole: The replication role.\n    restorePointInTime  string    RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.\n    sourceServerResourceId  string    SourceServerResourceId: The source MySQL server id.\n    state  ServerPropertiesStatusState     State: The state of a server.\n    storage  Storage_StatusARM     Storage: Storage related properties of a server.\n    version  ServerVersion_Status     Version: Server version.\n    ServerVersion_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;5.7\u0026#34;\n  \u0026#34;8.0.21\u0026#34;\n    Server_Status   (Appears on:FlexibleServer)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    availabilityZone  string    AvailabilityZone: availability Zone information of the server.\n    backup  Backup_Status     Backup: Backup related properties of a server.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createMode  ServerPropertiesStatusCreateMode     CreateMode: The mode to create a new MySQL server.\n    fullyQualifiedDomainName  string    FullyQualifiedDomainName: The fully qualified domain name of a server.\n    highAvailability  HighAvailability_Status     HighAvailability: High availability related properties of a server.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow_Status     MaintenanceWindow: Maintenance window of a server.\n    name  string    Name: The name of the resource\n    network  Network_Status     Network: Network related properties of a server.\n    replicaCapacity  int    ReplicaCapacity: The maximum number of replicas that a primary server can have.\n    replicationRole  ReplicationRole_Status     ReplicationRole: The replication role.\n    restorePointInTime  string    RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.\n    sku  Sku_Status     Sku: The SKU (pricing tier) of the server.\n    sourceServerResourceId  string    SourceServerResourceId: The source MySQL server id.\n    state  ServerPropertiesStatusState     State: The state of a server.\n    storage  Storage_Status     Storage: Storage related properties of a server.\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    version  ServerVersion_Status     Version: Server version.\n    Server_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  ServerProperties_StatusARM     Properties: Properties of the server.\n    sku  Sku_StatusARM     Sku: The SKU (pricing tier) of the server.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Sku   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Sku\n    Field Description      name  string    Name: The name of the sku, e.g. Standard_D32s_v3.\n    tier  SkuTier     Tier: The tier of the particular SKU, e.g. GeneralPurpose.\n    SkuARM   (Appears on:FlexibleServers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Sku\n    Field Description      name  string    Name: The name of the sku, e.g. Standard_D32s_v3.\n    tier  SkuTier     Tier: The tier of the particular SKU, e.g. GeneralPurpose.\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    Sku_Status   (Appears on:Server_Status)      Field Description      name  string    Name: The name of the sku, e.g. Standard_D32s_v3.\n    tier  SkuStatusTier     Tier: The tier of the particular SKU, e.g. GeneralPurpose.\n    Sku_StatusARM   (Appears on:Server_StatusARM)      Field Description      name  string    Name: The name of the sku, e.g. Standard_D32s_v3.\n    tier  SkuStatusTier     Tier: The tier of the particular SKU, e.g. GeneralPurpose.\n    Storage   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Storage\n    Field Description      autoGrow  StorageAutoGrow     AutoGrow: Enable Storage Auto Grow or not.\n    iops  int    Iops: Storage IOPS for a server.\n    storageSizeGB  int    StorageSizeGB: Max storage size allowed for a server.\n    StorageARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-01/Microsoft.DBforMySQL.json#/definitions/Storage\n    Field Description      autoGrow  StorageAutoGrow     AutoGrow: Enable Storage Auto Grow or not.\n    iops  int    Iops: Storage IOPS for a server.\n    storageSizeGB  int    StorageSizeGB: Max storage size allowed for a server.\n    StorageAutoGrow (string alias)  (Appears on:Storage, StorageARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Storage_Status   (Appears on:Server_Status)      Field Description      autoGrow  EnableStatusEnum_Status     AutoGrow: Enable Storage Auto Grow or not.\n    iops  int    Iops: Storage IOPS for a server.\n    storageSizeGB  int    StorageSizeGB: Max storage size allowed for a server.\n    storageSku  string    StorageSku: The sku name of the server storage.\n    Storage_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      autoGrow  EnableStatusEnum_Status     AutoGrow: Enable Storage Auto Grow or not.\n    iops  int    Iops: Storage IOPS for a server.\n    storageSizeGB  int    StorageSizeGB: Max storage size allowed for a server.\n    storageSku  string    StorageSku: The sku name of the server storage.\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:Database_Status, FirewallRule_Status, Server_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:Database_StatusARM, FirewallRule_StatusARM, Server_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n     "},{"id":41,"href":"/azure-service-operator/reference/dbforpostgresql.v1alpha1api20210601/","title":"dbforpostgresql.azure.com/v1alpha1api20210601","section":"References","content":"dbforpostgresql.azure.com/v1alpha1api20210601  Package v1alpha1api20210601 contains API Schema definitions for the dbforpostgresql v1alpha1api20210601 API group\n Resource Types:  Backup   (Appears on:FlexibleServers_Spec)  Deprecated version of Backup. Use v1beta20210601.Backup instead\n    Field Description      backupRetentionDays  int        geoRedundantBackup  BackupGeoRedundantBackup         BackupARM   (Appears on:ServerPropertiesARM)  Deprecated version of Backup. Use v1beta20210601.Backup instead\n    Field Description      backupRetentionDays  int        geoRedundantBackup  BackupGeoRedundantBackup         BackupGeoRedundantBackup (string alias)  (Appears on:Backup, BackupARM)  Deprecated version of BackupGeoRedundantBackup. Use v1beta20210601.BackupGeoRedundantBackup instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    BackupStatusGeoRedundantBackup (string alias)  (Appears on:Backup_Status, Backup_StatusARM)  Deprecated version of BackupStatusGeoRedundantBackup. Use v1beta20210601.BackupStatusGeoRedundantBackup instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Backup_Status   (Appears on:Server_Status)  Deprecated version of Backup_Status. Use v1beta20210601.Backup_Status instead\n    Field Description      backupRetentionDays  int        earliestRestoreDate  string        geoRedundantBackup  BackupStatusGeoRedundantBackup         Backup_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Backup_Status. Use v1beta20210601.Backup_Status instead\n    Field Description      backupRetentionDays  int        earliestRestoreDate  string        geoRedundantBackup  BackupStatusGeoRedundantBackup         ConfigurationPropertiesARM   (Appears on:FlexibleServersConfigurations_SpecARM)  Deprecated version of ConfigurationProperties. Use v1beta20210601.ConfigurationProperties instead\n    Field Description      source  string        value  string        ConfigurationPropertiesStatusDataType (string alias)  (Appears on:ConfigurationProperties_StatusARM, Configuration_Status)  Deprecated version of ConfigurationPropertiesStatusDataType. Use v1beta20210601.ConfigurationPropertiesStatusDataType instead\n    Value Description   \u0026#34;Boolean\u0026#34;\n  \u0026#34;Enumeration\u0026#34;\n  \u0026#34;Integer\u0026#34;\n  \u0026#34;Numeric\u0026#34;\n    ConfigurationProperties_StatusARM   (Appears on:Configuration_StatusARM)  Deprecated version of ConfigurationProperties_Status. Use v1beta20210601.ConfigurationProperties_Status instead\n    Field Description      allowedValues  string        dataType  ConfigurationPropertiesStatusDataType         defaultValue  string        description  string        documentationLink  string        isConfigPendingRestart  bool        isDynamicConfig  bool        isReadOnly  bool        source  string        unit  string        value  string        Configuration_Status   (Appears on:FlexibleServersConfiguration)  Deprecated version of Configuration_Status. Use v1beta20210601.Configuration_Status instead\n    Field Description      allowedValues  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dataType  ConfigurationPropertiesStatusDataType         defaultValue  string        description  string        documentationLink  string        id  string        isConfigPendingRestart  bool        isDynamicConfig  bool        isReadOnly  bool        name  string        source  string        systemData  SystemData_Status         type  string        unit  string        value  string        Configuration_StatusARM   Deprecated version of Configuration_Status. Use v1beta20210601.Configuration_Status instead\n    Field Description      id  string        name  string        properties  ConfigurationProperties_StatusARM         systemData  SystemData_StatusARM         type  string        DatabasePropertiesARM   (Appears on:FlexibleServersDatabases_SpecARM)  Deprecated version of DatabaseProperties. Use v1beta20210601.DatabaseProperties instead\n    Field Description      charset  string        collation  string        DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)  Deprecated version of DatabaseProperties_Status. Use v1beta20210601.DatabaseProperties_Status instead\n    Field Description      charset  string        collation  string        Database_Status   (Appears on:FlexibleServersDatabase)  Deprecated version of Database_Status. Use v1beta20210601.Database_Status instead\n    Field Description      charset  string        collation  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        name  string        systemData  SystemData_Status         type  string        Database_StatusARM   Deprecated version of Database_Status. Use v1beta20210601.Database_Status instead\n    Field Description      id  string        name  string        properties  DatabaseProperties_StatusARM         systemData  SystemData_StatusARM         type  string        FirewallRulePropertiesARM   (Appears on:FlexibleServersFirewallRules_SpecARM)  Deprecated version of FirewallRuleProperties. Use v1beta20210601.FirewallRuleProperties instead\n    Field Description      endIpAddress  string        startIpAddress  string        FirewallRuleProperties_StatusARM   (Appears on:FirewallRule_StatusARM)  Deprecated version of FirewallRuleProperties_Status. Use v1beta20210601.FirewallRuleProperties_Status instead\n    Field Description      endIpAddress  string        startIpAddress  string        FirewallRule_Status   (Appears on:FlexibleServersFirewallRule)  Deprecated version of FirewallRule_Status. Use v1beta20210601.FirewallRule_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIpAddress  string        id  string        name  string        startIpAddress  string        systemData  SystemData_Status         type  string        FirewallRule_StatusARM   Deprecated version of FirewallRule_Status. Use v1beta20210601.FirewallRule_Status instead\n    Field Description      id  string        name  string        properties  FirewallRuleProperties_StatusARM         systemData  SystemData_StatusARM         type  string        FlexibleServer   Deprecated version of FlexibleServer. Use v1beta20210601.FlexibleServer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServers_Spec          administratorLogin  string        administratorLoginPassword  genruntime.SecretReference         availabilityZone  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailability         location  string        maintenanceWindow  MaintenanceWindow         network  Network         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    pointInTimeUTC  string        sku  Sku         sourceServerResourceReference  genruntime.ResourceReference         storage  Storage         tags  map[string]string        version  ServerPropertiesVersion            status  Server_Status         FlexibleServersConfiguration   Deprecated version of FlexibleServersConfiguration. Use v1beta20210601.FlexibleServersConfiguration instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersConfigurations_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    source  string        tags  map[string]string        value  string           status  Configuration_Status         FlexibleServersConfigurations_Spec   (Appears on:FlexibleServersConfiguration)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    source  string        tags  map[string]string        value  string        FlexibleServersConfigurations_SpecARM   Deprecated version of FlexibleServersConfigurations_Spec. Use v1beta20210601.FlexibleServersConfigurations_Spec instead\n    Field Description      location  string        name  string        properties  ConfigurationPropertiesARM         tags  map[string]string        FlexibleServersDatabase   Deprecated version of FlexibleServersDatabase. Use v1beta20210601.FlexibleServersDatabase instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string        collation  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    tags  map[string]string           status  Database_Status         FlexibleServersDatabases_Spec   (Appears on:FlexibleServersDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string        collation  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    tags  map[string]string        FlexibleServersDatabases_SpecARM   Deprecated version of FlexibleServersDatabases_Spec. Use v1beta20210601.FlexibleServersDatabases_Spec instead\n    Field Description      location  string        name  string        properties  DatabasePropertiesARM         tags  map[string]string        FlexibleServersFirewallRule   Deprecated version of FlexibleServersFirewallRule. Use v1beta20210601.FlexibleServersFirewallRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    startIpAddress  string        tags  map[string]string           status  FirewallRule_Status         FlexibleServersFirewallRules_Spec   (Appears on:FlexibleServersFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    startIpAddress  string        tags  map[string]string        FlexibleServersFirewallRules_SpecARM   Deprecated version of FlexibleServersFirewallRules_Spec. Use v1beta20210601.FlexibleServersFirewallRules_Spec instead\n    Field Description      location  string        name  string        properties  FirewallRulePropertiesARM         tags  map[string]string        FlexibleServers_Spec   (Appears on:FlexibleServer)      Field Description      administratorLogin  string        administratorLoginPassword  genruntime.SecretReference         availabilityZone  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailability         location  string        maintenanceWindow  MaintenanceWindow         network  Network         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    pointInTimeUTC  string        sku  Sku         sourceServerResourceReference  genruntime.ResourceReference         storage  Storage         tags  map[string]string        version  ServerPropertiesVersion         FlexibleServers_SpecARM   Deprecated version of FlexibleServers_Spec. Use v1beta20210601.FlexibleServers_Spec instead\n    Field Description      location  string        name  string        properties  ServerPropertiesARM         sku  SkuARM         tags  map[string]string        HighAvailability   (Appears on:FlexibleServers_Spec)  Deprecated version of HighAvailability. Use v1beta20210601.HighAvailability instead\n    Field Description      mode  HighAvailabilityMode         standbyAvailabilityZone  string        HighAvailabilityARM   (Appears on:ServerPropertiesARM)  Deprecated version of HighAvailability. Use v1beta20210601.HighAvailability instead\n    Field Description      mode  HighAvailabilityMode         standbyAvailabilityZone  string        HighAvailabilityMode (string alias)  (Appears on:HighAvailability, HighAvailabilityARM)  Deprecated version of HighAvailabilityMode. Use v1beta20210601.HighAvailabilityMode instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusMode (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)  Deprecated version of HighAvailabilityStatusMode. Use v1beta20210601.HighAvailabilityStatusMode instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusState (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)  Deprecated version of HighAvailabilityStatusState. Use v1beta20210601.HighAvailabilityStatusState instead\n    Value Description   \u0026#34;CreatingStandby\u0026#34;\n  \u0026#34;FailingOver\u0026#34;\n  \u0026#34;Healthy\u0026#34;\n  \u0026#34;NotEnabled\u0026#34;\n  \u0026#34;RemovingStandby\u0026#34;\n  \u0026#34;ReplicatingData\u0026#34;\n    HighAvailability_Status   (Appears on:Server_Status)  Deprecated version of HighAvailability_Status. Use v1beta20210601.HighAvailability_Status instead\n    Field Description      mode  HighAvailabilityStatusMode         standbyAvailabilityZone  string        state  HighAvailabilityStatusState         HighAvailability_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of HighAvailability_Status. Use v1beta20210601.HighAvailability_Status instead\n    Field Description      mode  HighAvailabilityStatusMode         standbyAvailabilityZone  string        state  HighAvailabilityStatusState         MaintenanceWindow   (Appears on:FlexibleServers_Spec)  Deprecated version of MaintenanceWindow. Use v1beta20210601.MaintenanceWindow instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindowARM   (Appears on:ServerPropertiesARM)  Deprecated version of MaintenanceWindow. Use v1beta20210601.MaintenanceWindow instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindow_Status   (Appears on:Server_Status)  Deprecated version of MaintenanceWindow_Status. Use v1beta20210601.MaintenanceWindow_Status instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        MaintenanceWindow_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of MaintenanceWindow_Status. Use v1beta20210601.MaintenanceWindow_Status instead\n    Field Description      customWindow  string        dayOfWeek  int        startHour  int        startMinute  int        Network   (Appears on:FlexibleServers_Spec)  Deprecated version of Network. Use v1beta20210601.Network instead\n    Field Description      delegatedSubnetResourceReference  genruntime.ResourceReference         privateDnsZoneArmResourceReference  genruntime.ResourceReference         NetworkARM   (Appears on:ServerPropertiesARM)  Deprecated version of Network. Use v1beta20210601.Network instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneArmResourceId  string        NetworkStatusPublicNetworkAccess (string alias)  (Appears on:Network_Status, Network_StatusARM)  Deprecated version of NetworkStatusPublicNetworkAccess. Use v1beta20210601.NetworkStatusPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Network_Status   (Appears on:Server_Status)  Deprecated version of Network_Status. Use v1beta20210601.Network_Status instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneArmResourceId  string        publicNetworkAccess  NetworkStatusPublicNetworkAccess         Network_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Network_Status. Use v1beta20210601.Network_Status instead\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneArmResourceId  string        publicNetworkAccess  NetworkStatusPublicNetworkAccess         ServerPropertiesARM   (Appears on:FlexibleServers_SpecARM)  Deprecated version of ServerProperties. Use v1beta20210601.ServerProperties instead\n    Field Description      administratorLogin  string        administratorLoginPassword  string        availabilityZone  string        backup  BackupARM         createMode  ServerPropertiesCreateMode         highAvailability  HighAvailabilityARM         maintenanceWindow  MaintenanceWindowARM         network  NetworkARM         pointInTimeUTC  string        sourceServerResourceId  string        storage  StorageARM         version  ServerPropertiesVersion         ServerPropertiesCreateMode (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)  Deprecated version of ServerPropertiesCreateMode. Use v1beta20210601.ServerPropertiesCreateMode instead\n    Value Description   \u0026#34;Create\u0026#34;\n  \u0026#34;Default\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Update\u0026#34;\n    ServerPropertiesStatusCreateMode (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerPropertiesStatusCreateMode. Use v1beta20210601.ServerPropertiesStatusCreateMode instead\n    Value Description   \u0026#34;Create\u0026#34;\n  \u0026#34;Default\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Update\u0026#34;\n    ServerPropertiesStatusState (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerPropertiesStatusState. Use v1beta20210601.ServerPropertiesStatusState instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Dropping\u0026#34;\n  \u0026#34;Ready\u0026#34;\n  \u0026#34;Starting\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n  \u0026#34;Stopping\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ServerPropertiesVersion (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)  Deprecated version of ServerPropertiesVersion. Use v1beta20210601.ServerPropertiesVersion instead\n    Value Description   \u0026#34;11\u0026#34;\n  \u0026#34;12\u0026#34;\n  \u0026#34;13\u0026#34;\n    ServerProperties_StatusARM   (Appears on:Server_StatusARM)  Deprecated version of ServerProperties_Status. Use v1beta20210601.ServerProperties_Status instead\n    Field Description      administratorLogin  string        availabilityZone  string        backup  Backup_StatusARM         createMode  ServerPropertiesStatusCreateMode         fullyQualifiedDomainName  string        highAvailability  HighAvailability_StatusARM         maintenanceWindow  MaintenanceWindow_StatusARM         minorVersion  string        network  Network_StatusARM         pointInTimeUTC  string        sourceServerResourceId  string        state  ServerPropertiesStatusState         storage  Storage_StatusARM         version  ServerVersion_Status         ServerVersion_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)  Deprecated version of ServerVersion_Status. Use v1beta20210601.ServerVersion_Status instead\n    Value Description   \u0026#34;11\u0026#34;\n  \u0026#34;12\u0026#34;\n  \u0026#34;13\u0026#34;\n    Server_Status   (Appears on:FlexibleServer)  Deprecated version of Server_Status. Use v1beta20210601.Server_Status instead\n    Field Description      administratorLogin  string        availabilityZone  string        backup  Backup_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createMode  ServerPropertiesStatusCreateMode         fullyQualifiedDomainName  string        highAvailability  HighAvailability_Status         id  string        location  string        maintenanceWindow  MaintenanceWindow_Status         minorVersion  string        name  string        network  Network_Status         pointInTimeUTC  string        sku  Sku_Status         sourceServerResourceId  string        state  ServerPropertiesStatusState         storage  Storage_Status         systemData  SystemData_Status         tags  map[string]string        type  string        version  ServerVersion_Status         Server_StatusARM   Deprecated version of Server_Status. Use v1beta20210601.Server_Status instead\n    Field Description      id  string        location  string        name  string        properties  ServerProperties_StatusARM         sku  Sku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        Sku   (Appears on:FlexibleServers_Spec)  Deprecated version of Sku. Use v1beta20210601.Sku instead\n    Field Description      name  string        tier  SkuTier         SkuARM   (Appears on:FlexibleServers_SpecARM)  Deprecated version of Sku. Use v1beta20210601.Sku instead\n    Field Description      name  string        tier  SkuTier         SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusTier. Use v1beta20210601.SkuStatusTier instead\n    Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuTier. Use v1beta20210601.SkuTier instead\n    Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    Sku_Status   (Appears on:Server_Status)  Deprecated version of Sku_Status. Use v1beta20210601.Sku_Status instead\n    Field Description      name  string        tier  SkuStatusTier         Sku_StatusARM   (Appears on:Server_StatusARM)  Deprecated version of Sku_Status. Use v1beta20210601.Sku_Status instead\n    Field Description      name  string        tier  SkuStatusTier         Storage   (Appears on:FlexibleServers_Spec)  Deprecated version of Storage. Use v1beta20210601.Storage instead\n    Field Description      storageSizeGB  int        StorageARM   (Appears on:ServerPropertiesARM)  Deprecated version of Storage. Use v1beta20210601.Storage instead\n    Field Description      storageSizeGB  int        Storage_Status   (Appears on:Server_Status)  Deprecated version of Storage_Status. Use v1beta20210601.Storage_Status instead\n    Field Description      storageSizeGB  int        Storage_StatusARM   (Appears on:ServerProperties_StatusARM)  Deprecated version of Storage_Status. Use v1beta20210601.Storage_Status instead\n    Field Description      storageSizeGB  int        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20210601.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20210601.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:Configuration_Status, Database_Status, FirewallRule_Status, Server_Status)  Deprecated version of SystemData_Status. Use v1beta20210601.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:Configuration_StatusARM, Database_StatusARM, FirewallRule_StatusARM, Server_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20210601.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType          "},{"id":42,"href":"/azure-service-operator/reference/dbforpostgresql.v1beta20210601/","title":"dbforpostgresql.azure.com/v1beta20210601","section":"References","content":"dbforpostgresql.azure.com/v1beta20210601  Package v1beta20210601 contains API Schema definitions for the dbforpostgresql v1beta20210601 API group\n Resource Types:  Backup   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Backup\n    Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    geoRedundantBackup  BackupGeoRedundantBackup     GeoRedundantBackup: A value indicating whether Geo-Redundant backup is enabled on the server.\n    BackupARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Backup\n    Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    geoRedundantBackup  BackupGeoRedundantBackup     GeoRedundantBackup: A value indicating whether Geo-Redundant backup is enabled on the server.\n    BackupGeoRedundantBackup (string alias)  (Appears on:Backup, BackupARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    BackupStatusGeoRedundantBackup (string alias)  (Appears on:Backup_Status, Backup_StatusARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Backup_Status   (Appears on:Server_Status)      Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    earliestRestoreDate  string    EarliestRestoreDate: The earliest restore point time (ISO8601 format) for server.\n    geoRedundantBackup  BackupStatusGeoRedundantBackup     GeoRedundantBackup: A value indicating whether Geo-Redundant backup is enabled on the server.\n    Backup_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      backupRetentionDays  int    BackupRetentionDays: Backup retention days for the server.\n    earliestRestoreDate  string    EarliestRestoreDate: The earliest restore point time (ISO8601 format) for server.\n    geoRedundantBackup  BackupStatusGeoRedundantBackup     GeoRedundantBackup: A value indicating whether Geo-Redundant backup is enabled on the server.\n    ConfigurationPropertiesARM   (Appears on:FlexibleServersConfigurations_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/ConfigurationProperties\n    Field Description      source  string    Source: Source of the configuration.\n    value  string    Value: Value of the configuration.\n    ConfigurationPropertiesStatusDataType (string alias)  (Appears on:ConfigurationProperties_StatusARM, Configuration_Status)      Value Description   \u0026#34;Boolean\u0026#34;\n  \u0026#34;Enumeration\u0026#34;\n  \u0026#34;Integer\u0026#34;\n  \u0026#34;Numeric\u0026#34;\n    ConfigurationProperties_StatusARM   (Appears on:Configuration_StatusARM)      Field Description      allowedValues  string    AllowedValues: Allowed values of the configuration.\n    dataType  ConfigurationPropertiesStatusDataType     DataType: Data type of the configuration.\n    defaultValue  string    DefaultValue: Default value of the configuration.\n    description  string    Description: Description of the configuration.\n    documentationLink  string    DocumentationLink: Configuration documentation link.\n    isConfigPendingRestart  bool    IsConfigPendingRestart: Configuration is pending restart or not.\n    isDynamicConfig  bool    IsDynamicConfig: Configuration dynamic or static.\n    isReadOnly  bool    IsReadOnly: Configuration read-only or not.\n    source  string    Source: Source of the configuration.\n    unit  string    Unit: Configuration unit.\n    value  string    Value: Value of the configuration.\n    Configuration_Status   (Appears on:FlexibleServersConfiguration)      Field Description      allowedValues  string    AllowedValues: Allowed values of the configuration.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dataType  ConfigurationPropertiesStatusDataType     DataType: Data type of the configuration.\n    defaultValue  string    DefaultValue: Default value of the configuration.\n    description  string    Description: Description of the configuration.\n    documentationLink  string    DocumentationLink: Configuration documentation link.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    isConfigPendingRestart  bool    IsConfigPendingRestart: Configuration is pending restart or not.\n    isDynamicConfig  bool    IsDynamicConfig: Configuration dynamic or static.\n    isReadOnly  bool    IsReadOnly: Configuration read-only or not.\n    name  string    Name: The name of the resource\n    source  string    Source: Source of the configuration.\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    unit  string    Unit: Configuration unit.\n    value  string    Value: Value of the configuration.\n    Configuration_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  ConfigurationProperties_StatusARM     Properties: The properties of a configuration.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    DatabasePropertiesARM   (Appears on:FlexibleServersDatabases_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/DatabaseProperties\n    Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    DatabaseProperties_StatusARM   (Appears on:Database_StatusARM)      Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    Database_Status   (Appears on:FlexibleServersDatabase)      Field Description      charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Database_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  DatabaseProperties_StatusARM     Properties: The properties of a database.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    FirewallRulePropertiesARM   (Appears on:FlexibleServersFirewallRules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/FirewallRuleProperties\n    Field Description      endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    FirewallRuleProperties_StatusARM   (Appears on:FirewallRule_StatusARM)      Field Description      endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    FirewallRule_Status   (Appears on:FlexibleServersFirewallRule)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    FirewallRule_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  FirewallRuleProperties_StatusARM     Properties: The properties of a firewall rule.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    FlexibleServer   Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/resourceDefinitions/flexibleServers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServers_Spec          administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  genruntime.SecretReference     AdministratorLoginPassword: The administrator login password (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability zone information of the server.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup     Backup: Backup properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new PostgreSQL server.\n    highAvailability  HighAvailability     HighAvailability: High availability properties of a server\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow     MaintenanceWindow: Maintenance window properties of a server.\n    network  Network     Network: Network properties of a server\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    pointInTimeUTC  string    PointInTimeUTC: Restore point creation time (ISO8601 format), specifying the time to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    sku  Sku     Sku: Sku information related properties of a server.\n    sourceServerResourceReference  genruntime.ResourceReference     SourceServerResourceReference: The source server resource ID to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    storage  Storage     Storage: Storage properties of a server\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    version  ServerPropertiesVersion     Version: PostgreSQL Server version.\n       status  Server_Status         FlexibleServersConfiguration   Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/resourceDefinitions/flexibleServers_configurations\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersConfigurations_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    source  string    Source: Source of the configuration.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    value  string    Value: Value of the configuration.\n       status  Configuration_Status         FlexibleServersConfigurationsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-06-01\u0026#34;\n    FlexibleServersConfigurations_Spec   (Appears on:FlexibleServersConfiguration)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    source  string    Source: Source of the configuration.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    value  string    Value: Value of the configuration.\n    FlexibleServersConfigurations_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the server configuration.\n    properties  ConfigurationPropertiesARM     Properties: The properties of a configuration.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersDatabase   Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/resourceDefinitions/flexibleServers_databases\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Database_Status         FlexibleServersDatabasesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-06-01\u0026#34;\n    FlexibleServersDatabases_Spec   (Appears on:FlexibleServersDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    charset  string    Charset: The charset of the database.\n    collation  string    Collation: The collation of the database.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersDatabases_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the database.\n    properties  DatabasePropertiesARM     Properties: The properties of a database.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersFirewallRule   Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/resourceDefinitions/flexibleServers_firewallRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  FlexibleServersFirewallRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  FirewallRule_Status         FlexibleServersFirewallRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-06-01\u0026#34;\n    FlexibleServersFirewallRules_Spec   (Appears on:FlexibleServersFirewallRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    endIpAddress  string    EndIpAddress: The end IP address of the server firewall rule. Must be IPv4 format.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a dbforpostgresql.azure.com/FlexibleServer resource\n    startIpAddress  string    StartIpAddress: The start IP address of the server firewall rule. Must be IPv4 format.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersFirewallRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the server firewall rule.\n    properties  FirewallRulePropertiesARM     Properties: The properties of a server firewall rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    FlexibleServersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-06-01\u0026#34;\n    FlexibleServers_Spec   (Appears on:FlexibleServer)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  genruntime.SecretReference     AdministratorLoginPassword: The administrator login password (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability zone information of the server.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backup  Backup     Backup: Backup properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new PostgreSQL server.\n    highAvailability  HighAvailability     HighAvailability: High availability properties of a server\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow     MaintenanceWindow: Maintenance window properties of a server.\n    network  Network     Network: Network properties of a server\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    pointInTimeUTC  string    PointInTimeUTC: Restore point creation time (ISO8601 format), specifying the time to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    sku  Sku     Sku: Sku information related properties of a server.\n    sourceServerResourceReference  genruntime.ResourceReference     SourceServerResourceReference: The source server resource ID to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    storage  Storage     Storage: Storage properties of a server\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    version  ServerPropertiesVersion     Version: PostgreSQL Server version.\n    FlexibleServers_SpecARM       Field Description      location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the server.\n    properties  ServerPropertiesARM     Properties: The properties of a server.\n    sku  SkuARM     Sku: Sku information related properties of a server.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    HighAvailability   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/HighAvailability\n    Field Description      mode  HighAvailabilityMode     Mode: The HA mode for the server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: availability zone information of the standby.\n    HighAvailabilityARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/HighAvailability\n    Field Description      mode  HighAvailabilityMode     Mode: The HA mode for the server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: availability zone information of the standby.\n    HighAvailabilityMode (string alias)  (Appears on:HighAvailability, HighAvailabilityARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusMode (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;ZoneRedundant\u0026#34;\n    HighAvailabilityStatusState (string alias)  (Appears on:HighAvailability_Status, HighAvailability_StatusARM)      Value Description   \u0026#34;CreatingStandby\u0026#34;\n  \u0026#34;FailingOver\u0026#34;\n  \u0026#34;Healthy\u0026#34;\n  \u0026#34;NotEnabled\u0026#34;\n  \u0026#34;RemovingStandby\u0026#34;\n  \u0026#34;ReplicatingData\u0026#34;\n    HighAvailability_Status   (Appears on:Server_Status)      Field Description      mode  HighAvailabilityStatusMode     Mode: The HA mode for the server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: availability zone information of the standby.\n    state  HighAvailabilityStatusState     State: A state of a HA server that is visible to user.\n    HighAvailability_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      mode  HighAvailabilityStatusMode     Mode: The HA mode for the server.\n    standbyAvailabilityZone  string    StandbyAvailabilityZone: availability zone information of the standby.\n    state  HighAvailabilityStatusState     State: A state of a HA server that is visible to user.\n    MaintenanceWindow   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/MaintenanceWindow\n    Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindowARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/MaintenanceWindow\n    Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindow_Status   (Appears on:Server_Status)      Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    MaintenanceWindow_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      customWindow  string    CustomWindow: indicates whether custom window is enabled or disabled\n    dayOfWeek  int    DayOfWeek: day of week for maintenance window\n    startHour  int    StartHour: start hour for maintenance window\n    startMinute  int    StartMinute: start minute for maintenance window\n    Network   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Network\n    Field Description      delegatedSubnetResourceReference  genruntime.ResourceReference     DelegatedSubnetResourceReference: delegated subnet arm resource id.\n    privateDnsZoneArmResourceReference  genruntime.ResourceReference     PrivateDnsZoneArmResourceReference: private dns zone arm resource id.\n    NetworkARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Network\n    Field Description      delegatedSubnetResourceId  string        privateDnsZoneArmResourceId  string        NetworkStatusPublicNetworkAccess (string alias)  (Appears on:Network_Status, Network_StatusARM)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Network_Status   (Appears on:Server_Status)      Field Description      delegatedSubnetResourceId  string    DelegatedSubnetResourceId: delegated subnet arm resource id.\n    privateDnsZoneArmResourceId  string    PrivateDnsZoneArmResourceId: private dns zone arm resource id.\n    publicNetworkAccess  NetworkStatusPublicNetworkAccess     PublicNetworkAccess: public network access is enabled or not\n    Network_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      delegatedSubnetResourceId  string    DelegatedSubnetResourceId: delegated subnet arm resource id.\n    privateDnsZoneArmResourceId  string    PrivateDnsZoneArmResourceId: private dns zone arm resource id.\n    publicNetworkAccess  NetworkStatusPublicNetworkAccess     PublicNetworkAccess: public network access is enabled or not\n    ServerPropertiesARM   (Appears on:FlexibleServers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/ServerProperties\n    Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    administratorLoginPassword  string    AdministratorLoginPassword: The administrator login password (required for server creation).\n    availabilityZone  string    AvailabilityZone: availability zone information of the server.\n    backup  BackupARM     Backup: Backup properties of a server\n    createMode  ServerPropertiesCreateMode     CreateMode: The mode to create a new PostgreSQL server.\n    highAvailability  HighAvailabilityARM     HighAvailability: High availability properties of a server\n    maintenanceWindow  MaintenanceWindowARM     MaintenanceWindow: Maintenance window properties of a server.\n    network  NetworkARM     Network: Network properties of a server\n    pointInTimeUTC  string    PointInTimeUTC: Restore point creation time (ISO8601 format), specifying the time to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    sourceServerResourceId  string        storage  StorageARM     Storage: Storage properties of a server\n    version  ServerPropertiesVersion     Version: PostgreSQL Server version.\n    ServerPropertiesCreateMode (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)      Value Description   \u0026#34;Create\u0026#34;\n  \u0026#34;Default\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Update\u0026#34;\n    ServerPropertiesStatusCreateMode (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;Create\u0026#34;\n  \u0026#34;Default\u0026#34;\n  \u0026#34;PointInTimeRestore\u0026#34;\n  \u0026#34;Update\u0026#34;\n    ServerPropertiesStatusState (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Dropping\u0026#34;\n  \u0026#34;Ready\u0026#34;\n  \u0026#34;Starting\u0026#34;\n  \u0026#34;Stopped\u0026#34;\n  \u0026#34;Stopping\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ServerPropertiesVersion (string alias)  (Appears on:FlexibleServers_Spec, ServerPropertiesARM)      Value Description   \u0026#34;11\u0026#34;\n  \u0026#34;12\u0026#34;\n  \u0026#34;13\u0026#34;\n    ServerProperties_StatusARM   (Appears on:Server_StatusARM)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    availabilityZone  string    AvailabilityZone: availability zone information of the server.\n    backup  Backup_StatusARM     Backup: Backup properties of a server.\n    createMode  ServerPropertiesStatusCreateMode     CreateMode: The mode to create a new PostgreSQL server.\n    fullyQualifiedDomainName  string    FullyQualifiedDomainName: The fully qualified domain name of a server.\n    highAvailability  HighAvailability_StatusARM     HighAvailability: High availability properties of a server.\n    maintenanceWindow  MaintenanceWindow_StatusARM     MaintenanceWindow: Maintenance window properties of a server.\n    minorVersion  string    MinorVersion: The minor version of the server.\n    network  Network_StatusARM     Network: Network properties of a server.\n    pointInTimeUTC  string    PointInTimeUTC: Restore point creation time (ISO8601 format), specifying the time to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    sourceServerResourceId  string    SourceServerResourceId: The source server resource ID to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    state  ServerPropertiesStatusState     State: A state of a server that is visible to user.\n    storage  Storage_StatusARM     Storage: Storage properties of a server.\n    version  ServerVersion_Status     Version: PostgreSQL Server version.\n    ServerVersion_Status (string alias)  (Appears on:ServerProperties_StatusARM, Server_Status)      Value Description   \u0026#34;11\u0026#34;\n  \u0026#34;12\u0026#34;\n  \u0026#34;13\u0026#34;\n    Server_Status   (Appears on:FlexibleServer)      Field Description      administratorLogin  string    AdministratorLogin: The administrator\u0026rsquo;s login name of a server. Can only be specified when the server is being created (and is required for creation).\n    availabilityZone  string    AvailabilityZone: availability zone information of the server.\n    backup  Backup_Status     Backup: Backup properties of a server.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createMode  ServerPropertiesStatusCreateMode     CreateMode: The mode to create a new PostgreSQL server.\n    fullyQualifiedDomainName  string    FullyQualifiedDomainName: The fully qualified domain name of a server.\n    highAvailability  HighAvailability_Status     HighAvailability: High availability properties of a server.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    maintenanceWindow  MaintenanceWindow_Status     MaintenanceWindow: Maintenance window properties of a server.\n    minorVersion  string    MinorVersion: The minor version of the server.\n    name  string    Name: The name of the resource\n    network  Network_Status     Network: Network properties of a server.\n    pointInTimeUTC  string    PointInTimeUTC: Restore point creation time (ISO8601 format), specifying the time to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    sku  Sku_Status     Sku: The SKU (pricing tier) of the server.\n    sourceServerResourceId  string    SourceServerResourceId: The source server resource ID to restore from. It\u0026rsquo;s required when \u0026lsquo;createMode\u0026rsquo; is \u0026lsquo;PointInTimeRestore\u0026rsquo;.\n    state  ServerPropertiesStatusState     State: A state of a server that is visible to user.\n    storage  Storage_Status     Storage: Storage properties of a server.\n    systemData  SystemData_Status     SystemData: The system metadata relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    version  ServerVersion_Status     Version: PostgreSQL Server version.\n    Server_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  ServerProperties_StatusARM     Properties: Properties of the server.\n    sku  Sku_StatusARM     Sku: The SKU (pricing tier) of the server.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Sku   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Sku\n    Field Description      name  string    Name: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.\n    tier  SkuTier     Tier: The tier of the particular SKU, e.g. Burstable.\n    SkuARM   (Appears on:FlexibleServers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Sku\n    Field Description      name  string    Name: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.\n    tier  SkuTier     Tier: The tier of the particular SKU, e.g. Burstable.\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Burstable\u0026#34;\n  \u0026#34;GeneralPurpose\u0026#34;\n  \u0026#34;MemoryOptimized\u0026#34;\n    Sku_Status   (Appears on:Server_Status)      Field Description      name  string    Name: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.\n    tier  SkuStatusTier     Tier: The tier of the particular SKU, e.g. Burstable.\n    Sku_StatusARM   (Appears on:Server_StatusARM)      Field Description      name  string    Name: The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.\n    tier  SkuStatusTier     Tier: The tier of the particular SKU, e.g. Burstable.\n    Storage   (Appears on:FlexibleServers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Storage\n    Field Description      storageSizeGB  int    StorageSizeGB: Max storage allowed for a server.\n    StorageARM   (Appears on:ServerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.DBforPostgreSQL.json#/definitions/Storage\n    Field Description      storageSizeGB  int    StorageSizeGB: Max storage allowed for a server.\n    Storage_Status   (Appears on:Server_Status)      Field Description      storageSizeGB  int    StorageSizeGB: Max storage allowed for a server.\n    Storage_StatusARM   (Appears on:ServerProperties_StatusARM)      Field Description      storageSizeGB  int    StorageSizeGB: Max storage allowed for a server.\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:Configuration_Status, Database_Status, FirewallRule_Status, Server_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:Configuration_StatusARM, Database_StatusARM, FirewallRule_StatusARM, Server_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n     "},{"id":43,"href":"/azure-service-operator/introduction/multitenant-deployment/","title":"Deploying Azure Service Operator v2 in multi-tenant mode","section":"User’s Guide","content":"Deploying Azure Service Operator v2 in multi-tenant mode #  The current release version of the Azure Service Operator (ASO) deployment YAML installs the operator in single-tenant mode: deployed in the azureserviceoperator-system namespace with a single set of Azure credentials, and manages resources in any namespace in the cluster. That single operator deployment handles webhooks fired when Azure resources are changed.\nASO may also be deployed in a multi-tenant configuration, enabling the use of separate credentials for managing resources in different Kubernetes namespaces.\nRunning the operator in multi-tenant mode requires one deployment to handle webhooks (required because webhook configurations are cluster-level resources) and then a separate deployment for each tenant, each with its own credentials and set of namespaces that it watches for Azure resources.\nTo deploy the operator in multi-tenant mode the release YAML has been split into two parts:\n  Cluster-wide resources:\n  Custom resource definitions for the Azure resources.\n  Cluster roles for managing those resources.\n  The azureserviceoperator-system namespace containing the deployment and service to handle ASO webhooks. The webhook service is a deployment of the ASO image, but configured to run in webhook-only mode. It won\u0026rsquo;t try to reconcile Azure resources with ARM, and so doesn\u0026rsquo;t need any Azure credentials.\n  Webhook configuration referring to that service.\n    Per-tenant resources:\n  A namespace containing the deployment to run the tenant operator, configured for watchers-only mode.\n  The aso-controller-settings secret defining the Azure credentials that should be used, and the set of namespaces that this operator will watch for Azure resources.\n  A cluster role binding enabling the per-tenant operator\u0026rsquo;s service account to manage the Azure resources.\n    Example files #  Examples of the deployment YAML files are available on the release page for ASO v2 releases from v2.0.0-beta.0. The cluster-wide file multitenant-cluster_v2.0.0-beta.0.yaml can be used as-is (the webhook deployment namespace is fixed as azureserviceoperator-system), but the namespaces and cluster role binding in the per-tenant file multitenant-tenant_v2.0.0-beta.0.yaml will need to be customised in each tenant\u0026rsquo;s YAML file from tenant1 to the desired name for that tenant.\nPer-tenant configuration #  Create the aso-controller-settings secret as described in the authentication docs, but create the secret in the tenant namespace and add an extra target namespaces key to it:\nexport TENANT_NAMESPACE=\u0026quot;\u0026lt;tenant namespace\u0026gt;\u0026quot; export AZURE_SUBSCRIPTION_ID=\u0026quot;\u0026lt;subscription id\u0026gt;\u0026quot; export AZURE_TENANT_ID=\u0026quot;\u0026lt;tenant id\u0026gt;\u0026quot; export AZURE_CLIENT_ID=\u0026quot;\u0026lt;client id\u0026gt;\u0026quot; export AZURE_CLIENT_SECRET=\u0026quot;\u0026lt;client secret\u0026gt;\u0026quot; export AZURE_TARGET_NAMESPACES=\u0026quot;\u0026lt;comma-separated namespace names\u0026gt;\u0026quot; kubectl create namespace \u0026quot;$TENANT_NAMESPACE\u0026quot; cat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: v1 kind: Secret metadata: name: aso-controller-settings namespace: $TENANT_NAMESPACE stringData: AZURE_SUBSCRIPTION_ID: \u0026quot;$AZURE_SUBSCRIPTION_ID\u0026quot; AZURE_TENANT_ID: \u0026quot;$AZURE_TENANT_ID\u0026quot; AZURE_CLIENT_ID: \u0026quot;$AZURE_CLIENT_ID\u0026quot; AZURE_CLIENT_SECRET: \u0026quot;$AZURE_CLIENT_SECRET\u0026quot; AZURE_TARGET_NAMESPACES: \u0026quot;$AZURE_TARGET_NAMESPACES\u0026quot; EOF Once the tenant operator is deployed and configured the contents of the tenant namespace will look something like the following:\n$ kubectl get pods,replicasets,deployments,serviceaccounts,secrets -n tenant1-system NAME READY STATUS RESTARTS AGE pod/azureserviceoperator-controller-manager-657948696b-dzfmw 1/1 Running 3 3d NAME DESIRED CURRENT READY AGE replicaset.apps/azureserviceoperator-controller-manager-657948696b 1 1 1 3d NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/azureserviceoperator-controller-manager 1/1 1 1 3d NAME SECRETS AGE serviceaccount/default 1 3d NAME TYPE DATA AGE secret/aso-controller-settings Opaque 5 3d secret/default-token-mqmpb kubernetes.io/service-account-token 3 3d Role handling #  The multi-tenant deployment example files have a single ClusterRole that grants access to the Azure resource types, and then a binding to that ClusterRole for the service account in each tenant-operator namespace. Each ClusterRoleBinding is named for the specific tenant so they don\u0026rsquo;t collide and can be managed separately:\nThis is convenient since there\u0026rsquo;s no need to permit access for Azure resources in each of the target namespaces individually, but it means that the only thing preventing one tenant operator from reading another\u0026rsquo;s resources is the AZURE_TARGET_NAMESPACES setting for each operator.\nFor some usage scenarios that might be too permissive.\nIn those cases the azureserviceoperator-manager-role should be changed from a ClusterRole into Roles in each of the target namespaces (where the Azure resources will be created, rather than where the tenant-operator pods run), and a RoleBinding should be created in that namespace linking the Role to the service account for the tenant operator that will be managing Azure resources in this target namespace:\nUpgrading #  When upgrading to a newer version of ASO the cluster-wide resources (CRDs, cluster roles) and the webhook deployment must be upgraded before upgrading the tenant operators.\nApplying the new version of the multitenant-cluster YAML file will add new and updated CRDs, then update the webhook configuration and cluster roles. After that the new version of the multitenant-tenant YAML files (customised for the specific tenant names) can be applied.\n"},{"id":44,"href":"/azure-service-operator/introduction/diagnosing-problems/","title":"Diagnosing problems","section":"User’s Guide","content":"Diagnosing problems #  Common mistakes #  ASO controller pod in Status CreateContainerConfigError #  $ kubectl get pods -n azureserviceoperator-system NAME READY STATUS RESTARTS AGE azureserviceoperator-controller-manager-69cbccd645-4s5wz 1/2 CreateContainerConfigError 0 7m49s Very likely that you forgot to create the aso-controller-settings secret. This secret must be in the same namespace as the pod.\nYou can confirm this with kubectl describe pod -n azureserviceoperator-system --selector control-plane=controller-manager. Look for the \u0026ldquo;Error: secret \u0026ldquo;aso-controller-settings\u0026rdquo; not found\u0026rdquo; event in the describe output:\nEvents: Type Reason Age From Message ---- ------ ---- ---- ------- ... Warning Failed 36s (x7 over 99s) kubelet Error: secret \u0026quot;aso-controller-settings\u0026quot; not found ... Problems with resources #  Resource with no Ready condition set #  When resources are first created a ready condition should appear quickly, indicating that the resource is being reconciled:\n$ kubectl get resourcegroups.resources.azure.com NAME READY SEVERITY REASON MESSAGE aso-sample-rg False Info Reconciling The resource is in the process of being reconciled by the operator if this isn\u0026rsquo;t happening then check the controller logs.\nGetting ASO controller pod logs #  The last stop when investigating most issues is to look at the ASO pod logs. We expect that most resource issues can be resolved using the resources .status.conditions without resorting to pod logs. Setup issues on the other hand may requiring digging into the ASO controller pod logs.\nAssuming that ASO is installed into the default namespace, you can look at the logs for the controller with the following command: kubectl logs -n azureserviceoperator-system --selector control-plane=controller-manager --container manager\nFor example, here\u0026rsquo;s the log from an ASO controller that was launched with some required CRDs missing:\n E0302 21:54:54.260693 1 deleg.go:144] setup \u0026ldquo;msg\u0026rdquo;=\u0026ldquo;problem running manager\u0026rdquo; \u0026ldquo;error\u0026rdquo;=\u0026ldquo;failed to wait for registry caches to sync: no matches for kind \u0026quot;Registry\u0026quot; in version \u0026quot;containerregistry.azure.com/v1alpha1api20210901storage\u0026quot;\u0026rdquo;\n Log levels #  To configure the log level for ASO, edit the azureserviceoperator-controller-manager deployment and set the --v=2 parameter to a different log level.\nSee levels.go for a list of levels that we log at. Other components used by ASO (such as controller-runtime) may log at different levels, so there may be value in raising the log level above the highest level we use. Be aware that this might produce a lot of logs.\nLogging aggregator #  You may want to consider using a cluster wide logging aggregator such as fluentd (there are many other options). Without one it may be difficult to diagnose past failures.\n"},{"id":45,"href":"/azure-service-operator/reference/documentdb.v1alpha1api20210515/","title":"documentdb.azure.com/v1alpha1api20210515","section":"References","content":"documentdb.azure.com/v1alpha1api20210515  Package v1alpha1api20210515 contains API Schema definitions for the documentdb v1alpha1api20210515 API group\n Resource Types:  AnalyticalStorageConfiguration   (Appears on:DatabaseAccounts_Spec)  Deprecated version of AnalyticalStorageConfiguration. Use v1beta20210515.AnalyticalStorageConfiguration instead\n    Field Description      schemaType  AnalyticalStorageConfigurationSchemaType         AnalyticalStorageConfigurationARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of AnalyticalStorageConfiguration. Use v1beta20210515.AnalyticalStorageConfiguration instead\n    Field Description      schemaType  AnalyticalStorageConfigurationSchemaType         AnalyticalStorageConfigurationSchemaType (string alias)  (Appears on:AnalyticalStorageConfiguration, AnalyticalStorageConfigurationARM)  Deprecated version of AnalyticalStorageConfigurationSchemaType. Use v1beta20210515.AnalyticalStorageConfigurationSchemaType instead\n    Value Description   \u0026#34;FullFidelity\u0026#34;\n  \u0026#34;WellDefined\u0026#34;\n    AnalyticalStorageConfiguration_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of AnalyticalStorageConfiguration_Status. Use v1beta20210515.AnalyticalStorageConfiguration_Status instead\n    Field Description      schemaType  AnalyticalStorageSchemaType_Status         AnalyticalStorageConfiguration_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of AnalyticalStorageConfiguration_Status. Use v1beta20210515.AnalyticalStorageConfiguration_Status instead\n    Field Description      schemaType  AnalyticalStorageSchemaType_Status         AnalyticalStorageSchemaType_Status (string alias)  (Appears on:AnalyticalStorageConfiguration_Status, AnalyticalStorageConfiguration_StatusARM)  Deprecated version of AnalyticalStorageSchemaType_Status. Use v1beta20210515.AnalyticalStorageSchemaType_Status instead\n    Value Description   \u0026#34;FullFidelity\u0026#34;\n  \u0026#34;WellDefined\u0026#34;\n    ApiProperties   (Appears on:DatabaseAccounts_Spec)  Deprecated version of ApiProperties. Use v1beta20210515.ApiProperties instead\n    Field Description      serverVersion  ApiPropertiesServerVersion         ApiPropertiesARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of ApiProperties. Use v1beta20210515.ApiProperties instead\n    Field Description      serverVersion  ApiPropertiesServerVersion         ApiPropertiesServerVersion (string alias)  (Appears on:ApiProperties, ApiPropertiesARM)  Deprecated version of ApiPropertiesServerVersion. Use v1beta20210515.ApiPropertiesServerVersion instead\n    Value Description   \u0026#34;3.2\u0026#34;\n  \u0026#34;3.6\u0026#34;\n  \u0026#34;4.0\u0026#34;\n    ApiPropertiesStatusServerVersion (string alias)  (Appears on:ApiProperties_Status, ApiProperties_StatusARM)  Deprecated version of ApiPropertiesStatusServerVersion. Use v1beta20210515.ApiPropertiesStatusServerVersion instead\n    Value Description   \u0026#34;3.2\u0026#34;\n  \u0026#34;3.6\u0026#34;\n  \u0026#34;4.0\u0026#34;\n    ApiProperties_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of ApiProperties_Status. Use v1beta20210515.ApiProperties_Status instead\n    Field Description      serverVersion  ApiPropertiesStatusServerVersion         ApiProperties_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of ApiProperties_Status. Use v1beta20210515.ApiProperties_Status instead\n    Field Description      serverVersion  ApiPropertiesStatusServerVersion         AutoUpgradePolicyResource   (Appears on:AutoscaleSettingsResource)  Deprecated version of AutoUpgradePolicyResource. Use v1beta20210515.AutoUpgradePolicyResource instead\n    Field Description      throughputPolicy  ThroughputPolicyResource         AutoUpgradePolicyResourceARM   (Appears on:AutoscaleSettingsResourceARM)  Deprecated version of AutoUpgradePolicyResource. Use v1beta20210515.AutoUpgradePolicyResource instead\n    Field Description      throughputPolicy  ThroughputPolicyResourceARM         AutoUpgradePolicyResource_Status   (Appears on:AutoscaleSettingsResource_Status)  Deprecated version of AutoUpgradePolicyResource_Status. Use v1beta20210515.AutoUpgradePolicyResource_Status instead\n    Field Description      throughputPolicy  ThroughputPolicyResource_Status         AutoUpgradePolicyResource_StatusARM   (Appears on:AutoscaleSettingsResource_StatusARM)  Deprecated version of AutoUpgradePolicyResource_Status. Use v1beta20210515.AutoUpgradePolicyResource_Status instead\n    Field Description      throughputPolicy  ThroughputPolicyResource_StatusARM         AutoscaleSettings   (Appears on:CreateUpdateOptions)  Deprecated version of AutoscaleSettings. Use v1beta20210515.AutoscaleSettings instead\n    Field Description      maxThroughput  int        AutoscaleSettingsARM   (Appears on:CreateUpdateOptionsARM)  Deprecated version of AutoscaleSettings. Use v1beta20210515.AutoscaleSettings instead\n    Field Description      maxThroughput  int        AutoscaleSettingsResource   (Appears on:ThroughputSettingsResource)  Deprecated version of AutoscaleSettingsResource. Use v1beta20210515.AutoscaleSettingsResource instead\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResource         maxThroughput  int        AutoscaleSettingsResourceARM   (Appears on:ThroughputSettingsResourceARM)  Deprecated version of AutoscaleSettingsResource. Use v1beta20210515.AutoscaleSettingsResource instead\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResourceARM         maxThroughput  int        AutoscaleSettingsResource_Status   (Appears on:ThroughputSettingsGetProperties_Status_Resource)  Deprecated version of AutoscaleSettingsResource_Status. Use v1beta20210515.AutoscaleSettingsResource_Status instead\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResource_Status         maxThroughput  int        targetMaxThroughput  int        AutoscaleSettingsResource_StatusARM   (Appears on:ThroughputSettingsGetProperties_Status_ResourceARM)  Deprecated version of AutoscaleSettingsResource_Status. Use v1beta20210515.AutoscaleSettingsResource_Status instead\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResource_StatusARM         maxThroughput  int        targetMaxThroughput  int        AutoscaleSettings_Status   (Appears on:OptionsResource_Status)  Deprecated version of AutoscaleSettings_Status. Use v1beta20210515.AutoscaleSettings_Status instead\n    Field Description      maxThroughput  int        AutoscaleSettings_StatusARM   (Appears on:OptionsResource_StatusARM)  Deprecated version of AutoscaleSettings_Status. Use v1beta20210515.AutoscaleSettings_Status instead\n    Field Description      maxThroughput  int        BackupPolicy   (Appears on:DatabaseAccounts_Spec)  Deprecated version of BackupPolicy. Use v1beta20210515.BackupPolicy instead\n    Field Description      continuousModeBackupPolicy  ContinuousModeBackupPolicy         periodicModeBackupPolicy  PeriodicModeBackupPolicy         BackupPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of BackupPolicy. Use v1beta20210515.BackupPolicy instead\n    Field Description      continuousModeBackupPolicy  ContinuousModeBackupPolicyARM         periodicModeBackupPolicy  PeriodicModeBackupPolicyARM         BackupPolicyType_Status (string alias)  (Appears on:BackupPolicy_Status, BackupPolicy_StatusARM)  Deprecated version of BackupPolicyType_Status. Use v1beta20210515.BackupPolicyType_Status instead\n    Value Description   \u0026#34;Continuous\u0026#34;\n  \u0026#34;Periodic\u0026#34;\n    BackupPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of BackupPolicy_Status. Use v1beta20210515.BackupPolicy_Status instead\n    Field Description      type  BackupPolicyType_Status         BackupPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of BackupPolicy_Status. Use v1beta20210515.BackupPolicy_Status instead\n    Field Description      type  BackupPolicyType_Status         Capability   (Appears on:DatabaseAccounts_Spec)  Deprecated version of Capability. Use v1beta20210515.Capability instead\n    Field Description      name  string        CapabilityARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of Capability. Use v1beta20210515.Capability instead\n    Field Description      name  string        Capability_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of Capability_Status. Use v1beta20210515.Capability_Status instead\n    Field Description      name  string        Capability_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of Capability_Status. Use v1beta20210515.Capability_Status instead\n    Field Description      name  string        CompositePath   (Appears on:IndexingPolicy)  Deprecated version of CompositePath. Use v1beta20210515.CompositePath instead\n    Field Description      order  CompositePathOrder         path  string        CompositePathARM   (Appears on:IndexingPolicyARM)  Deprecated version of CompositePath. Use v1beta20210515.CompositePath instead\n    Field Description      order  CompositePathOrder         path  string        CompositePathOrder (string alias)  (Appears on:CompositePath, CompositePathARM)  Deprecated version of CompositePathOrder. Use v1beta20210515.CompositePathOrder instead\n    Value Description   \u0026#34;ascending\u0026#34;\n  \u0026#34;descending\u0026#34;\n    CompositePathStatusOrder (string alias)  (Appears on:CompositePath_Status, CompositePath_StatusARM)  Deprecated version of CompositePathStatusOrder. Use v1beta20210515.CompositePathStatusOrder instead\n    Value Description   \u0026#34;ascending\u0026#34;\n  \u0026#34;descending\u0026#34;\n    CompositePath_Status   (Appears on:IndexingPolicy_Status)  Deprecated version of CompositePath_Status. Use v1beta20210515.CompositePath_Status instead\n    Field Description      order  CompositePathStatusOrder         path  string        CompositePath_StatusARM   (Appears on:IndexingPolicy_StatusARM)  Deprecated version of CompositePath_Status. Use v1beta20210515.CompositePath_Status instead\n    Field Description      order  CompositePathStatusOrder         path  string        ConflictResolutionPolicy   (Appears on:SqlContainerResource)  Deprecated version of ConflictResolutionPolicy. Use v1beta20210515.ConflictResolutionPolicy instead\n    Field Description      conflictResolutionPath  string        conflictResolutionProcedure  string        mode  ConflictResolutionPolicyMode         ConflictResolutionPolicyARM   (Appears on:SqlContainerResourceARM)  Deprecated version of ConflictResolutionPolicy. Use v1beta20210515.ConflictResolutionPolicy instead\n    Field Description      conflictResolutionPath  string        conflictResolutionProcedure  string        mode  ConflictResolutionPolicyMode         ConflictResolutionPolicyMode (string alias)  (Appears on:ConflictResolutionPolicy, ConflictResolutionPolicyARM)  Deprecated version of ConflictResolutionPolicyMode. Use v1beta20210515.ConflictResolutionPolicyMode instead\n    Value Description   \u0026#34;Custom\u0026#34;\n  \u0026#34;LastWriterWins\u0026#34;\n    ConflictResolutionPolicyStatusMode (string alias)  (Appears on:ConflictResolutionPolicy_Status, ConflictResolutionPolicy_StatusARM)  Deprecated version of ConflictResolutionPolicyStatusMode. Use v1beta20210515.ConflictResolutionPolicyStatusMode instead\n    Value Description   \u0026#34;Custom\u0026#34;\n  \u0026#34;LastWriterWins\u0026#34;\n    ConflictResolutionPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)  Deprecated version of ConflictResolutionPolicy_Status. Use v1beta20210515.ConflictResolutionPolicy_Status instead\n    Field Description      conflictResolutionPath  string        conflictResolutionProcedure  string        mode  ConflictResolutionPolicyStatusMode         ConflictResolutionPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)  Deprecated version of ConflictResolutionPolicy_Status. Use v1beta20210515.ConflictResolutionPolicy_Status instead\n    Field Description      conflictResolutionPath  string        conflictResolutionProcedure  string        mode  ConflictResolutionPolicyStatusMode         ConnectorOffer_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)  Deprecated version of ConnectorOffer_Status. Use v1beta20210515.ConnectorOffer_Status instead\n    Value Description   \u0026#34;Small\u0026#34;\n    ConsistencyPolicy   (Appears on:DatabaseAccounts_Spec)  Deprecated version of ConsistencyPolicy. Use v1beta20210515.ConsistencyPolicy instead\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyDefaultConsistencyLevel         maxIntervalInSeconds  int        maxStalenessPrefix  int        ConsistencyPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of ConsistencyPolicy. Use v1beta20210515.ConsistencyPolicy instead\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyDefaultConsistencyLevel         maxIntervalInSeconds  int        maxStalenessPrefix  int        ConsistencyPolicyDefaultConsistencyLevel (string alias)  (Appears on:ConsistencyPolicy, ConsistencyPolicyARM)  Deprecated version of ConsistencyPolicyDefaultConsistencyLevel. Use v1beta20210515.ConsistencyPolicyDefaultConsistencyLevel instead\n    Value Description   \u0026#34;BoundedStaleness\u0026#34;\n  \u0026#34;ConsistentPrefix\u0026#34;\n  \u0026#34;Eventual\u0026#34;\n  \u0026#34;Session\u0026#34;\n  \u0026#34;Strong\u0026#34;\n    ConsistencyPolicyStatusDefaultConsistencyLevel (string alias)  (Appears on:ConsistencyPolicy_Status, ConsistencyPolicy_StatusARM)  Deprecated version of ConsistencyPolicyStatusDefaultConsistencyLevel. Use v1beta20210515.ConsistencyPolicyStatusDefaultConsistencyLevel instead\n    Value Description   \u0026#34;BoundedStaleness\u0026#34;\n  \u0026#34;ConsistentPrefix\u0026#34;\n  \u0026#34;Eventual\u0026#34;\n  \u0026#34;Session\u0026#34;\n  \u0026#34;Strong\u0026#34;\n    ConsistencyPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of ConsistencyPolicy_Status. Use v1beta20210515.ConsistencyPolicy_Status instead\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyStatusDefaultConsistencyLevel         maxIntervalInSeconds  int        maxStalenessPrefix  int        ConsistencyPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of ConsistencyPolicy_Status. Use v1beta20210515.ConsistencyPolicy_Status instead\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyStatusDefaultConsistencyLevel         maxIntervalInSeconds  int        maxStalenessPrefix  int        ContainerPartitionKey   (Appears on:SqlContainerResource)  Deprecated version of ContainerPartitionKey. Use v1beta20210515.ContainerPartitionKey instead\n    Field Description      kind  ContainerPartitionKeyKind         paths  []string        version  int        ContainerPartitionKeyARM   (Appears on:SqlContainerResourceARM)  Deprecated version of ContainerPartitionKey. Use v1beta20210515.ContainerPartitionKey instead\n    Field Description      kind  ContainerPartitionKeyKind         paths  []string        version  int        ContainerPartitionKeyKind (string alias)  (Appears on:ContainerPartitionKey, ContainerPartitionKeyARM)  Deprecated version of ContainerPartitionKeyKind. Use v1beta20210515.ContainerPartitionKeyKind instead\n    Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;MultiHash\u0026#34;\n  \u0026#34;Range\u0026#34;\n    ContainerPartitionKeyStatusKind (string alias)  (Appears on:ContainerPartitionKey_Status, ContainerPartitionKey_StatusARM)  Deprecated version of ContainerPartitionKeyStatusKind. Use v1beta20210515.ContainerPartitionKeyStatusKind instead\n    Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;MultiHash\u0026#34;\n  \u0026#34;Range\u0026#34;\n    ContainerPartitionKey_Status   (Appears on:SqlContainerGetProperties_Status_Resource)  Deprecated version of ContainerPartitionKey_Status. Use v1beta20210515.ContainerPartitionKey_Status instead\n    Field Description      kind  ContainerPartitionKeyStatusKind         paths  []string        systemKey  bool        version  int        ContainerPartitionKey_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)  Deprecated version of ContainerPartitionKey_Status. Use v1beta20210515.ContainerPartitionKey_Status instead\n    Field Description      kind  ContainerPartitionKeyStatusKind         paths  []string        systemKey  bool        version  int        ContinuousModeBackupPolicy   (Appears on:BackupPolicy)  Deprecated version of ContinuousModeBackupPolicy. Use v1beta20210515.ContinuousModeBackupPolicy instead\n    Field Description      type  ContinuousModeBackupPolicyType         ContinuousModeBackupPolicyARM   (Appears on:BackupPolicyARM)  Deprecated version of ContinuousModeBackupPolicy. Use v1beta20210515.ContinuousModeBackupPolicy instead\n    Field Description      type  ContinuousModeBackupPolicyType         ContinuousModeBackupPolicyType (string alias)  (Appears on:ContinuousModeBackupPolicy, ContinuousModeBackupPolicyARM)  Deprecated version of ContinuousModeBackupPolicyType. Use v1beta20210515.ContinuousModeBackupPolicyType instead\n    Value Description   \u0026#34;Continuous\u0026#34;\n    CorsPolicy   (Appears on:DatabaseAccounts_Spec)  Deprecated version of CorsPolicy. Use v1beta20210515.CorsPolicy instead\n    Field Description      allowedHeaders  string        allowedMethods  string        allowedOrigins  string        exposedHeaders  string        maxAgeInSeconds  int        CorsPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of CorsPolicy. Use v1beta20210515.CorsPolicy instead\n    Field Description      allowedHeaders  string        allowedMethods  string        allowedOrigins  string        exposedHeaders  string        maxAgeInSeconds  int        CorsPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of CorsPolicy_Status. Use v1beta20210515.CorsPolicy_Status instead\n    Field Description      allowedHeaders  string        allowedMethods  string        allowedOrigins  string        exposedHeaders  string        maxAgeInSeconds  int        CorsPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of CorsPolicy_Status. Use v1beta20210515.CorsPolicy_Status instead\n    Field Description      allowedHeaders  string        allowedMethods  string        allowedOrigins  string        exposedHeaders  string        maxAgeInSeconds  int        CreateUpdateOptions   (Appears on:DatabaseAccountsMongodbDatabasesCollections_Spec, DatabaseAccountsMongodbDatabases_Spec, DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec, DatabaseAccountsSqlDatabasesContainersTriggers_Spec, DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec, DatabaseAccountsSqlDatabasesContainers_Spec, DatabaseAccountsSqlDatabases_Spec)  Deprecated version of CreateUpdateOptions. Use v1beta20210515.CreateUpdateOptions instead\n    Field Description      autoscaleSettings  AutoscaleSettings         throughput  int        CreateUpdateOptionsARM   (Appears on:MongoDBCollectionCreateUpdatePropertiesARM, MongoDBDatabaseCreateUpdatePropertiesARM, SqlContainerCreateUpdatePropertiesARM, SqlDatabaseCreateUpdatePropertiesARM, SqlStoredProcedureCreateUpdatePropertiesARM, SqlTriggerCreateUpdatePropertiesARM, SqlUserDefinedFunctionCreateUpdatePropertiesARM)  Deprecated version of CreateUpdateOptions. Use v1beta20210515.CreateUpdateOptions instead\n    Field Description      autoscaleSettings  AutoscaleSettingsARM         throughput  int        DatabaseAccount   Deprecated version of DatabaseAccount. Use v1beta20210515.DatabaseAccount instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccounts_Spec          analyticalStorageConfiguration  AnalyticalStorageConfiguration         apiProperties  ApiProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backupPolicy  BackupPolicy         capabilities  []Capability         connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer         consistencyPolicy  ConsistencyPolicy         cors  []CorsPolicy         databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType         defaultIdentity  string        disableKeyBasedMetadataWriteAccess  bool        enableAnalyticalStorage  bool        enableAutomaticFailover  bool        enableCassandraConnector  bool        enableFreeTier  bool        enableMultipleWriteLocations  bool        identity  ManagedServiceIdentity         ipRules  []IpAddressOrRange         isVirtualNetworkFilterEnabled  bool        keyVaultKeyUri  string        kind  DatabaseAccountsSpecKind         location  string        locations  []Location         networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass         networkAclBypassResourceIds  []string        operatorSpec  DatabaseAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess         tags  map[string]string        virtualNetworkRules  []VirtualNetworkRule            status  DatabaseAccountGetResults_Status         DatabaseAccountCreateUpdatePropertiesARM   (Appears on:DatabaseAccounts_SpecARM)  Deprecated version of DatabaseAccountCreateUpdateProperties. Use v1beta20210515.DatabaseAccountCreateUpdateProperties instead\n    Field Description      analyticalStorageConfiguration  AnalyticalStorageConfigurationARM         apiProperties  ApiPropertiesARM         backupPolicy  BackupPolicyARM         capabilities  []CapabilityARM         connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer         consistencyPolicy  ConsistencyPolicyARM         cors  []CorsPolicyARM         databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType         defaultIdentity  string        disableKeyBasedMetadataWriteAccess  bool        enableAnalyticalStorage  bool        enableAutomaticFailover  bool        enableCassandraConnector  bool        enableFreeTier  bool        enableMultipleWriteLocations  bool        ipRules  []IpAddressOrRangeARM         isVirtualNetworkFilterEnabled  bool        keyVaultKeyUri  string        locations  []LocationARM         networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass         networkAclBypassResourceIds  []string        publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess         virtualNetworkRules  []VirtualNetworkRuleARM         DatabaseAccountCreateUpdatePropertiesConnectorOffer (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)  Deprecated version of DatabaseAccountCreateUpdatePropertiesConnectorOffer. Use v1beta20210515.DatabaseAccountCreateUpdatePropertiesConnectorOffer instead\n    Value Description   \u0026#34;Small\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)  Deprecated version of DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType. Use v1beta20210515.DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType instead\n    Value Description   \u0026#34;Standard\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesNetworkAclBypass (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)  Deprecated version of DatabaseAccountCreateUpdatePropertiesNetworkAclBypass. Use v1beta20210515.DatabaseAccountCreateUpdatePropertiesNetworkAclBypass instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)  Deprecated version of DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess. Use v1beta20210515.DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DatabaseAccountGetProperties_StatusARM   (Appears on:DatabaseAccountGetResults_StatusARM)  Deprecated version of DatabaseAccountGetProperties_Status. Use v1beta20210515.DatabaseAccountGetProperties_Status instead\n    Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration_StatusARM         apiProperties  ApiProperties_StatusARM         backupPolicy  BackupPolicy_StatusARM         capabilities  []Capability_StatusARM         connectorOffer  ConnectorOffer_Status         consistencyPolicy  ConsistencyPolicy_StatusARM         cors  []CorsPolicy_StatusARM         databaseAccountOfferType  DatabaseAccountOfferType_Status         defaultIdentity  string        disableKeyBasedMetadataWriteAccess  bool        documentEndpoint  string        enableAnalyticalStorage  bool        enableAutomaticFailover  bool        enableCassandraConnector  bool        enableFreeTier  bool        enableMultipleWriteLocations  bool        failoverPolicies  []FailoverPolicy_StatusARM         ipRules  []IpAddressOrRange_StatusARM         isVirtualNetworkFilterEnabled  bool        keyVaultKeyUri  string        locations  []Location_StatusARM         networkAclBypass  NetworkAclBypass_Status         networkAclBypassResourceIds  []string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  string        publicNetworkAccess  PublicNetworkAccess_Status         readLocations  []Location_StatusARM         virtualNetworkRules  []VirtualNetworkRule_StatusARM         writeLocations  []Location_StatusARM         DatabaseAccountGetResultsStatusKind (string alias)  (Appears on:DatabaseAccountGetResults_Status, DatabaseAccountGetResults_StatusARM)  Deprecated version of DatabaseAccountGetResultsStatusKind. Use v1beta20210515.DatabaseAccountGetResultsStatusKind instead\n    Value Description   \u0026#34;GlobalDocumentDB\u0026#34;\n  \u0026#34;MongoDB\u0026#34;\n  \u0026#34;Parse\u0026#34;\n    DatabaseAccountGetResults_Status   (Appears on:DatabaseAccount)  Deprecated version of DatabaseAccountGetResults_Status. Use v1beta20210515.DatabaseAccountGetResults_Status instead\n    Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration_Status         apiProperties  ApiProperties_Status         backupPolicy  BackupPolicy_Status         capabilities  []Capability_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    connectorOffer  ConnectorOffer_Status         consistencyPolicy  ConsistencyPolicy_Status         cors  []CorsPolicy_Status         databaseAccountOfferType  DatabaseAccountOfferType_Status         defaultIdentity  string        disableKeyBasedMetadataWriteAccess  bool        documentEndpoint  string        enableAnalyticalStorage  bool        enableAutomaticFailover  bool        enableCassandraConnector  bool        enableFreeTier  bool        enableMultipleWriteLocations  bool        failoverPolicies  []FailoverPolicy_Status         id  string        identity  ManagedServiceIdentity_Status         ipRules  []IpAddressOrRange_Status         isVirtualNetworkFilterEnabled  bool        keyVaultKeyUri  string        kind  DatabaseAccountGetResultsStatusKind         location  string        locations  []Location_Status         name  string        networkAclBypass  NetworkAclBypass_Status         networkAclBypassResourceIds  []string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  string        publicNetworkAccess  PublicNetworkAccess_Status         readLocations  []Location_Status         tags  map[string]string        type  string        virtualNetworkRules  []VirtualNetworkRule_Status         writeLocations  []Location_Status         DatabaseAccountGetResults_StatusARM   Deprecated version of DatabaseAccountGetResults_Status. Use v1beta20210515.DatabaseAccountGetResults_Status instead\n    Field Description      id  string        identity  ManagedServiceIdentity_StatusARM         kind  DatabaseAccountGetResultsStatusKind         location  string        name  string        properties  DatabaseAccountGetProperties_StatusARM         tags  map[string]string        type  string        DatabaseAccountOfferType_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)  Deprecated version of DatabaseAccountOfferType_Status. Use v1beta20210515.DatabaseAccountOfferType_Status instead\n    Value Description   \u0026#34;Standard\u0026#34;\n    DatabaseAccountOperatorSecrets   (Appears on:DatabaseAccountOperatorSpec)      Field Description      documentEndpoint  genruntime.SecretDestination     DocumentEndpoint: indicates where the DocumentEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryMasterKey  genruntime.SecretDestination     PrimaryMasterKey: indicates where the PrimaryMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryReadonlyMasterKey  genruntime.SecretDestination     PrimaryReadonlyMasterKey: indicates where the PrimaryReadonlyMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryMasterKey  genruntime.SecretDestination     SecondaryMasterKey: indicates where the SecondaryMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryReadonlyMasterKey  genruntime.SecretDestination     SecondaryReadonlyMasterKey: indicates where the SecondaryReadonlyMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    DatabaseAccountOperatorSpec   (Appears on:DatabaseAccounts_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  DatabaseAccountOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec   (Appears on:MongodbDatabaseCollectionThroughputSetting)      Field Description      location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabaseCollection resource\n    resource  ThroughputSettingsResource         tags  map[string]string        DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_SpecARM   Deprecated version of DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec. Use v1beta20210515.DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec instead\n    Field Description      location  string        name  string        properties  ThroughputSettingsUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsMongodbDatabasesCollections_Spec   (Appears on:MongodbDatabaseCollection)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  MongoDBCollectionResource         tags  map[string]string        DatabaseAccountsMongodbDatabasesCollections_SpecARM   Deprecated version of DatabaseAccountsMongodbDatabasesCollections_Spec. Use v1beta20210515.DatabaseAccountsMongodbDatabasesCollections_Spec instead\n    Field Description      location  string        name  string        properties  MongoDBCollectionCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsMongodbDatabasesThroughputSettings_Spec   (Appears on:MongodbDatabaseThroughputSetting)      Field Description      location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  ThroughputSettingsResource         tags  map[string]string        DatabaseAccountsMongodbDatabasesThroughputSettings_SpecARM   Deprecated version of DatabaseAccountsMongodbDatabasesThroughputSettings_Spec. Use v1beta20210515.DatabaseAccountsMongodbDatabasesThroughputSettings_Spec instead\n    Field Description      location  string        name  string        properties  ThroughputSettingsUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsMongodbDatabases_Spec   (Appears on:MongodbDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  MongoDBDatabaseResource         tags  map[string]string        DatabaseAccountsMongodbDatabases_SpecARM   Deprecated version of DatabaseAccountsMongodbDatabases_Spec. Use v1beta20210515.DatabaseAccountsMongodbDatabases_Spec instead\n    Field Description      location  string        name  string        properties  MongoDBDatabaseCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSpecKind (string alias)  (Appears on:DatabaseAccounts_Spec, DatabaseAccounts_SpecARM)  Deprecated version of DatabaseAccountsSpecKind. Use v1beta20210515.DatabaseAccountsSpecKind instead\n    Value Description   \u0026#34;GlobalDocumentDB\u0026#34;\n  \u0026#34;MongoDB\u0026#34;\n  \u0026#34;Parse\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec   (Appears on:SqlDatabaseContainerStoredProcedure)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlStoredProcedureResource         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersStoredProcedures_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec instead\n    Field Description      location  string        name  string        properties  SqlStoredProcedureCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec   (Appears on:SqlDatabaseContainerThroughputSetting)      Field Description      location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  ThroughputSettingsResource         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersThroughputSettings_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec instead\n    Field Description      location  string        name  string        properties  ThroughputSettingsUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersTriggers_Spec   (Appears on:SqlDatabaseContainerTrigger)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlTriggerResource         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersTriggers_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesContainersTriggers_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesContainersTriggers_Spec instead\n    Field Description      location  string        name  string        properties  SqlTriggerCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec   (Appears on:SqlDatabaseContainerUserDefinedFunction)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlUserDefinedFunctionResource         tags  map[string]string        DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec instead\n    Field Description      location  string        name  string        properties  SqlUserDefinedFunctionCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabasesContainers_Spec   (Appears on:SqlDatabaseContainer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  SqlContainerResource         tags  map[string]string        DatabaseAccountsSqlDatabasesContainers_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesContainers_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesContainers_Spec instead\n    Field Description      location  string        name  string        properties  SqlContainerCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabasesThroughputSettings_Spec   (Appears on:SqlDatabaseThroughputSetting)      Field Description      location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  ThroughputSettingsResource         tags  map[string]string        DatabaseAccountsSqlDatabasesThroughputSettings_SpecARM   Deprecated version of DatabaseAccountsSqlDatabasesThroughputSettings_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabasesThroughputSettings_Spec instead\n    Field Description      location  string        name  string        properties  ThroughputSettingsUpdatePropertiesARM         tags  map[string]string        DatabaseAccountsSqlDatabases_Spec   (Appears on:SqlDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  SqlDatabaseResource         tags  map[string]string        DatabaseAccountsSqlDatabases_SpecARM   Deprecated version of DatabaseAccountsSqlDatabases_Spec. Use v1beta20210515.DatabaseAccountsSqlDatabases_Spec instead\n    Field Description      location  string        name  string        properties  SqlDatabaseCreateUpdatePropertiesARM         tags  map[string]string        DatabaseAccounts_Spec   (Appears on:DatabaseAccount)      Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration         apiProperties  ApiProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backupPolicy  BackupPolicy         capabilities  []Capability         connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer         consistencyPolicy  ConsistencyPolicy         cors  []CorsPolicy         databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType         defaultIdentity  string        disableKeyBasedMetadataWriteAccess  bool        enableAnalyticalStorage  bool        enableAutomaticFailover  bool        enableCassandraConnector  bool        enableFreeTier  bool        enableMultipleWriteLocations  bool        identity  ManagedServiceIdentity         ipRules  []IpAddressOrRange         isVirtualNetworkFilterEnabled  bool        keyVaultKeyUri  string        kind  DatabaseAccountsSpecKind         location  string        locations  []Location         networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass         networkAclBypassResourceIds  []string        operatorSpec  DatabaseAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess         tags  map[string]string        virtualNetworkRules  []VirtualNetworkRule         DatabaseAccounts_SpecARM   Deprecated version of DatabaseAccounts_Spec. Use v1beta20210515.DatabaseAccounts_Spec instead\n    Field Description      identity  ManagedServiceIdentityARM         kind  DatabaseAccountsSpecKind         location  string        name  string        properties  DatabaseAccountCreateUpdatePropertiesARM         tags  map[string]string        ExcludedPath   (Appears on:IndexingPolicy)  Deprecated version of ExcludedPath. Use v1beta20210515.ExcludedPath instead\n    Field Description      path  string        ExcludedPathARM   (Appears on:IndexingPolicyARM)  Deprecated version of ExcludedPath. Use v1beta20210515.ExcludedPath instead\n    Field Description      path  string        ExcludedPath_Status   (Appears on:IndexingPolicy_Status)  Deprecated version of ExcludedPath_Status. Use v1beta20210515.ExcludedPath_Status instead\n    Field Description      path  string        ExcludedPath_StatusARM   (Appears on:IndexingPolicy_StatusARM)  Deprecated version of ExcludedPath_Status. Use v1beta20210515.ExcludedPath_Status instead\n    Field Description      path  string        FailoverPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of FailoverPolicy_Status. Use v1beta20210515.FailoverPolicy_Status instead\n    Field Description      failoverPriority  int        id  string        locationName  string        FailoverPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of FailoverPolicy_Status. Use v1beta20210515.FailoverPolicy_Status instead\n    Field Description      failoverPriority  int        id  string        locationName  string        IncludedPath   (Appears on:IndexingPolicy)  Deprecated version of IncludedPath. Use v1beta20210515.IncludedPath instead\n    Field Description      indexes  []Indexes         path  string        IncludedPathARM   (Appears on:IndexingPolicyARM)  Deprecated version of IncludedPath. Use v1beta20210515.IncludedPath instead\n    Field Description      indexes  []IndexesARM         path  string        IncludedPath_Status   (Appears on:IndexingPolicy_Status)  Deprecated version of IncludedPath_Status. Use v1beta20210515.IncludedPath_Status instead\n    Field Description      indexes  []Indexes_Status         path  string        IncludedPath_StatusARM   (Appears on:IndexingPolicy_StatusARM)  Deprecated version of IncludedPath_Status. Use v1beta20210515.IncludedPath_Status instead\n    Field Description      indexes  []Indexes_StatusARM         path  string        Indexes   (Appears on:IncludedPath)  Deprecated version of Indexes. Use v1beta20210515.Indexes instead\n    Field Description      dataType  IndexesDataType         kind  IndexesKind         precision  int        IndexesARM   (Appears on:IncludedPathARM)  Deprecated version of Indexes. Use v1beta20210515.Indexes instead\n    Field Description      dataType  IndexesDataType         kind  IndexesKind         precision  int        IndexesDataType (string alias)  (Appears on:Indexes, IndexesARM)  Deprecated version of IndexesDataType. Use v1beta20210515.IndexesDataType instead\n    Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Number\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n  \u0026#34;String\u0026#34;\n    IndexesKind (string alias)  (Appears on:Indexes, IndexesARM)  Deprecated version of IndexesKind. Use v1beta20210515.IndexesKind instead\n    Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;Range\u0026#34;\n  \u0026#34;Spatial\u0026#34;\n    IndexesStatusDataType (string alias)  (Appears on:Indexes_Status, Indexes_StatusARM)  Deprecated version of IndexesStatusDataType. Use v1beta20210515.IndexesStatusDataType instead\n    Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Number\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n  \u0026#34;String\u0026#34;\n    IndexesStatusKind (string alias)  (Appears on:Indexes_Status, Indexes_StatusARM)  Deprecated version of IndexesStatusKind. Use v1beta20210515.IndexesStatusKind instead\n    Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;Range\u0026#34;\n  \u0026#34;Spatial\u0026#34;\n    Indexes_Status   (Appears on:IncludedPath_Status)  Deprecated version of Indexes_Status. Use v1beta20210515.Indexes_Status instead\n    Field Description      dataType  IndexesStatusDataType         kind  IndexesStatusKind         precision  int        Indexes_StatusARM   (Appears on:IncludedPath_StatusARM)  Deprecated version of Indexes_Status. Use v1beta20210515.Indexes_Status instead\n    Field Description      dataType  IndexesStatusDataType         kind  IndexesStatusKind         precision  int        IndexingPolicy   (Appears on:SqlContainerResource)  Deprecated version of IndexingPolicy. Use v1beta20210515.IndexingPolicy instead\n    Field Description      automatic  bool        compositeIndexes  []CompositePath         excludedPaths  []ExcludedPath         includedPaths  []IncludedPath         indexingMode  IndexingPolicyIndexingMode         spatialIndexes  []SpatialSpec         IndexingPolicyARM   (Appears on:SqlContainerResourceARM)  Deprecated version of IndexingPolicy. Use v1beta20210515.IndexingPolicy instead\n    Field Description      automatic  bool        compositeIndexes  []CompositePathARM         excludedPaths  []ExcludedPathARM         includedPaths  []IncludedPathARM         indexingMode  IndexingPolicyIndexingMode         spatialIndexes  []SpatialSpecARM         IndexingPolicyIndexingMode (string alias)  (Appears on:IndexingPolicy, IndexingPolicyARM)  Deprecated version of IndexingPolicyIndexingMode. Use v1beta20210515.IndexingPolicyIndexingMode instead\n    Value Description   \u0026#34;consistent\u0026#34;\n  \u0026#34;lazy\u0026#34;\n  \u0026#34;none\u0026#34;\n    IndexingPolicyStatusIndexingMode (string alias)  (Appears on:IndexingPolicy_Status, IndexingPolicy_StatusARM)  Deprecated version of IndexingPolicyStatusIndexingMode. Use v1beta20210515.IndexingPolicyStatusIndexingMode instead\n    Value Description   \u0026#34;consistent\u0026#34;\n  \u0026#34;lazy\u0026#34;\n  \u0026#34;none\u0026#34;\n    IndexingPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)  Deprecated version of IndexingPolicy_Status. Use v1beta20210515.IndexingPolicy_Status instead\n    Field Description      automatic  bool        compositeIndexes  []CompositePath_Status         excludedPaths  []ExcludedPath_Status         includedPaths  []IncludedPath_Status         indexingMode  IndexingPolicyStatusIndexingMode         spatialIndexes  []SpatialSpec_Status         IndexingPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)  Deprecated version of IndexingPolicy_Status. Use v1beta20210515.IndexingPolicy_Status instead\n    Field Description      automatic  bool        compositeIndexes  []CompositePath_StatusARM         excludedPaths  []ExcludedPath_StatusARM         includedPaths  []IncludedPath_StatusARM         indexingMode  IndexingPolicyStatusIndexingMode         spatialIndexes  []SpatialSpec_StatusARM         IpAddressOrRange   (Appears on:DatabaseAccounts_Spec)  Deprecated version of IpAddressOrRange. Use v1beta20210515.IpAddressOrRange instead\n    Field Description      ipAddressOrRange  string        IpAddressOrRangeARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of IpAddressOrRange. Use v1beta20210515.IpAddressOrRange instead\n    Field Description      ipAddressOrRange  string        IpAddressOrRange_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of IpAddressOrRange_Status. Use v1beta20210515.IpAddressOrRange_Status instead\n    Field Description      ipAddressOrRange  string        IpAddressOrRange_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of IpAddressOrRange_Status. Use v1beta20210515.IpAddressOrRange_Status instead\n    Field Description      ipAddressOrRange  string        Location   (Appears on:DatabaseAccounts_Spec)  Deprecated version of Location. Use v1beta20210515.Location instead\n    Field Description      failoverPriority  int        isZoneRedundant  bool        locationName  string        LocationARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of Location. Use v1beta20210515.Location instead\n    Field Description      failoverPriority  int        isZoneRedundant  bool        locationName  string        Location_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of Location_Status. Use v1beta20210515.Location_Status instead\n    Field Description      documentEndpoint  string        failoverPriority  int        id  string        isZoneRedundant  bool        locationName  string        provisioningState  string        Location_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of Location_Status. Use v1beta20210515.Location_Status instead\n    Field Description      documentEndpoint  string        failoverPriority  int        id  string        isZoneRedundant  bool        locationName  string        provisioningState  string        ManagedServiceIdentity   (Appears on:DatabaseAccounts_Spec)  Deprecated version of ManagedServiceIdentity. Use v1beta20210515.ManagedServiceIdentity instead\n    Field Description      type  ManagedServiceIdentityType         ManagedServiceIdentityARM   (Appears on:DatabaseAccounts_SpecARM)  Deprecated version of ManagedServiceIdentity. Use v1beta20210515.ManagedServiceIdentity instead\n    Field Description      type  ManagedServiceIdentityType         ManagedServiceIdentityStatusType (string alias)  (Appears on:ManagedServiceIdentity_Status, ManagedServiceIdentity_StatusARM)  Deprecated version of ManagedServiceIdentityStatusType. Use v1beta20210515.ManagedServiceIdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedServiceIdentityType (string alias)  (Appears on:ManagedServiceIdentity, ManagedServiceIdentityARM)  Deprecated version of ManagedServiceIdentityType. Use v1beta20210515.ManagedServiceIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedServiceIdentity_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of ManagedServiceIdentity_Status. Use v1beta20210515.ManagedServiceIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedServiceIdentityStatusType         userAssignedIdentities  map[string]./api/documentdb/v1alpha1api20210515.ManagedServiceIdentity_Status_UserAssignedIdentities         ManagedServiceIdentity_StatusARM   (Appears on:DatabaseAccountGetResults_StatusARM)  Deprecated version of ManagedServiceIdentity_Status. Use v1beta20210515.ManagedServiceIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedServiceIdentityStatusType         userAssignedIdentities  map[string]./api/documentdb/v1alpha1api20210515.ManagedServiceIdentity_Status_UserAssignedIdentitiesARM         ManagedServiceIdentity_Status_UserAssignedIdentities   (Appears on:ManagedServiceIdentity_Status)  Deprecated version of ManagedServiceIdentity_Status_UserAssignedIdentities. Use v1beta20210515.ManagedServiceIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        ManagedServiceIdentity_Status_UserAssignedIdentitiesARM   (Appears on:ManagedServiceIdentity_StatusARM)  Deprecated version of ManagedServiceIdentity_Status_UserAssignedIdentities. Use v1beta20210515.ManagedServiceIdentity_Status_UserAssignedIdentities instead\n    Field Description      clientId  string        principalId  string        MongoDBCollectionCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabasesCollections_SpecARM)  Deprecated version of MongoDBCollectionCreateUpdateProperties. Use v1beta20210515.MongoDBCollectionCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  MongoDBCollectionResourceARM         MongoDBCollectionGetProperties_StatusARM   (Appears on:MongoDBCollectionGetResults_StatusARM)  Deprecated version of MongoDBCollectionGetProperties_Status. Use v1beta20210515.MongoDBCollectionGetProperties_Status instead\n    Field Description      options  OptionsResource_StatusARM         resource  MongoDBCollectionGetProperties_Status_ResourceARM         MongoDBCollectionGetProperties_Status_Resource   (Appears on:MongoDBCollectionGetResults_Status)  Deprecated version of MongoDBCollectionGetProperties_Status_Resource. Use v1beta20210515.MongoDBCollectionGetProperties_Status_Resource instead\n    Field Description      analyticalStorageTtl  int        _etag  string        id  string        indexes  []MongoIndex_Status         _rid  string        shardKey  map[string]string        _ts  float64        MongoDBCollectionGetProperties_Status_ResourceARM   (Appears on:MongoDBCollectionGetProperties_StatusARM)  Deprecated version of MongoDBCollectionGetProperties_Status_Resource. Use v1beta20210515.MongoDBCollectionGetProperties_Status_Resource instead\n    Field Description      analyticalStorageTtl  int        _etag  string        id  string        indexes  []MongoIndex_StatusARM         _rid  string        shardKey  map[string]string        _ts  float64        MongoDBCollectionGetResults_Status   (Appears on:MongodbDatabaseCollection)  Deprecated version of MongoDBCollectionGetResults_Status. Use v1beta20210515.MongoDBCollectionGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        options  OptionsResource_Status         resource  MongoDBCollectionGetProperties_Status_Resource         tags  map[string]string        type  string        MongoDBCollectionGetResults_StatusARM   Deprecated version of MongoDBCollectionGetResults_Status. Use v1beta20210515.MongoDBCollectionGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  MongoDBCollectionGetProperties_StatusARM         tags  map[string]string        type  string        MongoDBCollectionResource   (Appears on:DatabaseAccountsMongodbDatabasesCollections_Spec)  Deprecated version of MongoDBCollectionResource. Use v1beta20210515.MongoDBCollectionResource instead\n    Field Description      analyticalStorageTtl  int        id  string        indexes  []MongoIndex         shardKey  map[string]string        MongoDBCollectionResourceARM   (Appears on:MongoDBCollectionCreateUpdatePropertiesARM)  Deprecated version of MongoDBCollectionResource. Use v1beta20210515.MongoDBCollectionResource instead\n    Field Description      analyticalStorageTtl  int        id  string        indexes  []MongoIndexARM         shardKey  map[string]string        MongoDBDatabaseCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabases_SpecARM)  Deprecated version of MongoDBDatabaseCreateUpdateProperties. Use v1beta20210515.MongoDBDatabaseCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  MongoDBDatabaseResourceARM         MongoDBDatabaseGetProperties_StatusARM   (Appears on:MongoDBDatabaseGetResults_StatusARM)  Deprecated version of MongoDBDatabaseGetProperties_Status. Use v1beta20210515.MongoDBDatabaseGetProperties_Status instead\n    Field Description      options  OptionsResource_StatusARM         resource  MongoDBDatabaseGetProperties_Status_ResourceARM         MongoDBDatabaseGetProperties_Status_Resource   (Appears on:MongoDBDatabaseGetResults_Status)  Deprecated version of MongoDBDatabaseGetProperties_Status_Resource. Use v1beta20210515.MongoDBDatabaseGetProperties_Status_Resource instead\n    Field Description      _etag  string        id  string        _rid  string        _ts  float64        MongoDBDatabaseGetProperties_Status_ResourceARM   (Appears on:MongoDBDatabaseGetProperties_StatusARM)  Deprecated version of MongoDBDatabaseGetProperties_Status_Resource. Use v1beta20210515.MongoDBDatabaseGetProperties_Status_Resource instead\n    Field Description      _etag  string        id  string        _rid  string        _ts  float64        MongoDBDatabaseGetResults_Status   (Appears on:MongodbDatabase)  Deprecated version of MongoDBDatabaseGetResults_Status. Use v1beta20210515.MongoDBDatabaseGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        options  OptionsResource_Status         resource  MongoDBDatabaseGetProperties_Status_Resource         tags  map[string]string        type  string        MongoDBDatabaseGetResults_StatusARM   Deprecated version of MongoDBDatabaseGetResults_Status. Use v1beta20210515.MongoDBDatabaseGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  MongoDBDatabaseGetProperties_StatusARM         tags  map[string]string        type  string        MongoDBDatabaseResource   (Appears on:DatabaseAccountsMongodbDatabases_Spec)  Deprecated version of MongoDBDatabaseResource. Use v1beta20210515.MongoDBDatabaseResource instead\n    Field Description      id  string        MongoDBDatabaseResourceARM   (Appears on:MongoDBDatabaseCreateUpdatePropertiesARM)  Deprecated version of MongoDBDatabaseResource. Use v1beta20210515.MongoDBDatabaseResource instead\n    Field Description      id  string        MongoIndex   (Appears on:MongoDBCollectionResource)  Deprecated version of MongoIndex. Use v1beta20210515.MongoIndex instead\n    Field Description      key  MongoIndexKeys         options  MongoIndexOptions         MongoIndexARM   (Appears on:MongoDBCollectionResourceARM)  Deprecated version of MongoIndex. Use v1beta20210515.MongoIndex instead\n    Field Description      key  MongoIndexKeysARM         options  MongoIndexOptionsARM         MongoIndexKeys   (Appears on:MongoIndex)  Deprecated version of MongoIndexKeys. Use v1beta20210515.MongoIndexKeys instead\n    Field Description      keys  []string        MongoIndexKeysARM   (Appears on:MongoIndexARM)  Deprecated version of MongoIndexKeys. Use v1beta20210515.MongoIndexKeys instead\n    Field Description      keys  []string        MongoIndexKeys_Status   (Appears on:MongoIndex_Status)  Deprecated version of MongoIndexKeys_Status. Use v1beta20210515.MongoIndexKeys_Status instead\n    Field Description      keys  []string        MongoIndexKeys_StatusARM   (Appears on:MongoIndex_StatusARM)  Deprecated version of MongoIndexKeys_Status. Use v1beta20210515.MongoIndexKeys_Status instead\n    Field Description      keys  []string        MongoIndexOptions   (Appears on:MongoIndex)  Deprecated version of MongoIndexOptions. Use v1beta20210515.MongoIndexOptions instead\n    Field Description      expireAfterSeconds  int        unique  bool        MongoIndexOptionsARM   (Appears on:MongoIndexARM)  Deprecated version of MongoIndexOptions. Use v1beta20210515.MongoIndexOptions instead\n    Field Description      expireAfterSeconds  int        unique  bool        MongoIndexOptions_Status   (Appears on:MongoIndex_Status)  Deprecated version of MongoIndexOptions_Status. Use v1beta20210515.MongoIndexOptions_Status instead\n    Field Description      expireAfterSeconds  int        unique  bool        MongoIndexOptions_StatusARM   (Appears on:MongoIndex_StatusARM)  Deprecated version of MongoIndexOptions_Status. Use v1beta20210515.MongoIndexOptions_Status instead\n    Field Description      expireAfterSeconds  int        unique  bool        MongoIndex_Status   (Appears on:MongoDBCollectionGetProperties_Status_Resource)  Deprecated version of MongoIndex_Status. Use v1beta20210515.MongoIndex_Status instead\n    Field Description      key  MongoIndexKeys_Status         options  MongoIndexOptions_Status         MongoIndex_StatusARM   (Appears on:MongoDBCollectionGetProperties_Status_ResourceARM)  Deprecated version of MongoIndex_Status. Use v1beta20210515.MongoIndex_Status instead\n    Field Description      key  MongoIndexKeys_StatusARM         options  MongoIndexOptions_StatusARM         MongodbDatabase   Deprecated version of MongodbDatabase. Use v1beta20210515.MongodbDatabase instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  MongoDBDatabaseResource         tags  map[string]string           status  MongoDBDatabaseGetResults_Status         MongodbDatabaseCollection   Deprecated version of MongodbDatabaseCollection. Use v1beta20210515.MongodbDatabaseCollection instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesCollections_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  MongoDBCollectionResource         tags  map[string]string           status  MongoDBCollectionGetResults_Status         MongodbDatabaseCollectionThroughputSetting   Deprecated version of MongodbDatabaseCollectionThroughputSetting. Use v1beta20210515.MongodbDatabaseCollectionThroughputSetting instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec          location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabaseCollection resource\n    resource  ThroughputSettingsResource         tags  map[string]string           status  ThroughputSettingsGetResults_Status         MongodbDatabaseThroughputSetting   Deprecated version of MongodbDatabaseThroughputSetting. Use v1beta20210515.MongodbDatabaseThroughputSetting instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesThroughputSettings_Spec          location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  ThroughputSettingsResource         tags  map[string]string           status  ThroughputSettingsGetResults_Status         NetworkAclBypass_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)  Deprecated version of NetworkAclBypass_Status. Use v1beta20210515.NetworkAclBypass_Status instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    OptionsResource_Status   (Appears on:MongoDBCollectionGetResults_Status, MongoDBDatabaseGetResults_Status, SqlContainerGetResults_Status, SqlDatabaseGetResults_Status)  Deprecated version of OptionsResource_Status. Use v1beta20210515.OptionsResource_Status instead\n    Field Description      autoscaleSettings  AutoscaleSettings_Status         throughput  int        OptionsResource_StatusARM   (Appears on:MongoDBCollectionGetProperties_StatusARM, MongoDBDatabaseGetProperties_StatusARM, SqlContainerGetProperties_StatusARM, SqlDatabaseGetProperties_StatusARM)  Deprecated version of OptionsResource_Status. Use v1beta20210515.OptionsResource_Status instead\n    Field Description      autoscaleSettings  AutoscaleSettings_StatusARM         throughput  int        PeriodicModeBackupPolicy   (Appears on:BackupPolicy)  Deprecated version of PeriodicModeBackupPolicy. Use v1beta20210515.PeriodicModeBackupPolicy instead\n    Field Description      periodicModeProperties  PeriodicModeProperties         type  PeriodicModeBackupPolicyType         PeriodicModeBackupPolicyARM   (Appears on:BackupPolicyARM)  Deprecated version of PeriodicModeBackupPolicy. Use v1beta20210515.PeriodicModeBackupPolicy instead\n    Field Description      periodicModeProperties  PeriodicModePropertiesARM         type  PeriodicModeBackupPolicyType         PeriodicModeBackupPolicyType (string alias)  (Appears on:PeriodicModeBackupPolicy, PeriodicModeBackupPolicyARM)  Deprecated version of PeriodicModeBackupPolicyType. Use v1beta20210515.PeriodicModeBackupPolicyType instead\n    Value Description   \u0026#34;Periodic\u0026#34;\n    PeriodicModeProperties   (Appears on:PeriodicModeBackupPolicy)  Deprecated version of PeriodicModeProperties. Use v1beta20210515.PeriodicModeProperties instead\n    Field Description      backupIntervalInMinutes  int        backupRetentionIntervalInHours  int        PeriodicModePropertiesARM   (Appears on:PeriodicModeBackupPolicyARM)  Deprecated version of PeriodicModeProperties. Use v1beta20210515.PeriodicModeProperties instead\n    Field Description      backupIntervalInMinutes  int        backupRetentionIntervalInHours  int        PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210515.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210515.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        PublicNetworkAccess_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)  Deprecated version of PublicNetworkAccess_Status. Use v1beta20210515.PublicNetworkAccess_Status instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SpatialSpec   (Appears on:IndexingPolicy)  Deprecated version of SpatialSpec. Use v1beta20210515.SpatialSpec instead\n    Field Description      path  string        types  []SpatialSpecTypes         SpatialSpecARM   (Appears on:IndexingPolicyARM)  Deprecated version of SpatialSpec. Use v1beta20210515.SpatialSpec instead\n    Field Description      path  string        types  []SpatialSpecTypes         SpatialSpecTypes (string alias)  (Appears on:SpatialSpec, SpatialSpecARM)  Deprecated version of SpatialSpecTypes. Use v1beta20210515.SpatialSpecTypes instead\n    Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n    SpatialSpec_Status   (Appears on:IndexingPolicy_Status)  Deprecated version of SpatialSpec_Status. Use v1beta20210515.SpatialSpec_Status instead\n    Field Description      path  string        types  []SpatialType_Status         SpatialSpec_StatusARM   (Appears on:IndexingPolicy_StatusARM)  Deprecated version of SpatialSpec_Status. Use v1beta20210515.SpatialSpec_Status instead\n    Field Description      path  string        types  []SpatialType_Status         SpatialType_Status (string alias)  (Appears on:SpatialSpec_Status, SpatialSpec_StatusARM)  Deprecated version of SpatialType_Status. Use v1beta20210515.SpatialType_Status instead\n    Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n    SqlContainerCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainers_SpecARM)  Deprecated version of SqlContainerCreateUpdateProperties. Use v1beta20210515.SqlContainerCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  SqlContainerResourceARM         SqlContainerGetProperties_StatusARM   (Appears on:SqlContainerGetResults_StatusARM)  Deprecated version of SqlContainerGetProperties_Status. Use v1beta20210515.SqlContainerGetProperties_Status instead\n    Field Description      options  OptionsResource_StatusARM         resource  SqlContainerGetProperties_Status_ResourceARM         SqlContainerGetProperties_Status_Resource   (Appears on:SqlContainerGetResults_Status)  Deprecated version of SqlContainerGetProperties_Status_Resource. Use v1beta20210515.SqlContainerGetProperties_Status_Resource instead\n    Field Description      analyticalStorageTtl  int        conflictResolutionPolicy  ConflictResolutionPolicy_Status         defaultTtl  int        _etag  string        id  string        indexingPolicy  IndexingPolicy_Status         partitionKey  ContainerPartitionKey_Status         _rid  string        _ts  float64        uniqueKeyPolicy  UniqueKeyPolicy_Status         SqlContainerGetProperties_Status_ResourceARM   (Appears on:SqlContainerGetProperties_StatusARM)  Deprecated version of SqlContainerGetProperties_Status_Resource. Use v1beta20210515.SqlContainerGetProperties_Status_Resource instead\n    Field Description      analyticalStorageTtl  int        conflictResolutionPolicy  ConflictResolutionPolicy_StatusARM         defaultTtl  int        _etag  string        id  string        indexingPolicy  IndexingPolicy_StatusARM         partitionKey  ContainerPartitionKey_StatusARM         _rid  string        _ts  float64        uniqueKeyPolicy  UniqueKeyPolicy_StatusARM         SqlContainerGetResults_Status   (Appears on:SqlDatabaseContainer)  Deprecated version of SqlContainerGetResults_Status. Use v1beta20210515.SqlContainerGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        options  OptionsResource_Status         resource  SqlContainerGetProperties_Status_Resource         tags  map[string]string        type  string        SqlContainerGetResults_StatusARM   Deprecated version of SqlContainerGetResults_Status. Use v1beta20210515.SqlContainerGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  SqlContainerGetProperties_StatusARM         tags  map[string]string        type  string        SqlContainerResource   (Appears on:DatabaseAccountsSqlDatabasesContainers_Spec)  Deprecated version of SqlContainerResource. Use v1beta20210515.SqlContainerResource instead\n    Field Description      analyticalStorageTtl  int        conflictResolutionPolicy  ConflictResolutionPolicy         defaultTtl  int        id  string        indexingPolicy  IndexingPolicy         partitionKey  ContainerPartitionKey         uniqueKeyPolicy  UniqueKeyPolicy         SqlContainerResourceARM   (Appears on:SqlContainerCreateUpdatePropertiesARM)  Deprecated version of SqlContainerResource. Use v1beta20210515.SqlContainerResource instead\n    Field Description      analyticalStorageTtl  int        conflictResolutionPolicy  ConflictResolutionPolicyARM         defaultTtl  int        id  string        indexingPolicy  IndexingPolicyARM         partitionKey  ContainerPartitionKeyARM         uniqueKeyPolicy  UniqueKeyPolicyARM         SqlDatabase   Deprecated version of SqlDatabase. Use v1beta20210515.SqlDatabase instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  SqlDatabaseResource         tags  map[string]string           status  SqlDatabaseGetResults_Status         SqlDatabaseContainer   Deprecated version of SqlDatabaseContainer. Use v1beta20210515.SqlDatabaseContainer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  SqlContainerResource         tags  map[string]string           status  SqlContainerGetResults_Status         SqlDatabaseContainerStoredProcedure   Deprecated version of SqlDatabaseContainerStoredProcedure. Use v1beta20210515.SqlDatabaseContainerStoredProcedure instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlStoredProcedureResource         tags  map[string]string           status  SqlStoredProcedureGetResults_Status         SqlDatabaseContainerThroughputSetting   Deprecated version of SqlDatabaseContainerThroughputSetting. Use v1beta20210515.SqlDatabaseContainerThroughputSetting instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec          location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  ThroughputSettingsResource         tags  map[string]string           status  ThroughputSettingsGetResults_Status         SqlDatabaseContainerTrigger   Deprecated version of SqlDatabaseContainerTrigger. Use v1beta20210515.SqlDatabaseContainerTrigger instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersTriggers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlTriggerResource         tags  map[string]string           status  SqlTriggerGetResults_Status         SqlDatabaseContainerUserDefinedFunction   Deprecated version of SqlDatabaseContainerUserDefinedFunction. Use v1beta20210515.SqlDatabaseContainerUserDefinedFunction instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        options  CreateUpdateOptions         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlUserDefinedFunctionResource         tags  map[string]string           status  SqlUserDefinedFunctionGetResults_Status         SqlDatabaseCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabases_SpecARM)  Deprecated version of SqlDatabaseCreateUpdateProperties. Use v1beta20210515.SqlDatabaseCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  SqlDatabaseResourceARM         SqlDatabaseGetProperties_StatusARM   (Appears on:SqlDatabaseGetResults_StatusARM)  Deprecated version of SqlDatabaseGetProperties_Status. Use v1beta20210515.SqlDatabaseGetProperties_Status instead\n    Field Description      options  OptionsResource_StatusARM         resource  SqlDatabaseGetProperties_Status_ResourceARM         SqlDatabaseGetProperties_Status_Resource   (Appears on:SqlDatabaseGetResults_Status)  Deprecated version of SqlDatabaseGetProperties_Status_Resource. Use v1beta20210515.SqlDatabaseGetProperties_Status_Resource instead\n    Field Description      _colls  string        _etag  string        id  string        _rid  string        _ts  float64        _users  string        SqlDatabaseGetProperties_Status_ResourceARM   (Appears on:SqlDatabaseGetProperties_StatusARM)  Deprecated version of SqlDatabaseGetProperties_Status_Resource. Use v1beta20210515.SqlDatabaseGetProperties_Status_Resource instead\n    Field Description      _colls  string        _etag  string        id  string        _rid  string        _ts  float64        _users  string        SqlDatabaseGetResults_Status   (Appears on:SqlDatabase)  Deprecated version of SqlDatabaseGetResults_Status. Use v1beta20210515.SqlDatabaseGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        options  OptionsResource_Status         resource  SqlDatabaseGetProperties_Status_Resource         tags  map[string]string        type  string        SqlDatabaseGetResults_StatusARM   Deprecated version of SqlDatabaseGetResults_Status. Use v1beta20210515.SqlDatabaseGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  SqlDatabaseGetProperties_StatusARM         tags  map[string]string        type  string        SqlDatabaseResource   (Appears on:DatabaseAccountsSqlDatabases_Spec)  Deprecated version of SqlDatabaseResource. Use v1beta20210515.SqlDatabaseResource instead\n    Field Description      id  string        SqlDatabaseResourceARM   (Appears on:SqlDatabaseCreateUpdatePropertiesARM)  Deprecated version of SqlDatabaseResource. Use v1beta20210515.SqlDatabaseResource instead\n    Field Description      id  string        SqlDatabaseThroughputSetting   Deprecated version of SqlDatabaseThroughputSetting. Use v1beta20210515.SqlDatabaseThroughputSetting instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesThroughputSettings_Spec          location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  ThroughputSettingsResource         tags  map[string]string           status  ThroughputSettingsGetResults_Status         SqlStoredProcedureCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersStoredProcedures_SpecARM)  Deprecated version of SqlStoredProcedureCreateUpdateProperties. Use v1beta20210515.SqlStoredProcedureCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  SqlStoredProcedureResourceARM         SqlStoredProcedureGetProperties_StatusARM   (Appears on:SqlStoredProcedureGetResults_StatusARM)  Deprecated version of SqlStoredProcedureGetProperties_Status. Use v1beta20210515.SqlStoredProcedureGetProperties_Status instead\n    Field Description      resource  SqlStoredProcedureGetProperties_Status_ResourceARM         SqlStoredProcedureGetProperties_Status_Resource   (Appears on:SqlStoredProcedureGetResults_Status)  Deprecated version of SqlStoredProcedureGetProperties_Status_Resource. Use v1beta20210515.SqlStoredProcedureGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        _ts  float64        SqlStoredProcedureGetProperties_Status_ResourceARM   (Appears on:SqlStoredProcedureGetProperties_StatusARM)  Deprecated version of SqlStoredProcedureGetProperties_Status_Resource. Use v1beta20210515.SqlStoredProcedureGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        _ts  float64        SqlStoredProcedureGetResults_Status   (Appears on:SqlDatabaseContainerStoredProcedure)  Deprecated version of SqlStoredProcedureGetResults_Status. Use v1beta20210515.SqlStoredProcedureGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        resource  SqlStoredProcedureGetProperties_Status_Resource         tags  map[string]string        type  string        SqlStoredProcedureGetResults_StatusARM   Deprecated version of SqlStoredProcedureGetResults_Status. Use v1beta20210515.SqlStoredProcedureGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  SqlStoredProcedureGetProperties_StatusARM         tags  map[string]string        type  string        SqlStoredProcedureResource   (Appears on:DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec)  Deprecated version of SqlStoredProcedureResource. Use v1beta20210515.SqlStoredProcedureResource instead\n    Field Description      body  string        id  string        SqlStoredProcedureResourceARM   (Appears on:SqlStoredProcedureCreateUpdatePropertiesARM)  Deprecated version of SqlStoredProcedureResource. Use v1beta20210515.SqlStoredProcedureResource instead\n    Field Description      body  string        id  string        SqlTriggerCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersTriggers_SpecARM)  Deprecated version of SqlTriggerCreateUpdateProperties. Use v1beta20210515.SqlTriggerCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  SqlTriggerResourceARM         SqlTriggerGetPropertiesStatusResourceTriggerOperation (string alias)  (Appears on:SqlTriggerGetProperties_Status_Resource, SqlTriggerGetProperties_Status_ResourceARM)  Deprecated version of SqlTriggerGetPropertiesStatusResourceTriggerOperation. Use v1beta20210515.SqlTriggerGetPropertiesStatusResourceTriggerOperation instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Create\u0026#34;\n  \u0026#34;Delete\u0026#34;\n  \u0026#34;Replace\u0026#34;\n  \u0026#34;Update\u0026#34;\n    SqlTriggerGetPropertiesStatusResourceTriggerType (string alias)  (Appears on:SqlTriggerGetProperties_Status_Resource, SqlTriggerGetProperties_Status_ResourceARM)  Deprecated version of SqlTriggerGetPropertiesStatusResourceTriggerType. Use v1beta20210515.SqlTriggerGetPropertiesStatusResourceTriggerType instead\n    Value Description   \u0026#34;Post\u0026#34;\n  \u0026#34;Pre\u0026#34;\n    SqlTriggerGetProperties_StatusARM   (Appears on:SqlTriggerGetResults_StatusARM)  Deprecated version of SqlTriggerGetProperties_Status. Use v1beta20210515.SqlTriggerGetProperties_Status instead\n    Field Description      resource  SqlTriggerGetProperties_Status_ResourceARM         SqlTriggerGetProperties_Status_Resource   (Appears on:SqlTriggerGetResults_Status)  Deprecated version of SqlTriggerGetProperties_Status_Resource. Use v1beta20210515.SqlTriggerGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        triggerOperation  SqlTriggerGetPropertiesStatusResourceTriggerOperation         triggerType  SqlTriggerGetPropertiesStatusResourceTriggerType         _ts  float64        SqlTriggerGetProperties_Status_ResourceARM   (Appears on:SqlTriggerGetProperties_StatusARM)  Deprecated version of SqlTriggerGetProperties_Status_Resource. Use v1beta20210515.SqlTriggerGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        triggerOperation  SqlTriggerGetPropertiesStatusResourceTriggerOperation         triggerType  SqlTriggerGetPropertiesStatusResourceTriggerType         _ts  float64        SqlTriggerGetResults_Status   (Appears on:SqlDatabaseContainerTrigger)  Deprecated version of SqlTriggerGetResults_Status. Use v1beta20210515.SqlTriggerGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        resource  SqlTriggerGetProperties_Status_Resource         tags  map[string]string        type  string        SqlTriggerGetResults_StatusARM   Deprecated version of SqlTriggerGetResults_Status. Use v1beta20210515.SqlTriggerGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  SqlTriggerGetProperties_StatusARM         tags  map[string]string        type  string        SqlTriggerResource   (Appears on:DatabaseAccountsSqlDatabasesContainersTriggers_Spec)  Deprecated version of SqlTriggerResource. Use v1beta20210515.SqlTriggerResource instead\n    Field Description      body  string        id  string        triggerOperation  SqlTriggerResourceTriggerOperation         triggerType  SqlTriggerResourceTriggerType         SqlTriggerResourceARM   (Appears on:SqlTriggerCreateUpdatePropertiesARM)  Deprecated version of SqlTriggerResource. Use v1beta20210515.SqlTriggerResource instead\n    Field Description      body  string        id  string        triggerOperation  SqlTriggerResourceTriggerOperation         triggerType  SqlTriggerResourceTriggerType         SqlTriggerResourceTriggerOperation (string alias)  (Appears on:SqlTriggerResource, SqlTriggerResourceARM)  Deprecated version of SqlTriggerResourceTriggerOperation. Use v1beta20210515.SqlTriggerResourceTriggerOperation instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Create\u0026#34;\n  \u0026#34;Delete\u0026#34;\n  \u0026#34;Replace\u0026#34;\n  \u0026#34;Update\u0026#34;\n    SqlTriggerResourceTriggerType (string alias)  (Appears on:SqlTriggerResource, SqlTriggerResourceARM)  Deprecated version of SqlTriggerResourceTriggerType. Use v1beta20210515.SqlTriggerResourceTriggerType instead\n    Value Description   \u0026#34;Post\u0026#34;\n  \u0026#34;Pre\u0026#34;\n    SqlUserDefinedFunctionCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_SpecARM)  Deprecated version of SqlUserDefinedFunctionCreateUpdateProperties. Use v1beta20210515.SqlUserDefinedFunctionCreateUpdateProperties instead\n    Field Description      options  CreateUpdateOptionsARM         resource  SqlUserDefinedFunctionResourceARM         SqlUserDefinedFunctionGetProperties_StatusARM   (Appears on:SqlUserDefinedFunctionGetResults_StatusARM)  Deprecated version of SqlUserDefinedFunctionGetProperties_Status. Use v1beta20210515.SqlUserDefinedFunctionGetProperties_Status instead\n    Field Description      resource  SqlUserDefinedFunctionGetProperties_Status_ResourceARM         SqlUserDefinedFunctionGetProperties_Status_Resource   (Appears on:SqlUserDefinedFunctionGetResults_Status)  Deprecated version of SqlUserDefinedFunctionGetProperties_Status_Resource. Use v1beta20210515.SqlUserDefinedFunctionGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        _ts  float64        SqlUserDefinedFunctionGetProperties_Status_ResourceARM   (Appears on:SqlUserDefinedFunctionGetProperties_StatusARM)  Deprecated version of SqlUserDefinedFunctionGetProperties_Status_Resource. Use v1beta20210515.SqlUserDefinedFunctionGetProperties_Status_Resource instead\n    Field Description      body  string        _etag  string        id  string        _rid  string        _ts  float64        SqlUserDefinedFunctionGetResults_Status   (Appears on:SqlDatabaseContainerUserDefinedFunction)  Deprecated version of SqlUserDefinedFunctionGetResults_Status. Use v1beta20210515.SqlUserDefinedFunctionGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        resource  SqlUserDefinedFunctionGetProperties_Status_Resource         tags  map[string]string        type  string        SqlUserDefinedFunctionGetResults_StatusARM   Deprecated version of SqlUserDefinedFunctionGetResults_Status. Use v1beta20210515.SqlUserDefinedFunctionGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  SqlUserDefinedFunctionGetProperties_StatusARM         tags  map[string]string        type  string        SqlUserDefinedFunctionResource   (Appears on:DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec)  Deprecated version of SqlUserDefinedFunctionResource. Use v1beta20210515.SqlUserDefinedFunctionResource instead\n    Field Description      body  string        id  string        SqlUserDefinedFunctionResourceARM   (Appears on:SqlUserDefinedFunctionCreateUpdatePropertiesARM)  Deprecated version of SqlUserDefinedFunctionResource. Use v1beta20210515.SqlUserDefinedFunctionResource instead\n    Field Description      body  string        id  string        ThroughputPolicyResource   (Appears on:AutoUpgradePolicyResource)  Deprecated version of ThroughputPolicyResource. Use v1beta20210515.ThroughputPolicyResource instead\n    Field Description      incrementPercent  int        isEnabled  bool        ThroughputPolicyResourceARM   (Appears on:AutoUpgradePolicyResourceARM)  Deprecated version of ThroughputPolicyResource. Use v1beta20210515.ThroughputPolicyResource instead\n    Field Description      incrementPercent  int        isEnabled  bool        ThroughputPolicyResource_Status   (Appears on:AutoUpgradePolicyResource_Status)  Deprecated version of ThroughputPolicyResource_Status. Use v1beta20210515.ThroughputPolicyResource_Status instead\n    Field Description      incrementPercent  int        isEnabled  bool        ThroughputPolicyResource_StatusARM   (Appears on:AutoUpgradePolicyResource_StatusARM)  Deprecated version of ThroughputPolicyResource_Status. Use v1beta20210515.ThroughputPolicyResource_Status instead\n    Field Description      incrementPercent  int        isEnabled  bool        ThroughputSettingsGetProperties_StatusARM   (Appears on:ThroughputSettingsGetResults_StatusARM)  Deprecated version of ThroughputSettingsGetProperties_Status. Use v1beta20210515.ThroughputSettingsGetProperties_Status instead\n    Field Description      resource  ThroughputSettingsGetProperties_Status_ResourceARM         ThroughputSettingsGetProperties_Status_Resource   (Appears on:ThroughputSettingsGetResults_Status)  Deprecated version of ThroughputSettingsGetProperties_Status_Resource. Use v1beta20210515.ThroughputSettingsGetProperties_Status_Resource instead\n    Field Description      autoscaleSettings  AutoscaleSettingsResource_Status         _etag  string        minimumThroughput  string        offerReplacePending  string        _rid  string        throughput  int        _ts  float64        ThroughputSettingsGetProperties_Status_ResourceARM   (Appears on:ThroughputSettingsGetProperties_StatusARM)  Deprecated version of ThroughputSettingsGetProperties_Status_Resource. Use v1beta20210515.ThroughputSettingsGetProperties_Status_Resource instead\n    Field Description      autoscaleSettings  AutoscaleSettingsResource_StatusARM         _etag  string        minimumThroughput  string        offerReplacePending  string        _rid  string        throughput  int        _ts  float64        ThroughputSettingsGetResults_Status   (Appears on:MongodbDatabaseCollectionThroughputSetting, MongodbDatabaseThroughputSetting, SqlDatabaseContainerThroughputSetting, SqlDatabaseThroughputSetting)  Deprecated version of ThroughputSettingsGetResults_Status. Use v1beta20210515.ThroughputSettingsGetResults_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        resource  ThroughputSettingsGetProperties_Status_Resource         tags  map[string]string        type  string        ThroughputSettingsGetResults_StatusARM   Deprecated version of ThroughputSettingsGetResults_Status. Use v1beta20210515.ThroughputSettingsGetResults_Status instead\n    Field Description      id  string        location  string        name  string        properties  ThroughputSettingsGetProperties_StatusARM         tags  map[string]string        type  string        ThroughputSettingsResource   (Appears on:DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec, DatabaseAccountsMongodbDatabasesThroughputSettings_Spec, DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec, DatabaseAccountsSqlDatabasesThroughputSettings_Spec)  Deprecated version of ThroughputSettingsResource. Use v1beta20210515.ThroughputSettingsResource instead\n    Field Description      autoscaleSettings  AutoscaleSettingsResource         throughput  int        ThroughputSettingsResourceARM   (Appears on:ThroughputSettingsUpdatePropertiesARM)  Deprecated version of ThroughputSettingsResource. Use v1beta20210515.ThroughputSettingsResource instead\n    Field Description      autoscaleSettings  AutoscaleSettingsResourceARM         throughput  int        ThroughputSettingsUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_SpecARM, DatabaseAccountsMongodbDatabasesThroughputSettings_SpecARM, DatabaseAccountsSqlDatabasesContainersThroughputSettings_SpecARM, DatabaseAccountsSqlDatabasesThroughputSettings_SpecARM)  Deprecated version of ThroughputSettingsUpdateProperties. Use v1beta20210515.ThroughputSettingsUpdateProperties instead\n    Field Description      resource  ThroughputSettingsResourceARM         UniqueKey   (Appears on:UniqueKeyPolicy)  Deprecated version of UniqueKey. Use v1beta20210515.UniqueKey instead\n    Field Description      paths  []string        UniqueKeyARM   (Appears on:UniqueKeyPolicyARM)  Deprecated version of UniqueKey. Use v1beta20210515.UniqueKey instead\n    Field Description      paths  []string        UniqueKeyPolicy   (Appears on:SqlContainerResource)  Deprecated version of UniqueKeyPolicy. Use v1beta20210515.UniqueKeyPolicy instead\n    Field Description      uniqueKeys  []UniqueKey         UniqueKeyPolicyARM   (Appears on:SqlContainerResourceARM)  Deprecated version of UniqueKeyPolicy. Use v1beta20210515.UniqueKeyPolicy instead\n    Field Description      uniqueKeys  []UniqueKeyARM         UniqueKeyPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)  Deprecated version of UniqueKeyPolicy_Status. Use v1beta20210515.UniqueKeyPolicy_Status instead\n    Field Description      uniqueKeys  []UniqueKey_Status         UniqueKeyPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)  Deprecated version of UniqueKeyPolicy_Status. Use v1beta20210515.UniqueKeyPolicy_Status instead\n    Field Description      uniqueKeys  []UniqueKey_StatusARM         UniqueKey_Status   (Appears on:UniqueKeyPolicy_Status)  Deprecated version of UniqueKey_Status. Use v1beta20210515.UniqueKey_Status instead\n    Field Description      paths  []string        UniqueKey_StatusARM   (Appears on:UniqueKeyPolicy_StatusARM)  Deprecated version of UniqueKey_Status. Use v1beta20210515.UniqueKey_Status instead\n    Field Description      paths  []string        VirtualNetworkRule   (Appears on:DatabaseAccounts_Spec)  Deprecated version of VirtualNetworkRule. Use v1beta20210515.VirtualNetworkRule instead\n    Field Description      ignoreMissingVNetServiceEndpoint  bool        reference  genruntime.ResourceReference         VirtualNetworkRuleARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Deprecated version of VirtualNetworkRule. Use v1beta20210515.VirtualNetworkRule instead\n    Field Description      id  string        ignoreMissingVNetServiceEndpoint  bool        VirtualNetworkRule_Status   (Appears on:DatabaseAccountGetResults_Status)  Deprecated version of VirtualNetworkRule_Status. Use v1beta20210515.VirtualNetworkRule_Status instead\n    Field Description      id  string        ignoreMissingVNetServiceEndpoint  bool        VirtualNetworkRule_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)  Deprecated version of VirtualNetworkRule_Status. Use v1beta20210515.VirtualNetworkRule_Status instead\n    Field Description      id  string        ignoreMissingVNetServiceEndpoint  bool         "},{"id":46,"href":"/azure-service-operator/reference/documentdb.v1beta20210515/","title":"documentdb.azure.com/v1beta20210515","section":"References","content":"documentdb.azure.com/v1beta20210515  Package v1beta20210515 contains API Schema definitions for the documentdb v1beta20210515 API group\n Resource Types:  AnalyticalStorageConfiguration   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AnalyticalStorageConfiguration\n    Field Description      schemaType  AnalyticalStorageConfigurationSchemaType         AnalyticalStorageConfigurationARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AnalyticalStorageConfiguration\n    Field Description      schemaType  AnalyticalStorageConfigurationSchemaType         AnalyticalStorageConfigurationSchemaType (string alias)  (Appears on:AnalyticalStorageConfiguration, AnalyticalStorageConfigurationARM)      Value Description   \u0026#34;FullFidelity\u0026#34;\n  \u0026#34;WellDefined\u0026#34;\n    AnalyticalStorageConfiguration_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      schemaType  AnalyticalStorageSchemaType_Status         AnalyticalStorageConfiguration_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      schemaType  AnalyticalStorageSchemaType_Status         AnalyticalStorageSchemaType_Status (string alias)  (Appears on:AnalyticalStorageConfiguration_Status, AnalyticalStorageConfiguration_StatusARM)      Value Description   \u0026#34;FullFidelity\u0026#34;\n  \u0026#34;WellDefined\u0026#34;\n    ApiProperties   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ApiProperties\n    Field Description      serverVersion  ApiPropertiesServerVersion     ServerVersion: Describes the ServerVersion of an a MongoDB account.\n    ApiPropertiesARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ApiProperties\n    Field Description      serverVersion  ApiPropertiesServerVersion     ServerVersion: Describes the ServerVersion of an a MongoDB account.\n    ApiPropertiesServerVersion (string alias)  (Appears on:ApiProperties, ApiPropertiesARM)      Value Description   \u0026#34;3.2\u0026#34;\n  \u0026#34;3.6\u0026#34;\n  \u0026#34;4.0\u0026#34;\n    ApiPropertiesStatusServerVersion (string alias)  (Appears on:ApiProperties_Status, ApiProperties_StatusARM)      Value Description   \u0026#34;3.2\u0026#34;\n  \u0026#34;3.6\u0026#34;\n  \u0026#34;4.0\u0026#34;\n    ApiProperties_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      serverVersion  ApiPropertiesStatusServerVersion     ServerVersion: Describes the ServerVersion of an a MongoDB account.\n    ApiProperties_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      serverVersion  ApiPropertiesStatusServerVersion     ServerVersion: Describes the ServerVersion of an a MongoDB account.\n    AutoUpgradePolicyResource   (Appears on:AutoscaleSettingsResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoUpgradePolicyResource\n    Field Description      throughputPolicy  ThroughputPolicyResource     ThroughputPolicy: Cosmos DB resource throughput policy\n    AutoUpgradePolicyResourceARM   (Appears on:AutoscaleSettingsResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoUpgradePolicyResource\n    Field Description      throughputPolicy  ThroughputPolicyResourceARM     ThroughputPolicy: Cosmos DB resource throughput policy\n    AutoUpgradePolicyResource_Status   (Appears on:AutoscaleSettingsResource_Status)      Field Description      throughputPolicy  ThroughputPolicyResource_Status     ThroughputPolicy: Represents throughput policy which service must adhere to for auto-upgrade\n    AutoUpgradePolicyResource_StatusARM   (Appears on:AutoscaleSettingsResource_StatusARM)      Field Description      throughputPolicy  ThroughputPolicyResource_StatusARM     ThroughputPolicy: Represents throughput policy which service must adhere to for auto-upgrade\n    AutoscaleSettings   (Appears on:CreateUpdateOptions)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoscaleSettings\n    Field Description      maxThroughput  int    MaxThroughput: Represents maximum throughput, the resource can scale up to.\n    AutoscaleSettingsARM   (Appears on:CreateUpdateOptionsARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoscaleSettings\n    Field Description      maxThroughput  int    MaxThroughput: Represents maximum throughput, the resource can scale up to.\n    AutoscaleSettingsResource   (Appears on:ThroughputSettingsResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoscaleSettingsResource\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResource     AutoUpgradePolicy: Cosmos DB resource auto-upgrade policy\n    maxThroughput  int    MaxThroughput: Represents maximum throughput container can scale up to.\n    AutoscaleSettingsResourceARM   (Appears on:ThroughputSettingsResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoscaleSettingsResource\n    Field Description      autoUpgradePolicy  AutoUpgradePolicyResourceARM     AutoUpgradePolicy: Cosmos DB resource auto-upgrade policy\n    maxThroughput  int    MaxThroughput: Represents maximum throughput container can scale up to.\n    AutoscaleSettingsResource_Status   (Appears on:ThroughputSettingsGetProperties_Status_Resource)      Field Description      autoUpgradePolicy  AutoUpgradePolicyResource_Status     AutoUpgradePolicy: Cosmos DB resource auto-upgrade policy\n    maxThroughput  int    MaxThroughput: Represents maximum throughput container can scale up to.\n    targetMaxThroughput  int    TargetMaxThroughput: Represents target maximum throughput container can scale up to once offer is no longer in pending state.\n    AutoscaleSettingsResource_StatusARM   (Appears on:ThroughputSettingsGetProperties_Status_ResourceARM)      Field Description      autoUpgradePolicy  AutoUpgradePolicyResource_StatusARM     AutoUpgradePolicy: Cosmos DB resource auto-upgrade policy\n    maxThroughput  int    MaxThroughput: Represents maximum throughput container can scale up to.\n    targetMaxThroughput  int    TargetMaxThroughput: Represents target maximum throughput container can scale up to once offer is no longer in pending state.\n    AutoscaleSettings_Status   (Appears on:OptionsResource_Status)      Field Description      maxThroughput  int    MaxThroughput: Represents maximum throughput, the resource can scale up to.\n    AutoscaleSettings_StatusARM   (Appears on:OptionsResource_StatusARM)      Field Description      maxThroughput  int    MaxThroughput: Represents maximum throughput, the resource can scale up to.\n    BackupPolicy   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/BackupPolicy\n    Field Description      continuousModeBackupPolicy  ContinuousModeBackupPolicy     Continuous: Mutually exclusive with all other properties\n    periodicModeBackupPolicy  PeriodicModeBackupPolicy     Periodic: Mutually exclusive with all other properties\n    BackupPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/BackupPolicy\n    Field Description      continuousModeBackupPolicy  ContinuousModeBackupPolicyARM     Continuous: Mutually exclusive with all other properties\n    periodicModeBackupPolicy  PeriodicModeBackupPolicyARM     Periodic: Mutually exclusive with all other properties\n    BackupPolicyType_Status (string alias)  (Appears on:BackupPolicy_Status, BackupPolicy_StatusARM)      Value Description   \u0026#34;Continuous\u0026#34;\n  \u0026#34;Periodic\u0026#34;\n    BackupPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      type  BackupPolicyType_Status         BackupPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      type  BackupPolicyType_Status         Capability   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Capability\n    Field Description      name  string    Name: Name of the Cosmos DB capability. For example, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;EnableCassandra\u0026rdquo;. Current values also include \u0026ldquo;EnableTable\u0026rdquo; and \u0026ldquo;EnableGremlin\u0026rdquo;.\n    CapabilityARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Capability\n    Field Description      name  string    Name: Name of the Cosmos DB capability. For example, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;EnableCassandra\u0026rdquo;. Current values also include \u0026ldquo;EnableTable\u0026rdquo; and \u0026ldquo;EnableGremlin\u0026rdquo;.\n    Capability_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      name  string    Name: Name of the Cosmos DB capability. For example, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;EnableCassandra\u0026rdquo;. Current values also include \u0026ldquo;EnableTable\u0026rdquo; and \u0026ldquo;EnableGremlin\u0026rdquo;.\n    Capability_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      name  string    Name: Name of the Cosmos DB capability. For example, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;EnableCassandra\u0026rdquo;. Current values also include \u0026ldquo;EnableTable\u0026rdquo; and \u0026ldquo;EnableGremlin\u0026rdquo;.\n    CompositePath   (Appears on:IndexingPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CompositePath\n    Field Description      order  CompositePathOrder     Order: Sort order for composite paths.\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    CompositePathARM   (Appears on:IndexingPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CompositePath\n    Field Description      order  CompositePathOrder     Order: Sort order for composite paths.\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    CompositePathOrder (string alias)  (Appears on:CompositePath, CompositePathARM)      Value Description   \u0026#34;ascending\u0026#34;\n  \u0026#34;descending\u0026#34;\n    CompositePathStatusOrder (string alias)  (Appears on:CompositePath_Status, CompositePath_StatusARM)      Value Description   \u0026#34;ascending\u0026#34;\n  \u0026#34;descending\u0026#34;\n    CompositePath_Status   (Appears on:IndexingPolicy_Status)      Field Description      order  CompositePathStatusOrder     Order: Sort order for composite paths.\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    CompositePath_StatusARM   (Appears on:IndexingPolicy_StatusARM)      Field Description      order  CompositePathStatusOrder     Order: Sort order for composite paths.\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    ConflictResolutionPolicy   (Appears on:SqlContainerResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ConflictResolutionPolicy\n    Field Description      conflictResolutionPath  string    ConflictResolutionPath: The conflict resolution path in the case of LastWriterWins mode.\n    conflictResolutionProcedure  string    ConflictResolutionProcedure: The procedure to resolve conflicts in the case of custom mode.\n    mode  ConflictResolutionPolicyMode     Mode: Indicates the conflict resolution mode.\n    ConflictResolutionPolicyARM   (Appears on:SqlContainerResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ConflictResolutionPolicy\n    Field Description      conflictResolutionPath  string    ConflictResolutionPath: The conflict resolution path in the case of LastWriterWins mode.\n    conflictResolutionProcedure  string    ConflictResolutionProcedure: The procedure to resolve conflicts in the case of custom mode.\n    mode  ConflictResolutionPolicyMode     Mode: Indicates the conflict resolution mode.\n    ConflictResolutionPolicyMode (string alias)  (Appears on:ConflictResolutionPolicy, ConflictResolutionPolicyARM)      Value Description   \u0026#34;Custom\u0026#34;\n  \u0026#34;LastWriterWins\u0026#34;\n    ConflictResolutionPolicyStatusMode (string alias)  (Appears on:ConflictResolutionPolicy_Status, ConflictResolutionPolicy_StatusARM)      Value Description   \u0026#34;Custom\u0026#34;\n  \u0026#34;LastWriterWins\u0026#34;\n    ConflictResolutionPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)      Field Description      conflictResolutionPath  string    ConflictResolutionPath: The conflict resolution path in the case of LastWriterWins mode.\n    conflictResolutionProcedure  string    ConflictResolutionProcedure: The procedure to resolve conflicts in the case of custom mode.\n    mode  ConflictResolutionPolicyStatusMode     Mode: Indicates the conflict resolution mode.\n    ConflictResolutionPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)      Field Description      conflictResolutionPath  string    ConflictResolutionPath: The conflict resolution path in the case of LastWriterWins mode.\n    conflictResolutionProcedure  string    ConflictResolutionProcedure: The procedure to resolve conflicts in the case of custom mode.\n    mode  ConflictResolutionPolicyStatusMode     Mode: Indicates the conflict resolution mode.\n    ConnectorOffer_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)      Value Description   \u0026#34;Small\u0026#34;\n    ConsistencyPolicy   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ConsistencyPolicy\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyDefaultConsistencyLevel     DefaultConsistencyLevel: The default consistency level and configuration settings of the Cosmos DB account.\n    maxIntervalInSeconds  int    MaxIntervalInSeconds: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    maxStalenessPrefix  int    MaxStalenessPrefix: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    ConsistencyPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ConsistencyPolicy\n    Field Description      defaultConsistencyLevel  ConsistencyPolicyDefaultConsistencyLevel     DefaultConsistencyLevel: The default consistency level and configuration settings of the Cosmos DB account.\n    maxIntervalInSeconds  int    MaxIntervalInSeconds: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    maxStalenessPrefix  int    MaxStalenessPrefix: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    ConsistencyPolicyDefaultConsistencyLevel (string alias)  (Appears on:ConsistencyPolicy, ConsistencyPolicyARM)      Value Description   \u0026#34;BoundedStaleness\u0026#34;\n  \u0026#34;ConsistentPrefix\u0026#34;\n  \u0026#34;Eventual\u0026#34;\n  \u0026#34;Session\u0026#34;\n  \u0026#34;Strong\u0026#34;\n    ConsistencyPolicyStatusDefaultConsistencyLevel (string alias)  (Appears on:ConsistencyPolicy_Status, ConsistencyPolicy_StatusARM)      Value Description   \u0026#34;BoundedStaleness\u0026#34;\n  \u0026#34;ConsistentPrefix\u0026#34;\n  \u0026#34;Eventual\u0026#34;\n  \u0026#34;Session\u0026#34;\n  \u0026#34;Strong\u0026#34;\n    ConsistencyPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      defaultConsistencyLevel  ConsistencyPolicyStatusDefaultConsistencyLevel     DefaultConsistencyLevel: The default consistency level and configuration settings of the Cosmos DB account.\n    maxIntervalInSeconds  int    MaxIntervalInSeconds: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    maxStalenessPrefix  int    MaxStalenessPrefix: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    ConsistencyPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      defaultConsistencyLevel  ConsistencyPolicyStatusDefaultConsistencyLevel     DefaultConsistencyLevel: The default consistency level and configuration settings of the Cosmos DB account.\n    maxIntervalInSeconds  int    MaxIntervalInSeconds: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    maxStalenessPrefix  int    MaxStalenessPrefix: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to \u0026lsquo;BoundedStaleness\u0026rsquo;.\n    ContainerPartitionKey   (Appears on:SqlContainerResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ContainerPartitionKey\n    Field Description      kind  ContainerPartitionKeyKind     Kind: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create.\n    paths  []string    Paths: List of paths using which data within the container can be partitioned\n    version  int    Version: Indicates the version of the partition key definition\n    ContainerPartitionKeyARM   (Appears on:SqlContainerResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ContainerPartitionKey\n    Field Description      kind  ContainerPartitionKeyKind     Kind: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create.\n    paths  []string    Paths: List of paths using which data within the container can be partitioned\n    version  int    Version: Indicates the version of the partition key definition\n    ContainerPartitionKeyKind (string alias)  (Appears on:ContainerPartitionKey, ContainerPartitionKeyARM)      Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;MultiHash\u0026#34;\n  \u0026#34;Range\u0026#34;\n    ContainerPartitionKeyStatusKind (string alias)  (Appears on:ContainerPartitionKey_Status, ContainerPartitionKey_StatusARM)      Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;MultiHash\u0026#34;\n  \u0026#34;Range\u0026#34;\n    ContainerPartitionKey_Status   (Appears on:SqlContainerGetProperties_Status_Resource)      Field Description      kind  ContainerPartitionKeyStatusKind     Kind: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create\n    paths  []string    Paths: List of paths using which data within the container can be partitioned\n    systemKey  bool    SystemKey: Indicates if the container is using a system generated partition key\n    version  int    Version: Indicates the version of the partition key definition\n    ContainerPartitionKey_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)      Field Description      kind  ContainerPartitionKeyStatusKind     Kind: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create\n    paths  []string    Paths: List of paths using which data within the container can be partitioned\n    systemKey  bool    SystemKey: Indicates if the container is using a system generated partition key\n    version  int    Version: Indicates the version of the partition key definition\n    ContinuousModeBackupPolicy   (Appears on:BackupPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ContinuousModeBackupPolicy\n    Field Description      type  ContinuousModeBackupPolicyType         ContinuousModeBackupPolicyARM   (Appears on:BackupPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ContinuousModeBackupPolicy\n    Field Description      type  ContinuousModeBackupPolicyType         ContinuousModeBackupPolicyType (string alias)  (Appears on:ContinuousModeBackupPolicy, ContinuousModeBackupPolicyARM)      Value Description   \u0026#34;Continuous\u0026#34;\n    CorsPolicy   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CorsPolicy\n    Field Description      allowedHeaders  string    AllowedHeaders: The request headers that the origin domain may specify on the CORS request.\n    allowedMethods  string    AllowedMethods: The methods (HTTP request verbs) that the origin domain may use for a CORS request.\n    allowedOrigins  string    AllowedOrigins: The origin domains that are permitted to make a request against the service via CORS.\n    exposedHeaders  string    ExposedHeaders: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.\n    maxAgeInSeconds  int    MaxAgeInSeconds: The maximum amount time that a browser should cache the preflight OPTIONS request.\n    CorsPolicyARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CorsPolicy\n    Field Description      allowedHeaders  string    AllowedHeaders: The request headers that the origin domain may specify on the CORS request.\n    allowedMethods  string    AllowedMethods: The methods (HTTP request verbs) that the origin domain may use for a CORS request.\n    allowedOrigins  string    AllowedOrigins: The origin domains that are permitted to make a request against the service via CORS.\n    exposedHeaders  string    ExposedHeaders: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.\n    maxAgeInSeconds  int    MaxAgeInSeconds: The maximum amount time that a browser should cache the preflight OPTIONS request.\n    CorsPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      allowedHeaders  string    AllowedHeaders: The request headers that the origin domain may specify on the CORS request.\n    allowedMethods  string    AllowedMethods: The methods (HTTP request verbs) that the origin domain may use for a CORS request.\n    allowedOrigins  string    AllowedOrigins: The origin domains that are permitted to make a request against the service via CORS.\n    exposedHeaders  string    ExposedHeaders: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.\n    maxAgeInSeconds  int    MaxAgeInSeconds: The maximum amount time that a browser should cache the preflight OPTIONS request.\n    CorsPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      allowedHeaders  string    AllowedHeaders: The request headers that the origin domain may specify on the CORS request.\n    allowedMethods  string    AllowedMethods: The methods (HTTP request verbs) that the origin domain may use for a CORS request.\n    allowedOrigins  string    AllowedOrigins: The origin domains that are permitted to make a request against the service via CORS.\n    exposedHeaders  string    ExposedHeaders: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.\n    maxAgeInSeconds  int    MaxAgeInSeconds: The maximum amount time that a browser should cache the preflight OPTIONS request.\n    CreateUpdateOptions   (Appears on:DatabaseAccountsMongodbDatabasesCollections_Spec, DatabaseAccountsMongodbDatabases_Spec, DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec, DatabaseAccountsSqlDatabasesContainersTriggers_Spec, DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec, DatabaseAccountsSqlDatabasesContainers_Spec, DatabaseAccountsSqlDatabases_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CreateUpdateOptions\n    Field Description      autoscaleSettings  AutoscaleSettings         throughput  int    Throughput: Request Units per second. For example, \u0026ldquo;throughput\u0026rdquo;: 10000.\n    CreateUpdateOptionsARM   (Appears on:MongoDBCollectionCreateUpdatePropertiesARM, MongoDBDatabaseCreateUpdatePropertiesARM, SqlContainerCreateUpdatePropertiesARM, SqlDatabaseCreateUpdatePropertiesARM, SqlStoredProcedureCreateUpdatePropertiesARM, SqlTriggerCreateUpdatePropertiesARM, SqlUserDefinedFunctionCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CreateUpdateOptions\n    Field Description      autoscaleSettings  AutoscaleSettingsARM         throughput  int    Throughput: Request Units per second. For example, \u0026ldquo;throughput\u0026rdquo;: 10000.\n    DatabaseAccount   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccounts_Spec          analyticalStorageConfiguration  AnalyticalStorageConfiguration     AnalyticalStorageConfiguration: Analytical storage specific properties.\n    apiProperties  ApiProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backupPolicy  BackupPolicy     BackupPolicy: The object representing the policy for taking backups on an account.\n    capabilities  []Capability     Capabilities: List of Cosmos DB capabilities for the account\n    connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer     ConnectorOffer: The cassandra connector offer type for the Cosmos DB database C* account.\n    consistencyPolicy  ConsistencyPolicy     ConsistencyPolicy: The consistency policy for the Cosmos DB database account.\n    cors  []CorsPolicy     Cors: The CORS policy for the Cosmos DB database account.\n    databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType     DatabaseAccountOfferType: The offer type for the database\n    defaultIdentity  string    DefaultIdentity: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \u0026ldquo;FirstPartyIdentity\u0026rdquo;, \u0026ldquo;SystemAssignedIdentity\u0026rdquo; and more.\n    disableKeyBasedMetadataWriteAccess  bool    DisableKeyBasedMetadataWriteAccess: Disable write operations on metadata resources (databases, containers, throughput) via account keys\n    enableAnalyticalStorage  bool    EnableAnalyticalStorage: Flag to indicate whether to enable storage analytics.\n    enableAutomaticFailover  bool    EnableAutomaticFailover: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.\n    enableCassandraConnector  bool    EnableCassandraConnector: Enables the cassandra connector on the Cosmos DB C* account\n    enableFreeTier  bool    EnableFreeTier: Flag to indicate whether Free Tier is enabled.\n    enableMultipleWriteLocations  bool    EnableMultipleWriteLocations: Enables the account to write in multiple locations\n    identity  ManagedServiceIdentity     Identity: Identity for the resource.\n    ipRules  []IpAddressOrRange     IpRules: Array of IpAddressOrRange objects.\n    isVirtualNetworkFilterEnabled  bool    IsVirtualNetworkFilterEnabled: Flag to indicate whether to enable/disable Virtual Network ACL rules.\n    keyVaultKeyUri  string    KeyVaultKeyUri: The URI of the key vault\n    kind  DatabaseAccountsSpecKind     Kind: Indicates the type of database account. This can only be set at database account creation.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    locations  []Location     Locations: An array that contains the georeplication locations enabled for the Cosmos DB account.\n    networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass     NetworkAclBypass: Indicates what services are allowed to bypass firewall checks.\n    networkAclBypassResourceIds  []string    NetworkAclBypassResourceIds: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.\n    operatorSpec  DatabaseAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether requests from Public Network are allowed.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    virtualNetworkRules  []VirtualNetworkRule     VirtualNetworkRules: List of Virtual Network ACL rules configured for the Cosmos DB account.\n       status  DatabaseAccountGetResults_Status         DatabaseAccountCreateUpdatePropertiesARM   (Appears on:DatabaseAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/DatabaseAccountCreateUpdateProperties\n    Field Description      analyticalStorageConfiguration  AnalyticalStorageConfigurationARM     AnalyticalStorageConfiguration: Analytical storage specific properties.\n    apiProperties  ApiPropertiesARM         backupPolicy  BackupPolicyARM     BackupPolicy: The object representing the policy for taking backups on an account.\n    capabilities  []CapabilityARM     Capabilities: List of Cosmos DB capabilities for the account\n    connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer     ConnectorOffer: The cassandra connector offer type for the Cosmos DB database C* account.\n    consistencyPolicy  ConsistencyPolicyARM     ConsistencyPolicy: The consistency policy for the Cosmos DB database account.\n    cors  []CorsPolicyARM     Cors: The CORS policy for the Cosmos DB database account.\n    databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType     DatabaseAccountOfferType: The offer type for the database\n    defaultIdentity  string    DefaultIdentity: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \u0026ldquo;FirstPartyIdentity\u0026rdquo;, \u0026ldquo;SystemAssignedIdentity\u0026rdquo; and more.\n    disableKeyBasedMetadataWriteAccess  bool    DisableKeyBasedMetadataWriteAccess: Disable write operations on metadata resources (databases, containers, throughput) via account keys\n    enableAnalyticalStorage  bool    EnableAnalyticalStorage: Flag to indicate whether to enable storage analytics.\n    enableAutomaticFailover  bool    EnableAutomaticFailover: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.\n    enableCassandraConnector  bool    EnableCassandraConnector: Enables the cassandra connector on the Cosmos DB C* account\n    enableFreeTier  bool    EnableFreeTier: Flag to indicate whether Free Tier is enabled.\n    enableMultipleWriteLocations  bool    EnableMultipleWriteLocations: Enables the account to write in multiple locations\n    ipRules  []IpAddressOrRangeARM     IpRules: Array of IpAddressOrRange objects.\n    isVirtualNetworkFilterEnabled  bool    IsVirtualNetworkFilterEnabled: Flag to indicate whether to enable/disable Virtual Network ACL rules.\n    keyVaultKeyUri  string    KeyVaultKeyUri: The URI of the key vault\n    locations  []LocationARM     Locations: An array that contains the georeplication locations enabled for the Cosmos DB account.\n    networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass     NetworkAclBypass: Indicates what services are allowed to bypass firewall checks.\n    networkAclBypassResourceIds  []string    NetworkAclBypassResourceIds: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.\n    publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether requests from Public Network are allowed.\n    virtualNetworkRules  []VirtualNetworkRuleARM     VirtualNetworkRules: List of Virtual Network ACL rules configured for the Cosmos DB account.\n    DatabaseAccountCreateUpdatePropertiesConnectorOffer (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)      Value Description   \u0026#34;Small\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)      Value Description   \u0026#34;Standard\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesNetworkAclBypass (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess (string alias)  (Appears on:DatabaseAccountCreateUpdatePropertiesARM, DatabaseAccounts_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DatabaseAccountGetProperties_StatusARM   (Appears on:DatabaseAccountGetResults_StatusARM)      Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration_StatusARM     AnalyticalStorageConfiguration: Analytical storage specific properties.\n    apiProperties  ApiProperties_StatusARM     ApiProperties: API specific properties.\n    backupPolicy  BackupPolicy_StatusARM     BackupPolicy: The object representing the policy for taking backups on an account.\n    capabilities  []Capability_StatusARM     Capabilities: List of Cosmos DB capabilities for the account\n    connectorOffer  ConnectorOffer_Status     ConnectorOffer: The cassandra connector offer type for the Cosmos DB database C* account.\n    consistencyPolicy  ConsistencyPolicy_StatusARM     ConsistencyPolicy: The consistency policy for the Cosmos DB database account.\n    cors  []CorsPolicy_StatusARM     Cors: The CORS policy for the Cosmos DB database account.\n    databaseAccountOfferType  DatabaseAccountOfferType_Status     DatabaseAccountOfferType: The offer type for the Cosmos DB database account. Default value: Standard.\n    defaultIdentity  string    DefaultIdentity: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \u0026ldquo;FirstPartyIdentity\u0026rdquo;, \u0026ldquo;SystemAssignedIdentity\u0026rdquo; and more.\n    disableKeyBasedMetadataWriteAccess  bool    DisableKeyBasedMetadataWriteAccess: Disable write operations on metadata resources (databases, containers, throughput) via account keys\n    documentEndpoint  string    DocumentEndpoint: The connection endpoint for the Cosmos DB database account.\n    enableAnalyticalStorage  bool    EnableAnalyticalStorage: Flag to indicate whether to enable storage analytics.\n    enableAutomaticFailover  bool    EnableAutomaticFailover: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.\n    enableCassandraConnector  bool    EnableCassandraConnector: Enables the cassandra connector on the Cosmos DB C* account\n    enableFreeTier  bool    EnableFreeTier: Flag to indicate whether Free Tier is enabled.\n    enableMultipleWriteLocations  bool    EnableMultipleWriteLocations: Enables the account to write in multiple locations\n    failoverPolicies  []FailoverPolicy_StatusARM     FailoverPolicies: An array that contains the regions ordered by their failover priorities.\n    ipRules  []IpAddressOrRange_StatusARM     IpRules: List of IpRules.\n    isVirtualNetworkFilterEnabled  bool    IsVirtualNetworkFilterEnabled: Flag to indicate whether to enable/disable Virtual Network ACL rules.\n    keyVaultKeyUri  string    KeyVaultKeyUri: The URI of the key vault\n    locations  []Location_StatusARM     Locations: An array that contains all of the locations enabled for the Cosmos DB account.\n    networkAclBypass  NetworkAclBypass_Status     NetworkAclBypass: Indicates what services are allowed to bypass firewall checks.\n    networkAclBypassResourceIds  []string    NetworkAclBypassResourceIds: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of Private Endpoint Connections configured for the Cosmos DB account.\n    provisioningState  string        publicNetworkAccess  PublicNetworkAccess_Status     PublicNetworkAccess: Whether requests from Public Network are allowed\n    readLocations  []Location_StatusARM     ReadLocations: An array that contains of the read locations enabled for the Cosmos DB account.\n    virtualNetworkRules  []VirtualNetworkRule_StatusARM     VirtualNetworkRules: List of Virtual Network ACL rules configured for the Cosmos DB account.\n    writeLocations  []Location_StatusARM     WriteLocations: An array that contains the write location for the Cosmos DB account.\n    DatabaseAccountGetResultsStatusKind (string alias)  (Appears on:DatabaseAccountGetResults_Status, DatabaseAccountGetResults_StatusARM)      Value Description   \u0026#34;GlobalDocumentDB\u0026#34;\n  \u0026#34;MongoDB\u0026#34;\n  \u0026#34;Parse\u0026#34;\n    DatabaseAccountGetResults_Status   (Appears on:DatabaseAccount)      Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration_Status     AnalyticalStorageConfiguration: Analytical storage specific properties.\n    apiProperties  ApiProperties_Status     ApiProperties: API specific properties.\n    backupPolicy  BackupPolicy_Status     BackupPolicy: The object representing the policy for taking backups on an account.\n    capabilities  []Capability_Status     Capabilities: List of Cosmos DB capabilities for the account\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    connectorOffer  ConnectorOffer_Status     ConnectorOffer: The cassandra connector offer type for the Cosmos DB database C* account.\n    consistencyPolicy  ConsistencyPolicy_Status     ConsistencyPolicy: The consistency policy for the Cosmos DB database account.\n    cors  []CorsPolicy_Status     Cors: The CORS policy for the Cosmos DB database account.\n    databaseAccountOfferType  DatabaseAccountOfferType_Status     DatabaseAccountOfferType: The offer type for the Cosmos DB database account. Default value: Standard.\n    defaultIdentity  string    DefaultIdentity: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \u0026ldquo;FirstPartyIdentity\u0026rdquo;, \u0026ldquo;SystemAssignedIdentity\u0026rdquo; and more.\n    disableKeyBasedMetadataWriteAccess  bool    DisableKeyBasedMetadataWriteAccess: Disable write operations on metadata resources (databases, containers, throughput) via account keys\n    documentEndpoint  string    DocumentEndpoint: The connection endpoint for the Cosmos DB database account.\n    enableAnalyticalStorage  bool    EnableAnalyticalStorage: Flag to indicate whether to enable storage analytics.\n    enableAutomaticFailover  bool    EnableAutomaticFailover: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.\n    enableCassandraConnector  bool    EnableCassandraConnector: Enables the cassandra connector on the Cosmos DB C* account\n    enableFreeTier  bool    EnableFreeTier: Flag to indicate whether Free Tier is enabled.\n    enableMultipleWriteLocations  bool    EnableMultipleWriteLocations: Enables the account to write in multiple locations\n    failoverPolicies  []FailoverPolicy_Status     FailoverPolicies: An array that contains the regions ordered by their failover priorities.\n    id  string    Id: The unique resource identifier of the ARM resource.\n    identity  ManagedServiceIdentity_Status         ipRules  []IpAddressOrRange_Status     IpRules: List of IpRules.\n    isVirtualNetworkFilterEnabled  bool    IsVirtualNetworkFilterEnabled: Flag to indicate whether to enable/disable Virtual Network ACL rules.\n    keyVaultKeyUri  string    KeyVaultKeyUri: The URI of the key vault\n    kind  DatabaseAccountGetResultsStatusKind     Kind: Indicates the type of database account. This can only be set at database account creation.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    locations  []Location_Status     Locations: An array that contains all of the locations enabled for the Cosmos DB account.\n    name  string    Name: The name of the ARM resource.\n    networkAclBypass  NetworkAclBypass_Status     NetworkAclBypass: Indicates what services are allowed to bypass firewall checks.\n    networkAclBypassResourceIds  []string    NetworkAclBypassResourceIds: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of Private Endpoint Connections configured for the Cosmos DB account.\n    provisioningState  string        publicNetworkAccess  PublicNetworkAccess_Status     PublicNetworkAccess: Whether requests from Public Network are allowed\n    readLocations  []Location_Status     ReadLocations: An array that contains of the read locations enabled for the Cosmos DB account.\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    virtualNetworkRules  []VirtualNetworkRule_Status     VirtualNetworkRules: List of Virtual Network ACL rules configured for the Cosmos DB account.\n    writeLocations  []Location_Status     WriteLocations: An array that contains the write location for the Cosmos DB account.\n    DatabaseAccountGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    identity  ManagedServiceIdentity_StatusARM         kind  DatabaseAccountGetResultsStatusKind     Kind: Indicates the type of database account. This can only be set at database account creation.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  DatabaseAccountGetProperties_StatusARM         tags  map[string]string        type  string    Type: The type of Azure resource.\n    DatabaseAccountOfferType_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)      Value Description   \u0026#34;Standard\u0026#34;\n    DatabaseAccountOperatorSecrets   (Appears on:DatabaseAccountOperatorSpec)      Field Description      documentEndpoint  genruntime.SecretDestination     DocumentEndpoint: indicates where the DocumentEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryMasterKey  genruntime.SecretDestination     PrimaryMasterKey: indicates where the PrimaryMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    primaryReadonlyMasterKey  genruntime.SecretDestination     PrimaryReadonlyMasterKey: indicates where the PrimaryReadonlyMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryMasterKey  genruntime.SecretDestination     SecondaryMasterKey: indicates where the SecondaryMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    secondaryReadonlyMasterKey  genruntime.SecretDestination     SecondaryReadonlyMasterKey: indicates where the SecondaryReadonlyMasterKey secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    DatabaseAccountOperatorSpec   (Appears on:DatabaseAccounts_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  DatabaseAccountOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    DatabaseAccountsMongodbDatabasesCollectionsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsMongodbDatabasesCollectionsThroughputSettingsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec   (Appears on:MongodbDatabaseCollectionThroughputSetting)      Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabaseCollection resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Name of the resource\n    properties  ThroughputSettingsUpdatePropertiesARM     Properties: Properties to update Azure Cosmos DB resource throughput.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabasesCollections_Spec   (Appears on:MongodbDatabaseCollection)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  MongoDBCollectionResource     Resource: Cosmos DB MongoDB collection resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabasesCollections_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB collection name.\n    properties  MongoDBCollectionCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB MongoDB collection.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabasesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsMongodbDatabasesThroughputSettingsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsMongodbDatabasesThroughputSettings_Spec   (Appears on:MongodbDatabaseThroughputSetting)      Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabasesThroughputSettings_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Name of the resource\n    properties  ThroughputSettingsUpdatePropertiesARM     Properties: Properties to update Azure Cosmos DB resource throughput.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabases_Spec   (Appears on:MongodbDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  MongoDBDatabaseResource     Resource: Cosmos DB MongoDB database resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsMongodbDatabases_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB database name.\n    properties  MongoDBDatabaseCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB MongoDB database.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSpecKind (string alias)  (Appears on:DatabaseAccounts_Spec, DatabaseAccounts_SpecARM)      Value Description   \u0026#34;GlobalDocumentDB\u0026#34;\n  \u0026#34;MongoDB\u0026#34;\n  \u0026#34;Parse\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersStoredProceduresSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec   (Appears on:SqlDatabaseContainerStoredProcedure)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlStoredProcedureResource     Resource: Cosmos DB SQL storedProcedure resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersStoredProcedures_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB storedProcedure name.\n    properties  SqlStoredProcedureCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB storedProcedure.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersThroughputSettingsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec   (Appears on:SqlDatabaseContainerThroughputSetting)      Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersThroughputSettings_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Name of the resource\n    properties  ThroughputSettingsUpdatePropertiesARM     Properties: Properties to update Azure Cosmos DB resource throughput.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersTriggersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersTriggers_Spec   (Appears on:SqlDatabaseContainerTrigger)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlTriggerResource     Resource: Cosmos DB SQL trigger resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersTriggers_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB trigger name.\n    properties  SqlTriggerCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB trigger.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersUserDefinedFunctionsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec   (Appears on:SqlDatabaseContainerUserDefinedFunction)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlUserDefinedFunctionResource     Resource: Cosmos DB SQL userDefinedFunction resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB userDefinedFunction name.\n    properties  SqlUserDefinedFunctionCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB userDefinedFunction.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainers_Spec   (Appears on:SqlDatabaseContainer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  SqlContainerResource     Resource: Cosmos DB SQL container resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesContainers_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB container name.\n    properties  SqlContainerCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB container.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesThroughputSettingsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-05-15\u0026#34;\n    DatabaseAccountsSqlDatabasesThroughputSettings_Spec   (Appears on:SqlDatabaseThroughputSetting)      Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabasesThroughputSettings_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Name of the resource\n    properties  ThroughputSettingsUpdatePropertiesARM     Properties: Properties to update Azure Cosmos DB resource throughput.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabases_Spec   (Appears on:SqlDatabase)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  SqlDatabaseResource     Resource: Cosmos DB SQL database resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccountsSqlDatabases_SpecARM       Field Description      location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB database name.\n    properties  SqlDatabaseCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB SQL database.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    DatabaseAccounts_Spec   (Appears on:DatabaseAccount)      Field Description      analyticalStorageConfiguration  AnalyticalStorageConfiguration     AnalyticalStorageConfiguration: Analytical storage specific properties.\n    apiProperties  ApiProperties         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backupPolicy  BackupPolicy     BackupPolicy: The object representing the policy for taking backups on an account.\n    capabilities  []Capability     Capabilities: List of Cosmos DB capabilities for the account\n    connectorOffer  DatabaseAccountCreateUpdatePropertiesConnectorOffer     ConnectorOffer: The cassandra connector offer type for the Cosmos DB database C* account.\n    consistencyPolicy  ConsistencyPolicy     ConsistencyPolicy: The consistency policy for the Cosmos DB database account.\n    cors  []CorsPolicy     Cors: The CORS policy for the Cosmos DB database account.\n    databaseAccountOfferType  DatabaseAccountCreateUpdatePropertiesDatabaseAccountOfferType     DatabaseAccountOfferType: The offer type for the database\n    defaultIdentity  string    DefaultIdentity: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \u0026ldquo;FirstPartyIdentity\u0026rdquo;, \u0026ldquo;SystemAssignedIdentity\u0026rdquo; and more.\n    disableKeyBasedMetadataWriteAccess  bool    DisableKeyBasedMetadataWriteAccess: Disable write operations on metadata resources (databases, containers, throughput) via account keys\n    enableAnalyticalStorage  bool    EnableAnalyticalStorage: Flag to indicate whether to enable storage analytics.\n    enableAutomaticFailover  bool    EnableAutomaticFailover: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.\n    enableCassandraConnector  bool    EnableCassandraConnector: Enables the cassandra connector on the Cosmos DB C* account\n    enableFreeTier  bool    EnableFreeTier: Flag to indicate whether Free Tier is enabled.\n    enableMultipleWriteLocations  bool    EnableMultipleWriteLocations: Enables the account to write in multiple locations\n    identity  ManagedServiceIdentity     Identity: Identity for the resource.\n    ipRules  []IpAddressOrRange     IpRules: Array of IpAddressOrRange objects.\n    isVirtualNetworkFilterEnabled  bool    IsVirtualNetworkFilterEnabled: Flag to indicate whether to enable/disable Virtual Network ACL rules.\n    keyVaultKeyUri  string    KeyVaultKeyUri: The URI of the key vault\n    kind  DatabaseAccountsSpecKind     Kind: Indicates the type of database account. This can only be set at database account creation.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    locations  []Location     Locations: An array that contains the georeplication locations enabled for the Cosmos DB account.\n    networkAclBypass  DatabaseAccountCreateUpdatePropertiesNetworkAclBypass     NetworkAclBypass: Indicates what services are allowed to bypass firewall checks.\n    networkAclBypassResourceIds  []string    NetworkAclBypassResourceIds: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.\n    operatorSpec  DatabaseAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DatabaseAccountCreateUpdatePropertiesPublicNetworkAccess     PublicNetworkAccess: Whether requests from Public Network are allowed.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    virtualNetworkRules  []VirtualNetworkRule     VirtualNetworkRules: List of Virtual Network ACL rules configured for the Cosmos DB account.\n    DatabaseAccounts_SpecARM       Field Description      identity  ManagedServiceIdentityARM     Identity: Identity for the resource.\n    kind  DatabaseAccountsSpecKind     Kind: Indicates the type of database account. This can only be set at database account creation.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: Cosmos DB database account name.\n    properties  DatabaseAccountCreateUpdatePropertiesARM     Properties: Properties to create and update Azure Cosmos DB database accounts.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n    ExcludedPath   (Appears on:IndexingPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ExcludedPath\n    Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    ExcludedPathARM   (Appears on:IndexingPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ExcludedPath\n    Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    ExcludedPath_Status   (Appears on:IndexingPolicy_Status)      Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    ExcludedPath_StatusARM   (Appears on:IndexingPolicy_StatusARM)      Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    FailoverPolicy_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    id  string    Id: The unique identifier of the region in which the database account replicates to. Example: \u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.\n    locationName  string    LocationName: The name of the region in which the database account exists.\n    FailoverPolicy_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    id  string    Id: The unique identifier of the region in which the database account replicates to. Example: \u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.\n    locationName  string    LocationName: The name of the region in which the database account exists.\n    IncludedPath   (Appears on:IndexingPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IncludedPath\n    Field Description      indexes  []Indexes     Indexes: List of indexes for this path\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    IncludedPathARM   (Appears on:IndexingPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IncludedPath\n    Field Description      indexes  []IndexesARM     Indexes: List of indexes for this path\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    IncludedPath_Status   (Appears on:IndexingPolicy_Status)      Field Description      indexes  []Indexes_Status     Indexes: List of indexes for this path\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    IncludedPath_StatusARM   (Appears on:IndexingPolicy_StatusARM)      Field Description      indexes  []Indexes_StatusARM     Indexes: List of indexes for this path\n    path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    Indexes   (Appears on:IncludedPath)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Indexes\n    Field Description      dataType  IndexesDataType     DataType: The datatype for which the indexing behavior is applied to.\n    kind  IndexesKind     Kind: Indicates the type of index.\n    precision  int    Precision: The precision of the index. -1 is maximum precision.\n    IndexesARM   (Appears on:IncludedPathARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Indexes\n    Field Description      dataType  IndexesDataType     DataType: The datatype for which the indexing behavior is applied to.\n    kind  IndexesKind     Kind: Indicates the type of index.\n    precision  int    Precision: The precision of the index. -1 is maximum precision.\n    IndexesDataType (string alias)  (Appears on:Indexes, IndexesARM)      Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Number\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n  \u0026#34;String\u0026#34;\n    IndexesKind (string alias)  (Appears on:Indexes, IndexesARM)      Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;Range\u0026#34;\n  \u0026#34;Spatial\u0026#34;\n    IndexesStatusDataType (string alias)  (Appears on:Indexes_Status, Indexes_StatusARM)      Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Number\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n  \u0026#34;String\u0026#34;\n    IndexesStatusKind (string alias)  (Appears on:Indexes_Status, Indexes_StatusARM)      Value Description   \u0026#34;Hash\u0026#34;\n  \u0026#34;Range\u0026#34;\n  \u0026#34;Spatial\u0026#34;\n    Indexes_Status   (Appears on:IncludedPath_Status)      Field Description      dataType  IndexesStatusDataType     DataType: The datatype for which the indexing behavior is applied to.\n    kind  IndexesStatusKind     Kind: Indicates the type of index.\n    precision  int    Precision: The precision of the index. -1 is maximum precision.\n    Indexes_StatusARM   (Appears on:IncludedPath_StatusARM)      Field Description      dataType  IndexesStatusDataType     DataType: The datatype for which the indexing behavior is applied to.\n    kind  IndexesStatusKind     Kind: Indicates the type of index.\n    precision  int    Precision: The precision of the index. -1 is maximum precision.\n    IndexingPolicy   (Appears on:SqlContainerResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IndexingPolicy\n    Field Description      automatic  bool    Automatic: Indicates if the indexing policy is automatic\n    compositeIndexes  []CompositePath     CompositeIndexes: List of composite path list\n    excludedPaths  []ExcludedPath     ExcludedPaths: List of paths to exclude from indexing\n    includedPaths  []IncludedPath     IncludedPaths: List of paths to include in the indexing\n    indexingMode  IndexingPolicyIndexingMode     IndexingMode: Indicates the indexing mode.\n    spatialIndexes  []SpatialSpec     SpatialIndexes: List of spatial specifics\n    IndexingPolicyARM   (Appears on:SqlContainerResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IndexingPolicy\n    Field Description      automatic  bool    Automatic: Indicates if the indexing policy is automatic\n    compositeIndexes  []CompositePathARM     CompositeIndexes: List of composite path list\n    excludedPaths  []ExcludedPathARM     ExcludedPaths: List of paths to exclude from indexing\n    includedPaths  []IncludedPathARM     IncludedPaths: List of paths to include in the indexing\n    indexingMode  IndexingPolicyIndexingMode     IndexingMode: Indicates the indexing mode.\n    spatialIndexes  []SpatialSpecARM     SpatialIndexes: List of spatial specifics\n    IndexingPolicyIndexingMode (string alias)  (Appears on:IndexingPolicy, IndexingPolicyARM)      Value Description   \u0026#34;consistent\u0026#34;\n  \u0026#34;lazy\u0026#34;\n  \u0026#34;none\u0026#34;\n    IndexingPolicyStatusIndexingMode (string alias)  (Appears on:IndexingPolicy_Status, IndexingPolicy_StatusARM)      Value Description   \u0026#34;consistent\u0026#34;\n  \u0026#34;lazy\u0026#34;\n  \u0026#34;none\u0026#34;\n    IndexingPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)      Field Description      automatic  bool    Automatic: Indicates if the indexing policy is automatic\n    compositeIndexes  []CompositePath_Status     CompositeIndexes: List of composite path list\n    excludedPaths  []ExcludedPath_Status     ExcludedPaths: List of paths to exclude from indexing\n    includedPaths  []IncludedPath_Status     IncludedPaths: List of paths to include in the indexing\n    indexingMode  IndexingPolicyStatusIndexingMode     IndexingMode: Indicates the indexing mode.\n    spatialIndexes  []SpatialSpec_Status     SpatialIndexes: List of spatial specifics\n    IndexingPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)      Field Description      automatic  bool    Automatic: Indicates if the indexing policy is automatic\n    compositeIndexes  []CompositePath_StatusARM     CompositeIndexes: List of composite path list\n    excludedPaths  []ExcludedPath_StatusARM     ExcludedPaths: List of paths to exclude from indexing\n    includedPaths  []IncludedPath_StatusARM     IncludedPaths: List of paths to include in the indexing\n    indexingMode  IndexingPolicyStatusIndexingMode     IndexingMode: Indicates the indexing mode.\n    spatialIndexes  []SpatialSpec_StatusARM     SpatialIndexes: List of spatial specifics\n    IpAddressOrRange   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IpAddressOrRange\n    Field Description      ipAddressOrRange  string    IpAddressOrRange: A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.\n    IpAddressOrRangeARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/IpAddressOrRange\n    Field Description      ipAddressOrRange  string    IpAddressOrRange: A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.\n    IpAddressOrRange_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      ipAddressOrRange  string    IpAddressOrRange: A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.\n    IpAddressOrRange_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      ipAddressOrRange  string    IpAddressOrRange: A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.\n    Location   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Location\n    Field Description      failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    isZoneRedundant  bool    IsZoneRedundant: Flag to indicate whether or not this region is an AvailabilityZone region\n    locationName  string    LocationName: The name of the region.\n    LocationARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/Location\n    Field Description      failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    isZoneRedundant  bool    IsZoneRedundant: Flag to indicate whether or not this region is an AvailabilityZone region\n    locationName  string    LocationName: The name of the region.\n    Location_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      documentEndpoint  string    DocumentEndpoint: The connection endpoint for the specific region. Example: https://\u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.documents.azure.com:443/\n    failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    id  string    Id: The unique identifier of the region within the database account. Example: \u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.\n    isZoneRedundant  bool    IsZoneRedundant: Flag to indicate whether or not this region is an AvailabilityZone region\n    locationName  string    LocationName: The name of the region.\n    provisioningState  string        Location_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      documentEndpoint  string    DocumentEndpoint: The connection endpoint for the specific region. Example: https://\u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.documents.azure.com:443/\n    failoverPriority  int    FailoverPriority: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.\n    id  string    Id: The unique identifier of the region within the database account. Example: \u0026amp;lt;accountName\u0026amp;gt;-\u0026amp;lt;locationName\u0026amp;gt;.\n    isZoneRedundant  bool    IsZoneRedundant: Flag to indicate whether or not this region is an AvailabilityZone region\n    locationName  string    LocationName: The name of the region.\n    provisioningState  string        ManagedServiceIdentity   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ManagedServiceIdentity\n    Field Description      type  ManagedServiceIdentityType     Type: The type of identity used for the resource. The type \u0026lsquo;SystemAssigned,UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the service.\n    ManagedServiceIdentityARM   (Appears on:DatabaseAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ManagedServiceIdentity\n    Field Description      type  ManagedServiceIdentityType     Type: The type of identity used for the resource. The type \u0026lsquo;SystemAssigned,UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the service.\n    ManagedServiceIdentityStatusType (string alias)  (Appears on:ManagedServiceIdentity_Status, ManagedServiceIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedServiceIdentityType (string alias)  (Appears on:ManagedServiceIdentity, ManagedServiceIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedServiceIdentity_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      principalId  string    PrincipalId: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.\n    type  ManagedServiceIdentityStatusType     Type: The type of identity used for the resource. The type \u0026lsquo;SystemAssigned,UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the service.\n    userAssignedIdentities  map[string]./api/documentdb/v1beta20210515.ManagedServiceIdentity_Status_UserAssignedIdentities     UserAssignedIdentities: The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedServiceIdentity_StatusARM   (Appears on:DatabaseAccountGetResults_StatusARM)      Field Description      principalId  string    PrincipalId: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.\n    tenantId  string    TenantId: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.\n    type  ManagedServiceIdentityStatusType     Type: The type of identity used for the resource. The type \u0026lsquo;SystemAssigned,UserAssigned\u0026rsquo; includes both an implicitly created identity and a set of user assigned identities. The type \u0026lsquo;None\u0026rsquo; will remove any identities from the service.\n    userAssignedIdentities  map[string]./api/documentdb/v1beta20210515.ManagedServiceIdentity_Status_UserAssignedIdentitiesARM     UserAssignedIdentities: The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: \u0026lsquo;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\u0026rsquo;.\n    ManagedServiceIdentity_Status_UserAssignedIdentities   (Appears on:ManagedServiceIdentity_Status)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    ManagedServiceIdentity_Status_UserAssignedIdentitiesARM   (Appears on:ManagedServiceIdentity_StatusARM)      Field Description      clientId  string    ClientId: The client id of user assigned identity.\n    principalId  string    PrincipalId: The principal id of user assigned identity.\n    MongoDBCollectionCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabasesCollections_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBCollectionCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  MongoDBCollectionResourceARM     Resource: Cosmos DB MongoDB collection resource object\n    MongoDBCollectionGetProperties_StatusARM   (Appears on:MongoDBCollectionGetResults_StatusARM)      Field Description      options  OptionsResource_StatusARM         resource  MongoDBCollectionGetProperties_Status_ResourceARM         MongoDBCollectionGetProperties_Status_Resource   (Appears on:MongoDBCollectionGetResults_Status)      Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB MongoDB collection\n    indexes  []MongoIndex_Status     Indexes: List of index keys\n    _rid  string    Rid: A system generated property. A unique identifier.\n    shardKey  map[string]string    ShardKey: A key-value pair of shard keys to be applied for the request.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    MongoDBCollectionGetProperties_Status_ResourceARM   (Appears on:MongoDBCollectionGetProperties_StatusARM)      Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB MongoDB collection\n    indexes  []MongoIndex_StatusARM     Indexes: List of index keys\n    _rid  string    Rid: A system generated property. A unique identifier.\n    shardKey  map[string]string    ShardKey: A key-value pair of shard keys to be applied for the request.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    MongoDBCollectionGetResults_Status   (Appears on:MongodbDatabaseCollection)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    options  OptionsResource_Status         resource  MongoDBCollectionGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    MongoDBCollectionGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  MongoDBCollectionGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB MongoDB collection\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    MongoDBCollectionResource   (Appears on:DatabaseAccountsMongodbDatabasesCollections_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBCollectionResource\n    Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    id  string    Id: Name of the Cosmos DB MongoDB collection\n    indexes  []MongoIndex     Indexes: List of index keys\n    shardKey  map[string]string    ShardKey: The shard key and partition kind pair, only support \u0026ldquo;Hash\u0026rdquo; partition kind\n    MongoDBCollectionResourceARM   (Appears on:MongoDBCollectionCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBCollectionResource\n    Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    id  string    Id: Name of the Cosmos DB MongoDB collection\n    indexes  []MongoIndexARM     Indexes: List of index keys\n    shardKey  map[string]string    ShardKey: The shard key and partition kind pair, only support \u0026ldquo;Hash\u0026rdquo; partition kind\n    MongoDBDatabaseCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabases_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBDatabaseCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  MongoDBDatabaseResourceARM     Resource: Cosmos DB MongoDB database resource object\n    MongoDBDatabaseGetProperties_StatusARM   (Appears on:MongoDBDatabaseGetResults_StatusARM)      Field Description      options  OptionsResource_StatusARM         resource  MongoDBDatabaseGetProperties_Status_ResourceARM         MongoDBDatabaseGetProperties_Status_Resource   (Appears on:MongoDBDatabaseGetResults_Status)      Field Description      _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB MongoDB database\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    MongoDBDatabaseGetProperties_Status_ResourceARM   (Appears on:MongoDBDatabaseGetProperties_StatusARM)      Field Description      _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB MongoDB database\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    MongoDBDatabaseGetResults_Status   (Appears on:MongodbDatabase)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    options  OptionsResource_Status         resource  MongoDBDatabaseGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    MongoDBDatabaseGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  MongoDBDatabaseGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB MongoDB database\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    MongoDBDatabaseResource   (Appears on:DatabaseAccountsMongodbDatabases_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBDatabaseResource\n    Field Description      id  string    Id: Name of the Cosmos DB MongoDB database\n    MongoDBDatabaseResourceARM   (Appears on:MongoDBDatabaseCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBDatabaseResource\n    Field Description      id  string    Id: Name of the Cosmos DB MongoDB database\n    MongoIndex   (Appears on:MongoDBCollectionResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndex\n    Field Description      key  MongoIndexKeys     Key: Cosmos DB MongoDB collection resource object\n    options  MongoIndexOptions     Options: Cosmos DB MongoDB collection index options\n    MongoIndexARM   (Appears on:MongoDBCollectionResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndex\n    Field Description      key  MongoIndexKeysARM     Key: Cosmos DB MongoDB collection resource object\n    options  MongoIndexOptionsARM     Options: Cosmos DB MongoDB collection index options\n    MongoIndexKeys   (Appears on:MongoIndex)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexKeys\n    Field Description      keys  []string    Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service\n    MongoIndexKeysARM   (Appears on:MongoIndexARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexKeys\n    Field Description      keys  []string    Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service\n    MongoIndexKeys_Status   (Appears on:MongoIndex_Status)      Field Description      keys  []string    Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service\n    MongoIndexKeys_StatusARM   (Appears on:MongoIndex_StatusARM)      Field Description      keys  []string    Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service\n    MongoIndexOptions   (Appears on:MongoIndex)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexOptions\n    Field Description      expireAfterSeconds  int    ExpireAfterSeconds: Expire after seconds\n    unique  bool    Unique: Is unique or not\n    MongoIndexOptionsARM   (Appears on:MongoIndexARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexOptions\n    Field Description      expireAfterSeconds  int    ExpireAfterSeconds: Expire after seconds\n    unique  bool    Unique: Is unique or not\n    MongoIndexOptions_Status   (Appears on:MongoIndex_Status)      Field Description      expireAfterSeconds  int    ExpireAfterSeconds: Expire after seconds\n    unique  bool    Unique: Is unique or not\n    MongoIndexOptions_StatusARM   (Appears on:MongoIndex_StatusARM)      Field Description      expireAfterSeconds  int    ExpireAfterSeconds: Expire after seconds\n    unique  bool    Unique: Is unique or not\n    MongoIndex_Status   (Appears on:MongoDBCollectionGetProperties_Status_Resource)      Field Description      key  MongoIndexKeys_Status     Key: Cosmos DB MongoDB collection index keys\n    options  MongoIndexOptions_Status     Options: Cosmos DB MongoDB collection index key options\n    MongoIndex_StatusARM   (Appears on:MongoDBCollectionGetProperties_Status_ResourceARM)      Field Description      key  MongoIndexKeys_StatusARM     Key: Cosmos DB MongoDB collection index keys\n    options  MongoIndexOptions_StatusARM     Options: Cosmos DB MongoDB collection index key options\n    MongodbDatabase   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_mongodbDatabases\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  MongoDBDatabaseResource     Resource: Cosmos DB MongoDB database resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  MongoDBDatabaseGetResults_Status         MongodbDatabaseCollection   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_mongodbDatabases_collections\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesCollections_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  MongoDBCollectionResource     Resource: Cosmos DB MongoDB collection resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  MongoDBCollectionGetResults_Status         MongodbDatabaseCollectionThroughputSetting   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_mongodbDatabases_collections_throughputSettings\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec          location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabaseCollection resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  ThroughputSettingsGetResults_Status         MongodbDatabaseThroughputSetting   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_mongodbDatabases_throughputSettings\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsMongodbDatabasesThroughputSettings_Spec          location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/MongodbDatabase resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  ThroughputSettingsGetResults_Status         NetworkAclBypass_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;None\u0026#34;\n    OptionsResource_Status   (Appears on:MongoDBCollectionGetResults_Status, MongoDBDatabaseGetResults_Status, SqlContainerGetResults_Status, SqlDatabaseGetResults_Status)      Field Description      autoscaleSettings  AutoscaleSettings_Status     AutoscaleSettings: Specifies the Autoscale settings.\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.\n    OptionsResource_StatusARM   (Appears on:MongoDBCollectionGetProperties_StatusARM, MongoDBDatabaseGetProperties_StatusARM, SqlContainerGetProperties_StatusARM, SqlDatabaseGetProperties_StatusARM)      Field Description      autoscaleSettings  AutoscaleSettings_StatusARM     AutoscaleSettings: Specifies the Autoscale settings.\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.\n    PeriodicModeBackupPolicy   (Appears on:BackupPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/PeriodicModeBackupPolicy\n    Field Description      periodicModeProperties  PeriodicModeProperties     PeriodicModeProperties: Configuration values for periodic mode backup\n    type  PeriodicModeBackupPolicyType         PeriodicModeBackupPolicyARM   (Appears on:BackupPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/PeriodicModeBackupPolicy\n    Field Description      periodicModeProperties  PeriodicModePropertiesARM     PeriodicModeProperties: Configuration values for periodic mode backup\n    type  PeriodicModeBackupPolicyType         PeriodicModeBackupPolicyType (string alias)  (Appears on:PeriodicModeBackupPolicy, PeriodicModeBackupPolicyARM)      Value Description   \u0026#34;Periodic\u0026#34;\n    PeriodicModeProperties   (Appears on:PeriodicModeBackupPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/PeriodicModeProperties\n    Field Description      backupIntervalInMinutes  int    BackupIntervalInMinutes: An integer representing the interval in minutes between two backups\n    backupRetentionIntervalInHours  int    BackupRetentionIntervalInHours: An integer representing the time (in hours) that each backup is retained\n    PeriodicModePropertiesARM   (Appears on:PeriodicModeBackupPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/PeriodicModeProperties\n    Field Description      backupIntervalInMinutes  int    BackupIntervalInMinutes: An integer representing the interval in minutes between two backups\n    backupRetentionIntervalInHours  int    BackupRetentionIntervalInHours: An integer representing the time (in hours) that each backup is retained\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:DatabaseAccountGetResults_Status)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    PublicNetworkAccess_Status (string alias)  (Appears on:DatabaseAccountGetProperties_StatusARM, DatabaseAccountGetResults_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SpatialSpec   (Appears on:IndexingPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SpatialSpec\n    Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    types  []SpatialSpecTypes     Types: List of path\u0026rsquo;s spatial type\n    SpatialSpecARM   (Appears on:IndexingPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SpatialSpec\n    Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    types  []SpatialSpecTypes     Types: List of path\u0026rsquo;s spatial type\n    SpatialSpecTypes (string alias)  (Appears on:SpatialSpec, SpatialSpecARM)      Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n    SpatialSpec_Status   (Appears on:IndexingPolicy_Status)      Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    types  []SpatialType_Status     Types: List of path\u0026rsquo;s spatial type\n    SpatialSpec_StatusARM   (Appears on:IndexingPolicy_StatusARM)      Field Description      path  string    Path: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)\n    types  []SpatialType_Status     Types: List of path\u0026rsquo;s spatial type\n    SpatialType_Status (string alias)  (Appears on:SpatialSpec_Status, SpatialSpec_StatusARM)      Value Description   \u0026#34;LineString\u0026#34;\n  \u0026#34;MultiPolygon\u0026#34;\n  \u0026#34;Point\u0026#34;\n  \u0026#34;Polygon\u0026#34;\n    SqlContainerCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlContainerCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  SqlContainerResourceARM     Resource: Cosmos DB SQL container resource object\n    SqlContainerGetProperties_StatusARM   (Appears on:SqlContainerGetResults_StatusARM)      Field Description      options  OptionsResource_StatusARM         resource  SqlContainerGetProperties_Status_ResourceARM         SqlContainerGetProperties_Status_Resource   (Appears on:SqlContainerGetResults_Status)      Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    conflictResolutionPolicy  ConflictResolutionPolicy_Status     ConflictResolutionPolicy: The conflict resolution policy for the container.\n    defaultTtl  int    DefaultTtl: Default time to live\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL container\n    indexingPolicy  IndexingPolicy_Status     IndexingPolicy: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container\n    partitionKey  ContainerPartitionKey_Status     PartitionKey: The configuration of the partition key to be used for partitioning data into multiple partitions\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    uniqueKeyPolicy  UniqueKeyPolicy_Status     UniqueKeyPolicy: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.\n    SqlContainerGetProperties_Status_ResourceARM   (Appears on:SqlContainerGetProperties_StatusARM)      Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    conflictResolutionPolicy  ConflictResolutionPolicy_StatusARM     ConflictResolutionPolicy: The conflict resolution policy for the container.\n    defaultTtl  int    DefaultTtl: Default time to live\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL container\n    indexingPolicy  IndexingPolicy_StatusARM     IndexingPolicy: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container\n    partitionKey  ContainerPartitionKey_StatusARM     PartitionKey: The configuration of the partition key to be used for partitioning data into multiple partitions\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    uniqueKeyPolicy  UniqueKeyPolicy_StatusARM     UniqueKeyPolicy: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.\n    SqlContainerGetResults_Status   (Appears on:SqlDatabaseContainer)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    options  OptionsResource_Status         resource  SqlContainerGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlContainerGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  SqlContainerGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB container\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlContainerResource   (Appears on:DatabaseAccountsSqlDatabasesContainers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlContainerResource\n    Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    conflictResolutionPolicy  ConflictResolutionPolicy     ConflictResolutionPolicy: The conflict resolution policy for the container.\n    defaultTtl  int    DefaultTtl: Default time to live\n    id  string    Id: Name of the Cosmos DB SQL container\n    indexingPolicy  IndexingPolicy     IndexingPolicy: Cosmos DB indexing policy\n    partitionKey  ContainerPartitionKey     PartitionKey: The configuration of the partition key to be used for partitioning data into multiple partitions\n    uniqueKeyPolicy  UniqueKeyPolicy     UniqueKeyPolicy: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.\n    SqlContainerResourceARM   (Appears on:SqlContainerCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlContainerResource\n    Field Description      analyticalStorageTtl  int    AnalyticalStorageTtl: Analytical TTL.\n    conflictResolutionPolicy  ConflictResolutionPolicyARM     ConflictResolutionPolicy: The conflict resolution policy for the container.\n    defaultTtl  int    DefaultTtl: Default time to live\n    id  string    Id: Name of the Cosmos DB SQL container\n    indexingPolicy  IndexingPolicyARM     IndexingPolicy: Cosmos DB indexing policy\n    partitionKey  ContainerPartitionKeyARM     PartitionKey: The configuration of the partition key to be used for partitioning data into multiple partitions\n    uniqueKeyPolicy  UniqueKeyPolicyARM     UniqueKeyPolicy: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.\n    SqlDatabase   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabases_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/DatabaseAccount resource\n    resource  SqlDatabaseResource     Resource: Cosmos DB SQL database resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  SqlDatabaseGetResults_Status         SqlDatabaseContainer   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_containers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  SqlContainerResource     Resource: Cosmos DB SQL container resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  SqlContainerGetResults_Status         SqlDatabaseContainerStoredProcedure   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_containers_storedProcedures\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlStoredProcedureResource     Resource: Cosmos DB SQL storedProcedure resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  SqlStoredProcedureGetResults_Status         SqlDatabaseContainerThroughputSetting   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_containers_throughputSettings\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec          location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  ThroughputSettingsGetResults_Status         SqlDatabaseContainerTrigger   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_containers_triggers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersTriggers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlTriggerResource     Resource: Cosmos DB SQL trigger resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  SqlTriggerGetResults_Status         SqlDatabaseContainerUserDefinedFunction   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_containers_userDefinedFunctions\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    options  CreateUpdateOptions     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabaseContainer resource\n    resource  SqlUserDefinedFunctionResource     Resource: Cosmos DB SQL userDefinedFunction resource object\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  SqlUserDefinedFunctionGetResults_Status         SqlDatabaseCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabases_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlDatabaseCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  SqlDatabaseResourceARM     Resource: Cosmos DB SQL database resource object\n    SqlDatabaseGetProperties_StatusARM   (Appears on:SqlDatabaseGetResults_StatusARM)      Field Description      options  OptionsResource_StatusARM         resource  SqlDatabaseGetProperties_Status_ResourceARM         SqlDatabaseGetProperties_Status_Resource   (Appears on:SqlDatabaseGetResults_Status)      Field Description      _colls  string    Colls: A system generated property that specified the addressable path of the collections resource.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL database\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    _users  string    Users: A system generated property that specifies the addressable path of the users resource.\n    SqlDatabaseGetProperties_Status_ResourceARM   (Appears on:SqlDatabaseGetProperties_StatusARM)      Field Description      _colls  string    Colls: A system generated property that specified the addressable path of the collections resource.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL database\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    _users  string    Users: A system generated property that specifies the addressable path of the users resource.\n    SqlDatabaseGetResults_Status   (Appears on:SqlDatabase)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    options  OptionsResource_Status         resource  SqlDatabaseGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlDatabaseGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  SqlDatabaseGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB SQL database\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlDatabaseResource   (Appears on:DatabaseAccountsSqlDatabases_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlDatabaseResource\n    Field Description      id  string    Id: Name of the Cosmos DB SQL database\n    SqlDatabaseResourceARM   (Appears on:SqlDatabaseCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlDatabaseResource\n    Field Description      id  string    Id: Name of the Cosmos DB SQL database\n    SqlDatabaseThroughputSetting   Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/resourceDefinitions/databaseAccounts_sqlDatabases_throughputSettings\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DatabaseAccountsSqlDatabasesThroughputSettings_Spec          location  string    Location: The location of the resource group to which the resource belongs.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a documentdb.azure.com/SqlDatabase resource\n    resource  ThroughputSettingsResource     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    tags  map[string]string    Tags: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \u0026ldquo;defaultExperience\u0026rdquo;: \u0026ldquo;Cassandra\u0026rdquo;. Current \u0026ldquo;defaultExperience\u0026rdquo; values also include \u0026ldquo;Table\u0026rdquo;, \u0026ldquo;Graph\u0026rdquo;, \u0026ldquo;DocumentDB\u0026rdquo;, and \u0026ldquo;MongoDB\u0026rdquo;.\n       status  ThroughputSettingsGetResults_Status         SqlStoredProcedureCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersStoredProcedures_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlStoredProcedureCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  SqlStoredProcedureResourceARM     Resource: Cosmos DB SQL storedProcedure resource object\n    SqlStoredProcedureGetProperties_StatusARM   (Appears on:SqlStoredProcedureGetResults_StatusARM)      Field Description      resource  SqlStoredProcedureGetProperties_Status_ResourceARM         SqlStoredProcedureGetProperties_Status_Resource   (Appears on:SqlStoredProcedureGetResults_Status)      Field Description      body  string    Body: Body of the Stored Procedure\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL storedProcedure\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlStoredProcedureGetProperties_Status_ResourceARM   (Appears on:SqlStoredProcedureGetProperties_StatusARM)      Field Description      body  string    Body: Body of the Stored Procedure\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL storedProcedure\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlStoredProcedureGetResults_Status   (Appears on:SqlDatabaseContainerStoredProcedure)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    resource  SqlStoredProcedureGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlStoredProcedureGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  SqlStoredProcedureGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB storedProcedure\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlStoredProcedureResource   (Appears on:DatabaseAccountsSqlDatabasesContainersStoredProcedures_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlStoredProcedureResource\n    Field Description      body  string    Body: Body of the Stored Procedure\n    id  string    Id: Name of the Cosmos DB SQL storedProcedure\n    SqlStoredProcedureResourceARM   (Appears on:SqlStoredProcedureCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlStoredProcedureResource\n    Field Description      body  string    Body: Body of the Stored Procedure\n    id  string    Id: Name of the Cosmos DB SQL storedProcedure\n    SqlTriggerCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersTriggers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlTriggerCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  SqlTriggerResourceARM     Resource: Cosmos DB SQL trigger resource object\n    SqlTriggerGetPropertiesStatusResourceTriggerOperation (string alias)  (Appears on:SqlTriggerGetProperties_Status_Resource, SqlTriggerGetProperties_Status_ResourceARM)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Create\u0026#34;\n  \u0026#34;Delete\u0026#34;\n  \u0026#34;Replace\u0026#34;\n  \u0026#34;Update\u0026#34;\n    SqlTriggerGetPropertiesStatusResourceTriggerType (string alias)  (Appears on:SqlTriggerGetProperties_Status_Resource, SqlTriggerGetProperties_Status_ResourceARM)      Value Description   \u0026#34;Post\u0026#34;\n  \u0026#34;Pre\u0026#34;\n    SqlTriggerGetProperties_StatusARM   (Appears on:SqlTriggerGetResults_StatusARM)      Field Description      resource  SqlTriggerGetProperties_Status_ResourceARM         SqlTriggerGetProperties_Status_Resource   (Appears on:SqlTriggerGetResults_Status)      Field Description      body  string    Body: Body of the Trigger\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL trigger\n    _rid  string    Rid: A system generated property. A unique identifier.\n    triggerOperation  SqlTriggerGetPropertiesStatusResourceTriggerOperation     TriggerOperation: The operation the trigger is associated with\n    triggerType  SqlTriggerGetPropertiesStatusResourceTriggerType     TriggerType: Type of the Trigger\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlTriggerGetProperties_Status_ResourceARM   (Appears on:SqlTriggerGetProperties_StatusARM)      Field Description      body  string    Body: Body of the Trigger\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL trigger\n    _rid  string    Rid: A system generated property. A unique identifier.\n    triggerOperation  SqlTriggerGetPropertiesStatusResourceTriggerOperation     TriggerOperation: The operation the trigger is associated with\n    triggerType  SqlTriggerGetPropertiesStatusResourceTriggerType     TriggerType: Type of the Trigger\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlTriggerGetResults_Status   (Appears on:SqlDatabaseContainerTrigger)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    resource  SqlTriggerGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlTriggerGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  SqlTriggerGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB trigger\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlTriggerResource   (Appears on:DatabaseAccountsSqlDatabasesContainersTriggers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlTriggerResource\n    Field Description      body  string    Body: Body of the Trigger\n    id  string    Id: Name of the Cosmos DB SQL trigger\n    triggerOperation  SqlTriggerResourceTriggerOperation     TriggerOperation: The operation the trigger is associated with.\n    triggerType  SqlTriggerResourceTriggerType     TriggerType: Type of the Trigger.\n    SqlTriggerResourceARM   (Appears on:SqlTriggerCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlTriggerResource\n    Field Description      body  string    Body: Body of the Trigger\n    id  string    Id: Name of the Cosmos DB SQL trigger\n    triggerOperation  SqlTriggerResourceTriggerOperation     TriggerOperation: The operation the trigger is associated with.\n    triggerType  SqlTriggerResourceTriggerType     TriggerType: Type of the Trigger.\n    SqlTriggerResourceTriggerOperation (string alias)  (Appears on:SqlTriggerResource, SqlTriggerResourceARM)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Create\u0026#34;\n  \u0026#34;Delete\u0026#34;\n  \u0026#34;Replace\u0026#34;\n  \u0026#34;Update\u0026#34;\n    SqlTriggerResourceTriggerType (string alias)  (Appears on:SqlTriggerResource, SqlTriggerResourceARM)      Value Description   \u0026#34;Post\u0026#34;\n  \u0026#34;Pre\u0026#34;\n    SqlUserDefinedFunctionCreateUpdatePropertiesARM   (Appears on:DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlUserDefinedFunctionCreateUpdateProperties\n    Field Description      options  CreateUpdateOptionsARM     Options: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \u0026ldquo;If-Match\u0026rdquo;, \u0026ldquo;If-None-Match\u0026rdquo;, \u0026ldquo;Session-Token\u0026rdquo; and \u0026ldquo;Throughput\u0026rdquo;\n    resource  SqlUserDefinedFunctionResourceARM     Resource: Cosmos DB SQL userDefinedFunction resource object\n    SqlUserDefinedFunctionGetProperties_StatusARM   (Appears on:SqlUserDefinedFunctionGetResults_StatusARM)      Field Description      resource  SqlUserDefinedFunctionGetProperties_Status_ResourceARM         SqlUserDefinedFunctionGetProperties_Status_Resource   (Appears on:SqlUserDefinedFunctionGetResults_Status)      Field Description      body  string    Body: Body of the User Defined Function\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL userDefinedFunction\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlUserDefinedFunctionGetProperties_Status_ResourceARM   (Appears on:SqlUserDefinedFunctionGetProperties_StatusARM)      Field Description      body  string    Body: Body of the User Defined Function\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    id  string    Id: Name of the Cosmos DB SQL userDefinedFunction\n    _rid  string    Rid: A system generated property. A unique identifier.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    SqlUserDefinedFunctionGetResults_Status   (Appears on:SqlDatabaseContainerUserDefinedFunction)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    resource  SqlUserDefinedFunctionGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlUserDefinedFunctionGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  SqlUserDefinedFunctionGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB userDefinedFunction\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    SqlUserDefinedFunctionResource   (Appears on:DatabaseAccountsSqlDatabasesContainersUserDefinedFunctions_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlUserDefinedFunctionResource\n    Field Description      body  string    Body: Body of the User Defined Function\n    id  string    Id: Name of the Cosmos DB SQL userDefinedFunction\n    SqlUserDefinedFunctionResourceARM   (Appears on:SqlUserDefinedFunctionCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/SqlUserDefinedFunctionResource\n    Field Description      body  string    Body: Body of the User Defined Function\n    id  string    Id: Name of the Cosmos DB SQL userDefinedFunction\n    ThroughputPolicyResource   (Appears on:AutoUpgradePolicyResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ThroughputPolicyResource\n    Field Description      incrementPercent  int    IncrementPercent: Represents the percentage by which throughput can increase every time throughput policy kicks in.\n    isEnabled  bool    IsEnabled: Determines whether the ThroughputPolicy is active or not\n    ThroughputPolicyResourceARM   (Appears on:AutoUpgradePolicyResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ThroughputPolicyResource\n    Field Description      incrementPercent  int    IncrementPercent: Represents the percentage by which throughput can increase every time throughput policy kicks in.\n    isEnabled  bool    IsEnabled: Determines whether the ThroughputPolicy is active or not\n    ThroughputPolicyResource_Status   (Appears on:AutoUpgradePolicyResource_Status)      Field Description      incrementPercent  int    IncrementPercent: Represents the percentage by which throughput can increase every time throughput policy kicks in.\n    isEnabled  bool    IsEnabled: Determines whether the ThroughputPolicy is active or not\n    ThroughputPolicyResource_StatusARM   (Appears on:AutoUpgradePolicyResource_StatusARM)      Field Description      incrementPercent  int    IncrementPercent: Represents the percentage by which throughput can increase every time throughput policy kicks in.\n    isEnabled  bool    IsEnabled: Determines whether the ThroughputPolicy is active or not\n    ThroughputSettingsGetProperties_StatusARM   (Appears on:ThroughputSettingsGetResults_StatusARM)      Field Description      resource  ThroughputSettingsGetProperties_Status_ResourceARM         ThroughputSettingsGetProperties_Status_Resource   (Appears on:ThroughputSettingsGetResults_Status)      Field Description      autoscaleSettings  AutoscaleSettingsResource_Status     AutoscaleSettings: Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    minimumThroughput  string    MinimumThroughput: The minimum throughput of the resource\n    offerReplacePending  string    OfferReplacePending: The throughput replace is pending\n    _rid  string    Rid: A system generated property. A unique identifier.\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    ThroughputSettingsGetProperties_Status_ResourceARM   (Appears on:ThroughputSettingsGetProperties_StatusARM)      Field Description      autoscaleSettings  AutoscaleSettingsResource_StatusARM     AutoscaleSettings: Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.\n    _etag  string    Etag: A system generated property representing the resource etag required for optimistic concurrency control.\n    minimumThroughput  string    MinimumThroughput: The minimum throughput of the resource\n    offerReplacePending  string    OfferReplacePending: The throughput replace is pending\n    _rid  string    Rid: A system generated property. A unique identifier.\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.\n    _ts  float64    Ts: A system generated property that denotes the last updated timestamp of the resource.\n    ThroughputSettingsGetResults_Status   (Appears on:MongodbDatabaseCollectionThroughputSetting, MongodbDatabaseThroughputSetting, SqlDatabaseContainerThroughputSetting, SqlDatabaseThroughputSetting)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    resource  ThroughputSettingsGetProperties_Status_Resource         tags  map[string]string        type  string    Type: The type of Azure resource.\n    ThroughputSettingsGetResults_StatusARM       Field Description      id  string    Id: The unique resource identifier of the ARM resource.\n    location  string    Location: The location of the resource group to which the resource belongs.\n    name  string    Name: The name of the ARM resource.\n    properties  ThroughputSettingsGetProperties_StatusARM     Properties: The properties of an Azure Cosmos DB resource throughput\n    tags  map[string]string        type  string    Type: The type of Azure resource.\n    ThroughputSettingsResource   (Appears on:DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_Spec, DatabaseAccountsMongodbDatabasesThroughputSettings_Spec, DatabaseAccountsSqlDatabasesContainersThroughputSettings_Spec, DatabaseAccountsSqlDatabasesThroughputSettings_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ThroughputSettingsResource\n    Field Description      autoscaleSettings  AutoscaleSettingsResource     AutoscaleSettings: Cosmos DB provisioned throughput settings object\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.\n    ThroughputSettingsResourceARM   (Appears on:ThroughputSettingsUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ThroughputSettingsResource\n    Field Description      autoscaleSettings  AutoscaleSettingsResourceARM     AutoscaleSettings: Cosmos DB provisioned throughput settings object\n    throughput  int    Throughput: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.\n    ThroughputSettingsUpdatePropertiesARM   (Appears on:DatabaseAccountsMongodbDatabasesCollectionsThroughputSettings_SpecARM, DatabaseAccountsMongodbDatabasesThroughputSettings_SpecARM, DatabaseAccountsSqlDatabasesContainersThroughputSettings_SpecARM, DatabaseAccountsSqlDatabasesThroughputSettings_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/ThroughputSettingsUpdateProperties\n    Field Description      resource  ThroughputSettingsResourceARM     Resource: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.\n    UniqueKey   (Appears on:UniqueKeyPolicy)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/UniqueKey\n    Field Description      paths  []string    Paths: List of paths must be unique for each document in the Azure Cosmos DB service\n    UniqueKeyARM   (Appears on:UniqueKeyPolicyARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/UniqueKey\n    Field Description      paths  []string    Paths: List of paths must be unique for each document in the Azure Cosmos DB service\n    UniqueKeyPolicy   (Appears on:SqlContainerResource)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/UniqueKeyPolicy\n    Field Description      uniqueKeys  []UniqueKey     UniqueKeys: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.\n    UniqueKeyPolicyARM   (Appears on:SqlContainerResourceARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/UniqueKeyPolicy\n    Field Description      uniqueKeys  []UniqueKeyARM     UniqueKeys: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.\n    UniqueKeyPolicy_Status   (Appears on:SqlContainerGetProperties_Status_Resource)      Field Description      uniqueKeys  []UniqueKey_Status     UniqueKeys: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.\n    UniqueKeyPolicy_StatusARM   (Appears on:SqlContainerGetProperties_Status_ResourceARM)      Field Description      uniqueKeys  []UniqueKey_StatusARM     UniqueKeys: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.\n    UniqueKey_Status   (Appears on:UniqueKeyPolicy_Status)      Field Description      paths  []string    Paths: List of paths must be unique for each document in the Azure Cosmos DB service\n    UniqueKey_StatusARM   (Appears on:UniqueKeyPolicy_StatusARM)      Field Description      paths  []string    Paths: List of paths must be unique for each document in the Azure Cosmos DB service\n    VirtualNetworkRule   (Appears on:DatabaseAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/VirtualNetworkRule\n    Field Description      ignoreMissingVNetServiceEndpoint  bool    IgnoreMissingVNetServiceEndpoint: Create firewall rule before the virtual network has vnet service endpoint enabled.\n    reference  genruntime.ResourceReference     Reference: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.\n    VirtualNetworkRuleARM   (Appears on:DatabaseAccountCreateUpdatePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/VirtualNetworkRule\n    Field Description      id  string        ignoreMissingVNetServiceEndpoint  bool    IgnoreMissingVNetServiceEndpoint: Create firewall rule before the virtual network has vnet service endpoint enabled.\n    VirtualNetworkRule_Status   (Appears on:DatabaseAccountGetResults_Status)      Field Description      id  string    Id: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.\n    ignoreMissingVNetServiceEndpoint  bool    IgnoreMissingVNetServiceEndpoint: Create firewall rule before the virtual network has vnet service endpoint enabled.\n    VirtualNetworkRule_StatusARM   (Appears on:DatabaseAccountGetProperties_StatusARM)      Field Description      id  string    Id: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.\n    ignoreMissingVNetServiceEndpoint  bool    IgnoreMissingVNetServiceEndpoint: Create firewall rule before the virtual network has vnet service endpoint enabled.\n     "},{"id":47,"href":"/azure-service-operator/reference/eventgrid.v1alpha1api20200601/","title":"eventgrid.azure.com/v1alpha1api20200601","section":"References","content":"eventgrid.azure.com/v1alpha1api20200601  Package v1alpha1api20200601 contains API Schema definitions for the eventgrid v1alpha1api20200601 API group\n Resource Types:  AdvancedFilter   (Appears on:EventSubscriptionFilter)  Deprecated version of AdvancedFilter. Use v1beta20200601.AdvancedFilter instead\n    Field Description      boolEqualsAdvancedFilter  AdvancedFilter_BoolEquals         numberGreaterThanAdvancedFilter  AdvancedFilter_NumberGreaterThan         numberGreaterThanOrEqualsAdvancedFilter  AdvancedFilter_NumberGreaterThanOrEquals         numberInAdvancedFilter  AdvancedFilter_NumberIn         numberLessThanAdvancedFilter  AdvancedFilter_NumberLessThan         numberLessThanOrEqualsAdvancedFilter  AdvancedFilter_NumberLessThanOrEquals         numberNotInAdvancedFilter  AdvancedFilter_NumberNotIn         stringBeginsWithAdvancedFilter  AdvancedFilter_StringBeginsWith         stringContainsAdvancedFilter  AdvancedFilter_StringContains         stringEndsWithAdvancedFilter  AdvancedFilter_StringEndsWith         stringInAdvancedFilter  AdvancedFilter_StringIn         stringNotInAdvancedFilter  AdvancedFilter_StringNotIn         AdvancedFilterARM   (Appears on:EventSubscriptionFilterARM)  Deprecated version of AdvancedFilter. Use v1beta20200601.AdvancedFilter instead\n    Field Description      boolEqualsAdvancedFilter  AdvancedFilter_BoolEqualsARM         numberGreaterThanAdvancedFilter  AdvancedFilter_NumberGreaterThanARM         numberGreaterThanOrEqualsAdvancedFilter  AdvancedFilter_NumberGreaterThanOrEqualsARM         numberInAdvancedFilter  AdvancedFilter_NumberInARM         numberLessThanAdvancedFilter  AdvancedFilter_NumberLessThanARM         numberLessThanOrEqualsAdvancedFilter  AdvancedFilter_NumberLessThanOrEqualsARM         numberNotInAdvancedFilter  AdvancedFilter_NumberNotInARM         stringBeginsWithAdvancedFilter  AdvancedFilter_StringBeginsWithARM         stringContainsAdvancedFilter  AdvancedFilter_StringContainsARM         stringEndsWithAdvancedFilter  AdvancedFilter_StringEndsWithARM         stringInAdvancedFilter  AdvancedFilter_StringInARM         stringNotInAdvancedFilter  AdvancedFilter_StringNotInARM         AdvancedFilterBoolEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_BoolEquals, AdvancedFilter_BoolEqualsARM)  Deprecated version of AdvancedFilterBoolEqualsOperatorType. Use v1beta20200601.AdvancedFilterBoolEqualsOperatorType instead\n    Value Description   \u0026#34;BoolEquals\u0026#34;\n    AdvancedFilterNumberGreaterThanOperatorType (string alias)  (Appears on:AdvancedFilter_NumberGreaterThan, AdvancedFilter_NumberGreaterThanARM)  Deprecated version of AdvancedFilterNumberGreaterThanOperatorType. Use v1beta20200601.AdvancedFilterNumberGreaterThanOperatorType instead\n    Value Description   \u0026#34;NumberGreaterThan\u0026#34;\n    AdvancedFilterNumberGreaterThanOrEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_NumberGreaterThanOrEquals, AdvancedFilter_NumberGreaterThanOrEqualsARM)  Deprecated version of AdvancedFilterNumberGreaterThanOrEqualsOperatorType. Use v1beta20200601.AdvancedFilterNumberGreaterThanOrEqualsOperatorType instead\n    Value Description   \u0026#34;NumberGreaterThanOrEquals\u0026#34;\n    AdvancedFilterNumberInOperatorType (string alias)  (Appears on:AdvancedFilter_NumberIn, AdvancedFilter_NumberInARM)  Deprecated version of AdvancedFilterNumberInOperatorType. Use v1beta20200601.AdvancedFilterNumberInOperatorType instead\n    Value Description   \u0026#34;NumberIn\u0026#34;\n    AdvancedFilterNumberLessThanOperatorType (string alias)  (Appears on:AdvancedFilter_NumberLessThan, AdvancedFilter_NumberLessThanARM)  Deprecated version of AdvancedFilterNumberLessThanOperatorType. Use v1beta20200601.AdvancedFilterNumberLessThanOperatorType instead\n    Value Description   \u0026#34;NumberLessThan\u0026#34;\n    AdvancedFilterNumberLessThanOrEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_NumberLessThanOrEquals, AdvancedFilter_NumberLessThanOrEqualsARM)  Deprecated version of AdvancedFilterNumberLessThanOrEqualsOperatorType. Use v1beta20200601.AdvancedFilterNumberLessThanOrEqualsOperatorType instead\n    Value Description   \u0026#34;NumberLessThanOrEquals\u0026#34;\n    AdvancedFilterNumberNotInOperatorType (string alias)  (Appears on:AdvancedFilter_NumberNotIn, AdvancedFilter_NumberNotInARM)  Deprecated version of AdvancedFilterNumberNotInOperatorType. Use v1beta20200601.AdvancedFilterNumberNotInOperatorType instead\n    Value Description   \u0026#34;NumberNotIn\u0026#34;\n    AdvancedFilterStatusOperatorType (string alias)  (Appears on:AdvancedFilter_Status, AdvancedFilter_StatusARM)  Deprecated version of AdvancedFilterStatusOperatorType. Use v1beta20200601.AdvancedFilterStatusOperatorType instead\n    Value Description   \u0026#34;BoolEquals\u0026#34;\n  \u0026#34;NumberGreaterThan\u0026#34;\n  \u0026#34;NumberGreaterThanOrEquals\u0026#34;\n  \u0026#34;NumberIn\u0026#34;\n  \u0026#34;NumberLessThan\u0026#34;\n  \u0026#34;NumberLessThanOrEquals\u0026#34;\n  \u0026#34;NumberNotIn\u0026#34;\n  \u0026#34;StringBeginsWith\u0026#34;\n  \u0026#34;StringContains\u0026#34;\n  \u0026#34;StringEndsWith\u0026#34;\n  \u0026#34;StringIn\u0026#34;\n  \u0026#34;StringNotIn\u0026#34;\n    AdvancedFilterStringBeginsWithOperatorType (string alias)  (Appears on:AdvancedFilter_StringBeginsWith, AdvancedFilter_StringBeginsWithARM)  Deprecated version of AdvancedFilterStringBeginsWithOperatorType. Use v1beta20200601.AdvancedFilterStringBeginsWithOperatorType instead\n    Value Description   \u0026#34;StringBeginsWith\u0026#34;\n    AdvancedFilterStringContainsOperatorType (string alias)  (Appears on:AdvancedFilter_StringContains, AdvancedFilter_StringContainsARM)  Deprecated version of AdvancedFilterStringContainsOperatorType. Use v1beta20200601.AdvancedFilterStringContainsOperatorType instead\n    Value Description   \u0026#34;StringContains\u0026#34;\n    AdvancedFilterStringEndsWithOperatorType (string alias)  (Appears on:AdvancedFilter_StringEndsWith, AdvancedFilter_StringEndsWithARM)  Deprecated version of AdvancedFilterStringEndsWithOperatorType. Use v1beta20200601.AdvancedFilterStringEndsWithOperatorType instead\n    Value Description   \u0026#34;StringEndsWith\u0026#34;\n    AdvancedFilterStringInOperatorType (string alias)  (Appears on:AdvancedFilter_StringIn, AdvancedFilter_StringInARM)  Deprecated version of AdvancedFilterStringInOperatorType. Use v1beta20200601.AdvancedFilterStringInOperatorType instead\n    Value Description   \u0026#34;StringIn\u0026#34;\n    AdvancedFilterStringNotInOperatorType (string alias)  (Appears on:AdvancedFilter_StringNotIn, AdvancedFilter_StringNotInARM)  Deprecated version of AdvancedFilterStringNotInOperatorType. Use v1beta20200601.AdvancedFilterStringNotInOperatorType instead\n    Value Description   \u0026#34;StringNotIn\u0026#34;\n    AdvancedFilter_BoolEquals   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_BoolEquals. Use v1beta20200601.AdvancedFilter_BoolEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterBoolEqualsOperatorType         value  bool        AdvancedFilter_BoolEqualsARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_BoolEquals. Use v1beta20200601.AdvancedFilter_BoolEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterBoolEqualsOperatorType         value  bool        AdvancedFilter_NumberGreaterThan   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberGreaterThan. Use v1beta20200601.AdvancedFilter_NumberGreaterThan instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberGreaterThanOperatorType         value  float64        AdvancedFilter_NumberGreaterThanARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberGreaterThan. Use v1beta20200601.AdvancedFilter_NumberGreaterThan instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberGreaterThanOperatorType         value  float64        AdvancedFilter_NumberGreaterThanOrEquals   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberGreaterThanOrEquals. Use v1beta20200601.AdvancedFilter_NumberGreaterThanOrEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberGreaterThanOrEqualsOperatorType         value  float64        AdvancedFilter_NumberGreaterThanOrEqualsARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberGreaterThanOrEquals. Use v1beta20200601.AdvancedFilter_NumberGreaterThanOrEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberGreaterThanOrEqualsOperatorType         value  float64        AdvancedFilter_NumberIn   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberIn. Use v1beta20200601.AdvancedFilter_NumberIn instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberInOperatorType         values  []float64        AdvancedFilter_NumberInARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberIn. Use v1beta20200601.AdvancedFilter_NumberIn instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberInOperatorType         values  []float64        AdvancedFilter_NumberLessThan   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberLessThan. Use v1beta20200601.AdvancedFilter_NumberLessThan instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberLessThanOperatorType         value  float64        AdvancedFilter_NumberLessThanARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberLessThan. Use v1beta20200601.AdvancedFilter_NumberLessThan instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberLessThanOperatorType         value  float64        AdvancedFilter_NumberLessThanOrEquals   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberLessThanOrEquals. Use v1beta20200601.AdvancedFilter_NumberLessThanOrEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberLessThanOrEqualsOperatorType         value  float64        AdvancedFilter_NumberLessThanOrEqualsARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberLessThanOrEquals. Use v1beta20200601.AdvancedFilter_NumberLessThanOrEquals instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberLessThanOrEqualsOperatorType         value  float64        AdvancedFilter_NumberNotIn   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_NumberNotIn. Use v1beta20200601.AdvancedFilter_NumberNotIn instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberNotInOperatorType         values  []float64        AdvancedFilter_NumberNotInARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_NumberNotIn. Use v1beta20200601.AdvancedFilter_NumberNotIn instead\n    Field Description      key  string        operatorType  AdvancedFilterNumberNotInOperatorType         values  []float64        AdvancedFilter_Status   (Appears on:EventSubscriptionFilter_Status)  Deprecated version of AdvancedFilter_Status. Use v1beta20200601.AdvancedFilter_Status instead\n    Field Description      key  string        operatorType  AdvancedFilterStatusOperatorType         AdvancedFilter_StatusARM   (Appears on:EventSubscriptionFilter_StatusARM)  Deprecated version of AdvancedFilter_Status. Use v1beta20200601.AdvancedFilter_Status instead\n    Field Description      key  string        operatorType  AdvancedFilterStatusOperatorType         AdvancedFilter_StringBeginsWith   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_StringBeginsWith. Use v1beta20200601.AdvancedFilter_StringBeginsWith instead\n    Field Description      key  string        operatorType  AdvancedFilterStringBeginsWithOperatorType         values  []string        AdvancedFilter_StringBeginsWithARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_StringBeginsWith. Use v1beta20200601.AdvancedFilter_StringBeginsWith instead\n    Field Description      key  string        operatorType  AdvancedFilterStringBeginsWithOperatorType         values  []string        AdvancedFilter_StringContains   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_StringContains. Use v1beta20200601.AdvancedFilter_StringContains instead\n    Field Description      key  string        operatorType  AdvancedFilterStringContainsOperatorType         values  []string        AdvancedFilter_StringContainsARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_StringContains. Use v1beta20200601.AdvancedFilter_StringContains instead\n    Field Description      key  string        operatorType  AdvancedFilterStringContainsOperatorType         values  []string        AdvancedFilter_StringEndsWith   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_StringEndsWith. Use v1beta20200601.AdvancedFilter_StringEndsWith instead\n    Field Description      key  string        operatorType  AdvancedFilterStringEndsWithOperatorType         values  []string        AdvancedFilter_StringEndsWithARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_StringEndsWith. Use v1beta20200601.AdvancedFilter_StringEndsWith instead\n    Field Description      key  string        operatorType  AdvancedFilterStringEndsWithOperatorType         values  []string        AdvancedFilter_StringIn   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_StringIn. Use v1beta20200601.AdvancedFilter_StringIn instead\n    Field Description      key  string        operatorType  AdvancedFilterStringInOperatorType         values  []string        AdvancedFilter_StringInARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_StringIn. Use v1beta20200601.AdvancedFilter_StringIn instead\n    Field Description      key  string        operatorType  AdvancedFilterStringInOperatorType         values  []string        AdvancedFilter_StringNotIn   (Appears on:AdvancedFilter)  Deprecated version of AdvancedFilter_StringNotIn. Use v1beta20200601.AdvancedFilter_StringNotIn instead\n    Field Description      key  string        operatorType  AdvancedFilterStringNotInOperatorType         values  []string        AdvancedFilter_StringNotInARM   (Appears on:AdvancedFilterARM)  Deprecated version of AdvancedFilter_StringNotIn. Use v1beta20200601.AdvancedFilter_StringNotIn instead\n    Field Description      key  string        operatorType  AdvancedFilterStringNotInOperatorType         values  []string        AzureFunctionEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of AzureFunctionEventSubscriptionDestination. Use v1beta20200601.AzureFunctionEventSubscriptionDestination instead\n    Field Description      endpointType  AzureFunctionEventSubscriptionDestinationEndpointType         properties  AzureFunctionEventSubscriptionDestinationProperties         AzureFunctionEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of AzureFunctionEventSubscriptionDestination. Use v1beta20200601.AzureFunctionEventSubscriptionDestination instead\n    Field Description      endpointType  AzureFunctionEventSubscriptionDestinationEndpointType         properties  AzureFunctionEventSubscriptionDestinationPropertiesARM         AzureFunctionEventSubscriptionDestinationEndpointType (string alias)  (Appears on:AzureFunctionEventSubscriptionDestination, AzureFunctionEventSubscriptionDestinationARM)  Deprecated version of AzureFunctionEventSubscriptionDestinationEndpointType. Use v1beta20200601.AzureFunctionEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;AzureFunction\u0026#34;\n    AzureFunctionEventSubscriptionDestinationProperties   (Appears on:AzureFunctionEventSubscriptionDestination)  Deprecated version of AzureFunctionEventSubscriptionDestinationProperties. Use v1beta20200601.AzureFunctionEventSubscriptionDestinationProperties instead\n    Field Description      maxEventsPerBatch  int        preferredBatchSizeInKilobytes  int        resourceReference  genruntime.ResourceReference         AzureFunctionEventSubscriptionDestinationPropertiesARM   (Appears on:AzureFunctionEventSubscriptionDestinationARM)  Deprecated version of AzureFunctionEventSubscriptionDestinationProperties. Use v1beta20200601.AzureFunctionEventSubscriptionDestinationProperties instead\n    Field Description      maxEventsPerBatch  int        preferredBatchSizeInKilobytes  int        resourceId  string        DeadLetterDestinationStatusEndpointType (string alias)  (Appears on:DeadLetterDestination_Status, DeadLetterDestination_StatusARM)  Deprecated version of DeadLetterDestinationStatusEndpointType. Use v1beta20200601.DeadLetterDestinationStatusEndpointType instead\n    Value Description   \u0026#34;StorageBlob\u0026#34;\n    DeadLetterDestination_Status   (Appears on:EventSubscription_Status)  Deprecated version of DeadLetterDestination_Status. Use v1beta20200601.DeadLetterDestination_Status instead\n    Field Description      endpointType  DeadLetterDestinationStatusEndpointType         DeadLetterDestination_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)  Deprecated version of DeadLetterDestination_Status. Use v1beta20200601.DeadLetterDestination_Status instead\n    Field Description      endpointType  DeadLetterDestinationStatusEndpointType         Domain   Deprecated version of Domain. Use v1beta20200601.Domain instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Domains_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    inboundIpRules  []InboundIpRule         inputSchema  DomainPropertiesInputSchema         inputSchemaMapping  JsonInputSchemaMapping         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DomainPropertiesPublicNetworkAccess         tags  map[string]string           status  Domain_Status         DomainPropertiesARM   (Appears on:Domains_SpecARM)  Deprecated version of DomainProperties. Use v1beta20200601.DomainProperties instead\n    Field Description      inboundIpRules  []InboundIpRuleARM         inputSchema  DomainPropertiesInputSchema         inputSchemaMapping  JsonInputSchemaMappingARM         publicNetworkAccess  DomainPropertiesPublicNetworkAccess         DomainPropertiesInputSchema (string alias)  (Appears on:DomainPropertiesARM, Domains_Spec)  Deprecated version of DomainPropertiesInputSchema. Use v1beta20200601.DomainPropertiesInputSchema instead\n    Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    DomainPropertiesPublicNetworkAccess (string alias)  (Appears on:DomainPropertiesARM, Domains_Spec)  Deprecated version of DomainPropertiesPublicNetworkAccess. Use v1beta20200601.DomainPropertiesPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DomainPropertiesStatusInputSchema (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)  Deprecated version of DomainPropertiesStatusInputSchema. Use v1beta20200601.DomainPropertiesStatusInputSchema instead\n    Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    DomainPropertiesStatusProvisioningState (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)  Deprecated version of DomainPropertiesStatusProvisioningState. Use v1beta20200601.DomainPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    DomainPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)  Deprecated version of DomainPropertiesStatusPublicNetworkAccess. Use v1beta20200601.DomainPropertiesStatusPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DomainProperties_StatusARM   (Appears on:Domain_StatusARM)  Deprecated version of DomainProperties_Status. Use v1beta20200601.DomainProperties_Status instead\n    Field Description      endpoint  string        inboundIpRules  []InboundIpRule_StatusARM         inputSchema  DomainPropertiesStatusInputSchema         inputSchemaMapping  InputSchemaMapping_StatusARM         metricResourceId  string        privateEndpointConnections  []PrivateEndpointConnection_Status_Domain_SubResourceEmbeddedARM         provisioningState  DomainPropertiesStatusProvisioningState         publicNetworkAccess  DomainPropertiesStatusPublicNetworkAccess         DomainTopicPropertiesStatusProvisioningState (string alias)  (Appears on:DomainTopicProperties_StatusARM, DomainTopic_Status)  Deprecated version of DomainTopicPropertiesStatusProvisioningState. Use v1beta20200601.DomainTopicPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    DomainTopicProperties_StatusARM   (Appears on:DomainTopic_StatusARM)  Deprecated version of DomainTopicProperties_Status. Use v1beta20200601.DomainTopicProperties_Status instead\n    Field Description      provisioningState  DomainTopicPropertiesStatusProvisioningState         DomainTopic_Status   (Appears on:DomainsTopic)  Deprecated version of DomainTopic_Status. Use v1beta20200601.DomainTopic_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        name  string        provisioningState  DomainTopicPropertiesStatusProvisioningState         systemData  SystemData_Status         type  string        DomainTopic_StatusARM   Deprecated version of DomainTopic_Status. Use v1beta20200601.DomainTopic_Status instead\n    Field Description      id  string        name  string        properties  DomainTopicProperties_StatusARM         systemData  SystemData_StatusARM         type  string        Domain_Status   (Appears on:Domain)  Deprecated version of Domain_Status. Use v1beta20200601.Domain_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endpoint  string        id  string        inboundIpRules  []InboundIpRule_Status         inputSchema  DomainPropertiesStatusInputSchema         inputSchemaMapping  InputSchemaMapping_Status         location  string        metricResourceId  string        name  string        privateEndpointConnections  []PrivateEndpointConnection_Status_Domain_SubResourceEmbedded         provisioningState  DomainPropertiesStatusProvisioningState         publicNetworkAccess  DomainPropertiesStatusPublicNetworkAccess         systemData  SystemData_Status         tags  map[string]string        type  string        Domain_StatusARM   Deprecated version of Domain_Status. Use v1beta20200601.Domain_Status instead\n    Field Description      id  string        location  string        name  string        properties  DomainProperties_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        DomainsTopic   Deprecated version of DomainsTopic. Use v1beta20200601.DomainsTopic instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DomainsTopics_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventgrid.azure.com/Domain resource\n    tags  map[string]string           status  DomainTopic_Status         DomainsTopics_Spec   (Appears on:DomainsTopic)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventgrid.azure.com/Domain resource\n    tags  map[string]string        DomainsTopics_SpecARM   Deprecated version of DomainsTopics_Spec. Use v1beta20200601.DomainsTopics_Spec instead\n    Field Description      location  string        name  string        tags  map[string]string        Domains_Spec   (Appears on:Domain)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    inboundIpRules  []InboundIpRule         inputSchema  DomainPropertiesInputSchema         inputSchemaMapping  JsonInputSchemaMapping         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DomainPropertiesPublicNetworkAccess         tags  map[string]string        Domains_SpecARM   Deprecated version of Domains_Spec. Use v1beta20200601.Domains_Spec instead\n    Field Description      location  string        name  string        properties  DomainPropertiesARM         tags  map[string]string        EventHubEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of EventHubEventSubscriptionDestination. Use v1beta20200601.EventHubEventSubscriptionDestination instead\n    Field Description      endpointType  EventHubEventSubscriptionDestinationEndpointType         properties  EventHubEventSubscriptionDestinationProperties         EventHubEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of EventHubEventSubscriptionDestination. Use v1beta20200601.EventHubEventSubscriptionDestination instead\n    Field Description      endpointType  EventHubEventSubscriptionDestinationEndpointType         properties  EventHubEventSubscriptionDestinationPropertiesARM         EventHubEventSubscriptionDestinationEndpointType (string alias)  (Appears on:EventHubEventSubscriptionDestination, EventHubEventSubscriptionDestinationARM)  Deprecated version of EventHubEventSubscriptionDestinationEndpointType. Use v1beta20200601.EventHubEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;EventHub\u0026#34;\n    EventHubEventSubscriptionDestinationProperties   (Appears on:EventHubEventSubscriptionDestination)  Deprecated version of EventHubEventSubscriptionDestinationProperties. Use v1beta20200601.EventHubEventSubscriptionDestinationProperties instead\n    Field Description      resourceReference  genruntime.ResourceReference         EventHubEventSubscriptionDestinationPropertiesARM   (Appears on:EventHubEventSubscriptionDestinationARM)  Deprecated version of EventHubEventSubscriptionDestinationProperties. Use v1beta20200601.EventHubEventSubscriptionDestinationProperties instead\n    Field Description      resourceId  string        EventSubscription   Deprecated version of EventSubscription. Use v1beta20200601.EventSubscription instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  EventSubscriptions_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetterDestination  StorageBlobDeadLetterDestination         destination  EventSubscriptionDestination         eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema         expirationTimeUtc  string        filter  EventSubscriptionFilter         labels  []string        location  string        owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    retryPolicy  RetryPolicy         tags  map[string]string           status  EventSubscription_Status         EventSubscriptionDestination   (Appears on:EventSubscriptions_Spec)  Deprecated version of EventSubscriptionDestination. Use v1beta20200601.EventSubscriptionDestination instead\n    Field Description      azureFunctionEventSubscriptionDestination  AzureFunctionEventSubscriptionDestination         eventHubEventSubscriptionDestination  EventHubEventSubscriptionDestination         hybridConnectionEventSubscriptionDestination  HybridConnectionEventSubscriptionDestination         serviceBusQueueEventSubscriptionDestination  ServiceBusQueueEventSubscriptionDestination         serviceBusTopicEventSubscriptionDestination  ServiceBusTopicEventSubscriptionDestination         storageQueueEventSubscriptionDestination  StorageQueueEventSubscriptionDestination         webHookEventSubscriptionDestination  WebHookEventSubscriptionDestination         EventSubscriptionDestinationARM   (Appears on:EventSubscriptionPropertiesARM)  Deprecated version of EventSubscriptionDestination. Use v1beta20200601.EventSubscriptionDestination instead\n    Field Description      azureFunctionEventSubscriptionDestination  AzureFunctionEventSubscriptionDestinationARM         eventHubEventSubscriptionDestination  EventHubEventSubscriptionDestinationARM         hybridConnectionEventSubscriptionDestination  HybridConnectionEventSubscriptionDestinationARM         serviceBusQueueEventSubscriptionDestination  ServiceBusQueueEventSubscriptionDestinationARM         serviceBusTopicEventSubscriptionDestination  ServiceBusTopicEventSubscriptionDestinationARM         storageQueueEventSubscriptionDestination  StorageQueueEventSubscriptionDestinationARM         webHookEventSubscriptionDestination  WebHookEventSubscriptionDestinationARM         EventSubscriptionDestinationStatusEndpointType (string alias)  (Appears on:EventSubscriptionDestination_Status, EventSubscriptionDestination_StatusARM)  Deprecated version of EventSubscriptionDestinationStatusEndpointType. Use v1beta20200601.EventSubscriptionDestinationStatusEndpointType instead\n    Value Description   \u0026#34;AzureFunction\u0026#34;\n  \u0026#34;EventHub\u0026#34;\n  \u0026#34;HybridConnection\u0026#34;\n  \u0026#34;ServiceBusQueue\u0026#34;\n  \u0026#34;ServiceBusTopic\u0026#34;\n  \u0026#34;StorageQueue\u0026#34;\n  \u0026#34;WebHook\u0026#34;\n    EventSubscriptionDestination_Status   (Appears on:EventSubscription_Status)  Deprecated version of EventSubscriptionDestination_Status. Use v1beta20200601.EventSubscriptionDestination_Status instead\n    Field Description      endpointType  EventSubscriptionDestinationStatusEndpointType         EventSubscriptionDestination_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)  Deprecated version of EventSubscriptionDestination_Status. Use v1beta20200601.EventSubscriptionDestination_Status instead\n    Field Description      endpointType  EventSubscriptionDestinationStatusEndpointType         EventSubscriptionFilter   (Appears on:EventSubscriptions_Spec)  Deprecated version of EventSubscriptionFilter. Use v1beta20200601.EventSubscriptionFilter instead\n    Field Description      advancedFilters  []AdvancedFilter         includedEventTypes  []string        isSubjectCaseSensitive  bool        subjectBeginsWith  string        subjectEndsWith  string        EventSubscriptionFilterARM   (Appears on:EventSubscriptionPropertiesARM)  Deprecated version of EventSubscriptionFilter. Use v1beta20200601.EventSubscriptionFilter instead\n    Field Description      advancedFilters  []AdvancedFilterARM         includedEventTypes  []string        isSubjectCaseSensitive  bool        subjectBeginsWith  string        subjectEndsWith  string        EventSubscriptionFilter_Status   (Appears on:EventSubscription_Status)  Deprecated version of EventSubscriptionFilter_Status. Use v1beta20200601.EventSubscriptionFilter_Status instead\n    Field Description      advancedFilters  []AdvancedFilter_Status         includedEventTypes  []string        isSubjectCaseSensitive  bool        subjectBeginsWith  string        subjectEndsWith  string        EventSubscriptionFilter_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)  Deprecated version of EventSubscriptionFilter_Status. Use v1beta20200601.EventSubscriptionFilter_Status instead\n    Field Description      advancedFilters  []AdvancedFilter_StatusARM         includedEventTypes  []string        isSubjectCaseSensitive  bool        subjectBeginsWith  string        subjectEndsWith  string        EventSubscriptionPropertiesARM   (Appears on:EventSubscriptions_SpecARM)  Deprecated version of EventSubscriptionProperties. Use v1beta20200601.EventSubscriptionProperties instead\n    Field Description      deadLetterDestination  StorageBlobDeadLetterDestinationARM         destination  EventSubscriptionDestinationARM         eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema         expirationTimeUtc  string        filter  EventSubscriptionFilterARM         labels  []string        retryPolicy  RetryPolicyARM         EventSubscriptionPropertiesEventDeliverySchema (string alias)  (Appears on:EventSubscriptionPropertiesARM, EventSubscriptions_Spec)  Deprecated version of EventSubscriptionPropertiesEventDeliverySchema. Use v1beta20200601.EventSubscriptionPropertiesEventDeliverySchema instead\n    Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomInputSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    EventSubscriptionPropertiesStatusEventDeliverySchema (string alias)  (Appears on:EventSubscriptionProperties_StatusARM, EventSubscription_Status)  Deprecated version of EventSubscriptionPropertiesStatusEventDeliverySchema. Use v1beta20200601.EventSubscriptionPropertiesStatusEventDeliverySchema instead\n    Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomInputSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    EventSubscriptionPropertiesStatusProvisioningState (string alias)  (Appears on:EventSubscriptionProperties_StatusARM, EventSubscription_Status)  Deprecated version of EventSubscriptionPropertiesStatusProvisioningState. Use v1beta20200601.EventSubscriptionPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;AwaitingManualAction\u0026#34;\n  \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    EventSubscriptionProperties_StatusARM   (Appears on:EventSubscription_StatusARM)  Deprecated version of EventSubscriptionProperties_Status. Use v1beta20200601.EventSubscriptionProperties_Status instead\n    Field Description      deadLetterDestination  DeadLetterDestination_StatusARM         destination  EventSubscriptionDestination_StatusARM         eventDeliverySchema  EventSubscriptionPropertiesStatusEventDeliverySchema         expirationTimeUtc  string        filter  EventSubscriptionFilter_StatusARM         labels  []string        provisioningState  EventSubscriptionPropertiesStatusProvisioningState         retryPolicy  RetryPolicy_StatusARM         topic  string        EventSubscription_Status   (Appears on:EventSubscription)  Deprecated version of EventSubscription_Status. Use v1beta20200601.EventSubscription_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    deadLetterDestination  DeadLetterDestination_Status         destination  EventSubscriptionDestination_Status         eventDeliverySchema  EventSubscriptionPropertiesStatusEventDeliverySchema         expirationTimeUtc  string        filter  EventSubscriptionFilter_Status         id  string        labels  []string        name  string        provisioningState  EventSubscriptionPropertiesStatusProvisioningState         retryPolicy  RetryPolicy_Status         systemData  SystemData_Status         topic  string        type  string        EventSubscription_StatusARM   Deprecated version of EventSubscription_Status. Use v1beta20200601.EventSubscription_Status instead\n    Field Description      id  string        name  string        properties  EventSubscriptionProperties_StatusARM         systemData  SystemData_StatusARM         type  string        EventSubscriptions_Spec   (Appears on:EventSubscription)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetterDestination  StorageBlobDeadLetterDestination         destination  EventSubscriptionDestination         eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema         expirationTimeUtc  string        filter  EventSubscriptionFilter         labels  []string        location  string        owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    retryPolicy  RetryPolicy         tags  map[string]string        EventSubscriptions_SpecARM   Deprecated version of EventSubscriptions_Spec. Use v1beta20200601.EventSubscriptions_Spec instead\n    Field Description      location  string        name  string        properties  EventSubscriptionPropertiesARM         tags  map[string]string        HybridConnectionEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of HybridConnectionEventSubscriptionDestination. Use v1beta20200601.HybridConnectionEventSubscriptionDestination instead\n    Field Description      endpointType  HybridConnectionEventSubscriptionDestinationEndpointType         properties  HybridConnectionEventSubscriptionDestinationProperties         HybridConnectionEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of HybridConnectionEventSubscriptionDestination. Use v1beta20200601.HybridConnectionEventSubscriptionDestination instead\n    Field Description      endpointType  HybridConnectionEventSubscriptionDestinationEndpointType         properties  HybridConnectionEventSubscriptionDestinationPropertiesARM         HybridConnectionEventSubscriptionDestinationEndpointType (string alias)  (Appears on:HybridConnectionEventSubscriptionDestination, HybridConnectionEventSubscriptionDestinationARM)  Deprecated version of HybridConnectionEventSubscriptionDestinationEndpointType. Use v1beta20200601.HybridConnectionEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;HybridConnection\u0026#34;\n    HybridConnectionEventSubscriptionDestinationProperties   (Appears on:HybridConnectionEventSubscriptionDestination)  Deprecated version of HybridConnectionEventSubscriptionDestinationProperties. Use v1beta20200601.HybridConnectionEventSubscriptionDestinationProperties instead\n    Field Description      resourceReference  genruntime.ResourceReference         HybridConnectionEventSubscriptionDestinationPropertiesARM   (Appears on:HybridConnectionEventSubscriptionDestinationARM)  Deprecated version of HybridConnectionEventSubscriptionDestinationProperties. Use v1beta20200601.HybridConnectionEventSubscriptionDestinationProperties instead\n    Field Description      resourceId  string        InboundIpRule   (Appears on:Domains_Spec)  Deprecated version of InboundIpRule. Use v1beta20200601.InboundIpRule instead\n    Field Description      action  InboundIpRuleAction         ipMask  string        InboundIpRuleARM   (Appears on:DomainPropertiesARM)  Deprecated version of InboundIpRule. Use v1beta20200601.InboundIpRule instead\n    Field Description      action  InboundIpRuleAction         ipMask  string        InboundIpRuleAction (string alias)  (Appears on:InboundIpRule, InboundIpRuleARM)  Deprecated version of InboundIpRuleAction. Use v1beta20200601.InboundIpRuleAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    InboundIpRuleStatusAction (string alias)  (Appears on:InboundIpRule_Status, InboundIpRule_StatusARM)  Deprecated version of InboundIpRuleStatusAction. Use v1beta20200601.InboundIpRuleStatusAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    InboundIpRule_Status   (Appears on:Domain_Status, Topic_Status)  Deprecated version of InboundIpRule_Status. Use v1beta20200601.InboundIpRule_Status instead\n    Field Description      action  InboundIpRuleStatusAction         ipMask  string        InboundIpRule_StatusARM   (Appears on:DomainProperties_StatusARM, TopicProperties_StatusARM)  Deprecated version of InboundIpRule_Status. Use v1beta20200601.InboundIpRule_Status instead\n    Field Description      action  InboundIpRuleStatusAction         ipMask  string        InputSchemaMappingStatusInputSchemaMappingType (string alias)  (Appears on:InputSchemaMapping_Status, InputSchemaMapping_StatusARM)  Deprecated version of InputSchemaMappingStatusInputSchemaMappingType. Use v1beta20200601.InputSchemaMappingStatusInputSchemaMappingType instead\n    Value Description   \u0026#34;Json\u0026#34;\n    InputSchemaMapping_Status   (Appears on:Domain_Status, Topic_Status)  Deprecated version of InputSchemaMapping_Status. Use v1beta20200601.InputSchemaMapping_Status instead\n    Field Description      inputSchemaMappingType  InputSchemaMappingStatusInputSchemaMappingType         InputSchemaMapping_StatusARM   (Appears on:DomainProperties_StatusARM, TopicProperties_StatusARM)  Deprecated version of InputSchemaMapping_Status. Use v1beta20200601.InputSchemaMapping_Status instead\n    Field Description      inputSchemaMappingType  InputSchemaMappingStatusInputSchemaMappingType         JsonField   (Appears on:JsonInputSchemaMappingProperties)  Deprecated version of JsonField. Use v1beta20200601.JsonField instead\n    Field Description      sourceField  string        JsonFieldARM   (Appears on:JsonInputSchemaMappingPropertiesARM)  Deprecated version of JsonField. Use v1beta20200601.JsonField instead\n    Field Description      sourceField  string        JsonFieldWithDefault   (Appears on:JsonInputSchemaMappingProperties)  Deprecated version of JsonFieldWithDefault. Use v1beta20200601.JsonFieldWithDefault instead\n    Field Description      defaultValue  string        sourceField  string        JsonFieldWithDefaultARM   (Appears on:JsonInputSchemaMappingPropertiesARM)  Deprecated version of JsonFieldWithDefault. Use v1beta20200601.JsonFieldWithDefault instead\n    Field Description      defaultValue  string        sourceField  string        JsonInputSchemaMapping   (Appears on:Domains_Spec)  Deprecated version of JsonInputSchemaMapping. Use v1beta20200601.JsonInputSchemaMapping instead\n    Field Description      inputSchemaMappingType  JsonInputSchemaMappingInputSchemaMappingType         properties  JsonInputSchemaMappingProperties         JsonInputSchemaMappingARM   (Appears on:DomainPropertiesARM)  Deprecated version of JsonInputSchemaMapping. Use v1beta20200601.JsonInputSchemaMapping instead\n    Field Description      inputSchemaMappingType  JsonInputSchemaMappingInputSchemaMappingType         properties  JsonInputSchemaMappingPropertiesARM         JsonInputSchemaMappingInputSchemaMappingType (string alias)  (Appears on:JsonInputSchemaMapping, JsonInputSchemaMappingARM)  Deprecated version of JsonInputSchemaMappingInputSchemaMappingType. Use v1beta20200601.JsonInputSchemaMappingInputSchemaMappingType instead\n    Value Description   \u0026#34;Json\u0026#34;\n    JsonInputSchemaMappingProperties   (Appears on:JsonInputSchemaMapping)  Deprecated version of JsonInputSchemaMappingProperties. Use v1beta20200601.JsonInputSchemaMappingProperties instead\n    Field Description      dataVersion  JsonFieldWithDefault         eventTime  JsonField         eventType  JsonFieldWithDefault         id  JsonField         subject  JsonFieldWithDefault         topic  JsonField         JsonInputSchemaMappingPropertiesARM   (Appears on:JsonInputSchemaMappingARM)  Deprecated version of JsonInputSchemaMappingProperties. Use v1beta20200601.JsonInputSchemaMappingProperties instead\n    Field Description      dataVersion  JsonFieldWithDefaultARM         eventTime  JsonFieldARM         eventType  JsonFieldWithDefaultARM         id  JsonFieldARM         subject  JsonFieldWithDefaultARM         topic  JsonFieldARM         PrivateEndpointConnection_Status_Domain_SubResourceEmbedded   (Appears on:Domain_Status)  Deprecated version of PrivateEndpointConnection_Status_Domain_SubResourceEmbedded. Use v1beta20200601.PrivateEndpointConnection_Status_Domain_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_Domain_SubResourceEmbeddedARM   (Appears on:DomainProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_Domain_SubResourceEmbedded. Use v1beta20200601.PrivateEndpointConnection_Status_Domain_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_Topic_SubResourceEmbedded   (Appears on:Topic_Status)  Deprecated version of PrivateEndpointConnection_Status_Topic_SubResourceEmbedded. Use v1beta20200601.PrivateEndpointConnection_Status_Topic_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_Topic_SubResourceEmbeddedARM   (Appears on:TopicProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_Topic_SubResourceEmbedded. Use v1beta20200601.PrivateEndpointConnection_Status_Topic_SubResourceEmbedded instead\n    Field Description      id  string        RetryPolicy   (Appears on:EventSubscriptions_Spec)  Deprecated version of RetryPolicy. Use v1beta20200601.RetryPolicy instead\n    Field Description      eventTimeToLiveInMinutes  int        maxDeliveryAttempts  int        RetryPolicyARM   (Appears on:EventSubscriptionPropertiesARM)  Deprecated version of RetryPolicy. Use v1beta20200601.RetryPolicy instead\n    Field Description      eventTimeToLiveInMinutes  int        maxDeliveryAttempts  int        RetryPolicy_Status   (Appears on:EventSubscription_Status)  Deprecated version of RetryPolicy_Status. Use v1beta20200601.RetryPolicy_Status instead\n    Field Description      eventTimeToLiveInMinutes  int        maxDeliveryAttempts  int        RetryPolicy_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)  Deprecated version of RetryPolicy_Status. Use v1beta20200601.RetryPolicy_Status instead\n    Field Description      eventTimeToLiveInMinutes  int        maxDeliveryAttempts  int        ServiceBusQueueEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of ServiceBusQueueEventSubscriptionDestination. Use v1beta20200601.ServiceBusQueueEventSubscriptionDestination instead\n    Field Description      endpointType  ServiceBusQueueEventSubscriptionDestinationEndpointType         properties  ServiceBusQueueEventSubscriptionDestinationProperties         ServiceBusQueueEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of ServiceBusQueueEventSubscriptionDestination. Use v1beta20200601.ServiceBusQueueEventSubscriptionDestination instead\n    Field Description      endpointType  ServiceBusQueueEventSubscriptionDestinationEndpointType         properties  ServiceBusQueueEventSubscriptionDestinationPropertiesARM         ServiceBusQueueEventSubscriptionDestinationEndpointType (string alias)  (Appears on:ServiceBusQueueEventSubscriptionDestination, ServiceBusQueueEventSubscriptionDestinationARM)  Deprecated version of ServiceBusQueueEventSubscriptionDestinationEndpointType. Use v1beta20200601.ServiceBusQueueEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;ServiceBusQueue\u0026#34;\n    ServiceBusQueueEventSubscriptionDestinationProperties   (Appears on:ServiceBusQueueEventSubscriptionDestination)  Deprecated version of ServiceBusQueueEventSubscriptionDestinationProperties. Use v1beta20200601.ServiceBusQueueEventSubscriptionDestinationProperties instead\n    Field Description      resourceReference  genruntime.ResourceReference         ServiceBusQueueEventSubscriptionDestinationPropertiesARM   (Appears on:ServiceBusQueueEventSubscriptionDestinationARM)  Deprecated version of ServiceBusQueueEventSubscriptionDestinationProperties. Use v1beta20200601.ServiceBusQueueEventSubscriptionDestinationProperties instead\n    Field Description      resourceId  string        ServiceBusTopicEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of ServiceBusTopicEventSubscriptionDestination. Use v1beta20200601.ServiceBusTopicEventSubscriptionDestination instead\n    Field Description      endpointType  ServiceBusTopicEventSubscriptionDestinationEndpointType         properties  ServiceBusTopicEventSubscriptionDestinationProperties         ServiceBusTopicEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of ServiceBusTopicEventSubscriptionDestination. Use v1beta20200601.ServiceBusTopicEventSubscriptionDestination instead\n    Field Description      endpointType  ServiceBusTopicEventSubscriptionDestinationEndpointType         properties  ServiceBusTopicEventSubscriptionDestinationPropertiesARM         ServiceBusTopicEventSubscriptionDestinationEndpointType (string alias)  (Appears on:ServiceBusTopicEventSubscriptionDestination, ServiceBusTopicEventSubscriptionDestinationARM)  Deprecated version of ServiceBusTopicEventSubscriptionDestinationEndpointType. Use v1beta20200601.ServiceBusTopicEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;ServiceBusTopic\u0026#34;\n    ServiceBusTopicEventSubscriptionDestinationProperties   (Appears on:ServiceBusTopicEventSubscriptionDestination)  Deprecated version of ServiceBusTopicEventSubscriptionDestinationProperties. Use v1beta20200601.ServiceBusTopicEventSubscriptionDestinationProperties instead\n    Field Description      resourceReference  genruntime.ResourceReference         ServiceBusTopicEventSubscriptionDestinationPropertiesARM   (Appears on:ServiceBusTopicEventSubscriptionDestinationARM)  Deprecated version of ServiceBusTopicEventSubscriptionDestinationProperties. Use v1beta20200601.ServiceBusTopicEventSubscriptionDestinationProperties instead\n    Field Description      resourceId  string        StorageBlobDeadLetterDestination   (Appears on:EventSubscriptions_Spec)  Deprecated version of StorageBlobDeadLetterDestination. Use v1beta20200601.StorageBlobDeadLetterDestination instead\n    Field Description      endpointType  StorageBlobDeadLetterDestinationEndpointType         properties  StorageBlobDeadLetterDestinationProperties         StorageBlobDeadLetterDestinationARM   (Appears on:EventSubscriptionPropertiesARM)  Deprecated version of StorageBlobDeadLetterDestination. Use v1beta20200601.StorageBlobDeadLetterDestination instead\n    Field Description      endpointType  StorageBlobDeadLetterDestinationEndpointType         properties  StorageBlobDeadLetterDestinationPropertiesARM         StorageBlobDeadLetterDestinationEndpointType (string alias)  (Appears on:StorageBlobDeadLetterDestination, StorageBlobDeadLetterDestinationARM)  Deprecated version of StorageBlobDeadLetterDestinationEndpointType. Use v1beta20200601.StorageBlobDeadLetterDestinationEndpointType instead\n    Value Description   \u0026#34;StorageBlob\u0026#34;\n    StorageBlobDeadLetterDestinationProperties   (Appears on:StorageBlobDeadLetterDestination)  Deprecated version of StorageBlobDeadLetterDestinationProperties. Use v1beta20200601.StorageBlobDeadLetterDestinationProperties instead\n    Field Description      blobContainerName  string        resourceReference  genruntime.ResourceReference         StorageBlobDeadLetterDestinationPropertiesARM   (Appears on:StorageBlobDeadLetterDestinationARM)  Deprecated version of StorageBlobDeadLetterDestinationProperties. Use v1beta20200601.StorageBlobDeadLetterDestinationProperties instead\n    Field Description      blobContainerName  string        resourceId  string        StorageQueueEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of StorageQueueEventSubscriptionDestination. Use v1beta20200601.StorageQueueEventSubscriptionDestination instead\n    Field Description      endpointType  StorageQueueEventSubscriptionDestinationEndpointType         properties  StorageQueueEventSubscriptionDestinationProperties         StorageQueueEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of StorageQueueEventSubscriptionDestination. Use v1beta20200601.StorageQueueEventSubscriptionDestination instead\n    Field Description      endpointType  StorageQueueEventSubscriptionDestinationEndpointType         properties  StorageQueueEventSubscriptionDestinationPropertiesARM         StorageQueueEventSubscriptionDestinationEndpointType (string alias)  (Appears on:StorageQueueEventSubscriptionDestination, StorageQueueEventSubscriptionDestinationARM)  Deprecated version of StorageQueueEventSubscriptionDestinationEndpointType. Use v1beta20200601.StorageQueueEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;StorageQueue\u0026#34;\n    StorageQueueEventSubscriptionDestinationProperties   (Appears on:StorageQueueEventSubscriptionDestination)  Deprecated version of StorageQueueEventSubscriptionDestinationProperties. Use v1beta20200601.StorageQueueEventSubscriptionDestinationProperties instead\n    Field Description      queueName  string        resourceReference  genruntime.ResourceReference         StorageQueueEventSubscriptionDestinationPropertiesARM   (Appears on:StorageQueueEventSubscriptionDestinationARM)  Deprecated version of StorageQueueEventSubscriptionDestinationProperties. Use v1beta20200601.StorageQueueEventSubscriptionDestinationProperties instead\n    Field Description      queueName  string        resourceId  string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20200601.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20200601.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:DomainTopic_Status, Domain_Status, EventSubscription_Status, Topic_Status)  Deprecated version of SystemData_Status. Use v1beta20200601.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:DomainTopic_StatusARM, Domain_StatusARM, EventSubscription_StatusARM, Topic_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20200601.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         Topic   Deprecated version of Topic. Use v1beta20200601.Topic instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Topics_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string           status  Topic_Status         TopicPropertiesStatusInputSchema (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)  Deprecated version of TopicPropertiesStatusInputSchema. Use v1beta20200601.TopicPropertiesStatusInputSchema instead\n    Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    TopicPropertiesStatusProvisioningState (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)  Deprecated version of TopicPropertiesStatusProvisioningState. Use v1beta20200601.TopicPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    TopicPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)  Deprecated version of TopicPropertiesStatusPublicNetworkAccess. Use v1beta20200601.TopicPropertiesStatusPublicNetworkAccess instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    TopicProperties_StatusARM   (Appears on:Topic_StatusARM)  Deprecated version of TopicProperties_Status. Use v1beta20200601.TopicProperties_Status instead\n    Field Description      endpoint  string        inboundIpRules  []InboundIpRule_StatusARM         inputSchema  TopicPropertiesStatusInputSchema         inputSchemaMapping  InputSchemaMapping_StatusARM         metricResourceId  string        privateEndpointConnections  []PrivateEndpointConnection_Status_Topic_SubResourceEmbeddedARM         provisioningState  TopicPropertiesStatusProvisioningState         publicNetworkAccess  TopicPropertiesStatusPublicNetworkAccess         Topic_Status   (Appears on:Topic)  Deprecated version of Topic_Status. Use v1beta20200601.Topic_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endpoint  string        id  string        inboundIpRules  []InboundIpRule_Status         inputSchema  TopicPropertiesStatusInputSchema         inputSchemaMapping  InputSchemaMapping_Status         location  string        metricResourceId  string        name  string        privateEndpointConnections  []PrivateEndpointConnection_Status_Topic_SubResourceEmbedded         provisioningState  TopicPropertiesStatusProvisioningState         publicNetworkAccess  TopicPropertiesStatusPublicNetworkAccess         systemData  SystemData_Status         tags  map[string]string        type  string        Topic_StatusARM   Deprecated version of Topic_Status. Use v1beta20200601.Topic_Status instead\n    Field Description      id  string        location  string        name  string        properties  TopicProperties_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        Topics_Spec   (Appears on:Topic)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string        Topics_SpecARM   Deprecated version of Topics_Spec. Use v1beta20200601.Topics_Spec instead\n    Field Description      location  string        name  string        tags  map[string]string        WebHookEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Deprecated version of WebHookEventSubscriptionDestination. Use v1beta20200601.WebHookEventSubscriptionDestination instead\n    Field Description      endpointType  WebHookEventSubscriptionDestinationEndpointType         properties  WebHookEventSubscriptionDestinationProperties         WebHookEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Deprecated version of WebHookEventSubscriptionDestination. Use v1beta20200601.WebHookEventSubscriptionDestination instead\n    Field Description      endpointType  WebHookEventSubscriptionDestinationEndpointType         properties  WebHookEventSubscriptionDestinationPropertiesARM         WebHookEventSubscriptionDestinationEndpointType (string alias)  (Appears on:WebHookEventSubscriptionDestination, WebHookEventSubscriptionDestinationARM)  Deprecated version of WebHookEventSubscriptionDestinationEndpointType. Use v1beta20200601.WebHookEventSubscriptionDestinationEndpointType instead\n    Value Description   \u0026#34;WebHook\u0026#34;\n    WebHookEventSubscriptionDestinationProperties   (Appears on:WebHookEventSubscriptionDestination)  Deprecated version of WebHookEventSubscriptionDestinationProperties. Use v1beta20200601.WebHookEventSubscriptionDestinationProperties instead\n    Field Description      azureActiveDirectoryApplicationIdOrUri  string        azureActiveDirectoryTenantId  string        endpointUrl  string        maxEventsPerBatch  int        preferredBatchSizeInKilobytes  int        WebHookEventSubscriptionDestinationPropertiesARM   (Appears on:WebHookEventSubscriptionDestinationARM)  Deprecated version of WebHookEventSubscriptionDestinationProperties. Use v1beta20200601.WebHookEventSubscriptionDestinationProperties instead\n    Field Description      azureActiveDirectoryApplicationIdOrUri  string        azureActiveDirectoryTenantId  string        endpointUrl  string        maxEventsPerBatch  int        preferredBatchSizeInKilobytes  int         "},{"id":48,"href":"/azure-service-operator/reference/eventgrid.v1beta20200601/","title":"eventgrid.azure.com/v1beta20200601","section":"References","content":"eventgrid.azure.com/v1beta20200601  Package v1beta20200601 contains API Schema definitions for the eventgrid v1beta20200601 API group\n Resource Types:  AdvancedFilter   (Appears on:EventSubscriptionFilter)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AdvancedFilter\n    Field Description      boolEqualsAdvancedFilter  AdvancedFilter_BoolEquals     BoolEquals: Mutually exclusive with all other properties\n    numberGreaterThanAdvancedFilter  AdvancedFilter_NumberGreaterThan     NumberGreaterThan: Mutually exclusive with all other properties\n    numberGreaterThanOrEqualsAdvancedFilter  AdvancedFilter_NumberGreaterThanOrEquals     NumberGreaterThanOrEquals: Mutually exclusive with all other properties\n    numberInAdvancedFilter  AdvancedFilter_NumberIn     NumberIn: Mutually exclusive with all other properties\n    numberLessThanAdvancedFilter  AdvancedFilter_NumberLessThan     NumberLessThan: Mutually exclusive with all other properties\n    numberLessThanOrEqualsAdvancedFilter  AdvancedFilter_NumberLessThanOrEquals     NumberLessThanOrEquals: Mutually exclusive with all other properties\n    numberNotInAdvancedFilter  AdvancedFilter_NumberNotIn     NumberNotIn: Mutually exclusive with all other properties\n    stringBeginsWithAdvancedFilter  AdvancedFilter_StringBeginsWith     StringBeginsWith: Mutually exclusive with all other properties\n    stringContainsAdvancedFilter  AdvancedFilter_StringContains     StringContains: Mutually exclusive with all other properties\n    stringEndsWithAdvancedFilter  AdvancedFilter_StringEndsWith     StringEndsWith: Mutually exclusive with all other properties\n    stringInAdvancedFilter  AdvancedFilter_StringIn     StringIn: Mutually exclusive with all other properties\n    stringNotInAdvancedFilter  AdvancedFilter_StringNotIn     StringNotIn: Mutually exclusive with all other properties\n    AdvancedFilterARM   (Appears on:EventSubscriptionFilterARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AdvancedFilter\n    Field Description      boolEqualsAdvancedFilter  AdvancedFilter_BoolEqualsARM     BoolEquals: Mutually exclusive with all other properties\n    numberGreaterThanAdvancedFilter  AdvancedFilter_NumberGreaterThanARM     NumberGreaterThan: Mutually exclusive with all other properties\n    numberGreaterThanOrEqualsAdvancedFilter  AdvancedFilter_NumberGreaterThanOrEqualsARM     NumberGreaterThanOrEquals: Mutually exclusive with all other properties\n    numberInAdvancedFilter  AdvancedFilter_NumberInARM     NumberIn: Mutually exclusive with all other properties\n    numberLessThanAdvancedFilter  AdvancedFilter_NumberLessThanARM     NumberLessThan: Mutually exclusive with all other properties\n    numberLessThanOrEqualsAdvancedFilter  AdvancedFilter_NumberLessThanOrEqualsARM     NumberLessThanOrEquals: Mutually exclusive with all other properties\n    numberNotInAdvancedFilter  AdvancedFilter_NumberNotInARM     NumberNotIn: Mutually exclusive with all other properties\n    stringBeginsWithAdvancedFilter  AdvancedFilter_StringBeginsWithARM     StringBeginsWith: Mutually exclusive with all other properties\n    stringContainsAdvancedFilter  AdvancedFilter_StringContainsARM     StringContains: Mutually exclusive with all other properties\n    stringEndsWithAdvancedFilter  AdvancedFilter_StringEndsWithARM     StringEndsWith: Mutually exclusive with all other properties\n    stringInAdvancedFilter  AdvancedFilter_StringInARM     StringIn: Mutually exclusive with all other properties\n    stringNotInAdvancedFilter  AdvancedFilter_StringNotInARM     StringNotIn: Mutually exclusive with all other properties\n    AdvancedFilterBoolEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_BoolEquals, AdvancedFilter_BoolEqualsARM)      Value Description   \u0026#34;BoolEquals\u0026#34;\n    AdvancedFilterNumberGreaterThanOperatorType (string alias)  (Appears on:AdvancedFilter_NumberGreaterThan, AdvancedFilter_NumberGreaterThanARM)      Value Description   \u0026#34;NumberGreaterThan\u0026#34;\n    AdvancedFilterNumberGreaterThanOrEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_NumberGreaterThanOrEquals, AdvancedFilter_NumberGreaterThanOrEqualsARM)      Value Description   \u0026#34;NumberGreaterThanOrEquals\u0026#34;\n    AdvancedFilterNumberInOperatorType (string alias)  (Appears on:AdvancedFilter_NumberIn, AdvancedFilter_NumberInARM)      Value Description   \u0026#34;NumberIn\u0026#34;\n    AdvancedFilterNumberLessThanOperatorType (string alias)  (Appears on:AdvancedFilter_NumberLessThan, AdvancedFilter_NumberLessThanARM)      Value Description   \u0026#34;NumberLessThan\u0026#34;\n    AdvancedFilterNumberLessThanOrEqualsOperatorType (string alias)  (Appears on:AdvancedFilter_NumberLessThanOrEquals, AdvancedFilter_NumberLessThanOrEqualsARM)      Value Description   \u0026#34;NumberLessThanOrEquals\u0026#34;\n    AdvancedFilterNumberNotInOperatorType (string alias)  (Appears on:AdvancedFilter_NumberNotIn, AdvancedFilter_NumberNotInARM)      Value Description   \u0026#34;NumberNotIn\u0026#34;\n    AdvancedFilterStatusOperatorType (string alias)  (Appears on:AdvancedFilter_Status, AdvancedFilter_StatusARM)      Value Description   \u0026#34;BoolEquals\u0026#34;\n  \u0026#34;NumberGreaterThan\u0026#34;\n  \u0026#34;NumberGreaterThanOrEquals\u0026#34;\n  \u0026#34;NumberIn\u0026#34;\n  \u0026#34;NumberLessThan\u0026#34;\n  \u0026#34;NumberLessThanOrEquals\u0026#34;\n  \u0026#34;NumberNotIn\u0026#34;\n  \u0026#34;StringBeginsWith\u0026#34;\n  \u0026#34;StringContains\u0026#34;\n  \u0026#34;StringEndsWith\u0026#34;\n  \u0026#34;StringIn\u0026#34;\n  \u0026#34;StringNotIn\u0026#34;\n    AdvancedFilterStringBeginsWithOperatorType (string alias)  (Appears on:AdvancedFilter_StringBeginsWith, AdvancedFilter_StringBeginsWithARM)      Value Description   \u0026#34;StringBeginsWith\u0026#34;\n    AdvancedFilterStringContainsOperatorType (string alias)  (Appears on:AdvancedFilter_StringContains, AdvancedFilter_StringContainsARM)      Value Description   \u0026#34;StringContains\u0026#34;\n    AdvancedFilterStringEndsWithOperatorType (string alias)  (Appears on:AdvancedFilter_StringEndsWith, AdvancedFilter_StringEndsWithARM)      Value Description   \u0026#34;StringEndsWith\u0026#34;\n    AdvancedFilterStringInOperatorType (string alias)  (Appears on:AdvancedFilter_StringIn, AdvancedFilter_StringInARM)      Value Description   \u0026#34;StringIn\u0026#34;\n    AdvancedFilterStringNotInOperatorType (string alias)  (Appears on:AdvancedFilter_StringNotIn, AdvancedFilter_StringNotInARM)      Value Description   \u0026#34;StringNotIn\u0026#34;\n    AdvancedFilter_BoolEquals   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterBoolEqualsOperatorType         value  bool    Value: The boolean filter value.\n    AdvancedFilter_BoolEqualsARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterBoolEqualsOperatorType         value  bool    Value: The boolean filter value.\n    AdvancedFilter_NumberGreaterThan   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberGreaterThanOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberGreaterThanARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberGreaterThanOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberGreaterThanOrEquals   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberGreaterThanOrEqualsOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberGreaterThanOrEqualsARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberGreaterThanOrEqualsOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberIn   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberInOperatorType         values  []float64    Values: The set of filter values.\n    AdvancedFilter_NumberInARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberInOperatorType         values  []float64    Values: The set of filter values.\n    AdvancedFilter_NumberLessThan   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberLessThanOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberLessThanARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberLessThanOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberLessThanOrEquals   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberLessThanOrEqualsOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberLessThanOrEqualsARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberLessThanOrEqualsOperatorType         value  float64    Value: The filter value.\n    AdvancedFilter_NumberNotIn   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberNotInOperatorType         values  []float64    Values: The set of filter values.\n    AdvancedFilter_NumberNotInARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterNumberNotInOperatorType         values  []float64    Values: The set of filter values.\n    AdvancedFilter_Status   (Appears on:EventSubscriptionFilter_Status)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStatusOperatorType     OperatorType: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.\n    AdvancedFilter_StatusARM   (Appears on:EventSubscriptionFilter_StatusARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStatusOperatorType     OperatorType: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.\n    AdvancedFilter_StringBeginsWith   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringBeginsWithOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringBeginsWithARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringBeginsWithOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringContains   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringContainsOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringContainsARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringContainsOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringEndsWith   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringEndsWithOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringEndsWithARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringEndsWithOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringIn   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringInOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringInARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringInOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringNotIn   (Appears on:AdvancedFilter)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringNotInOperatorType         values  []string    Values: The set of filter values.\n    AdvancedFilter_StringNotInARM   (Appears on:AdvancedFilterARM)      Field Description      key  string    Key: The field/property in the event based on which you want to filter.\n    operatorType  AdvancedFilterStringNotInOperatorType         values  []string    Values: The set of filter values.\n    AzureFunctionEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestination\n    Field Description      endpointType  AzureFunctionEventSubscriptionDestinationEndpointType         properties  AzureFunctionEventSubscriptionDestinationProperties     Properties: The properties that represent the Azure Function destination of an event subscription.\n    AzureFunctionEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestination\n    Field Description      endpointType  AzureFunctionEventSubscriptionDestinationEndpointType         properties  AzureFunctionEventSubscriptionDestinationPropertiesARM     Properties: The properties that represent the Azure Function destination of an event subscription.\n    AzureFunctionEventSubscriptionDestinationEndpointType (string alias)  (Appears on:AzureFunctionEventSubscriptionDestination, AzureFunctionEventSubscriptionDestinationARM)      Value Description   \u0026#34;AzureFunction\u0026#34;\n    AzureFunctionEventSubscriptionDestinationProperties   (Appears on:AzureFunctionEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestinationProperties\n    Field Description      maxEventsPerBatch  int    MaxEventsPerBatch: Maximum number of events per batch.\n    preferredBatchSizeInKilobytes  int    PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.\n    resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.\n    AzureFunctionEventSubscriptionDestinationPropertiesARM   (Appears on:AzureFunctionEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/AzureFunctionEventSubscriptionDestinationProperties\n    Field Description      maxEventsPerBatch  int    MaxEventsPerBatch: Maximum number of events per batch.\n    preferredBatchSizeInKilobytes  int    PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.\n    resourceId  string        DeadLetterDestinationStatusEndpointType (string alias)  (Appears on:DeadLetterDestination_Status, DeadLetterDestination_StatusARM)      Value Description   \u0026#34;StorageBlob\u0026#34;\n    DeadLetterDestination_Status   (Appears on:EventSubscription_Status)      Field Description      endpointType  DeadLetterDestinationStatusEndpointType     EndpointType: Type of the endpoint for the dead letter destination\n    DeadLetterDestination_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)      Field Description      endpointType  DeadLetterDestinationStatusEndpointType     EndpointType: Type of the endpoint for the dead letter destination\n    Domain   Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/resourceDefinitions/domains\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Domains_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    inboundIpRules  []InboundIpRule     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  DomainPropertiesInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the domain.\n    inputSchemaMapping  JsonInputSchemaMapping     InputSchemaMapping: By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is \u0026lsquo;JsonInputSchemaMapping\u0026rsquo;.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DomainPropertiesPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring .\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Domain_Status         DomainPropertiesARM   (Appears on:Domains_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/DomainProperties\n    Field Description      inboundIpRules  []InboundIpRuleARM     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  DomainPropertiesInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the domain.\n    inputSchemaMapping  JsonInputSchemaMappingARM     InputSchemaMapping: By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is \u0026lsquo;JsonInputSchemaMapping\u0026rsquo;.\n    publicNetworkAccess  DomainPropertiesPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring .\n    DomainPropertiesInputSchema (string alias)  (Appears on:DomainPropertiesARM, Domains_Spec)      Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    DomainPropertiesPublicNetworkAccess (string alias)  (Appears on:DomainPropertiesARM, Domains_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DomainPropertiesStatusInputSchema (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)      Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    DomainPropertiesStatusProvisioningState (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    DomainPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:DomainProperties_StatusARM, Domain_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    DomainProperties_StatusARM   (Appears on:Domain_StatusARM)      Field Description      endpoint  string    Endpoint: Endpoint for the domain.\n    inboundIpRules  []InboundIpRule_StatusARM     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  DomainPropertiesStatusInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the domain.\n    inputSchemaMapping  InputSchemaMapping_StatusARM     InputSchemaMapping: Information about the InputSchemaMapping which specified the info about mapping event payload.\n    metricResourceId  string    MetricResourceId: Metric resource id for the domain.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_Domain_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  DomainPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the domain.\n    publicNetworkAccess  DomainPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring     DomainTopicPropertiesStatusProvisioningState (string alias)  (Appears on:DomainTopicProperties_StatusARM, DomainTopic_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    DomainTopicProperties_StatusARM   (Appears on:DomainTopic_StatusARM)      Field Description      provisioningState  DomainTopicPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the domain topic.\n    DomainTopic_Status   (Appears on:DomainsTopic)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified identifier of the resource.\n    name  string    Name: Name of the resource.\n    provisioningState  DomainTopicPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the domain topic.\n    systemData  SystemData_Status     SystemData: The system metadata relating to Domain Topic resource.\n    type  string    Type: Type of the resource.\n    DomainTopic_StatusARM       Field Description      id  string    Id: Fully qualified identifier of the resource.\n    name  string    Name: Name of the resource.\n    properties  DomainTopicProperties_StatusARM     Properties: Properties of the Domain Topic.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to Domain Topic resource.\n    type  string    Type: Type of the resource.\n    Domain_Status   (Appears on:Domain)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endpoint  string    Endpoint: Endpoint for the domain.\n    id  string    Id: Fully qualified identifier of the resource.\n    inboundIpRules  []InboundIpRule_Status     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  DomainPropertiesStatusInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the domain.\n    inputSchemaMapping  InputSchemaMapping_Status     InputSchemaMapping: Information about the InputSchemaMapping which specified the info about mapping event payload.\n    location  string    Location: Location of the resource.\n    metricResourceId  string    MetricResourceId: Metric resource id for the domain.\n    name  string    Name: Name of the resource.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_Domain_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  DomainPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the domain.\n    publicNetworkAccess  DomainPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring     systemData  SystemData_Status     SystemData: The system metadata relating to Domain resource.\n    tags  map[string]string    Tags: Tags of the resource.\n    type  string    Type: Type of the resource.\n    Domain_StatusARM       Field Description      id  string    Id: Fully qualified identifier of the resource.\n    location  string    Location: Location of the resource.\n    name  string    Name: Name of the resource.\n    properties  DomainProperties_StatusARM     Properties: Properties of the domain.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to Domain resource.\n    tags  map[string]string    Tags: Tags of the resource.\n    type  string    Type: Type of the resource.\n    DomainsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-06-01\u0026#34;\n    DomainsTopic   Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/resourceDefinitions/domains_topics\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  DomainsTopics_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventgrid.azure.com/Domain resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  DomainTopic_Status         DomainsTopicsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-06-01\u0026#34;\n    DomainsTopics_Spec   (Appears on:DomainsTopic)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventgrid.azure.com/Domain resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    DomainsTopics_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the domain topic.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Domains_Spec   (Appears on:Domain)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    inboundIpRules  []InboundIpRule     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  DomainPropertiesInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the domain.\n    inputSchemaMapping  JsonInputSchemaMapping     InputSchemaMapping: By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is \u0026lsquo;JsonInputSchemaMapping\u0026rsquo;.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  DomainPropertiesPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring .\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Domains_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  DomainPropertiesARM     Properties: Properties of the Domain.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    EventHubEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestination\n    Field Description      endpointType  EventHubEventSubscriptionDestinationEndpointType         properties  EventHubEventSubscriptionDestinationProperties     Properties: The properties for a event hub destination.\n    EventHubEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestination\n    Field Description      endpointType  EventHubEventSubscriptionDestinationEndpointType         properties  EventHubEventSubscriptionDestinationPropertiesARM     Properties: The properties for a event hub destination.\n    EventHubEventSubscriptionDestinationEndpointType (string alias)  (Appears on:EventHubEventSubscriptionDestination, EventHubEventSubscriptionDestinationARM)      Value Description   \u0026#34;EventHub\u0026#34;\n    EventHubEventSubscriptionDestinationProperties   (Appears on:EventHubEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestinationProperties\n    Field Description      resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.\n    EventHubEventSubscriptionDestinationPropertiesARM   (Appears on:EventHubEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventHubEventSubscriptionDestinationProperties\n    Field Description      resourceId  string        EventSubscription   Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/unknown_resourceDefinitions/eventSubscriptions\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  EventSubscriptions_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetterDestination  StorageBlobDeadLetterDestination     DeadLetterDestination: Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.\n    destination  EventSubscriptionDestination     Destination: Information about the destination for an event subscription.\n    eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema     EventDeliverySchema: The event delivery schema for the event subscription.\n    expirationTimeUtc  string    ExpirationTimeUtc: Expiration time of the event subscription.\n    filter  EventSubscriptionFilter     Filter: Filter for the Event Subscription.\n    labels  []string    Labels: List of user defined labels.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    retryPolicy  RetryPolicy     RetryPolicy: Information about the retry policy for an event subscription.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  EventSubscription_Status         EventSubscriptionDestination   (Appears on:EventSubscriptions_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionDestination\n    Field Description      azureFunctionEventSubscriptionDestination  AzureFunctionEventSubscriptionDestination     AzureFunction: Mutually exclusive with all other properties\n    eventHubEventSubscriptionDestination  EventHubEventSubscriptionDestination     EventHub: Mutually exclusive with all other properties\n    hybridConnectionEventSubscriptionDestination  HybridConnectionEventSubscriptionDestination     HybridConnection: Mutually exclusive with all other properties\n    serviceBusQueueEventSubscriptionDestination  ServiceBusQueueEventSubscriptionDestination     ServiceBusQueue: Mutually exclusive with all other properties\n    serviceBusTopicEventSubscriptionDestination  ServiceBusTopicEventSubscriptionDestination     ServiceBusTopic: Mutually exclusive with all other properties\n    storageQueueEventSubscriptionDestination  StorageQueueEventSubscriptionDestination     StorageQueue: Mutually exclusive with all other properties\n    webHookEventSubscriptionDestination  WebHookEventSubscriptionDestination     WebHook: Mutually exclusive with all other properties\n    EventSubscriptionDestinationARM   (Appears on:EventSubscriptionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionDestination\n    Field Description      azureFunctionEventSubscriptionDestination  AzureFunctionEventSubscriptionDestinationARM     AzureFunction: Mutually exclusive with all other properties\n    eventHubEventSubscriptionDestination  EventHubEventSubscriptionDestinationARM     EventHub: Mutually exclusive with all other properties\n    hybridConnectionEventSubscriptionDestination  HybridConnectionEventSubscriptionDestinationARM     HybridConnection: Mutually exclusive with all other properties\n    serviceBusQueueEventSubscriptionDestination  ServiceBusQueueEventSubscriptionDestinationARM     ServiceBusQueue: Mutually exclusive with all other properties\n    serviceBusTopicEventSubscriptionDestination  ServiceBusTopicEventSubscriptionDestinationARM     ServiceBusTopic: Mutually exclusive with all other properties\n    storageQueueEventSubscriptionDestination  StorageQueueEventSubscriptionDestinationARM     StorageQueue: Mutually exclusive with all other properties\n    webHookEventSubscriptionDestination  WebHookEventSubscriptionDestinationARM     WebHook: Mutually exclusive with all other properties\n    EventSubscriptionDestinationStatusEndpointType (string alias)  (Appears on:EventSubscriptionDestination_Status, EventSubscriptionDestination_StatusARM)      Value Description   \u0026#34;AzureFunction\u0026#34;\n  \u0026#34;EventHub\u0026#34;\n  \u0026#34;HybridConnection\u0026#34;\n  \u0026#34;ServiceBusQueue\u0026#34;\n  \u0026#34;ServiceBusTopic\u0026#34;\n  \u0026#34;StorageQueue\u0026#34;\n  \u0026#34;WebHook\u0026#34;\n    EventSubscriptionDestination_Status   (Appears on:EventSubscription_Status)      Field Description      endpointType  EventSubscriptionDestinationStatusEndpointType     EndpointType: Type of the endpoint for the event subscription destination.\n    EventSubscriptionDestination_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)      Field Description      endpointType  EventSubscriptionDestinationStatusEndpointType     EndpointType: Type of the endpoint for the event subscription destination.\n    EventSubscriptionFilter   (Appears on:EventSubscriptions_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionFilter\n    Field Description      advancedFilters  []AdvancedFilter     AdvancedFilters: An array of advanced filters that are used for filtering event subscriptions.\n    includedEventTypes  []string    IncludedEventTypes: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.\n    isSubjectCaseSensitive  bool    IsSubjectCaseSensitive: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner.\n    subjectBeginsWith  string    SubjectBeginsWith: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path.\n    subjectEndsWith  string    SubjectEndsWith: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path.\n    EventSubscriptionFilterARM   (Appears on:EventSubscriptionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionFilter\n    Field Description      advancedFilters  []AdvancedFilterARM     AdvancedFilters: An array of advanced filters that are used for filtering event subscriptions.\n    includedEventTypes  []string    IncludedEventTypes: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.\n    isSubjectCaseSensitive  bool    IsSubjectCaseSensitive: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner.\n    subjectBeginsWith  string    SubjectBeginsWith: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path.\n    subjectEndsWith  string    SubjectEndsWith: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path.\n    EventSubscriptionFilter_Status   (Appears on:EventSubscription_Status)      Field Description      advancedFilters  []AdvancedFilter_Status     AdvancedFilters: An array of advanced filters that are used for filtering event subscriptions.\n    includedEventTypes  []string    IncludedEventTypes: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.\n    isSubjectCaseSensitive  bool    IsSubjectCaseSensitive: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner.\n    subjectBeginsWith  string    SubjectBeginsWith: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path.\n    subjectEndsWith  string    SubjectEndsWith: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path.\n    EventSubscriptionFilter_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)      Field Description      advancedFilters  []AdvancedFilter_StatusARM     AdvancedFilters: An array of advanced filters that are used for filtering event subscriptions.\n    includedEventTypes  []string    IncludedEventTypes: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.\n    isSubjectCaseSensitive  bool    IsSubjectCaseSensitive: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner.\n    subjectBeginsWith  string    SubjectBeginsWith: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path.\n    subjectEndsWith  string    SubjectEndsWith: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path.\n    EventSubscriptionPropertiesARM   (Appears on:EventSubscriptions_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/EventSubscriptionProperties\n    Field Description      deadLetterDestination  StorageBlobDeadLetterDestinationARM     DeadLetterDestination: Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.\n    destination  EventSubscriptionDestinationARM     Destination: Information about the destination for an event subscription.\n    eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema     EventDeliverySchema: The event delivery schema for the event subscription.\n    expirationTimeUtc  string    ExpirationTimeUtc: Expiration time of the event subscription.\n    filter  EventSubscriptionFilterARM     Filter: Filter for the Event Subscription.\n    labels  []string    Labels: List of user defined labels.\n    retryPolicy  RetryPolicyARM     RetryPolicy: Information about the retry policy for an event subscription.\n    EventSubscriptionPropertiesEventDeliverySchema (string alias)  (Appears on:EventSubscriptionPropertiesARM, EventSubscriptions_Spec)      Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomInputSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    EventSubscriptionPropertiesStatusEventDeliverySchema (string alias)  (Appears on:EventSubscriptionProperties_StatusARM, EventSubscription_Status)      Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomInputSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    EventSubscriptionPropertiesStatusProvisioningState (string alias)  (Appears on:EventSubscriptionProperties_StatusARM, EventSubscription_Status)      Value Description   \u0026#34;AwaitingManualAction\u0026#34;\n  \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    EventSubscriptionProperties_StatusARM   (Appears on:EventSubscription_StatusARM)      Field Description      deadLetterDestination  DeadLetterDestination_StatusARM     DeadLetterDestination: The DeadLetter destination of the event subscription.\n    destination  EventSubscriptionDestination_StatusARM     Destination: Information about the destination where events have to be delivered for the event subscription.\n    eventDeliverySchema  EventSubscriptionPropertiesStatusEventDeliverySchema     EventDeliverySchema: The event delivery schema for the event subscription.\n    expirationTimeUtc  string    ExpirationTimeUtc: Expiration time of the event subscription.\n    filter  EventSubscriptionFilter_StatusARM     Filter: Information about the filter for the event subscription.\n    labels  []string    Labels: List of user defined labels.\n    provisioningState  EventSubscriptionPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the event subscription.\n    retryPolicy  RetryPolicy_StatusARM     RetryPolicy: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.\n    topic  string    Topic: Name of the topic of the event subscription.\n    EventSubscription_Status   (Appears on:EventSubscription)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    deadLetterDestination  DeadLetterDestination_Status     DeadLetterDestination: The DeadLetter destination of the event subscription.\n    destination  EventSubscriptionDestination_Status     Destination: Information about the destination where events have to be delivered for the event subscription.\n    eventDeliverySchema  EventSubscriptionPropertiesStatusEventDeliverySchema     EventDeliverySchema: The event delivery schema for the event subscription.\n    expirationTimeUtc  string    ExpirationTimeUtc: Expiration time of the event subscription.\n    filter  EventSubscriptionFilter_Status     Filter: Information about the filter for the event subscription.\n    id  string    Id: Fully qualified identifier of the resource.\n    labels  []string    Labels: List of user defined labels.\n    name  string    Name: Name of the resource.\n    provisioningState  EventSubscriptionPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the event subscription.\n    retryPolicy  RetryPolicy_Status     RetryPolicy: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.\n    systemData  SystemData_Status     SystemData: The system metadata relating to Event Subscription resource.\n    topic  string    Topic: Name of the topic of the event subscription.\n    type  string    Type: Type of the resource.\n    EventSubscription_StatusARM       Field Description      id  string    Id: Fully qualified identifier of the resource.\n    name  string    Name: Name of the resource.\n    properties  EventSubscriptionProperties_StatusARM     Properties: Properties of the event subscription.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to Event Subscription resource.\n    type  string    Type: Type of the resource.\n    EventSubscriptionsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-06-01\u0026#34;\n    EventSubscriptions_Spec   (Appears on:EventSubscription)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetterDestination  StorageBlobDeadLetterDestination     DeadLetterDestination: Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.\n    destination  EventSubscriptionDestination     Destination: Information about the destination for an event subscription.\n    eventDeliverySchema  EventSubscriptionPropertiesEventDeliverySchema     EventDeliverySchema: The event delivery schema for the event subscription.\n    expirationTimeUtc  string    ExpirationTimeUtc: Expiration time of the event subscription.\n    filter  EventSubscriptionFilter     Filter: Filter for the Event Subscription.\n    labels  []string    Labels: List of user defined labels.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.ArbitraryOwnerReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an extension resource, which means that any other Azure resource can be its owner.\n    retryPolicy  RetryPolicy     RetryPolicy: Information about the retry policy for an event subscription.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    EventSubscriptions_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.\n    properties  EventSubscriptionPropertiesARM     Properties: Properties of the Event Subscription.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    HybridConnectionEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestination\n    Field Description      endpointType  HybridConnectionEventSubscriptionDestinationEndpointType         properties  HybridConnectionEventSubscriptionDestinationProperties     Properties: The properties for a hybrid connection destination.\n    HybridConnectionEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestination\n    Field Description      endpointType  HybridConnectionEventSubscriptionDestinationEndpointType         properties  HybridConnectionEventSubscriptionDestinationPropertiesARM     Properties: The properties for a hybrid connection destination.\n    HybridConnectionEventSubscriptionDestinationEndpointType (string alias)  (Appears on:HybridConnectionEventSubscriptionDestination, HybridConnectionEventSubscriptionDestinationARM)      Value Description   \u0026#34;HybridConnection\u0026#34;\n    HybridConnectionEventSubscriptionDestinationProperties   (Appears on:HybridConnectionEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestinationProperties\n    Field Description      resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource ID of an hybrid connection that is the destination of an event subscription.\n    HybridConnectionEventSubscriptionDestinationPropertiesARM   (Appears on:HybridConnectionEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/HybridConnectionEventSubscriptionDestinationProperties\n    Field Description      resourceId  string        InboundIpRule   (Appears on:Domains_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/InboundIpRule\n    Field Description      action  InboundIpRuleAction     Action: Action to perform based on the match or no match of the IpMask.\n    ipMask  string    IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.\n    InboundIpRuleARM   (Appears on:DomainPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/InboundIpRule\n    Field Description      action  InboundIpRuleAction     Action: Action to perform based on the match or no match of the IpMask.\n    ipMask  string    IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.\n    InboundIpRuleAction (string alias)  (Appears on:InboundIpRule, InboundIpRuleARM)      Value Description   \u0026#34;Allow\u0026#34;\n    InboundIpRuleStatusAction (string alias)  (Appears on:InboundIpRule_Status, InboundIpRule_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n    InboundIpRule_Status   (Appears on:Domain_Status, Topic_Status)      Field Description      action  InboundIpRuleStatusAction     Action: Action to perform based on the match or no match of the IpMask.\n    ipMask  string    IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.\n    InboundIpRule_StatusARM   (Appears on:DomainProperties_StatusARM, TopicProperties_StatusARM)      Field Description      action  InboundIpRuleStatusAction     Action: Action to perform based on the match or no match of the IpMask.\n    ipMask  string    IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.\n    InputSchemaMappingStatusInputSchemaMappingType (string alias)  (Appears on:InputSchemaMapping_Status, InputSchemaMapping_StatusARM)      Value Description   \u0026#34;Json\u0026#34;\n    InputSchemaMapping_Status   (Appears on:Domain_Status, Topic_Status)      Field Description      inputSchemaMappingType  InputSchemaMappingStatusInputSchemaMappingType     InputSchemaMappingType: Type of the custom mapping\n    InputSchemaMapping_StatusARM   (Appears on:DomainProperties_StatusARM, TopicProperties_StatusARM)      Field Description      inputSchemaMappingType  InputSchemaMappingStatusInputSchemaMappingType     InputSchemaMappingType: Type of the custom mapping\n    JsonField   (Appears on:JsonInputSchemaMappingProperties)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonField\n    Field Description      sourceField  string    SourceField: Name of a field in the input event schema that\u0026rsquo;s to be used as the source of a mapping.\n    JsonFieldARM   (Appears on:JsonInputSchemaMappingPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonField\n    Field Description      sourceField  string    SourceField: Name of a field in the input event schema that\u0026rsquo;s to be used as the source of a mapping.\n    JsonFieldWithDefault   (Appears on:JsonInputSchemaMappingProperties)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonFieldWithDefault\n    Field Description      defaultValue  string    DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there\u0026rsquo;s no property with the specified name in the published JSON event payload.\n    sourceField  string    SourceField: Name of a field in the input event schema that\u0026rsquo;s to be used as the source of a mapping.\n    JsonFieldWithDefaultARM   (Appears on:JsonInputSchemaMappingPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonFieldWithDefault\n    Field Description      defaultValue  string    DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there\u0026rsquo;s no property with the specified name in the published JSON event payload.\n    sourceField  string    SourceField: Name of a field in the input event schema that\u0026rsquo;s to be used as the source of a mapping.\n    JsonInputSchemaMapping   (Appears on:Domains_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonInputSchemaMapping\n    Field Description      inputSchemaMappingType  JsonInputSchemaMappingInputSchemaMappingType         properties  JsonInputSchemaMappingProperties     Properties: This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.\n    JsonInputSchemaMappingARM   (Appears on:DomainPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonInputSchemaMapping\n    Field Description      inputSchemaMappingType  JsonInputSchemaMappingInputSchemaMappingType         properties  JsonInputSchemaMappingPropertiesARM     Properties: This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.\n    JsonInputSchemaMappingInputSchemaMappingType (string alias)  (Appears on:JsonInputSchemaMapping, JsonInputSchemaMappingARM)      Value Description   \u0026#34;Json\u0026#34;\n    JsonInputSchemaMappingProperties   (Appears on:JsonInputSchemaMapping)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonInputSchemaMappingProperties\n    Field Description      dataVersion  JsonFieldWithDefault     DataVersion: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    eventTime  JsonField     EventTime: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    eventType  JsonFieldWithDefault     EventType: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    id  JsonField     Id: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    subject  JsonFieldWithDefault     Subject: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    topic  JsonField     Topic: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    JsonInputSchemaMappingPropertiesARM   (Appears on:JsonInputSchemaMappingARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/JsonInputSchemaMappingProperties\n    Field Description      dataVersion  JsonFieldWithDefaultARM     DataVersion: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    eventTime  JsonFieldARM     EventTime: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    eventType  JsonFieldWithDefaultARM     EventType: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    id  JsonFieldARM     Id: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    subject  JsonFieldWithDefaultARM     Subject: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;subject\u0026rsquo;, \u0026lsquo;eventtype\u0026rsquo; and \u0026lsquo;dataversion\u0026rsquo; properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.\n    topic  JsonFieldARM     Topic: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the \u0026lsquo;id\u0026rsquo;, \u0026lsquo;topic\u0026rsquo; and \u0026lsquo;eventtime\u0026rsquo; properties. This represents a field in the input event schema.\n    PrivateEndpointConnection_Status_Domain_SubResourceEmbedded   (Appears on:Domain_Status)      Field Description      id  string    Id: Fully qualified identifier of the resource.\n    PrivateEndpointConnection_Status_Domain_SubResourceEmbeddedARM   (Appears on:DomainProperties_StatusARM)      Field Description      id  string    Id: Fully qualified identifier of the resource.\n    PrivateEndpointConnection_Status_Topic_SubResourceEmbedded   (Appears on:Topic_Status)      Field Description      id  string    Id: Fully qualified identifier of the resource.\n    PrivateEndpointConnection_Status_Topic_SubResourceEmbeddedARM   (Appears on:TopicProperties_StatusARM)      Field Description      id  string    Id: Fully qualified identifier of the resource.\n    RetryPolicy   (Appears on:EventSubscriptions_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/RetryPolicy\n    Field Description      eventTimeToLiveInMinutes  int    EventTimeToLiveInMinutes: Time To Live (in minutes) for events.\n    maxDeliveryAttempts  int    MaxDeliveryAttempts: Maximum number of delivery retry attempts for events.\n    RetryPolicyARM   (Appears on:EventSubscriptionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/RetryPolicy\n    Field Description      eventTimeToLiveInMinutes  int    EventTimeToLiveInMinutes: Time To Live (in minutes) for events.\n    maxDeliveryAttempts  int    MaxDeliveryAttempts: Maximum number of delivery retry attempts for events.\n    RetryPolicy_Status   (Appears on:EventSubscription_Status)      Field Description      eventTimeToLiveInMinutes  int    EventTimeToLiveInMinutes: Time To Live (in minutes) for events.\n    maxDeliveryAttempts  int    MaxDeliveryAttempts: Maximum number of delivery retry attempts for events.\n    RetryPolicy_StatusARM   (Appears on:EventSubscriptionProperties_StatusARM)      Field Description      eventTimeToLiveInMinutes  int    EventTimeToLiveInMinutes: Time To Live (in minutes) for events.\n    maxDeliveryAttempts  int    MaxDeliveryAttempts: Maximum number of delivery retry attempts for events.\n    ServiceBusQueueEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestination\n    Field Description      endpointType  ServiceBusQueueEventSubscriptionDestinationEndpointType         properties  ServiceBusQueueEventSubscriptionDestinationProperties     Properties: The properties that represent the Service Bus destination of an event subscription.\n    ServiceBusQueueEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestination\n    Field Description      endpointType  ServiceBusQueueEventSubscriptionDestinationEndpointType         properties  ServiceBusQueueEventSubscriptionDestinationPropertiesARM     Properties: The properties that represent the Service Bus destination of an event subscription.\n    ServiceBusQueueEventSubscriptionDestinationEndpointType (string alias)  (Appears on:ServiceBusQueueEventSubscriptionDestination, ServiceBusQueueEventSubscriptionDestinationARM)      Value Description   \u0026#34;ServiceBusQueue\u0026#34;\n    ServiceBusQueueEventSubscriptionDestinationProperties   (Appears on:ServiceBusQueueEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties\n    Field Description      resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.\n    ServiceBusQueueEventSubscriptionDestinationPropertiesARM   (Appears on:ServiceBusQueueEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties\n    Field Description      resourceId  string        ServiceBusTopicEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestination\n    Field Description      endpointType  ServiceBusTopicEventSubscriptionDestinationEndpointType         properties  ServiceBusTopicEventSubscriptionDestinationProperties     Properties: The properties that represent the Service Bus Topic destination of an event subscription.\n    ServiceBusTopicEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestination\n    Field Description      endpointType  ServiceBusTopicEventSubscriptionDestinationEndpointType         properties  ServiceBusTopicEventSubscriptionDestinationPropertiesARM     Properties: The properties that represent the Service Bus Topic destination of an event subscription.\n    ServiceBusTopicEventSubscriptionDestinationEndpointType (string alias)  (Appears on:ServiceBusTopicEventSubscriptionDestination, ServiceBusTopicEventSubscriptionDestinationARM)      Value Description   \u0026#34;ServiceBusTopic\u0026#34;\n    ServiceBusTopicEventSubscriptionDestinationProperties   (Appears on:ServiceBusTopicEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties\n    Field Description      resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.\n    ServiceBusTopicEventSubscriptionDestinationPropertiesARM   (Appears on:ServiceBusTopicEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties\n    Field Description      resourceId  string        StorageBlobDeadLetterDestination   (Appears on:EventSubscriptions_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestination\n    Field Description      endpointType  StorageBlobDeadLetterDestinationEndpointType         properties  StorageBlobDeadLetterDestinationProperties     Properties: Properties of the storage blob based dead letter destination.\n    StorageBlobDeadLetterDestinationARM   (Appears on:EventSubscriptionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestination\n    Field Description      endpointType  StorageBlobDeadLetterDestinationEndpointType         properties  StorageBlobDeadLetterDestinationPropertiesARM     Properties: Properties of the storage blob based dead letter destination.\n    StorageBlobDeadLetterDestinationEndpointType (string alias)  (Appears on:StorageBlobDeadLetterDestination, StorageBlobDeadLetterDestinationARM)      Value Description   \u0026#34;StorageBlob\u0026#34;\n    StorageBlobDeadLetterDestinationProperties   (Appears on:StorageBlobDeadLetterDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestinationProperties\n    Field Description      blobContainerName  string    BlobContainerName: The name of the Storage blob container that is the destination of the deadletter events\n    resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource ID of the storage account that is the destination of the deadletter events\n    StorageBlobDeadLetterDestinationPropertiesARM   (Appears on:StorageBlobDeadLetterDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageBlobDeadLetterDestinationProperties\n    Field Description      blobContainerName  string    BlobContainerName: The name of the Storage blob container that is the destination of the deadletter events\n    resourceId  string        StorageQueueEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestination\n    Field Description      endpointType  StorageQueueEventSubscriptionDestinationEndpointType         properties  StorageQueueEventSubscriptionDestinationProperties     Properties: The properties for a storage queue destination.\n    StorageQueueEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestination\n    Field Description      endpointType  StorageQueueEventSubscriptionDestinationEndpointType         properties  StorageQueueEventSubscriptionDestinationPropertiesARM     Properties: The properties for a storage queue destination.\n    StorageQueueEventSubscriptionDestinationEndpointType (string alias)  (Appears on:StorageQueueEventSubscriptionDestination, StorageQueueEventSubscriptionDestinationARM)      Value Description   \u0026#34;StorageQueue\u0026#34;\n    StorageQueueEventSubscriptionDestinationProperties   (Appears on:StorageQueueEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestinationProperties\n    Field Description      queueName  string    QueueName: The name of the Storage queue under a storage account that is the destination of an event subscription.\n    resourceReference  genruntime.ResourceReference     ResourceReference: The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.\n    StorageQueueEventSubscriptionDestinationPropertiesARM   (Appears on:StorageQueueEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/StorageQueueEventSubscriptionDestinationProperties\n    Field Description      queueName  string    QueueName: The name of the Storage queue under a storage account that is the destination of an event subscription.\n    resourceId  string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:DomainTopic_Status, Domain_Status, EventSubscription_Status, Topic_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:DomainTopic_StatusARM, Domain_StatusARM, EventSubscription_StatusARM, Topic_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    Topic   Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/resourceDefinitions/topics\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Topics_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Topic_Status         TopicPropertiesStatusInputSchema (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)      Value Description   \u0026#34;CloudEventSchemaV1_0\u0026#34;\n  \u0026#34;CustomEventSchema\u0026#34;\n  \u0026#34;EventGridSchema\u0026#34;\n    TopicPropertiesStatusProvisioningState (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    TopicPropertiesStatusPublicNetworkAccess (string alias)  (Appears on:TopicProperties_StatusARM, Topic_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    TopicProperties_StatusARM   (Appears on:Topic_StatusARM)      Field Description      endpoint  string    Endpoint: Endpoint for the topic.\n    inboundIpRules  []InboundIpRule_StatusARM     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  TopicPropertiesStatusInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the topic.\n    inputSchemaMapping  InputSchemaMapping_StatusARM     InputSchemaMapping: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.\n    metricResourceId  string    MetricResourceId: Metric resource id for the topic.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_Topic_SubResourceEmbeddedARM         provisioningState  TopicPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the topic.\n    publicNetworkAccess  TopicPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring     Topic_Status   (Appears on:Topic)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    endpoint  string    Endpoint: Endpoint for the topic.\n    id  string    Id: Fully qualified identifier of the resource.\n    inboundIpRules  []InboundIpRule_Status     InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.\n    inputSchema  TopicPropertiesStatusInputSchema     InputSchema: This determines the format that Event Grid should expect for incoming events published to the topic.\n    inputSchemaMapping  InputSchemaMapping_Status     InputSchemaMapping: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.\n    location  string    Location: Location of the resource.\n    metricResourceId  string    MetricResourceId: Metric resource id for the topic.\n    name  string    Name: Name of the resource.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_Topic_SubResourceEmbedded         provisioningState  TopicPropertiesStatusProvisioningState     ProvisioningState: Provisioning state of the topic.\n    publicNetworkAccess  TopicPropertiesStatusPublicNetworkAccess     PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring     systemData  SystemData_Status     SystemData: The system metadata relating to Topic resource.\n    tags  map[string]string    Tags: Tags of the resource.\n    type  string    Type: Type of the resource.\n    Topic_StatusARM       Field Description      id  string    Id: Fully qualified identifier of the resource.\n    location  string    Location: Location of the resource.\n    name  string    Name: Name of the resource.\n    properties  TopicProperties_StatusARM     Properties: Properties of the topic.\n    systemData  SystemData_StatusARM     SystemData: The system metadata relating to Topic resource.\n    tags  map[string]string    Tags: Tags of the resource.\n    type  string    Type: Type of the resource.\n    TopicsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-06-01\u0026#34;\n    Topics_Spec   (Appears on:Topic)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Topics_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    WebHookEventSubscriptionDestination   (Appears on:EventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestination\n    Field Description      endpointType  WebHookEventSubscriptionDestinationEndpointType         properties  WebHookEventSubscriptionDestinationProperties     Properties: Information about the webhook destination properties for an event subscription.\n    WebHookEventSubscriptionDestinationARM   (Appears on:EventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestination\n    Field Description      endpointType  WebHookEventSubscriptionDestinationEndpointType         properties  WebHookEventSubscriptionDestinationPropertiesARM     Properties: Information about the webhook destination properties for an event subscription.\n    WebHookEventSubscriptionDestinationEndpointType (string alias)  (Appears on:WebHookEventSubscriptionDestination, WebHookEventSubscriptionDestinationARM)      Value Description   \u0026#34;WebHook\u0026#34;\n    WebHookEventSubscriptionDestinationProperties   (Appears on:WebHookEventSubscriptionDestination)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestinationProperties\n    Field Description      azureActiveDirectoryApplicationIdOrUri  string    AzureActiveDirectoryApplicationIdOrUri: The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.\n    azureActiveDirectoryTenantId  string    AzureActiveDirectoryTenantId: The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.\n    endpointUrl  string    EndpointUrl: The URL that represents the endpoint of the destination of an event subscription.\n    maxEventsPerBatch  int    MaxEventsPerBatch: Maximum number of events per batch.\n    preferredBatchSizeInKilobytes  int    PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.\n    WebHookEventSubscriptionDestinationPropertiesARM   (Appears on:WebHookEventSubscriptionDestinationARM)  Generated from: https://schema.management.azure.com/schemas/2020-06-01/Microsoft.EventGrid.json#/definitions/WebHookEventSubscriptionDestinationProperties\n    Field Description      azureActiveDirectoryApplicationIdOrUri  string    AzureActiveDirectoryApplicationIdOrUri: The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.\n    azureActiveDirectoryTenantId  string    AzureActiveDirectoryTenantId: The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.\n    endpointUrl  string    EndpointUrl: The URL that represents the endpoint of the destination of an event subscription.\n    maxEventsPerBatch  int    MaxEventsPerBatch: Maximum number of events per batch.\n    preferredBatchSizeInKilobytes  int    PreferredBatchSizeInKilobytes: Preferred batch size in Kilobytes.\n     "},{"id":49,"href":"/azure-service-operator/reference/eventhub.v1alpha1api20211101/","title":"eventhub.azure.com/v1alpha1api20211101","section":"References","content":"eventhub.azure.com/v1alpha1api20211101  Package v1alpha1api20211101 contains API Schema definitions for the eventhub v1alpha1api20211101 API group\n Resource Types:  AuthorizationRulePropertiesARM   (Appears on:NamespacesAuthorizationRules_SpecARM, NamespacesEventhubsAuthorizationRules_SpecARM)  Deprecated version of AuthorizationRuleProperties. Use v1beta20211101.AuthorizationRuleProperties instead\n    Field Description      rights  []AuthorizationRulePropertiesRights         AuthorizationRulePropertiesRights (string alias)  (Appears on:AuthorizationRulePropertiesARM, NamespacesAuthorizationRules_Spec, NamespacesEventhubsAuthorizationRules_Spec)  Deprecated version of AuthorizationRulePropertiesRights. Use v1beta20211101.AuthorizationRulePropertiesRights instead\n    Value Description   \u0026#34;Listen\u0026#34;\n  \u0026#34;Manage\u0026#34;\n  \u0026#34;Send\u0026#34;\n    AuthorizationRuleStatusPropertiesRights (string alias)  (Appears on:AuthorizationRule_Status, AuthorizationRule_Status_PropertiesARM)  Deprecated version of AuthorizationRuleStatusPropertiesRights. Use v1beta20211101.AuthorizationRuleStatusPropertiesRights instead\n    Value Description   \u0026#34;Listen\u0026#34;\n  \u0026#34;Manage\u0026#34;\n  \u0026#34;Send\u0026#34;\n    AuthorizationRule_Status   (Appears on:NamespacesAuthorizationRule, NamespacesEventhubsAuthorizationRule)  Deprecated version of AuthorizationRule_Status. Use v1beta20211101.AuthorizationRule_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        rights  []AuthorizationRuleStatusPropertiesRights         systemData  SystemData_Status         type  string        AuthorizationRule_StatusARM   Deprecated version of AuthorizationRule_Status. Use v1beta20211101.AuthorizationRule_Status instead\n    Field Description      id  string        location  string        name  string        properties  AuthorizationRule_Status_PropertiesARM         systemData  SystemData_StatusARM         type  string        AuthorizationRule_Status_PropertiesARM   (Appears on:AuthorizationRule_StatusARM)  Deprecated version of AuthorizationRule_Status_Properties. Use v1beta20211101.AuthorizationRule_Status_Properties instead\n    Field Description      rights  []AuthorizationRuleStatusPropertiesRights         CaptureDescriptionStatusEncoding (string alias)  (Appears on:CaptureDescription_Status, CaptureDescription_StatusARM)  Deprecated version of CaptureDescriptionStatusEncoding. Use v1beta20211101.CaptureDescriptionStatusEncoding instead\n    Value Description   \u0026#34;Avro\u0026#34;\n  \u0026#34;AvroDeflate\u0026#34;\n    CaptureDescription_Status   (Appears on:Eventhub_Status)  Deprecated version of CaptureDescription_Status. Use v1beta20211101.CaptureDescription_Status instead\n    Field Description      destination  Destination_Status         enabled  bool        encoding  CaptureDescriptionStatusEncoding         intervalInSeconds  int        sizeLimitInBytes  int        skipEmptyArchives  bool        CaptureDescription_StatusARM   (Appears on:Eventhub_Status_PropertiesARM)  Deprecated version of CaptureDescription_Status. Use v1beta20211101.CaptureDescription_Status instead\n    Field Description      destination  Destination_StatusARM         enabled  bool        encoding  CaptureDescriptionStatusEncoding         intervalInSeconds  int        sizeLimitInBytes  int        skipEmptyArchives  bool        ConsumerGroupPropertiesARM   (Appears on:NamespacesEventhubsConsumergroups_SpecARM)  Deprecated version of ConsumerGroupProperties. Use v1beta20211101.ConsumerGroupProperties instead\n    Field Description      userMetadata  string        ConsumerGroup_Status   (Appears on:NamespacesEventhubsConsumerGroup)  Deprecated version of ConsumerGroup_Status. Use v1beta20211101.ConsumerGroup_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string        id  string        location  string        name  string        systemData  SystemData_Status         type  string        updatedAt  string        userMetadata  string        ConsumerGroup_StatusARM   Deprecated version of ConsumerGroup_Status. Use v1beta20211101.ConsumerGroup_Status instead\n    Field Description      id  string        location  string        name  string        properties  ConsumerGroup_Status_PropertiesARM         systemData  SystemData_StatusARM         type  string        ConsumerGroup_Status_PropertiesARM   (Appears on:ConsumerGroup_StatusARM)  Deprecated version of ConsumerGroup_Status_Properties. Use v1beta20211101.ConsumerGroup_Status_Properties instead\n    Field Description      createdAt  string        updatedAt  string        userMetadata  string        DestinationPropertiesARM   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM)  Deprecated version of DestinationProperties. Use v1beta20211101.DestinationProperties instead\n    Field Description      archiveNameFormat  string        blobContainer  string        dataLakeAccountName  string        dataLakeFolderPath  string        dataLakeSubscriptionId  string        storageAccountResourceId  string        Destination_Status   (Appears on:CaptureDescription_Status)  Deprecated version of Destination_Status. Use v1beta20211101.Destination_Status instead\n    Field Description      archiveNameFormat  string        blobContainer  string        dataLakeAccountName  string        dataLakeFolderPath  string        dataLakeSubscriptionId  string        name  string        storageAccountResourceId  string        Destination_StatusARM   (Appears on:CaptureDescription_StatusARM)  Deprecated version of Destination_Status. Use v1beta20211101.Destination_Status instead\n    Field Description      name  string        properties  Destination_Status_PropertiesARM         Destination_Status_PropertiesARM   (Appears on:Destination_StatusARM)  Deprecated version of Destination_Status_Properties. Use v1beta20211101.Destination_Status_Properties instead\n    Field Description      archiveNameFormat  string        blobContainer  string        dataLakeAccountName  string        dataLakeFolderPath  string        dataLakeSubscriptionId  string        storageAccountResourceId  string        EHNamespace_Status   (Appears on:Namespace)  Deprecated version of EHNamespace_Status. Use v1beta20211101.EHNamespace_Status instead\n    Field Description      alternateName  string        clusterArmId  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string        disableLocalAuth  bool        encryption  Encryption_Status         id  string        identity  Identity_Status         isAutoInflateEnabled  bool        kafkaEnabled  bool        location  string        maximumThroughputUnits  int        metricId  string        name  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  string        serviceBusEndpoint  string        sku  Sku_Status         status  string        systemData  SystemData_Status         tags  map[string]string        type  string        updatedAt  string        zoneRedundant  bool        EHNamespace_StatusARM   Deprecated version of EHNamespace_Status. Use v1beta20211101.EHNamespace_Status instead\n    Field Description      id  string        identity  Identity_StatusARM         location  string        name  string        properties  EHNamespace_Status_PropertiesARM         sku  Sku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        EHNamespace_Status_PropertiesARM   (Appears on:EHNamespace_StatusARM)  Deprecated version of EHNamespace_Status_Properties. Use v1beta20211101.EHNamespace_Status_Properties instead\n    Field Description      alternateName  string        clusterArmId  string        createdAt  string        disableLocalAuth  bool        encryption  Encryption_StatusARM         isAutoInflateEnabled  bool        kafkaEnabled  bool        maximumThroughputUnits  int        metricId  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  string        serviceBusEndpoint  string        status  string        updatedAt  string        zoneRedundant  bool        Encryption   (Appears on:Namespaces_Spec)  Deprecated version of Encryption. Use v1beta20211101.Encryption instead\n    Field Description      keySource  EncryptionKeySource         keyVaultProperties  []KeyVaultProperties         requireInfrastructureEncryption  bool        EncryptionARM   (Appears on:Namespaces_Spec_PropertiesARM)  Deprecated version of Encryption. Use v1beta20211101.Encryption instead\n    Field Description      keySource  EncryptionKeySource         keyVaultProperties  []KeyVaultPropertiesARM         requireInfrastructureEncryption  bool        EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)  Deprecated version of EncryptionKeySource. Use v1beta20211101.EncryptionKeySource instead\n    Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)  Deprecated version of EncryptionStatusKeySource. Use v1beta20211101.EncryptionStatusKeySource instead\n    Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    Encryption_Status   (Appears on:EHNamespace_Status)  Deprecated version of Encryption_Status. Use v1beta20211101.Encryption_Status instead\n    Field Description      keySource  EncryptionStatusKeySource         keyVaultProperties  []KeyVaultProperties_Status         requireInfrastructureEncryption  bool        Encryption_StatusARM   (Appears on:EHNamespace_Status_PropertiesARM)  Deprecated version of Encryption_Status. Use v1beta20211101.Encryption_Status instead\n    Field Description      keySource  EncryptionStatusKeySource         keyVaultProperties  []KeyVaultProperties_StatusARM         requireInfrastructureEncryption  bool        EventhubStatusPropertiesStatus (string alias)  (Appears on:Eventhub_Status, Eventhub_Status_PropertiesARM)  Deprecated version of EventhubStatusPropertiesStatus. Use v1beta20211101.EventhubStatusPropertiesStatus instead\n    Value Description   \u0026#34;Active\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;ReceiveDisabled\u0026#34;\n  \u0026#34;Renaming\u0026#34;\n  \u0026#34;Restoring\u0026#34;\n  \u0026#34;SendDisabled\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    Eventhub_Status   (Appears on:NamespacesEventhub)  Deprecated version of Eventhub_Status. Use v1beta20211101.Eventhub_Status instead\n    Field Description      captureDescription  CaptureDescription_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string        id  string        location  string        messageRetentionInDays  int        name  string        partitionCount  int        partitionIds  []string        status  EventhubStatusPropertiesStatus         systemData  SystemData_Status         type  string        updatedAt  string        Eventhub_StatusARM   Deprecated version of Eventhub_Status. Use v1beta20211101.Eventhub_Status instead\n    Field Description      id  string        location  string        name  string        properties  Eventhub_Status_PropertiesARM         systemData  SystemData_StatusARM         type  string        Eventhub_Status_PropertiesARM   (Appears on:Eventhub_StatusARM)  Deprecated version of Eventhub_Status_Properties. Use v1beta20211101.Eventhub_Status_Properties instead\n    Field Description      captureDescription  CaptureDescription_StatusARM         createdAt  string        messageRetentionInDays  int        partitionCount  int        partitionIds  []string        status  EventhubStatusPropertiesStatus         updatedAt  string        Identity   (Appears on:Namespaces_Spec)  Deprecated version of Identity. Use v1beta20211101.Identity instead\n    Field Description      type  IdentityType         IdentityARM   (Appears on:Namespaces_SpecARM)  Deprecated version of Identity. Use v1beta20211101.Identity instead\n    Field Description      type  IdentityType         IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)  Deprecated version of IdentityStatusType. Use v1beta20211101.IdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)  Deprecated version of IdentityType. Use v1beta20211101.IdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:EHNamespace_Status)  Deprecated version of Identity_Status. Use v1beta20211101.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/eventhub/v1alpha1api20211101.UserAssignedIdentity_Status         Identity_StatusARM   (Appears on:EHNamespace_StatusARM)  Deprecated version of Identity_Status. Use v1beta20211101.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/eventhub/v1alpha1api20211101.UserAssignedIdentity_StatusARM         KeyVaultProperties   (Appears on:Encryption)  Deprecated version of KeyVaultProperties. Use v1beta20211101.KeyVaultProperties instead\n    Field Description      identity  UserAssignedIdentityProperties         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Deprecated version of KeyVaultProperties. Use v1beta20211101.KeyVaultProperties instead\n    Field Description      identity  UserAssignedIdentityPropertiesARM         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultProperties_Status   (Appears on:Encryption_Status)  Deprecated version of KeyVaultProperties_Status. Use v1beta20211101.KeyVaultProperties_Status instead\n    Field Description      identity  UserAssignedIdentityProperties_Status         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)  Deprecated version of KeyVaultProperties_Status. Use v1beta20211101.KeyVaultProperties_Status instead\n    Field Description      identity  UserAssignedIdentityProperties_StatusARM         keyName  string        keyVaultUri  string        keyVersion  string        Namespace   Deprecated version of Namespace. Use v1beta20211101.Namespace instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Namespaces_Spec          alternateName  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clusterArmReference  genruntime.ResourceReference         disableLocalAuth  bool        encryption  Encryption         identity  Identity         isAutoInflateEnabled  bool        kafkaEnabled  bool        location  string        maximumThroughputUnits  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnections         sku  Sku         tags  map[string]string        zoneRedundant  bool           status  EHNamespace_Status         NamespacesAuthorizationRule   Deprecated version of NamespacesAuthorizationRule. Use v1beta20211101.NamespacesAuthorizationRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesAuthorizationRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    rights  []AuthorizationRulePropertiesRights         tags  map[string]string           status  AuthorizationRule_Status         NamespacesAuthorizationRules_Spec   (Appears on:NamespacesAuthorizationRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    rights  []AuthorizationRulePropertiesRights         tags  map[string]string        NamespacesAuthorizationRules_SpecARM   Deprecated version of NamespacesAuthorizationRules_Spec. Use v1beta20211101.NamespacesAuthorizationRules_Spec instead\n    Field Description      location  string        name  string        properties  AuthorizationRulePropertiesARM         tags  map[string]string        NamespacesEventhub   Deprecated version of NamespacesEventhub. Use v1beta20211101.NamespacesEventhub instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubs_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescription         location  string        messageRetentionInDays  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    partitionCount  int        tags  map[string]string           status  Eventhub_Status         NamespacesEventhubsAuthorizationRule   Deprecated version of NamespacesEventhubsAuthorizationRule. Use v1beta20211101.NamespacesEventhubsAuthorizationRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubsAuthorizationRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    rights  []AuthorizationRulePropertiesRights         tags  map[string]string           status  AuthorizationRule_Status         NamespacesEventhubsAuthorizationRules_Spec   (Appears on:NamespacesEventhubsAuthorizationRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    rights  []AuthorizationRulePropertiesRights         tags  map[string]string        NamespacesEventhubsAuthorizationRules_SpecARM   Deprecated version of NamespacesEventhubsAuthorizationRules_Spec. Use v1beta20211101.NamespacesEventhubsAuthorizationRules_Spec instead\n    Field Description      location  string        name  string        properties  AuthorizationRulePropertiesARM         tags  map[string]string        NamespacesEventhubsConsumerGroup   Deprecated version of NamespacesEventhubsConsumerGroup. Use v1beta20211101.NamespacesEventhubsConsumerGroup instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubsConsumergroups_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    tags  map[string]string        userMetadata  string           status  ConsumerGroup_Status         NamespacesEventhubsConsumergroups_Spec   (Appears on:NamespacesEventhubsConsumerGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    tags  map[string]string        userMetadata  string        NamespacesEventhubsConsumergroups_SpecARM   Deprecated version of NamespacesEventhubsConsumergroups_Spec. Use v1beta20211101.NamespacesEventhubsConsumergroups_Spec instead\n    Field Description      location  string        name  string        properties  ConsumerGroupPropertiesARM         tags  map[string]string        NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding (string alias)  (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription, NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM)  Deprecated version of NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding. Use v1beta20211101.NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding instead\n    Value Description   \u0026#34;Avro\u0026#34;\n  \u0026#34;AvroDeflate\u0026#34;\n    NamespacesEventhubs_Spec   (Appears on:NamespacesEventhub)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescription         location  string        messageRetentionInDays  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    partitionCount  int        tags  map[string]string        NamespacesEventhubs_SpecARM   Deprecated version of NamespacesEventhubs_Spec. Use v1beta20211101.NamespacesEventhubs_Spec instead\n    Field Description      location  string        name  string        properties  NamespacesEventhubs_Spec_PropertiesARM         tags  map[string]string        NamespacesEventhubs_Spec_PropertiesARM   (Appears on:NamespacesEventhubs_SpecARM)  Deprecated version of NamespacesEventhubs_Spec_Properties. Use v1beta20211101.NamespacesEventhubs_Spec_Properties instead\n    Field Description      captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM         messageRetentionInDays  int        partitionCount  int        NamespacesEventhubs_Spec_Properties_CaptureDescription   (Appears on:NamespacesEventhubs_Spec)  Deprecated version of NamespacesEventhubs_Spec_Properties_CaptureDescription. Use v1beta20211101.NamespacesEventhubs_Spec_Properties_CaptureDescription instead\n    Field Description      destination  NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination         enabled  bool        encoding  NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding         intervalInSeconds  int        sizeLimitInBytes  int        skipEmptyArchives  bool        NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM   (Appears on:NamespacesEventhubs_Spec_PropertiesARM)  Deprecated version of NamespacesEventhubs_Spec_Properties_CaptureDescription. Use v1beta20211101.NamespacesEventhubs_Spec_Properties_CaptureDescription instead\n    Field Description      destination  NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM         enabled  bool        encoding  NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding         intervalInSeconds  int        sizeLimitInBytes  int        skipEmptyArchives  bool        NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription)  Deprecated version of NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination. Use v1beta20211101.NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination instead\n    Field Description      archiveNameFormat  string        blobContainer  string        dataLakeAccountName  string        dataLakeFolderPath  string        dataLakeSubscriptionId  string        name  string        storageAccountResourceReference  genruntime.ResourceReference         NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM)  Deprecated version of NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination. Use v1beta20211101.NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination instead\n    Field Description      name  string        properties  DestinationPropertiesARM         Namespaces_Spec   (Appears on:Namespace)      Field Description      alternateName  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clusterArmReference  genruntime.ResourceReference         disableLocalAuth  bool        encryption  Encryption         identity  Identity         isAutoInflateEnabled  bool        kafkaEnabled  bool        location  string        maximumThroughputUnits  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnections         sku  Sku         tags  map[string]string        zoneRedundant  bool        Namespaces_SpecARM   Deprecated version of Namespaces_Spec. Use v1beta20211101.Namespaces_Spec instead\n    Field Description      identity  IdentityARM         location  string        name  string        properties  Namespaces_Spec_PropertiesARM         sku  SkuARM         tags  map[string]string        Namespaces_Spec_PropertiesARM   (Appears on:Namespaces_SpecARM)  Deprecated version of Namespaces_Spec_Properties. Use v1beta20211101.Namespaces_Spec_Properties instead\n    Field Description      alternateName  string        clusterArmId  string        disableLocalAuth  bool        encryption  EncryptionARM         isAutoInflateEnabled  bool        kafkaEnabled  bool        maximumThroughputUnits  int        privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnectionsARM         zoneRedundant  bool        Namespaces_Spec_Properties_PrivateEndpointConnections   (Appears on:Namespaces_Spec)  Deprecated version of Namespaces_Spec_Properties_PrivateEndpointConnections. Use v1beta20211101.Namespaces_Spec_Properties_PrivateEndpointConnections instead\n    Field Description      privateEndpoint  PrivateEndpoint         Namespaces_Spec_Properties_PrivateEndpointConnectionsARM   (Appears on:Namespaces_Spec_PropertiesARM)  Deprecated version of Namespaces_Spec_Properties_PrivateEndpointConnections. Use v1beta20211101.Namespaces_Spec_Properties_PrivateEndpointConnections instead\n    Field Description      properties  PrivateEndpointConnectionPropertiesARM         PrivateEndpoint   (Appears on:Namespaces_Spec_Properties_PrivateEndpointConnections)  Deprecated version of PrivateEndpoint. Use v1beta20211101.PrivateEndpoint instead\n    Field Description      reference  genruntime.ResourceReference         PrivateEndpointARM   (Appears on:PrivateEndpointConnectionPropertiesARM)  Deprecated version of PrivateEndpoint. Use v1beta20211101.PrivateEndpoint instead\n    Field Description      id  string        PrivateEndpointConnectionPropertiesARM   (Appears on:Namespaces_Spec_Properties_PrivateEndpointConnectionsARM)  Deprecated version of PrivateEndpointConnectionProperties. Use v1beta20211101.PrivateEndpointConnectionProperties instead\n    Field Description      privateEndpoint  PrivateEndpointARM         PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:EHNamespace_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20211101.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_Status         PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:EHNamespace_Status_PropertiesARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20211101.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_StatusARM         Sku   (Appears on:Namespaces_Spec)  Deprecated version of Sku. Use v1beta20211101.Sku instead\n    Field Description      capacity  int        name  SkuName         tier  SkuTier         SkuARM   (Appears on:Namespaces_SpecARM)  Deprecated version of Sku. Use v1beta20211101.Sku instead\n    Field Description      capacity  int        name  SkuName         tier  SkuTier         SkuName (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuName. Use v1beta20211101.SkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusName. Use v1beta20211101.SkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuStatusTier. Use v1beta20211101.SkuStatusTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuTier. Use v1beta20211101.SkuTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:EHNamespace_Status)  Deprecated version of Sku_Status. Use v1beta20211101.Sku_Status instead\n    Field Description      capacity  int        name  SkuStatusName         tier  SkuStatusTier         Sku_StatusARM   (Appears on:EHNamespace_StatusARM)  Deprecated version of Sku_Status. Use v1beta20211101.Sku_Status instead\n    Field Description      capacity  int        name  SkuStatusName         tier  SkuStatusTier         SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20211101.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20211101.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:AuthorizationRule_Status, ConsumerGroup_Status, EHNamespace_Status, Eventhub_Status, PrivateEndpointConnection_Status_SubResourceEmbedded)  Deprecated version of SystemData_Status. Use v1beta20211101.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:AuthorizationRule_StatusARM, ConsumerGroup_StatusARM, EHNamespace_StatusARM, Eventhub_StatusARM, PrivateEndpointConnection_Status_SubResourceEmbeddedARM)  Deprecated version of SystemData_Status. Use v1beta20211101.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         UserAssignedIdentityProperties   (Appears on:KeyVaultProperties)  Deprecated version of UserAssignedIdentityProperties. Use v1beta20211101.UserAssignedIdentityProperties instead\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference         UserAssignedIdentityPropertiesARM   (Appears on:KeyVaultPropertiesARM)  Deprecated version of UserAssignedIdentityProperties. Use v1beta20211101.UserAssignedIdentityProperties instead\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_Status   (Appears on:KeyVaultProperties_Status)  Deprecated version of UserAssignedIdentityProperties_Status. Use v1beta20211101.UserAssignedIdentityProperties_Status instead\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_StatusARM   (Appears on:KeyVaultProperties_StatusARM)  Deprecated version of UserAssignedIdentityProperties_Status. Use v1beta20211101.UserAssignedIdentityProperties_Status instead\n    Field Description      userAssignedIdentity  string        UserAssignedIdentity_Status   (Appears on:Identity_Status)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20211101.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        principalId  string        UserAssignedIdentity_StatusARM   (Appears on:Identity_StatusARM)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20211101.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        principalId  string         "},{"id":50,"href":"/azure-service-operator/reference/eventhub.v1beta20211101/","title":"eventhub.azure.com/v1beta20211101","section":"References","content":"eventhub.azure.com/v1beta20211101  Package v1beta20211101 contains API Schema definitions for the eventhub v1beta20211101 API group\n Resource Types:  AuthorizationRulePropertiesARM   (Appears on:NamespacesAuthorizationRules_SpecARM, NamespacesEventhubsAuthorizationRules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/AuthorizationRuleProperties\n    Field Description      rights  []AuthorizationRulePropertiesRights     Rights: The rights associated with the rule.\n    AuthorizationRulePropertiesRights (string alias)  (Appears on:AuthorizationRulePropertiesARM, NamespacesAuthorizationRules_Spec, NamespacesEventhubsAuthorizationRules_Spec)      Value Description   \u0026#34;Listen\u0026#34;\n  \u0026#34;Manage\u0026#34;\n  \u0026#34;Send\u0026#34;\n    AuthorizationRuleStatusPropertiesRights (string alias)  (Appears on:AuthorizationRule_Status, AuthorizationRule_Status_PropertiesARM)      Value Description   \u0026#34;Listen\u0026#34;\n  \u0026#34;Manage\u0026#34;\n  \u0026#34;Send\u0026#34;\n    AuthorizationRule_Status   (Appears on:NamespacesAuthorizationRule, NamespacesEventhubsAuthorizationRule)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    rights  []AuthorizationRuleStatusPropertiesRights     Rights: The rights associated with the rule.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    AuthorizationRule_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  AuthorizationRule_Status_PropertiesARM     Properties: Properties supplied to create or update AuthorizationRule\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    AuthorizationRule_Status_PropertiesARM   (Appears on:AuthorizationRule_StatusARM)      Field Description      rights  []AuthorizationRuleStatusPropertiesRights     Rights: The rights associated with the rule.\n    CaptureDescriptionStatusEncoding (string alias)  (Appears on:CaptureDescription_Status, CaptureDescription_StatusARM)      Value Description   \u0026#34;Avro\u0026#34;\n  \u0026#34;AvroDeflate\u0026#34;\n    CaptureDescription_Status   (Appears on:Eventhub_Status)      Field Description      destination  Destination_Status     Destination: Properties of Destination where capture will be stored. (Storage Account, Blob Names)\n    enabled  bool    Enabled: A value that indicates whether capture description is enabled.\n    encoding  CaptureDescriptionStatusEncoding     Encoding: Enumerates the possible values for the encoding format of capture description. Note: \u0026lsquo;AvroDeflate\u0026rsquo; will be deprecated in New API Version\n    intervalInSeconds  int    IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds\n    sizeLimitInBytes  int    SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes\n    skipEmptyArchives  bool    SkipEmptyArchives: A value that indicates whether to Skip Empty Archives\n    CaptureDescription_StatusARM   (Appears on:Eventhub_Status_PropertiesARM)      Field Description      destination  Destination_StatusARM     Destination: Properties of Destination where capture will be stored. (Storage Account, Blob Names)\n    enabled  bool    Enabled: A value that indicates whether capture description is enabled.\n    encoding  CaptureDescriptionStatusEncoding     Encoding: Enumerates the possible values for the encoding format of capture description. Note: \u0026lsquo;AvroDeflate\u0026rsquo; will be deprecated in New API Version\n    intervalInSeconds  int    IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds\n    sizeLimitInBytes  int    SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes\n    skipEmptyArchives  bool    SkipEmptyArchives: A value that indicates whether to Skip Empty Archives\n    ConsumerGroupPropertiesARM   (Appears on:NamespacesEventhubsConsumergroups_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/ConsumerGroupProperties\n    Field Description      userMetadata  string    UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.\n    ConsumerGroup_Status   (Appears on:NamespacesEventhubsConsumerGroup)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string    CreatedAt: Exact time the message was created.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    userMetadata  string    UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.\n    ConsumerGroup_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  ConsumerGroup_Status_PropertiesARM     Properties: Single item in List or Get Consumer group operation\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    ConsumerGroup_Status_PropertiesARM   (Appears on:ConsumerGroup_StatusARM)      Field Description      createdAt  string    CreatedAt: Exact time the message was created.\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    userMetadata  string    UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.\n    DestinationPropertiesARM   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/DestinationProperties\n    Field Description      archiveNameFormat  string    ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order\n    blobContainer  string    BlobContainer: Blob container Name\n    dataLakeAccountName  string    DataLakeAccountName: The Azure Data Lake Store name for the captured events\n    dataLakeFolderPath  string    DataLakeFolderPath: The destination folder path for the captured events\n    dataLakeSubscriptionId  string    DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store\n    storageAccountResourceId  string        Destination_Status   (Appears on:CaptureDescription_Status)      Field Description      archiveNameFormat  string    ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order\n    blobContainer  string    BlobContainer: Blob container Name\n    dataLakeAccountName  string    DataLakeAccountName: The Azure Data Lake Store name for the captured events\n    dataLakeFolderPath  string    DataLakeFolderPath: The destination folder path for the captured events\n    dataLakeSubscriptionId  string    DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store\n    name  string    Name: Name for capture destination\n    storageAccountResourceId  string    StorageAccountResourceId: Resource id of the storage account to be used to create the blobs\n    Destination_StatusARM   (Appears on:CaptureDescription_StatusARM)      Field Description      name  string    Name: Name for capture destination\n    properties  Destination_Status_PropertiesARM     Properties: Properties describing the storage account, blob container and archive name format for capture destination\n    Destination_Status_PropertiesARM   (Appears on:Destination_StatusARM)      Field Description      archiveNameFormat  string    ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order\n    blobContainer  string    BlobContainer: Blob container Name\n    dataLakeAccountName  string    DataLakeAccountName: The Azure Data Lake Store name for the captured events\n    dataLakeFolderPath  string    DataLakeFolderPath: The destination folder path for the captured events\n    dataLakeSubscriptionId  string    DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store\n    storageAccountResourceId  string    StorageAccountResourceId: Resource id of the storage account to be used to create the blobs\n    EHNamespace_Status   (Appears on:Namespace)      Field Description      alternateName  string    AlternateName: Alternate name specified when alias and namespace names are same.\n    clusterArmId  string    ClusterArmId: Cluster ARM ID of the Namespace.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string    CreatedAt: The time the Namespace was created.\n    disableLocalAuth  bool    DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.\n    encryption  Encryption_Status     Encryption: Properties of BYOK Encryption description\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    identity  Identity_Status     Identity: Properties of BYOK Identity description\n    isAutoInflateEnabled  bool    IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.\n    kafkaEnabled  bool    KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.\n    location  string    Location: Resource location.\n    maximumThroughputUnits  int    MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( \u0026lsquo;0\u0026rsquo; if AutoInflateEnabled = true)\n    metricId  string    MetricId: Identifier for Azure Insights metrics.\n    name  string    Name: The name of the resource\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  string    ProvisioningState: Provisioning state of the Namespace.\n    serviceBusEndpoint  string    ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.\n    sku  Sku_Status     Sku: Properties of sku resource\n    status  string    Status: Status of the Namespace.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    updatedAt  string    UpdatedAt: The time the Namespace was updated.\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.\n    EHNamespace_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    identity  Identity_StatusARM     Identity: Properties of BYOK Identity description\n    location  string    Location: Resource location.\n    name  string    Name: The name of the resource\n    properties  EHNamespace_Status_PropertiesARM     Properties: Namespace properties supplied for create namespace operation.\n    sku  Sku_StatusARM     Sku: Properties of sku resource\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    EHNamespace_Status_PropertiesARM   (Appears on:EHNamespace_StatusARM)      Field Description      alternateName  string    AlternateName: Alternate name specified when alias and namespace names are same.\n    clusterArmId  string    ClusterArmId: Cluster ARM ID of the Namespace.\n    createdAt  string    CreatedAt: The time the Namespace was created.\n    disableLocalAuth  bool    DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.\n    encryption  Encryption_StatusARM     Encryption: Properties of BYOK Encryption description\n    isAutoInflateEnabled  bool    IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.\n    kafkaEnabled  bool    KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.\n    maximumThroughputUnits  int    MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( \u0026lsquo;0\u0026rsquo; if AutoInflateEnabled = true)\n    metricId  string    MetricId: Identifier for Azure Insights metrics.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  string    ProvisioningState: Provisioning state of the Namespace.\n    serviceBusEndpoint  string    ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.\n    status  string    Status: Status of the Namespace.\n    updatedAt  string    UpdatedAt: The time the Namespace was updated.\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.\n    Encryption   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Encryption\n    Field Description      keySource  EncryptionKeySource     KeySource: Enumerates the possible value of keySource for Encryption.\n    keyVaultProperties  []KeyVaultProperties     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EncryptionARM   (Appears on:Namespaces_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Encryption\n    Field Description      keySource  EncryptionKeySource     KeySource: Enumerates the possible value of keySource for Encryption.\n    keyVaultProperties  []KeyVaultPropertiesARM     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)      Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)      Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    Encryption_Status   (Appears on:EHNamespace_Status)      Field Description      keySource  EncryptionStatusKeySource     KeySource: Enumerates the possible value of keySource for Encryption\n    keyVaultProperties  []KeyVaultProperties_Status     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    Encryption_StatusARM   (Appears on:EHNamespace_Status_PropertiesARM)      Field Description      keySource  EncryptionStatusKeySource     KeySource: Enumerates the possible value of keySource for Encryption\n    keyVaultProperties  []KeyVaultProperties_StatusARM     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EventhubStatusPropertiesStatus (string alias)  (Appears on:Eventhub_Status, Eventhub_Status_PropertiesARM)      Value Description   \u0026#34;Active\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;ReceiveDisabled\u0026#34;\n  \u0026#34;Renaming\u0026#34;\n  \u0026#34;Restoring\u0026#34;\n  \u0026#34;SendDisabled\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    Eventhub_Status   (Appears on:NamespacesEventhub)      Field Description      captureDescription  CaptureDescription_Status     CaptureDescription: Properties of capture description\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string    CreatedAt: Exact time the Event Hub was created.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    messageRetentionInDays  int    MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days\n    name  string    Name: The name of the resource\n    partitionCount  int    PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.\n    partitionIds  []string    PartitionIds: Current number of shards on the Event Hub.\n    status  EventhubStatusPropertiesStatus     Status: Enumerates the possible values for the status of the Event Hub.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    Eventhub_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  Eventhub_Status_PropertiesARM     Properties: Properties supplied to the Create Or Update Event Hub operation.\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.EventHub/Namespaces\u0026rdquo; or \u0026ldquo;Microsoft.EventHub/Namespaces/EventHubs\u0026rdquo;\n    Eventhub_Status_PropertiesARM   (Appears on:Eventhub_StatusARM)      Field Description      captureDescription  CaptureDescription_StatusARM     CaptureDescription: Properties of capture description\n    createdAt  string    CreatedAt: Exact time the Event Hub was created.\n    messageRetentionInDays  int    MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days\n    partitionCount  int    PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.\n    partitionIds  []string    PartitionIds: Current number of shards on the Event Hub.\n    status  EventhubStatusPropertiesStatus     Status: Enumerates the possible values for the status of the Event Hub.\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    Identity   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: Type of managed service identity.\n    IdentityARM   (Appears on:Namespaces_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: Type of managed service identity.\n    IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:EHNamespace_Status)      Field Description      principalId  string    PrincipalId: ObjectId from the KeyVault\n    tenantId  string    TenantId: TenantId from the KeyVault\n    type  IdentityStatusType     Type: Type of managed service identity.\n    userAssignedIdentities  map[string]./api/eventhub/v1beta20211101.UserAssignedIdentity_Status     UserAssignedIdentities: Properties for User Assigned Identities\n    Identity_StatusARM   (Appears on:EHNamespace_StatusARM)      Field Description      principalId  string    PrincipalId: ObjectId from the KeyVault\n    tenantId  string    TenantId: TenantId from the KeyVault\n    type  IdentityStatusType     Type: Type of managed service identity.\n    userAssignedIdentities  map[string]./api/eventhub/v1beta20211101.UserAssignedIdentity_StatusARM     UserAssignedIdentities: Properties for User Assigned Identities\n    KeyVaultProperties   (Appears on:Encryption)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/KeyVaultProperties\n    Field Description      identity  UserAssignedIdentityProperties         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Key Version\n    KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/KeyVaultProperties\n    Field Description      identity  UserAssignedIdentityPropertiesARM         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Key Version\n    KeyVaultProperties_Status   (Appears on:Encryption_Status)      Field Description      identity  UserAssignedIdentityProperties_Status         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Key Version\n    KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)      Field Description      identity  UserAssignedIdentityProperties_StatusARM         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Key Version\n    Namespace   Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Namespaces_Spec          alternateName  string    AlternateName: Alternate name specified when alias and namespace names are same.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clusterArmReference  genruntime.ResourceReference     ClusterArmReference: Cluster ARM ID of the Namespace.\n    disableLocalAuth  bool    DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.\n    encryption  Encryption     Encryption: Properties to configure Encryption\n    identity  Identity     Identity: Properties to configure Identity for Bring your Own Keys\n    isAutoInflateEnabled  bool    IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.\n    kafkaEnabled  bool    KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.\n    location  string    Location: Location to deploy resource to\n    maximumThroughputUnits  int    MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( \u0026lsquo;0\u0026rsquo; if AutoInflateEnabled = true)\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnections     PrivateEndpointConnections: List of private endpoint connections.\n    sku  Sku     Sku: SKU parameters supplied to the create namespace operation\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.\n       status  EHNamespace_Status         NamespacesAuthorizationRule   Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_authorizationRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesAuthorizationRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    rights  []AuthorizationRulePropertiesRights     Rights: The rights associated with the rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  AuthorizationRule_Status         NamespacesAuthorizationRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-11-01\u0026#34;\n    NamespacesAuthorizationRules_Spec   (Appears on:NamespacesAuthorizationRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    rights  []AuthorizationRulePropertiesRights     Rights: The rights associated with the rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesAuthorizationRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The authorization rule name.\n    properties  AuthorizationRulePropertiesARM     Properties: Properties supplied to create or update AuthorizationRule\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhub   Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubs_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescription     CaptureDescription: Properties to configure capture description for eventhub\n    location  string    Location: Location to deploy resource to\n    messageRetentionInDays  int    MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    partitionCount  int    PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Eventhub_Status         NamespacesEventhubsAuthorizationRule   Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs_authorizationRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubsAuthorizationRules_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    rights  []AuthorizationRulePropertiesRights     Rights: The rights associated with the rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  AuthorizationRule_Status         NamespacesEventhubsAuthorizationRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-11-01\u0026#34;\n    NamespacesEventhubsAuthorizationRules_Spec   (Appears on:NamespacesEventhubsAuthorizationRule)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    rights  []AuthorizationRulePropertiesRights     Rights: The rights associated with the rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhubsAuthorizationRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The authorization rule name.\n    properties  AuthorizationRulePropertiesARM     Properties: Properties supplied to create or update AuthorizationRule\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhubsConsumerGroup   Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs_consumergroups\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesEventhubsConsumergroups_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    userMetadata  string    UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.\n       status  ConsumerGroup_Status         NamespacesEventhubsConsumergroupsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-11-01\u0026#34;\n    NamespacesEventhubsConsumergroups_Spec   (Appears on:NamespacesEventhubsConsumerGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/NamespacesEventhub resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    userMetadata  string    UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.\n    NamespacesEventhubsConsumergroups_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The consumer group name\n    properties  ConsumerGroupPropertiesARM     Properties: Single item in List or Get Consumer group operation\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhubsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-11-01\u0026#34;\n    NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding (string alias)  (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription, NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM)      Value Description   \u0026#34;Avro\u0026#34;\n  \u0026#34;AvroDeflate\u0026#34;\n    NamespacesEventhubs_Spec   (Appears on:NamespacesEventhub)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescription     CaptureDescription: Properties to configure capture description for eventhub\n    location  string    Location: Location to deploy resource to\n    messageRetentionInDays  int    MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource\n    partitionCount  int    PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhubs_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  NamespacesEventhubs_Spec_PropertiesARM     Properties: Properties supplied to the Create Or Update Event Hub operation.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesEventhubs_Spec_PropertiesARM   (Appears on:NamespacesEventhubs_SpecARM)      Field Description      captureDescription  NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM     CaptureDescription: Properties to configure capture description for eventhub\n    messageRetentionInDays  int    MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days\n    partitionCount  int    PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.\n    NamespacesEventhubs_Spec_Properties_CaptureDescription   (Appears on:NamespacesEventhubs_Spec)      Field Description      destination  NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination     Destination: Capture storage details for capture description\n    enabled  bool    Enabled: A value that indicates whether capture description is enabled.\n    encoding  NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding     Encoding: Enumerates the possible values for the encoding format of capture description. Note: \u0026lsquo;AvroDeflate\u0026rsquo; will be deprecated in New API Version.\n    intervalInSeconds  int    IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds\n    sizeLimitInBytes  int    SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes\n    skipEmptyArchives  bool    SkipEmptyArchives: A value that indicates whether to Skip Empty Archives\n    NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM   (Appears on:NamespacesEventhubs_Spec_PropertiesARM)      Field Description      destination  NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM     Destination: Capture storage details for capture description\n    enabled  bool    Enabled: A value that indicates whether capture description is enabled.\n    encoding  NamespacesEventhubsSpecPropertiesCaptureDescriptionEncoding     Encoding: Enumerates the possible values for the encoding format of capture description. Note: \u0026lsquo;AvroDeflate\u0026rsquo; will be deprecated in New API Version.\n    intervalInSeconds  int    IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds\n    sizeLimitInBytes  int    SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes\n    skipEmptyArchives  bool    SkipEmptyArchives: A value that indicates whether to Skip Empty Archives\n    NamespacesEventhubs_Spec_Properties_CaptureDescription_Destination   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescription)      Field Description      archiveNameFormat  string    ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order\n    blobContainer  string    BlobContainer: Blob container Name\n    dataLakeAccountName  string    DataLakeAccountName: The Azure Data Lake Store name for the captured events\n    dataLakeFolderPath  string    DataLakeFolderPath: The destination folder path for the captured events\n    dataLakeSubscriptionId  string    DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store\n    name  string    Name: Name for capture destination\n    storageAccountResourceReference  genruntime.ResourceReference     StorageAccountResourceReference: Resource id of the storage account to be used to create the blobs\n    NamespacesEventhubs_Spec_Properties_CaptureDescription_DestinationARM   (Appears on:NamespacesEventhubs_Spec_Properties_CaptureDescriptionARM)      Field Description      name  string    Name: Name for capture destination\n    properties  DestinationPropertiesARM     Properties: Properties describing the storage account, blob container and archive name format for capture destination\n    NamespacesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-11-01\u0026#34;\n    Namespaces_Spec   (Appears on:Namespace)      Field Description      alternateName  string    AlternateName: Alternate name specified when alias and namespace names are same.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    clusterArmReference  genruntime.ResourceReference     ClusterArmReference: Cluster ARM ID of the Namespace.\n    disableLocalAuth  bool    DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.\n    encryption  Encryption     Encryption: Properties to configure Encryption\n    identity  Identity     Identity: Properties to configure Identity for Bring your Own Keys\n    isAutoInflateEnabled  bool    IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.\n    kafkaEnabled  bool    KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.\n    location  string    Location: Location to deploy resource to\n    maximumThroughputUnits  int    MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( \u0026lsquo;0\u0026rsquo; if AutoInflateEnabled = true)\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnections     PrivateEndpointConnections: List of private endpoint connections.\n    sku  Sku     Sku: SKU parameters supplied to the create namespace operation\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.\n    Namespaces_SpecARM       Field Description      identity  IdentityARM     Identity: Properties to configure Identity for Bring your Own Keys\n    location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  Namespaces_Spec_PropertiesARM     Properties: Namespace properties supplied for create namespace operation.\n    sku  SkuARM     Sku: SKU parameters supplied to the create namespace operation\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Namespaces_Spec_PropertiesARM   (Appears on:Namespaces_SpecARM)      Field Description      alternateName  string    AlternateName: Alternate name specified when alias and namespace names are same.\n    clusterArmId  string        disableLocalAuth  bool    DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.\n    encryption  EncryptionARM     Encryption: Properties to configure Encryption\n    isAutoInflateEnabled  bool    IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.\n    kafkaEnabled  bool    KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.\n    maximumThroughputUnits  int    MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( \u0026lsquo;0\u0026rsquo; if AutoInflateEnabled = true)\n    privateEndpointConnections  []Namespaces_Spec_Properties_PrivateEndpointConnectionsARM     PrivateEndpointConnections: List of private endpoint connections.\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.\n    Namespaces_Spec_Properties_PrivateEndpointConnections   (Appears on:Namespaces_Spec)      Field Description      privateEndpoint  PrivateEndpoint     PrivateEndpoint: PrivateEndpoint information.\n    Namespaces_Spec_Properties_PrivateEndpointConnectionsARM   (Appears on:Namespaces_Spec_PropertiesARM)      Field Description      properties  PrivateEndpointConnectionPropertiesARM     Properties: Properties of the private endpoint connection resource.\n    PrivateEndpoint   (Appears on:Namespaces_Spec_Properties_PrivateEndpointConnections)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/PrivateEndpoint\n    Field Description      reference  genruntime.ResourceReference     Reference: The ARM identifier for Private Endpoint.\n    PrivateEndpointARM   (Appears on:PrivateEndpointConnectionPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/PrivateEndpoint\n    Field Description      id  string        PrivateEndpointConnectionPropertiesARM   (Appears on:Namespaces_Spec_Properties_PrivateEndpointConnectionsARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/PrivateEndpointConnectionProperties\n    Field Description      privateEndpoint  PrivateEndpointARM     PrivateEndpoint: PrivateEndpoint information.\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:EHNamespace_Status)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:EHNamespace_Status_PropertiesARM)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    Sku   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.\n    name  SkuName     Name: Name of this SKU.\n    tier  SkuTier     Tier: The billing tier of this particular SKU.\n    SkuARM   (Appears on:Namespaces_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/Sku\n    Field Description      capacity  int    Capacity: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.\n    name  SkuName     Name: Name of this SKU.\n    tier  SkuTier     Tier: The billing tier of this particular SKU.\n    SkuName (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusName (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuStatusTier (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:EHNamespace_Status)      Field Description      capacity  int    Capacity: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.\n    name  SkuStatusName     Name: Name of this SKU.\n    tier  SkuStatusTier     Tier: The billing tier of this particular SKU.\n    Sku_StatusARM   (Appears on:EHNamespace_StatusARM)      Field Description      capacity  int    Capacity: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.\n    name  SkuStatusName     Name: Name of this SKU.\n    tier  SkuStatusTier     Tier: The billing tier of this particular SKU.\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:AuthorizationRule_Status, ConsumerGroup_Status, EHNamespace_Status, Eventhub_Status, PrivateEndpointConnection_Status_SubResourceEmbedded)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The type of identity that last modified the resource.\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:AuthorizationRule_StatusARM, ConsumerGroup_StatusARM, EHNamespace_StatusARM, Eventhub_StatusARM, PrivateEndpointConnection_Status_SubResourceEmbeddedARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The type of identity that last modified the resource.\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    UserAssignedIdentityProperties   (Appears on:KeyVaultProperties)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/UserAssignedIdentityProperties\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference     UserAssignedIdentityReference: ARM ID of user Identity selected for encryption\n    UserAssignedIdentityPropertiesARM   (Appears on:KeyVaultPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-11-01/Microsoft.EventHub.json#/definitions/UserAssignedIdentityProperties\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_Status   (Appears on:KeyVaultProperties_Status)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: ARM ID of user Identity selected for encryption\n    UserAssignedIdentityProperties_StatusARM   (Appears on:KeyVaultProperties_StatusARM)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: ARM ID of user Identity selected for encryption\n    UserAssignedIdentity_Status   (Appears on:Identity_Status)      Field Description      clientId  string    ClientId: Client Id of user assigned identity\n    principalId  string    PrincipalId: Principal Id of user assigned identity\n    UserAssignedIdentity_StatusARM   (Appears on:Identity_StatusARM)      Field Description      clientId  string    ClientId: Client Id of user assigned identity\n    principalId  string    PrincipalId: Principal Id of user assigned identity\n     "},{"id":51,"href":"/azure-service-operator/design/versioning/case-studies/fixed-storage-version/","title":"Fixed Storage Version","section":"Case Studies","content":"Case Study - Fixed Storage Version #  This case study explores the alternative solution of using a fixed storage version where the schema of the storage version is modified to handle each additional release.\nFor the purposes of discussion, we\u0026rsquo;ll be following the version by version evolution of a theoretical ARM service that provides customer resource management (CRM) services. Synthetic examples are used to allow focus on specific scenarios one by one, providing motivation for specific features.\nExamples shown are deliberately simplified in order to focus on specific details, and therefore minutiae should be considered motivational, not binding. Reference the formal specification for precise details.\nVersion 2011-01-01 - Initial Release #  The initial release of the CRM includes a simple definition to capture information about a particular person:\npackage v20110101 type Person struct { Id Guid FirstName string LastName string } We\u0026rsquo;re not reusing the API version directly as our storage version. Instead, we define a separate (independent) type with a similar structure:\npackage v1 type Person struct { FirstName *string Id *Guid LastName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} By convention, a fixed storage version is noted as v1\nEvery property is marked as optional. Optionality doesn\u0026rsquo;t matter at this point, as we are only concerned with a single version of the API. However, as we\u0026rsquo;ll see with later versions, forward and backward compatibility issues would arise if they were not optional.\nStorage Conversion #  We need to implement the Convertible interface to allow conversion to and from the storage version:\npackage v20110101 import \u0026#34;v1\u0026#34; // ConvertTo converts this Person to the Hub storage version. func (person *Person) ConvertTo(raw conversion.Hub) error { p := raw.(*v1.Person) return ConvertToStorage(p) } // ConvertToStorage converts this Person to a storage version func (person *Person) ConvertToStorage(dest v1.Person) error { // Copy simple properties across  dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName return nil } // ConvertFrom converts from the Hub storage version func (person *Person) ConvertFrom(raw conversion.Hub) error { p := raw.(*v1.Person) return ConvertFromStorage(p) } // ConvertFrom converts from a storage version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { // Copy simple properties across  person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName return nil } These four methods will be automatically generated in order to handle much of the boilerplate required for conversion.\nConversion in each direction is separated into two methods (e.g. ConvertFrom() and ConvertFromStorage()) to allow for reuse of the ConvertFromStorage() methods for conversion of nested complex properties, as we\u0026rsquo;ll see later on.\nSince they never change, the ConvertTo() and ConvertFrom() methods are omitted from the following discussion.\nVersion Map #  With only two classes, our version map doesn\u0026rsquo;t look much like the traditional hub and spoke model, but this will change as we work through this case study:\nVersion 2012-02-02 - No Change #  In this release of the CRM service, despite changes elsewhere in the service, there are no changes made to the structure of Person:\npackage v20120202 type Person struct { Id Guid FirstName string LastName string } Storage Conversion #  Conversions between version v20120202 and the v1 storage version will be identical to those generated for the earlier v20110101 version.\nVersion Map #  Our hub and spoke diagram is becoming useful for seeing the relationship between versions:\nVersion 2013-03-03 - New Property #  In response to customer feedback, this release of the CRM adds a new property to Person to allow a persons middle name to be stored:\npackage v20130303 type Person struct { Id Guid FirstName string MiddleName string // *** New ***  LastName string } The storage version is updated with the addition of the new property:\npackage v1 type Person struct { FirstName *string Id *Guid LastName *string MiddleName *string // *** New *** } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversions #  Conversions to and from earlier versions of Person are unchanged, as those versions do not support MiddleName. For the new version of Person, the new property will be included in the generated methods:\npackage v20130303 import \u0026#34;v1\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName dest.MiddleName = person.MiddleName // *** New property copied too ***  return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName person.MiddleName = source.MiddleName // *** New property copied too ***  return nil } The new property is shown at the end of the list not because it is new, but because values are copied across in alphabetical order to guarantee that code generation is deterministic and generates the same result each time.\nConversion methods for earlier API versions of Person are essentially unchanged.\nVersion Map #  A graph of our conversions now starts to show the expected hub and spoke structure:\nHow often are new properties added? #  At the time of writing, there were 381 version-to-version changes where the only change between versions was solely the addition of new properties. Of those, 249 were adding just a single property, and 71 added two properties.\nVersion 2014-04-04 Preview - Schema Change #  To allow the CRM to better support cultures that have differing ideas about how names are written, a preview release of the service modifies the schema considerably:\npackage v20140404preview type Person struct { Id Guid // *** Only Id is unchanged from the prior version ***  FullName string FamilyName string KnownAs string } The storage version gets modified to add these new properties:\npackage v1 type Person struct { FamilyName *string // *** New ***  FirstName *string FullName *string // *** New ***  Id *Guid KnownAs *string // *** New ***  LastName *string MiddleName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The new properties are copied to and from the storage version. Ensuring that all properties are optional makes it possible to leave the unused properties empty.\npackage v20140404preview import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FamilyName = person.FamilyName dest.FullName = person.FullName dest.Id = person.Id dest.KnownAs = person.KnownAs return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.FamilyName = source.FamilyName person.FullName = source.FullName person.Id = source.Id person.KnownAs = source.KnownAs return nil } This provides round-trip support for the preview release, but does not provide backward compatibility with prior official releases.\nThe storage version of Person written by the preview release will have no values for FirstName, LastName, and MiddleName.\nSimilarly, the storage version of Person written by an earlier release will have no values for KnownAs, FamilyName, or FullName.\nThese kinds of cross-version conversions cannot be automatically generated as they require more understanding of the semantic changes between versions.\nTo allow injection of manual conversion steps, two interfaces will be generated as follows:\npackage v1 // AssignableToPerson is implemented on an API version // of `Person` to update the storage version type AssignableToPerson interface { AssignTo(person Person) error } // AssignableFromPerson is implemented on an API version // of `Person` to populate it from the storage version type AssignableFromPerson interface { AssignFrom(person Person) error } This interface can be optionally implemented by API versions (spoke types) to augment (not replace) the generated conversion.\nThe generated ConvertToStorage() and ConvertFromStorage() methods will test for the presence of this interface and will call it if available:\npackage v20140404preview import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { // … elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { // … elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } Implementations of these interfaces are called after the generated boilerplate conversion has completed. This gives developers freedom to make any changes required as they won\u0026rsquo;t be overwritted by the effects of generated code.\nVersion Map #  The preview version just appears as another version in our hub and spoke diagram:\nVersion 2014-04-04 - Schema Change #  Based on feedback generated by the preview release, the CRM schema changes have gone ahead with a few minor changes:\npackage v20140404 type Person struct { Id Guid LegalName string // *** Was FullName in preview ***  FamilyName string KnownAs string AlphaKey string // *** Added after preview *** } The two new properties need to be added to the storage version to allow this to be stored:\npackage v1 type Person struct { Id *Guid AlphaKey *string // *** New ***  FamilyName *string FirstName *string FullName *string KnownAs *string LastName *string LegalName *string // *** New ***  MiddleName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Issue: Property Bloat #  As our API evolves over time, our storage version is accumulating all the properties that have ever existed, bloating the storage version with obsolete properties that are seldom (if ever) used.\nFor example, only preview users would ever have used FullName as it became LegalName in the general release; most users will never use FullName.\nWe have a problem, however. We can\u0026rsquo;t remove the FullName property as that is a breaking change that will negatively impact users who have used the preview version. Both properties will need to be retained permanently.\nThis violates the pay for play principle - even users who adopt the operator after the 2014-04-04 release will have to deal with the complexity even though they\u0026rsquo;ve never used the preview version.\nStorage Conversion #  The ConvertToStorage() and ConvertFromStorage() methods for the new version of Person are generated as expected, copying across values and invoking the AssignableToPerson and AssignableFromPerson interfaces if present:\npackage v20140404 import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.AlphaKey = person.AlphaKey dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { person.AlphaKey = source.AlphaKey person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } For older versions of Person, the conversion methods are essentially unchanged as the properties they require are still present on the storage version.\nTo interoperate between different versions of Person, we need to add some manual conversions.\nWhen a newer version of Person is written to storage, we need to also populate FirstName, LastName and MiddleName to allow older versions to be requested. Similarly, when an older version of Person is written, we need to populate AlphaKey, FamilyName, KnownAs and LegalName so that newer versions can be requested.\nTo avoid repetition of code across multiple implementations of AssignTo() and AssignFrom(), we write some helper methods on the storage version:\npackage v1 func (person *Person) PopulateFromFirstMiddleLastName(firstName string, middleName string, lastName string) { person.KnownAs = firstName person.FamilyName = lastName person.LegalName = firstName +\u0026#34; \u0026#34;+ middleName + \u0026#34; \u0026#34; + lastName person.AlphaKey = lastName } func (person *Person) PopulateLegacyProperties() { person.FirstName = person.KnownAs person.FamilyName = person.FamilyName person.MiddleName = // ... elided ... } These methods are manually authored, so the names are arbitary. However, we will provide some guidance for implementers to encouarage consistency as the operator is updated and improved.\nWith these methods available, implementing the interface AssignableToPerson becomes straightforward. For the 2011-01-01 release of Person:\npackage v20110101 import v1 func (person *Person) AssignTo(dest v1.Person) error { dest.PopulateFromFirstMiddleLastName( person.FirstName, \u0026#34;\u0026#34;, person.LastName) return nil } For the 2013-03-3 release that introduced MiddleName the code is very similar:\npackage v20130303 import v1 func (person *Person) AssignTo(dest v1.Person) error { dest.PopulateFromFirstMiddleLastName( person.FirstName, person.MiddleName, person.LastName) return nil } Version Map #  We can see in our version map that the preview release is still supported:\nVersion 2015-05-05 - Property Rename #  The term AlphaKey was found to be confusing to users, so in this release of the API it is renamed to SortKey. This better reflects its purpose of sorting names together (e.g. so that the family name McDonald gets sorted as though spelt MacDonald).\npackage v20150505 type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string // *** Used to be AlphaKey *** } As expected the storage version is also extended:\npackage v1 type Person struct { Id *Guid AlphaKey *string // ** Debris ***  FamilyName *string FirstName *string FullName *string KnownAs *string LastName *string LegalName *string MiddleName *string SortKey *string // ** New *** } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Again, we see the issue of property bloat where the storage type needs to have both AlphaKey and SortKey for backward compatibility.\nStorage Conversion #  By documenting the renames in the configuration of our code generator, this rename will be automatically handled within the ConvertTo() and ConvertFrom() methods, as shown here for the 2014-04-04 version of Person:\npackage v20140404 import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.AlphaKey = person.AlphaKey // *** Store it the old way ***  dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Rename is automatically handled ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { person.AlphaKey = source.SortKey // *** Rename is automatically handled ***  person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } For forward compatibility, the ConvertToStorage() method for version 2014-04-04 populates both AlphaKey and SortKey.\nFor the 2015-05-05 release of Person, the methods are similar:\npackage v20150505 import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.AlphaKey = person.SortKey // *** Back compatibility ***  dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.SortKey // *** New ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName person.SortKey = source.SortKey // *** New ***  if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } Here we can see the 2015-05-05 version of ConvertToStorage() populates AlphaKey for backwards compatiblity.\nVersion Map #  Here we see our horizon policy coming into effect, with support for version 2011-01-01 being dropped in this release:\nHow often do property renames happen? #  At the time of writing, there were nearly 60 cases of properties being renamed between versions. (Count is somewhat inexact because renaming was manually inferred from the similarity of names.)\nOf these 17 of these involved changes to letter case alone.\nVersion 2016-06-06 - Complex Properties #  With some customers expressing a desire to send physical mail to their customers, this release extends the API with a mailing address for each person.\npackage v20160606 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress Address } We now have two structs used in storage:\npackage v1 type Person struct { Id *Guid AlphaKey *string FamilyName *string FirstName *string FullName *string KnownAs *string LastName *string LegalName *string MailingAddress *Address // *** New ***  MiddleName *string SortKey *string } type Address struct { PropertyBag City *string Street *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The required ConvertToStorage() and ConvertFromStorage() methods get generated in the expected way:\npackage v20160606 import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.SortKey = person.AlphaKey dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName // *** Copy the mailing address over too ***  address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version func (address *Address) ConvertToStorage(dest v1.Address) error { dest.Street = address.Street dest.City = address.City if assignable, ok := person.(AssignableToAddress); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source v1.Person) error { person.AlphaKey = source.SortKey // *** Rename still is automatically handled ***  person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName // *** Copy the mailing address over too ***  if storage.MailingAddress != nil { address := \u0026amp;Address{} err := address.ConvertFromStorage(source.Address) person.MailingAddress = address } if assignable, ok := person.(AssignableFromPerson); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } // ConvertFromStorage converts from the hub storage version to this version func (address *Address) ConvertFromStorage(source v1.Address) error { address.Street = source.Street address.City = source.City if assignable, ok := person.(AssignableFromAddress); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } We\u0026rsquo;re recursively applying the same conversion pattern to Address as we have already been using for Person. This scales to any level of nesting without the code becoming unweildy.\nVersion Map #  Again we see the oldest version (2012-02-02) drop out:\nVersion 2017-07-07 - Optionality changes #  In the 2016-06-06 version of the API, the MailingAddress property was mandatory. Since not everyone has a mailing address (some people receive no physical mail), this is now being made optional.\nThe change to the API declarations is simple:\npackage v20170707 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress *Address // *** Was mandatory, now optional *** } Storage Conversion #  The storage version is identical to that generated used previously (because all properties are marked as optional anyway) and are not shown here.\nWhat does change is the ConvertToStorage() method, which now needs to handle the case where the MailingAddress has not been included:\npackage v20170707 import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Need to check whether we have a mailing address to copy ***  if person.MailingAddress != nil { address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we instead had an optional property that became required in a later version of the API, the generated code for ConvertToStorage() would become simpler as the check for nil would not be needed.\nVersion Map #  Note that the 2013-03-03 version has now dropped out:\nHow often do optionality changes happen? #  At the time of writing, there are 100 version-to-version changes where properties became optional in the later version of the API, and 99 version-to-version changes where properties became required.\nIssue: Property Amnesia #  Our code generator only knows about properties defined in current versions of the API. Once an API version has been excluded (or if the JSON schema definition is no longer available), the generator completely forgets about older properties.\nThis means that we now have a significant issue - with the versions 2011-01-01, 2012-02-02 and 2013-03-03 no longer included, we can no longer fully generate the expected storage version automatically.\nThe properties FirstName, MiddleName and LastName no longer exist - they are only defined on the earliest versions of the API.\nAs a consequence, the storage version generated for this release will be this:\npackage v1 type Person struct { AlphaKey *string FamilyName *string FullName *string Id *Guid KnownAs *string LegalName *string MailingAddress *Address SortKey *string } type Address struct { PropertyBag City *string Street *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} References to FirstName, MiddleName and LastName will disappear across all the generated ConvertFromStorage() and ConvertToStorage() methods as well.\nThis is a breaking change. Existing long time users of the service operator, with CRDs serialized containing any of the properties FirstName, MiddleName and LastName will find that their clusters break when this version of the service operator is deployed.\nWithout explicit intervention in the operator, their only mitigation would be to revert back to the earlier version of the service operator and never upgrade it ever again.\nThe root cause of the problem is that the CRD has never been modified (upgraded) - once first deployed the resource is never modified, only loaded and reconciled.\nTo retain backward compatibility we would need to manually merge the generated code with prior versions to retain both the property definitions and the conversion support previously generated.\nThere are many problems with this approach:\n Violates the goal of avoiding changes to generated files. Merging these changes would be tedious and error prone. Changes would need to be re-merged for every subsequent release of the service operator. Manual conversions would need to be written for newer API versions. Over time, the number of classes requiring manual attention would grow.  Version 2018-08-08 - Extending nested properties #  Defining an address simply as Street and City has been found to be overly simplistic, so this release makes changes to allow a more flexible approach.\npackage v20180808 type Address struct { // FullAddress shows the entire address as should be used on postage  FullAddress string City string Country string PostCode string } As before, the storage version is updated with the additional properties:\npackage v1 type Address struct { City *string Country *string // *** New ***  FullAddress *string // *** New ***  PostCode *string // *** New ***  Street *string } These changes are entirely similar to those previously covered in version 2014-04-04, above.\nVersion Map #  In this release, we see that support for both 2014-04-04 and the preview version 2014-04-04preview has been dropped:\nDropping those releases triggers a reccurrance of the Property Amnesia issue discussed above - the FullName property (only included in the 2014-04-04preview release) has been forgotten.\nVersion 2019-09-09 - Changing types #  Realizing that some people get deliveries to places that don\u0026rsquo;t appear in any formal database of addresses, in this release the name of the type changes to Location and location coordinates are added:\npackage v20190909 type Location struct { FullAddress string City string Country string PostCode string Lattitude double Longitide double } The storage version for Location gets generated in a straightforward way:\npackage v1 type Location struct { City *string Country *string FullAddress *string PostCode *string } We also need to retain the Address struct - if we drop support for it, we will be breaking existing users as we will be unable to deserialize their resources.\ntype Address struct { City *string Country *string FullAddress *string PostCode *string Street *string } Issue: Type collision #  We run into a problem with the storage version of the Person type:\npackage v1 type Person struct { Id *Guid AlphaKey *string FamilyName *string FullName *string KnownAs *string LegalName *string MailingAddress *Address // *** Existing property ***  MailingAddress *Location // *** New property with the same name ***  SortKey *string } We can\u0026rsquo;t have two properties with the same name, either we create a single property that handles both types, or we must change the name of one of them.\nWe can\u0026rsquo;t change the name of the existing property, because that would break existing users who already have serialised resources. For similar reasons, we can\u0026rsquo;t change the type of the existing property.\nSo we need to change the name of the new property - and need to do so in a deterministic way to ensure that we generate the same code each time. One way would be to suffic the type name with the version:\npackage v1 type Person struct { Id *Guid AlphaKey *string FamilyName *string FullName *string KnownAs *string LegalName *string MailingAddress *Address MailingAddress_v20190909 *Location SortKey *string } Needing to do this is a wart, but one with a nasty sting in the tail:\nWhen the original MailingAddress property ages out of the system (see property amnesia, above), we\u0026rsquo;ll no longer have a collision, and the storage struct will be generated with this structure:\npackage v1 type Person struct { Id *Guid AlphaKey *string FamilyName *string FullName *string KnownAs *string LegalName *string MailingAddress *Location SortKey *string } This is a major breaking change.\nNot only will this break older users who have serialized resources using Address, but it will also break newer users who have serialized resources using Location.\nStorage Conversion #  The conversion methods need to change as well. If we configure metadata detailing the rename (as we did for properties in version 2015-05-05), we can generate the required conversions automatically:\npackage v20170707 // *** Updated storage version *** import v1 // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest v1.Person) error { // ... elided properties ...  if person.MailingAddress != nil { address := \u0026amp;storage.Location{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version // ** Different parameter type for dest *** func (address *Address) ConvertToStorage(dest v1.Location) error { dest.Street = address.Street dest.City = address.City // *** Interface has been renamed too **  if assignable, ok := person.(AssignableToLocation); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we don\u0026rsquo;t include metadata to capture type renames, the conversion can be manually injected by implementing the AssignableToLocation interface.\nVersion Map #  How often do properties change their type? #  At the time of writing, there are 160 version-to-version changes where the type of the property changes. This count excludes cases where an optional property become mandatory, or vice versa.\n"},{"id":52,"href":"/azure-service-operator/introduction/secrets/","title":"Handling secrets","section":"User’s Guide","content":"Handling secrets #  Resources supported by Azure Service Operator may require secrets as input (passwords, SSH keys, etc). They may also produce secrets as \u0026ldquo;output\u0026rdquo; (storage keys, connection strings, etc).\nASO has integration with Kubernetes secrets to interact with these different types of secrets.\nHow to provide secrets to Azure #  Resources may have fields in their spec that expect a reference to a Kubernetes Secret. For example, in order to create a VM, you may want to specify an SSH password to enable SSH access to that VM.\nThe field in the spec will be a SecretReference, which refers to a particular Kubernetes Secret key.\nExample (from the MySQL FlexibleServer sample):\napiVersion: dbformysql.azure.com/v1alpha1api20210501 kind: FlexibleServer metadata: name: samplemysql namespace: default spec: location: westus2 owner: name: aso-sample-rg version: \u0026#34;8.0.21\u0026#34; sku: name: Standard_D4ds_v4 tier: GeneralPurpose administratorLogin: myAdmin administratorLoginPassword: # This is the name/key of a Kubernetes secret in the same namespace name: server-admin-pw key: password storage: storageSizeGB: 128 How to retrieve secrets created by Azure #  Some Azure resources produce secrets themselves. ASO supports automatically querying these secrets and storing them in the SecretDestination you specify.\nThese secrets will be written to the destination(s) you specify once the resource has successfully been provisioned in Azure. The resource will not move to Condition Ready=True until the secrets have been written.\nExample:\napiVersion: documentdb.azure.com/v1alpha1api20210515 kind: DatabaseAccount metadata: name: sample-db-account namespace: default spec: location: westcentralus owner: name: aso-sample-rg kind: MongoDB databaseAccountOfferType: Standard locations: - locationName: westcentralus operatorSpec: secrets: primaryMasterKey: name: mysecret key: primarymasterkey secondaryMasterKey: name: mysecret key: secondarymasterkey documentEndpoint: # Can put different secrets into different Kubernetes secrets, if desired name: myendpoint key: endpoint "},{"id":53,"href":"/azure-service-operator/reference/insights.v1alpha1api20180501preview/","title":"insights.azure.com/v1alpha1api20180501preview","section":"References","content":"insights.azure.com/v1alpha1api20180501preview  Package v1alpha1api20180501preview contains API Schema definitions for the insights v1alpha1api20180501preview API group\n Resource Types:  HeaderField   (Appears on:WebTestPropertiesRequest)  Deprecated version of HeaderField. Use v1beta20180501preview.HeaderField instead\n    Field Description      key  string        value  string        HeaderFieldARM   (Appears on:WebTestPropertiesRequestARM)  Deprecated version of HeaderField. Use v1beta20180501preview.HeaderField instead\n    Field Description      key  string        value  string        HeaderField_Status   (Appears on:WebTestProperties_Status_Request)  Deprecated version of HeaderField_Status. Use v1beta20180501preview.HeaderField_Status instead\n    Field Description      key  string        value  string        HeaderField_StatusARM   (Appears on:WebTestProperties_Status_RequestARM)  Deprecated version of HeaderField_Status. Use v1beta20180501preview.HeaderField_Status instead\n    Field Description      key  string        value  string        WebTestGeolocation   (Appears on:Webtests_Spec)  Deprecated version of WebTestGeolocation. Use v1beta20180501preview.WebTestGeolocation instead\n    Field Description      Id  string        WebTestGeolocationARM   (Appears on:WebTestPropertiesARM)  Deprecated version of WebTestGeolocation. Use v1beta20180501preview.WebTestGeolocation instead\n    Field Description      Id  string        WebTestGeolocation_Status   (Appears on:WebTest_Status)  Deprecated version of WebTestGeolocation_Status. Use v1beta20180501preview.WebTestGeolocation_Status instead\n    Field Description      Id  string        WebTestGeolocation_StatusARM   (Appears on:WebTestProperties_StatusARM)  Deprecated version of WebTestGeolocation_Status. Use v1beta20180501preview.WebTestGeolocation_Status instead\n    Field Description      Id  string        WebTestPropertiesARM   (Appears on:Webtests_SpecARM)  Deprecated version of WebTestProperties. Use v1beta20180501preview.WebTestProperties instead\n    Field Description      Configuration  WebTestPropertiesConfigurationARM         Description  string        Enabled  bool        Frequency  int        Kind  WebTestPropertiesKind         Locations  []WebTestGeolocationARM         Name  string        Request  WebTestPropertiesRequestARM         RetryEnabled  bool        SyntheticMonitorId  string        Timeout  int        ValidationRules  WebTestPropertiesValidationRulesARM         WebTestPropertiesConfiguration   (Appears on:Webtests_Spec)  Deprecated version of WebTestPropertiesConfiguration. Use v1beta20180501preview.WebTestPropertiesConfiguration instead\n    Field Description      WebTest  string        WebTestPropertiesConfigurationARM   (Appears on:WebTestPropertiesARM)  Deprecated version of WebTestPropertiesConfiguration. Use v1beta20180501preview.WebTestPropertiesConfiguration instead\n    Field Description      WebTest  string        WebTestPropertiesKind (string alias)  (Appears on:WebTestPropertiesARM, Webtests_Spec)  Deprecated version of WebTestPropertiesKind. Use v1beta20180501preview.WebTestPropertiesKind instead\n    Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;multistep\u0026#34;\n  \u0026#34;ping\u0026#34;\n  \u0026#34;standard\u0026#34;\n    WebTestPropertiesRequest   (Appears on:Webtests_Spec)  Deprecated version of WebTestPropertiesRequest. Use v1beta20180501preview.WebTestPropertiesRequest instead\n    Field Description      FollowRedirects  bool        Headers  []HeaderField         HttpVerb  string        ParseDependentRequests  bool        RequestBody  string        RequestUrl  string        WebTestPropertiesRequestARM   (Appears on:WebTestPropertiesARM)  Deprecated version of WebTestPropertiesRequest. Use v1beta20180501preview.WebTestPropertiesRequest instead\n    Field Description      FollowRedirects  bool        Headers  []HeaderFieldARM         HttpVerb  string        ParseDependentRequests  bool        RequestBody  string        RequestUrl  string        WebTestPropertiesStatusKind (string alias)  (Appears on:WebTestProperties_StatusARM, WebTest_Status)  Deprecated version of WebTestPropertiesStatusKind. Use v1beta20180501preview.WebTestPropertiesStatusKind instead\n    Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;multistep\u0026#34;\n  \u0026#34;ping\u0026#34;\n  \u0026#34;standard\u0026#34;\n    WebTestPropertiesValidationRules   (Appears on:Webtests_Spec)  Deprecated version of WebTestPropertiesValidationRules. Use v1beta20180501preview.WebTestPropertiesValidationRules instead\n    Field Description      ContentValidation  WebTestPropertiesValidationRulesContentValidation         ExpectedHttpStatusCode  int        IgnoreHttpsStatusCode  bool        SSLCertRemainingLifetimeCheck  int        SSLCheck  bool        WebTestPropertiesValidationRulesARM   (Appears on:WebTestPropertiesARM)  Deprecated version of WebTestPropertiesValidationRules. Use v1beta20180501preview.WebTestPropertiesValidationRules instead\n    Field Description      ContentValidation  WebTestPropertiesValidationRulesContentValidationARM         ExpectedHttpStatusCode  int        IgnoreHttpsStatusCode  bool        SSLCertRemainingLifetimeCheck  int        SSLCheck  bool        WebTestPropertiesValidationRulesContentValidation   (Appears on:WebTestPropertiesValidationRules)  Deprecated version of WebTestPropertiesValidationRulesContentValidation. Use v1beta20180501preview.WebTestPropertiesValidationRulesContentValidation instead\n    Field Description      ContentMatch  string        IgnoreCase  bool        PassIfTextFound  bool        WebTestPropertiesValidationRulesContentValidationARM   (Appears on:WebTestPropertiesValidationRulesARM)  Deprecated version of WebTestPropertiesValidationRulesContentValidation. Use v1beta20180501preview.WebTestPropertiesValidationRulesContentValidation instead\n    Field Description      ContentMatch  string        IgnoreCase  bool        PassIfTextFound  bool        WebTestProperties_StatusARM   (Appears on:WebTest_StatusARM)  Deprecated version of WebTestProperties_Status. Use v1beta20180501preview.WebTestProperties_Status instead\n    Field Description      Configuration  WebTestProperties_Status_ConfigurationARM         Description  string        Enabled  bool        Frequency  int        Kind  WebTestPropertiesStatusKind         Locations  []WebTestGeolocation_StatusARM         Name  string        provisioningState  string        Request  WebTestProperties_Status_RequestARM         RetryEnabled  bool        SyntheticMonitorId  string        Timeout  int        ValidationRules  WebTestProperties_Status_ValidationRulesARM         WebTestProperties_Status_Configuration   (Appears on:WebTest_Status)  Deprecated version of WebTestProperties_Status_Configuration. Use v1beta20180501preview.WebTestProperties_Status_Configuration instead\n    Field Description      WebTest  string        WebTestProperties_Status_ConfigurationARM   (Appears on:WebTestProperties_StatusARM)  Deprecated version of WebTestProperties_Status_Configuration. Use v1beta20180501preview.WebTestProperties_Status_Configuration instead\n    Field Description      WebTest  string        WebTestProperties_Status_Request   (Appears on:WebTest_Status)  Deprecated version of WebTestProperties_Status_Request. Use v1beta20180501preview.WebTestProperties_Status_Request instead\n    Field Description      FollowRedirects  bool        Headers  []HeaderField_Status         HttpVerb  string        ParseDependentRequests  bool        RequestBody  string        RequestUrl  string        WebTestProperties_Status_RequestARM   (Appears on:WebTestProperties_StatusARM)  Deprecated version of WebTestProperties_Status_Request. Use v1beta20180501preview.WebTestProperties_Status_Request instead\n    Field Description      FollowRedirects  bool        Headers  []HeaderField_StatusARM         HttpVerb  string        ParseDependentRequests  bool        RequestBody  string        RequestUrl  string        WebTestProperties_Status_ValidationRules   (Appears on:WebTest_Status)  Deprecated version of WebTestProperties_Status_ValidationRules. Use v1beta20180501preview.WebTestProperties_Status_ValidationRules instead\n    Field Description      ContentValidation  WebTestProperties_Status_ValidationRules_ContentValidation         ExpectedHttpStatusCode  int        IgnoreHttpsStatusCode  bool        SSLCertRemainingLifetimeCheck  int        SSLCheck  bool        WebTestProperties_Status_ValidationRulesARM   (Appears on:WebTestProperties_StatusARM)  Deprecated version of WebTestProperties_Status_ValidationRules. Use v1beta20180501preview.WebTestProperties_Status_ValidationRules instead\n    Field Description      ContentValidation  WebTestProperties_Status_ValidationRules_ContentValidationARM         ExpectedHttpStatusCode  int        IgnoreHttpsStatusCode  bool        SSLCertRemainingLifetimeCheck  int        SSLCheck  bool        WebTestProperties_Status_ValidationRules_ContentValidation   (Appears on:WebTestProperties_Status_ValidationRules)  Deprecated version of WebTestProperties_Status_ValidationRules_ContentValidation. Use v1beta20180501preview.WebTestProperties_Status_ValidationRules_ContentValidation instead\n    Field Description      ContentMatch  string        IgnoreCase  bool        PassIfTextFound  bool        WebTestProperties_Status_ValidationRules_ContentValidationARM   (Appears on:WebTestProperties_Status_ValidationRulesARM)  Deprecated version of WebTestProperties_Status_ValidationRules_ContentValidation. Use v1beta20180501preview.WebTestProperties_Status_ValidationRules_ContentValidation instead\n    Field Description      ContentMatch  string        IgnoreCase  bool        PassIfTextFound  bool        WebTest_Status   (Appears on:Webtest)  Deprecated version of WebTest_Status. Use v1beta20180501preview.WebTest_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    Configuration  WebTestProperties_Status_Configuration         Description  string        Enabled  bool        Frequency  int        id  string        Kind  WebTestPropertiesStatusKind         location  string        Locations  []WebTestGeolocation_Status         name  string        properties_name  string        provisioningState  string        Request  WebTestProperties_Status_Request         RetryEnabled  bool        SyntheticMonitorId  string        tags  Kubernetes v1.JSON         Timeout  int        type  string        ValidationRules  WebTestProperties_Status_ValidationRules         WebTest_StatusARM   Deprecated version of WebTest_Status. Use v1beta20180501preview.WebTest_Status instead\n    Field Description      id  string        location  string        name  string        properties  WebTestProperties_StatusARM         tags  Kubernetes v1.JSON         type  string        Webtest   Deprecated version of Webtest. Use v1beta20180501preview.Webtest instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Webtests_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    Configuration  WebTestPropertiesConfiguration         Description  string        Enabled  bool        Frequency  int        Kind  WebTestPropertiesKind         location  string        Locations  []WebTestGeolocation         Name  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    Request  WebTestPropertiesRequest         RetryEnabled  bool        SyntheticMonitorId  string        tags  map[string]string        Timeout  int        ValidationRules  WebTestPropertiesValidationRules            status  WebTest_Status         Webtests_Spec   (Appears on:Webtest)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    Configuration  WebTestPropertiesConfiguration         Description  string        Enabled  bool        Frequency  int        Kind  WebTestPropertiesKind         location  string        Locations  []WebTestGeolocation         Name  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    Request  WebTestPropertiesRequest         RetryEnabled  bool        SyntheticMonitorId  string        tags  map[string]string        Timeout  int        ValidationRules  WebTestPropertiesValidationRules         Webtests_SpecARM   Deprecated version of Webtests_Spec. Use v1beta20180501preview.Webtests_Spec instead\n    Field Description      location  string        name  string        properties  WebTestPropertiesARM         tags  map[string]string         "},{"id":54,"href":"/azure-service-operator/reference/insights.v1alpha1api20200202/","title":"insights.azure.com/v1alpha1api20200202","section":"References","content":"insights.azure.com/v1alpha1api20200202  Package v1alpha1api20200202 contains API Schema definitions for the insights v1alpha1api20200202 API group\n Resource Types:  ApplicationInsightsComponentPropertiesARM   (Appears on:Components_SpecARM)  Deprecated version of ApplicationInsightsComponentProperties. Use v1beta20200202.ApplicationInsightsComponentProperties instead\n    Field Description      Application_Type  ApplicationInsightsComponentPropertiesApplicationType         DisableIpMasking  bool        DisableLocalAuth  bool        Flow_Type  ApplicationInsightsComponentPropertiesFlowType         ForceCustomerStorageForProfiler  bool        HockeyAppId  string        ImmediatePurgeDataOn30Days  bool        IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode         publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery         Request_Source  ApplicationInsightsComponentPropertiesRequestSource         RetentionInDays  int        SamplingPercentage  float64        workspaceResourceId  string        ApplicationInsightsComponentPropertiesApplicationType (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesApplicationType. Use v1beta20200202.ApplicationInsightsComponentPropertiesApplicationType instead\n    Value Description   \u0026#34;other\u0026#34;\n  \u0026#34;web\u0026#34;\n    ApplicationInsightsComponentPropertiesFlowType (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesFlowType. Use v1beta20200202.ApplicationInsightsComponentPropertiesFlowType instead\n    Value Description   \u0026#34;Bluefield\u0026#34;\n    ApplicationInsightsComponentPropertiesIngestionMode (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesIngestionMode. Use v1beta20200202.ApplicationInsightsComponentPropertiesIngestionMode instead\n    Value Description   \u0026#34;ApplicationInsights\u0026#34;\n  \u0026#34;ApplicationInsightsWithDiagnosticSettings\u0026#34;\n  \u0026#34;LogAnalytics\u0026#34;\n    ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion. Use v1beta20200202.ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery. Use v1beta20200202.ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    ApplicationInsightsComponentPropertiesRequestSource (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)  Deprecated version of ApplicationInsightsComponentPropertiesRequestSource. Use v1beta20200202.ApplicationInsightsComponentPropertiesRequestSource instead\n    Value Description   \u0026#34;rest\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusApplicationType (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)  Deprecated version of ApplicationInsightsComponentPropertiesStatusApplicationType. Use v1beta20200202.ApplicationInsightsComponentPropertiesStatusApplicationType instead\n    Value Description   \u0026#34;other\u0026#34;\n  \u0026#34;web\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusFlowType (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)  Deprecated version of ApplicationInsightsComponentPropertiesStatusFlowType. Use v1beta20200202.ApplicationInsightsComponentPropertiesStatusFlowType instead\n    Value Description   \u0026#34;Bluefield\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusIngestionMode (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)  Deprecated version of ApplicationInsightsComponentPropertiesStatusIngestionMode. Use v1beta20200202.ApplicationInsightsComponentPropertiesStatusIngestionMode instead\n    Value Description   \u0026#34;ApplicationInsights\u0026#34;\n  \u0026#34;ApplicationInsightsWithDiagnosticSettings\u0026#34;\n  \u0026#34;LogAnalytics\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusRequestSource (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)  Deprecated version of ApplicationInsightsComponentPropertiesStatusRequestSource. Use v1beta20200202.ApplicationInsightsComponentPropertiesStatusRequestSource instead\n    Value Description   \u0026#34;rest\u0026#34;\n    ApplicationInsightsComponentProperties_StatusARM   (Appears on:ApplicationInsightsComponent_StatusARM)  Deprecated version of ApplicationInsightsComponentProperties_Status. Use v1beta20200202.ApplicationInsightsComponentProperties_Status instead\n    Field Description      AppId  string        ApplicationId  string        Application_Type  ApplicationInsightsComponentPropertiesStatusApplicationType         ConnectionString  string        CreationDate  string        DisableIpMasking  bool        DisableLocalAuth  bool        Flow_Type  ApplicationInsightsComponentPropertiesStatusFlowType         ForceCustomerStorageForProfiler  bool        HockeyAppId  string        HockeyAppToken  string        ImmediatePurgeDataOn30Days  bool        IngestionMode  ApplicationInsightsComponentPropertiesStatusIngestionMode         InstrumentationKey  string        LaMigrationDate  string        Name  string        PrivateLinkScopedResources  []PrivateLinkScopedResource_StatusARM         provisioningState  string        publicNetworkAccessForIngestion  PublicNetworkAccessType_Status         publicNetworkAccessForQuery  PublicNetworkAccessType_Status         Request_Source  ApplicationInsightsComponentPropertiesStatusRequestSource         RetentionInDays  int        SamplingPercentage  float64        TenantId  string        WorkspaceResourceId  string        ApplicationInsightsComponent_Status   (Appears on:Component)  Deprecated version of ApplicationInsightsComponent_Status. Use v1beta20200202.ApplicationInsightsComponent_Status instead\n    Field Description      AppId  string        ApplicationId  string        Application_Type  ApplicationInsightsComponentPropertiesStatusApplicationType         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ConnectionString  string        CreationDate  string        DisableIpMasking  bool        DisableLocalAuth  bool        etag  string        Flow_Type  ApplicationInsightsComponentPropertiesStatusFlowType         ForceCustomerStorageForProfiler  bool        HockeyAppId  string        HockeyAppToken  string        id  string        ImmediatePurgeDataOn30Days  bool        IngestionMode  ApplicationInsightsComponentPropertiesStatusIngestionMode         InstrumentationKey  string        kind  string        LaMigrationDate  string        location  string        name  string        PrivateLinkScopedResources  []PrivateLinkScopedResource_Status         properties_name  string        provisioningState  string        publicNetworkAccessForIngestion  PublicNetworkAccessType_Status         publicNetworkAccessForQuery  PublicNetworkAccessType_Status         Request_Source  ApplicationInsightsComponentPropertiesStatusRequestSource         RetentionInDays  int        SamplingPercentage  float64        tags  Kubernetes v1.JSON         TenantId  string        type  string        WorkspaceResourceId  string        ApplicationInsightsComponent_StatusARM   Deprecated version of ApplicationInsightsComponent_Status. Use v1beta20200202.ApplicationInsightsComponent_Status instead\n    Field Description      etag  string        id  string        kind  string        location  string        name  string        properties  ApplicationInsightsComponentProperties_StatusARM         tags  Kubernetes v1.JSON         type  string        Component   Deprecated version of Component. Use v1beta20200202.Component instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Components_Spec          Application_Type  ApplicationInsightsComponentPropertiesApplicationType         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    DisableIpMasking  bool        DisableLocalAuth  bool        etag  string        Flow_Type  ApplicationInsightsComponentPropertiesFlowType         ForceCustomerStorageForProfiler  bool        HockeyAppId  string        ImmediatePurgeDataOn30Days  bool        IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode         kind  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery         Request_Source  ApplicationInsightsComponentPropertiesRequestSource         RetentionInDays  int        SamplingPercentage  float64        tags  map[string]string        workspaceResourceReference  genruntime.ResourceReference            status  ApplicationInsightsComponent_Status         Components_Spec   (Appears on:Component)      Field Description      Application_Type  ApplicationInsightsComponentPropertiesApplicationType         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    DisableIpMasking  bool        DisableLocalAuth  bool        etag  string        Flow_Type  ApplicationInsightsComponentPropertiesFlowType         ForceCustomerStorageForProfiler  bool        HockeyAppId  string        ImmediatePurgeDataOn30Days  bool        IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode         kind  string        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery         Request_Source  ApplicationInsightsComponentPropertiesRequestSource         RetentionInDays  int        SamplingPercentage  float64        tags  map[string]string        workspaceResourceReference  genruntime.ResourceReference         Components_SpecARM   Deprecated version of Components_Spec. Use v1beta20200202.Components_Spec instead\n    Field Description      etag  string        kind  string        location  string        name  string        properties  ApplicationInsightsComponentPropertiesARM         tags  map[string]string        PrivateLinkScopedResource_Status   (Appears on:ApplicationInsightsComponent_Status)  Deprecated version of PrivateLinkScopedResource_Status. Use v1beta20200202.PrivateLinkScopedResource_Status instead\n    Field Description      ResourceId  string        ScopeId  string        PrivateLinkScopedResource_StatusARM   (Appears on:ApplicationInsightsComponentProperties_StatusARM)  Deprecated version of PrivateLinkScopedResource_Status. Use v1beta20200202.PrivateLinkScopedResource_Status instead\n    Field Description      ResourceId  string        ScopeId  string        PublicNetworkAccessType_Status (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)  Deprecated version of PublicNetworkAccessType_Status. Use v1beta20200202.PublicNetworkAccessType_Status instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n     "},{"id":55,"href":"/azure-service-operator/reference/insights.v1beta20180501preview/","title":"insights.azure.com/v1beta20180501preview","section":"References","content":"insights.azure.com/v1beta20180501preview  Package v1beta20180501preview contains API Schema definitions for the insights v1beta20180501preview API group\n Resource Types:  HeaderField   (Appears on:WebTestPropertiesRequest)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/HeaderField\n    Field Description      key  string    Key: The name of the header.\n    value  string    Value: The value of the header.\n    HeaderFieldARM   (Appears on:WebTestPropertiesRequestARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/HeaderField\n    Field Description      key  string    Key: The name of the header.\n    value  string    Value: The value of the header.\n    HeaderField_Status   (Appears on:WebTestProperties_Status_Request)      Field Description      key  string    Key: The name of the header.\n    value  string    Value: The value of the header.\n    HeaderField_StatusARM   (Appears on:WebTestProperties_Status_RequestARM)      Field Description      key  string    Key: The name of the header.\n    value  string    Value: The value of the header.\n    WebTestGeolocation   (Appears on:Webtests_Spec)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestGeolocation\n    Field Description      Id  string    Id: Location ID for the WebTest to run from.\n    WebTestGeolocationARM   (Appears on:WebTestPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestGeolocation\n    Field Description      Id  string    Id: Location ID for the WebTest to run from.\n    WebTestGeolocation_Status   (Appears on:WebTest_Status)      Field Description      Id  string    Id: Location ID for the WebTest to run from.\n    WebTestGeolocation_StatusARM   (Appears on:WebTestProperties_StatusARM)      Field Description      Id  string    Id: Location ID for the WebTest to run from.\n    WebTestPropertiesARM   (Appears on:Webtests_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestProperties\n    Field Description      Configuration  WebTestPropertiesConfigurationARM     Configuration: An XML configuration specification for a WebTest.\n    Description  string    Description: User defined description for this WebTest.\n    Enabled  bool    Enabled: Is the test actively being monitored.\n    Frequency  int    Frequency: Interval in seconds between test runs for this WebTest. Default value is 300.\n    Kind  WebTestPropertiesKind     Kind: The kind of web test this is, valid choices are ping, multistep, basic, and standard.\n    Locations  []WebTestGeolocationARM     Locations: A list of where to physically run the tests from to give global coverage for accessibility of your application.\n    Name  string    Name: User defined name if this WebTest.\n    Request  WebTestPropertiesRequestARM     Request: The collection of request properties\n    RetryEnabled  bool    RetryEnabled: Allow for retries should this WebTest fail.\n    SyntheticMonitorId  string    SyntheticMonitorId: Unique ID of this WebTest. This is typically the same value as the Name field.\n    Timeout  int    Timeout: Seconds until this WebTest will timeout and fail. Default value is 30.\n    ValidationRules  WebTestPropertiesValidationRulesARM     ValidationRules: The collection of validation rule properties\n    WebTestPropertiesConfiguration   (Appears on:Webtests_Spec)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesConfiguration\n    Field Description      WebTest  string    WebTest: The XML specification of a WebTest to run against an application.\n    WebTestPropertiesConfigurationARM   (Appears on:WebTestPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesConfiguration\n    Field Description      WebTest  string    WebTest: The XML specification of a WebTest to run against an application.\n    WebTestPropertiesKind (string alias)  (Appears on:WebTestPropertiesARM, Webtests_Spec)      Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;multistep\u0026#34;\n  \u0026#34;ping\u0026#34;\n  \u0026#34;standard\u0026#34;\n    WebTestPropertiesRequest   (Appears on:Webtests_Spec)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesRequest\n    Field Description      FollowRedirects  bool    FollowRedirects: Follow redirects for this web test.\n    Headers  []HeaderField     Headers: List of headers and their values to add to the WebTest call.\n    HttpVerb  string    HttpVerb: Http verb to use for this web test.\n    ParseDependentRequests  bool    ParseDependentRequests: Parse Dependent request for this WebTest.\n    RequestBody  string    RequestBody: Base64 encoded string body to send with this web test.\n    RequestUrl  string    RequestUrl: Url location to test.\n    WebTestPropertiesRequestARM   (Appears on:WebTestPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesRequest\n    Field Description      FollowRedirects  bool    FollowRedirects: Follow redirects for this web test.\n    Headers  []HeaderFieldARM     Headers: List of headers and their values to add to the WebTest call.\n    HttpVerb  string    HttpVerb: Http verb to use for this web test.\n    ParseDependentRequests  bool    ParseDependentRequests: Parse Dependent request for this WebTest.\n    RequestBody  string    RequestBody: Base64 encoded string body to send with this web test.\n    RequestUrl  string    RequestUrl: Url location to test.\n    WebTestPropertiesStatusKind (string alias)  (Appears on:WebTestProperties_StatusARM, WebTest_Status)      Value Description   \u0026#34;basic\u0026#34;\n  \u0026#34;multistep\u0026#34;\n  \u0026#34;ping\u0026#34;\n  \u0026#34;standard\u0026#34;\n    WebTestPropertiesValidationRules   (Appears on:Webtests_Spec)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesValidationRules\n    Field Description      ContentValidation  WebTestPropertiesValidationRulesContentValidation     ContentValidation: The collection of content validation properties\n    ExpectedHttpStatusCode  int    ExpectedHttpStatusCode: Validate that the WebTest returns the http status code provided.\n    IgnoreHttpsStatusCode  bool    IgnoreHttpsStatusCode: When set, validation will ignore the status code.\n    SSLCertRemainingLifetimeCheck  int    SSLCertRemainingLifetimeCheck: A number of days to check still remain before the the existing SSL cert expires. Value must be positive and the SSLCheck must be set to true.\n    SSLCheck  bool    SSLCheck: Checks to see if the SSL cert is still valid.\n    WebTestPropertiesValidationRulesARM   (Appears on:WebTestPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesValidationRules\n    Field Description      ContentValidation  WebTestPropertiesValidationRulesContentValidationARM     ContentValidation: The collection of content validation properties\n    ExpectedHttpStatusCode  int    ExpectedHttpStatusCode: Validate that the WebTest returns the http status code provided.\n    IgnoreHttpsStatusCode  bool    IgnoreHttpsStatusCode: When set, validation will ignore the status code.\n    SSLCertRemainingLifetimeCheck  int    SSLCertRemainingLifetimeCheck: A number of days to check still remain before the the existing SSL cert expires. Value must be positive and the SSLCheck must be set to true.\n    SSLCheck  bool    SSLCheck: Checks to see if the SSL cert is still valid.\n    WebTestPropertiesValidationRulesContentValidation   (Appears on:WebTestPropertiesValidationRules)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesValidationRulesContentValidation\n    Field Description      ContentMatch  string    ContentMatch: Content to look for in the return of the WebTest. Must not be null or empty.\n    IgnoreCase  bool    IgnoreCase: When set, this value makes the ContentMatch validation case insensitive.\n    PassIfTextFound  bool    PassIfTextFound: When true, validation will pass if there is a match for the ContentMatch string. If false, validation will fail if there is a match\n    WebTestPropertiesValidationRulesContentValidationARM   (Appears on:WebTestPropertiesValidationRulesARM)  Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/definitions/WebTestPropertiesValidationRulesContentValidation\n    Field Description      ContentMatch  string    ContentMatch: Content to look for in the return of the WebTest. Must not be null or empty.\n    IgnoreCase  bool    IgnoreCase: When set, this value makes the ContentMatch validation case insensitive.\n    PassIfTextFound  bool    PassIfTextFound: When true, validation will pass if there is a match for the ContentMatch string. If false, validation will fail if there is a match\n    WebTestProperties_StatusARM   (Appears on:WebTest_StatusARM)      Field Description      Configuration  WebTestProperties_Status_ConfigurationARM     Configuration: An XML configuration specification for a WebTest.\n    Description  string    Description: User defined description for this WebTest.\n    Enabled  bool    Enabled: Is the test actively being monitored.\n    Frequency  int    Frequency: Interval in seconds between test runs for this WebTest. Default value is 300.\n    Kind  WebTestPropertiesStatusKind     Kind: The kind of web test this is, valid choices are ping, multistep, basic, and standard.\n    Locations  []WebTestGeolocation_StatusARM     Locations: A list of where to physically run the tests from to give global coverage for accessibility of your application.\n    Name  string    Name: User defined name if this WebTest.\n    provisioningState  string    ProvisioningState: Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.\n    Request  WebTestProperties_Status_RequestARM     Request: The collection of request properties\n    RetryEnabled  bool    RetryEnabled: Allow for retries should this WebTest fail.\n    SyntheticMonitorId  string    SyntheticMonitorId: Unique ID of this WebTest. This is typically the same value as the Name field.\n    Timeout  int    Timeout: Seconds until this WebTest will timeout and fail. Default value is 30.\n    ValidationRules  WebTestProperties_Status_ValidationRulesARM     ValidationRules: The collection of validation rule properties\n    WebTestProperties_Status_Configuration   (Appears on:WebTest_Status)      Field Description      WebTest  string    WebTest: The XML specification of a WebTest to run against an application.\n    WebTestProperties_Status_ConfigurationARM   (Appears on:WebTestProperties_StatusARM)      Field Description      WebTest  string    WebTest: The XML specification of a WebTest to run against an application.\n    WebTestProperties_Status_Request   (Appears on:WebTest_Status)      Field Description      FollowRedirects  bool    FollowRedirects: Follow redirects for this web test.\n    Headers  []HeaderField_Status     Headers: List of headers and their values to add to the WebTest call.\n    HttpVerb  string    HttpVerb: Http verb to use for this web test.\n    ParseDependentRequests  bool    ParseDependentRequests: Parse Dependent request for this WebTest.\n    RequestBody  string    RequestBody: Base64 encoded string body to send with this web test.\n    RequestUrl  string    RequestUrl: Url location to test.\n    WebTestProperties_Status_RequestARM   (Appears on:WebTestProperties_StatusARM)      Field Description      FollowRedirects  bool    FollowRedirects: Follow redirects for this web test.\n    Headers  []HeaderField_StatusARM     Headers: List of headers and their values to add to the WebTest call.\n    HttpVerb  string    HttpVerb: Http verb to use for this web test.\n    ParseDependentRequests  bool    ParseDependentRequests: Parse Dependent request for this WebTest.\n    RequestBody  string    RequestBody: Base64 encoded string body to send with this web test.\n    RequestUrl  string    RequestUrl: Url location to test.\n    WebTestProperties_Status_ValidationRules   (Appears on:WebTest_Status)      Field Description      ContentValidation  WebTestProperties_Status_ValidationRules_ContentValidation     ContentValidation: The collection of content validation properties\n    ExpectedHttpStatusCode  int    ExpectedHttpStatusCode: Validate that the WebTest returns the http status code provided.\n    IgnoreHttpsStatusCode  bool    IgnoreHttpsStatusCode: When set, validation will ignore the status code.\n    SSLCertRemainingLifetimeCheck  int    SSLCertRemainingLifetimeCheck: A number of days to check still remain before the the existing SSL cert expires. Value must be positive and the SSLCheck must be set to true.\n    SSLCheck  bool    SSLCheck: Checks to see if the SSL cert is still valid.\n    WebTestProperties_Status_ValidationRulesARM   (Appears on:WebTestProperties_StatusARM)      Field Description      ContentValidation  WebTestProperties_Status_ValidationRules_ContentValidationARM     ContentValidation: The collection of content validation properties\n    ExpectedHttpStatusCode  int    ExpectedHttpStatusCode: Validate that the WebTest returns the http status code provided.\n    IgnoreHttpsStatusCode  bool    IgnoreHttpsStatusCode: When set, validation will ignore the status code.\n    SSLCertRemainingLifetimeCheck  int    SSLCertRemainingLifetimeCheck: A number of days to check still remain before the the existing SSL cert expires. Value must be positive and the SSLCheck must be set to true.\n    SSLCheck  bool    SSLCheck: Checks to see if the SSL cert is still valid.\n    WebTestProperties_Status_ValidationRules_ContentValidation   (Appears on:WebTestProperties_Status_ValidationRules)      Field Description      ContentMatch  string    ContentMatch: Content to look for in the return of the WebTest. Must not be null or empty.\n    IgnoreCase  bool    IgnoreCase: When set, this value makes the ContentMatch validation case insensitive.\n    PassIfTextFound  bool    PassIfTextFound: When true, validation will pass if there is a match for the ContentMatch string. If false, validation will fail if there is a match\n    WebTestProperties_Status_ValidationRules_ContentValidationARM   (Appears on:WebTestProperties_Status_ValidationRulesARM)      Field Description      ContentMatch  string    ContentMatch: Content to look for in the return of the WebTest. Must not be null or empty.\n    IgnoreCase  bool    IgnoreCase: When set, this value makes the ContentMatch validation case insensitive.\n    PassIfTextFound  bool    PassIfTextFound: When true, validation will pass if there is a match for the ContentMatch string. If false, validation will fail if there is a match\n    WebTest_Status   (Appears on:Webtest)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    Configuration  WebTestProperties_Status_Configuration     Configuration: An XML configuration specification for a WebTest.\n    Description  string    Description: User defined description for this WebTest.\n    Enabled  bool    Enabled: Is the test actively being monitored.\n    Frequency  int    Frequency: Interval in seconds between test runs for this WebTest. Default value is 300.\n    id  string    Id: Azure resource Id\n    Kind  WebTestPropertiesStatusKind     Kind: The kind of web test this is, valid choices are ping, multistep, basic, and standard.\n    location  string    Location: Resource location\n    Locations  []WebTestGeolocation_Status     Locations: A list of where to physically run the tests from to give global coverage for accessibility of your application.\n    name  string    Name: Azure resource name\n    properties_name  string    PropertiesName: User defined name if this WebTest.\n    provisioningState  string    ProvisioningState: Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.\n    Request  WebTestProperties_Status_Request     Request: The collection of request properties\n    RetryEnabled  bool    RetryEnabled: Allow for retries should this WebTest fail.\n    SyntheticMonitorId  string    SyntheticMonitorId: Unique ID of this WebTest. This is typically the same value as the Name field.\n    tags  Kubernetes v1.JSON     Tags: Resource tags\n    Timeout  int    Timeout: Seconds until this WebTest will timeout and fail. Default value is 30.\n    type  string    Type: Azure resource type\n    ValidationRules  WebTestProperties_Status_ValidationRules     ValidationRules: The collection of validation rule properties\n    WebTest_StatusARM       Field Description      id  string    Id: Azure resource Id\n    location  string    Location: Resource location\n    name  string    Name: Azure resource name\n    properties  WebTestProperties_StatusARM     Properties: Metadata describing a web test for an Azure resource.\n    tags  Kubernetes v1.JSON     Tags: Resource tags\n    type  string    Type: Azure resource type\n    Webtest   Generated from: https://schema.management.azure.com/schemas/2018-05-01-preview/Microsoft.Insights.Application.json#/resourceDefinitions/webtests\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Webtests_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    Configuration  WebTestPropertiesConfiguration     Configuration: An XML configuration specification for a WebTest.\n    Description  string    Description: User defined description for this WebTest.\n    Enabled  bool    Enabled: Is the test actively being monitored.\n    Frequency  int    Frequency: Interval in seconds between test runs for this WebTest. Default value is 300.\n    Kind  WebTestPropertiesKind     Kind: The kind of web test this is, valid choices are ping, multistep, basic, and standard.\n    location  string    Location: Location to deploy resource to\n    Locations  []WebTestGeolocation     Locations: A list of where to physically run the tests from to give global coverage for accessibility of your application.\n    Name  string    Name: User defined name if this WebTest.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    Request  WebTestPropertiesRequest     Request: The collection of request properties\n    RetryEnabled  bool    RetryEnabled: Allow for retries should this WebTest fail.\n    SyntheticMonitorId  string    SyntheticMonitorId: Unique ID of this WebTest. This is typically the same value as the Name field.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Timeout  int    Timeout: Seconds until this WebTest will timeout and fail. Default value is 30.\n    ValidationRules  WebTestPropertiesValidationRules     ValidationRules: The collection of validation rule properties\n       status  WebTest_Status         WebtestsSpecAPIVersion (string alias)      Value Description   \u0026#34;2018-05-01-preview\u0026#34;\n    Webtests_Spec   (Appears on:Webtest)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    Configuration  WebTestPropertiesConfiguration     Configuration: An XML configuration specification for a WebTest.\n    Description  string    Description: User defined description for this WebTest.\n    Enabled  bool    Enabled: Is the test actively being monitored.\n    Frequency  int    Frequency: Interval in seconds between test runs for this WebTest. Default value is 300.\n    Kind  WebTestPropertiesKind     Kind: The kind of web test this is, valid choices are ping, multistep, basic, and standard.\n    location  string    Location: Location to deploy resource to\n    Locations  []WebTestGeolocation     Locations: A list of where to physically run the tests from to give global coverage for accessibility of your application.\n    Name  string    Name: User defined name if this WebTest.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    Request  WebTestPropertiesRequest     Request: The collection of request properties\n    RetryEnabled  bool    RetryEnabled: Allow for retries should this WebTest fail.\n    SyntheticMonitorId  string    SyntheticMonitorId: Unique ID of this WebTest. This is typically the same value as the Name field.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Timeout  int    Timeout: Seconds until this WebTest will timeout and fail. Default value is 30.\n    ValidationRules  WebTestPropertiesValidationRules     ValidationRules: The collection of validation rule properties\n    Webtests_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the Application Insights WebTest resource.\n    properties  WebTestPropertiesARM     Properties: Metadata describing a web test for an Azure resource.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n     "},{"id":56,"href":"/azure-service-operator/reference/insights.v1beta20200202/","title":"insights.azure.com/v1beta20200202","section":"References","content":"insights.azure.com/v1beta20200202  Package v1beta20200202 contains API Schema definitions for the insights v1beta20200202 API group\n Resource Types:  ApplicationInsightsComponentPropertiesARM   (Appears on:Components_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-02-02/Microsoft.Insights.Application.json#/definitions/ApplicationInsightsComponentProperties\n    Field Description      Application_Type  ApplicationInsightsComponentPropertiesApplicationType     ApplicationType: Type of application being monitored.\n    DisableIpMasking  bool    DisableIpMasking: Disable IP masking.\n    DisableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    Flow_Type  ApplicationInsightsComponentPropertiesFlowType     FlowType: Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to \u0026lsquo;Bluefield\u0026rsquo; when creating/updating a component via the REST API.\n    ForceCustomerStorageForProfiler  bool    ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.\n    HockeyAppId  string    HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.\n    ImmediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.\n    IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode     IngestionMode: Indicates the flow of the ingestion.\n    publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.\n    publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.\n    Request_Source  ApplicationInsightsComponentPropertiesRequestSource     RequestSource: Describes what tool created this Application Insights component. Customers using this API should set this to the default \u0026lsquo;rest\u0026rsquo;.\n    RetentionInDays  int    RetentionInDays: Retention period in days.\n    SamplingPercentage  float64    SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.\n    workspaceResourceId  string        ApplicationInsightsComponentPropertiesApplicationType (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;other\u0026#34;\n  \u0026#34;web\u0026#34;\n    ApplicationInsightsComponentPropertiesFlowType (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;Bluefield\u0026#34;\n    ApplicationInsightsComponentPropertiesIngestionMode (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;ApplicationInsights\u0026#34;\n  \u0026#34;ApplicationInsightsWithDiagnosticSettings\u0026#34;\n  \u0026#34;LogAnalytics\u0026#34;\n    ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    ApplicationInsightsComponentPropertiesRequestSource (string alias)  (Appears on:ApplicationInsightsComponentPropertiesARM, Components_Spec)      Value Description   \u0026#34;rest\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusApplicationType (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)      Value Description   \u0026#34;other\u0026#34;\n  \u0026#34;web\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusFlowType (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)      Value Description   \u0026#34;Bluefield\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusIngestionMode (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)      Value Description   \u0026#34;ApplicationInsights\u0026#34;\n  \u0026#34;ApplicationInsightsWithDiagnosticSettings\u0026#34;\n  \u0026#34;LogAnalytics\u0026#34;\n    ApplicationInsightsComponentPropertiesStatusRequestSource (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)      Value Description   \u0026#34;rest\u0026#34;\n    ApplicationInsightsComponentProperties_StatusARM   (Appears on:ApplicationInsightsComponent_StatusARM)      Field Description      AppId  string    AppId: Application Insights Unique ID for your Application.\n    ApplicationId  string    ApplicationId: The unique ID of your application. This field mirrors the \u0026lsquo;Name\u0026rsquo; field and cannot be changed.\n    Application_Type  ApplicationInsightsComponentPropertiesStatusApplicationType     ApplicationType: Type of application being monitored.\n    ConnectionString  string    ConnectionString: Application Insights component connection string.\n    CreationDate  string    CreationDate: Creation Date for the Application Insights component, in ISO 8601 format.\n    DisableIpMasking  bool    DisableIpMasking: Disable IP masking.\n    DisableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    Flow_Type  ApplicationInsightsComponentPropertiesStatusFlowType     FlowType: Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to \u0026lsquo;Bluefield\u0026rsquo; when creating/updating a component via the REST API.\n    ForceCustomerStorageForProfiler  bool    ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.\n    HockeyAppId  string    HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.\n    HockeyAppToken  string    HockeyAppToken: Token used to authenticate communications with between Application Insights and HockeyApp.\n    ImmediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.\n    IngestionMode  ApplicationInsightsComponentPropertiesStatusIngestionMode     IngestionMode: Indicates the flow of the ingestion.\n    InstrumentationKey  string    InstrumentationKey: Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.\n    LaMigrationDate  string    LaMigrationDate: The date which the component got migrated to LA, in ISO 8601 format.\n    Name  string    Name: Application name.\n    PrivateLinkScopedResources  []PrivateLinkScopedResource_StatusARM     PrivateLinkScopedResources: List of linked private link scope resources.\n    provisioningState  string    ProvisioningState: Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.\n    publicNetworkAccessForIngestion  PublicNetworkAccessType_Status     PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.\n    publicNetworkAccessForQuery  PublicNetworkAccessType_Status     PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.\n    Request_Source  ApplicationInsightsComponentPropertiesStatusRequestSource     RequestSource: Describes what tool created this Application Insights component. Customers using this API should set this to the default \u0026lsquo;rest\u0026rsquo;.\n    RetentionInDays  int    RetentionInDays: Retention period in days.\n    SamplingPercentage  float64    SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.\n    TenantId  string    TenantId: Azure Tenant Id.\n    WorkspaceResourceId  string    WorkspaceResourceId: Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.\n    ApplicationInsightsComponent_Status   (Appears on:Component)      Field Description      AppId  string    AppId: Application Insights Unique ID for your Application.\n    ApplicationId  string    ApplicationId: The unique ID of your application. This field mirrors the \u0026lsquo;Name\u0026rsquo; field and cannot be changed.\n    Application_Type  ApplicationInsightsComponentPropertiesStatusApplicationType     ApplicationType: Type of application being monitored.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ConnectionString  string    ConnectionString: Application Insights component connection string.\n    CreationDate  string    CreationDate: Creation Date for the Application Insights component, in ISO 8601 format.\n    DisableIpMasking  bool    DisableIpMasking: Disable IP masking.\n    DisableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    etag  string    Etag: Resource etag\n    Flow_Type  ApplicationInsightsComponentPropertiesStatusFlowType     FlowType: Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to \u0026lsquo;Bluefield\u0026rsquo; when creating/updating a component via the REST API.\n    ForceCustomerStorageForProfiler  bool    ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.\n    HockeyAppId  string    HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.\n    HockeyAppToken  string    HockeyAppToken: Token used to authenticate communications with between Application Insights and HockeyApp.\n    id  string    Id: Azure resource Id\n    ImmediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.\n    IngestionMode  ApplicationInsightsComponentPropertiesStatusIngestionMode     IngestionMode: Indicates the flow of the ingestion.\n    InstrumentationKey  string    InstrumentationKey: Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.\n    kind  string    Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.\n    LaMigrationDate  string    LaMigrationDate: The date which the component got migrated to LA, in ISO 8601 format.\n    location  string    Location: Resource location\n    name  string    Name: Azure resource name\n    PrivateLinkScopedResources  []PrivateLinkScopedResource_Status     PrivateLinkScopedResources: List of linked private link scope resources.\n    properties_name  string    PropertiesName: Application name.\n    provisioningState  string    ProvisioningState: Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.\n    publicNetworkAccessForIngestion  PublicNetworkAccessType_Status     PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.\n    publicNetworkAccessForQuery  PublicNetworkAccessType_Status     PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.\n    Request_Source  ApplicationInsightsComponentPropertiesStatusRequestSource     RequestSource: Describes what tool created this Application Insights component. Customers using this API should set this to the default \u0026lsquo;rest\u0026rsquo;.\n    RetentionInDays  int    RetentionInDays: Retention period in days.\n    SamplingPercentage  float64    SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.\n    tags  Kubernetes v1.JSON     Tags: Resource tags\n    TenantId  string    TenantId: Azure Tenant Id.\n    type  string    Type: Azure resource type\n    WorkspaceResourceId  string    WorkspaceResourceId: Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.\n    ApplicationInsightsComponent_StatusARM       Field Description      etag  string    Etag: Resource etag\n    id  string    Id: Azure resource Id\n    kind  string    Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.\n    location  string    Location: Resource location\n    name  string    Name: Azure resource name\n    properties  ApplicationInsightsComponentProperties_StatusARM     Properties: Properties that define an Application Insights component resource.\n    tags  Kubernetes v1.JSON     Tags: Resource tags\n    type  string    Type: Azure resource type\n    Component   Generated from: https://schema.management.azure.com/schemas/2020-02-02/Microsoft.Insights.Application.json#/resourceDefinitions/components\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Components_Spec          Application_Type  ApplicationInsightsComponentPropertiesApplicationType     ApplicationType: Type of application being monitored.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    DisableIpMasking  bool    DisableIpMasking: Disable IP masking.\n    DisableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    etag  string    Etag: Resource etag\n    Flow_Type  ApplicationInsightsComponentPropertiesFlowType     FlowType: Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to \u0026lsquo;Bluefield\u0026rsquo; when creating/updating a component via the REST API.\n    ForceCustomerStorageForProfiler  bool    ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.\n    HockeyAppId  string    HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.\n    ImmediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.\n    IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode     IngestionMode: Indicates the flow of the ingestion.\n    kind  string    Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.\n    publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.\n    Request_Source  ApplicationInsightsComponentPropertiesRequestSource     RequestSource: Describes what tool created this Application Insights component. Customers using this API should set this to the default \u0026lsquo;rest\u0026rsquo;.\n    RetentionInDays  int    RetentionInDays: Retention period in days.\n    SamplingPercentage  float64    SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    workspaceResourceReference  genruntime.ResourceReference     WorkspaceResourceReference: Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.\n       status  ApplicationInsightsComponent_Status         ComponentsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-02-02\u0026#34;\n    Components_Spec   (Appears on:Component)      Field Description      Application_Type  ApplicationInsightsComponentPropertiesApplicationType     ApplicationType: Type of application being monitored.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    DisableIpMasking  bool    DisableIpMasking: Disable IP masking.\n    DisableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    etag  string    Etag: Resource etag\n    Flow_Type  ApplicationInsightsComponentPropertiesFlowType     FlowType: Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to \u0026lsquo;Bluefield\u0026rsquo; when creating/updating a component via the REST API.\n    ForceCustomerStorageForProfiler  bool    ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.\n    HockeyAppId  string    HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.\n    ImmediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.\n    IngestionMode  ApplicationInsightsComponentPropertiesIngestionMode     IngestionMode: Indicates the flow of the ingestion.\n    kind  string    Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccessForIngestion  ApplicationInsightsComponentPropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.\n    publicNetworkAccessForQuery  ApplicationInsightsComponentPropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.\n    Request_Source  ApplicationInsightsComponentPropertiesRequestSource     RequestSource: Describes what tool created this Application Insights component. Customers using this API should set this to the default \u0026lsquo;rest\u0026rsquo;.\n    RetentionInDays  int    RetentionInDays: Retention period in days.\n    SamplingPercentage  float64    SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    workspaceResourceReference  genruntime.ResourceReference     WorkspaceResourceReference: Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.\n    Components_SpecARM       Field Description      etag  string    Etag: Resource etag\n    kind  string    Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the Application Insights component resource.\n    properties  ApplicationInsightsComponentPropertiesARM     Properties: Properties that define an Application Insights component resource.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    PrivateLinkScopedResource_Status   (Appears on:ApplicationInsightsComponent_Status)      Field Description      ResourceId  string    ResourceId: The full resource Id of the private link scope resource.\n    ScopeId  string    ScopeId: The private link scope unique Identifier.\n    PrivateLinkScopedResource_StatusARM   (Appears on:ApplicationInsightsComponentProperties_StatusARM)      Field Description      ResourceId  string    ResourceId: The full resource Id of the private link scope resource.\n    ScopeId  string    ScopeId: The private link scope unique Identifier.\n    PublicNetworkAccessType_Status (string alias)  (Appears on:ApplicationInsightsComponentProperties_StatusARM, ApplicationInsightsComponent_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n     "},{"id":57,"href":"/azure-service-operator/introduction/installing-from-yaml/","title":"Installation: From YAML","section":"User’s Guide","content":"Prerequisites #   You have installed Cert Manager as per the installation instructions up to the \u0026ldquo;install from Helm\u0026rdquo; step. You have the AZURE_SUBSCRIPTION_ID, AZURE_TENANT_ID, AZURE_CLIENT_ID and AZURE_CLIENT_SECRET environment variables set from the installation instructions.  Installation #   Install the latest v2+ release of Azure Service Operator. kubectl apply --server-side=true -f https://github.com/Azure/azure-service-operator/releases/download/v2.0.0-beta.0/azureserviceoperator_v2.0.0-beta.0.yaml  Create the Azure Service Operator v2 secret. This secret contains the identity that Azure Service Operator will run as. Make sure that you have the 4 environment variables from the Helm installation instructions set. To learn more about other authentication options, see the authentication documentation: cat \u0026lt;\u0026lt;EOF | kubectl apply -f - apiVersion: v1 kind: Secret metadata: name: aso-controller-settings namespace: azureserviceoperator-system stringData: AZURE_SUBSCRIPTION_ID: \u0026#34;$AZURE_SUBSCRIPTION_ID\u0026#34; AZURE_TENANT_ID: \u0026#34;$AZURE_TENANT_ID\u0026#34; AZURE_CLIENT_ID: \u0026#34;$AZURE_CLIENT_ID\u0026#34; AZURE_CLIENT_SECRET: \u0026#34;$AZURE_CLIENT_SECRET\u0026#34; EOF   "},{"id":58,"href":"/azure-service-operator/reference/managedidentity.v1alpha1api20181130/","title":"managedidentity.azure.com/v1alpha1api20181130","section":"References","content":"managedidentity.azure.com/v1alpha1api20181130  Package v1alpha1api20181130 contains API Schema definitions for the managedidentity v1alpha1api20181130 API group\n Resource Types:  Identity_Status   (Appears on:UserAssignedIdentity)  Deprecated version of Identity_Status. Use v1beta20181130.Identity_Status instead\n    Field Description      clientId  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        location  string        name  string        principalId  string        tags  map[string]string        tenantId  string        type  string        Identity_StatusARM   Deprecated version of Identity_Status. Use v1beta20181130.Identity_Status instead\n    Field Description      id  string        location  string        name  string        properties  UserAssignedIdentityProperties_StatusARM         tags  map[string]string        type  string        UserAssignedIdentities_Spec   (Appears on:UserAssignedIdentity)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string        UserAssignedIdentities_SpecARM   Deprecated version of UserAssignedIdentities_Spec. Use v1beta20181130.UserAssignedIdentities_Spec instead\n    Field Description      location  string        name  string        tags  map[string]string        UserAssignedIdentity   Deprecated version of UserAssignedIdentity. Use v1beta20181130.UserAssignedIdentity instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  UserAssignedIdentities_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string           status  Identity_Status         UserAssignedIdentityProperties_StatusARM   (Appears on:Identity_StatusARM)  Deprecated version of UserAssignedIdentityProperties_Status. Use v1beta20181130.UserAssignedIdentityProperties_Status instead\n    Field Description      clientId  string        principalId  string        tenantId  string         "},{"id":59,"href":"/azure-service-operator/reference/managedidentity.v1beta20181130/","title":"managedidentity.azure.com/v1beta20181130","section":"References","content":"managedidentity.azure.com/v1beta20181130  Package v1beta20181130 contains API Schema definitions for the managedidentity v1beta20181130 API group\n Resource Types:  Identity_Status   (Appears on:UserAssignedIdentity)      Field Description      clientId  string    ClientId: The id of the app associated with the identity. This is a random generated UUID by MSI.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    principalId  string    PrincipalId: The id of the service principal object associated with the created identity.\n    tags  map[string]string    Tags: Resource tags.\n    tenantId  string    TenantId: The id of the tenant which the identity belongs to.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    Identity_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  UserAssignedIdentityProperties_StatusARM     Properties: The properties associated with the identity.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    UserAssignedIdentitiesSpecAPIVersion (string alias)      Value Description   \u0026#34;2018-11-30\u0026#34;\n    UserAssignedIdentities_Spec   (Appears on:UserAssignedIdentity)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The Azure region where the identity lives.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    UserAssignedIdentities_SpecARM       Field Description      location  string    Location: The Azure region where the identity lives.\n    name  string    Name: The name of the identity resource.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    UserAssignedIdentity   Generated from: https://schema.management.azure.com/schemas/2018-11-30/Microsoft.ManagedIdentity.json#/resourceDefinitions/userAssignedIdentities\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  UserAssignedIdentities_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: The Azure region where the identity lives.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  Identity_Status         UserAssignedIdentityProperties_StatusARM   (Appears on:Identity_StatusARM)      Field Description      clientId  string    ClientId: The id of the app associated with the identity. This is a random generated UUID by MSI.\n    principalId  string    PrincipalId: The id of the service principal object associated with the created identity.\n    tenantId  string    TenantId: The id of the tenant which the identity belongs to.\n     "},{"id":60,"href":"/azure-service-operator/reference/network.v1alpha1api20201101/","title":"network.azure.com/v1alpha1api20201101","section":"References","content":"network.azure.com/v1alpha1api20201101  Package v1alpha1api20201101 contains API Schema definitions for the network v1alpha1api20201101 API group\n Resource Types:  AddressSpace   (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Deprecated version of AddressSpace. Use v1beta20201101.AddressSpace instead\n    Field Description      addressPrefixes  []string        AddressSpaceARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM, VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworks_Spec_PropertiesARM)  Deprecated version of AddressSpace. Use v1beta20201101.AddressSpace instead\n    Field Description      addressPrefixes  []string        AddressSpace_Status   (Appears on:VirtualNetworkGateway_Status, VirtualNetworkPeering_Status, VirtualNetwork_Status, VpnClientConfiguration_Status)  Deprecated version of AddressSpace_Status. Use v1beta20201101.AddressSpace_Status instead\n    Field Description      addressPrefixes  []string        AddressSpace_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM, VpnClientConfiguration_StatusARM)  Deprecated version of AddressSpace_Status. Use v1beta20201101.AddressSpace_Status instead\n    Field Description      addressPrefixes  []string        ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      backendAddresses  []ApplicationGatewayBackendAddress_StatusARM         provisioningState  ProvisioningState_Status         ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      backendAddresses  []ApplicationGatewayBackendAddress_Status         etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         type  string        ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM         type  string        ApplicationGatewayBackendAddress_Status   (Appears on:ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of ApplicationGatewayBackendAddress_Status. Use v1beta20201101.ApplicationGatewayBackendAddress_Status instead\n    Field Description      fqdn  string        ipAddress  string        ApplicationGatewayBackendAddress_StatusARM   (Appears on:ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of ApplicationGatewayBackendAddress_Status. Use v1beta20201101.ApplicationGatewayBackendAddress_Status instead\n    Field Description      fqdn  string        ipAddress  string        ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM   (Appears on:ApplicationGatewayIPConfiguration_StatusARM)  Deprecated version of ApplicationGatewayIPConfigurationPropertiesFormat_Status. Use v1beta20201101.ApplicationGatewayIPConfigurationPropertiesFormat_Status instead\n    Field Description      provisioningState  ProvisioningState_Status         subnet  SubResource_StatusARM         ApplicationGatewayIPConfiguration_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of ApplicationGatewayIPConfiguration_Status. Use v1beta20201101.ApplicationGatewayIPConfiguration_Status instead\n    Field Description      etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         subnet  SubResource_Status         type  string        ApplicationGatewayIPConfiguration_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of ApplicationGatewayIPConfiguration_Status. Use v1beta20201101.ApplicationGatewayIPConfiguration_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM         type  string        ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded   (Appears on:SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)  Deprecated version of ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded. Use v1beta20201101.ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded instead\n    Field Description      id  string        ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM   (Appears on:SecurityRulePropertiesFormat_StatusARM)  Deprecated version of ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded. Use v1beta20201101.ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded instead\n    Field Description      id  string        BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)  Deprecated version of BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        BackendAddressPool_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        BackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        BgpSettings   (Appears on:VirtualNetworkGateways_Spec)  Deprecated version of BgpSettings. Use v1beta20201101.BgpSettings instead\n    Field Description      asn  uint32        bgpPeeringAddress  string        bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress         peerWeight  int        BgpSettingsARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of BgpSettings. Use v1beta20201101.BgpSettings instead\n    Field Description      asn  uint32        bgpPeeringAddress  string        bgpPeeringAddresses  []IPConfigurationBgpPeeringAddressARM         peerWeight  int        BgpSettings_Status   (Appears on:VirtualNetworkGateway_Status)  Deprecated version of BgpSettings_Status. Use v1beta20201101.BgpSettings_Status instead\n    Field Description      asn  uint32        bgpPeeringAddress  string        bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress_Status         peerWeight  int        BgpSettings_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)  Deprecated version of BgpSettings_Status. Use v1beta20201101.BgpSettings_Status instead\n    Field Description      asn  uint32        bgpPeeringAddress  string        bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress_StatusARM         peerWeight  int        DdosSettings   (Appears on:PublicIPAddresses_Spec)  Deprecated version of DdosSettings. Use v1beta20201101.DdosSettings instead\n    Field Description      ddosCustomPolicy  SubResource         protectedIP  bool        protectionCoverage  DdosSettingsProtectionCoverage         DdosSettingsARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Deprecated version of DdosSettings. Use v1beta20201101.DdosSettings instead\n    Field Description      ddosCustomPolicy  SubResourceARM         protectedIP  bool        protectionCoverage  DdosSettingsProtectionCoverage         DdosSettingsProtectionCoverage (string alias)  (Appears on:DdosSettings, DdosSettingsARM)  Deprecated version of DdosSettingsProtectionCoverage. Use v1beta20201101.DdosSettingsProtectionCoverage instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    DdosSettingsStatusProtectionCoverage (string alias)  (Appears on:DdosSettings_Status, DdosSettings_StatusARM)  Deprecated version of DdosSettingsStatusProtectionCoverage. Use v1beta20201101.DdosSettingsStatusProtectionCoverage instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    DdosSettings_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of DdosSettings_Status. Use v1beta20201101.DdosSettings_Status instead\n    Field Description      ddosCustomPolicy  SubResource_Status         protectedIP  bool        protectionCoverage  DdosSettingsStatusProtectionCoverage         DdosSettings_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)  Deprecated version of DdosSettings_Status. Use v1beta20201101.DdosSettings_Status instead\n    Field Description      ddosCustomPolicy  SubResource_StatusARM         protectedIP  bool        protectionCoverage  DdosSettingsStatusProtectionCoverage         Delegation_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of Delegation_Status. Use v1beta20201101.Delegation_Status instead\n    Field Description      actions  []string        etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         serviceName  string        type  string        Delegation_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of Delegation_Status. Use v1beta20201101.Delegation_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ServiceDelegationPropertiesFormat_StatusARM         type  string        DhGroup_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of DhGroup_Status. Use v1beta20201101.DhGroup_Status instead\n    Value Description   \u0026#34;DHGroup1\u0026#34;\n  \u0026#34;DHGroup14\u0026#34;\n  \u0026#34;DHGroup2\u0026#34;\n  \u0026#34;DHGroup2048\u0026#34;\n  \u0026#34;DHGroup24\u0026#34;\n  \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n    DhcpOptions   (Appears on:VirtualNetworks_Spec)  Deprecated version of DhcpOptions. Use v1beta20201101.DhcpOptions instead\n    Field Description      dnsServers  []string        DhcpOptionsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)  Deprecated version of DhcpOptions. Use v1beta20201101.DhcpOptions instead\n    Field Description      dnsServers  []string        DhcpOptions_Status   (Appears on:VirtualNetwork_Status)  Deprecated version of DhcpOptions_Status. Use v1beta20201101.DhcpOptions_Status instead\n    Field Description      dnsServers  []string        DhcpOptions_StatusARM   (Appears on:VirtualNetworkPropertiesFormat_StatusARM)  Deprecated version of DhcpOptions_Status. Use v1beta20201101.DhcpOptions_Status instead\n    Field Description      dnsServers  []string        ExtendedLocation   (Appears on:LoadBalancers_Spec, NetworkInterfaces_Spec, PublicIPAddresses_Spec, VirtualNetworkGateways_Spec, VirtualNetworks_Spec)  Deprecated version of ExtendedLocation. Use v1beta20201101.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:LoadBalancers_SpecARM, NetworkInterfaces_SpecARM, PublicIPAddresses_SpecARM, VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworks_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20201101.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20201101.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20201101.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:LoadBalancer_Status, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded, PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded, PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded, PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded, PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGateway_Status, VirtualNetwork_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20201101.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:LoadBalancer_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM, PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM, PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM, PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, VirtualNetworkGateway_StatusARM, VirtualNetwork_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20201101.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         FlowLog_Status_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)  Deprecated version of FlowLog_Status_SubResourceEmbedded. Use v1beta20201101.FlowLog_Status_SubResourceEmbedded instead\n    Field Description      id  string        FlowLog_Status_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)  Deprecated version of FlowLog_Status_SubResourceEmbedded. Use v1beta20201101.FlowLog_Status_SubResourceEmbedded instead\n    Field Description      id  string        FrontendIPConfigurationPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM)  Deprecated version of FrontendIPConfigurationPropertiesFormat. Use v1beta20201101.FrontendIPConfigurationPropertiesFormat instead\n    Field Description      privateIPAddress  string        privateIPAddressVersion  FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion         privateIPAllocationMethod  FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResourceARM         publicIPPrefix  SubResourceARM         subnet  SubResourceARM         FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormatARM, LoadBalancers_Spec_Properties_FrontendIPConfigurations)  Deprecated version of FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion. Use v1beta20201101.FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormatARM, LoadBalancers_Spec_Properties_FrontendIPConfigurations)  Deprecated version of FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod. Use v1beta20201101.FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod instead\n    Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM)  Deprecated version of FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      inboundNatPools  []SubResource_StatusARM         inboundNatRules  []SubResource_StatusARM         loadBalancingRules  []SubResource_StatusARM         outboundRules  []SubResource_StatusARM         privateIPAddress  string        privateIPAddressVersion  IPVersion_Status         privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM         publicIPPrefix  SubResource_StatusARM         subnet  Subnet_Status_LoadBalancer_SubResourceEmbeddedARM         FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)  Deprecated version of FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        inboundNatPools  []SubResource_Status         inboundNatRules  []SubResource_Status         loadBalancingRules  []SubResource_Status         name  string        outboundRules  []SubResource_Status         privateIPAddress  string        privateIPAddressVersion  IPVersion_Status         privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded         publicIPPrefix  SubResource_Status         subnet  Subnet_Status_LoadBalancer_SubResourceEmbedded         type  string        zones  []string        FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM         type  string        zones  []string        IPAllocationMethod_Status (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM, IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded, IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfiguration_Status)  Deprecated version of IPAllocationMethod_Status. Use v1beta20201101.IPAllocationMethod_Status instead\n    Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    IPConfigurationBgpPeeringAddress   (Appears on:BgpSettings)  Deprecated version of IPConfigurationBgpPeeringAddress. Use v1beta20201101.IPConfigurationBgpPeeringAddress instead\n    Field Description      customBgpIpAddresses  []string        ipconfigurationId  string        IPConfigurationBgpPeeringAddressARM   (Appears on:BgpSettingsARM)  Deprecated version of IPConfigurationBgpPeeringAddress. Use v1beta20201101.IPConfigurationBgpPeeringAddress instead\n    Field Description      customBgpIpAddresses  []string        ipconfigurationId  string        IPConfigurationBgpPeeringAddress_Status   (Appears on:BgpSettings_Status)  Deprecated version of IPConfigurationBgpPeeringAddress_Status. Use v1beta20201101.IPConfigurationBgpPeeringAddress_Status instead\n    Field Description      customBgpIpAddresses  []string        defaultBgpIpAddresses  []string        ipconfigurationId  string        tunnelIpAddresses  []string        IPConfigurationBgpPeeringAddress_StatusARM   (Appears on:BgpSettings_StatusARM)  Deprecated version of IPConfigurationBgpPeeringAddress_Status. Use v1beta20201101.IPConfigurationBgpPeeringAddress_Status instead\n    Field Description      customBgpIpAddresses  []string        defaultBgpIpAddresses  []string        ipconfigurationId  string        tunnelIpAddresses  []string        IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)  Deprecated version of IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      provisioningState  ProvisioningState_Status         IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         type  string        IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         type  string        IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM)  Deprecated version of IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         subnet  Subnet_Status_PublicIPAddress_SubResourceEmbeddedARM         IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)  Deprecated version of IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         subnet  Subnet_Status_PublicIPAddress_SubResourceEmbedded         IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)  Deprecated version of IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM         IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded         IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         IPVersion_Status (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of IPVersion_Status. Use v1beta20201101.IPVersion_Status instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    IkeEncryption_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of IkeEncryption_Status. Use v1beta20201101.IkeEncryption_Status instead\n    Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n    IkeIntegrity_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of IkeIntegrity_Status. Use v1beta20201101.IkeIntegrity_Status instead\n    Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n  \u0026#34;SHA384\u0026#34;\n    InboundNatPoolPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_InboundNatPoolsARM)  Deprecated version of InboundNatPoolPropertiesFormat. Use v1beta20201101.InboundNatPoolPropertiesFormat instead\n    Field Description      backendPort  int        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResourceARM         frontendPortRangeEnd  int        frontendPortRangeStart  int        idleTimeoutInMinutes  int        protocol  InboundNatPoolPropertiesFormatProtocol         InboundNatPoolPropertiesFormatProtocol (string alias)  (Appears on:InboundNatPoolPropertiesFormatARM, LoadBalancers_Spec_Properties_InboundNatPools)  Deprecated version of InboundNatPoolPropertiesFormatProtocol. Use v1beta20201101.InboundNatPoolPropertiesFormatProtocol instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    InboundNatPoolPropertiesFormat_StatusARM   (Appears on:InboundNatPool_StatusARM)  Deprecated version of InboundNatPoolPropertiesFormat_Status. Use v1beta20201101.InboundNatPoolPropertiesFormat_Status instead\n    Field Description      backendPort  int        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResource_StatusARM         frontendPortRangeEnd  int        frontendPortRangeStart  int        idleTimeoutInMinutes  int        protocol  TransportProtocol_Status         provisioningState  ProvisioningState_Status         InboundNatPool_Status   (Appears on:LoadBalancer_Status)  Deprecated version of InboundNatPool_Status. Use v1beta20201101.InboundNatPool_Status instead\n    Field Description      backendPort  int        enableFloatingIP  bool        enableTcpReset  bool        etag  string        frontendIPConfiguration  SubResource_Status         frontendPortRangeEnd  int        frontendPortRangeStart  int        id  string        idleTimeoutInMinutes  int        name  string        protocol  TransportProtocol_Status         provisioningState  ProvisioningState_Status         type  string        InboundNatPool_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of InboundNatPool_Status. Use v1beta20201101.InboundNatPool_Status instead\n    Field Description      etag  string        id  string        name  string        properties  InboundNatPoolPropertiesFormat_StatusARM         type  string        InboundNatRule_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)  Deprecated version of InboundNatRule_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.InboundNatRule_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        InboundNatRule_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of InboundNatRule_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.InboundNatRule_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        InboundNatRule_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of InboundNatRule_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.InboundNatRule_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        InboundNatRule_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of InboundNatRule_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.InboundNatRule_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        IpTag   (Appears on:PublicIPAddresses_Spec)  Deprecated version of IpTag. Use v1beta20201101.IpTag instead\n    Field Description      ipTagType  string        tag  string        IpTagARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Deprecated version of IpTag. Use v1beta20201101.IpTag instead\n    Field Description      ipTagType  string        tag  string        IpTag_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of IpTag_Status. Use v1beta20201101.IpTag_Status instead\n    Field Description      ipTagType  string        tag  string        IpTag_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)  Deprecated version of IpTag_Status. Use v1beta20201101.IpTag_Status instead\n    Field Description      ipTagType  string        tag  string        IpsecEncryption_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of IpsecEncryption_Status. Use v1beta20201101.IpsecEncryption_Status instead\n    Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecIntegrity_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of IpsecIntegrity_Status. Use v1beta20201101.IpsecIntegrity_Status instead\n    Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n    IpsecPolicy   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Deprecated version of IpsecPolicy. Use v1beta20201101.IpsecPolicy instead\n    Field Description      dhGroup  IpsecPolicyDhGroup         ikeEncryption  IpsecPolicyIkeEncryption         ikeIntegrity  IpsecPolicyIkeIntegrity         ipsecEncryption  IpsecPolicyIpsecEncryption         ipsecIntegrity  IpsecPolicyIpsecIntegrity         pfsGroup  IpsecPolicyPfsGroup         saDataSizeKilobytes  int        saLifeTimeSeconds  int        IpsecPolicyARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of IpsecPolicy. Use v1beta20201101.IpsecPolicy instead\n    Field Description      dhGroup  IpsecPolicyDhGroup         ikeEncryption  IpsecPolicyIkeEncryption         ikeIntegrity  IpsecPolicyIkeIntegrity         ipsecEncryption  IpsecPolicyIpsecEncryption         ipsecIntegrity  IpsecPolicyIpsecIntegrity         pfsGroup  IpsecPolicyPfsGroup         saDataSizeKilobytes  int        saLifeTimeSeconds  int        IpsecPolicyDhGroup (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyDhGroup. Use v1beta20201101.IpsecPolicyDhGroup instead\n    Value Description   \u0026#34;DHGroup1\u0026#34;\n  \u0026#34;DHGroup14\u0026#34;\n  \u0026#34;DHGroup2\u0026#34;\n  \u0026#34;DHGroup2048\u0026#34;\n  \u0026#34;DHGroup24\u0026#34;\n  \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecPolicyIkeEncryption (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyIkeEncryption. Use v1beta20201101.IpsecPolicyIkeEncryption instead\n    Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n    IpsecPolicyIkeIntegrity (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyIkeIntegrity. Use v1beta20201101.IpsecPolicyIkeIntegrity instead\n    Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n  \u0026#34;SHA384\u0026#34;\n    IpsecPolicyIpsecEncryption (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyIpsecEncryption. Use v1beta20201101.IpsecPolicyIpsecEncryption instead\n    Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecPolicyIpsecIntegrity (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyIpsecIntegrity. Use v1beta20201101.IpsecPolicyIpsecIntegrity instead\n    Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n    IpsecPolicyPfsGroup (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)  Deprecated version of IpsecPolicyPfsGroup. Use v1beta20201101.IpsecPolicyPfsGroup instead\n    Value Description   \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;PFS1\u0026#34;\n  \u0026#34;PFS14\u0026#34;\n  \u0026#34;PFS2\u0026#34;\n  \u0026#34;PFS2048\u0026#34;\n  \u0026#34;PFS24\u0026#34;\n  \u0026#34;PFSMM\u0026#34;\n    IpsecPolicy_Status   (Appears on:VpnClientConfiguration_Status)  Deprecated version of IpsecPolicy_Status. Use v1beta20201101.IpsecPolicy_Status instead\n    Field Description      dhGroup  DhGroup_Status         ikeEncryption  IkeEncryption_Status         ikeIntegrity  IkeIntegrity_Status         ipsecEncryption  IpsecEncryption_Status         ipsecIntegrity  IpsecIntegrity_Status         pfsGroup  PfsGroup_Status         saDataSizeKilobytes  int        saLifeTimeSeconds  int        IpsecPolicy_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)  Deprecated version of IpsecPolicy_Status. Use v1beta20201101.IpsecPolicy_Status instead\n    Field Description      dhGroup  DhGroup_Status         ikeEncryption  IkeEncryption_Status         ikeIntegrity  IkeIntegrity_Status         ipsecEncryption  IpsecEncryption_Status         ipsecIntegrity  IpsecIntegrity_Status         pfsGroup  PfsGroup_Status         saDataSizeKilobytes  int        saLifeTimeSeconds  int        LoadBalancer   Deprecated version of LoadBalancer. Use v1beta20201101.LoadBalancer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  LoadBalancers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPools         extendedLocation  ExtendedLocation         frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurations         inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPools         loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRules         location  string        outboundRules  []LoadBalancers_Spec_Properties_OutboundRules         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    probes  []LoadBalancers_Spec_Properties_Probes         sku  LoadBalancerSku         tags  map[string]string           status  LoadBalancer_Status         LoadBalancerBackendAddressPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM)  Deprecated version of LoadBalancerBackendAddressPropertiesFormat. Use v1beta20201101.LoadBalancerBackendAddressPropertiesFormat instead\n    Field Description      ipAddress  string        loadBalancerFrontendIPConfiguration  SubResourceARM         subnet  SubResourceARM         virtualNetwork  SubResourceARM         LoadBalancerPropertiesFormat_StatusARM   (Appears on:LoadBalancer_StatusARM)  Deprecated version of LoadBalancerPropertiesFormat_Status. Use v1beta20201101.LoadBalancerPropertiesFormat_Status instead\n    Field Description      backendAddressPools  []BackendAddressPool_Status_LoadBalancer_SubResourceEmbeddedARM         frontendIPConfigurations  []FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM         inboundNatPools  []InboundNatPool_StatusARM         inboundNatRules  []InboundNatRule_Status_LoadBalancer_SubResourceEmbeddedARM         loadBalancingRules  []LoadBalancingRule_StatusARM         outboundRules  []OutboundRule_StatusARM         probes  []Probe_StatusARM         provisioningState  ProvisioningState_Status         resourceGuid  string        LoadBalancerSku   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancerSku. Use v1beta20201101.LoadBalancerSku instead\n    Field Description      name  LoadBalancerSkuName         tier  LoadBalancerSkuTier         LoadBalancerSkuARM   (Appears on:LoadBalancers_SpecARM)  Deprecated version of LoadBalancerSku. Use v1beta20201101.LoadBalancerSku instead\n    Field Description      name  LoadBalancerSkuName         tier  LoadBalancerSkuTier         LoadBalancerSkuName (string alias)  (Appears on:LoadBalancerSku, LoadBalancerSkuARM)  Deprecated version of LoadBalancerSkuName. Use v1beta20201101.LoadBalancerSkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    LoadBalancerSkuStatusName (string alias)  (Appears on:LoadBalancerSku_Status, LoadBalancerSku_StatusARM)  Deprecated version of LoadBalancerSkuStatusName. Use v1beta20201101.LoadBalancerSkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    LoadBalancerSkuStatusTier (string alias)  (Appears on:LoadBalancerSku_Status, LoadBalancerSku_StatusARM)  Deprecated version of LoadBalancerSkuStatusTier. Use v1beta20201101.LoadBalancerSkuStatusTier instead\n    Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    LoadBalancerSkuTier (string alias)  (Appears on:LoadBalancerSku, LoadBalancerSkuARM)  Deprecated version of LoadBalancerSkuTier. Use v1beta20201101.LoadBalancerSkuTier instead\n    Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    LoadBalancerSku_Status   (Appears on:LoadBalancer_Status)  Deprecated version of LoadBalancerSku_Status. Use v1beta20201101.LoadBalancerSku_Status instead\n    Field Description      name  LoadBalancerSkuStatusName         tier  LoadBalancerSkuStatusTier         LoadBalancerSku_StatusARM   (Appears on:LoadBalancer_StatusARM)  Deprecated version of LoadBalancerSku_Status. Use v1beta20201101.LoadBalancerSku_Status instead\n    Field Description      name  LoadBalancerSkuStatusName         tier  LoadBalancerSkuStatusTier         LoadBalancer_Status   (Appears on:LoadBalancer)  Deprecated version of LoadBalancer_Status. Use v1beta20201101.LoadBalancer_Status instead\n    Field Description      backendAddressPools  []BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    etag  string        extendedLocation  ExtendedLocation_Status         frontendIPConfigurations  []FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded         id  string        inboundNatPools  []InboundNatPool_Status         inboundNatRules  []InboundNatRule_Status_LoadBalancer_SubResourceEmbedded         loadBalancingRules  []LoadBalancingRule_Status         location  string        name  string        outboundRules  []OutboundRule_Status         probes  []Probe_Status         provisioningState  ProvisioningState_Status         resourceGuid  string        sku  LoadBalancerSku_Status         tags  map[string]string        type  string        LoadBalancer_StatusARM   Deprecated version of LoadBalancer_Status. Use v1beta20201101.LoadBalancer_Status instead\n    Field Description      etag  string        extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  LoadBalancerPropertiesFormat_StatusARM         sku  LoadBalancerSku_StatusARM         tags  map[string]string        type  string        LoadBalancers_Spec   (Appears on:LoadBalancer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPools         extendedLocation  ExtendedLocation         frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurations         inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPools         loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRules         location  string        outboundRules  []LoadBalancers_Spec_Properties_OutboundRules         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    probes  []LoadBalancers_Spec_Properties_Probes         sku  LoadBalancerSku         tags  map[string]string        LoadBalancers_SpecARM   Deprecated version of LoadBalancers_Spec. Use v1beta20201101.LoadBalancers_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  LoadBalancers_Spec_PropertiesARM         sku  LoadBalancerSkuARM         tags  map[string]string        LoadBalancers_Spec_PropertiesARM   (Appears on:LoadBalancers_SpecARM)  Deprecated version of LoadBalancers_Spec_Properties. Use v1beta20201101.LoadBalancers_Spec_Properties instead\n    Field Description      backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPoolsARM         frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM         inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPoolsARM         loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRulesARM         outboundRules  []LoadBalancers_Spec_Properties_OutboundRulesARM         probes  []LoadBalancers_Spec_Properties_ProbesARM         LoadBalancers_Spec_Properties_BackendAddressPools   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_BackendAddressPools. Use v1beta20201101.LoadBalancers_Spec_Properties_BackendAddressPools instead\n    Field Description      loadBalancerBackendAddresses  []LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses         location  string        name  string        LoadBalancers_Spec_Properties_BackendAddressPoolsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_BackendAddressPools. Use v1beta20201101.LoadBalancers_Spec_Properties_BackendAddressPools instead\n    Field Description      name  string        properties  LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM         LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPoolsARM)  Deprecated version of LoadBalancers_Spec_Properties_BackendAddressPools_Properties. Use v1beta20201101.LoadBalancers_Spec_Properties_BackendAddressPools_Properties instead\n    Field Description      loadBalancerBackendAddresses  []LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM         location  string        LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools)  Deprecated version of LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses. Use v1beta20201101.LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses instead\n    Field Description      ipAddress  string        loadBalancerFrontendIPConfiguration  SubResource         name  string        subnet  SubResource         virtualNetwork  SubResource         LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses. Use v1beta20201101.LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses instead\n    Field Description      name  string        properties  LoadBalancerBackendAddressPropertiesFormatARM         LoadBalancers_Spec_Properties_FrontendIPConfigurations   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_FrontendIPConfigurations. Use v1beta20201101.LoadBalancers_Spec_Properties_FrontendIPConfigurations instead\n    Field Description      name  string        privateIPAddress  string        privateIPAddressVersion  FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion         privateIPAllocationMethod  FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResource         publicIPPrefix  SubResource         subnet  SubResource         zones  []string        LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_FrontendIPConfigurations. Use v1beta20201101.LoadBalancers_Spec_Properties_FrontendIPConfigurations instead\n    Field Description      name  string        properties  FrontendIPConfigurationPropertiesFormatARM         zones  []string        LoadBalancers_Spec_Properties_InboundNatPools   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_InboundNatPools. Use v1beta20201101.LoadBalancers_Spec_Properties_InboundNatPools instead\n    Field Description      backendPort  int        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResource         frontendPortRangeEnd  int        frontendPortRangeStart  int        idleTimeoutInMinutes  int        name  string        protocol  InboundNatPoolPropertiesFormatProtocol         LoadBalancers_Spec_Properties_InboundNatPoolsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_InboundNatPools. Use v1beta20201101.LoadBalancers_Spec_Properties_InboundNatPools instead\n    Field Description      name  string        properties  InboundNatPoolPropertiesFormatARM         LoadBalancers_Spec_Properties_LoadBalancingRules   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_LoadBalancingRules. Use v1beta20201101.LoadBalancers_Spec_Properties_LoadBalancingRules instead\n    Field Description      backendAddressPool  SubResource         backendPort  int        disableOutboundSnat  bool        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResource         frontendPort  int        idleTimeoutInMinutes  int        loadDistribution  LoadBalancingRulePropertiesFormatLoadDistribution         name  string        probe  SubResource         protocol  LoadBalancingRulePropertiesFormatProtocol         LoadBalancers_Spec_Properties_LoadBalancingRulesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_LoadBalancingRules. Use v1beta20201101.LoadBalancers_Spec_Properties_LoadBalancingRules instead\n    Field Description      name  string        properties  LoadBalancingRulePropertiesFormatARM         LoadBalancers_Spec_Properties_OutboundRules   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_OutboundRules. Use v1beta20201101.LoadBalancers_Spec_Properties_OutboundRules instead\n    Field Description      allocatedOutboundPorts  int        backendAddressPool  SubResource         enableTcpReset  bool        frontendIPConfigurations  []SubResource         idleTimeoutInMinutes  int        name  string        protocol  OutboundRulePropertiesFormatProtocol         LoadBalancers_Spec_Properties_OutboundRulesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_OutboundRules. Use v1beta20201101.LoadBalancers_Spec_Properties_OutboundRules instead\n    Field Description      name  string        properties  OutboundRulePropertiesFormatARM         LoadBalancers_Spec_Properties_Probes   (Appears on:LoadBalancers_Spec)  Deprecated version of LoadBalancers_Spec_Properties_Probes. Use v1beta20201101.LoadBalancers_Spec_Properties_Probes instead\n    Field Description      intervalInSeconds  int        name  string        numberOfProbes  int        port  int        protocol  ProbePropertiesFormatProtocol         requestPath  string        LoadBalancers_Spec_Properties_ProbesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)  Deprecated version of LoadBalancers_Spec_Properties_Probes. Use v1beta20201101.LoadBalancers_Spec_Properties_Probes instead\n    Field Description      name  string        properties  ProbePropertiesFormatARM         LoadBalancingRulePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRulesARM)  Deprecated version of LoadBalancingRulePropertiesFormat. Use v1beta20201101.LoadBalancingRulePropertiesFormat instead\n    Field Description      backendAddressPool  SubResourceARM         backendPort  int        disableOutboundSnat  bool        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResourceARM         frontendPort  int        idleTimeoutInMinutes  int        loadDistribution  LoadBalancingRulePropertiesFormatLoadDistribution         probe  SubResourceARM         protocol  LoadBalancingRulePropertiesFormatProtocol         LoadBalancingRulePropertiesFormatLoadDistribution (string alias)  (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancingRulePropertiesFormatARM)  Deprecated version of LoadBalancingRulePropertiesFormatLoadDistribution. Use v1beta20201101.LoadBalancingRulePropertiesFormatLoadDistribution instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;SourceIP\u0026#34;\n  \u0026#34;SourceIPProtocol\u0026#34;\n    LoadBalancingRulePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancingRulePropertiesFormatARM)  Deprecated version of LoadBalancingRulePropertiesFormatProtocol. Use v1beta20201101.LoadBalancingRulePropertiesFormatProtocol instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    LoadBalancingRulePropertiesFormatStatusLoadDistribution (string alias)  (Appears on:LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status)  Deprecated version of LoadBalancingRulePropertiesFormatStatusLoadDistribution. Use v1beta20201101.LoadBalancingRulePropertiesFormatStatusLoadDistribution instead\n    Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;SourceIP\u0026#34;\n  \u0026#34;SourceIPProtocol\u0026#34;\n    LoadBalancingRulePropertiesFormat_StatusARM   (Appears on:LoadBalancingRule_StatusARM)  Deprecated version of LoadBalancingRulePropertiesFormat_Status. Use v1beta20201101.LoadBalancingRulePropertiesFormat_Status instead\n    Field Description      backendAddressPool  SubResource_StatusARM         backendPort  int        disableOutboundSnat  bool        enableFloatingIP  bool        enableTcpReset  bool        frontendIPConfiguration  SubResource_StatusARM         frontendPort  int        idleTimeoutInMinutes  int        loadDistribution  LoadBalancingRulePropertiesFormatStatusLoadDistribution         probe  SubResource_StatusARM         protocol  TransportProtocol_Status         provisioningState  ProvisioningState_Status         LoadBalancingRule_Status   (Appears on:LoadBalancer_Status)  Deprecated version of LoadBalancingRule_Status. Use v1beta20201101.LoadBalancingRule_Status instead\n    Field Description      backendAddressPool  SubResource_Status         backendPort  int        disableOutboundSnat  bool        enableFloatingIP  bool        enableTcpReset  bool        etag  string        frontendIPConfiguration  SubResource_Status         frontendPort  int        id  string        idleTimeoutInMinutes  int        loadDistribution  LoadBalancingRulePropertiesFormatStatusLoadDistribution         name  string        probe  SubResource_Status         protocol  TransportProtocol_Status         provisioningState  ProvisioningState_Status         type  string        LoadBalancingRule_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of LoadBalancingRule_Status. Use v1beta20201101.LoadBalancingRule_Status instead\n    Field Description      etag  string        id  string        name  string        properties  LoadBalancingRulePropertiesFormat_StatusARM         type  string        NatGatewaySkuStatusName (string alias)  (Appears on:NatGatewaySku_Status, NatGatewaySku_StatusARM)  Deprecated version of NatGatewaySkuStatusName. Use v1beta20201101.NatGatewaySkuStatusName instead\n    Value Description   \u0026#34;Standard\u0026#34;\n    NatGatewaySku_Status   (Appears on:NatGateway_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of NatGatewaySku_Status. Use v1beta20201101.NatGatewaySku_Status instead\n    Field Description      name  NatGatewaySkuStatusName         NatGatewaySku_StatusARM   (Appears on:NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM)  Deprecated version of NatGatewaySku_Status. Use v1beta20201101.NatGatewaySku_Status instead\n    Field Description      name  NatGatewaySkuStatusName         NatGateway_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of NatGateway_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.NatGateway_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      id  string        sku  NatGatewaySku_Status         zones  []string        NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)  Deprecated version of NatGateway_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.NatGateway_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      id  string        sku  NatGatewaySku_StatusARM         zones  []string        NetworkInterface   Deprecated version of NetworkInterface. Use v1beta20201101.NetworkInterface instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkInterfaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dnsSettings  NetworkInterfaceDnsSettings         enableAcceleratedNetworking  bool        enableIPForwarding  bool        extendedLocation  ExtendedLocation         ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurations         location  string        networkSecurityGroup  SubResource         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string           status  NetworkInterface_Status_NetworkInterface_SubResourceEmbedded         NetworkInterfaceDnsSettings   (Appears on:NetworkInterfaces_Spec)  Deprecated version of NetworkInterfaceDnsSettings. Use v1beta20201101.NetworkInterfaceDnsSettings instead\n    Field Description      dnsServers  []string        internalDnsNameLabel  string        NetworkInterfaceDnsSettingsARM   (Appears on:NetworkInterfaces_Spec_PropertiesARM)  Deprecated version of NetworkInterfaceDnsSettings. Use v1beta20201101.NetworkInterfaceDnsSettings instead\n    Field Description      dnsServers  []string        internalDnsNameLabel  string        NetworkInterfaceDnsSettings_Status   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfaceDnsSettings_Status. Use v1beta20201101.NetworkInterfaceDnsSettings_Status instead\n    Field Description      appliedDnsServers  []string        dnsServers  []string        internalDnsNameLabel  string        internalDomainNameSuffix  string        internalFqdn  string        NetworkInterfaceDnsSettings_StatusARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of NetworkInterfaceDnsSettings_Status. Use v1beta20201101.NetworkInterfaceDnsSettings_Status instead\n    Field Description      appliedDnsServers  []string        dnsServers  []string        internalDnsNameLabel  string        internalDomainNameSuffix  string        internalFqdn  string        NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status. Use v1beta20201101.NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status instead\n    Field Description      fqdns  []string        groupId  string        requiredMemberName  string        NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_StatusARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status. Use v1beta20201101.NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status instead\n    Field Description      fqdns  []string        groupId  string        requiredMemberName  string        NetworkInterfaceIPConfigurationPropertiesFormatARM   (Appears on:NetworkInterfaces_Spec_Properties_IpConfigurationsARM)  Deprecated version of NetworkInterfaceIPConfigurationPropertiesFormat. Use v1beta20201101.NetworkInterfaceIPConfigurationPropertiesFormat instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResourceARM         applicationSecurityGroups  []SubResourceARM         loadBalancerBackendAddressPools  []SubResourceARM         loadBalancerInboundNatRules  []SubResourceARM         primary  bool        privateIPAddress  string        privateIPAddressVersion  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion         privateIPAllocationMethod  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResourceARM         subnet  SubResourceARM         virtualNetworkTaps  []SubResourceARM         NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion (string alias)  (Appears on:NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_Properties_IpConfigurations)  Deprecated version of NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion. Use v1beta20201101.NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_Properties_IpConfigurations)  Deprecated version of NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod. Use v1beta20201101.NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod instead\n    Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      applicationGatewayBackendAddressPools  []ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM         applicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM         loadBalancerBackendAddressPools  []BackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM         loadBalancerInboundNatRules  []InboundNatRule_Status_NetworkInterface_SubResourceEmbeddedARM         primary  bool        privateIPAddress  string        privateIPAddressVersion  IPVersion_Status         privateIPAllocationMethod  IPAllocationMethod_Status         privateLinkConnectionProperties  NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_StatusARM         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM         subnet  Subnet_Status_NetworkInterface_SubResourceEmbeddedARM         virtualNetworkTaps  []VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbeddedARM         NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      applicationGatewayBackendAddressPools  []ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded         applicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded         etag  string        id  string        loadBalancerBackendAddressPools  []BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded         loadBalancerInboundNatRules  []InboundNatRule_Status_NetworkInterface_SubResourceEmbedded         name  string        primary  bool        privateIPAddress  string        privateIPAddressVersion  IPVersion_Status         privateIPAllocationMethod  IPAllocationMethod_Status         privateLinkConnectionProperties  NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status         provisioningState  ProvisioningState_Status         publicIPAddress  PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded         subnet  Subnet_Status_NetworkInterface_SubResourceEmbedded         type  string        virtualNetworkTaps  []VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded         NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM         type  string        NetworkInterfacePropertiesFormatStatusMigrationPhase (string alias)  (Appears on:NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfacePropertiesFormatStatusMigrationPhase. Use v1beta20201101.NetworkInterfacePropertiesFormatStatusMigrationPhase instead\n    Value Description   \u0026#34;Abort\u0026#34;\n  \u0026#34;Commit\u0026#34;\n  \u0026#34;Committed\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;Prepare\u0026#34;\n    NetworkInterfacePropertiesFormatStatusNicType (string alias)  (Appears on:NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfacePropertiesFormatStatusNicType. Use v1beta20201101.NetworkInterfacePropertiesFormatStatusNicType instead\n    Value Description   \u0026#34;Elastic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    NetworkInterfacePropertiesFormat_StatusARM   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of NetworkInterfacePropertiesFormat_Status. Use v1beta20201101.NetworkInterfacePropertiesFormat_Status instead\n    Field Description      dnsSettings  NetworkInterfaceDnsSettings_StatusARM         dscpConfiguration  SubResource_StatusARM         enableAcceleratedNetworking  bool        enableIPForwarding  bool        hostedWorkloads  []string        ipConfigurations  []NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM         macAddress  string        migrationPhase  NetworkInterfacePropertiesFormatStatusMigrationPhase         networkSecurityGroup  NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM         nicType  NetworkInterfacePropertiesFormatStatusNicType         primary  bool        privateEndpoint  PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM         privateLinkService  PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM         provisioningState  ProvisioningState_Status         resourceGuid  string        tapConfigurations  []NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM         virtualMachine  SubResource_StatusARM         NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        NetworkInterface_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface)  Deprecated version of NetworkInterface_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterface_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dnsSettings  NetworkInterfaceDnsSettings_Status         dscpConfiguration  SubResource_Status         enableAcceleratedNetworking  bool        enableIPForwarding  bool        etag  string        extendedLocation  ExtendedLocation_Status         hostedWorkloads  []string        id  string        ipConfigurations  []NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded         location  string        macAddress  string        migrationPhase  NetworkInterfacePropertiesFormatStatusMigrationPhase         name  string        networkSecurityGroup  NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded         nicType  NetworkInterfacePropertiesFormatStatusNicType         primary  bool        privateEndpoint  PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded         privateLinkService  PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded         provisioningState  ProvisioningState_Status         resourceGuid  string        tags  map[string]string        tapConfigurations  []NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded         type  string        virtualMachine  SubResource_Status         NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM   Deprecated version of NetworkInterface_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkInterface_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      etag  string        extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  NetworkInterfacePropertiesFormat_StatusARM         tags  map[string]string        type  string        NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)  Deprecated version of NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)  Deprecated version of NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        NetworkInterfaces_Spec   (Appears on:NetworkInterface)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dnsSettings  NetworkInterfaceDnsSettings         enableAcceleratedNetworking  bool        enableIPForwarding  bool        extendedLocation  ExtendedLocation         ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurations         location  string        networkSecurityGroup  SubResource         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string        NetworkInterfaces_SpecARM   Deprecated version of NetworkInterfaces_Spec. Use v1beta20201101.NetworkInterfaces_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  NetworkInterfaces_Spec_PropertiesARM         tags  map[string]string        NetworkInterfaces_Spec_PropertiesARM   (Appears on:NetworkInterfaces_SpecARM)  Deprecated version of NetworkInterfaces_Spec_Properties. Use v1beta20201101.NetworkInterfaces_Spec_Properties instead\n    Field Description      dnsSettings  NetworkInterfaceDnsSettingsARM         enableAcceleratedNetworking  bool        enableIPForwarding  bool        ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurationsARM         networkSecurityGroup  SubResourceARM         NetworkInterfaces_Spec_Properties_IpConfigurations   (Appears on:NetworkInterfaces_Spec)  Deprecated version of NetworkInterfaces_Spec_Properties_IpConfigurations. Use v1beta20201101.NetworkInterfaces_Spec_Properties_IpConfigurations instead\n    Field Description      applicationGatewayBackendAddressPools  []SubResource         applicationSecurityGroups  []SubResource         loadBalancerBackendAddressPools  []SubResource         loadBalancerInboundNatRules  []SubResource         name  string        primary  bool        privateIPAddress  string        privateIPAddressVersion  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion         privateIPAllocationMethod  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResource         subnet  SubResource         virtualNetworkTaps  []SubResource         NetworkInterfaces_Spec_Properties_IpConfigurationsARM   (Appears on:NetworkInterfaces_Spec_PropertiesARM)  Deprecated version of NetworkInterfaces_Spec_Properties_IpConfigurations. Use v1beta20201101.NetworkInterfaces_Spec_Properties_IpConfigurations instead\n    Field Description      name  string        properties  NetworkInterfaceIPConfigurationPropertiesFormatARM         NetworkSecurityGroup   Deprecated version of NetworkSecurityGroup. Use v1beta20201101.NetworkSecurityGroup instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkSecurityGroups_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string           status  NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded         NetworkSecurityGroupPropertiesFormat_StatusARM   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbeddedARM)  Deprecated version of NetworkSecurityGroupPropertiesFormat_Status. Use v1beta20201101.NetworkSecurityGroupPropertiesFormat_Status instead\n    Field Description      defaultSecurityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM         flowLogs  []FlowLog_Status_SubResourceEmbeddedARM         networkInterfaces  []NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM         provisioningState  ProvisioningState_Status         resourceGuid  string        securityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM         subnets  []Subnet_Status_NetworkSecurityGroup_SubResourceEmbeddedARM         NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup)  Deprecated version of NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    defaultSecurityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded         etag  string        flowLogs  []FlowLog_Status_SubResourceEmbedded         id  string        location  string        name  string        networkInterfaces  []NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded         provisioningState  ProvisioningState_Status         resourceGuid  string        securityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded         subnets  []Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded         tags  map[string]string        type  string        NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   Deprecated version of NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        location  string        name  string        properties  NetworkSecurityGroupPropertiesFormat_StatusARM         tags  map[string]string        type  string        NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        NetworkSecurityGroupsSecurityRule   Deprecated version of NetworkSecurityGroupsSecurityRule. Use v1beta20201101.NetworkSecurityGroupsSecurityRule instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkSecurityGroupsSecurityRules_Spec          access  SecurityRulePropertiesFormatAccess         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    description  string        destinationAddressPrefix  string        destinationAddressPrefixes  []string        destinationApplicationSecurityGroups  []SubResource         destinationPortRange  string        destinationPortRanges  []string        direction  SecurityRulePropertiesFormatDirection         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/NetworkSecurityGroup resource\n    priority  int        protocol  SecurityRulePropertiesFormatProtocol         sourceAddressPrefix  string        sourceAddressPrefixes  []string        sourceApplicationSecurityGroups  []SubResource         sourcePortRange  string        sourcePortRanges  []string        tags  map[string]string           status  SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded         NetworkSecurityGroupsSecurityRules_Spec   (Appears on:NetworkSecurityGroupsSecurityRule)      Field Description      access  SecurityRulePropertiesFormatAccess         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    description  string        destinationAddressPrefix  string        destinationAddressPrefixes  []string        destinationApplicationSecurityGroups  []SubResource         destinationPortRange  string        destinationPortRanges  []string        direction  SecurityRulePropertiesFormatDirection         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/NetworkSecurityGroup resource\n    priority  int        protocol  SecurityRulePropertiesFormatProtocol         sourceAddressPrefix  string        sourceAddressPrefixes  []string        sourceApplicationSecurityGroups  []SubResource         sourcePortRange  string        sourcePortRanges  []string        tags  map[string]string        NetworkSecurityGroupsSecurityRules_SpecARM   Deprecated version of NetworkSecurityGroupsSecurityRules_Spec. Use v1beta20201101.NetworkSecurityGroupsSecurityRules_Spec instead\n    Field Description      location  string        name  string        properties  SecurityRulePropertiesFormatARM         tags  map[string]string        NetworkSecurityGroups_Spec   (Appears on:NetworkSecurityGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string        NetworkSecurityGroups_SpecARM   Deprecated version of NetworkSecurityGroups_Spec. Use v1beta20201101.NetworkSecurityGroups_Spec instead\n    Field Description      location  string        name  string        tags  map[string]string        OutboundRulePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_OutboundRulesARM)  Deprecated version of OutboundRulePropertiesFormat. Use v1beta20201101.OutboundRulePropertiesFormat instead\n    Field Description      allocatedOutboundPorts  int        backendAddressPool  SubResourceARM         enableTcpReset  bool        frontendIPConfigurations  []SubResourceARM         idleTimeoutInMinutes  int        protocol  OutboundRulePropertiesFormatProtocol         OutboundRulePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_OutboundRules, OutboundRulePropertiesFormatARM)  Deprecated version of OutboundRulePropertiesFormatProtocol. Use v1beta20201101.OutboundRulePropertiesFormatProtocol instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    OutboundRulePropertiesFormatStatusProtocol (string alias)  (Appears on:OutboundRulePropertiesFormat_StatusARM, OutboundRule_Status)  Deprecated version of OutboundRulePropertiesFormatStatusProtocol. Use v1beta20201101.OutboundRulePropertiesFormatStatusProtocol instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    OutboundRulePropertiesFormat_StatusARM   (Appears on:OutboundRule_StatusARM)  Deprecated version of OutboundRulePropertiesFormat_Status. Use v1beta20201101.OutboundRulePropertiesFormat_Status instead\n    Field Description      allocatedOutboundPorts  int        backendAddressPool  SubResource_StatusARM         enableTcpReset  bool        frontendIPConfigurations  []SubResource_StatusARM         idleTimeoutInMinutes  int        protocol  OutboundRulePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         OutboundRule_Status   (Appears on:LoadBalancer_Status)  Deprecated version of OutboundRule_Status. Use v1beta20201101.OutboundRule_Status instead\n    Field Description      allocatedOutboundPorts  int        backendAddressPool  SubResource_Status         enableTcpReset  bool        etag  string        frontendIPConfigurations  []SubResource_Status         id  string        idleTimeoutInMinutes  int        name  string        protocol  OutboundRulePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         type  string        OutboundRule_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of OutboundRule_Status. Use v1beta20201101.OutboundRule_Status instead\n    Field Description      etag  string        id  string        name  string        properties  OutboundRulePropertiesFormat_StatusARM         type  string        PfsGroup_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)  Deprecated version of PfsGroup_Status. Use v1beta20201101.PfsGroup_Status instead\n    Value Description   \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;PFS1\u0026#34;\n  \u0026#34;PFS14\u0026#34;\n  \u0026#34;PFS2\u0026#34;\n  \u0026#34;PFS2048\u0026#34;\n  \u0026#34;PFS24\u0026#34;\n  \u0026#34;PFSMM\u0026#34;\n    PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)  Deprecated version of PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        ProbePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_ProbesARM)  Deprecated version of ProbePropertiesFormat. Use v1beta20201101.ProbePropertiesFormat instead\n    Field Description      intervalInSeconds  int        numberOfProbes  int        port  int        protocol  ProbePropertiesFormatProtocol         requestPath  string        ProbePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_Probes, ProbePropertiesFormatARM)  Deprecated version of ProbePropertiesFormatProtocol. Use v1beta20201101.ProbePropertiesFormatProtocol instead\n    Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n    ProbePropertiesFormatStatusProtocol (string alias)  (Appears on:ProbePropertiesFormat_StatusARM, Probe_Status)  Deprecated version of ProbePropertiesFormatStatusProtocol. Use v1beta20201101.ProbePropertiesFormatStatusProtocol instead\n    Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n    ProbePropertiesFormat_StatusARM   (Appears on:Probe_StatusARM)  Deprecated version of ProbePropertiesFormat_Status. Use v1beta20201101.ProbePropertiesFormat_Status instead\n    Field Description      intervalInSeconds  int        loadBalancingRules  []SubResource_StatusARM         numberOfProbes  int        port  int        protocol  ProbePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         requestPath  string        Probe_Status   (Appears on:LoadBalancer_Status)  Deprecated version of Probe_Status. Use v1beta20201101.Probe_Status instead\n    Field Description      etag  string        id  string        intervalInSeconds  int        loadBalancingRules  []SubResource_Status         name  string        numberOfProbes  int        port  int        protocol  ProbePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         requestPath  string        type  string        Probe_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)  Deprecated version of Probe_Status. Use v1beta20201101.Probe_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ProbePropertiesFormat_StatusARM         type  string        ProvisioningState_Status (string alias)  (Appears on:ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded, ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM, ApplicationGatewayIPConfiguration_Status, Delegation_Status, FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded, IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM, IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded, IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded, InboundNatPoolPropertiesFormat_StatusARM, InboundNatPool_Status, LoadBalancerPropertiesFormat_StatusARM, LoadBalancer_Status, LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, NetworkSecurityGroupPropertiesFormat_StatusARM, NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded, OutboundRulePropertiesFormat_StatusARM, OutboundRule_Status, ProbePropertiesFormat_StatusARM, Probe_Status, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, ResourceNavigationLinkFormat_StatusARM, ResourceNavigationLink_Status, SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded, ServiceAssociationLinkPropertiesFormat_StatusARM, ServiceAssociationLink_Status, ServiceDelegationPropertiesFormat_StatusARM, ServiceEndpointPropertiesFormat_Status, ServiceEndpointPropertiesFormat_StatusARM, SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfiguration_Status, VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPeering_Status, VirtualNetworkPropertiesFormat_StatusARM, VirtualNetwork_Status, VpnClientRevokedCertificatePropertiesFormat_StatusARM, VpnClientRevokedCertificate_Status, VpnClientRootCertificatePropertiesFormat_StatusARM, VpnClientRootCertificate_Status)  Deprecated version of ProvisioningState_Status. Use v1beta20201101.ProvisioningState_Status instead\n    Value Description   \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    PublicIPAddress   Deprecated version of PublicIPAddress. Use v1beta20201101.PublicIPAddress instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  PublicIPAddresses_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    ddosSettings  DdosSettings         dnsSettings  PublicIPAddressDnsSettings         extendedLocation  ExtendedLocation         idleTimeoutInMinutes  int        ipAddress  string        ipTags  []IpTag         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion         publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod         publicIPPrefix  SubResource         sku  PublicIPAddressSku         tags  map[string]string        zones  []string           status  PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded         PublicIPAddressDnsSettings   (Appears on:PublicIPAddresses_Spec)  Deprecated version of PublicIPAddressDnsSettings. Use v1beta20201101.PublicIPAddressDnsSettings instead\n    Field Description      domainNameLabel  string        fqdn  string        reverseFqdn  string        PublicIPAddressDnsSettingsARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Deprecated version of PublicIPAddressDnsSettings. Use v1beta20201101.PublicIPAddressDnsSettings instead\n    Field Description      domainNameLabel  string        fqdn  string        reverseFqdn  string        PublicIPAddressDnsSettings_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of PublicIPAddressDnsSettings_Status. Use v1beta20201101.PublicIPAddressDnsSettings_Status instead\n    Field Description      domainNameLabel  string        fqdn  string        reverseFqdn  string        PublicIPAddressDnsSettings_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)  Deprecated version of PublicIPAddressDnsSettings_Status. Use v1beta20201101.PublicIPAddressDnsSettings_Status instead\n    Field Description      domainNameLabel  string        fqdn  string        reverseFqdn  string        PublicIPAddressPropertiesFormatARM   (Appears on:PublicIPAddresses_SpecARM)  Deprecated version of PublicIPAddressPropertiesFormat. Use v1beta20201101.PublicIPAddressPropertiesFormat instead\n    Field Description      ddosSettings  DdosSettingsARM         dnsSettings  PublicIPAddressDnsSettingsARM         idleTimeoutInMinutes  int        ipAddress  string        ipTags  []IpTagARM         publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion         publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod         publicIPPrefix  SubResourceARM         PublicIPAddressPropertiesFormatPublicIPAddressVersion (string alias)  (Appears on:PublicIPAddressPropertiesFormatARM, PublicIPAddresses_Spec)  Deprecated version of PublicIPAddressPropertiesFormatPublicIPAddressVersion. Use v1beta20201101.PublicIPAddressPropertiesFormatPublicIPAddressVersion instead\n    Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    PublicIPAddressPropertiesFormatPublicIPAllocationMethod (string alias)  (Appears on:PublicIPAddressPropertiesFormatARM, PublicIPAddresses_Spec)  Deprecated version of PublicIPAddressPropertiesFormatPublicIPAllocationMethod. Use v1beta20201101.PublicIPAddressPropertiesFormatPublicIPAllocationMethod instead\n    Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    PublicIPAddressPropertiesFormatStatusMigrationPhase (string alias)  (Appears on:PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of PublicIPAddressPropertiesFormatStatusMigrationPhase. Use v1beta20201101.PublicIPAddressPropertiesFormatStatusMigrationPhase instead\n    Value Description   \u0026#34;Abort\u0026#34;\n  \u0026#34;Commit\u0026#34;\n  \u0026#34;Committed\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;Prepare\u0026#34;\n    PublicIPAddressPropertiesFormat_StatusARM   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM)  Deprecated version of PublicIPAddressPropertiesFormat_Status. Use v1beta20201101.PublicIPAddressPropertiesFormat_Status instead\n    Field Description      ddosSettings  DdosSettings_StatusARM         dnsSettings  PublicIPAddressDnsSettings_StatusARM         idleTimeoutInMinutes  int        ipAddress  string        ipConfiguration  IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM         ipTags  []IpTag_StatusARM         migrationPhase  PublicIPAddressPropertiesFormatStatusMigrationPhase         natGateway  NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM         provisioningState  ProvisioningState_Status         publicIPAddressVersion  IPVersion_Status         publicIPAllocationMethod  IPAllocationMethod_Status         publicIPPrefix  SubResource_StatusARM         resourceGuid  string        PublicIPAddressSku   (Appears on:PublicIPAddresses_Spec)  Deprecated version of PublicIPAddressSku. Use v1beta20201101.PublicIPAddressSku instead\n    Field Description      name  PublicIPAddressSkuName         tier  PublicIPAddressSkuTier         PublicIPAddressSkuARM   (Appears on:PublicIPAddresses_SpecARM)  Deprecated version of PublicIPAddressSku. Use v1beta20201101.PublicIPAddressSku instead\n    Field Description      name  PublicIPAddressSkuName         tier  PublicIPAddressSkuTier         PublicIPAddressSkuName (string alias)  (Appears on:PublicIPAddressSku, PublicIPAddressSkuARM)  Deprecated version of PublicIPAddressSkuName. Use v1beta20201101.PublicIPAddressSkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    PublicIPAddressSkuStatusName (string alias)  (Appears on:PublicIPAddressSku_Status, PublicIPAddressSku_StatusARM)  Deprecated version of PublicIPAddressSkuStatusName. Use v1beta20201101.PublicIPAddressSkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    PublicIPAddressSkuStatusTier (string alias)  (Appears on:PublicIPAddressSku_Status, PublicIPAddressSku_StatusARM)  Deprecated version of PublicIPAddressSkuStatusTier. Use v1beta20201101.PublicIPAddressSkuStatusTier instead\n    Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    PublicIPAddressSkuTier (string alias)  (Appears on:PublicIPAddressSku, PublicIPAddressSkuARM)  Deprecated version of PublicIPAddressSkuTier. Use v1beta20201101.PublicIPAddressSkuTier instead\n    Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    PublicIPAddressSku_Status   (Appears on:PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded, PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of PublicIPAddressSku_Status. Use v1beta20201101.PublicIPAddressSku_Status instead\n    Field Description      name  PublicIPAddressSkuStatusName         tier  PublicIPAddressSkuStatusTier         PublicIPAddressSku_StatusARM   (Appears on:PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM, PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)  Deprecated version of PublicIPAddressSku_Status. Use v1beta20201101.PublicIPAddressSku_Status instead\n    Field Description      name  PublicIPAddressSkuStatusName         tier  PublicIPAddressSkuStatusTier         PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded)  Deprecated version of PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        sku  PublicIPAddressSku_Status         zones  []string        PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM)  Deprecated version of PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        sku  PublicIPAddressSku_StatusARM         zones  []string        PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        sku  PublicIPAddressSku_Status         zones  []string        PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        sku  PublicIPAddressSku_StatusARM         zones  []string        PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress)  Deprecated version of PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ddosSettings  DdosSettings_Status         dnsSettings  PublicIPAddressDnsSettings_Status         etag  string        extendedLocation  ExtendedLocation_Status         id  string        idleTimeoutInMinutes  int        ipAddress  string        ipConfiguration  IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded         ipTags  []IpTag_Status         location  string        migrationPhase  PublicIPAddressPropertiesFormatStatusMigrationPhase         name  string        natGateway  NatGateway_Status_PublicIPAddress_SubResourceEmbedded         provisioningState  ProvisioningState_Status         publicIPAddressVersion  IPVersion_Status         publicIPAllocationMethod  IPAllocationMethod_Status         publicIPPrefix  SubResource_Status         resourceGuid  string        sku  PublicIPAddressSku_Status         tags  map[string]string        type  string        zones  []string        PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM   Deprecated version of PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      etag  string        extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  PublicIPAddressPropertiesFormat_StatusARM         sku  PublicIPAddressSku_StatusARM         tags  map[string]string        type  string        zones  []string        PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_Status         id  string        sku  PublicIPAddressSku_Status         zones  []string        PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)  Deprecated version of PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        sku  PublicIPAddressSku_StatusARM         zones  []string        PublicIPAddresses_Spec   (Appears on:PublicIPAddress)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    ddosSettings  DdosSettings         dnsSettings  PublicIPAddressDnsSettings         extendedLocation  ExtendedLocation         idleTimeoutInMinutes  int        ipAddress  string        ipTags  []IpTag         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion         publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod         publicIPPrefix  SubResource         sku  PublicIPAddressSku         tags  map[string]string        zones  []string        PublicIPAddresses_SpecARM   Deprecated version of PublicIPAddresses_Spec. Use v1beta20201101.PublicIPAddresses_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  PublicIPAddressPropertiesFormatARM         sku  PublicIPAddressSkuARM         tags  map[string]string        zones  []string        RadiusServer   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Deprecated version of RadiusServer. Use v1beta20201101.RadiusServer instead\n    Field Description      radiusServerAddress  string        radiusServerScore  int        radiusServerSecret  string        RadiusServerARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of RadiusServer. Use v1beta20201101.RadiusServer instead\n    Field Description      radiusServerAddress  string        radiusServerScore  int        radiusServerSecret  string        RadiusServer_Status   (Appears on:VpnClientConfiguration_Status)  Deprecated version of RadiusServer_Status. Use v1beta20201101.RadiusServer_Status instead\n    Field Description      radiusServerAddress  string        radiusServerScore  int        radiusServerSecret  string        RadiusServer_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)  Deprecated version of RadiusServer_Status. Use v1beta20201101.RadiusServer_Status instead\n    Field Description      radiusServerAddress  string        radiusServerScore  int        radiusServerSecret  string        ResourceNavigationLinkFormat_StatusARM   (Appears on:ResourceNavigationLink_StatusARM)  Deprecated version of ResourceNavigationLinkFormat_Status. Use v1beta20201101.ResourceNavigationLinkFormat_Status instead\n    Field Description      link  string        linkedResourceType  string        provisioningState  ProvisioningState_Status         ResourceNavigationLink_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of ResourceNavigationLink_Status. Use v1beta20201101.ResourceNavigationLink_Status instead\n    Field Description      etag  string        id  string        link  string        linkedResourceType  string        name  string        provisioningState  ProvisioningState_Status         type  string        ResourceNavigationLink_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of ResourceNavigationLink_Status. Use v1beta20201101.ResourceNavigationLink_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ResourceNavigationLinkFormat_StatusARM         type  string        RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        SecurityRuleAccess_Status (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)  Deprecated version of SecurityRuleAccess_Status. Use v1beta20201101.SecurityRuleAccess_Status instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SecurityRuleDirection_Status (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)  Deprecated version of SecurityRuleDirection_Status. Use v1beta20201101.SecurityRuleDirection_Status instead\n    Value Description   \u0026#34;Inbound\u0026#34;\n  \u0026#34;Outbound\u0026#34;\n    SecurityRulePropertiesFormatARM   (Appears on:NetworkSecurityGroupsSecurityRules_SpecARM)  Deprecated version of SecurityRulePropertiesFormat. Use v1beta20201101.SecurityRulePropertiesFormat instead\n    Field Description      access  SecurityRulePropertiesFormatAccess         description  string        destinationAddressPrefix  string        destinationAddressPrefixes  []string        destinationApplicationSecurityGroups  []SubResourceARM         destinationPortRange  string        destinationPortRanges  []string        direction  SecurityRulePropertiesFormatDirection         priority  int        protocol  SecurityRulePropertiesFormatProtocol         sourceAddressPrefix  string        sourceAddressPrefixes  []string        sourceApplicationSecurityGroups  []SubResourceARM         sourcePortRange  string        sourcePortRanges  []string        SecurityRulePropertiesFormatAccess (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)  Deprecated version of SecurityRulePropertiesFormatAccess. Use v1beta20201101.SecurityRulePropertiesFormatAccess instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SecurityRulePropertiesFormatDirection (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)  Deprecated version of SecurityRulePropertiesFormatDirection. Use v1beta20201101.SecurityRulePropertiesFormatDirection instead\n    Value Description   \u0026#34;Inbound\u0026#34;\n  \u0026#34;Outbound\u0026#34;\n    SecurityRulePropertiesFormatProtocol (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)  Deprecated version of SecurityRulePropertiesFormatProtocol. Use v1beta20201101.SecurityRulePropertiesFormatProtocol instead\n    Value Description   \u0026#34;Ah\u0026#34;\n  \u0026#34;Esp\u0026#34;\n  \u0026#34;Icmp\u0026#34;\n  \u0026#34;*\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    SecurityRulePropertiesFormatStatusProtocol (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)  Deprecated version of SecurityRulePropertiesFormatStatusProtocol. Use v1beta20201101.SecurityRulePropertiesFormatStatusProtocol instead\n    Value Description   \u0026#34;Ah\u0026#34;\n  \u0026#34;Esp\u0026#34;\n  \u0026#34;Icmp\u0026#34;\n  \u0026#34;*\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    SecurityRulePropertiesFormat_StatusARM   (Appears on:SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM)  Deprecated version of SecurityRulePropertiesFormat_Status. Use v1beta20201101.SecurityRulePropertiesFormat_Status instead\n    Field Description      access  SecurityRuleAccess_Status         description  string        destinationAddressPrefix  string        destinationAddressPrefixes  []string        destinationApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM         destinationPortRange  string        destinationPortRanges  []string        direction  SecurityRuleDirection_Status         priority  int        protocol  SecurityRulePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         sourceAddressPrefix  string        sourceAddressPrefixes  []string        sourceApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM         sourcePortRange  string        sourcePortRanges  []string        SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)  Deprecated version of SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      id  string        SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)  Deprecated version of SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      id  string        SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded   (Appears on:NetworkSecurityGroupsSecurityRule)  Deprecated version of SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded. Use v1beta20201101.SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded instead\n    Field Description      access  SecurityRuleAccess_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    description  string        destinationAddressPrefix  string        destinationAddressPrefixes  []string        destinationApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded         destinationPortRange  string        destinationPortRanges  []string        direction  SecurityRuleDirection_Status         etag  string        id  string        name  string        priority  int        protocol  SecurityRulePropertiesFormatStatusProtocol         provisioningState  ProvisioningState_Status         sourceAddressPrefix  string        sourceAddressPrefixes  []string        sourceApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded         sourcePortRange  string        sourcePortRanges  []string        type  string        SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM   Deprecated version of SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded. Use v1beta20201101.SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  SecurityRulePropertiesFormat_StatusARM         type  string        ServiceAssociationLinkPropertiesFormat_StatusARM   (Appears on:ServiceAssociationLink_StatusARM)  Deprecated version of ServiceAssociationLinkPropertiesFormat_Status. Use v1beta20201101.ServiceAssociationLinkPropertiesFormat_Status instead\n    Field Description      allowDelete  bool        link  string        linkedResourceType  string        locations  []string        provisioningState  ProvisioningState_Status         ServiceAssociationLink_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of ServiceAssociationLink_Status. Use v1beta20201101.ServiceAssociationLink_Status instead\n    Field Description      allowDelete  bool        etag  string        id  string        link  string        linkedResourceType  string        locations  []string        name  string        provisioningState  ProvisioningState_Status         type  string        ServiceAssociationLink_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of ServiceAssociationLink_Status. Use v1beta20201101.ServiceAssociationLink_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ServiceAssociationLinkPropertiesFormat_StatusARM         type  string        ServiceDelegationPropertiesFormatARM   (Appears on:VirtualNetworksSubnets_Spec_Properties_DelegationsARM, VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM)  Deprecated version of ServiceDelegationPropertiesFormat. Use v1beta20201101.ServiceDelegationPropertiesFormat instead\n    Field Description      serviceName  string        ServiceDelegationPropertiesFormat_StatusARM   (Appears on:Delegation_StatusARM)  Deprecated version of ServiceDelegationPropertiesFormat_Status. Use v1beta20201101.ServiceDelegationPropertiesFormat_Status instead\n    Field Description      actions  []string        provisioningState  ProvisioningState_Status         serviceName  string        ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        kind  string        ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      id  string        kind  string        ServiceEndpointPropertiesFormat   (Appears on:VirtualNetworksSubnets_Spec)  Deprecated version of ServiceEndpointPropertiesFormat. Use v1beta20201101.ServiceEndpointPropertiesFormat instead\n    Field Description      locations  []string        service  string        ServiceEndpointPropertiesFormatARM   (Appears on:VirtualNetworksSubnets_Spec_PropertiesARM, VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)  Deprecated version of ServiceEndpointPropertiesFormat. Use v1beta20201101.ServiceEndpointPropertiesFormat instead\n    Field Description      locations  []string        service  string        ServiceEndpointPropertiesFormat_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of ServiceEndpointPropertiesFormat_Status. Use v1beta20201101.ServiceEndpointPropertiesFormat_Status instead\n    Field Description      locations  []string        provisioningState  ProvisioningState_Status         service  string        ServiceEndpointPropertiesFormat_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)  Deprecated version of ServiceEndpointPropertiesFormat_Status. Use v1beta20201101.ServiceEndpointPropertiesFormat_Status instead\n    Field Description      locations  []string        provisioningState  ProvisioningState_Status         service  string        SubResource   (Appears on:DdosSettings, LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses, LoadBalancers_Spec_Properties_FrontendIPConfigurations, LoadBalancers_Spec_Properties_InboundNatPools, LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancers_Spec_Properties_OutboundRules, NetworkInterfaces_Spec, NetworkInterfaces_Spec_Properties_IpConfigurations, NetworkSecurityGroupsSecurityRules_Spec, PublicIPAddresses_Spec, VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_Properties_IpConfigurations, VirtualNetworksSubnets_Spec, VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Deprecated version of SubResource. Use v1beta20201101.SubResource instead\n    Field Description      reference  genruntime.ResourceReference         SubResourceARM   (Appears on:DdosSettingsARM, FrontendIPConfigurationPropertiesFormatARM, InboundNatPoolPropertiesFormatARM, LoadBalancerBackendAddressPropertiesFormatARM, LoadBalancingRulePropertiesFormatARM, NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_PropertiesARM, OutboundRulePropertiesFormatARM, PublicIPAddressPropertiesFormatARM, SecurityRulePropertiesFormatARM, VirtualNetworkGatewayIPConfigurationPropertiesFormatARM, VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworksSubnets_Spec_PropertiesARM, VirtualNetworks_Spec_PropertiesARM, VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)  Deprecated version of SubResource. Use v1beta20201101.SubResource instead\n    Field Description      id  string        SubResource_Status   (Appears on:ApplicationGatewayIPConfiguration_Status, DdosSettings_Status, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, InboundNatPool_Status, LoadBalancingRule_Status, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, OutboundRule_Status, Probe_Status, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGatewayIPConfiguration_Status, VirtualNetworkGateway_Status, VirtualNetworkPeering_Status, VirtualNetwork_Status)  Deprecated version of SubResource_Status. Use v1beta20201101.SubResource_Status instead\n    Field Description      id  string        SubResource_StatusARM   (Appears on:ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM, DdosSettings_StatusARM, FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, InboundNatPoolPropertiesFormat_StatusARM, LoadBalancingRulePropertiesFormat_StatusARM, NetworkInterfacePropertiesFormat_StatusARM, OutboundRulePropertiesFormat_StatusARM, ProbePropertiesFormat_StatusARM, PublicIPAddressPropertiesFormat_StatusARM, SubnetPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM)  Deprecated version of SubResource_Status. Use v1beta20201101.SubResource_Status instead\n    Field Description      id  string        SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies (string alias)  (Appears on:SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies. Use v1beta20201101.SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies (string alias)  (Appears on:SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)  Deprecated version of SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies. Use v1beta20201101.SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SubnetPropertiesFormat_StatusARM   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)  Deprecated version of SubnetPropertiesFormat_Status. Use v1beta20201101.SubnetPropertiesFormat_Status instead\n    Field Description      addressPrefix  string        addressPrefixes  []string        applicationGatewayIpConfigurations  []ApplicationGatewayIPConfiguration_StatusARM         delegations  []Delegation_StatusARM         ipAllocations  []SubResource_StatusARM         ipConfigurationProfiles  []IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         ipConfigurations  []IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         natGateway  SubResource_StatusARM         networkSecurityGroup  NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         privateEndpointNetworkPolicies  SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies         privateEndpoints  []PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         privateLinkServiceNetworkPolicies  SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies         provisioningState  ProvisioningState_Status         purpose  string        resourceNavigationLinks  []ResourceNavigationLink_StatusARM         routeTable  RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         serviceAssociationLinks  []ServiceAssociationLink_StatusARM         serviceEndpointPolicies  []ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM         serviceEndpoints  []ServiceEndpointPropertiesFormat_StatusARM         Subnet_Status_LoadBalancer_SubResourceEmbedded   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded)  Deprecated version of Subnet_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM)  Deprecated version of Subnet_Status_LoadBalancer_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_LoadBalancer_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of Subnet_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of Subnet_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)  Deprecated version of Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)  Deprecated version of Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded)  Deprecated version of Subnet_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM)  Deprecated version of Subnet_Status_PublicIPAddress_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_PublicIPAddress_SubResourceEmbedded instead\n    Field Description      id  string        Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:VirtualNetworksSubnet)  Deprecated version of Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      addressPrefix  string        addressPrefixes  []string        applicationGatewayIpConfigurations  []ApplicationGatewayIPConfiguration_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    delegations  []Delegation_Status         etag  string        id  string        ipAllocations  []SubResource_Status         ipConfigurationProfiles  []IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded         ipConfigurations  []IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded         name  string        natGateway  SubResource_Status         networkSecurityGroup  NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded         privateEndpointNetworkPolicies  SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies         privateEndpoints  []PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded         privateLinkServiceNetworkPolicies  SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies         provisioningState  ProvisioningState_Status         purpose  string        resourceNavigationLinks  []ResourceNavigationLink_Status         routeTable  RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded         serviceAssociationLinks  []ServiceAssociationLink_Status         serviceEndpointPolicies  []ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded         serviceEndpoints  []ServiceEndpointPropertiesFormat_Status         type  string        Subnet_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   Deprecated version of Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded. Use v1beta20201101.Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded instead\n    Field Description      etag  string        id  string        name  string        properties  SubnetPropertiesFormat_StatusARM         type  string        TransportProtocol_Status (string alias)  (Appears on:InboundNatPoolPropertiesFormat_StatusARM, InboundNatPool_Status, LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status)  Deprecated version of TransportProtocol_Status. Use v1beta20201101.TransportProtocol_Status instead\n    Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    VirtualNetwork   Deprecated version of VirtualNetwork. Use v1beta20201101.VirtualNetwork instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworks_Spec          addressSpace  AddressSpace         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpCommunities  VirtualNetworkBgpCommunities         ddosProtectionPlan  SubResource         dhcpOptions  DhcpOptions         enableDdosProtection  bool        enableVmProtection  bool        extendedLocation  ExtendedLocation         ipAllocations  []SubResource         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string           status  VirtualNetwork_Status         VirtualNetworkBgpCommunities   (Appears on:VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Deprecated version of VirtualNetworkBgpCommunities. Use v1beta20201101.VirtualNetworkBgpCommunities instead\n    Field Description      virtualNetworkCommunity  string        VirtualNetworkBgpCommunitiesARM   (Appears on:VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworks_Spec_PropertiesARM)  Deprecated version of VirtualNetworkBgpCommunities. Use v1beta20201101.VirtualNetworkBgpCommunities instead\n    Field Description      virtualNetworkCommunity  string        VirtualNetworkBgpCommunities_Status   (Appears on:VirtualNetworkPeering_Status, VirtualNetwork_Status)  Deprecated version of VirtualNetworkBgpCommunities_Status. Use v1beta20201101.VirtualNetworkBgpCommunities_Status instead\n    Field Description      regionalCommunity  string        virtualNetworkCommunity  string        VirtualNetworkBgpCommunities_StatusARM   (Appears on:VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM)  Deprecated version of VirtualNetworkBgpCommunities_Status. Use v1beta20201101.VirtualNetworkBgpCommunities_Status instead\n    Field Description      regionalCommunity  string        virtualNetworkCommunity  string        VirtualNetworkGateway   Deprecated version of VirtualNetworkGateway. Use v1beta20201101.VirtualNetworkGateway instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworkGateways_Spec          activeActive  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpSettings  BgpSettings         customRoutes  AddressSpace         enableBgp  bool        enableDnsForwarding  bool        enablePrivateIpAddress  bool        gatewayDefaultSite  SubResource         gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType         ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurations         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  VirtualNetworkGatewaySku         tags  map[string]string        vNetExtendedLocationResourceReference  genruntime.ResourceReference         virtualNetworkExtendedLocation  ExtendedLocation         vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration         vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration         vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType            status  VirtualNetworkGateway_Status         VirtualNetworkGatewayIPConfigurationPropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM)  Deprecated version of VirtualNetworkGatewayIPConfigurationPropertiesFormat. Use v1beta20201101.VirtualNetworkGatewayIPConfigurationPropertiesFormat instead\n    Field Description      privateIPAllocationMethod  VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResourceARM         subnet  SubResourceARM         VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:VirtualNetworkGatewayIPConfigurationPropertiesFormatARM, VirtualNetworkGateways_Spec_Properties_IpConfigurations)  Deprecated version of VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod. Use v1beta20201101.VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod instead\n    Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM   (Appears on:VirtualNetworkGatewayIPConfiguration_StatusARM)  Deprecated version of VirtualNetworkGatewayIPConfigurationPropertiesFormat_Status. Use v1beta20201101.VirtualNetworkGatewayIPConfigurationPropertiesFormat_Status instead\n    Field Description      privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  SubResource_StatusARM         subnet  SubResource_StatusARM         VirtualNetworkGatewayIPConfiguration_Status   (Appears on:VirtualNetworkGateway_Status)  Deprecated version of VirtualNetworkGatewayIPConfiguration_Status. Use v1beta20201101.VirtualNetworkGatewayIPConfiguration_Status instead\n    Field Description      etag  string        id  string        name  string        privateIPAddress  string        privateIPAllocationMethod  IPAllocationMethod_Status         provisioningState  ProvisioningState_Status         publicIPAddress  SubResource_Status         subnet  SubResource_Status         VirtualNetworkGatewayIPConfiguration_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)  Deprecated version of VirtualNetworkGatewayIPConfiguration_Status. Use v1beta20201101.VirtualNetworkGatewayIPConfiguration_Status instead\n    Field Description      etag  string        id  string        name  string        properties  VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM         VirtualNetworkGatewayPropertiesFormatStatusGatewayType (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)  Deprecated version of VirtualNetworkGatewayPropertiesFormatStatusGatewayType. Use v1beta20201101.VirtualNetworkGatewayPropertiesFormatStatusGatewayType instead\n    Value Description   \u0026#34;ExpressRoute\u0026#34;\n  \u0026#34;LocalGateway\u0026#34;\n  \u0026#34;Vpn\u0026#34;\n    VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)  Deprecated version of VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration. Use v1beta20201101.VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration instead\n    Value Description   \u0026#34;Generation1\u0026#34;\n  \u0026#34;Generation2\u0026#34;\n  \u0026#34;None\u0026#34;\n    VirtualNetworkGatewayPropertiesFormatStatusVpnType (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)  Deprecated version of VirtualNetworkGatewayPropertiesFormatStatusVpnType. Use v1beta20201101.VirtualNetworkGatewayPropertiesFormatStatusVpnType instead\n    Value Description   \u0026#34;PolicyBased\u0026#34;\n  \u0026#34;RouteBased\u0026#34;\n    VirtualNetworkGatewayPropertiesFormat_StatusARM   (Appears on:VirtualNetworkGateway_StatusARM)  Deprecated version of VirtualNetworkGatewayPropertiesFormat_Status. Use v1beta20201101.VirtualNetworkGatewayPropertiesFormat_Status instead\n    Field Description      activeActive  bool        bgpSettings  BgpSettings_StatusARM         customRoutes  AddressSpace_StatusARM         enableBgp  bool        enableDnsForwarding  bool        enablePrivateIpAddress  bool        gatewayDefaultSite  SubResource_StatusARM         gatewayType  VirtualNetworkGatewayPropertiesFormatStatusGatewayType         inboundDnsForwardingEndpoint  string        ipConfigurations  []VirtualNetworkGatewayIPConfiguration_StatusARM         provisioningState  ProvisioningState_Status         resourceGuid  string        sku  VirtualNetworkGatewaySku_StatusARM         vNetExtendedLocationResourceId  string        vpnClientConfiguration  VpnClientConfiguration_StatusARM         vpnGatewayGeneration  VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration         vpnType  VirtualNetworkGatewayPropertiesFormatStatusVpnType         VirtualNetworkGatewaySku   (Appears on:VirtualNetworkGateways_Spec)  Deprecated version of VirtualNetworkGatewaySku. Use v1beta20201101.VirtualNetworkGatewaySku instead\n    Field Description      name  VirtualNetworkGatewaySkuName         tier  VirtualNetworkGatewaySkuTier         VirtualNetworkGatewaySkuARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGatewaySku. Use v1beta20201101.VirtualNetworkGatewaySku instead\n    Field Description      name  VirtualNetworkGatewaySkuName         tier  VirtualNetworkGatewaySkuTier         VirtualNetworkGatewaySkuName (string alias)  (Appears on:VirtualNetworkGatewaySku, VirtualNetworkGatewaySkuARM)  Deprecated version of VirtualNetworkGatewaySkuName. Use v1beta20201101.VirtualNetworkGatewaySkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuStatusName (string alias)  (Appears on:VirtualNetworkGatewaySku_Status, VirtualNetworkGatewaySku_StatusARM)  Deprecated version of VirtualNetworkGatewaySkuStatusName. Use v1beta20201101.VirtualNetworkGatewaySkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuStatusTier (string alias)  (Appears on:VirtualNetworkGatewaySku_Status, VirtualNetworkGatewaySku_StatusARM)  Deprecated version of VirtualNetworkGatewaySkuStatusTier. Use v1beta20201101.VirtualNetworkGatewaySkuStatusTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuTier (string alias)  (Appears on:VirtualNetworkGatewaySku, VirtualNetworkGatewaySkuARM)  Deprecated version of VirtualNetworkGatewaySkuTier. Use v1beta20201101.VirtualNetworkGatewaySkuTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySku_Status   (Appears on:VirtualNetworkGateway_Status)  Deprecated version of VirtualNetworkGatewaySku_Status. Use v1beta20201101.VirtualNetworkGatewaySku_Status instead\n    Field Description      capacity  int        name  VirtualNetworkGatewaySkuStatusName         tier  VirtualNetworkGatewaySkuStatusTier         VirtualNetworkGatewaySku_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)  Deprecated version of VirtualNetworkGatewaySku_Status. Use v1beta20201101.VirtualNetworkGatewaySku_Status instead\n    Field Description      capacity  int        name  VirtualNetworkGatewaySkuStatusName         tier  VirtualNetworkGatewaySkuStatusTier         VirtualNetworkGateway_Status   (Appears on:VirtualNetworkGateway)  Deprecated version of VirtualNetworkGateway_Status. Use v1beta20201101.VirtualNetworkGateway_Status instead\n    Field Description      activeActive  bool        bgpSettings  BgpSettings_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    customRoutes  AddressSpace_Status         enableBgp  bool        enableDnsForwarding  bool        enablePrivateIpAddress  bool        etag  string        extendedLocation  ExtendedLocation_Status         gatewayDefaultSite  SubResource_Status         gatewayType  VirtualNetworkGatewayPropertiesFormatStatusGatewayType         id  string        inboundDnsForwardingEndpoint  string        ipConfigurations  []VirtualNetworkGatewayIPConfiguration_Status         location  string        name  string        provisioningState  ProvisioningState_Status         resourceGuid  string        sku  VirtualNetworkGatewaySku_Status         tags  map[string]string        type  string        vNetExtendedLocationResourceId  string        vpnClientConfiguration  VpnClientConfiguration_Status         vpnGatewayGeneration  VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration         vpnType  VirtualNetworkGatewayPropertiesFormatStatusVpnType         VirtualNetworkGateway_StatusARM   Deprecated version of VirtualNetworkGateway_Status. Use v1beta20201101.VirtualNetworkGateway_Status instead\n    Field Description      etag  string        extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  VirtualNetworkGatewayPropertiesFormat_StatusARM         tags  map[string]string        type  string        VirtualNetworkGatewaysSpecPropertiesGatewayType (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGatewaysSpecPropertiesGatewayType. Use v1beta20201101.VirtualNetworkGatewaysSpecPropertiesGatewayType instead\n    Value Description   \u0026#34;ExpressRoute\u0026#34;\n  \u0026#34;HyperNet\u0026#34;\n  \u0026#34;LocalGateway\u0026#34;\n  \u0026#34;Vpn\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes (string alias)  (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes. Use v1beta20201101.VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes instead\n    Value Description   \u0026#34;AAD\u0026#34;\n  \u0026#34;Certificate\u0026#34;\n  \u0026#34;Radius\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols (string alias)  (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols. Use v1beta20201101.VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols instead\n    Value Description   \u0026#34;IkeV2\u0026#34;\n  \u0026#34;OpenVPN\u0026#34;\n  \u0026#34;SSTP\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration. Use v1beta20201101.VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration instead\n    Value Description   \u0026#34;Generation1\u0026#34;\n  \u0026#34;Generation2\u0026#34;\n  \u0026#34;None\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnType (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGatewaysSpecPropertiesVpnType. Use v1beta20201101.VirtualNetworkGatewaysSpecPropertiesVpnType instead\n    Value Description   \u0026#34;PolicyBased\u0026#34;\n  \u0026#34;RouteBased\u0026#34;\n    VirtualNetworkGateways_Spec   (Appears on:VirtualNetworkGateway)      Field Description      activeActive  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpSettings  BgpSettings         customRoutes  AddressSpace         enableBgp  bool        enableDnsForwarding  bool        enablePrivateIpAddress  bool        gatewayDefaultSite  SubResource         gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType         ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurations         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  VirtualNetworkGatewaySku         tags  map[string]string        vNetExtendedLocationResourceReference  genruntime.ResourceReference         virtualNetworkExtendedLocation  ExtendedLocation         vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration         vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration         vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType         VirtualNetworkGateways_SpecARM   Deprecated version of VirtualNetworkGateways_Spec. Use v1beta20201101.VirtualNetworkGateways_Spec instead\n    Field Description      location  string        name  string        properties  VirtualNetworkGateways_Spec_PropertiesARM         tags  map[string]string        VirtualNetworkGateways_Spec_PropertiesARM   (Appears on:VirtualNetworkGateways_SpecARM)  Deprecated version of VirtualNetworkGateways_Spec_Properties. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties instead\n    Field Description      activeActive  bool        bgpSettings  BgpSettingsARM         customRoutes  AddressSpaceARM         enableBgp  bool        enableDnsForwarding  bool        enablePrivateIpAddress  bool        gatewayDefaultSite  SubResourceARM         gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType         ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM         sku  VirtualNetworkGatewaySkuARM         vNetExtendedLocationResourceId  string        virtualNetworkExtendedLocation  ExtendedLocationARM         vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM         vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration         vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType         VirtualNetworkGateways_Spec_Properties_IpConfigurations   (Appears on:VirtualNetworkGateways_Spec)  Deprecated version of VirtualNetworkGateways_Spec_Properties_IpConfigurations. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_IpConfigurations instead\n    Field Description      name  string        privateIPAllocationMethod  VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod         publicIPAddress  SubResource         subnet  SubResource         VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGateways_Spec_Properties_IpConfigurations. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_IpConfigurations instead\n    Field Description      name  string        properties  VirtualNetworkGatewayIPConfigurationPropertiesFormatARM         VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration   (Appears on:VirtualNetworkGateways_Spec)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration instead\n    Field Description      aadAudience  string        aadIssuer  string        aadTenant  string        radiusServerAddress  string        radiusServerSecret  string        radiusServers  []RadiusServer         vpnAuthenticationTypes  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes         vpnClientAddressPool  AddressSpace         vpnClientIpsecPolicies  []IpsecPolicy         vpnClientProtocols  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols         vpnClientRevokedCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates         vpnClientRootCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates         VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration instead\n    Field Description      aadAudience  string        aadIssuer  string        aadTenant  string        radiusServerAddress  string        radiusServerSecret  string        radiusServers  []RadiusServerARM         vpnAuthenticationTypes  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes         vpnClientAddressPool  AddressSpaceARM         vpnClientIpsecPolicies  []IpsecPolicyARM         vpnClientProtocols  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols         vpnClientRevokedCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM         vpnClientRootCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM         VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates instead\n    Field Description      name  string        thumbprint  string        VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates instead\n    Field Description      name  string        properties  VpnClientRevokedCertificatePropertiesFormatARM         VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates instead\n    Field Description      name  string        publicCertData  string        VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Deprecated version of VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates. Use v1beta20201101.VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates instead\n    Field Description      name  string        properties  VpnClientRootCertificatePropertiesFormatARM         VirtualNetworkPeeringPropertiesFormatARM   (Appears on:VirtualNetworksVirtualNetworkPeerings_SpecARM, VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM)  Deprecated version of VirtualNetworkPeeringPropertiesFormat. Use v1beta20201101.VirtualNetworkPeeringPropertiesFormat instead\n    Field Description      allowForwardedTraffic  bool        allowGatewayTransit  bool        allowVirtualNetworkAccess  bool        peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState         remoteAddressSpace  AddressSpaceARM         remoteBgpCommunities  VirtualNetworkBgpCommunitiesARM         remoteVirtualNetwork  SubResourceARM         useRemoteGateways  bool        VirtualNetworkPeeringPropertiesFormatPeeringState (string alias)  (Appears on:VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworksVirtualNetworkPeerings_Spec)  Deprecated version of VirtualNetworkPeeringPropertiesFormatPeeringState. Use v1beta20201101.VirtualNetworkPeeringPropertiesFormatPeeringState instead\n    Value Description   \u0026#34;Connected\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Initiated\u0026#34;\n    VirtualNetworkPeeringPropertiesFormatStatusPeeringState (string alias)  (Appears on:VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPeering_Status)  Deprecated version of VirtualNetworkPeeringPropertiesFormatStatusPeeringState. Use v1beta20201101.VirtualNetworkPeeringPropertiesFormatStatusPeeringState instead\n    Value Description   \u0026#34;Connected\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Initiated\u0026#34;\n    VirtualNetworkPeeringPropertiesFormat_StatusARM   (Appears on:VirtualNetworkPeering_StatusARM)  Deprecated version of VirtualNetworkPeeringPropertiesFormat_Status. Use v1beta20201101.VirtualNetworkPeeringPropertiesFormat_Status instead\n    Field Description      allowForwardedTraffic  bool        allowGatewayTransit  bool        allowVirtualNetworkAccess  bool        doNotVerifyRemoteGateways  bool        peeringState  VirtualNetworkPeeringPropertiesFormatStatusPeeringState         provisioningState  ProvisioningState_Status         remoteAddressSpace  AddressSpace_StatusARM         remoteBgpCommunities  VirtualNetworkBgpCommunities_StatusARM         remoteVirtualNetwork  SubResource_StatusARM         resourceGuid  string        useRemoteGateways  bool        VirtualNetworkPeering_Status   (Appears on:VirtualNetworksVirtualNetworkPeering)  Deprecated version of VirtualNetworkPeering_Status. Use v1beta20201101.VirtualNetworkPeering_Status instead\n    Field Description      allowForwardedTraffic  bool        allowGatewayTransit  bool        allowVirtualNetworkAccess  bool        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    doNotVerifyRemoteGateways  bool        etag  string        id  string        name  string        peeringState  VirtualNetworkPeeringPropertiesFormatStatusPeeringState         provisioningState  ProvisioningState_Status         remoteAddressSpace  AddressSpace_Status         remoteBgpCommunities  VirtualNetworkBgpCommunities_Status         remoteVirtualNetwork  SubResource_Status         resourceGuid  string        type  string        useRemoteGateways  bool        VirtualNetworkPeering_StatusARM   Deprecated version of VirtualNetworkPeering_Status. Use v1beta20201101.VirtualNetworkPeering_Status instead\n    Field Description      etag  string        id  string        name  string        properties  VirtualNetworkPeeringPropertiesFormat_StatusARM         type  string        VirtualNetworkPropertiesFormat_StatusARM   (Appears on:VirtualNetwork_StatusARM)  Deprecated version of VirtualNetworkPropertiesFormat_Status. Use v1beta20201101.VirtualNetworkPropertiesFormat_Status instead\n    Field Description      addressSpace  AddressSpace_StatusARM         bgpCommunities  VirtualNetworkBgpCommunities_StatusARM         ddosProtectionPlan  SubResource_StatusARM         dhcpOptions  DhcpOptions_StatusARM         enableDdosProtection  bool        enableVmProtection  bool        ipAllocations  []SubResource_StatusARM         provisioningState  ProvisioningState_Status         resourceGuid  string        VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)  Deprecated version of VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)  Deprecated version of VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded. Use v1beta20201101.VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded instead\n    Field Description      id  string        VirtualNetwork_Status   (Appears on:VirtualNetwork)  Deprecated version of VirtualNetwork_Status. Use v1beta20201101.VirtualNetwork_Status instead\n    Field Description      addressSpace  AddressSpace_Status         bgpCommunities  VirtualNetworkBgpCommunities_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ddosProtectionPlan  SubResource_Status         dhcpOptions  DhcpOptions_Status         enableDdosProtection  bool        enableVmProtection  bool        etag  string        extendedLocation  ExtendedLocation_Status         id  string        ipAllocations  []SubResource_Status         location  string        name  string        provisioningState  ProvisioningState_Status         resourceGuid  string        tags  map[string]string        type  string        VirtualNetwork_StatusARM   Deprecated version of VirtualNetwork_Status. Use v1beta20201101.VirtualNetwork_Status instead\n    Field Description      etag  string        extendedLocation  ExtendedLocation_StatusARM         id  string        location  string        name  string        properties  VirtualNetworkPropertiesFormat_StatusARM         tags  map[string]string        type  string        VirtualNetworksSubnet   Deprecated version of VirtualNetworksSubnet. Use v1beta20201101.VirtualNetworksSubnet instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworksSubnets_Spec          addressPrefix  string        addressPrefixes  []string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    delegations  []VirtualNetworksSubnets_Spec_Properties_Delegations         ipAllocations  []SubResource         natGateway  SubResource         networkSecurityGroup  SubResource         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    privateEndpointNetworkPolicies  string        privateLinkServiceNetworkPolicies  string        routeTable  SubResource         serviceEndpointPolicies  []SubResource         serviceEndpoints  []ServiceEndpointPropertiesFormat            status  Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded         VirtualNetworksSubnets_Spec   (Appears on:VirtualNetworksSubnet)      Field Description      addressPrefix  string        addressPrefixes  []string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    delegations  []VirtualNetworksSubnets_Spec_Properties_Delegations         ipAllocations  []SubResource         natGateway  SubResource         networkSecurityGroup  SubResource         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    privateEndpointNetworkPolicies  string        privateLinkServiceNetworkPolicies  string        routeTable  SubResource         serviceEndpointPolicies  []SubResource         serviceEndpoints  []ServiceEndpointPropertiesFormat         VirtualNetworksSubnets_SpecARM   Deprecated version of VirtualNetworksSubnets_Spec. Use v1beta20201101.VirtualNetworksSubnets_Spec instead\n    Field Description      name  string        properties  VirtualNetworksSubnets_Spec_PropertiesARM         VirtualNetworksSubnets_Spec_PropertiesARM   (Appears on:VirtualNetworksSubnets_SpecARM)  Deprecated version of VirtualNetworksSubnets_Spec_Properties. Use v1beta20201101.VirtualNetworksSubnets_Spec_Properties instead\n    Field Description      addressPrefix  string        addressPrefixes  []string        delegations  []VirtualNetworksSubnets_Spec_Properties_DelegationsARM         ipAllocations  []SubResourceARM         natGateway  SubResourceARM         networkSecurityGroup  SubResourceARM         privateEndpointNetworkPolicies  string        privateLinkServiceNetworkPolicies  string        routeTable  SubResourceARM         serviceEndpointPolicies  []SubResourceARM         serviceEndpoints  []ServiceEndpointPropertiesFormatARM         VirtualNetworksSubnets_Spec_Properties_Delegations   (Appears on:VirtualNetworksSubnets_Spec)  Deprecated version of VirtualNetworksSubnets_Spec_Properties_Delegations. Use v1beta20201101.VirtualNetworksSubnets_Spec_Properties_Delegations instead\n    Field Description      name  string        serviceName  string        VirtualNetworksSubnets_Spec_Properties_DelegationsARM   (Appears on:VirtualNetworksSubnets_Spec_PropertiesARM)  Deprecated version of VirtualNetworksSubnets_Spec_Properties_Delegations. Use v1beta20201101.VirtualNetworksSubnets_Spec_Properties_Delegations instead\n    Field Description      name  string        properties  ServiceDelegationPropertiesFormatARM         VirtualNetworksVirtualNetworkPeering   Deprecated version of VirtualNetworksVirtualNetworkPeering. Use v1beta20201101.VirtualNetworksVirtualNetworkPeering instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworksVirtualNetworkPeerings_Spec          allowForwardedTraffic  bool        allowGatewayTransit  bool        allowVirtualNetworkAccess  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState         remoteAddressSpace  AddressSpace         remoteBgpCommunities  VirtualNetworkBgpCommunities         remoteVirtualNetwork  SubResource         tags  map[string]string        useRemoteGateways  bool           status  VirtualNetworkPeering_Status         VirtualNetworksVirtualNetworkPeerings_Spec   (Appears on:VirtualNetworksVirtualNetworkPeering)      Field Description      allowForwardedTraffic  bool        allowGatewayTransit  bool        allowVirtualNetworkAccess  bool        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState         remoteAddressSpace  AddressSpace         remoteBgpCommunities  VirtualNetworkBgpCommunities         remoteVirtualNetwork  SubResource         tags  map[string]string        useRemoteGateways  bool        VirtualNetworksVirtualNetworkPeerings_SpecARM   Deprecated version of VirtualNetworksVirtualNetworkPeerings_Spec. Use v1beta20201101.VirtualNetworksVirtualNetworkPeerings_Spec instead\n    Field Description      location  string        name  string        properties  VirtualNetworkPeeringPropertiesFormatARM         tags  map[string]string        VirtualNetworks_Spec   (Appears on:VirtualNetwork)      Field Description      addressSpace  AddressSpace         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpCommunities  VirtualNetworkBgpCommunities         ddosProtectionPlan  SubResource         dhcpOptions  DhcpOptions         enableDdosProtection  bool        enableVmProtection  bool        extendedLocation  ExtendedLocation         ipAllocations  []SubResource         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string        VirtualNetworks_SpecARM   Deprecated version of VirtualNetworks_Spec. Use v1beta20201101.VirtualNetworks_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         location  string        name  string        properties  VirtualNetworks_Spec_PropertiesARM         tags  map[string]string        VirtualNetworks_Spec_PropertiesARM   (Appears on:VirtualNetworks_SpecARM)  Deprecated version of VirtualNetworks_Spec_Properties. Use v1beta20201101.VirtualNetworks_Spec_Properties instead\n    Field Description      addressSpace  AddressSpaceARM         bgpCommunities  VirtualNetworkBgpCommunitiesARM         ddosProtectionPlan  SubResourceARM         dhcpOptions  DhcpOptionsARM         enableDdosProtection  bool        enableVmProtection  bool        ipAllocations  []SubResourceARM         subnets  []VirtualNetworks_Spec_Properties_SubnetsARM         virtualNetworkPeerings  []VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM         VirtualNetworks_Spec_Properties_SubnetsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)  Deprecated version of VirtualNetworks_Spec_Properties_Subnets. Use v1beta20201101.VirtualNetworks_Spec_Properties_Subnets instead\n    Field Description      name  string        properties  VirtualNetworks_Spec_Properties_Subnets_PropertiesARM         VirtualNetworks_Spec_Properties_Subnets_PropertiesARM   (Appears on:VirtualNetworks_Spec_Properties_SubnetsARM)  Deprecated version of VirtualNetworks_Spec_Properties_Subnets_Properties. Use v1beta20201101.VirtualNetworks_Spec_Properties_Subnets_Properties instead\n    Field Description      addressPrefix  string        addressPrefixes  []string        delegations  []VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM         ipAllocations  []SubResourceARM         natGateway  SubResourceARM         networkSecurityGroup  SubResourceARM         privateEndpointNetworkPolicies  string        privateLinkServiceNetworkPolicies  string        routeTable  SubResourceARM         serviceEndpointPolicies  []SubResourceARM         serviceEndpoints  []ServiceEndpointPropertiesFormatARM         VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM   (Appears on:VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)  Deprecated version of VirtualNetworks_Spec_Properties_Subnets_Properties_Delegations. Use v1beta20201101.VirtualNetworks_Spec_Properties_Subnets_Properties_Delegations instead\n    Field Description      name  string        properties  ServiceDelegationPropertiesFormatARM         VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)  Deprecated version of VirtualNetworks_Spec_Properties_VirtualNetworkPeerings. Use v1beta20201101.VirtualNetworks_Spec_Properties_VirtualNetworkPeerings instead\n    Field Description      name  string        properties  VirtualNetworkPeeringPropertiesFormatARM         VpnClientConfigurationStatusVpnAuthenticationTypes (string alias)  (Appears on:VpnClientConfiguration_Status, VpnClientConfiguration_StatusARM)  Deprecated version of VpnClientConfigurationStatusVpnAuthenticationTypes. Use v1beta20201101.VpnClientConfigurationStatusVpnAuthenticationTypes instead\n    Value Description   \u0026#34;AAD\u0026#34;\n  \u0026#34;Certificate\u0026#34;\n  \u0026#34;Radius\u0026#34;\n    VpnClientConfigurationStatusVpnClientProtocols (string alias)  (Appears on:VpnClientConfiguration_Status, VpnClientConfiguration_StatusARM)  Deprecated version of VpnClientConfigurationStatusVpnClientProtocols. Use v1beta20201101.VpnClientConfigurationStatusVpnClientProtocols instead\n    Value Description   \u0026#34;IkeV2\u0026#34;\n  \u0026#34;OpenVPN\u0026#34;\n  \u0026#34;SSTP\u0026#34;\n    VpnClientConfiguration_Status   (Appears on:VirtualNetworkGateway_Status)  Deprecated version of VpnClientConfiguration_Status. Use v1beta20201101.VpnClientConfiguration_Status instead\n    Field Description      aadAudience  string        aadIssuer  string        aadTenant  string        radiusServerAddress  string        radiusServerSecret  string        radiusServers  []RadiusServer_Status         vpnAuthenticationTypes  []VpnClientConfigurationStatusVpnAuthenticationTypes         vpnClientAddressPool  AddressSpace_Status         vpnClientIpsecPolicies  []IpsecPolicy_Status         vpnClientProtocols  []VpnClientConfigurationStatusVpnClientProtocols         vpnClientRevokedCertificates  []VpnClientRevokedCertificate_Status         vpnClientRootCertificates  []VpnClientRootCertificate_Status         VpnClientConfiguration_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)  Deprecated version of VpnClientConfiguration_Status. Use v1beta20201101.VpnClientConfiguration_Status instead\n    Field Description      aadAudience  string        aadIssuer  string        aadTenant  string        radiusServerAddress  string        radiusServerSecret  string        radiusServers  []RadiusServer_StatusARM         vpnAuthenticationTypes  []VpnClientConfigurationStatusVpnAuthenticationTypes         vpnClientAddressPool  AddressSpace_StatusARM         vpnClientIpsecPolicies  []IpsecPolicy_StatusARM         vpnClientProtocols  []VpnClientConfigurationStatusVpnClientProtocols         vpnClientRevokedCertificates  []VpnClientRevokedCertificate_StatusARM         vpnClientRootCertificates  []VpnClientRootCertificate_StatusARM         VpnClientRevokedCertificatePropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM)  Deprecated version of VpnClientRevokedCertificatePropertiesFormat. Use v1beta20201101.VpnClientRevokedCertificatePropertiesFormat instead\n    Field Description      thumbprint  string        VpnClientRevokedCertificatePropertiesFormat_StatusARM   (Appears on:VpnClientRevokedCertificate_StatusARM)  Deprecated version of VpnClientRevokedCertificatePropertiesFormat_Status. Use v1beta20201101.VpnClientRevokedCertificatePropertiesFormat_Status instead\n    Field Description      provisioningState  ProvisioningState_Status         thumbprint  string        VpnClientRevokedCertificate_Status   (Appears on:VpnClientConfiguration_Status)  Deprecated version of VpnClientRevokedCertificate_Status. Use v1beta20201101.VpnClientRevokedCertificate_Status instead\n    Field Description      etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         thumbprint  string        VpnClientRevokedCertificate_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)  Deprecated version of VpnClientRevokedCertificate_Status. Use v1beta20201101.VpnClientRevokedCertificate_Status instead\n    Field Description      etag  string        id  string        name  string        properties  VpnClientRevokedCertificatePropertiesFormat_StatusARM         VpnClientRootCertificatePropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM)  Deprecated version of VpnClientRootCertificatePropertiesFormat. Use v1beta20201101.VpnClientRootCertificatePropertiesFormat instead\n    Field Description      publicCertData  string        VpnClientRootCertificatePropertiesFormat_StatusARM   (Appears on:VpnClientRootCertificate_StatusARM)  Deprecated version of VpnClientRootCertificatePropertiesFormat_Status. Use v1beta20201101.VpnClientRootCertificatePropertiesFormat_Status instead\n    Field Description      provisioningState  ProvisioningState_Status         publicCertData  string        VpnClientRootCertificate_Status   (Appears on:VpnClientConfiguration_Status)  Deprecated version of VpnClientRootCertificate_Status. Use v1beta20201101.VpnClientRootCertificate_Status instead\n    Field Description      etag  string        id  string        name  string        provisioningState  ProvisioningState_Status         publicCertData  string        VpnClientRootCertificate_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)  Deprecated version of VpnClientRootCertificate_Status. Use v1beta20201101.VpnClientRootCertificate_Status instead\n    Field Description      etag  string        id  string        name  string        properties  VpnClientRootCertificatePropertiesFormat_StatusARM          "},{"id":61,"href":"/azure-service-operator/reference/network.v1beta20201101/","title":"network.azure.com/v1beta20201101","section":"References","content":"network.azure.com/v1beta20201101  Package v1beta20201101 contains API Schema definitions for the network v1beta20201101 API group\n Resource Types:  AddressSpace   (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/AddressSpace\n    Field Description      addressPrefixes  []string    AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.\n    AddressSpaceARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM, VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworks_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/AddressSpace\n    Field Description      addressPrefixes  []string    AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.\n    AddressSpace_Status   (Appears on:VirtualNetworkGateway_Status, VirtualNetworkPeering_Status, VirtualNetwork_Status, VpnClientConfiguration_Status)      Field Description      addressPrefixes  []string    AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.\n    AddressSpace_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM, VpnClientConfiguration_StatusARM)      Field Description      addressPrefixes  []string    AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.\n    ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      backendAddresses  []ApplicationGatewayBackendAddress_StatusARM     BackendAddresses: Backend addresses.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the backend address pool resource.\n    ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      backendAddresses  []ApplicationGatewayBackendAddress_Status     BackendAddresses: Backend addresses.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: Name of the backend address pool that is unique within an Application Gateway.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the backend address pool resource.\n    type  string    Type: Type of the resource.\n    ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: Name of the backend address pool that is unique within an Application Gateway.\n    properties  ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM     Properties: Properties of the application gateway backend address pool.\n    type  string    Type: Type of the resource.\n    ApplicationGatewayBackendAddress_Status   (Appears on:ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded)      Field Description      fqdn  string    Fqdn: Fully qualified domain name (FQDN).\n    ipAddress  string    IpAddress: IP address.\n    ApplicationGatewayBackendAddress_StatusARM   (Appears on:ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      fqdn  string    Fqdn: Fully qualified domain name (FQDN).\n    ipAddress  string    IpAddress: IP address.\n    ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM   (Appears on:ApplicationGatewayIPConfiguration_StatusARM)      Field Description      provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the application gateway IP configuration resource.\n    subnet  SubResource_StatusARM     Subnet: Reference to the subnet resource. A subnet from where application gateway gets its private address.\n    ApplicationGatewayIPConfiguration_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: Name of the IP configuration that is unique within an Application Gateway.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the application gateway IP configuration resource.\n    subnet  SubResource_Status     Subnet: Reference to the subnet resource. A subnet from where application gateway gets its private address.\n    type  string    Type: Type of the resource.\n    ApplicationGatewayIPConfiguration_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: Name of the IP configuration that is unique within an Application Gateway.\n    properties  ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM     Properties: Properties of the application gateway IP configuration.\n    type  string    Type: Type of the resource.\n    ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded   (Appears on:SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM   (Appears on:SecurityRulePropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)      Field Description      id  string    Id: Resource ID.\n    BackendAddressPool_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    BackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    BgpSettings   (Appears on:VirtualNetworkGateways_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/BgpSettings\n    Field Description      asn  uint32    Asn: The BGP speaker\u0026rsquo;s ASN.\n    bgpPeeringAddress  string    BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP speaker.\n    bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress     BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual network gateway.\n    peerWeight  int    PeerWeight: The weight added to routes learned from this BGP speaker.\n    BgpSettingsARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/BgpSettings\n    Field Description      asn  uint32    Asn: The BGP speaker\u0026rsquo;s ASN.\n    bgpPeeringAddress  string    BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP speaker.\n    bgpPeeringAddresses  []IPConfigurationBgpPeeringAddressARM     BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual network gateway.\n    peerWeight  int    PeerWeight: The weight added to routes learned from this BGP speaker.\n    BgpSettings_Status   (Appears on:VirtualNetworkGateway_Status)      Field Description      asn  uint32    Asn: The BGP speaker\u0026rsquo;s ASN.\n    bgpPeeringAddress  string    BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP speaker.\n    bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress_Status     BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual network gateway.\n    peerWeight  int    PeerWeight: The weight added to routes learned from this BGP speaker.\n    BgpSettings_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)      Field Description      asn  uint32    Asn: The BGP speaker\u0026rsquo;s ASN.\n    bgpPeeringAddress  string    BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP speaker.\n    bgpPeeringAddresses  []IPConfigurationBgpPeeringAddress_StatusARM     BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual network gateway.\n    peerWeight  int    PeerWeight: The weight added to routes learned from this BGP speaker.\n    DdosSettings   (Appears on:PublicIPAddresses_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/DdosSettings\n    Field Description      ddosCustomPolicy  SubResource     DdosCustomPolicy: The DDoS custom policy associated with the public IP.\n    protectedIP  bool    ProtectedIP: Enables DDoS protection on the public IP.\n    protectionCoverage  DdosSettingsProtectionCoverage     ProtectionCoverage: The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.\n    DdosSettingsARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/DdosSettings\n    Field Description      ddosCustomPolicy  SubResourceARM     DdosCustomPolicy: The DDoS custom policy associated with the public IP.\n    protectedIP  bool    ProtectedIP: Enables DDoS protection on the public IP.\n    protectionCoverage  DdosSettingsProtectionCoverage     ProtectionCoverage: The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.\n    DdosSettingsProtectionCoverage (string alias)  (Appears on:DdosSettings, DdosSettingsARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    DdosSettingsStatusProtectionCoverage (string alias)  (Appears on:DdosSettings_Status, DdosSettings_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    DdosSettings_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      ddosCustomPolicy  SubResource_Status     DdosCustomPolicy: The DDoS custom policy associated with the public IP.\n    protectedIP  bool    ProtectedIP: Enables DDoS protection on the public IP.\n    protectionCoverage  DdosSettingsStatusProtectionCoverage     ProtectionCoverage: The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.\n    DdosSettings_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)      Field Description      ddosCustomPolicy  SubResource_StatusARM     DdosCustomPolicy: The DDoS custom policy associated with the public IP.\n    protectedIP  bool    ProtectedIP: Enables DDoS protection on the public IP.\n    protectionCoverage  DdosSettingsStatusProtectionCoverage     ProtectionCoverage: The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.\n    Delegation_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      actions  []string    Actions: The actions permitted to the service upon delegation.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service delegation resource.\n    serviceName  string    ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).\n    type  string    Type: Resource type.\n    Delegation_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.\n    properties  ServiceDelegationPropertiesFormat_StatusARM     Properties: Properties of the subnet.\n    type  string    Type: Resource type.\n    DhGroup_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;DHGroup1\u0026#34;\n  \u0026#34;DHGroup14\u0026#34;\n  \u0026#34;DHGroup2\u0026#34;\n  \u0026#34;DHGroup2048\u0026#34;\n  \u0026#34;DHGroup24\u0026#34;\n  \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n    DhcpOptions   (Appears on:VirtualNetworks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/DhcpOptions\n    Field Description      dnsServers  []string    DnsServers: The list of DNS servers IP addresses.\n    DhcpOptionsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/DhcpOptions\n    Field Description      dnsServers  []string    DnsServers: The list of DNS servers IP addresses.\n    DhcpOptions_Status   (Appears on:VirtualNetwork_Status)      Field Description      dnsServers  []string    DnsServers: The list of DNS servers IP addresses.\n    DhcpOptions_StatusARM   (Appears on:VirtualNetworkPropertiesFormat_StatusARM)      Field Description      dnsServers  []string    DnsServers: The list of DNS servers IP addresses.\n    ExtendedLocation   (Appears on:LoadBalancers_Spec, NetworkInterfaces_Spec, PublicIPAddresses_Spec, VirtualNetworkGateways_Spec, VirtualNetworks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:LoadBalancers_SpecARM, NetworkInterfaces_SpecARM, PublicIPAddresses_SpecARM, VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworks_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:LoadBalancer_Status, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded, PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded, PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded, PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded, PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGateway_Status, VirtualNetwork_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:LoadBalancer_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM, PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM, PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM, PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, VirtualNetworkGateway_StatusARM, VirtualNetwork_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    FlowLog_Status_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    FlowLog_Status_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    FrontendIPConfigurationPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/FrontendIPConfigurationPropertiesFormat\n    Field Description      privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAddressVersion  FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion     PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.\n    privateIPAllocationMethod  FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The Private IP allocation method.\n    publicIPAddress  SubResourceARM     PublicIPAddress: The reference to the Public IP resource.\n    publicIPPrefix  SubResourceARM     PublicIPPrefix: The reference to the Public IP Prefix resource.\n    subnet  SubResourceARM     Subnet: The reference to the subnet resource.\n    FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormatARM, LoadBalancers_Spec_Properties_FrontendIPConfigurations)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormatARM, LoadBalancers_Spec_Properties_FrontendIPConfigurations)      Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM)      Field Description      inboundNatPools  []SubResource_StatusARM     InboundNatPools: An array of references to inbound pools that use this frontend IP.\n    inboundNatRules  []SubResource_StatusARM     InboundNatRules: An array of references to inbound rules that use this frontend IP.\n    loadBalancingRules  []SubResource_StatusARM     LoadBalancingRules: An array of references to load balancing rules that use this frontend IP.\n    outboundRules  []SubResource_StatusARM     OutboundRules: An array of references to outbound rules that use this frontend IP.\n    privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAddressVersion  IPVersion_Status     PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The Private IP allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the frontend IP configuration resource.\n    publicIPAddress  PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM     PublicIPAddress: The reference to the Public IP resource.\n    publicIPPrefix  SubResource_StatusARM     PublicIPPrefix: The reference to the Public IP Prefix resource.\n    subnet  Subnet_Status_LoadBalancer_SubResourceEmbeddedARM     Subnet: The reference to the subnet resource.\n    FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    inboundNatPools  []SubResource_Status     InboundNatPools: An array of references to inbound pools that use this frontend IP.\n    inboundNatRules  []SubResource_Status     InboundNatRules: An array of references to inbound rules that use this frontend IP.\n    loadBalancingRules  []SubResource_Status     LoadBalancingRules: An array of references to load balancing rules that use this frontend IP.\n    name  string    Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.\n    outboundRules  []SubResource_Status     OutboundRules: An array of references to outbound rules that use this frontend IP.\n    privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAddressVersion  IPVersion_Status     PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The Private IP allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the frontend IP configuration resource.\n    publicIPAddress  PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded     PublicIPAddress: The reference to the Public IP resource.\n    publicIPPrefix  SubResource_Status     PublicIPPrefix: The reference to the Public IP Prefix resource.\n    subnet  Subnet_Status_LoadBalancer_SubResourceEmbedded     Subnet: The reference to the subnet resource.\n    type  string    Type: Type of the resource.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.\n    properties  FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM     Properties: Properties of the load balancer probe.\n    type  string    Type: Type of the resource.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    IPAllocationMethod_Status (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM, IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded, IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfiguration_Status)      Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    IPConfigurationBgpPeeringAddress   (Appears on:BgpSettings)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IPConfigurationBgpPeeringAddress\n    Field Description      customBgpIpAddresses  []string    CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to IP configuration.\n    ipconfigurationId  string    IpconfigurationId: The ID of IP configuration which belongs to gateway.\n    IPConfigurationBgpPeeringAddressARM   (Appears on:BgpSettingsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IPConfigurationBgpPeeringAddress\n    Field Description      customBgpIpAddresses  []string    CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to IP configuration.\n    ipconfigurationId  string    IpconfigurationId: The ID of IP configuration which belongs to gateway.\n    IPConfigurationBgpPeeringAddress_Status   (Appears on:BgpSettings_Status)      Field Description      customBgpIpAddresses  []string    CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to IP configuration.\n    defaultBgpIpAddresses  []string    DefaultBgpIpAddresses: The list of default BGP peering addresses which belong to IP configuration.\n    ipconfigurationId  string    IpconfigurationId: The ID of IP configuration which belongs to gateway.\n    tunnelIpAddresses  []string    TunnelIpAddresses: The list of tunnel public IP addresses which belong to IP configuration.\n    IPConfigurationBgpPeeringAddress_StatusARM   (Appears on:BgpSettings_StatusARM)      Field Description      customBgpIpAddresses  []string    CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to IP configuration.\n    defaultBgpIpAddresses  []string    DefaultBgpIpAddresses: The list of default BGP peering addresses which belong to IP configuration.\n    ipconfigurationId  string    IpconfigurationId: The ID of IP configuration which belongs to gateway.\n    tunnelIpAddresses  []string    TunnelIpAddresses: The list of tunnel public IP addresses which belong to IP configuration.\n    IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)      Field Description      provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration profile resource.\n    IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration profile resource.\n    type  string    Type: Sub Resource type.\n    IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource. This name can be used to access the resource.\n    properties  IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     Properties: Properties of the IP configuration profile.\n    type  string    Type: Sub Resource type.\n    IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM)      Field Description      privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration resource.\n    subnet  Subnet_Status_PublicIPAddress_SubResourceEmbeddedARM     Subnet: The reference to the subnet resource.\n    IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)      Field Description      privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration resource.\n    publicIPAddress  PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     PublicIPAddress: The reference to the public IP resource.\n    IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration resource.\n    subnet  Subnet_Status_PublicIPAddress_SubResourceEmbedded     Subnet: The reference to the subnet resource.\n    IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM     Properties: Properties of the IP configuration.\n    IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the IP configuration resource.\n    publicIPAddress  PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded     PublicIPAddress: The reference to the public IP resource.\n    IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     Properties: Properties of the IP configuration.\n    IPVersion_Status (string alias)  (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    IkeEncryption_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n    IkeIntegrity_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n  \u0026#34;SHA384\u0026#34;\n    InboundNatPoolPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_InboundNatPoolsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/InboundNatPoolPropertiesFormat\n    Field Description      backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResourceARM     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPortRangeEnd  int    FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.\n    frontendPortRangeStart  int    FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    protocol  InboundNatPoolPropertiesFormatProtocol     Protocol: The reference to the transport protocol used by the inbound NAT pool.\n    InboundNatPoolPropertiesFormatProtocol (string alias)  (Appears on:InboundNatPoolPropertiesFormatARM, LoadBalancers_Spec_Properties_InboundNatPools)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    InboundNatPoolPropertiesFormat_StatusARM   (Appears on:InboundNatPool_StatusARM)      Field Description      backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResource_StatusARM     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPortRangeEnd  int    FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.\n    frontendPortRangeStart  int    FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    protocol  TransportProtocol_Status     Protocol: The reference to the transport protocol used by the inbound NAT pool.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the inbound NAT pool resource.\n    InboundNatPool_Status   (Appears on:LoadBalancer_Status)      Field Description      backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    frontendIPConfiguration  SubResource_Status     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPortRangeEnd  int    FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.\n    frontendPortRangeStart  int    FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.\n    id  string    Id: Resource ID.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    name  string    Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.\n    protocol  TransportProtocol_Status     Protocol: The reference to the transport protocol used by the inbound NAT pool.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the inbound NAT pool resource.\n    type  string    Type: Type of the resource.\n    InboundNatPool_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.\n    properties  InboundNatPoolPropertiesFormat_StatusARM     Properties: Properties of load balancer inbound nat pool.\n    type  string    Type: Type of the resource.\n    InboundNatRule_Status_LoadBalancer_SubResourceEmbedded   (Appears on:LoadBalancer_Status)      Field Description      id  string    Id: Resource ID.\n    InboundNatRule_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    InboundNatRule_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    InboundNatRule_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    IpTag   (Appears on:PublicIPAddresses_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IpTag\n    Field Description      ipTagType  string    IpTagType: The IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: The value of the IP tag associated with the public IP. Example: SQL.\n    IpTagARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IpTag\n    Field Description      ipTagType  string    IpTagType: The IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: The value of the IP tag associated with the public IP. Example: SQL.\n    IpTag_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      ipTagType  string    IpTagType: The IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: The value of the IP tag associated with the public IP. Example: SQL.\n    IpTag_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)      Field Description      ipTagType  string    IpTagType: The IP tag type. Example: FirstPartyUsage.\n    tag  string    Tag: The value of the IP tag associated with the public IP. Example: SQL.\n    IpsecEncryption_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecIntegrity_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n    IpsecPolicy   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IpsecPolicy\n    Field Description      dhGroup  IpsecPolicyDhGroup     DhGroup: The DH Group used in IKE Phase 1 for initial SA.\n    ikeEncryption  IpsecPolicyIkeEncryption     IkeEncryption: The IKE encryption algorithm (IKE phase 2).\n    ikeIntegrity  IpsecPolicyIkeIntegrity     IkeIntegrity: The IKE integrity algorithm (IKE phase 2).\n    ipsecEncryption  IpsecPolicyIpsecEncryption     IpsecEncryption: The IPSec encryption algorithm (IKE phase 1).\n    ipsecIntegrity  IpsecPolicyIpsecIntegrity     IpsecIntegrity: The IPSec integrity algorithm (IKE phase 1).\n    pfsGroup  IpsecPolicyPfsGroup     PfsGroup: The Pfs Group used in IKE Phase 2 for new child SA.\n    saDataSizeKilobytes  int    SaDataSizeKilobytes: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.\n    saLifeTimeSeconds  int    SaLifeTimeSeconds: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.\n    IpsecPolicyARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IpsecPolicy\n    Field Description      dhGroup  IpsecPolicyDhGroup     DhGroup: The DH Group used in IKE Phase 1 for initial SA.\n    ikeEncryption  IpsecPolicyIkeEncryption     IkeEncryption: The IKE encryption algorithm (IKE phase 2).\n    ikeIntegrity  IpsecPolicyIkeIntegrity     IkeIntegrity: The IKE integrity algorithm (IKE phase 2).\n    ipsecEncryption  IpsecPolicyIpsecEncryption     IpsecEncryption: The IPSec encryption algorithm (IKE phase 1).\n    ipsecIntegrity  IpsecPolicyIpsecIntegrity     IpsecIntegrity: The IPSec integrity algorithm (IKE phase 1).\n    pfsGroup  IpsecPolicyPfsGroup     PfsGroup: The Pfs Group used in IKE Phase 2 for new child SA.\n    saDataSizeKilobytes  int    SaDataSizeKilobytes: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.\n    saLifeTimeSeconds  int    SaLifeTimeSeconds: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.\n    IpsecPolicyDhGroup (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;DHGroup1\u0026#34;\n  \u0026#34;DHGroup14\u0026#34;\n  \u0026#34;DHGroup2\u0026#34;\n  \u0026#34;DHGroup2048\u0026#34;\n  \u0026#34;DHGroup24\u0026#34;\n  \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecPolicyIkeEncryption (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n    IpsecPolicyIkeIntegrity (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n  \u0026#34;SHA384\u0026#34;\n    IpsecPolicyIpsecEncryption (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;AES128\u0026#34;\n  \u0026#34;AES192\u0026#34;\n  \u0026#34;AES256\u0026#34;\n  \u0026#34;DES\u0026#34;\n  \u0026#34;DES3\u0026#34;\n  \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;None\u0026#34;\n    IpsecPolicyIpsecIntegrity (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;GCMAES128\u0026#34;\n  \u0026#34;GCMAES192\u0026#34;\n  \u0026#34;GCMAES256\u0026#34;\n  \u0026#34;MD5\u0026#34;\n  \u0026#34;SHA1\u0026#34;\n  \u0026#34;SHA256\u0026#34;\n    IpsecPolicyPfsGroup (string alias)  (Appears on:IpsecPolicy, IpsecPolicyARM)      Value Description   \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;PFS1\u0026#34;\n  \u0026#34;PFS14\u0026#34;\n  \u0026#34;PFS2\u0026#34;\n  \u0026#34;PFS2048\u0026#34;\n  \u0026#34;PFS24\u0026#34;\n  \u0026#34;PFSMM\u0026#34;\n    IpsecPolicy_Status   (Appears on:VpnClientConfiguration_Status)      Field Description      dhGroup  DhGroup_Status     DhGroup: The DH Group used in IKE Phase 1 for initial SA.\n    ikeEncryption  IkeEncryption_Status     IkeEncryption: The IKE encryption algorithm (IKE phase 2).\n    ikeIntegrity  IkeIntegrity_Status     IkeIntegrity: The IKE integrity algorithm (IKE phase 2).\n    ipsecEncryption  IpsecEncryption_Status     IpsecEncryption: The IPSec encryption algorithm (IKE phase 1).\n    ipsecIntegrity  IpsecIntegrity_Status     IpsecIntegrity: The IPSec integrity algorithm (IKE phase 1).\n    pfsGroup  PfsGroup_Status     PfsGroup: The Pfs Group used in IKE Phase 2 for new child SA.\n    saDataSizeKilobytes  int    SaDataSizeKilobytes: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.\n    saLifeTimeSeconds  int    SaLifeTimeSeconds: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.\n    IpsecPolicy_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)      Field Description      dhGroup  DhGroup_Status     DhGroup: The DH Group used in IKE Phase 1 for initial SA.\n    ikeEncryption  IkeEncryption_Status     IkeEncryption: The IKE encryption algorithm (IKE phase 2).\n    ikeIntegrity  IkeIntegrity_Status     IkeIntegrity: The IKE integrity algorithm (IKE phase 2).\n    ipsecEncryption  IpsecEncryption_Status     IpsecEncryption: The IPSec encryption algorithm (IKE phase 1).\n    ipsecIntegrity  IpsecIntegrity_Status     IpsecIntegrity: The IPSec integrity algorithm (IKE phase 1).\n    pfsGroup  PfsGroup_Status     PfsGroup: The Pfs Group used in IKE Phase 2 for new child SA.\n    saDataSizeKilobytes  int    SaDataSizeKilobytes: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.\n    saLifeTimeSeconds  int    SaLifeTimeSeconds: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.\n    LoadBalancer   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/loadBalancers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  LoadBalancers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPools     BackendAddressPools: Collection of backend address pools used by a load balancer.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the load balancer.\n    frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurations     FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.\n    inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPools     InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.\n    loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRules     LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.\n    location  string    Location: Location to deploy resource to\n    outboundRules  []LoadBalancers_Spec_Properties_OutboundRules     OutboundRules: The outbound rules.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    probes  []LoadBalancers_Spec_Properties_Probes     Probes: Collection of probe objects used in the load balancer.\n    sku  LoadBalancerSku     Sku: The load balancer SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  LoadBalancer_Status         LoadBalancerBackendAddressPropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/LoadBalancerBackendAddressPropertiesFormat\n    Field Description      ipAddress  string    IpAddress: IP Address belonging to the referenced virtual network.\n    loadBalancerFrontendIPConfiguration  SubResourceARM     LoadBalancerFrontendIPConfiguration: Reference to the frontend ip address configuration defined in regional loadbalancer.\n    subnet  SubResourceARM     Subnet: Reference to an existing subnet.\n    virtualNetwork  SubResourceARM     VirtualNetwork: Reference to an existing virtual network.\n    LoadBalancerPropertiesFormat_StatusARM   (Appears on:LoadBalancer_StatusARM)      Field Description      backendAddressPools  []BackendAddressPool_Status_LoadBalancer_SubResourceEmbeddedARM     BackendAddressPools: Collection of backend address pools used by a load balancer.\n    frontendIPConfigurations  []FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbeddedARM     FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.\n    inboundNatPools  []InboundNatPool_StatusARM     InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.\n    inboundNatRules  []InboundNatRule_Status_LoadBalancer_SubResourceEmbeddedARM     InboundNatRules: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.\n    loadBalancingRules  []LoadBalancingRule_StatusARM     LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.\n    outboundRules  []OutboundRule_StatusARM     OutboundRules: The outbound rules.\n    probes  []Probe_StatusARM     Probes: Collection of probe objects used in the load balancer.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the load balancer resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the load balancer resource.\n    LoadBalancerSku   (Appears on:LoadBalancers_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/LoadBalancerSku\n    Field Description      name  LoadBalancerSkuName     Name: Name of a load balancer SKU.\n    tier  LoadBalancerSkuTier     Tier: Tier of a load balancer SKU.\n    LoadBalancerSkuARM   (Appears on:LoadBalancers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/LoadBalancerSku\n    Field Description      name  LoadBalancerSkuName     Name: Name of a load balancer SKU.\n    tier  LoadBalancerSkuTier     Tier: Tier of a load balancer SKU.\n    LoadBalancerSkuName (string alias)  (Appears on:LoadBalancerSku, LoadBalancerSkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    LoadBalancerSkuStatusName (string alias)  (Appears on:LoadBalancerSku_Status, LoadBalancerSku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    LoadBalancerSkuStatusTier (string alias)  (Appears on:LoadBalancerSku_Status, LoadBalancerSku_StatusARM)      Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    LoadBalancerSkuTier (string alias)  (Appears on:LoadBalancerSku, LoadBalancerSkuARM)      Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    LoadBalancerSku_Status   (Appears on:LoadBalancer_Status)      Field Description      name  LoadBalancerSkuStatusName     Name: Name of a load balancer SKU.\n    tier  LoadBalancerSkuStatusTier     Tier: Tier of a load balancer SKU.\n    LoadBalancerSku_StatusARM   (Appears on:LoadBalancer_StatusARM)      Field Description      name  LoadBalancerSkuStatusName     Name: Name of a load balancer SKU.\n    tier  LoadBalancerSkuStatusTier     Tier: Tier of a load balancer SKU.\n    LoadBalancer_Status   (Appears on:LoadBalancer)      Field Description      backendAddressPools  []BackendAddressPool_Status_LoadBalancer_SubResourceEmbedded     BackendAddressPools: Collection of backend address pools used by a load balancer.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the load balancer.\n    frontendIPConfigurations  []FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded     FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.\n    id  string    Id: Resource ID.\n    inboundNatPools  []InboundNatPool_Status     InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.\n    inboundNatRules  []InboundNatRule_Status_LoadBalancer_SubResourceEmbedded     InboundNatRules: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.\n    loadBalancingRules  []LoadBalancingRule_Status     LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    outboundRules  []OutboundRule_Status     OutboundRules: The outbound rules.\n    probes  []Probe_Status     Probes: Collection of probe objects used in the load balancer.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the load balancer resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the load balancer resource.\n    sku  LoadBalancerSku_Status     Sku: The load balancer SKU.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    LoadBalancer_StatusARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  LoadBalancerPropertiesFormat_StatusARM     Properties: Properties of load balancer.\n    sku  LoadBalancerSku_StatusARM     Sku: The load balancer SKU.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    LoadBalancersSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    LoadBalancers_Spec   (Appears on:LoadBalancer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPools     BackendAddressPools: Collection of backend address pools used by a load balancer.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the load balancer.\n    frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurations     FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.\n    inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPools     InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.\n    loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRules     LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.\n    location  string    Location: Location to deploy resource to\n    outboundRules  []LoadBalancers_Spec_Properties_OutboundRules     OutboundRules: The outbound rules.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    probes  []LoadBalancers_Spec_Properties_Probes     Probes: Collection of probe objects used in the load balancer.\n    sku  LoadBalancerSku     Sku: The load balancer SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    LoadBalancers_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The extended location of the load balancer.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  LoadBalancers_Spec_PropertiesARM     Properties: Properties of load balancer.\n    sku  LoadBalancerSkuARM     Sku: The load balancer SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    LoadBalancers_Spec_PropertiesARM   (Appears on:LoadBalancers_SpecARM)      Field Description      backendAddressPools  []LoadBalancers_Spec_Properties_BackendAddressPoolsARM     BackendAddressPools: Collection of backend address pools used by a load balancer.\n    frontendIPConfigurations  []LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM     FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.\n    inboundNatPools  []LoadBalancers_Spec_Properties_InboundNatPoolsARM     InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.\n    loadBalancingRules  []LoadBalancers_Spec_Properties_LoadBalancingRulesARM     LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.\n    outboundRules  []LoadBalancers_Spec_Properties_OutboundRulesARM     OutboundRules: The outbound rules.\n    probes  []LoadBalancers_Spec_Properties_ProbesARM     Probes: Collection of probe objects used in the load balancer.\n    LoadBalancers_Spec_Properties_BackendAddressPools   (Appears on:LoadBalancers_Spec)      Field Description      loadBalancerBackendAddresses  []LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses     LoadBalancerBackendAddresses: An array of backend addresses.\n    location  string    Location: The location of the backend address pool.\n    name  string    Name: The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.\n    LoadBalancers_Spec_Properties_BackendAddressPoolsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.\n    properties  LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM     Properties: Properties of load balancer backend address pool.\n    LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPoolsARM)      Field Description      loadBalancerBackendAddresses  []LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM     LoadBalancerBackendAddresses: An array of backend addresses.\n    location  string    Location: The location of the backend address pool.\n    LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools)      Field Description      ipAddress  string    IpAddress: IP Address belonging to the referenced virtual network.\n    loadBalancerFrontendIPConfiguration  SubResource     LoadBalancerFrontendIPConfiguration: Reference to the frontend ip address configuration defined in regional loadbalancer.\n    name  string    Name: Name of the backend address.\n    subnet  SubResource     Subnet: Reference to an existing subnet.\n    virtualNetwork  SubResource     VirtualNetwork: Reference to an existing virtual network.\n    LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddressesARM   (Appears on:LoadBalancers_Spec_Properties_BackendAddressPools_PropertiesARM)      Field Description      name  string    Name: Name of the backend address.\n    properties  LoadBalancerBackendAddressPropertiesFormatARM     Properties: Properties of load balancer backend address pool.\n    LoadBalancers_Spec_Properties_FrontendIPConfigurations   (Appears on:LoadBalancers_Spec)      Field Description      name  string    Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.\n    privateIPAddress  string    PrivateIPAddress: The private IP address of the IP configuration.\n    privateIPAddressVersion  FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion     PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.\n    privateIPAllocationMethod  FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The Private IP allocation method.\n    publicIPAddress  SubResource     PublicIPAddress: The reference to the Public IP resource.\n    publicIPPrefix  SubResource     PublicIPPrefix: The reference to the Public IP Prefix resource.\n    subnet  SubResource     Subnet: The reference to the subnet resource.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    LoadBalancers_Spec_Properties_FrontendIPConfigurationsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.\n    properties  FrontendIPConfigurationPropertiesFormatARM     Properties: Properties of the load balancer probe.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    LoadBalancers_Spec_Properties_InboundNatPools   (Appears on:LoadBalancers_Spec)      Field Description      backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResource     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPortRangeEnd  int    FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.\n    frontendPortRangeStart  int    FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    name  string    Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.\n    protocol  InboundNatPoolPropertiesFormatProtocol     Protocol: The reference to the transport protocol used by the inbound NAT pool.\n    LoadBalancers_Spec_Properties_InboundNatPoolsARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.\n    properties  InboundNatPoolPropertiesFormatARM     Properties: Properties of load balancer inbound nat pool.\n    LoadBalancers_Spec_Properties_LoadBalancingRules   (Appears on:LoadBalancers_Spec)      Field Description      backendAddressPool  SubResource     BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.\n    backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    disableOutboundSnat  bool    DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResource     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPort  int    FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    loadDistribution  LoadBalancingRulePropertiesFormatLoadDistribution     LoadDistribution: The load distribution policy for this rule.\n    name  string    Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.\n    probe  SubResource     Probe: The reference to the load balancer probe used by the load balancing rule.\n    protocol  LoadBalancingRulePropertiesFormatProtocol     Protocol: The reference to the transport protocol used by the load balancing rule.\n    LoadBalancers_Spec_Properties_LoadBalancingRulesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.\n    properties  LoadBalancingRulePropertiesFormatARM     Properties: Properties of load balancer load balancing rule.\n    LoadBalancers_Spec_Properties_OutboundRules   (Appears on:LoadBalancers_Spec)      Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The number of outbound ports to be used for NAT.\n    backendAddressPool  SubResource     BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfigurations  []SubResource     FrontendIPConfigurations: The Frontend IP addresses of the load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection.\n    name  string    Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.\n    protocol  OutboundRulePropertiesFormatProtocol     Protocol: The protocol for the outbound rule in load balancer.\n    LoadBalancers_Spec_Properties_OutboundRulesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.\n    properties  OutboundRulePropertiesFormatARM     Properties: Properties of load balancer outbound rule.\n    LoadBalancers_Spec_Properties_Probes   (Appears on:LoadBalancers_Spec)      Field Description      intervalInSeconds  int    IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.\n    name  string    Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.\n    numberOfProbes  int    NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.\n    port  int    Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.\n    protocol  ProbePropertiesFormatProtocol     Protocol: The protocol of the end point. If \u0026lsquo;Tcp\u0026rsquo; is specified, a received ACK is required for the probe to be successful. If \u0026lsquo;Http\u0026rsquo; or \u0026lsquo;Https\u0026rsquo; is specified, a 200 OK response from the specifies URI is required for the probe to be successful.\n    requestPath  string    RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.\n    LoadBalancers_Spec_Properties_ProbesARM   (Appears on:LoadBalancers_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.\n    properties  ProbePropertiesFormatARM     Properties: Properties of load balancer probe.\n    LoadBalancingRulePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRulesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/LoadBalancingRulePropertiesFormat\n    Field Description      backendAddressPool  SubResourceARM     BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.\n    backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    disableOutboundSnat  bool    DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResourceARM     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPort  int    FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    loadDistribution  LoadBalancingRulePropertiesFormatLoadDistribution     LoadDistribution: The load distribution policy for this rule.\n    probe  SubResourceARM     Probe: The reference to the load balancer probe used by the load balancing rule.\n    protocol  LoadBalancingRulePropertiesFormatProtocol     Protocol: The reference to the transport protocol used by the load balancing rule.\n    LoadBalancingRulePropertiesFormatLoadDistribution (string alias)  (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancingRulePropertiesFormatARM)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;SourceIP\u0026#34;\n  \u0026#34;SourceIPProtocol\u0026#34;\n    LoadBalancingRulePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancingRulePropertiesFormatARM)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    LoadBalancingRulePropertiesFormatStatusLoadDistribution (string alias)  (Appears on:LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status)      Value Description   \u0026#34;Default\u0026#34;\n  \u0026#34;SourceIP\u0026#34;\n  \u0026#34;SourceIPProtocol\u0026#34;\n    LoadBalancingRulePropertiesFormat_StatusARM   (Appears on:LoadBalancingRule_StatusARM)      Field Description      backendAddressPool  SubResource_StatusARM     BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.\n    backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    disableOutboundSnat  bool    DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfiguration  SubResource_StatusARM     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPort  int    FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    loadDistribution  LoadBalancingRulePropertiesFormatStatusLoadDistribution     LoadDistribution: The load distribution policy for this rule.\n    probe  SubResource_StatusARM     Probe: The reference to the load balancer probe used by the load balancing rule.\n    protocol  TransportProtocol_Status     Protocol: The reference to the transport protocol used by the load balancing rule.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the load balancing rule resource.\n    LoadBalancingRule_Status   (Appears on:LoadBalancer_Status)      Field Description      backendAddressPool  SubResource_Status     BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.\n    backendPort  int    BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    disableOutboundSnat  bool    DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.\n    enableFloatingIP  bool    EnableFloatingIP: Configures a virtual machine\u0026rsquo;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can\u0026rsquo;t be changed after you create the endpoint.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    frontendIPConfiguration  SubResource_Status     FrontendIPConfiguration: A reference to frontend IP addresses.\n    frontendPort  int    FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \u0026ldquo;Any Port\u0026rdquo;.\n    id  string    Id: Resource ID.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.\n    loadDistribution  LoadBalancingRulePropertiesFormatStatusLoadDistribution     LoadDistribution: The load distribution policy for this rule.\n    name  string    Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.\n    probe  SubResource_Status     Probe: The reference to the load balancer probe used by the load balancing rule.\n    protocol  TransportProtocol_Status     Protocol: The reference to the transport protocol used by the load balancing rule.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the load balancing rule resource.\n    type  string    Type: Type of the resource.\n    LoadBalancingRule_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.\n    properties  LoadBalancingRulePropertiesFormat_StatusARM     Properties: Properties of load balancer load balancing rule.\n    type  string    Type: Type of the resource.\n    NatGatewaySkuStatusName (string alias)  (Appears on:NatGatewaySku_Status, NatGatewaySku_StatusARM)      Value Description   \u0026#34;Standard\u0026#34;\n    NatGatewaySku_Status   (Appears on:NatGateway_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      name  NatGatewaySkuStatusName     Name: Name of Nat Gateway SKU.\n    NatGatewaySku_StatusARM   (Appears on:NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM)      Field Description      name  NatGatewaySkuStatusName     Name: Name of Nat Gateway SKU.\n    NatGateway_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    sku  NatGatewaySku_Status     Sku: The nat gateway SKU.\n    zones  []string    Zones: A list of availability zones denoting the zone in which Nat Gateway should be deployed.\n    NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    sku  NatGatewaySku_StatusARM     Sku: The nat gateway SKU.\n    zones  []string    Zones: A list of availability zones denoting the zone in which Nat Gateway should be deployed.\n    NetworkInterface   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkInterfaces\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkInterfaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dnsSettings  NetworkInterfaceDnsSettings     DnsSettings: The DNS settings in network interface.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: If the network interface is accelerated networking enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the network interface.\n    ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurations     IpConfigurations: A list of IPConfigurations of the network interface.\n    location  string    Location: Location to deploy resource to\n    networkSecurityGroup  SubResource     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  NetworkInterface_Status_NetworkInterface_SubResourceEmbedded         NetworkInterfaceDnsSettings   (Appears on:NetworkInterfaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/NetworkInterfaceDnsSettings\n    Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses. Use \u0026lsquo;AzureProvidedDNS\u0026rsquo; to switch to azure provided DNS resolution. \u0026lsquo;AzureProvidedDNS\u0026rsquo; value cannot be combined with other IPs, it must be the only value in dnsServers collection.\n    internalDnsNameLabel  string    InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.\n    NetworkInterfaceDnsSettingsARM   (Appears on:NetworkInterfaces_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/NetworkInterfaceDnsSettings\n    Field Description      dnsServers  []string    DnsServers: List of DNS servers IP addresses. Use \u0026lsquo;AzureProvidedDNS\u0026rsquo; to switch to azure provided DNS resolution. \u0026lsquo;AzureProvidedDNS\u0026rsquo; value cannot be combined with other IPs, it must be the only value in dnsServers collection.\n    internalDnsNameLabel  string    InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.\n    NetworkInterfaceDnsSettings_Status   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      appliedDnsServers  []string    AppliedDnsServers: If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.\n    dnsServers  []string    DnsServers: List of DNS servers IP addresses. Use \u0026lsquo;AzureProvidedDNS\u0026rsquo; to switch to azure provided DNS resolution. \u0026lsquo;AzureProvidedDNS\u0026rsquo; value cannot be combined with other IPs, it must be the only value in dnsServers collection.\n    internalDnsNameLabel  string    InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.\n    internalDomainNameSuffix  string    InternalDomainNameSuffix: Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.\n    internalFqdn  string    InternalFqdn: Fully qualified DNS name supporting internal communications between VMs in the same virtual network.\n    NetworkInterfaceDnsSettings_StatusARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      appliedDnsServers  []string    AppliedDnsServers: If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.\n    dnsServers  []string    DnsServers: List of DNS servers IP addresses. Use \u0026lsquo;AzureProvidedDNS\u0026rsquo; to switch to azure provided DNS resolution. \u0026lsquo;AzureProvidedDNS\u0026rsquo; value cannot be combined with other IPs, it must be the only value in dnsServers collection.\n    internalDnsNameLabel  string    InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.\n    internalDomainNameSuffix  string    InternalDomainNameSuffix: Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.\n    internalFqdn  string    InternalFqdn: Fully qualified DNS name supporting internal communications between VMs in the same virtual network.\n    NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      fqdns  []string    Fqdns: List of FQDNs for current private link connection.\n    groupId  string    GroupId: The group ID for current private link connection.\n    requiredMemberName  string    RequiredMemberName: The required member name for current private link connection.\n    NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_StatusARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      fqdns  []string    Fqdns: List of FQDNs for current private link connection.\n    groupId  string    GroupId: The group ID for current private link connection.\n    requiredMemberName  string    RequiredMemberName: The required member name for current private link connection.\n    NetworkInterfaceIPConfigurationPropertiesFormatARM   (Appears on:NetworkInterfaces_Spec_Properties_IpConfigurationsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat\n    Field Description      applicationGatewayBackendAddressPools  []SubResourceARM     ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.\n    applicationSecurityGroups  []SubResourceARM     ApplicationSecurityGroups: Application security groups in which the IP configuration is included.\n    loadBalancerBackendAddressPools  []SubResourceARM     LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.\n    loadBalancerInboundNatRules  []SubResourceARM     LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.\n    primary  bool    Primary: Whether this is a primary customer address on the network interface.\n    privateIPAddress  string    PrivateIPAddress: Private IP address of the IP configuration.\n    privateIPAddressVersion  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion     PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.\n    privateIPAllocationMethod  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The private IP address allocation method.\n    publicIPAddress  SubResourceARM     PublicIPAddress: Public IP address bound to the IP configuration.\n    subnet  SubResourceARM     Subnet: Subnet bound to the IP configuration.\n    virtualNetworkTaps  []SubResourceARM     VirtualNetworkTaps: The reference to Virtual Network Taps.\n    NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion (string alias)  (Appears on:NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_Properties_IpConfigurations)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_Properties_IpConfigurations)      Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      applicationGatewayBackendAddressPools  []ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM     ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.\n    applicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM     ApplicationSecurityGroups: Application security groups in which the IP configuration is included.\n    loadBalancerBackendAddressPools  []BackendAddressPool_Status_NetworkInterface_SubResourceEmbeddedARM     LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.\n    loadBalancerInboundNatRules  []InboundNatRule_Status_NetworkInterface_SubResourceEmbeddedARM     LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.\n    primary  bool    Primary: Whether this is a primary customer address on the network interface.\n    privateIPAddress  string    PrivateIPAddress: Private IP address of the IP configuration.\n    privateIPAddressVersion  IPVersion_Status     PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    privateLinkConnectionProperties  NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_StatusARM     PrivateLinkConnectionProperties: PrivateLinkConnection properties for the network interface.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network interface IP configuration.\n    publicIPAddress  PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM     PublicIPAddress: Public IP address bound to the IP configuration.\n    subnet  Subnet_Status_NetworkInterface_SubResourceEmbeddedARM     Subnet: Subnet bound to the IP configuration.\n    virtualNetworkTaps  []VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbeddedARM     VirtualNetworkTaps: The reference to Virtual Network Taps.\n    NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      applicationGatewayBackendAddressPools  []ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded     ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.\n    applicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkInterface_SubResourceEmbedded     ApplicationSecurityGroups: Application security groups in which the IP configuration is included.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    loadBalancerBackendAddressPools  []BackendAddressPool_Status_NetworkInterface_SubResourceEmbedded     LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.\n    loadBalancerInboundNatRules  []InboundNatRule_Status_NetworkInterface_SubResourceEmbedded     LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    primary  bool    Primary: Whether this is a primary customer address on the network interface.\n    privateIPAddress  string    PrivateIPAddress: Private IP address of the IP configuration.\n    privateIPAddressVersion  IPVersion_Status     PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    privateLinkConnectionProperties  NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status     PrivateLinkConnectionProperties: PrivateLinkConnection properties for the network interface.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network interface IP configuration.\n    publicIPAddress  PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded     PublicIPAddress: Public IP address bound to the IP configuration.\n    subnet  Subnet_Status_NetworkInterface_SubResourceEmbedded     Subnet: Subnet bound to the IP configuration.\n    type  string    Type: Resource type.\n    virtualNetworkTaps  []VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded     VirtualNetworkTaps: The reference to Virtual Network Taps.\n    NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM     Properties: Network interface IP configuration properties.\n    type  string    Type: Resource type.\n    NetworkInterfacePropertiesFormatStatusMigrationPhase (string alias)  (Appears on:NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Value Description   \u0026#34;Abort\u0026#34;\n  \u0026#34;Commit\u0026#34;\n  \u0026#34;Committed\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;Prepare\u0026#34;\n    NetworkInterfacePropertiesFormatStatusNicType (string alias)  (Appears on:NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Value Description   \u0026#34;Elastic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    NetworkInterfacePropertiesFormat_StatusARM   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      dnsSettings  NetworkInterfaceDnsSettings_StatusARM     DnsSettings: The DNS settings in network interface.\n    dscpConfiguration  SubResource_StatusARM     DscpConfiguration: A reference to the dscp configuration to which the network interface is linked.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: If the network interface is accelerated networking enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.\n    hostedWorkloads  []string    HostedWorkloads: A list of references to linked BareMetal resources.\n    ipConfigurations  []NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM     IpConfigurations: A list of IPConfigurations of the network interface.\n    macAddress  string    MacAddress: The MAC address of the network interface.\n    migrationPhase  NetworkInterfacePropertiesFormatStatusMigrationPhase     MigrationPhase: Migration phase of Network Interface resource.\n    networkSecurityGroup  NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    nicType  NetworkInterfacePropertiesFormatStatusNicType     NicType: Type of Network Interface resource.\n    primary  bool    Primary: Whether this is a primary network interface on a virtual machine.\n    privateEndpoint  PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM     PrivateEndpoint: A reference to the private endpoint to which the network interface is linked.\n    privateLinkService  PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM     PrivateLinkService: Privatelinkservice of the network interface resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network interface resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the network interface resource.\n    tapConfigurations  []NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM     TapConfigurations: A list of TapConfigurations of the network interface.\n    virtualMachine  SubResource_StatusARM     VirtualMachine: The reference to a virtual machine.\n    NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    NetworkInterface_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    dnsSettings  NetworkInterfaceDnsSettings_Status     DnsSettings: The DNS settings in network interface.\n    dscpConfiguration  SubResource_Status     DscpConfiguration: A reference to the dscp configuration to which the network interface is linked.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: If the network interface is accelerated networking enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the network interface.\n    hostedWorkloads  []string    HostedWorkloads: A list of references to linked BareMetal resources.\n    id  string    Id: Resource ID.\n    ipConfigurations  []NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded     IpConfigurations: A list of IPConfigurations of the network interface.\n    location  string    Location: Resource location.\n    macAddress  string    MacAddress: The MAC address of the network interface.\n    migrationPhase  NetworkInterfacePropertiesFormatStatusMigrationPhase     MigrationPhase: Migration phase of Network Interface resource.\n    name  string    Name: Resource name.\n    networkSecurityGroup  NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    nicType  NetworkInterfacePropertiesFormatStatusNicType     NicType: Type of Network Interface resource.\n    primary  bool    Primary: Whether this is a primary network interface on a virtual machine.\n    privateEndpoint  PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded     PrivateEndpoint: A reference to the private endpoint to which the network interface is linked.\n    privateLinkService  PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded     PrivateLinkService: Privatelinkservice of the network interface resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network interface resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the network interface resource.\n    tags  map[string]string    Tags: Resource tags.\n    tapConfigurations  []NetworkInterfaceTapConfiguration_Status_NetworkInterface_SubResourceEmbedded     TapConfigurations: A list of TapConfigurations of the network interface.\n    type  string    Type: Resource type.\n    virtualMachine  SubResource_Status     VirtualMachine: The reference to a virtual machine.\n    NetworkInterface_Status_NetworkInterface_SubResourceEmbeddedARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the network interface.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  NetworkInterfacePropertiesFormat_StatusARM     Properties: Properties of the network interface.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the network interface.\n    id  string    Id: Resource ID.\n    NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the network interface.\n    id  string    Id: Resource ID.\n    NetworkInterfacesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    NetworkInterfaces_Spec   (Appears on:NetworkInterface)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    dnsSettings  NetworkInterfaceDnsSettings     DnsSettings: The DNS settings in network interface.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: If the network interface is accelerated networking enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the network interface.\n    ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurations     IpConfigurations: A list of IPConfigurations of the network interface.\n    location  string    Location: Location to deploy resource to\n    networkSecurityGroup  SubResource     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NetworkInterfaces_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The extended location of the network interface.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  NetworkInterfaces_Spec_PropertiesARM     Properties: Properties of the network interface.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NetworkInterfaces_Spec_PropertiesARM   (Appears on:NetworkInterfaces_SpecARM)      Field Description      dnsSettings  NetworkInterfaceDnsSettingsARM     DnsSettings: The DNS settings in network interface.\n    enableAcceleratedNetworking  bool    EnableAcceleratedNetworking: If the network interface is accelerated networking enabled.\n    enableIPForwarding  bool    EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.\n    ipConfigurations  []NetworkInterfaces_Spec_Properties_IpConfigurationsARM     IpConfigurations: A list of IPConfigurations of the network interface.\n    networkSecurityGroup  SubResourceARM     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    NetworkInterfaces_Spec_Properties_IpConfigurations   (Appears on:NetworkInterfaces_Spec)      Field Description      applicationGatewayBackendAddressPools  []SubResource     ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.\n    applicationSecurityGroups  []SubResource     ApplicationSecurityGroups: Application security groups in which the IP configuration is included.\n    loadBalancerBackendAddressPools  []SubResource     LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.\n    loadBalancerInboundNatRules  []SubResource     LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    primary  bool    Primary: Whether this is a primary customer address on the network interface.\n    privateIPAddress  string    PrivateIPAddress: Private IP address of the IP configuration.\n    privateIPAddressVersion  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion     PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.\n    privateIPAllocationMethod  NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The private IP address allocation method.\n    publicIPAddress  SubResource     PublicIPAddress: Public IP address bound to the IP configuration.\n    subnet  SubResource     Subnet: Subnet bound to the IP configuration.\n    virtualNetworkTaps  []SubResource     VirtualNetworkTaps: The reference to Virtual Network Taps.\n    NetworkInterfaces_Spec_Properties_IpConfigurationsARM   (Appears on:NetworkInterfaces_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  NetworkInterfaceIPConfigurationPropertiesFormatARM     Properties: Network interface IP configuration properties.\n    NetworkSecurityGroup   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkSecurityGroups_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded         NetworkSecurityGroupPropertiesFormat_StatusARM   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbeddedARM)      Field Description      defaultSecurityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM     DefaultSecurityRules: The default security rules of network security group.\n    flowLogs  []FlowLog_Status_SubResourceEmbeddedARM     FlowLogs: A collection of references to flow log resources.\n    networkInterfaces  []NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbeddedARM     NetworkInterfaces: A collection of references to network interfaces.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network security group resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the network security group resource.\n    securityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM     SecurityRules: A collection of security rules of the network security group.\n    subnets  []Subnet_Status_NetworkSecurityGroup_SubResourceEmbeddedARM     Subnets: A collection of references to subnets.\n    NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    NetworkSecurityGroup_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    defaultSecurityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded     DefaultSecurityRules: The default security rules of network security group.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    flowLogs  []FlowLog_Status_SubResourceEmbedded     FlowLogs: A collection of references to flow log resources.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    networkInterfaces  []NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded     NetworkInterfaces: A collection of references to network interfaces.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the network security group resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the network security group resource.\n    securityRules  []SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded     SecurityRules: A collection of security rules of the network security group.\n    subnets  []Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded     Subnets: A collection of references to subnets.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbeddedARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  NetworkSecurityGroupPropertiesFormat_StatusARM     Properties: Properties of the network security group.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    NetworkSecurityGroupsSecurityRule   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups_securityRules\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NetworkSecurityGroupsSecurityRules_Spec          access  SecurityRulePropertiesFormatAccess     Access: The network traffic is allowed or denied.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    description  string    Description: A description for this rule. Restricted to 140 chars.\n    destinationAddressPrefix  string    DestinationAddressPrefix: The destination address prefix. CIDR or destination IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used.\n    destinationAddressPrefixes  []string    DestinationAddressPrefixes: The destination address prefixes. CIDR or destination IP ranges.\n    destinationApplicationSecurityGroups  []SubResource     DestinationApplicationSecurityGroups: The application security group specified as destination.\n    destinationPortRange  string    DestinationPortRange: The destination port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    destinationPortRanges  []string    DestinationPortRanges: The destination port ranges.\n    direction  SecurityRulePropertiesFormatDirection     Direction: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/NetworkSecurityGroup resource\n    priority  int    Priority: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n    protocol  SecurityRulePropertiesFormatProtocol     Protocol: Network protocol this rule applies to.\n    sourceAddressPrefix  string    SourceAddressPrefix: The CIDR or source IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used. If this is an ingress rule, specifies where network traffic originates from.\n    sourceAddressPrefixes  []string    SourceAddressPrefixes: The CIDR or source IP ranges.\n    sourceApplicationSecurityGroups  []SubResource     SourceApplicationSecurityGroups: The application security group specified as source.\n    sourcePortRange  string    SourcePortRange: The source port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    sourcePortRanges  []string    SourcePortRanges: The source port ranges.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded         NetworkSecurityGroupsSecurityRulesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    NetworkSecurityGroupsSecurityRules_Spec   (Appears on:NetworkSecurityGroupsSecurityRule)      Field Description      access  SecurityRulePropertiesFormatAccess     Access: The network traffic is allowed or denied.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    description  string    Description: A description for this rule. Restricted to 140 chars.\n    destinationAddressPrefix  string    DestinationAddressPrefix: The destination address prefix. CIDR or destination IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used.\n    destinationAddressPrefixes  []string    DestinationAddressPrefixes: The destination address prefixes. CIDR or destination IP ranges.\n    destinationApplicationSecurityGroups  []SubResource     DestinationApplicationSecurityGroups: The application security group specified as destination.\n    destinationPortRange  string    DestinationPortRange: The destination port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    destinationPortRanges  []string    DestinationPortRanges: The destination port ranges.\n    direction  SecurityRulePropertiesFormatDirection     Direction: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/NetworkSecurityGroup resource\n    priority  int    Priority: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n    protocol  SecurityRulePropertiesFormatProtocol     Protocol: Network protocol this rule applies to.\n    sourceAddressPrefix  string    SourceAddressPrefix: The CIDR or source IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used. If this is an ingress rule, specifies where network traffic originates from.\n    sourceAddressPrefixes  []string    SourceAddressPrefixes: The CIDR or source IP ranges.\n    sourceApplicationSecurityGroups  []SubResource     SourceApplicationSecurityGroups: The application security group specified as source.\n    sourcePortRange  string    SourcePortRange: The source port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    sourcePortRanges  []string    SourcePortRanges: The source port ranges.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NetworkSecurityGroupsSecurityRules_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  SecurityRulePropertiesFormatARM     Properties: Properties of the security rule.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NetworkSecurityGroupsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    NetworkSecurityGroups_Spec   (Appears on:NetworkSecurityGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NetworkSecurityGroups_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    OutboundRulePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_OutboundRulesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/OutboundRulePropertiesFormat\n    Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The number of outbound ports to be used for NAT.\n    backendAddressPool  SubResourceARM     BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfigurations  []SubResourceARM     FrontendIPConfigurations: The Frontend IP addresses of the load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection.\n    protocol  OutboundRulePropertiesFormatProtocol     Protocol: The protocol for the outbound rule in load balancer.\n    OutboundRulePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_OutboundRules, OutboundRulePropertiesFormatARM)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    OutboundRulePropertiesFormatStatusProtocol (string alias)  (Appears on:OutboundRulePropertiesFormat_StatusARM, OutboundRule_Status)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    OutboundRulePropertiesFormat_StatusARM   (Appears on:OutboundRule_StatusARM)      Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The number of outbound ports to be used for NAT.\n    backendAddressPool  SubResource_StatusARM     BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    frontendIPConfigurations  []SubResource_StatusARM     FrontendIPConfigurations: The Frontend IP addresses of the load balancer.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection.\n    protocol  OutboundRulePropertiesFormatStatusProtocol     Protocol: The protocol for the outbound rule in load balancer.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the outbound rule resource.\n    OutboundRule_Status   (Appears on:LoadBalancer_Status)      Field Description      allocatedOutboundPorts  int    AllocatedOutboundPorts: The number of outbound ports to be used for NAT.\n    backendAddressPool  SubResource_Status     BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.\n    enableTcpReset  bool    EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    frontendIPConfigurations  []SubResource_Status     FrontendIPConfigurations: The Frontend IP addresses of the load balancer.\n    id  string    Id: Resource ID.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The timeout for the TCP idle connection.\n    name  string    Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.\n    protocol  OutboundRulePropertiesFormatStatusProtocol     Protocol: The protocol for the outbound rule in load balancer.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the outbound rule resource.\n    type  string    Type: Type of the resource.\n    OutboundRule_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.\n    properties  OutboundRulePropertiesFormat_StatusARM     Properties: Properties of load balancer outbound rule.\n    type  string    Type: Type of the resource.\n    PfsGroup_Status (string alias)  (Appears on:IpsecPolicy_Status, IpsecPolicy_StatusARM)      Value Description   \u0026#34;ECP256\u0026#34;\n  \u0026#34;ECP384\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;PFS1\u0026#34;\n  \u0026#34;PFS14\u0026#34;\n  \u0026#34;PFS2\u0026#34;\n  \u0026#34;PFS2048\u0026#34;\n  \u0026#34;PFS24\u0026#34;\n  \u0026#34;PFSMM\u0026#34;\n    PrivateEndpoint_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    PrivateEndpoint_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    PrivateLinkService_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterface_Status_NetworkInterface_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    PrivateLinkService_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfacePropertiesFormat_StatusARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the load balancer.\n    id  string    Id: Resource ID.\n    ProbePropertiesFormatARM   (Appears on:LoadBalancers_Spec_Properties_ProbesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ProbePropertiesFormat\n    Field Description      intervalInSeconds  int    IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.\n    numberOfProbes  int    NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.\n    port  int    Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.\n    protocol  ProbePropertiesFormatProtocol     Protocol: The protocol of the end point. If \u0026lsquo;Tcp\u0026rsquo; is specified, a received ACK is required for the probe to be successful. If \u0026lsquo;Http\u0026rsquo; or \u0026lsquo;Https\u0026rsquo; is specified, a 200 OK response from the specifies URI is required for the probe to be successful.\n    requestPath  string    RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.\n    ProbePropertiesFormatProtocol (string alias)  (Appears on:LoadBalancers_Spec_Properties_Probes, ProbePropertiesFormatARM)      Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n    ProbePropertiesFormatStatusProtocol (string alias)  (Appears on:ProbePropertiesFormat_StatusARM, Probe_Status)      Value Description   \u0026#34;Http\u0026#34;\n  \u0026#34;Https\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n    ProbePropertiesFormat_StatusARM   (Appears on:Probe_StatusARM)      Field Description      intervalInSeconds  int    IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.\n    loadBalancingRules  []SubResource_StatusARM     LoadBalancingRules: The load balancer rules that use this probe.\n    numberOfProbes  int    NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.\n    port  int    Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.\n    protocol  ProbePropertiesFormatStatusProtocol     Protocol: The protocol of the end point. If \u0026lsquo;Tcp\u0026rsquo; is specified, a received ACK is required for the probe to be successful. If \u0026lsquo;Http\u0026rsquo; or \u0026lsquo;Https\u0026rsquo; is specified, a 200 OK response from the specifies URI is required for the probe to be successful.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the probe resource.\n    requestPath  string    RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.\n    Probe_Status   (Appears on:LoadBalancer_Status)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    intervalInSeconds  int    IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.\n    loadBalancingRules  []SubResource_Status     LoadBalancingRules: The load balancer rules that use this probe.\n    name  string    Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.\n    numberOfProbes  int    NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.\n    port  int    Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.\n    protocol  ProbePropertiesFormatStatusProtocol     Protocol: The protocol of the end point. If \u0026lsquo;Tcp\u0026rsquo; is specified, a received ACK is required for the probe to be successful. If \u0026lsquo;Http\u0026rsquo; or \u0026lsquo;Https\u0026rsquo; is specified, a 200 OK response from the specifies URI is required for the probe to be successful.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the probe resource.\n    requestPath  string    RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.\n    type  string    Type: Type of the resource.\n    Probe_StatusARM   (Appears on:LoadBalancerPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.\n    properties  ProbePropertiesFormat_StatusARM     Properties: Properties of load balancer probe.\n    type  string    Type: Type of the resource.\n    ProvisioningState_Status (string alias)  (Appears on:ApplicationGatewayBackendAddressPoolPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, ApplicationGatewayBackendAddressPool_Status_NetworkInterface_SubResourceEmbedded, ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM, ApplicationGatewayIPConfiguration_Status, Delegation_Status, FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, IPConfigurationProfilePropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded, IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM, IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM, IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded, IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded, InboundNatPoolPropertiesFormat_StatusARM, InboundNatPool_Status, LoadBalancerPropertiesFormat_StatusARM, LoadBalancer_Status, LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status, NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM, NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded, NetworkInterfacePropertiesFormat_StatusARM, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, NetworkSecurityGroupPropertiesFormat_StatusARM, NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded, OutboundRulePropertiesFormat_StatusARM, OutboundRule_Status, ProbePropertiesFormat_StatusARM, Probe_Status, PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, ResourceNavigationLinkFormat_StatusARM, ResourceNavigationLink_Status, SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded, ServiceAssociationLinkPropertiesFormat_StatusARM, ServiceAssociationLink_Status, ServiceDelegationPropertiesFormat_StatusARM, ServiceEndpointPropertiesFormat_Status, ServiceEndpointPropertiesFormat_StatusARM, SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfiguration_Status, VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPeering_Status, VirtualNetworkPropertiesFormat_StatusARM, VirtualNetwork_Status, VpnClientRevokedCertificatePropertiesFormat_StatusARM, VpnClientRevokedCertificate_Status, VpnClientRootCertificatePropertiesFormat_StatusARM, VpnClientRootCertificate_Status)      Value Description   \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    PublicIPAddress   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/publicIPAddresses\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  PublicIPAddresses_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    ddosSettings  DdosSettings     DdosSettings: The DDoS protection custom policy associated with the public IP address.\n    dnsSettings  PublicIPAddressDnsSettings     DnsSettings: The FQDN of the DNS record associated with the public IP address.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the public ip address.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipAddress  string    IpAddress: The IP address associated with the public IP address resource.\n    ipTags  []IpTag     IpTags: The list of tags associated with the public IP address.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion     PublicIPAddressVersion: The public IP address version.\n    publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod     PublicIPAllocationMethod: The public IP address allocation method.\n    publicIPPrefix  SubResource     PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated from.\n    sku  PublicIPAddressSku     Sku: The public IP address SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n       status  PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded         PublicIPAddressDnsSettings   (Appears on:PublicIPAddresses_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/PublicIPAddressDnsSettings\n    Field Description      domainNameLabel  string    DomainNameLabel: The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.\n    fqdn  string    Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.\n    reverseFqdn  string    ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.\n    PublicIPAddressDnsSettingsARM   (Appears on:PublicIPAddressPropertiesFormatARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/PublicIPAddressDnsSettings\n    Field Description      domainNameLabel  string    DomainNameLabel: The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.\n    fqdn  string    Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.\n    reverseFqdn  string    ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.\n    PublicIPAddressDnsSettings_Status   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      domainNameLabel  string    DomainNameLabel: The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.\n    fqdn  string    Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.\n    reverseFqdn  string    ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.\n    PublicIPAddressDnsSettings_StatusARM   (Appears on:PublicIPAddressPropertiesFormat_StatusARM)      Field Description      domainNameLabel  string    DomainNameLabel: The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.\n    fqdn  string    Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.\n    reverseFqdn  string    ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.\n    PublicIPAddressPropertiesFormatARM   (Appears on:PublicIPAddresses_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/PublicIPAddressPropertiesFormat\n    Field Description      ddosSettings  DdosSettingsARM     DdosSettings: The DDoS protection custom policy associated with the public IP address.\n    dnsSettings  PublicIPAddressDnsSettingsARM     DnsSettings: The FQDN of the DNS record associated with the public IP address.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipAddress  string    IpAddress: The IP address associated with the public IP address resource.\n    ipTags  []IpTagARM     IpTags: The list of tags associated with the public IP address.\n    publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion     PublicIPAddressVersion: The public IP address version.\n    publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod     PublicIPAllocationMethod: The public IP address allocation method.\n    publicIPPrefix  SubResourceARM     PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated from.\n    PublicIPAddressPropertiesFormatPublicIPAddressVersion (string alias)  (Appears on:PublicIPAddressPropertiesFormatARM, PublicIPAddresses_Spec)      Value Description   \u0026#34;IPv4\u0026#34;\n  \u0026#34;IPv6\u0026#34;\n    PublicIPAddressPropertiesFormatPublicIPAllocationMethod (string alias)  (Appears on:PublicIPAddressPropertiesFormatARM, PublicIPAddresses_Spec)      Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    PublicIPAddressPropertiesFormatStatusMigrationPhase (string alias)  (Appears on:PublicIPAddressPropertiesFormat_StatusARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded)      Value Description   \u0026#34;Abort\u0026#34;\n  \u0026#34;Commit\u0026#34;\n  \u0026#34;Committed\u0026#34;\n  \u0026#34;None\u0026#34;\n  \u0026#34;Prepare\u0026#34;\n    PublicIPAddressPropertiesFormat_StatusARM   (Appears on:PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM)      Field Description      ddosSettings  DdosSettings_StatusARM     DdosSettings: The DDoS protection custom policy associated with the public IP address.\n    dnsSettings  PublicIPAddressDnsSettings_StatusARM     DnsSettings: The FQDN of the DNS record associated with the public IP address.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipAddress  string    IpAddress: The IP address associated with the public IP address resource.\n    ipConfiguration  IPConfiguration_Status_PublicIPAddress_SubResourceEmbeddedARM     IpConfiguration: The IP configuration associated with the public IP address.\n    ipTags  []IpTag_StatusARM     IpTags: The list of tags associated with the public IP address.\n    migrationPhase  PublicIPAddressPropertiesFormatStatusMigrationPhase     MigrationPhase: Migration phase of Public IP Address.\n    natGateway  NatGateway_Status_PublicIPAddress_SubResourceEmbeddedARM     NatGateway: The NatGateway for the Public IP address.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the public IP address resource.\n    publicIPAddressVersion  IPVersion_Status     PublicIPAddressVersion: The public IP address version.\n    publicIPAllocationMethod  IPAllocationMethod_Status     PublicIPAllocationMethod: The public IP address allocation method.\n    publicIPPrefix  SubResource_StatusARM     PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated from.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the public IP address resource.\n    PublicIPAddressSku   (Appears on:PublicIPAddresses_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/PublicIPAddressSku\n    Field Description      name  PublicIPAddressSkuName     Name: Name of a public IP address SKU.\n    tier  PublicIPAddressSkuTier     Tier: Tier of a public IP address SKU.\n    PublicIPAddressSkuARM   (Appears on:PublicIPAddresses_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/PublicIPAddressSku\n    Field Description      name  PublicIPAddressSkuName     Name: Name of a public IP address SKU.\n    tier  PublicIPAddressSkuTier     Tier: Tier of a public IP address SKU.\n    PublicIPAddressSkuName (string alias)  (Appears on:PublicIPAddressSku, PublicIPAddressSkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    PublicIPAddressSkuStatusName (string alias)  (Appears on:PublicIPAddressSku_Status, PublicIPAddressSku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    PublicIPAddressSkuStatusTier (string alias)  (Appears on:PublicIPAddressSku_Status, PublicIPAddressSku_StatusARM)      Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    PublicIPAddressSkuTier (string alias)  (Appears on:PublicIPAddressSku, PublicIPAddressSkuARM)      Value Description   \u0026#34;Global\u0026#34;\n  \u0026#34;Regional\u0026#34;\n    PublicIPAddressSku_Status   (Appears on:PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded, PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      name  PublicIPAddressSkuStatusName     Name: Name of a public IP address SKU.\n    tier  PublicIPAddressSkuStatusTier     Tier: Tier of a public IP address SKU.\n    PublicIPAddressSku_StatusARM   (Appears on:PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM, PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM, PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)      Field Description      name  PublicIPAddressSkuStatusName     Name: Name of a public IP address SKU.\n    tier  PublicIPAddressSkuStatusTier     Tier: Tier of a public IP address SKU.\n    PublicIPAddress_Status_LoadBalancer_SubResourceEmbedded   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_Status     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_StatusARM     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_Status     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_StatusARM     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:PublicIPAddress)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ddosSettings  DdosSettings_Status     DdosSettings: The DDoS protection custom policy associated with the public IP address.\n    dnsSettings  PublicIPAddressDnsSettings_Status     DnsSettings: The FQDN of the DNS record associated with the public IP address.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipAddress  string    IpAddress: The IP address associated with the public IP address resource.\n    ipConfiguration  IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded     IpConfiguration: The IP configuration associated with the public IP address.\n    ipTags  []IpTag_Status     IpTags: The list of tags associated with the public IP address.\n    location  string    Location: Resource location.\n    migrationPhase  PublicIPAddressPropertiesFormatStatusMigrationPhase     MigrationPhase: Migration phase of Public IP Address.\n    name  string    Name: Resource name.\n    natGateway  NatGateway_Status_PublicIPAddress_SubResourceEmbedded     NatGateway: The NatGateway for the Public IP address.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the public IP address resource.\n    publicIPAddressVersion  IPVersion_Status     PublicIPAddressVersion: The public IP address version.\n    publicIPAllocationMethod  IPAllocationMethod_Status     PublicIPAllocationMethod: The public IP address allocation method.\n    publicIPPrefix  SubResource_Status     PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated from.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the public IP address resource.\n    sku  PublicIPAddressSku_Status     Sku: The public IP address SKU.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_PublicIPAddress_SubResourceEmbeddedARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  PublicIPAddressPropertiesFormat_StatusARM     Properties: Public IP address properties.\n    sku  PublicIPAddressSku_StatusARM     Sku: The public IP address SKU.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_Status     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddress_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:IPConfigurationPropertiesFormat_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)      Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the public ip address.\n    id  string    Id: Resource ID.\n    sku  PublicIPAddressSku_StatusARM     Sku: The public IP address SKU.\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddressesSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    PublicIPAddresses_Spec   (Appears on:PublicIPAddress)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    ddosSettings  DdosSettings     DdosSettings: The DDoS protection custom policy associated with the public IP address.\n    dnsSettings  PublicIPAddressDnsSettings     DnsSettings: The FQDN of the DNS record associated with the public IP address.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the public ip address.\n    idleTimeoutInMinutes  int    IdleTimeoutInMinutes: The idle timeout of the public IP address.\n    ipAddress  string    IpAddress: The IP address associated with the public IP address resource.\n    ipTags  []IpTag     IpTags: The list of tags associated with the public IP address.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicIPAddressVersion  PublicIPAddressPropertiesFormatPublicIPAddressVersion     PublicIPAddressVersion: The public IP address version.\n    publicIPAllocationMethod  PublicIPAddressPropertiesFormatPublicIPAllocationMethod     PublicIPAllocationMethod: The public IP address allocation method.\n    publicIPPrefix  SubResource     PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated from.\n    sku  PublicIPAddressSku     Sku: The public IP address SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    PublicIPAddresses_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The extended location of the public ip address.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  PublicIPAddressPropertiesFormatARM     Properties: Public IP address properties.\n    sku  PublicIPAddressSkuARM     Sku: The public IP address SKU.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zones  []string    Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.\n    RadiusServer   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/RadiusServer\n    Field Description      radiusServerAddress  string    RadiusServerAddress: The address of this radius server.\n    radiusServerScore  int    RadiusServerScore: The initial score assigned to this radius server.\n    radiusServerSecret  string    RadiusServerSecret: The secret used for this radius server.\n    RadiusServerARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/RadiusServer\n    Field Description      radiusServerAddress  string    RadiusServerAddress: The address of this radius server.\n    radiusServerScore  int    RadiusServerScore: The initial score assigned to this radius server.\n    radiusServerSecret  string    RadiusServerSecret: The secret used for this radius server.\n    RadiusServer_Status   (Appears on:VpnClientConfiguration_Status)      Field Description      radiusServerAddress  string    RadiusServerAddress: The address of this radius server.\n    radiusServerScore  int    RadiusServerScore: The initial score assigned to this radius server.\n    radiusServerSecret  string    RadiusServerSecret: The secret used for this radius server.\n    RadiusServer_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)      Field Description      radiusServerAddress  string    RadiusServerAddress: The address of this radius server.\n    radiusServerScore  int    RadiusServerScore: The initial score assigned to this radius server.\n    radiusServerSecret  string    RadiusServerSecret: The secret used for this radius server.\n    ResourceNavigationLinkFormat_StatusARM   (Appears on:ResourceNavigationLink_StatusARM)      Field Description      link  string    Link: Link to the external resource.\n    linkedResourceType  string    LinkedResourceType: Resource type of the linked resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the resource navigation link resource.\n    ResourceNavigationLink_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource navigation link identifier.\n    link  string    Link: Link to the external resource.\n    linkedResourceType  string    LinkedResourceType: Resource type of the linked resource.\n    name  string    Name: Name of the resource that is unique within a resource group. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the resource navigation link resource.\n    type  string    Type: Resource type.\n    ResourceNavigationLink_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource navigation link identifier.\n    name  string    Name: Name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  ResourceNavigationLinkFormat_StatusARM     Properties: Resource navigation link properties format.\n    type  string    Type: Resource type.\n    RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    SecurityRuleAccess_Status (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SecurityRuleDirection_Status (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)      Value Description   \u0026#34;Inbound\u0026#34;\n  \u0026#34;Outbound\u0026#34;\n    SecurityRulePropertiesFormatARM   (Appears on:NetworkSecurityGroupsSecurityRules_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/SecurityRulePropertiesFormat\n    Field Description      access  SecurityRulePropertiesFormatAccess     Access: The network traffic is allowed or denied.\n    description  string    Description: A description for this rule. Restricted to 140 chars.\n    destinationAddressPrefix  string    DestinationAddressPrefix: The destination address prefix. CIDR or destination IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used.\n    destinationAddressPrefixes  []string    DestinationAddressPrefixes: The destination address prefixes. CIDR or destination IP ranges.\n    destinationApplicationSecurityGroups  []SubResourceARM     DestinationApplicationSecurityGroups: The application security group specified as destination.\n    destinationPortRange  string    DestinationPortRange: The destination port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    destinationPortRanges  []string    DestinationPortRanges: The destination port ranges.\n    direction  SecurityRulePropertiesFormatDirection     Direction: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.\n    priority  int    Priority: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n    protocol  SecurityRulePropertiesFormatProtocol     Protocol: Network protocol this rule applies to.\n    sourceAddressPrefix  string    SourceAddressPrefix: The CIDR or source IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used. If this is an ingress rule, specifies where network traffic originates from.\n    sourceAddressPrefixes  []string    SourceAddressPrefixes: The CIDR or source IP ranges.\n    sourceApplicationSecurityGroups  []SubResourceARM     SourceApplicationSecurityGroups: The application security group specified as source.\n    sourcePortRange  string    SourcePortRange: The source port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    sourcePortRanges  []string    SourcePortRanges: The source port ranges.\n    SecurityRulePropertiesFormatAccess (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SecurityRulePropertiesFormatDirection (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)      Value Description   \u0026#34;Inbound\u0026#34;\n  \u0026#34;Outbound\u0026#34;\n    SecurityRulePropertiesFormatProtocol (string alias)  (Appears on:NetworkSecurityGroupsSecurityRules_Spec, SecurityRulePropertiesFormatARM)      Value Description   \u0026#34;Ah\u0026#34;\n  \u0026#34;Esp\u0026#34;\n  \u0026#34;Icmp\u0026#34;\n  \u0026#34;*\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    SecurityRulePropertiesFormatStatusProtocol (string alias)  (Appears on:SecurityRulePropertiesFormat_StatusARM, SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded)      Value Description   \u0026#34;Ah\u0026#34;\n  \u0026#34;Esp\u0026#34;\n  \u0026#34;Icmp\u0026#34;\n  \u0026#34;*\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    SecurityRulePropertiesFormat_StatusARM   (Appears on:SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM)      Field Description      access  SecurityRuleAccess_Status     Access: The network traffic is allowed or denied.\n    description  string    Description: A description for this rule. Restricted to 140 chars.\n    destinationAddressPrefix  string    DestinationAddressPrefix: The destination address prefix. CIDR or destination IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used.\n    destinationAddressPrefixes  []string    DestinationAddressPrefixes: The destination address prefixes. CIDR or destination IP ranges.\n    destinationApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM     DestinationApplicationSecurityGroups: The application security group specified as destination.\n    destinationPortRange  string    DestinationPortRange: The destination port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    destinationPortRanges  []string    DestinationPortRanges: The destination port ranges.\n    direction  SecurityRuleDirection_Status     Direction: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.\n    priority  int    Priority: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n    protocol  SecurityRulePropertiesFormatStatusProtocol     Protocol: Network protocol this rule applies to.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the security rule resource.\n    sourceAddressPrefix  string    SourceAddressPrefix: The CIDR or source IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used. If this is an ingress rule, specifies where network traffic originates from.\n    sourceAddressPrefixes  []string    SourceAddressPrefixes: The CIDR or source IP ranges.\n    sourceApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM     SourceApplicationSecurityGroups: The application security group specified as source.\n    sourcePortRange  string    SourcePortRange: The source port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    sourcePortRanges  []string    SourcePortRanges: The source port ranges.\n    SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded   (Appears on:NetworkSecurityGroupsSecurityRule)      Field Description      access  SecurityRuleAccess_Status     Access: The network traffic is allowed or denied.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    description  string    Description: A description for this rule. Restricted to 140 chars.\n    destinationAddressPrefix  string    DestinationAddressPrefix: The destination address prefix. CIDR or destination IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used.\n    destinationAddressPrefixes  []string    DestinationAddressPrefixes: The destination address prefixes. CIDR or destination IP ranges.\n    destinationApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded     DestinationApplicationSecurityGroups: The application security group specified as destination.\n    destinationPortRange  string    DestinationPortRange: The destination port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    destinationPortRanges  []string    DestinationPortRanges: The destination port ranges.\n    direction  SecurityRuleDirection_Status     Direction: The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    priority  int    Priority: The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n    protocol  SecurityRulePropertiesFormatStatusProtocol     Protocol: Network protocol this rule applies to.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the security rule resource.\n    sourceAddressPrefix  string    SourceAddressPrefix: The CIDR or source IP range. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all source IPs. Default tags such as \u0026lsquo;VirtualNetwork\u0026rsquo;, \u0026lsquo;AzureLoadBalancer\u0026rsquo; and \u0026lsquo;Internet\u0026rsquo; can also be used. If this is an ingress rule, specifies where network traffic originates from.\n    sourceAddressPrefixes  []string    SourceAddressPrefixes: The CIDR or source IP ranges.\n    sourceApplicationSecurityGroups  []ApplicationSecurityGroup_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbedded     SourceApplicationSecurityGroups: The application security group specified as source.\n    sourcePortRange  string    SourcePortRange: The source port or range. Integer or range between 0 and 65535. Asterisk \u0026lsquo;*\u0026rsquo; can also be used to match all ports.\n    sourcePortRanges  []string    SourcePortRanges: The source port ranges.\n    type  string    Type: The type of the resource.\n    SecurityRule_Status_NetworkSecurityGroupsSecurityRule_SubResourceEmbeddedARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  SecurityRulePropertiesFormat_StatusARM     Properties: Properties of the security rule.\n    type  string    Type: The type of the resource.\n    ServiceAssociationLinkPropertiesFormat_StatusARM   (Appears on:ServiceAssociationLink_StatusARM)      Field Description      allowDelete  bool    AllowDelete: If true, the resource can be deleted.\n    link  string    Link: Link to the external resource.\n    linkedResourceType  string    LinkedResourceType: Resource type of the linked resource.\n    locations  []string    Locations: A list of locations.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service association link resource.\n    ServiceAssociationLink_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      allowDelete  bool    AllowDelete: If true, the resource can be deleted.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    link  string    Link: Link to the external resource.\n    linkedResourceType  string    LinkedResourceType: Resource type of the linked resource.\n    locations  []string    Locations: A list of locations.\n    name  string    Name: Name of the resource that is unique within a resource group. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service association link resource.\n    type  string    Type: Resource type.\n    ServiceAssociationLink_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: Name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  ServiceAssociationLinkPropertiesFormat_StatusARM     Properties: Resource navigation link properties format.\n    type  string    Type: Resource type.\n    ServiceDelegationPropertiesFormatARM   (Appears on:VirtualNetworksSubnets_Spec_Properties_DelegationsARM, VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ServiceDelegationPropertiesFormat\n    Field Description      serviceName  string    ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).\n    ServiceDelegationPropertiesFormat_StatusARM   (Appears on:Delegation_StatusARM)      Field Description      actions  []string    Actions: The actions permitted to the service upon delegation.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service delegation resource.\n    serviceName  string    ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).\n    ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    kind  string    Kind: Kind of service endpoint policy. This is metadata used for the Azure portal experience.\n    ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    kind  string    Kind: Kind of service endpoint policy. This is metadata used for the Azure portal experience.\n    ServiceEndpointPropertiesFormat   (Appears on:VirtualNetworksSubnets_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ServiceEndpointPropertiesFormat\n    Field Description      locations  []string    Locations: A list of locations.\n    service  string    Service: The type of the endpoint service.\n    ServiceEndpointPropertiesFormatARM   (Appears on:VirtualNetworksSubnets_Spec_PropertiesARM, VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ServiceEndpointPropertiesFormat\n    Field Description      locations  []string    Locations: A list of locations.\n    service  string    Service: The type of the endpoint service.\n    ServiceEndpointPropertiesFormat_Status   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Field Description      locations  []string    Locations: A list of locations.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service endpoint resource.\n    service  string    Service: The type of the endpoint service.\n    ServiceEndpointPropertiesFormat_StatusARM   (Appears on:SubnetPropertiesFormat_StatusARM)      Field Description      locations  []string    Locations: A list of locations.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the service endpoint resource.\n    service  string    Service: The type of the endpoint service.\n    SubResource   (Appears on:DdosSettings, LoadBalancers_Spec_Properties_BackendAddressPools_Properties_LoadBalancerBackendAddresses, LoadBalancers_Spec_Properties_FrontendIPConfigurations, LoadBalancers_Spec_Properties_InboundNatPools, LoadBalancers_Spec_Properties_LoadBalancingRules, LoadBalancers_Spec_Properties_OutboundRules, NetworkInterfaces_Spec, NetworkInterfaces_Spec_Properties_IpConfigurations, NetworkSecurityGroupsSecurityRules_Spec, PublicIPAddresses_Spec, VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_Properties_IpConfigurations, VirtualNetworksSubnets_Spec, VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/SubResource\n    Field Description      reference  genruntime.ResourceReference     Reference: Resource ID.\n    SubResourceARM   (Appears on:DdosSettingsARM, FrontendIPConfigurationPropertiesFormatARM, InboundNatPoolPropertiesFormatARM, LoadBalancerBackendAddressPropertiesFormatARM, LoadBalancingRulePropertiesFormatARM, NetworkInterfaceIPConfigurationPropertiesFormatARM, NetworkInterfaces_Spec_PropertiesARM, OutboundRulePropertiesFormatARM, PublicIPAddressPropertiesFormatARM, SecurityRulePropertiesFormatARM, VirtualNetworkGatewayIPConfigurationPropertiesFormatARM, VirtualNetworkGateways_Spec_PropertiesARM, VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworksSubnets_Spec_PropertiesARM, VirtualNetworks_Spec_PropertiesARM, VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/SubResource\n    Field Description      id  string        SubResource_Status   (Appears on:ApplicationGatewayIPConfiguration_Status, DdosSettings_Status, FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded, InboundNatPool_Status, LoadBalancingRule_Status, NetworkInterface_Status_NetworkInterface_SubResourceEmbedded, OutboundRule_Status, Probe_Status, PublicIPAddress_Status_PublicIPAddress_SubResourceEmbedded, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded, VirtualNetworkGatewayIPConfiguration_Status, VirtualNetworkGateway_Status, VirtualNetworkPeering_Status, VirtualNetwork_Status)      Field Description      id  string    Id: Resource ID.\n    SubResource_StatusARM   (Appears on:ApplicationGatewayIPConfigurationPropertiesFormat_StatusARM, DdosSettings_StatusARM, FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM, InboundNatPoolPropertiesFormat_StatusARM, LoadBalancingRulePropertiesFormat_StatusARM, NetworkInterfacePropertiesFormat_StatusARM, OutboundRulePropertiesFormat_StatusARM, ProbePropertiesFormat_StatusARM, PublicIPAddressPropertiesFormat_StatusARM, SubnetPropertiesFormat_StatusARM, VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM, VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies (string alias)  (Appears on:SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies (string alias)  (Appears on:SubnetPropertiesFormat_StatusARM, Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    SubnetPropertiesFormat_StatusARM   (Appears on:Subnet_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM)      Field Description      addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    applicationGatewayIpConfigurations  []ApplicationGatewayIPConfiguration_StatusARM     ApplicationGatewayIpConfigurations: Application gateway IP configurations of virtual network resource.\n    delegations  []Delegation_StatusARM     Delegations: An array of references to the delegations on the subnet.\n    ipAllocations  []SubResource_StatusARM     IpAllocations: Array of IpAllocation which reference this subnet.\n    ipConfigurationProfiles  []IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     IpConfigurationProfiles: Array of IP configuration profiles which reference this subnet.\n    ipConfigurations  []IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     IpConfigurations: An array of references to the network interface IP configurations using subnet.\n    natGateway  SubResource_StatusARM     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    privateEndpointNetworkPolicies  SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies     PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateEndpoints  []PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     PrivateEndpoints: An array of references to private endpoints.\n    privateLinkServiceNetworkPolicies  SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies     PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the subnet resource.\n    purpose  string    Purpose: A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.\n    resourceNavigationLinks  []ResourceNavigationLink_StatusARM     ResourceNavigationLinks: An array of references to the external resources using subnet.\n    routeTable  RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     RouteTable: The reference to the RouteTable resource.\n    serviceAssociationLinks  []ServiceAssociationLink_StatusARM     ServiceAssociationLinks: An array of references to services injecting into this subnet.\n    serviceEndpointPolicies  []ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormat_StatusARM     ServiceEndpoints: An array of service endpoints.\n    Subnet_Status_LoadBalancer_SubResourceEmbedded   (Appears on:FrontendIPConfiguration_Status_LoadBalancer_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_LoadBalancer_SubResourceEmbeddedARM   (Appears on:FrontendIPConfigurationPropertiesFormat_Status_LoadBalancer_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded   (Appears on:NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_NetworkSecurityGroup_SubResourceEmbeddedARM   (Appears on:NetworkSecurityGroupPropertiesFormat_StatusARM)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_PublicIPAddress_SubResourceEmbedded   (Appears on:IPConfiguration_Status_PublicIPAddress_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_PublicIPAddress_SubResourceEmbeddedARM   (Appears on:IPConfigurationPropertiesFormat_Status_PublicIPAddress_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded   (Appears on:VirtualNetworksSubnet)      Field Description      addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    applicationGatewayIpConfigurations  []ApplicationGatewayIPConfiguration_Status     ApplicationGatewayIpConfigurations: Application gateway IP configurations of virtual network resource.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    delegations  []Delegation_Status     Delegations: An array of references to the delegations on the subnet.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    ipAllocations  []SubResource_Status     IpAllocations: Array of IpAllocation which reference this subnet.\n    ipConfigurationProfiles  []IPConfigurationProfile_Status_VirtualNetworksSubnet_SubResourceEmbedded     IpConfigurationProfiles: Array of IP configuration profiles which reference this subnet.\n    ipConfigurations  []IPConfiguration_Status_VirtualNetworksSubnet_SubResourceEmbedded     IpConfigurations: An array of references to the network interface IP configurations using subnet.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    natGateway  SubResource_Status     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  NetworkSecurityGroup_Status_VirtualNetworksSubnet_SubResourceEmbedded     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    privateEndpointNetworkPolicies  SubnetPropertiesFormatStatusPrivateEndpointNetworkPolicies     PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateEndpoints  []PrivateEndpoint_Status_VirtualNetworksSubnet_SubResourceEmbedded     PrivateEndpoints: An array of references to private endpoints.\n    privateLinkServiceNetworkPolicies  SubnetPropertiesFormatStatusPrivateLinkServiceNetworkPolicies     PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the subnet resource.\n    purpose  string    Purpose: A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.\n    resourceNavigationLinks  []ResourceNavigationLink_Status     ResourceNavigationLinks: An array of references to the external resources using subnet.\n    routeTable  RouteTable_Status_VirtualNetworksSubnet_SubResourceEmbedded     RouteTable: The reference to the RouteTable resource.\n    serviceAssociationLinks  []ServiceAssociationLink_Status     ServiceAssociationLinks: An array of references to services injecting into this subnet.\n    serviceEndpointPolicies  []ServiceEndpointPolicy_Status_VirtualNetworksSubnet_SubResourceEmbedded     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormat_Status     ServiceEndpoints: An array of service endpoints.\n    type  string    Type: Resource type.\n    Subnet_Status_VirtualNetworksSubnet_SubResourceEmbeddedARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  SubnetPropertiesFormat_StatusARM     Properties: Properties of the subnet.\n    type  string    Type: Resource type.\n    TransportProtocol_Status (string alias)  (Appears on:InboundNatPoolPropertiesFormat_StatusARM, InboundNatPool_Status, LoadBalancingRulePropertiesFormat_StatusARM, LoadBalancingRule_Status)      Value Description   \u0026#34;All\u0026#34;\n  \u0026#34;Tcp\u0026#34;\n  \u0026#34;Udp\u0026#34;\n    VirtualNetwork   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/virtualNetworks\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworks_Spec          addressSpace  AddressSpace     AddressSpace: The AddressSpace that contains an array of IP address ranges that can be used by subnets.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpCommunities  VirtualNetworkBgpCommunities     BgpCommunities: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.\n    ddosProtectionPlan  SubResource     DdosProtectionPlan: The DDoS protection plan associated with the virtual network.\n    dhcpOptions  DhcpOptions     DhcpOptions: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.\n    enableDdosProtection  bool    EnableDdosProtection: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.\n    enableVmProtection  bool    EnableVmProtection: Indicates if VM protection is enabled for all the subnets in the virtual network.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the virtual network.\n    ipAllocations  []SubResource     IpAllocations: Array of IpAllocation which reference this VNET.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  VirtualNetwork_Status         VirtualNetworkBgpCommunities   (Appears on:VirtualNetworksVirtualNetworkPeerings_Spec, VirtualNetworks_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkBgpCommunities\n    Field Description      virtualNetworkCommunity  string    VirtualNetworkCommunity: The BGP community associated with the virtual network.\n    VirtualNetworkBgpCommunitiesARM   (Appears on:VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworks_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkBgpCommunities\n    Field Description      virtualNetworkCommunity  string    VirtualNetworkCommunity: The BGP community associated with the virtual network.\n    VirtualNetworkBgpCommunities_Status   (Appears on:VirtualNetworkPeering_Status, VirtualNetwork_Status)      Field Description      regionalCommunity  string    RegionalCommunity: The BGP community associated with the region of the virtual network.\n    virtualNetworkCommunity  string    VirtualNetworkCommunity: The BGP community associated with the virtual network.\n    VirtualNetworkBgpCommunities_StatusARM   (Appears on:VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPropertiesFormat_StatusARM)      Field Description      regionalCommunity  string    RegionalCommunity: The BGP community associated with the region of the virtual network.\n    virtualNetworkCommunity  string    VirtualNetworkCommunity: The BGP community associated with the virtual network.\n    VirtualNetworkGateway   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/virtualNetworkGateways\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworkGateways_Spec          activeActive  bool    ActiveActive: ActiveActive flag.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpSettings  BgpSettings     BgpSettings: Virtual network gateway\u0026rsquo;s BGP speaker settings.\n    customRoutes  AddressSpace     CustomRoutes: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.\n    enableBgp  bool    EnableBgp: Whether BGP is enabled for this virtual network gateway or not.\n    enableDnsForwarding  bool    EnableDnsForwarding: Whether dns forwarding is enabled or not.\n    enablePrivateIpAddress  bool    EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway for connections or not.\n    gatewayDefaultSite  SubResource     GatewayDefaultSite: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.\n    gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType     GatewayType: The type of this virtual network gateway.\n    ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurations     IpConfigurations: IP configurations for virtual network gateway.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  VirtualNetworkGatewaySku     Sku: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    vNetExtendedLocationResourceReference  genruntime.ResourceReference     VNetExtendedLocationResourceReference: MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.\n    virtualNetworkExtendedLocation  ExtendedLocation     VirtualNetworkExtendedLocation: The extended location of type local virtual network gateway.\n    vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration     VpnClientConfiguration: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.\n    vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration     VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.\n    vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType     VpnType: The type of this virtual network gateway.\n       status  VirtualNetworkGateway_Status         VirtualNetworkGatewayIPConfigurationPropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat\n    Field Description      privateIPAllocationMethod  VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The private IP address allocation method.\n    publicIPAddress  SubResourceARM     PublicIPAddress: The reference to the public IP resource.\n    subnet  SubResourceARM     Subnet: The reference to the subnet resource.\n    VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod (string alias)  (Appears on:VirtualNetworkGatewayIPConfigurationPropertiesFormatARM, VirtualNetworkGateways_Spec_Properties_IpConfigurations)      Value Description   \u0026#34;Dynamic\u0026#34;\n  \u0026#34;Static\u0026#34;\n    VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM   (Appears on:VirtualNetworkGatewayIPConfiguration_StatusARM)      Field Description      privateIPAddress  string    PrivateIPAddress: Private IP Address for this gateway.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network gateway IP configuration resource.\n    publicIPAddress  SubResource_StatusARM     PublicIPAddress: The reference to the public IP resource.\n    subnet  SubResource_StatusARM     Subnet: The reference to the subnet resource.\n    VirtualNetworkGatewayIPConfiguration_Status   (Appears on:VirtualNetworkGateway_Status)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    privateIPAddress  string    PrivateIPAddress: Private IP Address for this gateway.\n    privateIPAllocationMethod  IPAllocationMethod_Status     PrivateIPAllocationMethod: The private IP address allocation method.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network gateway IP configuration resource.\n    publicIPAddress  SubResource_Status     PublicIPAddress: The reference to the public IP resource.\n    subnet  SubResource_Status     Subnet: The reference to the subnet resource.\n    VirtualNetworkGatewayIPConfiguration_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VirtualNetworkGatewayIPConfigurationPropertiesFormat_StatusARM     Properties: Properties of the virtual network gateway ip configuration.\n    VirtualNetworkGatewayPropertiesFormatStatusGatewayType (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)      Value Description   \u0026#34;ExpressRoute\u0026#34;\n  \u0026#34;LocalGateway\u0026#34;\n  \u0026#34;Vpn\u0026#34;\n    VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)      Value Description   \u0026#34;Generation1\u0026#34;\n  \u0026#34;Generation2\u0026#34;\n  \u0026#34;None\u0026#34;\n    VirtualNetworkGatewayPropertiesFormatStatusVpnType (string alias)  (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM, VirtualNetworkGateway_Status)      Value Description   \u0026#34;PolicyBased\u0026#34;\n  \u0026#34;RouteBased\u0026#34;\n    VirtualNetworkGatewayPropertiesFormat_StatusARM   (Appears on:VirtualNetworkGateway_StatusARM)      Field Description      activeActive  bool    ActiveActive: ActiveActive flag.\n    bgpSettings  BgpSettings_StatusARM     BgpSettings: Virtual network gateway\u0026rsquo;s BGP speaker settings.\n    customRoutes  AddressSpace_StatusARM     CustomRoutes: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.\n    enableBgp  bool    EnableBgp: Whether BGP is enabled for this virtual network gateway or not.\n    enableDnsForwarding  bool    EnableDnsForwarding: Whether dns forwarding is enabled or not.\n    enablePrivateIpAddress  bool    EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway for connections or not.\n    gatewayDefaultSite  SubResource_StatusARM     GatewayDefaultSite: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.\n    gatewayType  VirtualNetworkGatewayPropertiesFormatStatusGatewayType     GatewayType: The type of this virtual network gateway.\n    inboundDnsForwardingEndpoint  string    InboundDnsForwardingEndpoint: The IP address allocated by the gateway to which dns requests can be sent.\n    ipConfigurations  []VirtualNetworkGatewayIPConfiguration_StatusARM     IpConfigurations: IP configurations for virtual network gateway.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network gateway resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the virtual network gateway resource.\n    sku  VirtualNetworkGatewaySku_StatusARM     Sku: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.\n    vNetExtendedLocationResourceId  string    VNetExtendedLocationResourceId: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.\n    vpnClientConfiguration  VpnClientConfiguration_StatusARM     VpnClientConfiguration: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.\n    vpnGatewayGeneration  VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration     VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.\n    vpnType  VirtualNetworkGatewayPropertiesFormatStatusVpnType     VpnType: The type of this virtual network gateway.\n    VirtualNetworkGatewaySku   (Appears on:VirtualNetworkGateways_Spec)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkGatewaySku\n    Field Description      name  VirtualNetworkGatewaySkuName     Name: Gateway SKU name.\n    tier  VirtualNetworkGatewaySkuTier     Tier: Gateway SKU tier.\n    VirtualNetworkGatewaySkuARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkGatewaySku\n    Field Description      name  VirtualNetworkGatewaySkuName     Name: Gateway SKU name.\n    tier  VirtualNetworkGatewaySkuTier     Tier: Gateway SKU tier.\n    VirtualNetworkGatewaySkuName (string alias)  (Appears on:VirtualNetworkGatewaySku, VirtualNetworkGatewaySkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuStatusName (string alias)  (Appears on:VirtualNetworkGatewaySku_Status, VirtualNetworkGatewaySku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuStatusTier (string alias)  (Appears on:VirtualNetworkGatewaySku_Status, VirtualNetworkGatewaySku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySkuTier (string alias)  (Appears on:VirtualNetworkGatewaySku, VirtualNetworkGatewaySkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;ErGw1AZ\u0026#34;\n  \u0026#34;ErGw2AZ\u0026#34;\n  \u0026#34;ErGw3AZ\u0026#34;\n  \u0026#34;HighPerformance\u0026#34;\n  \u0026#34;Standard\u0026#34;\n  \u0026#34;UltraPerformance\u0026#34;\n  \u0026#34;VpnGw1\u0026#34;\n  \u0026#34;VpnGw1AZ\u0026#34;\n  \u0026#34;VpnGw2\u0026#34;\n  \u0026#34;VpnGw2AZ\u0026#34;\n  \u0026#34;VpnGw3\u0026#34;\n  \u0026#34;VpnGw3AZ\u0026#34;\n  \u0026#34;VpnGw4\u0026#34;\n  \u0026#34;VpnGw4AZ\u0026#34;\n  \u0026#34;VpnGw5\u0026#34;\n  \u0026#34;VpnGw5AZ\u0026#34;\n    VirtualNetworkGatewaySku_Status   (Appears on:VirtualNetworkGateway_Status)      Field Description      capacity  int    Capacity: The capacity.\n    name  VirtualNetworkGatewaySkuStatusName     Name: Gateway SKU name.\n    tier  VirtualNetworkGatewaySkuStatusTier     Tier: Gateway SKU tier.\n    VirtualNetworkGatewaySku_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)      Field Description      capacity  int    Capacity: The capacity.\n    name  VirtualNetworkGatewaySkuStatusName     Name: Gateway SKU name.\n    tier  VirtualNetworkGatewaySkuStatusTier     Tier: Gateway SKU tier.\n    VirtualNetworkGateway_Status   (Appears on:VirtualNetworkGateway)      Field Description      activeActive  bool    ActiveActive: ActiveActive flag.\n    bgpSettings  BgpSettings_Status     BgpSettings: Virtual network gateway\u0026rsquo;s BGP speaker settings.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    customRoutes  AddressSpace_Status     CustomRoutes: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.\n    enableBgp  bool    EnableBgp: Whether BGP is enabled for this virtual network gateway or not.\n    enableDnsForwarding  bool    EnableDnsForwarding: Whether dns forwarding is enabled or not.\n    enablePrivateIpAddress  bool    EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway for connections or not.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of type local virtual network gateway.\n    gatewayDefaultSite  SubResource_Status     GatewayDefaultSite: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.\n    gatewayType  VirtualNetworkGatewayPropertiesFormatStatusGatewayType     GatewayType: The type of this virtual network gateway.\n    id  string    Id: Resource ID.\n    inboundDnsForwardingEndpoint  string    InboundDnsForwardingEndpoint: The IP address allocated by the gateway to which dns requests can be sent.\n    ipConfigurations  []VirtualNetworkGatewayIPConfiguration_Status     IpConfigurations: IP configurations for virtual network gateway.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network gateway resource.\n    resourceGuid  string    ResourceGuid: The resource GUID property of the virtual network gateway resource.\n    sku  VirtualNetworkGatewaySku_Status     Sku: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    vNetExtendedLocationResourceId  string    VNetExtendedLocationResourceId: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.\n    vpnClientConfiguration  VpnClientConfiguration_Status     VpnClientConfiguration: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.\n    vpnGatewayGeneration  VirtualNetworkGatewayPropertiesFormatStatusVpnGatewayGeneration     VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.\n    vpnType  VirtualNetworkGatewayPropertiesFormatStatusVpnType     VpnType: The type of this virtual network gateway.\n    VirtualNetworkGateway_StatusARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of type local virtual network gateway.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  VirtualNetworkGatewayPropertiesFormat_StatusARM     Properties: Properties of the virtual network gateway.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    VirtualNetworkGatewaysSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesGatewayType (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)      Value Description   \u0026#34;ExpressRoute\u0026#34;\n  \u0026#34;HyperNet\u0026#34;\n  \u0026#34;LocalGateway\u0026#34;\n  \u0026#34;Vpn\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes (string alias)  (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)      Value Description   \u0026#34;AAD\u0026#34;\n  \u0026#34;Certificate\u0026#34;\n  \u0026#34;Radius\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols (string alias)  (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration, VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)      Value Description   \u0026#34;IkeV2\u0026#34;\n  \u0026#34;OpenVPN\u0026#34;\n  \u0026#34;SSTP\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)      Value Description   \u0026#34;Generation1\u0026#34;\n  \u0026#34;Generation2\u0026#34;\n  \u0026#34;None\u0026#34;\n    VirtualNetworkGatewaysSpecPropertiesVpnType (string alias)  (Appears on:VirtualNetworkGateways_Spec, VirtualNetworkGateways_Spec_PropertiesARM)      Value Description   \u0026#34;PolicyBased\u0026#34;\n  \u0026#34;RouteBased\u0026#34;\n    VirtualNetworkGateways_Spec   (Appears on:VirtualNetworkGateway)      Field Description      activeActive  bool    ActiveActive: ActiveActive flag.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpSettings  BgpSettings     BgpSettings: Virtual network gateway\u0026rsquo;s BGP speaker settings.\n    customRoutes  AddressSpace     CustomRoutes: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.\n    enableBgp  bool    EnableBgp: Whether BGP is enabled for this virtual network gateway or not.\n    enableDnsForwarding  bool    EnableDnsForwarding: Whether dns forwarding is enabled or not.\n    enablePrivateIpAddress  bool    EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway for connections or not.\n    gatewayDefaultSite  SubResource     GatewayDefaultSite: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.\n    gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType     GatewayType: The type of this virtual network gateway.\n    ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurations     IpConfigurations: IP configurations for virtual network gateway.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  VirtualNetworkGatewaySku     Sku: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    vNetExtendedLocationResourceReference  genruntime.ResourceReference     VNetExtendedLocationResourceReference: MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.\n    virtualNetworkExtendedLocation  ExtendedLocation     VirtualNetworkExtendedLocation: The extended location of type local virtual network gateway.\n    vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration     VpnClientConfiguration: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.\n    vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration     VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.\n    vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType     VpnType: The type of this virtual network gateway.\n    VirtualNetworkGateways_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  VirtualNetworkGateways_Spec_PropertiesARM     Properties: Properties of the virtual network gateway.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    VirtualNetworkGateways_Spec_PropertiesARM   (Appears on:VirtualNetworkGateways_SpecARM)      Field Description      activeActive  bool    ActiveActive: ActiveActive flag.\n    bgpSettings  BgpSettingsARM     BgpSettings: Virtual network gateway\u0026rsquo;s BGP speaker settings.\n    customRoutes  AddressSpaceARM     CustomRoutes: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.\n    enableBgp  bool    EnableBgp: Whether BGP is enabled for this virtual network gateway or not.\n    enableDnsForwarding  bool    EnableDnsForwarding: Whether dns forwarding is enabled or not.\n    enablePrivateIpAddress  bool    EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway for connections or not.\n    gatewayDefaultSite  SubResourceARM     GatewayDefaultSite: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.\n    gatewayType  VirtualNetworkGatewaysSpecPropertiesGatewayType     GatewayType: The type of this virtual network gateway.\n    ipConfigurations  []VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM     IpConfigurations: IP configurations for virtual network gateway.\n    sku  VirtualNetworkGatewaySkuARM     Sku: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.\n    vNetExtendedLocationResourceId  string        virtualNetworkExtendedLocation  ExtendedLocationARM     VirtualNetworkExtendedLocation: The extended location of type local virtual network gateway.\n    vpnClientConfiguration  VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM     VpnClientConfiguration: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.\n    vpnGatewayGeneration  VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration     VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.\n    vpnType  VirtualNetworkGatewaysSpecPropertiesVpnType     VpnType: The type of this virtual network gateway.\n    VirtualNetworkGateways_Spec_Properties_IpConfigurations   (Appears on:VirtualNetworkGateways_Spec)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    privateIPAllocationMethod  VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod     PrivateIPAllocationMethod: The private IP address allocation method.\n    publicIPAddress  SubResource     PublicIPAddress: The reference to the public IP resource.\n    subnet  SubResource     Subnet: The reference to the subnet resource.\n    VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VirtualNetworkGatewayIPConfigurationPropertiesFormatARM     Properties: Properties of the virtual network gateway ip configuration.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration   (Appears on:VirtualNetworkGateways_Spec)      Field Description      aadAudience  string    AadAudience: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadIssuer  string    AadIssuer: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadTenant  string    AadTenant: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    radiusServerAddress  string    RadiusServerAddress: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServerSecret  string    RadiusServerSecret: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServers  []RadiusServer     RadiusServers: The radiusServers property for multiple radius server configuration.\n    vpnAuthenticationTypes  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes     VpnAuthenticationTypes: VPN authentication types for the virtual network gateway..\n    vpnClientAddressPool  AddressSpace     VpnClientAddressPool: The reference to the address space resource which represents Address space for P2S VpnClient.\n    vpnClientIpsecPolicies  []IpsecPolicy     VpnClientIpsecPolicies: VpnClientIpsecPolicies for virtual network gateway P2S client.\n    vpnClientProtocols  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols     VpnClientProtocols: VpnClientProtocols for Virtual network gateway.\n    vpnClientRevokedCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates     VpnClientRevokedCertificates: VpnClientRevokedCertificate for Virtual network gateway.\n    vpnClientRootCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates     VpnClientRootCertificates: VpnClientRootCertificate for virtual network gateway.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM   (Appears on:VirtualNetworkGateways_Spec_PropertiesARM)      Field Description      aadAudience  string    AadAudience: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadIssuer  string    AadIssuer: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadTenant  string    AadTenant: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    radiusServerAddress  string    RadiusServerAddress: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServerSecret  string    RadiusServerSecret: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServers  []RadiusServerARM     RadiusServers: The radiusServers property for multiple radius server configuration.\n    vpnAuthenticationTypes  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes     VpnAuthenticationTypes: VPN authentication types for the virtual network gateway..\n    vpnClientAddressPool  AddressSpaceARM     VpnClientAddressPool: The reference to the address space resource which represents Address space for P2S VpnClient.\n    vpnClientIpsecPolicies  []IpsecPolicyARM     VpnClientIpsecPolicies: VpnClientIpsecPolicies for virtual network gateway P2S client.\n    vpnClientProtocols  []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols     VpnClientProtocols: VpnClientProtocols for Virtual network gateway.\n    vpnClientRevokedCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM     VpnClientRevokedCertificates: VpnClientRevokedCertificate for Virtual network gateway.\n    vpnClientRootCertificates  []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM     VpnClientRootCertificates: VpnClientRootCertificate for virtual network gateway.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificates   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    thumbprint  string    Thumbprint: The revoked VPN client certificate thumbprint.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VpnClientRevokedCertificatePropertiesFormatARM     Properties: Properties of the vpn client revoked certificate.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificates   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    publicCertData  string    PublicCertData: The certificate public data.\n    VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VpnClientRootCertificatePropertiesFormatARM     Properties: Properties of the vpn client root certificate.\n    VirtualNetworkPeeringPropertiesFormatARM   (Appears on:VirtualNetworksVirtualNetworkPeerings_SpecARM, VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkPeeringPropertiesFormat\n    Field Description      allowForwardedTraffic  bool    AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.\n    allowGatewayTransit  bool    AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.\n    allowVirtualNetworkAccess  bool    AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.\n    peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState     PeeringState: The status of the virtual network peering.\n    remoteAddressSpace  AddressSpaceARM     RemoteAddressSpace: The reference to the remote virtual network address space.\n    remoteBgpCommunities  VirtualNetworkBgpCommunitiesARM     RemoteBgpCommunities: The reference to the remote virtual network\u0026rsquo;s Bgp Communities.\n    remoteVirtualNetwork  SubResourceARM     RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).\n    useRemoteGateways  bool    UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.\n    VirtualNetworkPeeringPropertiesFormatPeeringState (string alias)  (Appears on:VirtualNetworkPeeringPropertiesFormatARM, VirtualNetworksVirtualNetworkPeerings_Spec)      Value Description   \u0026#34;Connected\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Initiated\u0026#34;\n    VirtualNetworkPeeringPropertiesFormatStatusPeeringState (string alias)  (Appears on:VirtualNetworkPeeringPropertiesFormat_StatusARM, VirtualNetworkPeering_Status)      Value Description   \u0026#34;Connected\u0026#34;\n  \u0026#34;Disconnected\u0026#34;\n  \u0026#34;Initiated\u0026#34;\n    VirtualNetworkPeeringPropertiesFormat_StatusARM   (Appears on:VirtualNetworkPeering_StatusARM)      Field Description      allowForwardedTraffic  bool    AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.\n    allowGatewayTransit  bool    AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.\n    allowVirtualNetworkAccess  bool    AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.\n    doNotVerifyRemoteGateways  bool    DoNotVerifyRemoteGateways: If we need to verify the provisioning state of the remote gateway.\n    peeringState  VirtualNetworkPeeringPropertiesFormatStatusPeeringState     PeeringState: The status of the virtual network peering.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network peering resource.\n    remoteAddressSpace  AddressSpace_StatusARM     RemoteAddressSpace: The reference to the remote virtual network address space.\n    remoteBgpCommunities  VirtualNetworkBgpCommunities_StatusARM     RemoteBgpCommunities: The reference to the remote virtual network\u0026rsquo;s Bgp Communities.\n    remoteVirtualNetwork  SubResource_StatusARM     RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).\n    resourceGuid  string    ResourceGuid: The resourceGuid property of the Virtual Network peering resource.\n    useRemoteGateways  bool    UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.\n    VirtualNetworkPeering_Status   (Appears on:VirtualNetworksVirtualNetworkPeering)      Field Description      allowForwardedTraffic  bool    AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.\n    allowGatewayTransit  bool    AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.\n    allowVirtualNetworkAccess  bool    AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    doNotVerifyRemoteGateways  bool    DoNotVerifyRemoteGateways: If we need to verify the provisioning state of the remote gateway.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    peeringState  VirtualNetworkPeeringPropertiesFormatStatusPeeringState     PeeringState: The status of the virtual network peering.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network peering resource.\n    remoteAddressSpace  AddressSpace_Status     RemoteAddressSpace: The reference to the remote virtual network address space.\n    remoteBgpCommunities  VirtualNetworkBgpCommunities_Status     RemoteBgpCommunities: The reference to the remote virtual network\u0026rsquo;s Bgp Communities.\n    remoteVirtualNetwork  SubResource_Status     RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).\n    resourceGuid  string    ResourceGuid: The resourceGuid property of the Virtual Network peering resource.\n    type  string    Type: Resource type.\n    useRemoteGateways  bool    UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.\n    VirtualNetworkPeering_StatusARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VirtualNetworkPeeringPropertiesFormat_StatusARM     Properties: Properties of the virtual network peering.\n    type  string    Type: Resource type.\n    VirtualNetworkPropertiesFormat_StatusARM   (Appears on:VirtualNetwork_StatusARM)      Field Description      addressSpace  AddressSpace_StatusARM     AddressSpace: The AddressSpace that contains an array of IP address ranges that can be used by subnets.\n    bgpCommunities  VirtualNetworkBgpCommunities_StatusARM     BgpCommunities: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.\n    ddosProtectionPlan  SubResource_StatusARM     DdosProtectionPlan: The DDoS protection plan associated with the virtual network.\n    dhcpOptions  DhcpOptions_StatusARM     DhcpOptions: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.\n    enableDdosProtection  bool    EnableDdosProtection: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.\n    enableVmProtection  bool    EnableVmProtection: Indicates if VM protection is enabled for all the subnets in the virtual network.\n    ipAllocations  []SubResource_StatusARM     IpAllocations: Array of IpAllocation which reference this VNET.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network resource.\n    resourceGuid  string    ResourceGuid: The resourceGuid property of the Virtual Network resource.\n    VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbedded   (Appears on:NetworkInterfaceIPConfiguration_Status_NetworkInterface_SubResourceEmbedded)      Field Description      id  string    Id: Resource ID.\n    VirtualNetworkTap_Status_NetworkInterface_SubResourceEmbeddedARM   (Appears on:NetworkInterfaceIPConfigurationPropertiesFormat_Status_NetworkInterface_SubResourceEmbeddedARM)      Field Description      id  string    Id: Resource ID.\n    VirtualNetwork_Status   (Appears on:VirtualNetwork)      Field Description      addressSpace  AddressSpace_Status     AddressSpace: The AddressSpace that contains an array of IP address ranges that can be used by subnets.\n    bgpCommunities  VirtualNetworkBgpCommunities_Status     BgpCommunities: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    ddosProtectionPlan  SubResource_Status     DdosProtectionPlan: The DDoS protection plan associated with the virtual network.\n    dhcpOptions  DhcpOptions_Status     DhcpOptions: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.\n    enableDdosProtection  bool    EnableDdosProtection: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.\n    enableVmProtection  bool    EnableVmProtection: Indicates if VM protection is enabled for all the subnets in the virtual network.\n    etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extended location of the virtual network.\n    id  string    Id: Resource ID.\n    ipAllocations  []SubResource_Status     IpAllocations: Array of IpAllocation which reference this VNET.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the virtual network resource.\n    resourceGuid  string    ResourceGuid: The resourceGuid property of the Virtual Network resource.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    VirtualNetwork_StatusARM       Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extended location of the virtual network.\n    id  string    Id: Resource ID.\n    location  string    Location: Resource location.\n    name  string    Name: Resource name.\n    properties  VirtualNetworkPropertiesFormat_StatusARM     Properties: Properties of the virtual network.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: Resource type.\n    VirtualNetworksSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    VirtualNetworksSubnet   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/virtualNetworks_subnets\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworksSubnets_Spec          addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    delegations  []VirtualNetworksSubnets_Spec_Properties_Delegations     Delegations: An array of references to the delegations on the subnet.\n    ipAllocations  []SubResource     IpAllocations: Array of IpAllocation which reference this subnet.\n    natGateway  SubResource     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  SubResource     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    privateEndpointNetworkPolicies  string    PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateLinkServiceNetworkPolicies  string    PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    routeTable  SubResource     RouteTable: The reference to the RouteTable resource.\n    serviceEndpointPolicies  []SubResource     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormat     ServiceEndpoints: An array of service endpoints.\n       status  Subnet_Status_VirtualNetworksSubnet_SubResourceEmbedded         VirtualNetworksSubnetsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    VirtualNetworksSubnets_Spec   (Appears on:VirtualNetworksSubnet)      Field Description      addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    delegations  []VirtualNetworksSubnets_Spec_Properties_Delegations     Delegations: An array of references to the delegations on the subnet.\n    ipAllocations  []SubResource     IpAllocations: Array of IpAllocation which reference this subnet.\n    natGateway  SubResource     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  SubResource     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    privateEndpointNetworkPolicies  string    PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateLinkServiceNetworkPolicies  string    PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    routeTable  SubResource     RouteTable: The reference to the RouteTable resource.\n    serviceEndpointPolicies  []SubResource     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormat     ServiceEndpoints: An array of service endpoints.\n    VirtualNetworksSubnets_SpecARM       Field Description      name  string    Name: Name of the resource\n    properties  VirtualNetworksSubnets_Spec_PropertiesARM     Properties: Properties of the subnet.\n    VirtualNetworksSubnets_Spec_PropertiesARM   (Appears on:VirtualNetworksSubnets_SpecARM)      Field Description      addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    delegations  []VirtualNetworksSubnets_Spec_Properties_DelegationsARM     Delegations: An array of references to the delegations on the subnet.\n    ipAllocations  []SubResourceARM     IpAllocations: Array of IpAllocation which reference this subnet.\n    natGateway  SubResourceARM     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  SubResourceARM     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    privateEndpointNetworkPolicies  string    PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateLinkServiceNetworkPolicies  string    PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    routeTable  SubResourceARM     RouteTable: The reference to the RouteTable resource.\n    serviceEndpointPolicies  []SubResourceARM     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormatARM     ServiceEndpoints: An array of service endpoints.\n    VirtualNetworksSubnets_Spec_Properties_Delegations   (Appears on:VirtualNetworksSubnets_Spec)      Field Description      name  string    Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.\n    serviceName  string    ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).\n    VirtualNetworksSubnets_Spec_Properties_DelegationsARM   (Appears on:VirtualNetworksSubnets_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.\n    properties  ServiceDelegationPropertiesFormatARM     Properties: Properties of the subnet.\n    VirtualNetworksVirtualNetworkPeering   Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/virtualNetworks_virtualNetworkPeerings\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  VirtualNetworksVirtualNetworkPeerings_Spec          allowForwardedTraffic  bool    AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.\n    allowGatewayTransit  bool    AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.\n    allowVirtualNetworkAccess  bool    AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState     PeeringState: The status of the virtual network peering.\n    remoteAddressSpace  AddressSpace     RemoteAddressSpace: The reference to the remote virtual network address space.\n    remoteBgpCommunities  VirtualNetworkBgpCommunities     RemoteBgpCommunities: The reference to the remote virtual network\u0026rsquo;s Bgp Communities.\n    remoteVirtualNetwork  SubResource     RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    useRemoteGateways  bool    UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.\n       status  VirtualNetworkPeering_Status         VirtualNetworksVirtualNetworkPeeringsSpecAPIVersion (string alias)      Value Description   \u0026#34;2020-11-01\u0026#34;\n    VirtualNetworksVirtualNetworkPeerings_Spec   (Appears on:VirtualNetworksVirtualNetworkPeering)      Field Description      allowForwardedTraffic  bool    AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.\n    allowGatewayTransit  bool    AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.\n    allowVirtualNetworkAccess  bool    AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a network.azure.com/VirtualNetwork resource\n    peeringState  VirtualNetworkPeeringPropertiesFormatPeeringState     PeeringState: The status of the virtual network peering.\n    remoteAddressSpace  AddressSpace     RemoteAddressSpace: The reference to the remote virtual network address space.\n    remoteBgpCommunities  VirtualNetworkBgpCommunities     RemoteBgpCommunities: The reference to the remote virtual network\u0026rsquo;s Bgp Communities.\n    remoteVirtualNetwork  SubResource     RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    useRemoteGateways  bool    UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.\n    VirtualNetworksVirtualNetworkPeerings_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  VirtualNetworkPeeringPropertiesFormatARM     Properties: Properties of the virtual network peering.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    VirtualNetworks_Spec   (Appears on:VirtualNetwork)      Field Description      addressSpace  AddressSpace     AddressSpace: The AddressSpace that contains an array of IP address ranges that can be used by subnets.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    bgpCommunities  VirtualNetworkBgpCommunities     BgpCommunities: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.\n    ddosProtectionPlan  SubResource     DdosProtectionPlan: The DDoS protection plan associated with the virtual network.\n    dhcpOptions  DhcpOptions     DhcpOptions: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.\n    enableDdosProtection  bool    EnableDdosProtection: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.\n    enableVmProtection  bool    EnableVmProtection: Indicates if VM protection is enabled for all the subnets in the virtual network.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The extended location of the virtual network.\n    ipAllocations  []SubResource     IpAllocations: Array of IpAllocation which reference this VNET.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    VirtualNetworks_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The extended location of the virtual network.\n    location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  VirtualNetworks_Spec_PropertiesARM     Properties: Properties of the virtual network.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    VirtualNetworks_Spec_PropertiesARM   (Appears on:VirtualNetworks_SpecARM)      Field Description      addressSpace  AddressSpaceARM     AddressSpace: The AddressSpace that contains an array of IP address ranges that can be used by subnets.\n    bgpCommunities  VirtualNetworkBgpCommunitiesARM     BgpCommunities: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.\n    ddosProtectionPlan  SubResourceARM     DdosProtectionPlan: The DDoS protection plan associated with the virtual network.\n    dhcpOptions  DhcpOptionsARM     DhcpOptions: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.\n    enableDdosProtection  bool    EnableDdosProtection: Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.\n    enableVmProtection  bool    EnableVmProtection: Indicates if VM protection is enabled for all the subnets in the virtual network.\n    ipAllocations  []SubResourceARM     IpAllocations: Array of IpAllocation which reference this VNET.\n    subnets  []VirtualNetworks_Spec_Properties_SubnetsARM     Subnets: A list of subnets in a Virtual Network.\n    virtualNetworkPeerings  []VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM     VirtualNetworkPeerings: A list of peerings in a Virtual Network.\n    VirtualNetworks_Spec_Properties_SubnetsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VirtualNetworks_Spec_Properties_Subnets_PropertiesARM     Properties: Properties of the subnet.\n    VirtualNetworks_Spec_Properties_Subnets_PropertiesARM   (Appears on:VirtualNetworks_Spec_Properties_SubnetsARM)      Field Description      addressPrefix  string    AddressPrefix: The address prefix for the subnet.\n    addressPrefixes  []string    AddressPrefixes: List of address prefixes for the subnet.\n    delegations  []VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM     Delegations: An array of references to the delegations on the subnet.\n    ipAllocations  []SubResourceARM     IpAllocations: Array of IpAllocation which reference this subnet.\n    natGateway  SubResourceARM     NatGateway: Nat gateway associated with this subnet.\n    networkSecurityGroup  SubResourceARM     NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.\n    privateEndpointNetworkPolicies  string    PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.\n    privateLinkServiceNetworkPolicies  string    PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.\n    routeTable  SubResourceARM     RouteTable: The reference to the RouteTable resource.\n    serviceEndpointPolicies  []SubResourceARM     ServiceEndpointPolicies: An array of service endpoint policies.\n    serviceEndpoints  []ServiceEndpointPropertiesFormatARM     ServiceEndpoints: An array of service endpoints.\n    VirtualNetworks_Spec_Properties_Subnets_Properties_DelegationsARM   (Appears on:VirtualNetworks_Spec_Properties_Subnets_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.\n    properties  ServiceDelegationPropertiesFormatARM     Properties: Properties of the subnet.\n    VirtualNetworks_Spec_Properties_VirtualNetworkPeeringsARM   (Appears on:VirtualNetworks_Spec_PropertiesARM)      Field Description      name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VirtualNetworkPeeringPropertiesFormatARM     Properties: Properties of the virtual network peering.\n    VpnClientConfigurationStatusVpnAuthenticationTypes (string alias)  (Appears on:VpnClientConfiguration_Status, VpnClientConfiguration_StatusARM)      Value Description   \u0026#34;AAD\u0026#34;\n  \u0026#34;Certificate\u0026#34;\n  \u0026#34;Radius\u0026#34;\n    VpnClientConfigurationStatusVpnClientProtocols (string alias)  (Appears on:VpnClientConfiguration_Status, VpnClientConfiguration_StatusARM)      Value Description   \u0026#34;IkeV2\u0026#34;\n  \u0026#34;OpenVPN\u0026#34;\n  \u0026#34;SSTP\u0026#34;\n    VpnClientConfiguration_Status   (Appears on:VirtualNetworkGateway_Status)      Field Description      aadAudience  string    AadAudience: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadIssuer  string    AadIssuer: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadTenant  string    AadTenant: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    radiusServerAddress  string    RadiusServerAddress: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServerSecret  string    RadiusServerSecret: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServers  []RadiusServer_Status     RadiusServers: The radiusServers property for multiple radius server configuration.\n    vpnAuthenticationTypes  []VpnClientConfigurationStatusVpnAuthenticationTypes     VpnAuthenticationTypes: VPN authentication types for the virtual network gateway..\n    vpnClientAddressPool  AddressSpace_Status     VpnClientAddressPool: The reference to the address space resource which represents Address space for P2S VpnClient.\n    vpnClientIpsecPolicies  []IpsecPolicy_Status     VpnClientIpsecPolicies: VpnClientIpsecPolicies for virtual network gateway P2S client.\n    vpnClientProtocols  []VpnClientConfigurationStatusVpnClientProtocols     VpnClientProtocols: VpnClientProtocols for Virtual network gateway.\n    vpnClientRevokedCertificates  []VpnClientRevokedCertificate_Status     VpnClientRevokedCertificates: VpnClientRevokedCertificate for Virtual network gateway.\n    vpnClientRootCertificates  []VpnClientRootCertificate_Status     VpnClientRootCertificates: VpnClientRootCertificate for virtual network gateway.\n    VpnClientConfiguration_StatusARM   (Appears on:VirtualNetworkGatewayPropertiesFormat_StatusARM)      Field Description      aadAudience  string    AadAudience: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadIssuer  string    AadIssuer: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    aadTenant  string    AadTenant: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.\n    radiusServerAddress  string    RadiusServerAddress: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServerSecret  string    RadiusServerSecret: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.\n    radiusServers  []RadiusServer_StatusARM     RadiusServers: The radiusServers property for multiple radius server configuration.\n    vpnAuthenticationTypes  []VpnClientConfigurationStatusVpnAuthenticationTypes     VpnAuthenticationTypes: VPN authentication types for the virtual network gateway..\n    vpnClientAddressPool  AddressSpace_StatusARM     VpnClientAddressPool: The reference to the address space resource which represents Address space for P2S VpnClient.\n    vpnClientIpsecPolicies  []IpsecPolicy_StatusARM     VpnClientIpsecPolicies: VpnClientIpsecPolicies for virtual network gateway P2S client.\n    vpnClientProtocols  []VpnClientConfigurationStatusVpnClientProtocols     VpnClientProtocols: VpnClientProtocols for Virtual network gateway.\n    vpnClientRevokedCertificates  []VpnClientRevokedCertificate_StatusARM     VpnClientRevokedCertificates: VpnClientRevokedCertificate for Virtual network gateway.\n    vpnClientRootCertificates  []VpnClientRootCertificate_StatusARM     VpnClientRootCertificates: VpnClientRootCertificate for virtual network gateway.\n    VpnClientRevokedCertificatePropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VpnClientRevokedCertificatePropertiesFormat\n    Field Description      thumbprint  string    Thumbprint: The revoked VPN client certificate thumbprint.\n    VpnClientRevokedCertificatePropertiesFormat_StatusARM   (Appears on:VpnClientRevokedCertificate_StatusARM)      Field Description      provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the VPN client revoked certificate resource.\n    thumbprint  string    Thumbprint: The revoked VPN client certificate thumbprint.\n    VpnClientRevokedCertificate_Status   (Appears on:VpnClientConfiguration_Status)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the VPN client revoked certificate resource.\n    thumbprint  string    Thumbprint: The revoked VPN client certificate thumbprint.\n    VpnClientRevokedCertificate_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VpnClientRevokedCertificatePropertiesFormat_StatusARM     Properties: Properties of the vpn client revoked certificate.\n    VpnClientRootCertificatePropertiesFormatARM   (Appears on:VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM)  Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VpnClientRootCertificatePropertiesFormat\n    Field Description      publicCertData  string    PublicCertData: The certificate public data.\n    VpnClientRootCertificatePropertiesFormat_StatusARM   (Appears on:VpnClientRootCertificate_StatusARM)      Field Description      provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the VPN client root certificate resource.\n    publicCertData  string    PublicCertData: The certificate public data.\n    VpnClientRootCertificate_Status   (Appears on:VpnClientConfiguration_Status)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: The provisioning state of the VPN client root certificate resource.\n    publicCertData  string    PublicCertData: The certificate public data.\n    VpnClientRootCertificate_StatusARM   (Appears on:VpnClientConfiguration_StatusARM)      Field Description      etag  string    Etag: A unique read-only string that changes whenever the resource is updated.\n    id  string    Id: Resource ID.\n    name  string    Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.\n    properties  VpnClientRootCertificatePropertiesFormat_StatusARM     Properties: Properties of the vpn client root certificate.\n     "},{"id":62,"href":"/azure-service-operator/reference/operationalinsights.v1alpha1api20210601/","title":"operationalinsights.azure.com/v1alpha1api20210601","section":"References","content":"operationalinsights.azure.com/v1alpha1api20210601  Package v1alpha1api20210601 contains API Schema definitions for the operationalinsights v1alpha1api20210601 API group\n Resource Types:  PrivateLinkScopedResource_Status   (Appears on:Workspace_Status)  Deprecated version of PrivateLinkScopedResource_Status. Use v1beta20210601.PrivateLinkScopedResource_Status instead\n    Field Description      resourceId  string        scopeId  string        PrivateLinkScopedResource_StatusARM   (Appears on:WorkspaceProperties_StatusARM)  Deprecated version of PrivateLinkScopedResource_Status. Use v1beta20210601.PrivateLinkScopedResource_Status instead\n    Field Description      resourceId  string        scopeId  string        PublicNetworkAccessType_Status (string alias)  (Appears on:WorkspaceProperties_StatusARM, Workspace_Status)  Deprecated version of PublicNetworkAccessType_Status. Use v1beta20210601.PublicNetworkAccessType_Status instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Workspace   Deprecated version of Workspace. Use v1beta20210601.Workspace instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Workspaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    eTag  string        features  WorkspaceFeatures         forceCmkForQuery  bool        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    provisioningState  WorkspacePropertiesProvisioningState         publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery         retentionInDays  int        sku  WorkspaceSku         tags  map[string]string        workspaceCapping  WorkspaceCapping            status  Workspace_Status         WorkspaceCapping   (Appears on:Workspaces_Spec)  Deprecated version of WorkspaceCapping. Use v1beta20210601.WorkspaceCapping instead\n    Field Description      dailyQuotaGb  float64        WorkspaceCappingARM   (Appears on:WorkspacePropertiesARM)  Deprecated version of WorkspaceCapping. Use v1beta20210601.WorkspaceCapping instead\n    Field Description      dailyQuotaGb  float64        WorkspaceCappingStatusDataIngestionStatus (string alias)  (Appears on:WorkspaceCapping_Status, WorkspaceCapping_StatusARM)  Deprecated version of WorkspaceCappingStatusDataIngestionStatus. Use v1beta20210601.WorkspaceCappingStatusDataIngestionStatus instead\n    Value Description   \u0026#34;ApproachingQuota\u0026#34;\n  \u0026#34;ForceOff\u0026#34;\n  \u0026#34;ForceOn\u0026#34;\n  \u0026#34;OverQuota\u0026#34;\n  \u0026#34;RespectQuota\u0026#34;\n  \u0026#34;SubscriptionSuspended\u0026#34;\n    WorkspaceCapping_Status   (Appears on:Workspace_Status)  Deprecated version of WorkspaceCapping_Status. Use v1beta20210601.WorkspaceCapping_Status instead\n    Field Description      dailyQuotaGb  float64        dataIngestionStatus  WorkspaceCappingStatusDataIngestionStatus         quotaNextResetTime  string        WorkspaceCapping_StatusARM   (Appears on:WorkspaceProperties_StatusARM)  Deprecated version of WorkspaceCapping_Status. Use v1beta20210601.WorkspaceCapping_Status instead\n    Field Description      dailyQuotaGb  float64        dataIngestionStatus  WorkspaceCappingStatusDataIngestionStatus         quotaNextResetTime  string        WorkspaceFeatures   (Appears on:Workspaces_Spec)  Deprecated version of WorkspaceFeatures. Use v1beta20210601.WorkspaceFeatures instead\n    Field Description      additionalProperties  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         clusterResourceReference  genruntime.ResourceReference         disableLocalAuth  bool        enableDataExport  bool        enableLogAccessUsingOnlyResourcePermissions  bool        immediatePurgeDataOn30Days  bool        WorkspaceFeaturesARM   (Appears on:WorkspacePropertiesARM)  Deprecated version of WorkspaceFeatures. Use v1beta20210601.WorkspaceFeatures instead\n    Field Description      additionalProperties  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         clusterResourceId  string        disableLocalAuth  bool        enableDataExport  bool        enableLogAccessUsingOnlyResourcePermissions  bool        immediatePurgeDataOn30Days  bool        WorkspaceFeatures_Status   (Appears on:Workspace_Status)  Deprecated version of WorkspaceFeatures_Status. Use v1beta20210601.WorkspaceFeatures_Status instead\n    Field Description      clusterResourceId  string        disableLocalAuth  bool        enableDataExport  bool        enableLogAccessUsingOnlyResourcePermissions  bool        immediatePurgeDataOn30Days  bool        WorkspaceFeatures_StatusARM   (Appears on:WorkspaceProperties_StatusARM)  Deprecated version of WorkspaceFeatures_Status. Use v1beta20210601.WorkspaceFeatures_Status instead\n    Field Description      clusterResourceId  string        disableLocalAuth  bool        enableDataExport  bool        enableLogAccessUsingOnlyResourcePermissions  bool        immediatePurgeDataOn30Days  bool        WorkspacePropertiesARM   (Appears on:Workspaces_SpecARM)  Deprecated version of WorkspaceProperties. Use v1beta20210601.WorkspaceProperties instead\n    Field Description      features  WorkspaceFeaturesARM         forceCmkForQuery  bool        provisioningState  WorkspacePropertiesProvisioningState         publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery         retentionInDays  int        sku  WorkspaceSkuARM         workspaceCapping  WorkspaceCappingARM         WorkspacePropertiesProvisioningState (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)  Deprecated version of WorkspacePropertiesProvisioningState. Use v1beta20210601.WorkspacePropertiesProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;ProvisioningAccount\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    WorkspacePropertiesPublicNetworkAccessForIngestion (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)  Deprecated version of WorkspacePropertiesPublicNetworkAccessForIngestion. Use v1beta20210601.WorkspacePropertiesPublicNetworkAccessForIngestion instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    WorkspacePropertiesPublicNetworkAccessForQuery (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)  Deprecated version of WorkspacePropertiesPublicNetworkAccessForQuery. Use v1beta20210601.WorkspacePropertiesPublicNetworkAccessForQuery instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    WorkspacePropertiesStatusProvisioningState (string alias)  (Appears on:WorkspaceProperties_StatusARM, Workspace_Status)  Deprecated version of WorkspacePropertiesStatusProvisioningState. Use v1beta20210601.WorkspacePropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;ProvisioningAccount\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    WorkspaceProperties_StatusARM   (Appears on:Workspace_StatusARM)  Deprecated version of WorkspaceProperties_Status. Use v1beta20210601.WorkspaceProperties_Status instead\n    Field Description      createdDate  string        customerId  string        features  WorkspaceFeatures_StatusARM         forceCmkForQuery  bool        modifiedDate  string        privateLinkScopedResources  []PrivateLinkScopedResource_StatusARM         provisioningState  WorkspacePropertiesStatusProvisioningState         publicNetworkAccessForIngestion  PublicNetworkAccessType_Status         publicNetworkAccessForQuery  PublicNetworkAccessType_Status         retentionInDays  int        sku  WorkspaceSku_StatusARM         workspaceCapping  WorkspaceCapping_StatusARM         WorkspaceSku   (Appears on:Workspaces_Spec)  Deprecated version of WorkspaceSku. Use v1beta20210601.WorkspaceSku instead\n    Field Description      capacityReservationLevel  int        name  WorkspaceSkuName         WorkspaceSkuARM   (Appears on:WorkspacePropertiesARM)  Deprecated version of WorkspaceSku. Use v1beta20210601.WorkspaceSku instead\n    Field Description      capacityReservationLevel  int        name  WorkspaceSkuName         WorkspaceSkuName (string alias)  (Appears on:WorkspaceSku, WorkspaceSkuARM)  Deprecated version of WorkspaceSkuName. Use v1beta20210601.WorkspaceSkuName instead\n    Value Description   \u0026#34;CapacityReservation\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;LACluster\u0026#34;\n  \u0026#34;PerGB2018\u0026#34;\n  \u0026#34;PerNode\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standalone\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    WorkspaceSkuStatusCapacityReservationLevel (int alias)  (Appears on:WorkspaceSku_Status, WorkspaceSku_StatusARM)  Deprecated version of WorkspaceSkuStatusCapacityReservationLevel. Use v1beta20210601.WorkspaceSkuStatusCapacityReservationLevel instead\n    Value Description   100\n  1000\n  200\n  2000\n  300\n  400\n  500\n  5000\n    WorkspaceSkuStatusName (string alias)  (Appears on:WorkspaceSku_Status, WorkspaceSku_StatusARM)  Deprecated version of WorkspaceSkuStatusName. Use v1beta20210601.WorkspaceSkuStatusName instead\n    Value Description   \u0026#34;CapacityReservation\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;LACluster\u0026#34;\n  \u0026#34;PerGB2018\u0026#34;\n  \u0026#34;PerNode\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standalone\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    WorkspaceSku_Status   (Appears on:Workspace_Status)  Deprecated version of WorkspaceSku_Status. Use v1beta20210601.WorkspaceSku_Status instead\n    Field Description      capacityReservationLevel  WorkspaceSkuStatusCapacityReservationLevel         lastSkuUpdate  string        name  WorkspaceSkuStatusName         WorkspaceSku_StatusARM   (Appears on:WorkspaceProperties_StatusARM)  Deprecated version of WorkspaceSku_Status. Use v1beta20210601.WorkspaceSku_Status instead\n    Field Description      capacityReservationLevel  WorkspaceSkuStatusCapacityReservationLevel         lastSkuUpdate  string        name  WorkspaceSkuStatusName         Workspace_Status   (Appears on:Workspace)  Deprecated version of Workspace_Status. Use v1beta20210601.Workspace_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdDate  string        customerId  string        eTag  string        features  WorkspaceFeatures_Status         forceCmkForQuery  bool        id  string        location  string        modifiedDate  string        name  string        privateLinkScopedResources  []PrivateLinkScopedResource_Status         provisioningState  WorkspacePropertiesStatusProvisioningState         publicNetworkAccessForIngestion  PublicNetworkAccessType_Status         publicNetworkAccessForQuery  PublicNetworkAccessType_Status         retentionInDays  int        sku  WorkspaceSku_Status         tags  map[string]string        type  string        workspaceCapping  WorkspaceCapping_Status         Workspace_StatusARM   Deprecated version of Workspace_Status. Use v1beta20210601.Workspace_Status instead\n    Field Description      eTag  string        id  string        location  string        name  string        properties  WorkspaceProperties_StatusARM         tags  map[string]string        type  string        Workspaces_Spec   (Appears on:Workspace)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    eTag  string        features  WorkspaceFeatures         forceCmkForQuery  bool        location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    provisioningState  WorkspacePropertiesProvisioningState         publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion         publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery         retentionInDays  int        sku  WorkspaceSku         tags  map[string]string        workspaceCapping  WorkspaceCapping         Workspaces_SpecARM   Deprecated version of Workspaces_Spec. Use v1beta20210601.Workspaces_Spec instead\n    Field Description      eTag  string        location  string        name  string        properties  WorkspacePropertiesARM         tags  map[string]string         "},{"id":63,"href":"/azure-service-operator/reference/operationalinsights.v1beta20210601/","title":"operationalinsights.azure.com/v1beta20210601","section":"References","content":"operationalinsights.azure.com/v1beta20210601  Package v1beta20210601 contains API Schema definitions for the operationalinsights v1beta20210601 API group\n Resource Types:  PrivateLinkScopedResource_Status   (Appears on:Workspace_Status)      Field Description      resourceId  string    ResourceId: The full resource Id of the private link scope resource.\n    scopeId  string    ScopeId: The private link scope unique Identifier.\n    PrivateLinkScopedResource_StatusARM   (Appears on:WorkspaceProperties_StatusARM)      Field Description      resourceId  string    ResourceId: The full resource Id of the private link scope resource.\n    scopeId  string    ScopeId: The private link scope unique Identifier.\n    PublicNetworkAccessType_Status (string alias)  (Appears on:WorkspaceProperties_StatusARM, Workspace_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    Workspace   Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/resourceDefinitions/workspaces\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Workspaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    eTag  string    ETag: The ETag of the workspace.\n    features  WorkspaceFeatures     Features: Workspace features.\n    forceCmkForQuery  bool    ForceCmkForQuery: Indicates whether customer managed storage is mandatory for query management.\n    location  string    Location: The geo-location where the resource lives\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    provisioningState  WorkspacePropertiesProvisioningState     ProvisioningState: The provisioning state of the workspace.\n    publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Log Analytics ingestion.\n    publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Log Analytics query.\n    retentionInDays  int    RetentionInDays: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.\n    sku  WorkspaceSku     Sku: The SKU (tier) of a workspace.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    workspaceCapping  WorkspaceCapping     WorkspaceCapping: The daily volume cap for ingestion.\n       status  Workspace_Status         WorkspaceCapping   (Appears on:Workspaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceCapping\n    Field Description      dailyQuotaGb  float64    DailyQuotaGb: The workspace daily quota for ingestion.\n    WorkspaceCappingARM   (Appears on:WorkspacePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceCapping\n    Field Description      dailyQuotaGb  float64    DailyQuotaGb: The workspace daily quota for ingestion.\n    WorkspaceCappingStatusDataIngestionStatus (string alias)  (Appears on:WorkspaceCapping_Status, WorkspaceCapping_StatusARM)      Value Description   \u0026#34;ApproachingQuota\u0026#34;\n  \u0026#34;ForceOff\u0026#34;\n  \u0026#34;ForceOn\u0026#34;\n  \u0026#34;OverQuota\u0026#34;\n  \u0026#34;RespectQuota\u0026#34;\n  \u0026#34;SubscriptionSuspended\u0026#34;\n    WorkspaceCapping_Status   (Appears on:Workspace_Status)      Field Description      dailyQuotaGb  float64    DailyQuotaGb: The workspace daily quota for ingestion.\n    dataIngestionStatus  WorkspaceCappingStatusDataIngestionStatus     DataIngestionStatus: The status of data ingestion for this workspace.\n    quotaNextResetTime  string    QuotaNextResetTime: The time when the quota will be rest.\n    WorkspaceCapping_StatusARM   (Appears on:WorkspaceProperties_StatusARM)      Field Description      dailyQuotaGb  float64    DailyQuotaGb: The workspace daily quota for ingestion.\n    dataIngestionStatus  WorkspaceCappingStatusDataIngestionStatus     DataIngestionStatus: The status of data ingestion for this workspace.\n    quotaNextResetTime  string    QuotaNextResetTime: The time when the quota will be rest.\n    WorkspaceFeatures   (Appears on:Workspaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceFeatures\n    Field Description      additionalProperties  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     AdditionalProperties: Unmatched properties from the message are deserialized this collection\n    clusterResourceReference  genruntime.ResourceReference     ClusterResourceReference: Dedicated LA cluster resourceId that is linked to the workspaces.\n    disableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    enableDataExport  bool    EnableDataExport: Flag that indicate if data should be exported.\n    enableLogAccessUsingOnlyResourcePermissions  bool    EnableLogAccessUsingOnlyResourcePermissions: Flag that indicate which permission to use - resource or workspace or both.\n    immediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Flag that describes if we want to remove the data after 30 days.\n    WorkspaceFeaturesARM   (Appears on:WorkspacePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceFeatures\n    Field Description      additionalProperties  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     AdditionalProperties: Unmatched properties from the message are deserialized this collection\n    clusterResourceId  string        disableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    enableDataExport  bool    EnableDataExport: Flag that indicate if data should be exported.\n    enableLogAccessUsingOnlyResourcePermissions  bool    EnableLogAccessUsingOnlyResourcePermissions: Flag that indicate which permission to use - resource or workspace or both.\n    immediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Flag that describes if we want to remove the data after 30 days.\n    WorkspaceFeatures_Status   (Appears on:Workspace_Status)      Field Description      clusterResourceId  string    ClusterResourceId: Dedicated LA cluster resourceId that is linked to the workspaces.\n    disableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    enableDataExport  bool    EnableDataExport: Flag that indicate if data should be exported.\n    enableLogAccessUsingOnlyResourcePermissions  bool    EnableLogAccessUsingOnlyResourcePermissions: Flag that indicate which permission to use - resource or workspace or both.\n    immediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Flag that describes if we want to remove the data after 30 days.\n    WorkspaceFeatures_StatusARM   (Appears on:WorkspaceProperties_StatusARM)      Field Description      clusterResourceId  string    ClusterResourceId: Dedicated LA cluster resourceId that is linked to the workspaces.\n    disableLocalAuth  bool    DisableLocalAuth: Disable Non-AAD based Auth.\n    enableDataExport  bool    EnableDataExport: Flag that indicate if data should be exported.\n    enableLogAccessUsingOnlyResourcePermissions  bool    EnableLogAccessUsingOnlyResourcePermissions: Flag that indicate which permission to use - resource or workspace or both.\n    immediatePurgeDataOn30Days  bool    ImmediatePurgeDataOn30Days: Flag that describes if we want to remove the data after 30 days.\n    WorkspacePropertiesARM   (Appears on:Workspaces_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceProperties\n    Field Description      features  WorkspaceFeaturesARM     Features: Workspace features.\n    forceCmkForQuery  bool    ForceCmkForQuery: Indicates whether customer managed storage is mandatory for query management.\n    provisioningState  WorkspacePropertiesProvisioningState     ProvisioningState: The provisioning state of the workspace.\n    publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Log Analytics ingestion.\n    publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Log Analytics query.\n    retentionInDays  int    RetentionInDays: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.\n    sku  WorkspaceSkuARM     Sku: The SKU (tier) of a workspace.\n    workspaceCapping  WorkspaceCappingARM     WorkspaceCapping: The daily volume cap for ingestion.\n    WorkspacePropertiesProvisioningState (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;ProvisioningAccount\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    WorkspacePropertiesPublicNetworkAccessForIngestion (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    WorkspacePropertiesPublicNetworkAccessForQuery (string alias)  (Appears on:WorkspacePropertiesARM, Workspaces_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    WorkspacePropertiesStatusProvisioningState (string alias)  (Appears on:WorkspaceProperties_StatusARM, Workspace_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;ProvisioningAccount\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    WorkspaceProperties_StatusARM   (Appears on:Workspace_StatusARM)      Field Description      createdDate  string    CreatedDate: Workspace creation date.\n    customerId  string    CustomerId: This is a read-only property. Represents the ID associated with the workspace.\n    features  WorkspaceFeatures_StatusARM     Features: Workspace features.\n    forceCmkForQuery  bool    ForceCmkForQuery: Indicates whether customer managed storage is mandatory for query management.\n    modifiedDate  string    ModifiedDate: Workspace modification date.\n    privateLinkScopedResources  []PrivateLinkScopedResource_StatusARM     PrivateLinkScopedResources: List of linked private link scope resources.\n    provisioningState  WorkspacePropertiesStatusProvisioningState     ProvisioningState: The provisioning state of the workspace.\n    publicNetworkAccessForIngestion  PublicNetworkAccessType_Status     PublicNetworkAccessForIngestion: The network access type for accessing Log Analytics ingestion.\n    publicNetworkAccessForQuery  PublicNetworkAccessType_Status     PublicNetworkAccessForQuery: The network access type for accessing Log Analytics query.\n    retentionInDays  int    RetentionInDays: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.\n    sku  WorkspaceSku_StatusARM     Sku: The SKU of the workspace.\n    workspaceCapping  WorkspaceCapping_StatusARM     WorkspaceCapping: The daily volume cap for ingestion.\n    WorkspaceSku   (Appears on:Workspaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceSku\n    Field Description      capacityReservationLevel  int    CapacityReservationLevel: The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected.\n    name  WorkspaceSkuName     Name: The name of the SKU.\n    WorkspaceSkuARM   (Appears on:WorkspacePropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-06-01/Microsoft.OperationalInsights.json#/definitions/WorkspaceSku\n    Field Description      capacityReservationLevel  int    CapacityReservationLevel: The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected.\n    name  WorkspaceSkuName     Name: The name of the SKU.\n    WorkspaceSkuName (string alias)  (Appears on:WorkspaceSku, WorkspaceSkuARM)      Value Description   \u0026#34;CapacityReservation\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;LACluster\u0026#34;\n  \u0026#34;PerGB2018\u0026#34;\n  \u0026#34;PerNode\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standalone\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    WorkspaceSkuStatusCapacityReservationLevel (int alias)  (Appears on:WorkspaceSku_Status, WorkspaceSku_StatusARM)      Value Description   100\n  1000\n  200\n  2000\n  300\n  400\n  500\n  5000\n    WorkspaceSkuStatusName (string alias)  (Appears on:WorkspaceSku_Status, WorkspaceSku_StatusARM)      Value Description   \u0026#34;CapacityReservation\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;LACluster\u0026#34;\n  \u0026#34;PerGB2018\u0026#34;\n  \u0026#34;PerNode\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standalone\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    WorkspaceSku_Status   (Appears on:Workspace_Status)      Field Description      capacityReservationLevel  WorkspaceSkuStatusCapacityReservationLevel     CapacityReservationLevel: The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected.\n    lastSkuUpdate  string    LastSkuUpdate: The last time when the sku was updated.\n    name  WorkspaceSkuStatusName     Name: The name of the SKU.\n    WorkspaceSku_StatusARM   (Appears on:WorkspaceProperties_StatusARM)      Field Description      capacityReservationLevel  WorkspaceSkuStatusCapacityReservationLevel     CapacityReservationLevel: The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected.\n    lastSkuUpdate  string    LastSkuUpdate: The last time when the sku was updated.\n    name  WorkspaceSkuStatusName     Name: The name of the SKU.\n    Workspace_Status   (Appears on:Workspace)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdDate  string    CreatedDate: Workspace creation date.\n    customerId  string    CustomerId: This is a read-only property. Represents the ID associated with the workspace.\n    eTag  string    ETag: The ETag of the workspace.\n    features  WorkspaceFeatures_Status     Features: Workspace features.\n    forceCmkForQuery  bool    ForceCmkForQuery: Indicates whether customer managed storage is mandatory for query management.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    modifiedDate  string    ModifiedDate: Workspace modification date.\n    name  string    Name: The name of the resource\n    privateLinkScopedResources  []PrivateLinkScopedResource_Status     PrivateLinkScopedResources: List of linked private link scope resources.\n    provisioningState  WorkspacePropertiesStatusProvisioningState     ProvisioningState: The provisioning state of the workspace.\n    publicNetworkAccessForIngestion  PublicNetworkAccessType_Status     PublicNetworkAccessForIngestion: The network access type for accessing Log Analytics ingestion.\n    publicNetworkAccessForQuery  PublicNetworkAccessType_Status     PublicNetworkAccessForQuery: The network access type for accessing Log Analytics query.\n    retentionInDays  int    RetentionInDays: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.\n    sku  WorkspaceSku_Status     Sku: The SKU of the workspace.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    workspaceCapping  WorkspaceCapping_Status     WorkspaceCapping: The daily volume cap for ingestion.\n    Workspace_StatusARM       Field Description      eTag  string    ETag: The ETag of the workspace.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  WorkspaceProperties_StatusARM     Properties: Workspace properties.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    WorkspacesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-06-01\u0026#34;\n    Workspaces_Spec   (Appears on:Workspace)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    eTag  string    ETag: The ETag of the workspace.\n    features  WorkspaceFeatures     Features: Workspace features.\n    forceCmkForQuery  bool    ForceCmkForQuery: Indicates whether customer managed storage is mandatory for query management.\n    location  string    Location: The geo-location where the resource lives\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    provisioningState  WorkspacePropertiesProvisioningState     ProvisioningState: The provisioning state of the workspace.\n    publicNetworkAccessForIngestion  WorkspacePropertiesPublicNetworkAccessForIngestion     PublicNetworkAccessForIngestion: The network access type for accessing Log Analytics ingestion.\n    publicNetworkAccessForQuery  WorkspacePropertiesPublicNetworkAccessForQuery     PublicNetworkAccessForQuery: The network access type for accessing Log Analytics query.\n    retentionInDays  int    RetentionInDays: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.\n    sku  WorkspaceSku     Sku: The SKU (tier) of a workspace.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    workspaceCapping  WorkspaceCapping     WorkspaceCapping: The daily volume cap for ingestion.\n    Workspaces_SpecARM       Field Description      eTag  string    ETag: The ETag of the workspace.\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the workspace.\n    properties  WorkspacePropertiesARM     Properties: Workspace properties.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n     "},{"id":64,"href":"/azure-service-operator/design/resource-states/","title":"Proposal for reporting resource Status","section":"Design \u0026 Specifications","content":"Proposal for reporting resource Status #  What Status are we talking about? #  There are two types of Status that we\u0026rsquo;re interested in understanding and reporting to the user when running an operator that creates resources in Azure:\n The Status of the operator and its actions on the resource. Has the resource successfully been reconciled? Is the operator in the progress of driving the resource to its goal state (defined in the spec), or has it already done so and is now waiting for more changes before taking further action? The State of the resource in Azure. What fields are set in Azure? There are often defaults and other values which, while you may not have specified them in the spec have been applied on the server side and we want to show to you.  This document is focused on the first type of Status defined above.\nCurrent state of ASO #  ASO v1 (handcrafted) #  The handcrafted ASO resources have a 3-tuple on the Status field which describes the state of the resource:\nProvisioning bool `json:\u0026#34;provisioning,omitempty\u0026#34;` Provisioned bool `json:\u0026#34;provisioned,omitempty\u0026#34;` FailedProvisioning bool `json:\u0026#34;failedProvisioning,omitempty\u0026#34;` There are also additional fields for conveying additional information, including the details of any error as well as information about the Resource ID of the resource\nState string `json:\u0026#34;state,omitempty\u0026#34;` Message string `json:\u0026#34;message,omitempty\u0026#34;` ResourceId string `json:\u0026#34;resourceId,omitempty\u0026#34;` Problems with this approach #   Provisioning, Provisioned and FailedProvisioning are mutually exclusive but the structure of the status doesn\u0026rsquo;t convey that well. Additionally the fact that there are multiple fields means it\u0026rsquo;s easier for bugs to creep in where we set one but didn\u0026rsquo;t clear another. The State field is not widely used by all resources, and seems to conflict with Provisioning/Provisioned/FailedProvisioning. It\u0026rsquo;s not clear when you should look at one or the other.  ASO v2 (auto-generated) #  The auto-generated resources don\u0026rsquo;t currently have anything in their Status which conveys the Status of the operator. For the initial alpha releases, these fields are instead set as annotations on the object:\nDeploymentIDAnnotation = \u0026#34;deployment-id.infra.azure.com\u0026#34; DeploymentNameAnnotation = \u0026#34;deployment-name.infra.azure.com\u0026#34; ResourceStateAnnotation = \u0026#34;resource-state.infra.azure.com\u0026#34; ResourceErrorAnnotation = \u0026#34;resource-error.infra.azure.com\u0026#34; This was done mostly to avoid the additional work to code-generate the correct fields in each resources status and set them. Since it\u0026rsquo;s possible that the whole status can get lost, some of the things may need to stay as annotations (deploymentId possibly), while others are obviously status and can be derived again if lost. We took the temporary approach of putting it all in annotations while we learned more about what the best practices were.\nProblems with this approach #   The ResourceStateAnnotation is reusing the same enum to describe state as the armclient uses for deployments. This is problematic because that only supports Succeeded, Failed, Deleting, and Accepted. Succeeded, Failed, and Deleting make sense in the context of the operator but Accepted doesn\u0026rsquo;t really. There\u0026rsquo;s no state for InProgress or Reconciling. There\u0026rsquo;s an awkward tension between sharing the state of the ARM deployment and the state of the resource. They\u0026rsquo;re often the same but sometimes not (such as in the case the deployment is being deleted but the resource is not). Using annotations is awkward because changing an annotation triggers another reconcile. Using annotations means that it\u0026rsquo;s not clear to the user what the possible valid states are for the fields that are enums. Users expect to look in Status for status related fields. Having it exposed as an annotation was never intended as a long term solution, just a hack so that we could get things up and running.  Examining other projects like ASO #  A quick look across the field of projects similar to ASO suggests that there is a relatively standard approach to solving this problem:\n Crossplane reports status through a Ready condition ACK reports status through a variety of conditions, including ACK.Adopted, ACK.resourceSynced, ACK.Terminal, etc. Cluster API originally used a phase and failureReason/failureMessage pattern, but has since moved to use conditions and is deprecating the old pattern. Pod uses a combination of phase and conditions, including PodScheduled, ContainersReady, Initialized, and Ready.  It seems that most of these (and many core Kubernetes resources) use a Ready condition to specify the status.\nMore on conditions #  These best practices were gathered from conditions API conventions as of July 2021.\n Some resources in the v1 API contain fields called phase, and associated message, reason, and other status fields. The pattern of using phase is deprecated. Newer API types should use conditions instead. Phase was essentially a state-machine enumeration field, that contradicted system-design principles and hampered evolution, since adding new enum values breaks backward compatibility. Rather than encouraging clients to infer implicit properties from phases, we prefer to explicitly expose the individual conditions that clients need to monitor. Conditions also have the benefit that it is possible to create some conditions with uniform meaning across all resource types, while still exposing others that are unique to specific resource types. See #7856 for more details and discussion.\n  In condition types, and everywhere else they appear in the API, Reason is intended to be a one-word, CamelCase representation of the category of cause of the current status, and Message is intended to be a human-readable phrase or sentence, which may contain specific details of the individual occurrence. Reason is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes, whereas Message is intended to be presented to users in detailed status explanations, such as kubectl describe output.\n  In general, condition values may change back and forth, but some condition transitions may be monotonic, depending on the resource and condition type. However, conditions are observations and not, themselves, state machines, nor do we define comprehensive state machines for objects, nor behaviors associated with state transitions. The system is level-based rather than edge-triggered, and should assume an Open World.\n  Controllers should apply their conditions to a resource the first time they visit the resource, even if the status is Unknown. This allows other components in the system to know that the condition exists and the controller is making progress on reconciling that resource.\n These from standardizing conditions:\n reason is required and must not be empty. The actor setting the value should always describe why the condition is the way it is, even if that value is \u0026ldquo;unknown unknowns\u0026rdquo;. No other actor has the information to make a better choice.\n Some other best practices on Kubernetes design principles:\n Object status must be 100% reconstructable by observation. Any history kept must be just an optimization and not required for correct operation.\n  Do not define comprehensive state machines for objects with behaviors associated with state transitions and/or \u0026ldquo;assumed\u0026rdquo; states that cannot be ascertained by observation.\n Proposal #  Goals #   The status of the operator should be reported as a subsection in the Status of the resource itself. See #1504. It should be clear to users where to look to determine what the current status of their resource is. The status should include information in both normal and failure cases. When a failure occurs, it should be clear to the user that a failure has happened and what the cause of the failure was. When a failure occurs, there should be an error or code that is programmatically consumable (for automation, etc). When a failure occurs, there should be an error or text that is human consumable and ideally more informative than the programmatically consumable error code. When a failure occurs, it should be clear to the user whether that failure is transient and the operator can self-recover.  Details #  All resource\u0026rsquo;s Status\u0026rsquo;s will have a top level Conditions field which is a collection of type Condition. This collection supports extension (through conditions with different type names). Initially we will expose a single Ready condition across all resources, representing the high level availability of the resource and its readiness for use.\nThe structure of the Condition is based on the recommended shape of conditions KEP as well as the Cluster API conditions proposal and is as follows:\n// ConditionSeverity expresses the severity of a Condition. type ConditionSeverity string const ( // ConditionSeverityError specifies that a failure of a condition type  // should be viewed as an error. Errors are fatal to reconciliation and  // mean that the user must take some action to resolve  // the problem before reconciliation will be attempted again.  ConditionSeverityError ConditionSeverity = \u0026#34;Error\u0026#34; // ConditionSeverityWarning specifies that a failure of a condition type  // should be viewed as a warning. Warnings are informational. The operator  // may be able to retry through the warning without any action from the user, but  // in some cases user action to resolve the warning will be required.  ConditionSeverityWarning ConditionSeverity = \u0026#34;Warning\u0026#34; // ConditionSeverityInfo specifies that a failure of a condition type  // should be viewed as purely informational. Things are working.  // This is the happy path.  ConditionSeverityInfo ConditionSeverity = \u0026#34;Info\u0026#34; // ConditionSeverityNone specifies that there is no condition severity.  // For conditions which have positive polarity (Status == True is their normal/healthy state), this will set when Status == True  // For conditions which have negative polarity (Status == False is their normal/healthy state), this will be set when Status == False.  // Conditions in Status == Unknown always have a severity of None as well.  // This is the default state for conditions.  ConditionSeverityNone ConditionSeverity = \u0026#34;\u0026#34; ) type ConditionType string const ( ConditionTypeReady = \u0026#34;Ready\u0026#34; ) // Condition defines an extension to status (an observation) of a resource type Condition struct { // Type of condition.  // +kubebuilder:validation:Required  Type ConditionType `json:\u0026#34;type\u0026#34;` // Status of the condition, one of True, False, or Unknown.  // +kubebuilder:validation:Required  Status metav1.ConditionStatus `json:\u0026#34;status\u0026#34;` // Severity with which to treat failures of this type of condition.  // For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True  // For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.  // This is omitted in all cases when Status == Unknown  // +kubebuilder:validation:Optional  Severity ConditionSeverity `json:\u0026#34;severity,omitempty\u0026#34;` // LastTransitionTime is the last time the condition changed.  // +kubebuilder:validation:Required  LastTransitionTime metav1.Time `json:\u0026#34;lastTransitionTime\u0026#34;` // Reason for the condition\u0026#39;s last transition.  // Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.  // +kubebuilder:validation:Required  Reason string `json:\u0026#34;reason\u0026#34;` // Message is a human readable message indicating details about the transition. This field may be empty.  // +kubebuilder:validation:Optional  Message string `json:\u0026#34;message,omitempty\u0026#34;` } The Ready condition #  The Condition definition above discusses support for arbitrary conditions. In practice at least for now, ASO will only expose a single Ready condition. The addition of a Severity field inspired by Cluster API allows different combinations of Severity and Reason to combine together and describe complex scenarios.\nThe Reason field #  Inside of the Ready condition we always include a Reason which provides a programmatically consumable reason that the resource is in the given state. Reason is derived from multiple sources depending on where in the resource lifecycle we are. The value in Reason may be set by the operator itself, or be set to the result of an error or response code received from Azure.\nThe operator defines the following reasons:\n   Reason Severity Meaning     Reconciling Info A request has been submitted to Azure. The operator may be waiting for a response from Azure.   WaitingForOwner Warning The owner of this resource cannot be found in Kubernetes. Progress is blocked until the owner is created.   Deleting Info The resource is being deleted.   Succeeded None (\u0026quot;\u0026quot;/empty) The spec has successfully been applied. No additional changes are being attempted at this time.    There are no failure conditions (Severity = Error) specified here because currently all fatal errors come directly from Azure. When an error response is received from Azure, the Code from Azure is set as the Reason, and the Message from Azure is set as the Message.\nSeverity meaning in the context of the Ready condition #   Error means that we were unable to reconcile the resource successfully. A Ready condition with Status=False, Reason=\u0026lt;something\u0026gt;, Severity=Error is no longer attempting to be reconciled. The user must make an update to the resource to fix one or more configuration problems. Warning means that something is wrong, but we haven\u0026rsquo;t given up. The resource will continue to be reconciled until we can progress past the cause of the Warning. Users should examine the Warning as some may be due to the operator waiting for action from them, as in the case of Reason=WaitingForOwner, Severity=Warning. Others may be due to transient unavailability in Azure, as in the case of Reason=InternalServerError, Severity=Warning. Info means that everything is proceeded as expected. This is the \u0026ldquo;happy path\u0026rdquo;.  Reference #   Article on conditions and status reporting in Kubernetes. Note that this article is a bit old as Cluster API uses conditions now, but it gives a great overview of the topic. Recommended shape of Conditions Update condition guidance - and the actual guidance itself is here More condition recommendations  Open questions #   There are some small differences between this proposal and what CAPI is doing - are we ok with these differences?  CAPI says Reason is optional, but we\u0026rsquo;re making it required.    Open questions answered #  Open questions which have since been answered are below.\nQuestion: Will this work with kstatus, which recommends negative polarity conditions? Answer: Yes, kstatus supports the Ready condition as well, with a few caveats. Anecdotally, we feel that positive polarity conditions (like Ready) are more clear. As mentioned above, there are many operators that follow this Ready pattern including Crossplane and CAPI. If need-be, we can work around the major problem with kstatus and Ready by providing a webhook that automatically includes it on all resource creations.\nQuestion: The KEP for Condition says that LastTransitionTime should be updated any time the condition changes. The CAPI proposal says it should change when Status changes, but the actual CAPI implementation changes it any time the Condition changes.Which behavior do we want? Answer: We will follow the KEPs definition (and CAPI\u0026rsquo;s actual implementation) and update LastTransitionTime any time a Condition changes, even if that change is from Status=False to Status=False.\nAn aside on ARM templates #  This isn\u0026rsquo;t related to the core topic, but it might be useful to understand because it has a big impact on where failure is possible when communicating with ARM.\nYou can read some guidelines about how ARM templates work here.\nThe process basically boils down to the following and is documented here:\n ARM: Validate basic template syntax. Return an error for invalid JSON, invalid resource ID structure, etc. ARM: Send the resource to the individual resource provider (RP). RP: Return a response for the resource. This can be:  201 or 200 HTTP status code and a response body. At this point the resource should exist, but with possibly with a non-terminal provisioningState. 202 HTTP status code. At this point the resource should not exist, and will not exist until the long-running operation completes successfully.   ARM: Poll long running operation until it completes (if needed). ARM: Deployment status will be the status of the resource at the end of the long running operation, which should be in one of the 3 terminal states Succeeded, Failed, or Canceled  Possible outcomes:\n   Status of deployment State of resource     4xx HTTP error code when creating deployment Resource does not exist   Deployment accepted, but fails after polling Resource may or may not exist (depends on the RP)   Deployment succeeds Resource has Failed provisioningState - The spec doesn\u0026rsquo;t say this is impossible but it\u0026rsquo;s probably very rare   Deployment succeeds Resource has Succeeded provisioningState    Note: When a deployment is accepted, the underlying resource may or may not have been created. This means we have to handle cases where the deployment failed but the resource was created anyway alongside cases where the deployment failed and no resource was created.\n"},{"id":65,"href":"/azure-service-operator/reference/resources.v1alpha1api20200601/","title":"resources.azure.com/v1alpha1api20200601","section":"References","content":"resources.azure.com/v1alpha1api20200601  Package v1alpha1api20200601 contains API Schema definitions for the resources v1alpha1api20200601 API group\n Resource Types:  ResourceGroup       Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ResourceGroupSpec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n       status  ResourceGroupStatus         ResourceGroupSpec   (Appears on:ResourceGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    ResourceGroupSpecARM       Field Description      name  string    Name: Name of the resource\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    ResourceGroupStatus   (Appears on:ResourceGroup)      Field Description      id  string        name  string        location  string        managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    provisioningState  string        conditions  []genruntime/conditions.Condition     Conditions describe the observed state of the resource\n    ResourceGroupStatusARM       Field Description      id  string        name  string        location  string        managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    properties  ResourceGroupStatusPropertiesARM         ResourceGroupStatusPropertiesARM   (Appears on:ResourceGroupStatusARM)      Field Description      provisioningState  string        ResourceGroupType (string alias)      Value Description   \u0026#34;Microsoft.Resources/resourceGroups\u0026#34;\n     "},{"id":66,"href":"/azure-service-operator/reference/resources.v1beta20200601/","title":"resources.azure.com/v1beta20200601","section":"References","content":"resources.azure.com/v1beta20200601  Package v1beta20200601 contains API Schema definitions for the resources v1beta20200601 API group\n Resource Types:  ResourceGroup       Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  ResourceGroupSpec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n       status  ResourceGroupStatus         ResourceGroupSpec   (Appears on:ResourceGroup)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    ResourceGroupSpecARM       Field Description      name  string    Name: Name of the resource\n    location  string    Location is the Azure location for the group (eg westus2, southcentralus, etc\u0026hellip;)\n    managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    ResourceGroupStatus   (Appears on:ResourceGroup)      Field Description      id  string        name  string        location  string        managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    provisioningState  string        conditions  []genruntime/conditions.Condition     Conditions describe the observed state of the resource\n    ResourceGroupStatusARM       Field Description      id  string        name  string        location  string        managedBy  string    ManagedBy is the management group responsible for managing this group\n    tags  map[string]string    Tags are user defined key value pairs\n    properties  ResourceGroupStatusPropertiesARM         ResourceGroupStatusPropertiesARM   (Appears on:ResourceGroupStatusARM)      Field Description      provisioningState  string        ResourceGroupType (string alias)      Value Description   \u0026#34;Microsoft.Resources/resourceGroups\u0026#34;\n     "},{"id":67,"href":"/azure-service-operator/design/versioning/case-studies/rolling-storage-versions/","title":"Rolling Storage Versions","section":"Case Studies","content":"Case Study - Rolling Storage Versions #  This case study explores the recommended solution of using a rolling storage version where we update the storage schema of each resource each release of the service operator. We\u0026rsquo;ll keep the storage version up to date with the latest GA release of each resource.\nFor the purposes of discussion, we\u0026rsquo;ll be following the version by version evolution of a theoretical ARM service that provides customer resource management (CRM) services. Synthetic examples are used to allow focus on specific scenarios one by one, providing motivation for specific features.\nExamples shown are deliberately simplified in order to focus, and therefore minutiae should be considered motivational, not binding. Reference the formal specification for precise details.\nVersion 2011-01-01 - Initial Release #  The initial release of the CRM includes a simple definition to capture information about a particular person:\npackage v20110101 type Person struct { Id Guid FirstName string LastName string } We\u0026rsquo;re not reusing the API version directly as our storage version. Instead, we define a separate (independent) type with a similar structure:\npackage v20110101storage type Person struct { PropertyBag FirstName *string Id *Guid LastName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Every property is marked as optional. Optionality doesn\u0026rsquo;t matter at this point, as we currently have only single version of the API. However, as we\u0026rsquo;ll see with later versions, forward and backward compatibility issues would arise if they were not optional.\nThe PropertyBag type provides storage for other properties, plus helper methods. It is always included in storage versions, but in this case will be unused. The method Hub() marks this version as the storage schema.\nStorage Conversion #  We need to implement the Convertible interface to allow conversion to and from the storage version:\npackage v20110101 import storage \u0026#34;v20110101storage\u0026#34; // ConvertTo converts this Person to the Hub storage version. func (person *Person) ConvertTo(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertToStorage(p) } // ConvertToStorage converts this Person to a storage version func (person *Person) ConvertToStorage(dest storage.Person) error { // Copy simple properties across  dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName return nil } // ConvertFrom converts from the Hub storage version func (person *Person) ConvertFrom(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertFromStorage(p) } // ConvertFrom converts from a storage version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { // Copy simple properties across  person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName return nil } Conversion is separated into two methods (e.g. ConvertFrom() and ConvertFromStorage()) to allow for reuse of the ConvertFromStorage() methods for conversion of nested complex properties, as we\u0026rsquo;ll see later on.\nThese methods will be automatically generated in order to handle the majority of the required conversions. Since they never change, the ConvertTo() and ConvertFrom() methods are omitted from the following discussion.\nVersion Map #  With only two classes, our version map doesn\u0026rsquo;t look much like the traditional hub and spoke model, but this will change as we work through this case study:\nVersion 2012-02-02 - No Change #  In this release of the CRM service, there are no changes made to the structure of Person:\npackage v20120202 type Person struct { Id Guid FirstName string LastName string } Storage Conversion #  Conversions with the upgraded storage version will need to be trivially modified by changing the import statements for the referenced types.\nVersion Map #  Our hub and spoke diagram is becoming useful for seeing the relationship between versions:\nObserve that the prior storage version is still shown, with a one way conversion to the current storage version. Existing users who upgrade their service operator will have their storage upgraded using this conversion. The conversion between storage versions will be generated with the same approach, and with the same structure, as all our other conversions.\nVersion 2013-03-03 - New Property #  In response to customer feedback, this release of the CRM adds a new property to Person to allow a persons middle name to be stored:\npackage v20130303 type Person struct { Id Guid FirstName string MiddleName string // *** New ***  LastName string } The new storage version, based on this version, updates accordingly:\npackage v20130303storage type Person struct { PropertyBag Id *Guid FirstName *string MiddleName *string // *** New storage ***  LastName *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversions #  Conversions to and from earlier versions of Person are unchanged, as those versions do not support MiddleName. For the new version of Person, the new property will be included in the generated methods:\npackage v20130303 import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FirstName = person.FirstName dest.Id = person.Id dest.LastName = person.LastName dest.MiddleName = person.MiddleName // *** New property copied too ***  return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.FirstName = source.FirstName person.Id = source.Id person.LastName = source.LastName person.MiddleName = source.MiddleName // *** New property copied too ***  return nil } The new property is shown at the end of the list not because it is new, but because values are copied across in alphabetical order. This is to guarantee that code generation is deterministic and generates the same result each time.\nConversion methods for earlier API versions of Person are essentially unchanged. The import statement at the top of the file will be updated to the new storage version; no other changes are necessary.\nVersion Map #  A graph of our conversions now starts to show the expected hub and spoke structure, with conversions from earlier versions of storage allowing easy upgrades for existing users of the service operator.\nHow often are new properties added? #  At the time of writing, there were 381 version-to-version changes where the only change between versions was solely the addition of new properties. Of those, 249 were adding just a single property, and 71 added two properties.\nVersion 2014-04-04 Preview - Schema Change #  To allow the CRM to better support cultures that have differing ideas about how names are written, a preview release of the service modifies the schema considerably:\npackage v20140404preview type Person struct { Id Guid // ** Only Id is unchanged ***  FullName string FamilyName string KnownAs string } This is a preview version, so the storage version is left unchanged (see below).\nStorage Conversion #  The new properties don\u0026rsquo;t exist on the storage version of Person, so the generated ConvertToStorage() and ConvertFromStorage() methods use the PropertyBag to carry the properties:\npackage v20140404preview import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.Id = person.Id // *** Store in the property bag ***  dest.WriteString(\u0026#34;FamilyName\u0026#34;, person.FamilyName) dest.WriteString(\u0026#34;FullName\u0026#34;, person.FullName) dest.WriteString(\u0026#34;KnownAs\u0026#34;, person.KnownAs) return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.Id = source.Id // *** Read from the property bag ***  person.FamilyName = source.ReadString(\u0026#34;FamilyName\u0026#34;) person.FullName = source.ReadString(\u0026#34;FullName\u0026#34;) person.KnownAs = source.ReadString(\u0026#34;KnownAs\u0026#34;) return nil } In the example above, we show first copying all the directly supported properties, then using the property bag. We may not separate these steps in the generated code.\nThis provides round-trip support for the preview release, but does not provide backward compatibility with prior official releases.\nThe storage version of Person written by the preview release will have no values for FirstName, LastName, and MiddleName.\nThese kinds of cross-version conversions cannot be automatically generated as they require more understanding of the semantic changes between versions.\nTo allow injection of manual conversion steps, interfaces will be generated as follows:\npackage v20130303storage // AssignableToPerson provides methods to augment conversion to storage type AssignableToPerson interface { AssignTo(person Person) error } // AssignableFromPerson provides methods to augment conversion from storage type AssignableFromPerson interface { AssignFrom(person Person) error } This interface can be optionally implemented by API versions (spoke types) to augment the generated conversion.\nThe generated ConvertToStorage() and ConvertFromStorage() methods will test for the presence of this interface and will call it if available:\npackage v20140404preview import storage \u0026#34;v20130303storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { // … property copying and property bag use elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableTo); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { // … property copying and property bag use elided …  // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFrom); ok { assignable.AssignFrom(source) } return nil } Version Map #  Preview releases, by definition, include unstable changes that may differ once the feature reaches general availability.\nWe don\u0026rsquo;t want to make changes to our storage versions based on these speculative changes, so we handle persistence of the preview release with the existing storage version:\nVersion 2014-04-04 - Schema Change #  Based on feedback generated by the preview release, the CRM schema changes have gone ahead with a few minor changes:\npackage v20140404 type Person struct { Id Guid LegalName string // *** Was FullName in preview ***  FamilyName string KnownAs string AlphaKey string // *** Added after preview *** } No longer being a preview release, the storage version is also regenerated:\npackage v20140404storage type Person struct { PropertyBag AlphaKey *string FamilyName *string LegalName *string Id *Guid KnownAs *string } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The ConvertToStorage() and ConvertFromStorage() methods for the new version of Person are generated as expected, copying across values and invoking the AssignableToPerson and AssignableFromPerson interfaces if present:\npackage v20140404 import storage \u0026#34;v20140404storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.AlphaKey = person.AlphaKey dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.AlphaKey = source.AlphaKey person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName // *** Check for the interface and use it if found ***  if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } The changes to the structure of Person mean that our prior conversion methods need to change too. For properties that are no longer present on the storage version, they now need to use the PropertyBag to stash the required values.\nFor example, the 2011-01-01 version of Person now has these conversion methods:\npackage v20110101 import storage \u0026#34;v20140404storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.Id = person.Id dest.WriteString(\u0026#34;FirstName\u0026#34;, person.FirstName) dest.WriteString(\u0026#34;LastName\u0026#34;, person.LastName) if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.Id = source.Id person.FirstName = source.ReadString(\u0026#34;FirstName\u0026#34;) person.LastName = source.ReadString(\u0026#34;LastName\u0026#34;) if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } To interoperate between different versions of Person, we need to add manual conversions.\nWhen a newer version of Person is written to storage, we need to also populate FirstName, LastName and MiddleName within the PropertyBag to allow older versions to be requested.\nWhen an older version of Person is written, we need to populate AlphaKey, FamilyName, KnownAs and LegalName so that newer versions can be requested.\nTo avoid repetition of code across multiple implementations of AssignTo() and AssignFrom(), we might write some helper methods on the storage version:\npackage v20140404storage func (person *Person) PopulateFromFirstMiddleLastName(firstName string, middleName string, lastName string) { person.KnownAs = firstName person.FamilyName = lastName person.LegalName = firstName +\u0026#34; \u0026#34;+ middleName + \u0026#34; \u0026#34; + lastName person.AlphaKey = lastName } func (person *Person) PopulateLegacyFields() { person.WriteString(\u0026#34;FirstName\u0026#34;, person.KnownAs) person.WriteString(\u0026#34;LastName\u0026#34;, person.FamilyName) person.WriteString(\u0026#34;MiddleName\u0026#34;, ... elided ...) } With these methods available, implementing the interface AssignableToPerson becomes straightforward. For the 2011-01-01 release of Person:\npackage v20110101 import storage \u0026#34;v20140404storage\u0026#34; func (person *Person) AssignTo(dest storage.Person) error { dest.PopulateFromFirstMiddleLastName( person.FirstName, \u0026#34;\u0026#34;, person.LastName) } For the 2013-03-03 release that introduced MiddleName the code is very similar:\npackage v20130303 import storage \u0026#34;v20140404storage\u0026#34; func (person *Person) AssignTo(dest storage.Person) error { dest.PopulateFromFirstMiddleLastName( person.FirstName, person.MiddleName, person.LastName) return nil } Version Map #  We can see in our version map that the preview release is still supported, but is now backed by the GA release of the version:\nVersion 2015-05-05 - Property Rename #  The term AlphaKey was found to be confusing to users, so in this release of the API it is renamed to SortKey. This better reflects its purpose of sorting names together (e.g. so that the family name McDonald gets sorted as though spelt MacDonald).\npackage v20150505 type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string // *** Used to be AlphaKey *** } As expected the storage version is also regenerated:\npackage v20150505storage type Person struct { PropertyBag Id *Guid LegalName *string FamilyName *string KnownAs *string SortKey *string // *** Used to be AlphaKey *** } // Hub marks this type as a conversion hub. func (*Person) Hub() {} Storage Conversion #  By documenting the renames in the configuration of our code generator, this rename will be automatically handled within the ConvertTo() and ConvertFrom() methods, as shown here for the 2014-04-04 version of Person:\npackage v20140404 import storage \u0026#34;v20150505storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Rename is automatically handled ***  if assignable, ok := person.(AssignableToPerson); ok { assignable.AssignTo(dest) } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.AlphaKey = source.SortKey // *** Rename is automatically handled ***  person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName if assignable, ok := person.(AssignableFromPerson); ok { assignable.AssignFrom(source) } return nil } While SortKey appears at the end of the list of assignments in the first method, the mirror assignment of AlphaKey appears at the start of the list in the second method.\nIssue: Instability of manual conversions #  The earlier manually authored conversions for AlphaKey will also need to be modified. While this change looks simple, it\u0026rsquo;s a symptom of an underlying problem: with each release, the map of required conversions is completely new (no reuse of older conversions.\nThis both requires the introduction of additional conversions to support older versions (as has happened here) and the modification of existing conversions.\nTo illustrate, consider the manual code (AssignTo() and AssignFrom()) that was written to augment conversion between v20110101.Person and v20140404storage.Person.\nNow that we\u0026rsquo;ve moved to a new release, there is no direct conversion between those two versions (see the version map below) - so the manual conversion just drops off and is ignored. If this is not detected, we may end up corrupting resource definitions as they are converted.\nIn many cases, updating manual conversion code will only require changing imported package references, but this does introduce risk as it involves modifying the code, even if trivially.\nThere will certainly also be cases where the conversion is much harder to convert.\nWe also have the issue seen above where introduction of a change requires additional conversions to be written for older versions.\nVersion Map #  Here we see our horizon policy coming into effect, with support for version 2011-01-01 being dropped in this release:\nFor users staying up to date with releases of the service operator, this will likely have no effect - but users still using the original release (storage version v2011-01-01storage) will need to update to an intermediate release before adopting this version.\nAn alternative approach would be to always support conversion from every storage version, even if the related API version has been dropped. This would allow users to upgrade from any older version of the service operator.\nHow often do property renames happen? #  At the time of writing, there were nearly 60 cases of properties being renamed between versions; 17 of these involved changes to letter case alone. (Count is somewhat inexact because renaming was manually inferred from the similarity of names.)\nVersion 2016-06-06 - Complex Properties #  With some customers expressing a desire to send physical mail to their customers, this release extends the API with mailing address for each person.\npackage v20160606 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress Address } We now have two structs that make up our storage version:\npackage v20160606storage type Person struct { PropertyBag Id *Guid LegalName *string FamilyName *string KnownAs *string MailingAddress *Address // *** New ***  SortKey *string } type Address struct { PropertyBag City *string Street *string } // Hub marks this type of Person as a conversion hub. func (*Person) Hub() {} Storage Conversion #  The required ConvertToStorage() and ConvertFromStorage() methods get generated in the expected way:\npackage v20160606 import storage \u0026#34;v20160606storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName dest.SortKey = person.AlphaKey // *** Copy the mailing address over too ***  address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version func (address *Address) ConvertToStorage(dest storage.Address) error { dest.City = address.City dest.Street = address.Street if assignable, ok := person.(AssignableToAddress); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertFrom converts from the Hub version to this version. func (person *Person) ConvertFromStorage(source storage.Person) error { person.AlphaKey = source.SortKey person.FamilyName = source.FamilyName person.Id = source.Id person.KnownAs = source.KnownAs person.LegalName = source.LegalName // *** Copy the mailing address over too ***  if storage.MailingAddress != nil { address := \u0026amp;Address{} err := address.ConvertFromStorage(storage.Address) person.MailingAddress = address } if assignable, ok := person.(AssignableFromPerson); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } // ConvertFromStorage converts from the hub storage version to this version func (address *Address) ConvertFromStorage(source storage.Address) error { address.Street = source.Street address.City = source.City if assignable, ok := person.(AssignableFromAddress); ok { err := assignable.AssignFrom(source) if err != nill { return err } } return nil } We\u0026rsquo;re recursively applying the same conversion pattern to Address as we have already been using for Person. This scales to any level of nesting without the code becoming unweildy.\nVersion Map #  Again we see the oldest version drop out, allowing users of the three prior versions of the service operator to upgrade cleanly:\nVersion 2017-07-07 - Optionality changes #  In the 2016-06-06 version of the API, the MailingAddress property was mandatory. Since not everyone has a mailing address (some people receive no physical mail), this is now being made optional.\nThe change to the API declarations is simple:\npackage v20170707 type Address struct { Street string City string } type Person struct { Id Guid LegalName string FamilyName string KnownAs string SortKey string MailingAddress *Address // *** Was mandatory, now optional *** } Storage Conversion #  The storage versions are identical to those used previously and are not shown here.\nWhat does change is the ConvertToStorage() method, which now needs to handle the case where the MailingAddress has not been included:\npackage v20170707 import storage \u0026#34;v20170707storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { dest.SortKey = person.AlphaKey dest.FamilyName = person.FamilyName dest.Id = person.Id dest.KnownAs = person.KnownAs dest.LegalName = person.LegalName // *** Need to check whether we have a mailing address to copy ***  if person.MailingAddress != nil { address := \u0026amp;storage.Address{} err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we instead had an optional field that became required in a later version of the API, the generated code for ConvertToStorage() would become simpler as the check for nil would not be needed.\nVersion Map #  How often does optionality change? #  At the time of writing, there are 100 version-to-version changes where fields became optional in the later version of the API, and 99 version-to-version changes where fields became required.\nVersion 2018-08-08 - Extending nested properties #  Defining an address simply as Street and City has been found to be overly simplistic, so this release makes changes to allow a more flexible approach.\npackage v20180808 type Address struct { // FullAddress shows the entire address as should be used on postage  FullAddress string City string Country string PostCode string } As before, the storage version changes to match, with prior conversions using the property bag to store additional properties:\npackage v20180808storage type Address struct { PropertyBag City *string Country *string FullAddress *string PostCode *string } These changes are entirely similar to those previously covered in version 2014-04-04, above.\nVersion Map #  In this release, we see that support for both 2014-04-04 and the preview version 2014-04-04preview has been dropped:\nUsers still running earlier releases of the service operator that are using 2014-04-04 or earlier will need to install an intermediate release in order to upgrade to this one.\nVersion 2019-09-09 - Changing types #  Realizing that some people get deliveries to places that don\u0026rsquo;t appear in any formal database of addresses, in this release the name of the type changes to Location and location coordinates are added:\npackage v20190909 type Location struct { FullAddress string City string Country string PostCode string Latitude double Longitude double } The storage version gets changed in a straightforward way:\npackage v20190909storage type Location struct { PropertyBag City *string Country *string FullAddress *string Latitude *double Longitude *double PostCode *string } Storage Conversion #  The conversion methods need to change as well. If we configure metadata detailing the rename (as we did for properties in version 2015-05-05), we can generate the required conversions automatically:\npackage v20170707 // *** Updated storage version *** import storage \u0026#34;v20190909storage\u0026#34; // ConvertTo converts this Person to the Hub version. func (person *Person) ConvertToStorage(dest storage.Person) error { // ... elided properties ...  if person.MailingAddress != nil { address := \u0026amp;storage.Location{} // ** New Type ***  err := person.MailingAddress.ConvertToStorage(address) if err != nil { return err } dest.MailingAddress = address } if assignable, ok := person.(AssignableToPerson); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } // ConvertToStorage converts this Address to the hub storage version // ** Different parameter type for dest *** func (address *Address) ConvertToStorage(dest storage.Location) error { dest.Street = address.Street dest.City = address.City // *** Interface has been renamed too **  if assignable, ok := person.(AssignableToLocation); ok { err := assignable.AssignTo(dest) if err != nill { return err } } return nil } If we don\u0026rsquo;t include metadata to capture type renames, the conversion can be manually injected by implementing the AssignableToLocation interface.\nVersion Map #  How often do properties change their type? #  At the time of writing, there are 160 version-to-version changes where the type of the property changes. This count excludes cases where an optional property become mandatory, or vice versa.\n"},{"id":68,"href":"/azure-service-operator/reference/servicebus.v1alpha1api20210101preview/","title":"servicebus.azure.com/v1alpha1api20210101preview","section":"References","content":"servicebus.azure.com/v1alpha1api20210101preview  Package v1alpha1api20210101preview contains API Schema definitions for the servicebus v1alpha1api20210101preview API group\n Resource Types:  DictionaryValue_Status   (Appears on:Identity_Status)  Deprecated version of DictionaryValue_Status. Use v1beta20210101preview.DictionaryValue_Status instead\n    Field Description      clientId  string        principalId  string        DictionaryValue_StatusARM   (Appears on:Identity_StatusARM)  Deprecated version of DictionaryValue_Status. Use v1beta20210101preview.DictionaryValue_Status instead\n    Field Description      clientId  string        principalId  string        Encryption   (Appears on:Namespaces_Spec)  Deprecated version of Encryption. Use v1beta20210101preview.Encryption instead\n    Field Description      keySource  EncryptionKeySource         keyVaultProperties  []KeyVaultProperties         requireInfrastructureEncryption  bool        EncryptionARM   (Appears on:Namespaces_Spec_PropertiesARM)  Deprecated version of Encryption. Use v1beta20210101preview.Encryption instead\n    Field Description      keySource  EncryptionKeySource         keyVaultProperties  []KeyVaultPropertiesARM         requireInfrastructureEncryption  bool        EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)  Deprecated version of EncryptionKeySource. Use v1beta20210101preview.EncryptionKeySource instead\n    Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)  Deprecated version of EncryptionStatusKeySource. Use v1beta20210101preview.EncryptionStatusKeySource instead\n    Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    Encryption_Status   (Appears on:SBNamespace_Status)  Deprecated version of Encryption_Status. Use v1beta20210101preview.Encryption_Status instead\n    Field Description      keySource  EncryptionStatusKeySource         keyVaultProperties  []KeyVaultProperties_Status         requireInfrastructureEncryption  bool        Encryption_StatusARM   (Appears on:SBNamespaceProperties_StatusARM)  Deprecated version of Encryption_Status. Use v1beta20210101preview.Encryption_Status instead\n    Field Description      keySource  EncryptionStatusKeySource         keyVaultProperties  []KeyVaultProperties_StatusARM         requireInfrastructureEncryption  bool        EntityStatus_Status (string alias)  (Appears on:SBQueueProperties_StatusARM, SBQueue_Status, SBTopicProperties_StatusARM, SBTopic_Status)  Deprecated version of EntityStatus_Status. Use v1beta20210101preview.EntityStatus_Status instead\n    Value Description   \u0026#34;Active\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;ReceiveDisabled\u0026#34;\n  \u0026#34;Renaming\u0026#34;\n  \u0026#34;Restoring\u0026#34;\n  \u0026#34;SendDisabled\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    Identity   (Appears on:Namespaces_Spec)  Deprecated version of Identity. Use v1beta20210101preview.Identity instead\n    Field Description      type  IdentityType         IdentityARM   (Appears on:Namespaces_SpecARM)  Deprecated version of Identity. Use v1beta20210101preview.Identity instead\n    Field Description      type  IdentityType         IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)  Deprecated version of IdentityStatusType. Use v1beta20210101preview.IdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)  Deprecated version of IdentityType. Use v1beta20210101preview.IdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:SBNamespace_Status)  Deprecated version of Identity_Status. Use v1beta20210101preview.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/servicebus/v1alpha1api20210101preview.DictionaryValue_Status         Identity_StatusARM   (Appears on:SBNamespace_StatusARM)  Deprecated version of Identity_Status. Use v1beta20210101preview.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/servicebus/v1alpha1api20210101preview.DictionaryValue_StatusARM         KeyVaultProperties   (Appears on:Encryption)  Deprecated version of KeyVaultProperties. Use v1beta20210101preview.KeyVaultProperties instead\n    Field Description      identity  UserAssignedIdentityProperties         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Deprecated version of KeyVaultProperties. Use v1beta20210101preview.KeyVaultProperties instead\n    Field Description      identity  UserAssignedIdentityPropertiesARM         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultProperties_Status   (Appears on:Encryption_Status)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210101preview.KeyVaultProperties_Status instead\n    Field Description      identity  UserAssignedIdentityProperties_Status         keyName  string        keyVaultUri  string        keyVersion  string        KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210101preview.KeyVaultProperties_Status instead\n    Field Description      identity  UserAssignedIdentityProperties_StatusARM         keyName  string        keyVaultUri  string        keyVersion  string        MessageCountDetails_Status   (Appears on:SBQueue_Status, SBTopic_Status)  Deprecated version of MessageCountDetails_Status. Use v1beta20210101preview.MessageCountDetails_Status instead\n    Field Description      activeMessageCount  int        deadLetterMessageCount  int        scheduledMessageCount  int        transferDeadLetterMessageCount  int        transferMessageCount  int        MessageCountDetails_StatusARM   (Appears on:SBQueueProperties_StatusARM, SBTopicProperties_StatusARM)  Deprecated version of MessageCountDetails_Status. Use v1beta20210101preview.MessageCountDetails_Status instead\n    Field Description      activeMessageCount  int        deadLetterMessageCount  int        scheduledMessageCount  int        transferDeadLetterMessageCount  int        transferMessageCount  int        Namespace   Deprecated version of Namespace. Use v1beta20210101preview.Namespace instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Namespaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  Encryption         identity  Identity         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  SBSku         tags  map[string]string        zoneRedundant  bool           status  SBNamespace_Status         NamespacesQueue   Deprecated version of NamespacesQueue. Use v1beta20210101preview.NamespacesQueue instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesQueues_Spec          autoDeleteOnIdle  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetteringOnMessageExpiration  bool        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        forwardDeadLetteredMessagesTo  string        forwardTo  string        location  string        lockDuration  string        maxDeliveryCount  int        maxSizeInMegabytes  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool        requiresSession  bool        tags  map[string]string           status  SBQueue_Status         NamespacesQueues_Spec   (Appears on:NamespacesQueue)      Field Description      autoDeleteOnIdle  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetteringOnMessageExpiration  bool        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        forwardDeadLetteredMessagesTo  string        forwardTo  string        location  string        lockDuration  string        maxDeliveryCount  int        maxSizeInMegabytes  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool        requiresSession  bool        tags  map[string]string        NamespacesQueues_SpecARM   Deprecated version of NamespacesQueues_Spec. Use v1beta20210101preview.NamespacesQueues_Spec instead\n    Field Description      location  string        name  string        properties  SBQueuePropertiesARM         tags  map[string]string        NamespacesTopic   Deprecated version of NamespacesTopic. Use v1beta20210101preview.NamespacesTopic instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesTopics_Spec          autoDeleteOnIdle  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        location  string        maxSizeInMegabytes  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool        supportOrdering  bool        tags  map[string]string           status  SBTopic_Status         NamespacesTopics_Spec   (Appears on:NamespacesTopic)      Field Description      autoDeleteOnIdle  string        azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        location  string        maxSizeInMegabytes  int        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool        supportOrdering  bool        tags  map[string]string        NamespacesTopics_SpecARM   Deprecated version of NamespacesTopics_Spec. Use v1beta20210101preview.NamespacesTopics_Spec instead\n    Field Description      location  string        name  string        properties  SBTopicPropertiesARM         tags  map[string]string        Namespaces_Spec   (Appears on:Namespace)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  Encryption         identity  Identity         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  SBSku         tags  map[string]string        zoneRedundant  bool        Namespaces_SpecARM   Deprecated version of Namespaces_Spec. Use v1beta20210101preview.Namespaces_Spec instead\n    Field Description      identity  IdentityARM         location  string        name  string        properties  Namespaces_Spec_PropertiesARM         sku  SBSkuARM         tags  map[string]string        Namespaces_Spec_PropertiesARM   (Appears on:Namespaces_SpecARM)  Deprecated version of Namespaces_Spec_Properties. Use v1beta20210101preview.Namespaces_Spec_Properties instead\n    Field Description      encryption  EncryptionARM         zoneRedundant  bool        PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:SBNamespace_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210101preview.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_Status         PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:SBNamespaceProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210101preview.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_StatusARM         SBNamespaceProperties_StatusARM   (Appears on:SBNamespace_StatusARM)  Deprecated version of SBNamespaceProperties_Status. Use v1beta20210101preview.SBNamespaceProperties_Status instead\n    Field Description      createdAt  string        encryption  Encryption_StatusARM         metricId  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  string        serviceBusEndpoint  string        status  string        updatedAt  string        zoneRedundant  bool        SBNamespace_Status   (Appears on:Namespace)  Deprecated version of SBNamespace_Status. Use v1beta20210101preview.SBNamespace_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string        encryption  Encryption_Status         id  string        identity  Identity_Status         location  string        metricId  string        name  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  string        serviceBusEndpoint  string        sku  SBSku_Status         status  string        systemData  SystemData_Status         tags  map[string]string        type  string        updatedAt  string        zoneRedundant  bool        SBNamespace_StatusARM   Deprecated version of SBNamespace_Status. Use v1beta20210101preview.SBNamespace_Status instead\n    Field Description      id  string        identity  Identity_StatusARM         location  string        name  string        properties  SBNamespaceProperties_StatusARM         sku  SBSku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        SBQueuePropertiesARM   (Appears on:NamespacesQueues_SpecARM)  Deprecated version of SBQueueProperties. Use v1beta20210101preview.SBQueueProperties instead\n    Field Description      autoDeleteOnIdle  string        deadLetteringOnMessageExpiration  bool        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        forwardDeadLetteredMessagesTo  string        forwardTo  string        lockDuration  string        maxDeliveryCount  int        maxSizeInMegabytes  int        requiresDuplicateDetection  bool        requiresSession  bool        SBQueueProperties_StatusARM   (Appears on:SBQueue_StatusARM)  Deprecated version of SBQueueProperties_Status. Use v1beta20210101preview.SBQueueProperties_Status instead\n    Field Description      accessedAt  string        autoDeleteOnIdle  string        countDetails  MessageCountDetails_StatusARM         createdAt  string        deadLetteringOnMessageExpiration  bool        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        forwardDeadLetteredMessagesTo  string        forwardTo  string        lockDuration  string        maxDeliveryCount  int        maxSizeInMegabytes  int        messageCount  int        requiresDuplicateDetection  bool        requiresSession  bool        sizeInBytes  int        status  EntityStatus_Status         updatedAt  string        SBQueue_Status   (Appears on:NamespacesQueue)  Deprecated version of SBQueue_Status. Use v1beta20210101preview.SBQueue_Status instead\n    Field Description      accessedAt  string        autoDeleteOnIdle  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    countDetails  MessageCountDetails_Status         createdAt  string        deadLetteringOnMessageExpiration  bool        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        forwardDeadLetteredMessagesTo  string        forwardTo  string        id  string        lockDuration  string        maxDeliveryCount  int        maxSizeInMegabytes  int        messageCount  int        name  string        requiresDuplicateDetection  bool        requiresSession  bool        sizeInBytes  int        status  EntityStatus_Status         systemData  SystemData_Status         type  string        updatedAt  string        SBQueue_StatusARM   Deprecated version of SBQueue_Status. Use v1beta20210101preview.SBQueue_Status instead\n    Field Description      id  string        name  string        properties  SBQueueProperties_StatusARM         systemData  SystemData_StatusARM         type  string        SBSku   (Appears on:Namespaces_Spec)  Deprecated version of SBSku. Use v1beta20210101preview.SBSku instead\n    Field Description      capacity  int        name  SBSkuName         tier  SBSkuTier         SBSkuARM   (Appears on:Namespaces_SpecARM)  Deprecated version of SBSku. Use v1beta20210101preview.SBSku instead\n    Field Description      capacity  int        name  SBSkuName         tier  SBSkuTier         SBSkuName (string alias)  (Appears on:SBSku, SBSkuARM)  Deprecated version of SBSkuName. Use v1beta20210101preview.SBSkuName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuStatusName (string alias)  (Appears on:SBSku_Status, SBSku_StatusARM)  Deprecated version of SBSkuStatusName. Use v1beta20210101preview.SBSkuStatusName instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuStatusTier (string alias)  (Appears on:SBSku_Status, SBSku_StatusARM)  Deprecated version of SBSkuStatusTier. Use v1beta20210101preview.SBSkuStatusTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuTier (string alias)  (Appears on:SBSku, SBSkuARM)  Deprecated version of SBSkuTier. Use v1beta20210101preview.SBSkuTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSku_Status   (Appears on:SBNamespace_Status)  Deprecated version of SBSku_Status. Use v1beta20210101preview.SBSku_Status instead\n    Field Description      capacity  int        name  SBSkuStatusName         tier  SBSkuStatusTier         SBSku_StatusARM   (Appears on:SBNamespace_StatusARM)  Deprecated version of SBSku_Status. Use v1beta20210101preview.SBSku_Status instead\n    Field Description      capacity  int        name  SBSkuStatusName         tier  SBSkuStatusTier         SBTopicPropertiesARM   (Appears on:NamespacesTopics_SpecARM)  Deprecated version of SBTopicProperties. Use v1beta20210101preview.SBTopicProperties instead\n    Field Description      autoDeleteOnIdle  string        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        maxSizeInMegabytes  int        requiresDuplicateDetection  bool        supportOrdering  bool        SBTopicProperties_StatusARM   (Appears on:SBTopic_StatusARM)  Deprecated version of SBTopicProperties_Status. Use v1beta20210101preview.SBTopicProperties_Status instead\n    Field Description      accessedAt  string        autoDeleteOnIdle  string        countDetails  MessageCountDetails_StatusARM         createdAt  string        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        maxSizeInMegabytes  int        requiresDuplicateDetection  bool        sizeInBytes  int        status  EntityStatus_Status         subscriptionCount  int        supportOrdering  bool        updatedAt  string        SBTopic_Status   (Appears on:NamespacesTopic)  Deprecated version of SBTopic_Status. Use v1beta20210101preview.SBTopic_Status instead\n    Field Description      accessedAt  string        autoDeleteOnIdle  string        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    countDetails  MessageCountDetails_Status         createdAt  string        defaultMessageTimeToLive  string        duplicateDetectionHistoryTimeWindow  string        enableBatchedOperations  bool        enableExpress  bool        enablePartitioning  bool        id  string        maxSizeInMegabytes  int        name  string        requiresDuplicateDetection  bool        sizeInBytes  int        status  EntityStatus_Status         subscriptionCount  int        supportOrdering  bool        systemData  SystemData_Status         type  string        updatedAt  string        SBTopic_StatusARM   Deprecated version of SBTopic_Status. Use v1beta20210101preview.SBTopic_Status instead\n    Field Description      id  string        name  string        properties  SBTopicProperties_StatusARM         systemData  SystemData_StatusARM         type  string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20210101preview.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20210101preview.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbedded, SBNamespace_Status, SBQueue_Status, SBTopic_Status)  Deprecated version of SystemData_Status. Use v1beta20210101preview.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbeddedARM, SBNamespace_StatusARM, SBQueue_StatusARM, SBTopic_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20210101preview.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         UserAssignedIdentityProperties   (Appears on:KeyVaultProperties)  Deprecated version of UserAssignedIdentityProperties. Use v1beta20210101preview.UserAssignedIdentityProperties instead\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference         UserAssignedIdentityPropertiesARM   (Appears on:KeyVaultPropertiesARM)  Deprecated version of UserAssignedIdentityProperties. Use v1beta20210101preview.UserAssignedIdentityProperties instead\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_Status   (Appears on:KeyVaultProperties_Status)  Deprecated version of UserAssignedIdentityProperties_Status. Use v1beta20210101preview.UserAssignedIdentityProperties_Status instead\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_StatusARM   (Appears on:KeyVaultProperties_StatusARM)  Deprecated version of UserAssignedIdentityProperties_Status. Use v1beta20210101preview.UserAssignedIdentityProperties_Status instead\n    Field Description      userAssignedIdentity  string         "},{"id":69,"href":"/azure-service-operator/reference/servicebus.v1beta20210101preview/","title":"servicebus.azure.com/v1beta20210101preview","section":"References","content":"servicebus.azure.com/v1beta20210101preview  Package v1beta20210101preview contains API Schema definitions for the servicebus v1beta20210101preview API group\n Resource Types:  DictionaryValue_Status   (Appears on:Identity_Status)      Field Description      clientId  string    ClientId: Client Id of user assigned identity\n    principalId  string    PrincipalId: Principal Id of user assigned identity\n    DictionaryValue_StatusARM   (Appears on:Identity_StatusARM)      Field Description      clientId  string    ClientId: Client Id of user assigned identity\n    principalId  string    PrincipalId: Principal Id of user assigned identity\n    Encryption   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Encryption\n    Field Description      keySource  EncryptionKeySource     KeySource: Enumerates the possible value of keySource for Encryption.\n    keyVaultProperties  []KeyVaultProperties     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EncryptionARM   (Appears on:Namespaces_Spec_PropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Encryption\n    Field Description      keySource  EncryptionKeySource     KeySource: Enumerates the possible value of keySource for Encryption.\n    keyVaultProperties  []KeyVaultPropertiesARM     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)      Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)      Value Description   \u0026#34;Microsoft.KeyVault\u0026#34;\n    Encryption_Status   (Appears on:SBNamespace_Status)      Field Description      keySource  EncryptionStatusKeySource     KeySource: Enumerates the possible value of keySource for Encryption\n    keyVaultProperties  []KeyVaultProperties_Status     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    Encryption_StatusARM   (Appears on:SBNamespaceProperties_StatusARM)      Field Description      keySource  EncryptionStatusKeySource     KeySource: Enumerates the possible value of keySource for Encryption\n    keyVaultProperties  []KeyVaultProperties_StatusARM     KeyVaultProperties: Properties of KeyVault\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)\n    EntityStatus_Status (string alias)  (Appears on:SBQueueProperties_StatusARM, SBQueue_Status, SBTopicProperties_StatusARM, SBTopic_Status)      Value Description   \u0026#34;Active\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Disabled\u0026#34;\n  \u0026#34;ReceiveDisabled\u0026#34;\n  \u0026#34;Renaming\u0026#34;\n  \u0026#34;Restoring\u0026#34;\n  \u0026#34;SendDisabled\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n    Identity   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: Type of managed service identity.\n    IdentityARM   (Appears on:Namespaces_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: Type of managed service identity.\n    IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned, UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:SBNamespace_Status)      Field Description      principalId  string    PrincipalId: ObjectId from the KeyVault\n    tenantId  string    TenantId: TenantId from the KeyVault\n    type  IdentityStatusType     Type: Type of managed service identity.\n    userAssignedIdentities  map[string]./api/servicebus/v1beta20210101preview.DictionaryValue_Status     UserAssignedIdentities: Properties for User Assigned Identities\n    Identity_StatusARM   (Appears on:SBNamespace_StatusARM)      Field Description      principalId  string    PrincipalId: ObjectId from the KeyVault\n    tenantId  string    TenantId: TenantId from the KeyVault\n    type  IdentityStatusType     Type: Type of managed service identity.\n    userAssignedIdentities  map[string]./api/servicebus/v1beta20210101preview.DictionaryValue_StatusARM     UserAssignedIdentities: Properties for User Assigned Identities\n    KeyVaultProperties   (Appears on:Encryption)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/KeyVaultProperties\n    Field Description      identity  UserAssignedIdentityProperties         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Version of KeyVault\n    KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/KeyVaultProperties\n    Field Description      identity  UserAssignedIdentityPropertiesARM         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Version of KeyVault\n    KeyVaultProperties_Status   (Appears on:Encryption_Status)      Field Description      identity  UserAssignedIdentityProperties_Status         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Version of KeyVault\n    KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)      Field Description      identity  UserAssignedIdentityProperties_StatusARM         keyName  string    KeyName: Name of the Key from KeyVault\n    keyVaultUri  string    KeyVaultUri: Uri of KeyVault\n    keyVersion  string    KeyVersion: Version of KeyVault\n    MessageCountDetails_Status   (Appears on:SBQueue_Status, SBTopic_Status)      Field Description      activeMessageCount  int    ActiveMessageCount: Number of active messages in the queue, topic, or subscription.\n    deadLetterMessageCount  int    DeadLetterMessageCount: Number of messages that are dead lettered.\n    scheduledMessageCount  int    ScheduledMessageCount: Number of scheduled messages.\n    transferDeadLetterMessageCount  int    TransferDeadLetterMessageCount: Number of messages transferred into dead letters.\n    transferMessageCount  int    TransferMessageCount: Number of messages transferred to another queue, topic, or subscription.\n    MessageCountDetails_StatusARM   (Appears on:SBQueueProperties_StatusARM, SBTopicProperties_StatusARM)      Field Description      activeMessageCount  int    ActiveMessageCount: Number of active messages in the queue, topic, or subscription.\n    deadLetterMessageCount  int    DeadLetterMessageCount: Number of messages that are dead lettered.\n    scheduledMessageCount  int    ScheduledMessageCount: Number of scheduled messages.\n    transferDeadLetterMessageCount  int    TransferDeadLetterMessageCount: Number of messages transferred into dead letters.\n    transferMessageCount  int    TransferMessageCount: Number of messages transferred to another queue, topic, or subscription.\n    Namespace   Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  Namespaces_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  Encryption     Encryption: Properties to configure Encryption\n    identity  Identity     Identity: Properties to configure User Assigned Identities for Bring your Own Keys\n    location  string    Location: The Geo-location where the resource lives\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  SBSku     Sku: SKU of the namespace.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.\n       status  SBNamespace_Status         NamespacesQueue   Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces_queues\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesQueues_Spec          autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetteringOnMessageExpiration  bool    DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message expires.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.\n    forwardDeadLetteredMessagesTo  string    ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message\n    forwardTo  string    ForwardTo: Queue/Topic name to forward the messages\n    location  string    Location: Location to deploy resource to\n    lockDuration  string    LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.\n    maxDeliveryCount  int    MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.\n    requiresSession  bool    RequiresSession: A value that indicates whether the queue supports the concept of sessions.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  SBQueue_Status         NamespacesQueuesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-01-01-preview\u0026#34;\n    NamespacesQueues_Spec   (Appears on:NamespacesQueue)      Field Description      autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    deadLetteringOnMessageExpiration  bool    DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message expires.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.\n    forwardDeadLetteredMessagesTo  string    ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message\n    forwardTo  string    ForwardTo: Queue/Topic name to forward the messages\n    location  string    Location: Location to deploy resource to\n    lockDuration  string    LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.\n    maxDeliveryCount  int    MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.\n    requiresSession  bool    RequiresSession: A value that indicates whether the queue supports the concept of sessions.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesQueues_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  SBQueuePropertiesARM     Properties: The Queue Properties definition.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-01-01-preview\u0026#34;\n    NamespacesTopic   Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces_topics\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  NamespacesTopics_Spec          autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.\n    location  string    Location: Location to deploy resource to\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.\n    supportOrdering  bool    SupportOrdering: Value that indicates whether the topic supports ordering.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  SBTopic_Status         NamespacesTopicsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-01-01-preview\u0026#34;\n    NamespacesTopics_Spec   (Appears on:NamespacesTopic)      Field Description      autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.\n    location  string    Location: Location to deploy resource to\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a servicebus.azure.com/Namespace resource\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.\n    supportOrdering  bool    SupportOrdering: Value that indicates whether the topic supports ordering.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    NamespacesTopics_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: Name of the resource\n    properties  SBTopicPropertiesARM     Properties: The Topic Properties definition.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Namespaces_Spec   (Appears on:Namespace)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    encryption  Encryption     Encryption: Properties to configure Encryption\n    identity  Identity     Identity: Properties to configure User Assigned Identities for Bring your Own Keys\n    location  string    Location: The Geo-location where the resource lives\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    sku  SBSku     Sku: SKU of the namespace.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.\n    Namespaces_SpecARM       Field Description      identity  IdentityARM     Identity: Properties to configure User Assigned Identities for Bring your Own Keys\n    location  string    Location: The Geo-location where the resource lives\n    name  string    Name: Name of the resource\n    properties  Namespaces_Spec_PropertiesARM     Properties: Properties of the namespace.\n    sku  SBSkuARM     Sku: SKU of the namespace.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    Namespaces_Spec_PropertiesARM   (Appears on:Namespaces_SpecARM)      Field Description      encryption  EncryptionARM     Encryption: Properties to configure Encryption\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:SBNamespace_Status)      Field Description      id  string    Id: Resource Id\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:SBNamespaceProperties_StatusARM)      Field Description      id  string    Id: Resource Id\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    SBNamespaceProperties_StatusARM   (Appears on:SBNamespace_StatusARM)      Field Description      createdAt  string    CreatedAt: The time the namespace was created\n    encryption  Encryption_StatusARM     Encryption: Properties of BYOK Encryption description\n    metricId  string    MetricId: Identifier for Azure Insights metrics\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  string    ProvisioningState: Provisioning state of the namespace.\n    serviceBusEndpoint  string    ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.\n    status  string    Status: Status of the namespace.\n    updatedAt  string    UpdatedAt: The time the namespace was updated.\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.\n    SBNamespace_Status   (Appears on:Namespace)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    createdAt  string    CreatedAt: The time the namespace was created\n    encryption  Encryption_Status     Encryption: Properties of BYOK Encryption description\n    id  string    Id: Resource Id\n    identity  Identity_Status     Identity: Properties of BYOK Identity description\n    location  string    Location: The Geo-location where the resource lives\n    metricId  string    MetricId: Identifier for Azure Insights metrics\n    name  string    Name: Resource name\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connections.\n    provisioningState  string    ProvisioningState: Provisioning state of the namespace.\n    serviceBusEndpoint  string    ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.\n    sku  SBSku_Status     Sku: Properties of SKU\n    status  string    Status: Status of the namespace.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    updatedAt  string    UpdatedAt: The time the namespace was updated.\n    zoneRedundant  bool    ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.\n    SBNamespace_StatusARM       Field Description      id  string    Id: Resource Id\n    identity  Identity_StatusARM     Identity: Properties of BYOK Identity description\n    location  string    Location: The Geo-location where the resource lives\n    name  string    Name: Resource name\n    properties  SBNamespaceProperties_StatusARM     Properties: Properties of the namespace.\n    sku  SBSku_StatusARM     Sku: Properties of SKU\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    tags  map[string]string    Tags: Resource tags\n    type  string    Type: Resource type\n    SBQueuePropertiesARM   (Appears on:NamespacesQueues_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBQueueProperties\n    Field Description      autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.\n    deadLetteringOnMessageExpiration  bool    DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message expires.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.\n    forwardDeadLetteredMessagesTo  string    ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message\n    forwardTo  string    ForwardTo: Queue/Topic name to forward the messages\n    lockDuration  string    LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.\n    maxDeliveryCount  int    MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.\n    requiresSession  bool    RequiresSession: A value that indicates whether the queue supports the concept of sessions.\n    SBQueueProperties_StatusARM   (Appears on:SBQueue_StatusARM)      Field Description      accessedAt  string    AccessedAt: Last time a message was sent, or the last time there was a receive request to this queue.\n    autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.\n    countDetails  MessageCountDetails_StatusARM     CountDetails: Message Count Details.\n    createdAt  string    CreatedAt: The exact time the message was created.\n    deadLetteringOnMessageExpiration  bool    DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message expires.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.\n    forwardDeadLetteredMessagesTo  string    ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message\n    forwardTo  string    ForwardTo: Queue/Topic name to forward the messages\n    lockDuration  string    LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.\n    maxDeliveryCount  int    MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.\n    messageCount  int    MessageCount: The number of messages in the queue.\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.\n    requiresSession  bool    RequiresSession: A value that indicates whether the queue supports the concept of sessions.\n    sizeInBytes  int    SizeInBytes: The size of the queue, in bytes.\n    status  EntityStatus_Status     Status: Enumerates the possible values for the status of a messaging entity.\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    SBQueue_Status   (Appears on:NamespacesQueue)      Field Description      accessedAt  string    AccessedAt: Last time a message was sent, or the last time there was a receive request to this queue.\n    autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    countDetails  MessageCountDetails_Status     CountDetails: Message Count Details.\n    createdAt  string    CreatedAt: The exact time the message was created.\n    deadLetteringOnMessageExpiration  bool    DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message expires.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.\n    forwardDeadLetteredMessagesTo  string    ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message\n    forwardTo  string    ForwardTo: Queue/Topic name to forward the messages\n    id  string    Id: Resource Id\n    lockDuration  string    LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.\n    maxDeliveryCount  int    MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.\n    messageCount  int    MessageCount: The number of messages in the queue.\n    name  string    Name: Resource name\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.\n    requiresSession  bool    RequiresSession: A value that indicates whether the queue supports the concept of sessions.\n    sizeInBytes  int    SizeInBytes: The size of the queue, in bytes.\n    status  EntityStatus_Status     Status: Enumerates the possible values for the status of a messaging entity.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    type  string    Type: Resource type\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    SBQueue_StatusARM       Field Description      id  string    Id: Resource Id\n    name  string    Name: Resource name\n    properties  SBQueueProperties_StatusARM     Properties: Queue Properties\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    type  string    Type: Resource type\n    SBSku   (Appears on:Namespaces_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBSku\n    Field Description      capacity  int    Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.\n    name  SBSkuName     Name: Name of this SKU.\n    tier  SBSkuTier     Tier: The billing tier of this particular SKU.\n    SBSkuARM   (Appears on:Namespaces_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBSku\n    Field Description      capacity  int    Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.\n    name  SBSkuName     Name: Name of this SKU.\n    tier  SBSkuTier     Tier: The billing tier of this particular SKU.\n    SBSkuName (string alias)  (Appears on:SBSku, SBSkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuStatusName (string alias)  (Appears on:SBSku_Status, SBSku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuStatusTier (string alias)  (Appears on:SBSku_Status, SBSku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSkuTier (string alias)  (Appears on:SBSku, SBSkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SBSku_Status   (Appears on:SBNamespace_Status)      Field Description      capacity  int    Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.\n    name  SBSkuStatusName     Name: Name of this SKU.\n    tier  SBSkuStatusTier     Tier: The billing tier of this particular SKU.\n    SBSku_StatusARM   (Appears on:SBNamespace_StatusARM)      Field Description      capacity  int    Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.\n    name  SBSkuStatusName     Name: Name of this SKU.\n    tier  SBSkuStatusTier     Tier: The billing tier of this particular SKU.\n    SBTopicPropertiesARM   (Appears on:NamespacesTopics_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBTopicProperties\n    Field Description      autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.\n    supportOrdering  bool    SupportOrdering: Value that indicates whether the topic supports ordering.\n    SBTopicProperties_StatusARM   (Appears on:SBTopic_StatusARM)      Field Description      accessedAt  string    AccessedAt: Last time the message was sent, or a request was received, for this topic.\n    autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.\n    countDetails  MessageCountDetails_StatusARM     CountDetails: Message count details\n    createdAt  string    CreatedAt: Exact time the message was created.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.\n    sizeInBytes  int    SizeInBytes: Size of the topic, in bytes.\n    status  EntityStatus_Status     Status: Enumerates the possible values for the status of a messaging entity.\n    subscriptionCount  int    SubscriptionCount: Number of subscriptions.\n    supportOrdering  bool    SupportOrdering: Value that indicates whether the topic supports ordering.\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    SBTopic_Status   (Appears on:NamespacesTopic)      Field Description      accessedAt  string    AccessedAt: Last time the message was sent, or a request was received, for this topic.\n    autoDeleteOnIdle  string    AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    countDetails  MessageCountDetails_Status     CountDetails: Message count details\n    createdAt  string    CreatedAt: Exact time the message was created.\n    defaultMessageTimeToLive  string    DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.\n    duplicateDetectionHistoryTimeWindow  string    DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.\n    enableBatchedOperations  bool    EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.\n    enableExpress  bool    EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.\n    enablePartitioning  bool    EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.\n    id  string    Id: Resource Id\n    maxSizeInMegabytes  int    MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.\n    name  string    Name: Resource name\n    requiresDuplicateDetection  bool    RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.\n    sizeInBytes  int    SizeInBytes: Size of the topic, in bytes.\n    status  EntityStatus_Status     Status: Enumerates the possible values for the status of a messaging entity.\n    subscriptionCount  int    SubscriptionCount: Number of subscriptions.\n    supportOrdering  bool    SupportOrdering: Value that indicates whether the topic supports ordering.\n    systemData  SystemData_Status     SystemData: The system meta data relating to this resource.\n    type  string    Type: Resource type\n    updatedAt  string    UpdatedAt: The exact time the message was updated.\n    SBTopic_StatusARM       Field Description      id  string    Id: Resource Id\n    name  string    Name: Resource name\n    properties  SBTopicProperties_StatusARM     Properties: Properties of topic resource.\n    systemData  SystemData_StatusARM     SystemData: The system meta data relating to this resource.\n    type  string    Type: Resource type\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbedded, SBNamespace_Status, SBQueue_Status, SBTopic_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The type of identity that last modified the resource.\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SubResourceEmbeddedARM, SBNamespace_StatusARM, SBQueue_StatusARM, SBTopic_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The type of identity that last modified the resource.\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    UserAssignedIdentityProperties   (Appears on:KeyVaultProperties)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/UserAssignedIdentityProperties\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference     UserAssignedIdentityReference: ARM ID of user Identity selected for encryption\n    UserAssignedIdentityPropertiesARM   (Appears on:KeyVaultPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/UserAssignedIdentityProperties\n    Field Description      userAssignedIdentity  string        UserAssignedIdentityProperties_Status   (Appears on:KeyVaultProperties_Status)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: ARM ID of user Identity selected for encryption\n    UserAssignedIdentityProperties_StatusARM   (Appears on:KeyVaultProperties_StatusARM)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: ARM ID of user Identity selected for encryption\n     "},{"id":70,"href":"/azure-service-operator/reference/signalrservice.v1alpha1api20211001/","title":"signalrservice.azure.com/v1alpha1api20211001","section":"References","content":"signalrservice.azure.com/v1alpha1api20211001  Package v1alpha1api20211001 contains API Schema definitions for the signalrservice v1alpha1api20211001 API group\n Resource Types:  ACLAction_Status (string alias)  (Appears on:SignalRNetworkACLs_Status, SignalRNetworkACLs_StatusARM)  Deprecated version of ACLAction_Status. Use v1beta20211001.ACLAction_Status instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    FeatureFlags_Status (string alias)  (Appears on:SignalRFeature_Status, SignalRFeature_StatusARM)  Deprecated version of FeatureFlags_Status. Use v1beta20211001.FeatureFlags_Status instead\n    Value Description   \u0026#34;EnableConnectivityLogs\u0026#34;\n  \u0026#34;EnableLiveTrace\u0026#34;\n  \u0026#34;EnableMessagingLogs\u0026#34;\n  \u0026#34;ServiceMode\u0026#34;\n    ManagedIdentity   (Appears on:SignalR_Spec)  Deprecated version of ManagedIdentity. Use v1beta20211001.ManagedIdentity instead\n    Field Description      type  ManagedIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         ManagedIdentityARM   (Appears on:SignalR_SpecARM)  Deprecated version of ManagedIdentity. Use v1beta20211001.ManagedIdentity instead\n    Field Description      type  ManagedIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON         ManagedIdentitySettings   (Appears on:UpstreamAuthSettings)  Deprecated version of ManagedIdentitySettings. Use v1beta20211001.ManagedIdentitySettings instead\n    Field Description      resource  string        ManagedIdentitySettingsARM   (Appears on:UpstreamAuthSettingsARM)  Deprecated version of ManagedIdentitySettings. Use v1beta20211001.ManagedIdentitySettings instead\n    Field Description      resource  string        ManagedIdentitySettings_Status   (Appears on:UpstreamAuthSettings_Status)  Deprecated version of ManagedIdentitySettings_Status. Use v1beta20211001.ManagedIdentitySettings_Status instead\n    Field Description      resource  string        ManagedIdentitySettings_StatusARM   (Appears on:UpstreamAuthSettings_StatusARM)  Deprecated version of ManagedIdentitySettings_Status. Use v1beta20211001.ManagedIdentitySettings_Status instead\n    Field Description      resource  string        ManagedIdentityType (string alias)  (Appears on:ManagedIdentity, ManagedIdentityARM)  Deprecated version of ManagedIdentityType. Use v1beta20211001.ManagedIdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedIdentityType_Status (string alias)  (Appears on:ManagedIdentity_Status, ManagedIdentity_StatusARM)  Deprecated version of ManagedIdentityType_Status. Use v1beta20211001.ManagedIdentityType_Status instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedIdentity_Status   (Appears on:SignalRResource_Status)  Deprecated version of ManagedIdentity_Status. Use v1beta20211001.ManagedIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedIdentityType_Status         userAssignedIdentities  map[string]./api/signalrservice/v1alpha1api20211001.UserAssignedIdentityProperty_Status         ManagedIdentity_StatusARM   (Appears on:SignalRResource_StatusARM)  Deprecated version of ManagedIdentity_Status. Use v1beta20211001.ManagedIdentity_Status instead\n    Field Description      principalId  string        tenantId  string        type  ManagedIdentityType_Status         userAssignedIdentities  map[string]./api/signalrservice/v1alpha1api20211001.UserAssignedIdentityProperty_StatusARM         NetworkACL   (Appears on:SignalRNetworkACLs)  Deprecated version of NetworkACL. Use v1beta20211001.NetworkACL instead\n    Field Description      allow  []NetworkACLAllow         deny  []NetworkACLDeny         NetworkACLARM   (Appears on:SignalRNetworkACLsARM)  Deprecated version of NetworkACL. Use v1beta20211001.NetworkACL instead\n    Field Description      allow  []NetworkACLAllow         deny  []NetworkACLDeny         NetworkACLAllow (string alias)  (Appears on:NetworkACL, NetworkACLARM)  Deprecated version of NetworkACLAllow. Use v1beta20211001.NetworkACLAllow instead\n    Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    NetworkACLDeny (string alias)  (Appears on:NetworkACL, NetworkACLARM)  Deprecated version of NetworkACLDeny. Use v1beta20211001.NetworkACLDeny instead\n    Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    NetworkACL_Status   (Appears on:SignalRNetworkACLs_Status)  Deprecated version of NetworkACL_Status. Use v1beta20211001.NetworkACL_Status instead\n    Field Description      allow  []SignalRRequestType_Status         deny  []SignalRRequestType_Status         NetworkACL_StatusARM   (Appears on:SignalRNetworkACLs_StatusARM)  Deprecated version of NetworkACL_Status. Use v1beta20211001.NetworkACL_Status instead\n    Field Description      allow  []SignalRRequestType_Status         deny  []SignalRRequestType_Status         PrivateEndpointACL   (Appears on:SignalRNetworkACLs)  Deprecated version of PrivateEndpointACL. Use v1beta20211001.PrivateEndpointACL instead\n    Field Description      allow  []PrivateEndpointACLAllow         deny  []PrivateEndpointACLDeny         name  string        PrivateEndpointACLARM   (Appears on:SignalRNetworkACLsARM)  Deprecated version of PrivateEndpointACL. Use v1beta20211001.PrivateEndpointACL instead\n    Field Description      allow  []PrivateEndpointACLAllow         deny  []PrivateEndpointACLDeny         name  string        PrivateEndpointACLAllow (string alias)  (Appears on:PrivateEndpointACL, PrivateEndpointACLARM)  Deprecated version of PrivateEndpointACLAllow. Use v1beta20211001.PrivateEndpointACLAllow instead\n    Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    PrivateEndpointACLDeny (string alias)  (Appears on:PrivateEndpointACL, PrivateEndpointACLARM)  Deprecated version of PrivateEndpointACLDeny. Use v1beta20211001.PrivateEndpointACLDeny instead\n    Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    PrivateEndpointACL_Status   (Appears on:SignalRNetworkACLs_Status)  Deprecated version of PrivateEndpointACL_Status. Use v1beta20211001.PrivateEndpointACL_Status instead\n    Field Description      allow  []SignalRRequestType_Status         deny  []SignalRRequestType_Status         name  string        PrivateEndpointACL_StatusARM   (Appears on:SignalRNetworkACLs_StatusARM)  Deprecated version of PrivateEndpointACL_Status. Use v1beta20211001.PrivateEndpointACL_Status instead\n    Field Description      allow  []SignalRRequestType_Status         deny  []SignalRRequestType_Status         name  string        PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded   (Appears on:SignalRResource_Status)  Deprecated version of PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded. Use v1beta20211001.PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_Status         PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded. Use v1beta20211001.PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_StatusARM         ProvisioningState_Status (string alias)  (Appears on:SignalRProperties_StatusARM, SignalRResource_Status)  Deprecated version of ProvisioningState_Status. Use v1beta20211001.ProvisioningState_Status instead\n    Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Moving\u0026#34;\n  \u0026#34;Running\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ResourceLogCategory   (Appears on:ResourceLogConfiguration)  Deprecated version of ResourceLogCategory. Use v1beta20211001.ResourceLogCategory instead\n    Field Description      enabled  string        name  string        ResourceLogCategoryARM   (Appears on:ResourceLogConfigurationARM)  Deprecated version of ResourceLogCategory. Use v1beta20211001.ResourceLogCategory instead\n    Field Description      enabled  string        name  string        ResourceLogCategory_Status   (Appears on:ResourceLogConfiguration_Status)  Deprecated version of ResourceLogCategory_Status. Use v1beta20211001.ResourceLogCategory_Status instead\n    Field Description      enabled  string        name  string        ResourceLogCategory_StatusARM   (Appears on:ResourceLogConfiguration_StatusARM)  Deprecated version of ResourceLogCategory_Status. Use v1beta20211001.ResourceLogCategory_Status instead\n    Field Description      enabled  string        name  string        ResourceLogConfiguration   (Appears on:SignalR_Spec)  Deprecated version of ResourceLogConfiguration. Use v1beta20211001.ResourceLogConfiguration instead\n    Field Description      categories  []ResourceLogCategory         ResourceLogConfigurationARM   (Appears on:SignalRPropertiesARM)  Deprecated version of ResourceLogConfiguration. Use v1beta20211001.ResourceLogConfiguration instead\n    Field Description      categories  []ResourceLogCategoryARM         ResourceLogConfiguration_Status   (Appears on:SignalRResource_Status)  Deprecated version of ResourceLogConfiguration_Status. Use v1beta20211001.ResourceLogConfiguration_Status instead\n    Field Description      categories  []ResourceLogCategory_Status         ResourceLogConfiguration_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of ResourceLogConfiguration_Status. Use v1beta20211001.ResourceLogConfiguration_Status instead\n    Field Description      categories  []ResourceLogCategory_StatusARM         ResourceSku   (Appears on:SignalR_Spec)  Deprecated version of ResourceSku. Use v1beta20211001.ResourceSku instead\n    Field Description      capacity  int        name  string        tier  ResourceSkuTier         ResourceSkuARM   (Appears on:SignalR_SpecARM)  Deprecated version of ResourceSku. Use v1beta20211001.ResourceSku instead\n    Field Description      capacity  int        name  string        tier  ResourceSkuTier         ResourceSkuTier (string alias)  (Appears on:ResourceSku, ResourceSkuARM)  Deprecated version of ResourceSkuTier. Use v1beta20211001.ResourceSkuTier instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    ResourceSku_Status   (Appears on:SignalRResource_Status)  Deprecated version of ResourceSku_Status. Use v1beta20211001.ResourceSku_Status instead\n    Field Description      capacity  int        family  string        name  string        size  string        tier  SignalRSkuTier_Status         ResourceSku_StatusARM   (Appears on:SignalRResource_StatusARM)  Deprecated version of ResourceSku_Status. Use v1beta20211001.ResourceSku_Status instead\n    Field Description      capacity  int        family  string        name  string        size  string        tier  SignalRSkuTier_Status         ServerlessUpstreamSettings   (Appears on:SignalR_Spec)  Deprecated version of ServerlessUpstreamSettings. Use v1beta20211001.ServerlessUpstreamSettings instead\n    Field Description      templates  []UpstreamTemplate         ServerlessUpstreamSettingsARM   (Appears on:SignalRPropertiesARM)  Deprecated version of ServerlessUpstreamSettings. Use v1beta20211001.ServerlessUpstreamSettings instead\n    Field Description      templates  []UpstreamTemplateARM         ServerlessUpstreamSettings_Status   (Appears on:SignalRResource_Status)  Deprecated version of ServerlessUpstreamSettings_Status. Use v1beta20211001.ServerlessUpstreamSettings_Status instead\n    Field Description      templates  []UpstreamTemplate_Status         ServerlessUpstreamSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of ServerlessUpstreamSettings_Status. Use v1beta20211001.ServerlessUpstreamSettings_Status instead\n    Field Description      templates  []UpstreamTemplate_StatusARM         ServiceKind_Status (string alias)  (Appears on:SignalRResource_Status, SignalRResource_StatusARM)  Deprecated version of ServiceKind_Status. Use v1beta20211001.ServiceKind_Status instead\n    Value Description   \u0026#34;RawWebSockets\u0026#34;\n  \u0026#34;SignalR\u0026#34;\n    SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded   (Appears on:SignalRResource_Status)  Deprecated version of SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded. Use v1beta20211001.SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_Status         SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded. Use v1beta20211001.SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded instead\n    Field Description      id  string        systemData  SystemData_StatusARM         SignalR   Deprecated version of SignalR. Use v1beta20211001.SignalR instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  SignalR_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    cors  SignalRCorsSettings         disableAadAuth  bool        disableLocalAuth  bool        features  []SignalRFeature         identity  ManagedIdentity         kind  SignalRSpecKind         location  string        networkACLs  SignalRNetworkACLs         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  string        resourceLogConfiguration  ResourceLogConfiguration         sku  ResourceSku         tags  map[string]string        tls  SignalRTlsSettings         upstream  ServerlessUpstreamSettings            status  SignalRResource_Status         SignalRCorsSettings   (Appears on:SignalR_Spec)  Deprecated version of SignalRCorsSettings. Use v1beta20211001.SignalRCorsSettings instead\n    Field Description      allowedOrigins  []string        SignalRCorsSettingsARM   (Appears on:SignalRPropertiesARM)  Deprecated version of SignalRCorsSettings. Use v1beta20211001.SignalRCorsSettings instead\n    Field Description      allowedOrigins  []string        SignalRCorsSettings_Status   (Appears on:SignalRResource_Status)  Deprecated version of SignalRCorsSettings_Status. Use v1beta20211001.SignalRCorsSettings_Status instead\n    Field Description      allowedOrigins  []string        SignalRCorsSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of SignalRCorsSettings_Status. Use v1beta20211001.SignalRCorsSettings_Status instead\n    Field Description      allowedOrigins  []string        SignalRFeature   (Appears on:SignalR_Spec)  Deprecated version of SignalRFeature. Use v1beta20211001.SignalRFeature instead\n    Field Description      flag  SignalRFeatureFlag         properties  map[string]string        value  string        SignalRFeatureARM   (Appears on:SignalRPropertiesARM)  Deprecated version of SignalRFeature. Use v1beta20211001.SignalRFeature instead\n    Field Description      flag  SignalRFeatureFlag         properties  map[string]string        value  string        SignalRFeatureFlag (string alias)  (Appears on:SignalRFeature, SignalRFeatureARM)  Deprecated version of SignalRFeatureFlag. Use v1beta20211001.SignalRFeatureFlag instead\n    Value Description   \u0026#34;EnableConnectivityLogs\u0026#34;\n  \u0026#34;EnableLiveTrace\u0026#34;\n  \u0026#34;EnableMessagingLogs\u0026#34;\n  \u0026#34;ServiceMode\u0026#34;\n    SignalRFeature_Status   (Appears on:SignalRResource_Status)  Deprecated version of SignalRFeature_Status. Use v1beta20211001.SignalRFeature_Status instead\n    Field Description      flag  FeatureFlags_Status         properties  map[string]string        value  string        SignalRFeature_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of SignalRFeature_Status. Use v1beta20211001.SignalRFeature_Status instead\n    Field Description      flag  FeatureFlags_Status         properties  map[string]string        value  string        SignalRNetworkACLs   (Appears on:SignalR_Spec)  Deprecated version of SignalRNetworkACLs. Use v1beta20211001.SignalRNetworkACLs instead\n    Field Description      defaultAction  SignalRNetworkACLsDefaultAction         privateEndpoints  []PrivateEndpointACL         publicNetwork  NetworkACL         SignalRNetworkACLsARM   (Appears on:SignalRPropertiesARM)  Deprecated version of SignalRNetworkACLs. Use v1beta20211001.SignalRNetworkACLs instead\n    Field Description      defaultAction  SignalRNetworkACLsDefaultAction         privateEndpoints  []PrivateEndpointACLARM         publicNetwork  NetworkACLARM         SignalRNetworkACLsDefaultAction (string alias)  (Appears on:SignalRNetworkACLs, SignalRNetworkACLsARM)  Deprecated version of SignalRNetworkACLsDefaultAction. Use v1beta20211001.SignalRNetworkACLsDefaultAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SignalRNetworkACLs_Status   (Appears on:SignalRResource_Status)  Deprecated version of SignalRNetworkACLs_Status. Use v1beta20211001.SignalRNetworkACLs_Status instead\n    Field Description      defaultAction  ACLAction_Status         privateEndpoints  []PrivateEndpointACL_Status         publicNetwork  NetworkACL_Status         SignalRNetworkACLs_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of SignalRNetworkACLs_Status. Use v1beta20211001.SignalRNetworkACLs_Status instead\n    Field Description      defaultAction  ACLAction_Status         privateEndpoints  []PrivateEndpointACL_StatusARM         publicNetwork  NetworkACL_StatusARM         SignalRPropertiesARM   (Appears on:SignalR_SpecARM)  Deprecated version of SignalRProperties. Use v1beta20211001.SignalRProperties instead\n    Field Description      cors  SignalRCorsSettingsARM         disableAadAuth  bool        disableLocalAuth  bool        features  []SignalRFeatureARM         networkACLs  SignalRNetworkACLsARM         publicNetworkAccess  string        resourceLogConfiguration  ResourceLogConfigurationARM         tls  SignalRTlsSettingsARM         upstream  ServerlessUpstreamSettingsARM         SignalRProperties_StatusARM   (Appears on:SignalRResource_StatusARM)  Deprecated version of SignalRProperties_Status. Use v1beta20211001.SignalRProperties_Status instead\n    Field Description      cors  SignalRCorsSettings_StatusARM         disableAadAuth  bool        disableLocalAuth  bool        externalIP  string        features  []SignalRFeature_StatusARM         hostName  string        hostNamePrefix  string        networkACLs  SignalRNetworkACLs_StatusARM         privateEndpointConnections  []PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM         provisioningState  ProvisioningState_Status         publicNetworkAccess  string        publicPort  int        resourceLogConfiguration  ResourceLogConfiguration_StatusARM         serverPort  int        sharedPrivateLinkResources  []SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM         tls  SignalRTlsSettings_StatusARM         upstream  ServerlessUpstreamSettings_StatusARM         version  string        SignalRRequestType_Status (string alias)  (Appears on:NetworkACL_Status, NetworkACL_StatusARM, PrivateEndpointACL_Status, PrivateEndpointACL_StatusARM)  Deprecated version of SignalRRequestType_Status. Use v1beta20211001.SignalRRequestType_Status instead\n    Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    SignalRResource_Status   (Appears on:SignalR)  Deprecated version of SignalRResource_Status. Use v1beta20211001.SignalRResource_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    cors  SignalRCorsSettings_Status         disableAadAuth  bool        disableLocalAuth  bool        externalIP  string        features  []SignalRFeature_Status         hostName  string        hostNamePrefix  string        id  string        identity  ManagedIdentity_Status         kind  ServiceKind_Status         location  string        name  string        networkACLs  SignalRNetworkACLs_Status         privateEndpointConnections  []PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded         provisioningState  ProvisioningState_Status         publicNetworkAccess  string        publicPort  int        resourceLogConfiguration  ResourceLogConfiguration_Status         serverPort  int        sharedPrivateLinkResources  []SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded         sku  ResourceSku_Status         systemData  SystemData_Status         tags  map[string]string        tls  SignalRTlsSettings_Status         type  string        upstream  ServerlessUpstreamSettings_Status         version  string        SignalRResource_StatusARM   Deprecated version of SignalRResource_Status. Use v1beta20211001.SignalRResource_Status instead\n    Field Description      id  string        identity  ManagedIdentity_StatusARM         kind  ServiceKind_Status         location  string        name  string        properties  SignalRProperties_StatusARM         sku  ResourceSku_StatusARM         systemData  SystemData_StatusARM         tags  map[string]string        type  string        SignalRSkuTier_Status (string alias)  (Appears on:ResourceSku_Status, ResourceSku_StatusARM)  Deprecated version of SignalRSkuTier_Status. Use v1beta20211001.SignalRSkuTier_Status instead\n    Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SignalRSpecKind (string alias)  (Appears on:SignalR_Spec, SignalR_SpecARM)  Deprecated version of SignalRSpecKind. Use v1beta20211001.SignalRSpecKind instead\n    Value Description   \u0026#34;RawWebSockets\u0026#34;\n  \u0026#34;SignalR\u0026#34;\n    SignalRTlsSettings   (Appears on:SignalR_Spec)  Deprecated version of SignalRTlsSettings. Use v1beta20211001.SignalRTlsSettings instead\n    Field Description      clientCertEnabled  bool        SignalRTlsSettingsARM   (Appears on:SignalRPropertiesARM)  Deprecated version of SignalRTlsSettings. Use v1beta20211001.SignalRTlsSettings instead\n    Field Description      clientCertEnabled  bool        SignalRTlsSettings_Status   (Appears on:SignalRResource_Status)  Deprecated version of SignalRTlsSettings_Status. Use v1beta20211001.SignalRTlsSettings_Status instead\n    Field Description      clientCertEnabled  bool        SignalRTlsSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)  Deprecated version of SignalRTlsSettings_Status. Use v1beta20211001.SignalRTlsSettings_Status instead\n    Field Description      clientCertEnabled  bool        SignalR_Spec   (Appears on:SignalR)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    cors  SignalRCorsSettings         disableAadAuth  bool        disableLocalAuth  bool        features  []SignalRFeature         identity  ManagedIdentity         kind  SignalRSpecKind         location  string        networkACLs  SignalRNetworkACLs         owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  string        resourceLogConfiguration  ResourceLogConfiguration         sku  ResourceSku         tags  map[string]string        tls  SignalRTlsSettings         upstream  ServerlessUpstreamSettings         SignalR_SpecARM   Deprecated version of SignalR_Spec. Use v1beta20211001.SignalR_Spec instead\n    Field Description      identity  ManagedIdentityARM         kind  SignalRSpecKind         location  string        name  string        properties  SignalRPropertiesARM         sku  ResourceSkuARM         tags  map[string]string        SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusCreatedByType. Use v1beta20211001.SystemDataStatusCreatedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)  Deprecated version of SystemDataStatusLastModifiedByType. Use v1beta20211001.SystemDataStatusLastModifiedByType instead\n    Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded, SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded, SignalRResource_Status)  Deprecated version of SystemData_Status. Use v1beta20211001.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM, SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM, SignalRResource_StatusARM)  Deprecated version of SystemData_Status. Use v1beta20211001.SystemData_Status instead\n    Field Description      createdAt  string        createdBy  string        createdByType  SystemDataStatusCreatedByType         lastModifiedAt  string        lastModifiedBy  string        lastModifiedByType  SystemDataStatusLastModifiedByType         UpstreamAuthSettings   (Appears on:UpstreamTemplate)  Deprecated version of UpstreamAuthSettings. Use v1beta20211001.UpstreamAuthSettings instead\n    Field Description      managedIdentity  ManagedIdentitySettings         type  UpstreamAuthSettingsType         UpstreamAuthSettingsARM   (Appears on:UpstreamTemplateARM)  Deprecated version of UpstreamAuthSettings. Use v1beta20211001.UpstreamAuthSettings instead\n    Field Description      managedIdentity  ManagedIdentitySettingsARM         type  UpstreamAuthSettingsType         UpstreamAuthSettingsType (string alias)  (Appears on:UpstreamAuthSettings, UpstreamAuthSettingsARM)  Deprecated version of UpstreamAuthSettingsType. Use v1beta20211001.UpstreamAuthSettingsType instead\n    Value Description   \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;None\u0026#34;\n    UpstreamAuthSettings_Status   (Appears on:UpstreamTemplate_Status)  Deprecated version of UpstreamAuthSettings_Status. Use v1beta20211001.UpstreamAuthSettings_Status instead\n    Field Description      managedIdentity  ManagedIdentitySettings_Status         type  UpstreamAuthType_Status         UpstreamAuthSettings_StatusARM   (Appears on:UpstreamTemplate_StatusARM)  Deprecated version of UpstreamAuthSettings_Status. Use v1beta20211001.UpstreamAuthSettings_Status instead\n    Field Description      managedIdentity  ManagedIdentitySettings_StatusARM         type  UpstreamAuthType_Status         UpstreamAuthType_Status (string alias)  (Appears on:UpstreamAuthSettings_Status, UpstreamAuthSettings_StatusARM)  Deprecated version of UpstreamAuthType_Status. Use v1beta20211001.UpstreamAuthType_Status instead\n    Value Description   \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;None\u0026#34;\n    UpstreamTemplate   (Appears on:ServerlessUpstreamSettings)  Deprecated version of UpstreamTemplate. Use v1beta20211001.UpstreamTemplate instead\n    Field Description      auth  UpstreamAuthSettings         categoryPattern  string        eventPattern  string        hubPattern  string        urlTemplate  string        UpstreamTemplateARM   (Appears on:ServerlessUpstreamSettingsARM)  Deprecated version of UpstreamTemplate. Use v1beta20211001.UpstreamTemplate instead\n    Field Description      auth  UpstreamAuthSettingsARM         categoryPattern  string        eventPattern  string        hubPattern  string        urlTemplate  string        UpstreamTemplate_Status   (Appears on:ServerlessUpstreamSettings_Status)  Deprecated version of UpstreamTemplate_Status. Use v1beta20211001.UpstreamTemplate_Status instead\n    Field Description      auth  UpstreamAuthSettings_Status         categoryPattern  string        eventPattern  string        hubPattern  string        urlTemplate  string        UpstreamTemplate_StatusARM   (Appears on:ServerlessUpstreamSettings_StatusARM)  Deprecated version of UpstreamTemplate_Status. Use v1beta20211001.UpstreamTemplate_Status instead\n    Field Description      auth  UpstreamAuthSettings_StatusARM         categoryPattern  string        eventPattern  string        hubPattern  string        urlTemplate  string        UserAssignedIdentityProperty_Status   (Appears on:ManagedIdentity_Status)  Deprecated version of UserAssignedIdentityProperty_Status. Use v1beta20211001.UserAssignedIdentityProperty_Status instead\n    Field Description      clientId  string        principalId  string        UserAssignedIdentityProperty_StatusARM   (Appears on:ManagedIdentity_StatusARM)  Deprecated version of UserAssignedIdentityProperty_Status. Use v1beta20211001.UserAssignedIdentityProperty_Status instead\n    Field Description      clientId  string        principalId  string         "},{"id":71,"href":"/azure-service-operator/reference/signalrservice.v1beta20211001/","title":"signalrservice.azure.com/v1beta20211001","section":"References","content":"signalrservice.azure.com/v1beta20211001  Package v1beta20211001 contains API Schema definitions for the signalrservice v1beta20211001 API group\n Resource Types:  ACLAction_Status (string alias)  (Appears on:SignalRNetworkACLs_Status, SignalRNetworkACLs_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    FeatureFlags_Status (string alias)  (Appears on:SignalRFeature_Status, SignalRFeature_StatusARM)      Value Description   \u0026#34;EnableConnectivityLogs\u0026#34;\n  \u0026#34;EnableLiveTrace\u0026#34;\n  \u0026#34;EnableMessagingLogs\u0026#34;\n  \u0026#34;ServiceMode\u0026#34;\n    ManagedIdentity   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ManagedIdentity\n    Field Description      type  ManagedIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: Get or set the user assigned identities\n    ManagedIdentityARM   (Appears on:SignalR_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ManagedIdentity\n    Field Description      type  ManagedIdentityType         userAssignedIdentities  map[string]k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1.JSON     UserAssignedIdentities: Get or set the user assigned identities\n    ManagedIdentitySettings   (Appears on:UpstreamAuthSettings)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ManagedIdentitySettings\n    Field Description      resource  string    Resource: The Resource indicating the App ID URI of the target resource. It also appears in the aud (audience) claim of the issued token.\n    ManagedIdentitySettingsARM   (Appears on:UpstreamAuthSettingsARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ManagedIdentitySettings\n    Field Description      resource  string    Resource: The Resource indicating the App ID URI of the target resource. It also appears in the aud (audience) claim of the issued token.\n    ManagedIdentitySettings_Status   (Appears on:UpstreamAuthSettings_Status)      Field Description      resource  string    Resource: The Resource indicating the App ID URI of the target resource. It also appears in the aud (audience) claim of the issued token.\n    ManagedIdentitySettings_StatusARM   (Appears on:UpstreamAuthSettings_StatusARM)      Field Description      resource  string    Resource: The Resource indicating the App ID URI of the target resource. It also appears in the aud (audience) claim of the issued token.\n    ManagedIdentityType (string alias)  (Appears on:ManagedIdentity, ManagedIdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedIdentityType_Status (string alias)  (Appears on:ManagedIdentity_Status, ManagedIdentity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    ManagedIdentity_Status   (Appears on:SignalRResource_Status)      Field Description      principalId  string    PrincipalId: Get the principal id for the system assigned identity. Only be used in response.\n    tenantId  string    TenantId: Get the tenant id for the system assigned identity. Only be used in response\n    type  ManagedIdentityType_Status     Type: Represent the identity type: systemAssigned, userAssigned, None\n    userAssignedIdentities  map[string]./api/signalrservice/v1beta20211001.UserAssignedIdentityProperty_Status     UserAssignedIdentities: Get or set the user assigned identities\n    ManagedIdentity_StatusARM   (Appears on:SignalRResource_StatusARM)      Field Description      principalId  string    PrincipalId: Get the principal id for the system assigned identity. Only be used in response.\n    tenantId  string    TenantId: Get the tenant id for the system assigned identity. Only be used in response\n    type  ManagedIdentityType_Status     Type: Represent the identity type: systemAssigned, userAssigned, None\n    userAssignedIdentities  map[string]./api/signalrservice/v1beta20211001.UserAssignedIdentityProperty_StatusARM     UserAssignedIdentities: Get or set the user assigned identities\n    NetworkACL   (Appears on:SignalRNetworkACLs)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/NetworkACL\n    Field Description      allow  []NetworkACLAllow     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []NetworkACLDeny     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    NetworkACLARM   (Appears on:SignalRNetworkACLsARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/NetworkACL\n    Field Description      allow  []NetworkACLAllow     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []NetworkACLDeny     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    NetworkACLAllow (string alias)  (Appears on:NetworkACL, NetworkACLARM)      Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    NetworkACLDeny (string alias)  (Appears on:NetworkACL, NetworkACLARM)      Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    NetworkACL_Status   (Appears on:SignalRNetworkACLs_Status)      Field Description      allow  []SignalRRequestType_Status     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []SignalRRequestType_Status     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    NetworkACL_StatusARM   (Appears on:SignalRNetworkACLs_StatusARM)      Field Description      allow  []SignalRRequestType_Status     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []SignalRRequestType_Status     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    PrivateEndpointACL   (Appears on:SignalRNetworkACLs)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/PrivateEndpointACL\n    Field Description      allow  []PrivateEndpointACLAllow     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []PrivateEndpointACLDeny     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    name  string    Name: Name of the private endpoint connection\n    PrivateEndpointACLARM   (Appears on:SignalRNetworkACLsARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/PrivateEndpointACL\n    Field Description      allow  []PrivateEndpointACLAllow     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []PrivateEndpointACLDeny     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    name  string    Name: Name of the private endpoint connection\n    PrivateEndpointACLAllow (string alias)  (Appears on:PrivateEndpointACL, PrivateEndpointACLARM)      Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    PrivateEndpointACLDeny (string alias)  (Appears on:PrivateEndpointACL, PrivateEndpointACLARM)      Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    PrivateEndpointACL_Status   (Appears on:SignalRNetworkACLs_Status)      Field Description      allow  []SignalRRequestType_Status     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []SignalRRequestType_Status     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    name  string    Name: Name of the private endpoint connection\n    PrivateEndpointACL_StatusARM   (Appears on:SignalRNetworkACLs_StatusARM)      Field Description      allow  []SignalRRequestType_Status     Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    deny  []SignalRRequestType_Status     Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.\n    name  string    Name: Name of the private endpoint connection\n    PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded   (Appears on:SignalRResource_Status)      Field Description      id  string    Id: Fully qualified resource Id for the resource.\n    systemData  SystemData_Status     SystemData: Metadata pertaining to creation and last modification of the resource.\n    PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM   (Appears on:SignalRProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource Id for the resource.\n    systemData  SystemData_StatusARM     SystemData: Metadata pertaining to creation and last modification of the resource.\n    ProvisioningState_Status (string alias)  (Appears on:SignalRProperties_StatusARM, SignalRResource_Status)      Value Description   \u0026#34;Canceled\u0026#34;\n  \u0026#34;Creating\u0026#34;\n  \u0026#34;Deleting\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;Moving\u0026#34;\n  \u0026#34;Running\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n  \u0026#34;Unknown\u0026#34;\n  \u0026#34;Updating\u0026#34;\n    ResourceLogCategory   (Appears on:ResourceLogConfiguration)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceLogCategory\n    Field Description      enabled  string    Enabled: Indicates whether or the resource log category is enabled. Available values: true, false. Case insensitive.\n    name  string    Name: Gets or sets the resource log category\u0026rsquo;s name. Available values: ConnectivityLogs, MessagingLogs. Case insensitive.\n    ResourceLogCategoryARM   (Appears on:ResourceLogConfigurationARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceLogCategory\n    Field Description      enabled  string    Enabled: Indicates whether or the resource log category is enabled. Available values: true, false. Case insensitive.\n    name  string    Name: Gets or sets the resource log category\u0026rsquo;s name. Available values: ConnectivityLogs, MessagingLogs. Case insensitive.\n    ResourceLogCategory_Status   (Appears on:ResourceLogConfiguration_Status)      Field Description      enabled  string    Enabled: Indicates whether or the resource log category is enabled. Available values: true, false. Case insensitive.\n    name  string    Name: Gets or sets the resource log category\u0026rsquo;s name. Available values: ConnectivityLogs, MessagingLogs. Case insensitive.\n    ResourceLogCategory_StatusARM   (Appears on:ResourceLogConfiguration_StatusARM)      Field Description      enabled  string    Enabled: Indicates whether or the resource log category is enabled. Available values: true, false. Case insensitive.\n    name  string    Name: Gets or sets the resource log category\u0026rsquo;s name. Available values: ConnectivityLogs, MessagingLogs. Case insensitive.\n    ResourceLogConfiguration   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceLogConfiguration\n    Field Description      categories  []ResourceLogCategory     Categories: Gets or sets the list of category configurations.\n    ResourceLogConfigurationARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceLogConfiguration\n    Field Description      categories  []ResourceLogCategoryARM     Categories: Gets or sets the list of category configurations.\n    ResourceLogConfiguration_Status   (Appears on:SignalRResource_Status)      Field Description      categories  []ResourceLogCategory_Status     Categories: Gets or sets the list of category configurations.\n    ResourceLogConfiguration_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      categories  []ResourceLogCategory_StatusARM     Categories: Gets or sets the list of category configurations.\n    ResourceSku   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceSku\n    Field Description      capacity  int    Capacity: Optional, integer. The unit count of the resource. 1 by default. If present, following values are allowed: Free: 1 Standard: 1,2,5,10,20,50,100\n    name  string    Name: The name of the SKU. Required. Allowed values: Standard_S1, Free_F1\n    tier  ResourceSkuTier         ResourceSkuARM   (Appears on:SignalR_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ResourceSku\n    Field Description      capacity  int    Capacity: Optional, integer. The unit count of the resource. 1 by default. If present, following values are allowed: Free: 1 Standard: 1,2,5,10,20,50,100\n    name  string    Name: The name of the SKU. Required. Allowed values: Standard_S1, Free_F1\n    tier  ResourceSkuTier         ResourceSkuTier (string alias)  (Appears on:ResourceSku, ResourceSkuARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    ResourceSku_Status   (Appears on:SignalRResource_Status)      Field Description      capacity  int    Capacity: Optional, integer. The unit count of the resource. 1 by default. If present, following values are allowed: Free: 1 Standard: 1,2,5,10,20,50,100\n    family  string    Family: Not used. Retained for future use.\n    name  string    Name: The name of the SKU. Required. Allowed values: Standard_S1, Free_F1\n    size  string    Size: Not used. Retained for future use.\n    tier  SignalRSkuTier_Status     Tier: Optional tier of this particular SKU. \u0026lsquo;Standard\u0026rsquo; or \u0026lsquo;Free\u0026rsquo;. Basic is deprecated, use Standard instead.\n    ResourceSku_StatusARM   (Appears on:SignalRResource_StatusARM)      Field Description      capacity  int    Capacity: Optional, integer. The unit count of the resource. 1 by default. If present, following values are allowed: Free: 1 Standard: 1,2,5,10,20,50,100\n    family  string    Family: Not used. Retained for future use.\n    name  string    Name: The name of the SKU. Required. Allowed values: Standard_S1, Free_F1\n    size  string    Size: Not used. Retained for future use.\n    tier  SignalRSkuTier_Status     Tier: Optional tier of this particular SKU. \u0026lsquo;Standard\u0026rsquo; or \u0026lsquo;Free\u0026rsquo;. Basic is deprecated, use Standard instead.\n    ServerlessUpstreamSettings   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ServerlessUpstreamSettings\n    Field Description      templates  []UpstreamTemplate     Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.\n    ServerlessUpstreamSettingsARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/ServerlessUpstreamSettings\n    Field Description      templates  []UpstreamTemplateARM     Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.\n    ServerlessUpstreamSettings_Status   (Appears on:SignalRResource_Status)      Field Description      templates  []UpstreamTemplate_Status     Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.\n    ServerlessUpstreamSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      templates  []UpstreamTemplate_StatusARM     Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.\n    ServiceKind_Status (string alias)  (Appears on:SignalRResource_Status, SignalRResource_StatusARM)      Value Description   \u0026#34;RawWebSockets\u0026#34;\n  \u0026#34;SignalR\u0026#34;\n    SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded   (Appears on:SignalRResource_Status)      Field Description      id  string    Id: Fully qualified resource Id for the resource.\n    systemData  SystemData_Status     SystemData: Metadata pertaining to creation and last modification of the resource.\n    SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM   (Appears on:SignalRProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource Id for the resource.\n    systemData  SystemData_StatusARM     SystemData: Metadata pertaining to creation and last modification of the resource.\n    SignalR   Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/resourceDefinitions/signalR\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  SignalR_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    cors  SignalRCorsSettings     Cors: Cross-Origin Resource Sharing (CORS) settings.\n    disableAadAuth  bool    DisableAadAuth: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won\u0026rsquo;t work.\n    disableLocalAuth  bool    DisableLocalAuth: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won\u0026rsquo;t work.\n    features  []SignalRFeature     Features: List of the featureFlags. FeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn\u0026rsquo;t mean \u0026ldquo;false\u0026rdquo;. It varies in terms of different FeatureFlags.\n    identity  ManagedIdentity     Identity: A class represent managed identities used for request and response\n    kind  SignalRSpecKind         location  string    Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.\n    networkACLs  SignalRNetworkACLs     NetworkACLs: Network ACLs for the resource\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  string    PublicNetworkAccess: Enable or disable public network access. Default to \u0026ldquo;Enabled\u0026rdquo;. When it\u0026rsquo;s Enabled, network ACLs still apply. When it\u0026rsquo;s Disabled, public network access is always disabled no matter what you set in network ACLs.\n    resourceLogConfiguration  ResourceLogConfiguration     ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource.\n    sku  ResourceSku     Sku: The billing information of the resource.\n    tags  map[string]string    Tags: Tags of the service which is a list of key value pairs that describe the resource.\n    tls  SignalRTlsSettings     Tls: TLS settings for the resource\n    upstream  ServerlessUpstreamSettings     Upstream: The settings for the Upstream when the service is in server-less mode.\n       status  SignalRResource_Status         SignalRCorsSettings   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRCorsSettings\n    Field Description      allowedOrigins  []string    AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \u0026ldquo;*\u0026rdquo; to allow all. If omitted, allow all by default.\n    SignalRCorsSettingsARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRCorsSettings\n    Field Description      allowedOrigins  []string    AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \u0026ldquo;*\u0026rdquo; to allow all. If omitted, allow all by default.\n    SignalRCorsSettings_Status   (Appears on:SignalRResource_Status)      Field Description      allowedOrigins  []string    AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \u0026ldquo;*\u0026rdquo; to allow all. If omitted, allow all by default.\n    SignalRCorsSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      allowedOrigins  []string    AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \u0026ldquo;*\u0026rdquo; to allow all. If omitted, allow all by default.\n    SignalRFeature   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRFeature\n    Field Description      flag  SignalRFeatureFlag         properties  map[string]string    Properties: Optional properties related to this feature.\n    value  string    Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.\n    SignalRFeatureARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRFeature\n    Field Description      flag  SignalRFeatureFlag         properties  map[string]string    Properties: Optional properties related to this feature.\n    value  string    Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.\n    SignalRFeatureFlag (string alias)  (Appears on:SignalRFeature, SignalRFeatureARM)      Value Description   \u0026#34;EnableConnectivityLogs\u0026#34;\n  \u0026#34;EnableLiveTrace\u0026#34;\n  \u0026#34;EnableMessagingLogs\u0026#34;\n  \u0026#34;ServiceMode\u0026#34;\n    SignalRFeature_Status   (Appears on:SignalRResource_Status)      Field Description      flag  FeatureFlags_Status     Flag: FeatureFlags is the supported features of Azure SignalR service. - ServiceMode: Flag for backend server for SignalR service. Values allowed: \u0026ldquo;Default\u0026rdquo;: have your own backend server; \u0026ldquo;Serverless\u0026rdquo;: your application doesn\u0026rsquo;t have a backend server; \u0026ldquo;Classic\u0026rdquo;: for backward compatibility. Support both Default and Serverless mode but not recommended; \u0026ldquo;PredefinedOnly\u0026rdquo;: for future use. - EnableConnectivityLogs: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable the connectivity log category respectively. - EnableMessagingLogs: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable the connectivity log category respectively. - EnableLiveTrace: Live Trace allows you to know what\u0026rsquo;s happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable live trace feature.\n    properties  map[string]string    Properties: Optional properties related to this feature.\n    value  string    Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.\n    SignalRFeature_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      flag  FeatureFlags_Status     Flag: FeatureFlags is the supported features of Azure SignalR service. - ServiceMode: Flag for backend server for SignalR service. Values allowed: \u0026ldquo;Default\u0026rdquo;: have your own backend server; \u0026ldquo;Serverless\u0026rdquo;: your application doesn\u0026rsquo;t have a backend server; \u0026ldquo;Classic\u0026rdquo;: for backward compatibility. Support both Default and Serverless mode but not recommended; \u0026ldquo;PredefinedOnly\u0026rdquo;: for future use. - EnableConnectivityLogs: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable the connectivity log category respectively. - EnableMessagingLogs: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable the connectivity log category respectively. - EnableLiveTrace: Live Trace allows you to know what\u0026rsquo;s happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;, to enable/disable live trace feature.\n    properties  map[string]string    Properties: Optional properties related to this feature.\n    value  string    Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.\n    SignalRNetworkACLs   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRNetworkACLs\n    Field Description      defaultAction  SignalRNetworkACLsDefaultAction         privateEndpoints  []PrivateEndpointACL     PrivateEndpoints: ACLs for requests from private endpoints\n    publicNetwork  NetworkACL     PublicNetwork: Network ACL\n    SignalRNetworkACLsARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRNetworkACLs\n    Field Description      defaultAction  SignalRNetworkACLsDefaultAction         privateEndpoints  []PrivateEndpointACLARM     PrivateEndpoints: ACLs for requests from private endpoints\n    publicNetwork  NetworkACLARM     PublicNetwork: Network ACL\n    SignalRNetworkACLsDefaultAction (string alias)  (Appears on:SignalRNetworkACLs, SignalRNetworkACLsARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    SignalRNetworkACLs_Status   (Appears on:SignalRResource_Status)      Field Description      defaultAction  ACLAction_Status     DefaultAction: Default action when no other rule matches\n    privateEndpoints  []PrivateEndpointACL_Status     PrivateEndpoints: ACLs for requests from private endpoints\n    publicNetwork  NetworkACL_Status     PublicNetwork: ACL for requests from public network\n    SignalRNetworkACLs_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      defaultAction  ACLAction_Status     DefaultAction: Default action when no other rule matches\n    privateEndpoints  []PrivateEndpointACL_StatusARM     PrivateEndpoints: ACLs for requests from private endpoints\n    publicNetwork  NetworkACL_StatusARM     PublicNetwork: ACL for requests from public network\n    SignalRPropertiesARM   (Appears on:SignalR_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRProperties\n    Field Description      cors  SignalRCorsSettingsARM     Cors: Cross-Origin Resource Sharing (CORS) settings.\n    disableAadAuth  bool    DisableAadAuth: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won\u0026rsquo;t work.\n    disableLocalAuth  bool    DisableLocalAuth: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won\u0026rsquo;t work.\n    features  []SignalRFeatureARM     Features: List of the featureFlags. FeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn\u0026rsquo;t mean \u0026ldquo;false\u0026rdquo;. It varies in terms of different FeatureFlags.\n    networkACLs  SignalRNetworkACLsARM     NetworkACLs: Network ACLs for the resource\n    publicNetworkAccess  string    PublicNetworkAccess: Enable or disable public network access. Default to \u0026ldquo;Enabled\u0026rdquo;. When it\u0026rsquo;s Enabled, network ACLs still apply. When it\u0026rsquo;s Disabled, public network access is always disabled no matter what you set in network ACLs.\n    resourceLogConfiguration  ResourceLogConfigurationARM     ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource.\n    tls  SignalRTlsSettingsARM     Tls: TLS settings for the resource\n    upstream  ServerlessUpstreamSettingsARM     Upstream: The settings for the Upstream when the service is in server-less mode.\n    SignalRProperties_StatusARM   (Appears on:SignalRResource_StatusARM)      Field Description      cors  SignalRCorsSettings_StatusARM     Cors: Cross-Origin Resource Sharing (CORS) settings.\n    disableAadAuth  bool    DisableAadAuth: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won\u0026rsquo;t work.\n    disableLocalAuth  bool    DisableLocalAuth: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won\u0026rsquo;t work.\n    externalIP  string    ExternalIP: The publicly accessible IP of the resource.\n    features  []SignalRFeature_StatusARM     Features: List of the featureFlags. FeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn\u0026rsquo;t mean \u0026ldquo;false\u0026rdquo;. It varies in terms of different FeatureFlags.\n    hostName  string    HostName: FQDN of the service instance.\n    hostNamePrefix  string    HostNamePrefix: Deprecated.\n    networkACLs  SignalRNetworkACLs_StatusARM     NetworkACLs: Network ACLs\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM     PrivateEndpointConnections: Private endpoint connections to the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: Provisioning state of the resource.\n    publicNetworkAccess  string    PublicNetworkAccess: Enable or disable public network access. Default to \u0026ldquo;Enabled\u0026rdquo;. When it\u0026rsquo;s Enabled, network ACLs still apply. When it\u0026rsquo;s Disabled, public network access is always disabled no matter what you set in network ACLs.\n    publicPort  int    PublicPort: The publicly accessible port of the resource which is designed for browser/client side usage.\n    resourceLogConfiguration  ResourceLogConfiguration_StatusARM     ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource. If resourceLogConfiguration isn\u0026rsquo;t null or empty, it will override options \u0026ldquo;EnableConnectivityLog\u0026rdquo; and \u0026ldquo;EnableMessagingLogs\u0026rdquo; in features. Otherwise, use options \u0026ldquo;EnableConnectivityLog\u0026rdquo; and \u0026ldquo;EnableMessagingLogs\u0026rdquo; in features.\n    serverPort  int    ServerPort: The publicly accessible port of the resource which is designed for customer server side usage.\n    sharedPrivateLinkResources  []SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM     SharedPrivateLinkResources: The list of shared private link resources.\n    tls  SignalRTlsSettings_StatusARM     Tls: TLS settings.\n    upstream  ServerlessUpstreamSettings_StatusARM     Upstream: Upstream settings when the service is in server-less mode.\n    version  string    Version: Version of the resource. Probably you need the same or higher version of client SDKs.\n    SignalRRequestType_Status (string alias)  (Appears on:NetworkACL_Status, NetworkACL_StatusARM, PrivateEndpointACL_Status, PrivateEndpointACL_StatusARM)      Value Description   \u0026#34;ClientConnection\u0026#34;\n  \u0026#34;RESTAPI\u0026#34;\n  \u0026#34;ServerConnection\u0026#34;\n  \u0026#34;Trace\u0026#34;\n    SignalRResource_Status   (Appears on:SignalR)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    cors  SignalRCorsSettings_Status     Cors: Cross-Origin Resource Sharing (CORS) settings.\n    disableAadAuth  bool    DisableAadAuth: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won\u0026rsquo;t work.\n    disableLocalAuth  bool    DisableLocalAuth: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won\u0026rsquo;t work.\n    externalIP  string    ExternalIP: The publicly accessible IP of the resource.\n    features  []SignalRFeature_Status     Features: List of the featureFlags. FeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn\u0026rsquo;t mean \u0026ldquo;false\u0026rdquo;. It varies in terms of different FeatureFlags.\n    hostName  string    HostName: FQDN of the service instance.\n    hostNamePrefix  string    HostNamePrefix: Deprecated.\n    id  string    Id: Fully qualified resource Id for the resource.\n    identity  ManagedIdentity_Status     Identity: The managed identity response\n    kind  ServiceKind_Status     Kind: The kind of the service - e.g. \u0026ldquo;SignalR\u0026rdquo; for \u0026ldquo;Microsoft.SignalRService/SignalR\u0026rdquo;\n    location  string    Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.\n    name  string    Name: The name of the resource.\n    networkACLs  SignalRNetworkACLs_Status     NetworkACLs: Network ACLs\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded     PrivateEndpointConnections: Private endpoint connections to the resource.\n    provisioningState  ProvisioningState_Status     ProvisioningState: Provisioning state of the resource.\n    publicNetworkAccess  string    PublicNetworkAccess: Enable or disable public network access. Default to \u0026ldquo;Enabled\u0026rdquo;. When it\u0026rsquo;s Enabled, network ACLs still apply. When it\u0026rsquo;s Disabled, public network access is always disabled no matter what you set in network ACLs.\n    publicPort  int    PublicPort: The publicly accessible port of the resource which is designed for browser/client side usage.\n    resourceLogConfiguration  ResourceLogConfiguration_Status     ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource. If resourceLogConfiguration isn\u0026rsquo;t null or empty, it will override options \u0026ldquo;EnableConnectivityLog\u0026rdquo; and \u0026ldquo;EnableMessagingLogs\u0026rdquo; in features. Otherwise, use options \u0026ldquo;EnableConnectivityLog\u0026rdquo; and \u0026ldquo;EnableMessagingLogs\u0026rdquo; in features.\n    serverPort  int    ServerPort: The publicly accessible port of the resource which is designed for customer server side usage.\n    sharedPrivateLinkResources  []SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded     SharedPrivateLinkResources: The list of shared private link resources.\n    sku  ResourceSku_Status     Sku: The billing information of the resource.(e.g. Free, Standard)\n    systemData  SystemData_Status     SystemData: Metadata pertaining to creation and last modification of the resource.\n    tags  map[string]string    Tags: Tags of the service which is a list of key value pairs that describe the resource.\n    tls  SignalRTlsSettings_Status     Tls: TLS settings.\n    type  string    Type: The type of the resource - e.g. \u0026ldquo;Microsoft.SignalRService/SignalR\u0026rdquo;\n    upstream  ServerlessUpstreamSettings_Status     Upstream: Upstream settings when the service is in server-less mode.\n    version  string    Version: Version of the resource. Probably you need the same or higher version of client SDKs.\n    SignalRResource_StatusARM       Field Description      id  string    Id: Fully qualified resource Id for the resource.\n    identity  ManagedIdentity_StatusARM     Identity: The managed identity response\n    kind  ServiceKind_Status     Kind: The kind of the service - e.g. \u0026ldquo;SignalR\u0026rdquo; for \u0026ldquo;Microsoft.SignalRService/SignalR\u0026rdquo;\n    location  string    Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.\n    name  string    Name: The name of the resource.\n    properties  SignalRProperties_StatusARM     Properties: Settings used to provision or configure the resource\n    sku  ResourceSku_StatusARM     Sku: The billing information of the resource.(e.g. Free, Standard)\n    systemData  SystemData_StatusARM     SystemData: Metadata pertaining to creation and last modification of the resource.\n    tags  map[string]string    Tags: Tags of the service which is a list of key value pairs that describe the resource.\n    type  string    Type: The type of the resource - e.g. \u0026ldquo;Microsoft.SignalRService/SignalR\u0026rdquo;\n    SignalRSkuTier_Status (string alias)  (Appears on:ResourceSku_Status, ResourceSku_StatusARM)      Value Description   \u0026#34;Basic\u0026#34;\n  \u0026#34;Free\u0026#34;\n  \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    SignalRSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-10-01\u0026#34;\n    SignalRSpecKind (string alias)  (Appears on:SignalR_Spec, SignalR_SpecARM)      Value Description   \u0026#34;RawWebSockets\u0026#34;\n  \u0026#34;SignalR\u0026#34;\n    SignalRTlsSettings   (Appears on:SignalR_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRTlsSettings\n    Field Description      clientCertEnabled  bool    ClientCertEnabled: Request client certificate during TLS handshake if enabled\n    SignalRTlsSettingsARM   (Appears on:SignalRPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/SignalRTlsSettings\n    Field Description      clientCertEnabled  bool    ClientCertEnabled: Request client certificate during TLS handshake if enabled\n    SignalRTlsSettings_Status   (Appears on:SignalRResource_Status)      Field Description      clientCertEnabled  bool    ClientCertEnabled: Request client certificate during TLS handshake if enabled\n    SignalRTlsSettings_StatusARM   (Appears on:SignalRProperties_StatusARM)      Field Description      clientCertEnabled  bool    ClientCertEnabled: Request client certificate during TLS handshake if enabled\n    SignalR_Spec   (Appears on:SignalR)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    cors  SignalRCorsSettings     Cors: Cross-Origin Resource Sharing (CORS) settings.\n    disableAadAuth  bool    DisableAadAuth: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won\u0026rsquo;t work.\n    disableLocalAuth  bool    DisableLocalAuth: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won\u0026rsquo;t work.\n    features  []SignalRFeature     Features: List of the featureFlags. FeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn\u0026rsquo;t mean \u0026ldquo;false\u0026rdquo;. It varies in terms of different FeatureFlags.\n    identity  ManagedIdentity     Identity: A class represent managed identities used for request and response\n    kind  SignalRSpecKind         location  string    Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.\n    networkACLs  SignalRNetworkACLs     NetworkACLs: Network ACLs for the resource\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    publicNetworkAccess  string    PublicNetworkAccess: Enable or disable public network access. Default to \u0026ldquo;Enabled\u0026rdquo;. When it\u0026rsquo;s Enabled, network ACLs still apply. When it\u0026rsquo;s Disabled, public network access is always disabled no matter what you set in network ACLs.\n    resourceLogConfiguration  ResourceLogConfiguration     ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource.\n    sku  ResourceSku     Sku: The billing information of the resource.\n    tags  map[string]string    Tags: Tags of the service which is a list of key value pairs that describe the resource.\n    tls  SignalRTlsSettings     Tls: TLS settings for the resource\n    upstream  ServerlessUpstreamSettings     Upstream: The settings for the Upstream when the service is in server-less mode.\n    SignalR_SpecARM       Field Description      identity  ManagedIdentityARM     Identity: A class represent managed identities used for request and response\n    kind  SignalRSpecKind         location  string    Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.\n    name  string    Name: The name of the resource.\n    properties  SignalRPropertiesARM     Properties: A class that describes the properties of the resource\n    sku  ResourceSkuARM     Sku: The billing information of the resource.\n    tags  map[string]string    Tags: Tags of the service which is a list of key value pairs that describe the resource.\n    SystemDataStatusCreatedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemDataStatusLastModifiedByType (string alias)  (Appears on:SystemData_Status, SystemData_StatusARM)      Value Description   \u0026#34;Application\u0026#34;\n  \u0026#34;Key\u0026#34;\n  \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;User\u0026#34;\n    SystemData_Status   (Appears on:PrivateEndpointConnection_Status_SignalR_SubResourceEmbedded, SharedPrivateLinkResource_Status_SignalR_SubResourceEmbedded, SignalRResource_Status)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    SystemData_StatusARM   (Appears on:PrivateEndpointConnection_Status_SignalR_SubResourceEmbeddedARM, SharedPrivateLinkResource_Status_SignalR_SubResourceEmbeddedARM, SignalRResource_StatusARM)      Field Description      createdAt  string    CreatedAt: The timestamp of resource creation (UTC).\n    createdBy  string    CreatedBy: The identity that created the resource.\n    createdByType  SystemDataStatusCreatedByType     CreatedByType: The type of identity that created the resource.\n    lastModifiedAt  string    LastModifiedAt: The timestamp of resource last modification (UTC)\n    lastModifiedBy  string    LastModifiedBy: The identity that last modified the resource.\n    lastModifiedByType  SystemDataStatusLastModifiedByType     LastModifiedByType: The type of identity that last modified the resource.\n    UpstreamAuthSettings   (Appears on:UpstreamTemplate)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/UpstreamAuthSettings\n    Field Description      managedIdentity  ManagedIdentitySettings     ManagedIdentity: Managed identity settings for upstream.\n    type  UpstreamAuthSettingsType         UpstreamAuthSettingsARM   (Appears on:UpstreamTemplateARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/UpstreamAuthSettings\n    Field Description      managedIdentity  ManagedIdentitySettingsARM     ManagedIdentity: Managed identity settings for upstream.\n    type  UpstreamAuthSettingsType         UpstreamAuthSettingsType (string alias)  (Appears on:UpstreamAuthSettings, UpstreamAuthSettingsARM)      Value Description   \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;None\u0026#34;\n    UpstreamAuthSettings_Status   (Appears on:UpstreamTemplate_Status)      Field Description      managedIdentity  ManagedIdentitySettings_Status     ManagedIdentity: Gets or sets the managed identity settings. It\u0026rsquo;s required if the auth type is set to ManagedIdentity.\n    type  UpstreamAuthType_Status     Type: Gets or sets the type of auth. None or ManagedIdentity is supported now.\n    UpstreamAuthSettings_StatusARM   (Appears on:UpstreamTemplate_StatusARM)      Field Description      managedIdentity  ManagedIdentitySettings_StatusARM     ManagedIdentity: Gets or sets the managed identity settings. It\u0026rsquo;s required if the auth type is set to ManagedIdentity.\n    type  UpstreamAuthType_Status     Type: Gets or sets the type of auth. None or ManagedIdentity is supported now.\n    UpstreamAuthType_Status (string alias)  (Appears on:UpstreamAuthSettings_Status, UpstreamAuthSettings_StatusARM)      Value Description   \u0026#34;ManagedIdentity\u0026#34;\n  \u0026#34;None\u0026#34;\n    UpstreamTemplate   (Appears on:ServerlessUpstreamSettings)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/UpstreamTemplate\n    Field Description      auth  UpstreamAuthSettings     Auth: Upstream auth settings. If not set, no auth is used for upstream messages.\n    categoryPattern  string    CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any category name 2. Combine multiple categories with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connections,messages\u0026rdquo;, it matches category \u0026ldquo;connections\u0026rdquo; and \u0026ldquo;messages\u0026rdquo; 3. The single category name, for example, \u0026ldquo;connections\u0026rdquo;, it matches the category \u0026ldquo;connections\u0026rdquo;\n    eventPattern  string    EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any event name 2. Combine multiple events with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connect,disconnect\u0026rdquo;, it matches event \u0026ldquo;connect\u0026rdquo; and \u0026ldquo;disconnect\u0026rdquo; 3. The single event name, for example, \u0026ldquo;connect\u0026rdquo;, it matches \u0026ldquo;connect\u0026rdquo;\n    hubPattern  string    HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any hub name 2. Combine multiple hubs with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;hub1,hub2\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo; and \u0026ldquo;hub2\u0026rdquo; 3. The single hub name, for example, \u0026ldquo;hub1\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo;\n    urlTemplate  string    UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is http://example.com/{hub}/api/{event}, with a client request from hub chat connects, it will first POST to this URL: http://example.com/chat/api/connect.\n    UpstreamTemplateARM   (Appears on:ServerlessUpstreamSettingsARM)  Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.SignalRService.json#/definitions/UpstreamTemplate\n    Field Description      auth  UpstreamAuthSettingsARM     Auth: Upstream auth settings. If not set, no auth is used for upstream messages.\n    categoryPattern  string    CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any category name 2. Combine multiple categories with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connections,messages\u0026rdquo;, it matches category \u0026ldquo;connections\u0026rdquo; and \u0026ldquo;messages\u0026rdquo; 3. The single category name, for example, \u0026ldquo;connections\u0026rdquo;, it matches the category \u0026ldquo;connections\u0026rdquo;\n    eventPattern  string    EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any event name 2. Combine multiple events with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connect,disconnect\u0026rdquo;, it matches event \u0026ldquo;connect\u0026rdquo; and \u0026ldquo;disconnect\u0026rdquo; 3. The single event name, for example, \u0026ldquo;connect\u0026rdquo;, it matches \u0026ldquo;connect\u0026rdquo;\n    hubPattern  string    HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any hub name 2. Combine multiple hubs with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;hub1,hub2\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo; and \u0026ldquo;hub2\u0026rdquo; 3. The single hub name, for example, \u0026ldquo;hub1\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo;\n    urlTemplate  string    UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is http://example.com/{hub}/api/{event}, with a client request from hub chat connects, it will first POST to this URL: http://example.com/chat/api/connect.\n    UpstreamTemplate_Status   (Appears on:ServerlessUpstreamSettings_Status)      Field Description      auth  UpstreamAuthSettings_Status     Auth: Gets or sets the auth settings for an upstream. If not set, no auth is used for upstream messages.\n    categoryPattern  string    CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any category name 2. Combine multiple categories with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connections,messages\u0026rdquo;, it matches category \u0026ldquo;connections\u0026rdquo; and \u0026ldquo;messages\u0026rdquo; 3. The single category name, for example, \u0026ldquo;connections\u0026rdquo;, it matches the category \u0026ldquo;connections\u0026rdquo;\n    eventPattern  string    EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any event name 2. Combine multiple events with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connect,disconnect\u0026rdquo;, it matches event \u0026ldquo;connect\u0026rdquo; and \u0026ldquo;disconnect\u0026rdquo; 3. The single event name, for example, \u0026ldquo;connect\u0026rdquo;, it matches \u0026ldquo;connect\u0026rdquo;\n    hubPattern  string    HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any hub name 2. Combine multiple hubs with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;hub1,hub2\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo; and \u0026ldquo;hub2\u0026rdquo; 3. The single hub name, for example, \u0026ldquo;hub1\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo;\n    urlTemplate  string    UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is http://example.com/{hub}/api/{event}, with a client request from hub chat connects, it will first POST to this URL: http://example.com/chat/api/connect.\n    UpstreamTemplate_StatusARM   (Appears on:ServerlessUpstreamSettings_StatusARM)      Field Description      auth  UpstreamAuthSettings_StatusARM     Auth: Gets or sets the auth settings for an upstream. If not set, no auth is used for upstream messages.\n    categoryPattern  string    CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any category name 2. Combine multiple categories with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connections,messages\u0026rdquo;, it matches category \u0026ldquo;connections\u0026rdquo; and \u0026ldquo;messages\u0026rdquo; 3. The single category name, for example, \u0026ldquo;connections\u0026rdquo;, it matches the category \u0026ldquo;connections\u0026rdquo;\n    eventPattern  string    EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any event name 2. Combine multiple events with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;connect,disconnect\u0026rdquo;, it matches event \u0026ldquo;connect\u0026rdquo; and \u0026ldquo;disconnect\u0026rdquo; 3. The single event name, for example, \u0026ldquo;connect\u0026rdquo;, it matches \u0026ldquo;connect\u0026rdquo;\n    hubPattern  string    HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub. There are 3 kind of patterns supported: 1. \u0026ldquo;*\u0026rdquo;, it to matches any hub name 2. Combine multiple hubs with \u0026ldquo;,\u0026rdquo;, for example \u0026ldquo;hub1,hub2\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo; and \u0026ldquo;hub2\u0026rdquo; 3. The single hub name, for example, \u0026ldquo;hub1\u0026rdquo;, it matches \u0026ldquo;hub1\u0026rdquo;\n    urlTemplate  string    UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in. For example, if the urlTemplate is http://example.com/{hub}/api/{event}, with a client request from hub chat connects, it will first POST to this URL: http://example.com/chat/api/connect.\n    UserAssignedIdentityProperty_Status   (Appears on:ManagedIdentity_Status)      Field Description      clientId  string    ClientId: Get the client id for the user assigned identity\n    principalId  string    PrincipalId: Get the principal id for the user assigned identity\n    UserAssignedIdentityProperty_StatusARM   (Appears on:ManagedIdentity_StatusARM)      Field Description      clientId  string    ClientId: Get the client id for the user assigned identity\n    principalId  string    PrincipalId: Get the principal id for the user assigned identity\n     "},{"id":72,"href":"/azure-service-operator/reference/storage.v1alpha1api20210401/","title":"storage.azure.com/v1alpha1api20210401","section":"References","content":"storage.azure.com/v1alpha1api20210401  Package v1alpha1api20210401 contains API Schema definitions for the storage v1alpha1api20210401 API group\n Resource Types:  ActiveDirectoryProperties   (Appears on:AzureFilesIdentityBasedAuthentication)  Deprecated version of ActiveDirectoryProperties. Use v1beta20210401.ActiveDirectoryProperties instead\n    Field Description      azureStorageSid  string        domainGuid  string        domainName  string        domainSid  string        forestName  string        netBiosDomainName  string        ActiveDirectoryPropertiesARM   (Appears on:AzureFilesIdentityBasedAuthenticationARM)  Deprecated version of ActiveDirectoryProperties. Use v1beta20210401.ActiveDirectoryProperties instead\n    Field Description      azureStorageSid  string        domainGuid  string        domainName  string        domainSid  string        forestName  string        netBiosDomainName  string        ActiveDirectoryProperties_Status   (Appears on:AzureFilesIdentityBasedAuthentication_Status)  Deprecated version of ActiveDirectoryProperties_Status. Use v1beta20210401.ActiveDirectoryProperties_Status instead\n    Field Description      azureStorageSid  string        domainGuid  string        domainName  string        domainSid  string        forestName  string        netBiosDomainName  string        ActiveDirectoryProperties_StatusARM   (Appears on:AzureFilesIdentityBasedAuthentication_StatusARM)  Deprecated version of ActiveDirectoryProperties_Status. Use v1beta20210401.ActiveDirectoryProperties_Status instead\n    Field Description      azureStorageSid  string        domainGuid  string        domainName  string        domainSid  string        forestName  string        netBiosDomainName  string        AzureFilesIdentityBasedAuthentication   (Appears on:StorageAccounts_Spec)  Deprecated version of AzureFilesIdentityBasedAuthentication. Use v1beta20210401.AzureFilesIdentityBasedAuthentication instead\n    Field Description      activeDirectoryProperties  ActiveDirectoryProperties         defaultSharePermission  AzureFilesIdentityBasedAuthenticationDefaultSharePermission         directoryServiceOptions  AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions         AzureFilesIdentityBasedAuthenticationARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of AzureFilesIdentityBasedAuthentication. Use v1beta20210401.AzureFilesIdentityBasedAuthentication instead\n    Field Description      activeDirectoryProperties  ActiveDirectoryPropertiesARM         defaultSharePermission  AzureFilesIdentityBasedAuthenticationDefaultSharePermission         directoryServiceOptions  AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions         AzureFilesIdentityBasedAuthenticationDefaultSharePermission (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication, AzureFilesIdentityBasedAuthenticationARM)  Deprecated version of AzureFilesIdentityBasedAuthenticationDefaultSharePermission. Use v1beta20210401.AzureFilesIdentityBasedAuthenticationDefaultSharePermission instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;StorageFileDataSmbShareContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareElevatedContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareOwner\u0026#34;\n  \u0026#34;StorageFileDataSmbShareReader\u0026#34;\n    AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication, AzureFilesIdentityBasedAuthenticationARM)  Deprecated version of AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions. Use v1beta20210401.AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions instead\n    Value Description   \u0026#34;AADDS\u0026#34;\n  \u0026#34;AD\u0026#34;\n  \u0026#34;None\u0026#34;\n    AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication_Status, AzureFilesIdentityBasedAuthentication_StatusARM)  Deprecated version of AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission. Use v1beta20210401.AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;StorageFileDataSmbShareContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareElevatedContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareOwner\u0026#34;\n  \u0026#34;StorageFileDataSmbShareReader\u0026#34;\n    AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication_Status, AzureFilesIdentityBasedAuthentication_StatusARM)  Deprecated version of AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions. Use v1beta20210401.AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions instead\n    Value Description   \u0026#34;AADDS\u0026#34;\n  \u0026#34;AD\u0026#34;\n  \u0026#34;None\u0026#34;\n    AzureFilesIdentityBasedAuthentication_Status   (Appears on:StorageAccount_Status)  Deprecated version of AzureFilesIdentityBasedAuthentication_Status. Use v1beta20210401.AzureFilesIdentityBasedAuthentication_Status instead\n    Field Description      activeDirectoryProperties  ActiveDirectoryProperties_Status         defaultSharePermission  AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission         directoryServiceOptions  AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions         AzureFilesIdentityBasedAuthentication_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of AzureFilesIdentityBasedAuthentication_Status. Use v1beta20210401.AzureFilesIdentityBasedAuthentication_Status instead\n    Field Description      activeDirectoryProperties  ActiveDirectoryProperties_StatusARM         defaultSharePermission  AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission         directoryServiceOptions  AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions         BlobContainer_Status   (Appears on:StorageAccountsBlobServicesContainer)  Deprecated version of BlobContainer_Status. Use v1beta20210401.BlobContainer_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    defaultEncryptionScope  string        deleted  bool        deletedTime  string        denyEncryptionScopeOverride  bool        etag  string        hasImmutabilityPolicy  bool        hasLegalHold  bool        id  string        immutabilityPolicy  ImmutabilityPolicyProperties_Status         immutableStorageWithVersioning  ImmutableStorageWithVersioning_Status         lastModifiedTime  string        leaseDuration  ContainerPropertiesStatusLeaseDuration         leaseState  ContainerPropertiesStatusLeaseState         leaseStatus  ContainerPropertiesStatusLeaseStatus         legalHold  LegalHoldProperties_Status         metadata  map[string]string        name  string        publicAccess  ContainerPropertiesStatusPublicAccess         remainingRetentionDays  int        type  string        version  string        BlobContainer_StatusARM   Deprecated version of BlobContainer_Status. Use v1beta20210401.BlobContainer_Status instead\n    Field Description      etag  string        id  string        name  string        properties  ContainerProperties_StatusARM         type  string        BlobRestoreParameters_Status   (Appears on:BlobRestoreStatus_Status)  Deprecated version of BlobRestoreParameters_Status. Use v1beta20210401.BlobRestoreParameters_Status instead\n    Field Description      blobRanges  []BlobRestoreRange_Status         timeToRestore  string        BlobRestoreParameters_StatusARM   (Appears on:BlobRestoreStatus_StatusARM)  Deprecated version of BlobRestoreParameters_Status. Use v1beta20210401.BlobRestoreParameters_Status instead\n    Field Description      blobRanges  []BlobRestoreRange_StatusARM         timeToRestore  string        BlobRestoreRange_Status   (Appears on:BlobRestoreParameters_Status)  Deprecated version of BlobRestoreRange_Status. Use v1beta20210401.BlobRestoreRange_Status instead\n    Field Description      endRange  string        startRange  string        BlobRestoreRange_StatusARM   (Appears on:BlobRestoreParameters_StatusARM)  Deprecated version of BlobRestoreRange_Status. Use v1beta20210401.BlobRestoreRange_Status instead\n    Field Description      endRange  string        startRange  string        BlobRestoreStatusStatusStatus (string alias)  (Appears on:BlobRestoreStatus_Status, BlobRestoreStatus_StatusARM)  Deprecated version of BlobRestoreStatusStatusStatus. Use v1beta20210401.BlobRestoreStatusStatusStatus instead\n    Value Description   \u0026#34;Complete\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n    BlobRestoreStatus_Status   (Appears on:StorageAccount_Status)  Deprecated version of BlobRestoreStatus_Status. Use v1beta20210401.BlobRestoreStatus_Status instead\n    Field Description      failureReason  string        parameters  BlobRestoreParameters_Status         restoreId  string        status  BlobRestoreStatusStatusStatus         BlobRestoreStatus_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of BlobRestoreStatus_Status. Use v1beta20210401.BlobRestoreStatus_Status instead\n    Field Description      failureReason  string        parameters  BlobRestoreParameters_StatusARM         restoreId  string        status  BlobRestoreStatusStatusStatus         BlobServicePropertiesPropertiesARM   (Appears on:StorageAccountsBlobServices_SpecARM)  Deprecated version of BlobServicePropertiesProperties. Use v1beta20210401.BlobServicePropertiesProperties instead\n    Field Description      automaticSnapshotPolicyEnabled  bool        changeFeed  ChangeFeedARM         containerDeleteRetentionPolicy  DeleteRetentionPolicyARM         cors  CorsRulesARM         defaultServiceVersion  string        deleteRetentionPolicy  DeleteRetentionPolicyARM         isVersioningEnabled  bool        lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicyARM         restorePolicy  RestorePolicyPropertiesARM         BlobServiceProperties_Status   (Appears on:StorageAccountsBlobService)  Deprecated version of BlobServiceProperties_Status. Use v1beta20210401.BlobServiceProperties_Status instead\n    Field Description      automaticSnapshotPolicyEnabled  bool        changeFeed  ChangeFeed_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    containerDeleteRetentionPolicy  DeleteRetentionPolicy_Status         cors  CorsRules_Status         defaultServiceVersion  string        deleteRetentionPolicy  DeleteRetentionPolicy_Status         id  string        isVersioningEnabled  bool        lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy_Status         name  string        restorePolicy  RestorePolicyProperties_Status         sku  Sku_Status         type  string        BlobServiceProperties_StatusARM   Deprecated version of BlobServiceProperties_Status. Use v1beta20210401.BlobServiceProperties_Status instead\n    Field Description      id  string        name  string        properties  BlobServiceProperties_Status_PropertiesARM         sku  Sku_StatusARM         type  string        BlobServiceProperties_Status_PropertiesARM   (Appears on:BlobServiceProperties_StatusARM)  Deprecated version of BlobServiceProperties_Status_Properties. Use v1beta20210401.BlobServiceProperties_Status_Properties instead\n    Field Description      automaticSnapshotPolicyEnabled  bool        changeFeed  ChangeFeed_StatusARM         containerDeleteRetentionPolicy  DeleteRetentionPolicy_StatusARM         cors  CorsRules_StatusARM         defaultServiceVersion  string        deleteRetentionPolicy  DeleteRetentionPolicy_StatusARM         isVersioningEnabled  bool        lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy_StatusARM         restorePolicy  RestorePolicyProperties_StatusARM         ChangeFeed   (Appears on:StorageAccountsBlobServices_Spec)  Deprecated version of ChangeFeed. Use v1beta20210401.ChangeFeed instead\n    Field Description      enabled  bool        retentionInDays  int        ChangeFeedARM   (Appears on:BlobServicePropertiesPropertiesARM)  Deprecated version of ChangeFeed. Use v1beta20210401.ChangeFeed instead\n    Field Description      enabled  bool        retentionInDays  int        ChangeFeed_Status   (Appears on:BlobServiceProperties_Status)  Deprecated version of ChangeFeed_Status. Use v1beta20210401.ChangeFeed_Status instead\n    Field Description      enabled  bool        retentionInDays  int        ChangeFeed_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)  Deprecated version of ChangeFeed_Status. Use v1beta20210401.ChangeFeed_Status instead\n    Field Description      enabled  bool        retentionInDays  int        ContainerPropertiesARM   (Appears on:StorageAccountsBlobServicesContainers_SpecARM)  Deprecated version of ContainerProperties. Use v1beta20210401.ContainerProperties instead\n    Field Description      defaultEncryptionScope  string        denyEncryptionScopeOverride  bool        immutableStorageWithVersioning  ImmutableStorageWithVersioningARM         metadata  map[string]string        publicAccess  ContainerPropertiesPublicAccess         ContainerPropertiesPublicAccess (string alias)  (Appears on:ContainerPropertiesARM, StorageAccountsBlobServicesContainers_Spec)  Deprecated version of ContainerPropertiesPublicAccess. Use v1beta20210401.ContainerPropertiesPublicAccess instead\n    Value Description   \u0026#34;Blob\u0026#34;\n  \u0026#34;Container\u0026#34;\n  \u0026#34;None\u0026#34;\n    ContainerPropertiesStatusLeaseDuration (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)  Deprecated version of ContainerPropertiesStatusLeaseDuration. Use v1beta20210401.ContainerPropertiesStatusLeaseDuration instead\n    Value Description   \u0026#34;Fixed\u0026#34;\n  \u0026#34;Infinite\u0026#34;\n    ContainerPropertiesStatusLeaseState (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)  Deprecated version of ContainerPropertiesStatusLeaseState. Use v1beta20210401.ContainerPropertiesStatusLeaseState instead\n    Value Description   \u0026#34;Available\u0026#34;\n  \u0026#34;Breaking\u0026#34;\n  \u0026#34;Broken\u0026#34;\n  \u0026#34;Expired\u0026#34;\n  \u0026#34;Leased\u0026#34;\n    ContainerPropertiesStatusLeaseStatus (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)  Deprecated version of ContainerPropertiesStatusLeaseStatus. Use v1beta20210401.ContainerPropertiesStatusLeaseStatus instead\n    Value Description   \u0026#34;Locked\u0026#34;\n  \u0026#34;Unlocked\u0026#34;\n    ContainerPropertiesStatusPublicAccess (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)  Deprecated version of ContainerPropertiesStatusPublicAccess. Use v1beta20210401.ContainerPropertiesStatusPublicAccess instead\n    Value Description   \u0026#34;Blob\u0026#34;\n  \u0026#34;Container\u0026#34;\n  \u0026#34;None\u0026#34;\n    ContainerProperties_StatusARM   (Appears on:BlobContainer_StatusARM)  Deprecated version of ContainerProperties_Status. Use v1beta20210401.ContainerProperties_Status instead\n    Field Description      defaultEncryptionScope  string        deleted  bool        deletedTime  string        denyEncryptionScopeOverride  bool        hasImmutabilityPolicy  bool        hasLegalHold  bool        immutabilityPolicy  ImmutabilityPolicyProperties_StatusARM         immutableStorageWithVersioning  ImmutableStorageWithVersioning_StatusARM         lastModifiedTime  string        leaseDuration  ContainerPropertiesStatusLeaseDuration         leaseState  ContainerPropertiesStatusLeaseState         leaseStatus  ContainerPropertiesStatusLeaseStatus         legalHold  LegalHoldProperties_StatusARM         metadata  map[string]string        publicAccess  ContainerPropertiesStatusPublicAccess         remainingRetentionDays  int        version  string        CorsRule   (Appears on:CorsRules)  Deprecated version of CorsRule. Use v1beta20210401.CorsRule instead\n    Field Description      allowedHeaders  []string        allowedMethods  []CorsRuleAllowedMethods         allowedOrigins  []string        exposedHeaders  []string        maxAgeInSeconds  int        CorsRuleARM   (Appears on:CorsRulesARM)  Deprecated version of CorsRule. Use v1beta20210401.CorsRule instead\n    Field Description      allowedHeaders  []string        allowedMethods  []CorsRuleAllowedMethods         allowedOrigins  []string        exposedHeaders  []string        maxAgeInSeconds  int        CorsRuleAllowedMethods (string alias)  (Appears on:CorsRule, CorsRuleARM)  Deprecated version of CorsRuleAllowedMethods. Use v1beta20210401.CorsRuleAllowedMethods instead\n    Value Description   \u0026#34;DELETE\u0026#34;\n  \u0026#34;GET\u0026#34;\n  \u0026#34;HEAD\u0026#34;\n  \u0026#34;MERGE\u0026#34;\n  \u0026#34;OPTIONS\u0026#34;\n  \u0026#34;POST\u0026#34;\n  \u0026#34;PUT\u0026#34;\n    CorsRuleStatusAllowedMethods (string alias)  (Appears on:CorsRule_Status, CorsRule_StatusARM)  Deprecated version of CorsRuleStatusAllowedMethods. Use v1beta20210401.CorsRuleStatusAllowedMethods instead\n    Value Description   \u0026#34;DELETE\u0026#34;\n  \u0026#34;GET\u0026#34;\n  \u0026#34;HEAD\u0026#34;\n  \u0026#34;MERGE\u0026#34;\n  \u0026#34;OPTIONS\u0026#34;\n  \u0026#34;POST\u0026#34;\n  \u0026#34;PUT\u0026#34;\n    CorsRule_Status   (Appears on:CorsRules_Status)  Deprecated version of CorsRule_Status. Use v1beta20210401.CorsRule_Status instead\n    Field Description      allowedHeaders  []string        allowedMethods  []CorsRuleStatusAllowedMethods         allowedOrigins  []string        exposedHeaders  []string        maxAgeInSeconds  int        CorsRule_StatusARM   (Appears on:CorsRules_StatusARM)  Deprecated version of CorsRule_Status. Use v1beta20210401.CorsRule_Status instead\n    Field Description      allowedHeaders  []string        allowedMethods  []CorsRuleStatusAllowedMethods         allowedOrigins  []string        exposedHeaders  []string        maxAgeInSeconds  int        CorsRules   (Appears on:StorageAccountsBlobServices_Spec, StorageAccountsQueueServices_Spec)  Deprecated version of CorsRules. Use v1beta20210401.CorsRules instead\n    Field Description      corsRules  []CorsRule         CorsRulesARM   (Appears on:BlobServicePropertiesPropertiesARM, QueueServicePropertiesPropertiesARM)  Deprecated version of CorsRules. Use v1beta20210401.CorsRules instead\n    Field Description      corsRules  []CorsRuleARM         CorsRules_Status   (Appears on:BlobServiceProperties_Status, QueueServiceProperties_Status)  Deprecated version of CorsRules_Status. Use v1beta20210401.CorsRules_Status instead\n    Field Description      corsRules  []CorsRule_Status         CorsRules_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM, QueueServiceProperties_Status_PropertiesARM)  Deprecated version of CorsRules_Status. Use v1beta20210401.CorsRules_Status instead\n    Field Description      corsRules  []CorsRule_StatusARM         CustomDomain   (Appears on:StorageAccounts_Spec)  Deprecated version of CustomDomain. Use v1beta20210401.CustomDomain instead\n    Field Description      name  string        useSubDomainName  bool        CustomDomainARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of CustomDomain. Use v1beta20210401.CustomDomain instead\n    Field Description      name  string        useSubDomainName  bool        CustomDomain_Status   (Appears on:StorageAccount_Status)  Deprecated version of CustomDomain_Status. Use v1beta20210401.CustomDomain_Status instead\n    Field Description      name  string        useSubDomainName  bool        CustomDomain_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of CustomDomain_Status. Use v1beta20210401.CustomDomain_Status instead\n    Field Description      name  string        useSubDomainName  bool        DateAfterCreation   (Appears on:ManagementPolicySnapShot, ManagementPolicyVersion)  Deprecated version of DateAfterCreation. Use v1beta20210401.DateAfterCreation instead\n    Field Description      daysAfterCreationGreaterThan  int        DateAfterCreationARM   (Appears on:ManagementPolicySnapShotARM, ManagementPolicyVersionARM)  Deprecated version of DateAfterCreation. Use v1beta20210401.DateAfterCreation instead\n    Field Description      daysAfterCreationGreaterThan  int        DateAfterCreation_Status   (Appears on:ManagementPolicySnapShot_Status, ManagementPolicyVersion_Status)  Deprecated version of DateAfterCreation_Status. Use v1beta20210401.DateAfterCreation_Status instead\n    Field Description      daysAfterCreationGreaterThan  float64        DateAfterCreation_StatusARM   (Appears on:ManagementPolicySnapShot_StatusARM, ManagementPolicyVersion_StatusARM)  Deprecated version of DateAfterCreation_Status. Use v1beta20210401.DateAfterCreation_Status instead\n    Field Description      daysAfterCreationGreaterThan  float64        DateAfterModification   (Appears on:ManagementPolicyBaseBlob)  Deprecated version of DateAfterModification. Use v1beta20210401.DateAfterModification instead\n    Field Description      daysAfterLastAccessTimeGreaterThan  int        daysAfterModificationGreaterThan  int        DateAfterModificationARM   (Appears on:ManagementPolicyBaseBlobARM)  Deprecated version of DateAfterModification. Use v1beta20210401.DateAfterModification instead\n    Field Description      daysAfterLastAccessTimeGreaterThan  int        daysAfterModificationGreaterThan  int        DateAfterModification_Status   (Appears on:ManagementPolicyBaseBlob_Status)  Deprecated version of DateAfterModification_Status. Use v1beta20210401.DateAfterModification_Status instead\n    Field Description      daysAfterLastAccessTimeGreaterThan  float64        daysAfterModificationGreaterThan  float64        DateAfterModification_StatusARM   (Appears on:ManagementPolicyBaseBlob_StatusARM)  Deprecated version of DateAfterModification_Status. Use v1beta20210401.DateAfterModification_Status instead\n    Field Description      daysAfterLastAccessTimeGreaterThan  float64        daysAfterModificationGreaterThan  float64        DeleteRetentionPolicy   (Appears on:StorageAccountsBlobServices_Spec)  Deprecated version of DeleteRetentionPolicy. Use v1beta20210401.DeleteRetentionPolicy instead\n    Field Description      days  int        enabled  bool        DeleteRetentionPolicyARM   (Appears on:BlobServicePropertiesPropertiesARM)  Deprecated version of DeleteRetentionPolicy. Use v1beta20210401.DeleteRetentionPolicy instead\n    Field Description      days  int        enabled  bool        DeleteRetentionPolicy_Status   (Appears on:BlobServiceProperties_Status)  Deprecated version of DeleteRetentionPolicy_Status. Use v1beta20210401.DeleteRetentionPolicy_Status instead\n    Field Description      days  int        enabled  bool        DeleteRetentionPolicy_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)  Deprecated version of DeleteRetentionPolicy_Status. Use v1beta20210401.DeleteRetentionPolicy_Status instead\n    Field Description      days  int        enabled  bool        Encryption   (Appears on:StorageAccounts_Spec)  Deprecated version of Encryption. Use v1beta20210401.Encryption instead\n    Field Description      identity  EncryptionIdentity         keySource  EncryptionKeySource         keyvaultproperties  KeyVaultProperties         requireInfrastructureEncryption  bool        services  EncryptionServices         EncryptionARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of Encryption. Use v1beta20210401.Encryption instead\n    Field Description      identity  EncryptionIdentityARM         keySource  EncryptionKeySource         keyvaultproperties  KeyVaultPropertiesARM         requireInfrastructureEncryption  bool        services  EncryptionServicesARM         EncryptionIdentity   (Appears on:Encryption)  Deprecated version of EncryptionIdentity. Use v1beta20210401.EncryptionIdentity instead\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference         EncryptionIdentityARM   (Appears on:EncryptionARM)  Deprecated version of EncryptionIdentity. Use v1beta20210401.EncryptionIdentity instead\n    Field Description      userAssignedIdentity  string        EncryptionIdentity_Status   (Appears on:Encryption_Status)  Deprecated version of EncryptionIdentity_Status. Use v1beta20210401.EncryptionIdentity_Status instead\n    Field Description      userAssignedIdentity  string        EncryptionIdentity_StatusARM   (Appears on:Encryption_StatusARM)  Deprecated version of EncryptionIdentity_Status. Use v1beta20210401.EncryptionIdentity_Status instead\n    Field Description      userAssignedIdentity  string        EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)  Deprecated version of EncryptionKeySource. Use v1beta20210401.EncryptionKeySource instead\n    Value Description   \u0026#34;Microsoft.Keyvault\u0026#34;\n  \u0026#34;Microsoft.Storage\u0026#34;\n    EncryptionService   (Appears on:EncryptionServices)  Deprecated version of EncryptionService. Use v1beta20210401.EncryptionService instead\n    Field Description      enabled  bool        keyType  EncryptionServiceKeyType         EncryptionServiceARM   (Appears on:EncryptionServicesARM)  Deprecated version of EncryptionService. Use v1beta20210401.EncryptionService instead\n    Field Description      enabled  bool        keyType  EncryptionServiceKeyType         EncryptionServiceKeyType (string alias)  (Appears on:EncryptionService, EncryptionServiceARM)  Deprecated version of EncryptionServiceKeyType. Use v1beta20210401.EncryptionServiceKeyType instead\n    Value Description   \u0026#34;Account\u0026#34;\n  \u0026#34;Service\u0026#34;\n    EncryptionServiceStatusKeyType (string alias)  (Appears on:EncryptionService_Status, EncryptionService_StatusARM)  Deprecated version of EncryptionServiceStatusKeyType. Use v1beta20210401.EncryptionServiceStatusKeyType instead\n    Value Description   \u0026#34;Account\u0026#34;\n  \u0026#34;Service\u0026#34;\n    EncryptionService_Status   (Appears on:EncryptionServices_Status)  Deprecated version of EncryptionService_Status. Use v1beta20210401.EncryptionService_Status instead\n    Field Description      enabled  bool        keyType  EncryptionServiceStatusKeyType         lastEnabledTime  string        EncryptionService_StatusARM   (Appears on:EncryptionServices_StatusARM)  Deprecated version of EncryptionService_Status. Use v1beta20210401.EncryptionService_Status instead\n    Field Description      enabled  bool        keyType  EncryptionServiceStatusKeyType         lastEnabledTime  string        EncryptionServices   (Appears on:Encryption)  Deprecated version of EncryptionServices. Use v1beta20210401.EncryptionServices instead\n    Field Description      blob  EncryptionService         file  EncryptionService         queue  EncryptionService         table  EncryptionService         EncryptionServicesARM   (Appears on:EncryptionARM)  Deprecated version of EncryptionServices. Use v1beta20210401.EncryptionServices instead\n    Field Description      blob  EncryptionServiceARM         file  EncryptionServiceARM         queue  EncryptionServiceARM         table  EncryptionServiceARM         EncryptionServices_Status   (Appears on:Encryption_Status)  Deprecated version of EncryptionServices_Status. Use v1beta20210401.EncryptionServices_Status instead\n    Field Description      blob  EncryptionService_Status         file  EncryptionService_Status         queue  EncryptionService_Status         table  EncryptionService_Status         EncryptionServices_StatusARM   (Appears on:Encryption_StatusARM)  Deprecated version of EncryptionServices_Status. Use v1beta20210401.EncryptionServices_Status instead\n    Field Description      blob  EncryptionService_StatusARM         file  EncryptionService_StatusARM         queue  EncryptionService_StatusARM         table  EncryptionService_StatusARM         EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)  Deprecated version of EncryptionStatusKeySource. Use v1beta20210401.EncryptionStatusKeySource instead\n    Value Description   \u0026#34;Microsoft.Keyvault\u0026#34;\n  \u0026#34;Microsoft.Storage\u0026#34;\n    Encryption_Status   (Appears on:StorageAccount_Status)  Deprecated version of Encryption_Status. Use v1beta20210401.Encryption_Status instead\n    Field Description      identity  EncryptionIdentity_Status         keySource  EncryptionStatusKeySource         keyvaultproperties  KeyVaultProperties_Status         requireInfrastructureEncryption  bool        services  EncryptionServices_Status         Encryption_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of Encryption_Status. Use v1beta20210401.Encryption_Status instead\n    Field Description      identity  EncryptionIdentity_StatusARM         keySource  EncryptionStatusKeySource         keyvaultproperties  KeyVaultProperties_StatusARM         requireInfrastructureEncryption  bool        services  EncryptionServices_StatusARM         Endpoints_Status   (Appears on:StorageAccount_Status)  Deprecated version of Endpoints_Status. Use v1beta20210401.Endpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        internetEndpoints  StorageAccountInternetEndpoints_Status         microsoftEndpoints  StorageAccountMicrosoftEndpoints_Status         queue  string        table  string        web  string        Endpoints_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of Endpoints_Status. Use v1beta20210401.Endpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        internetEndpoints  StorageAccountInternetEndpoints_StatusARM         microsoftEndpoints  StorageAccountMicrosoftEndpoints_StatusARM         queue  string        table  string        web  string        ExtendedLocation   (Appears on:StorageAccounts_Spec)  Deprecated version of ExtendedLocation. Use v1beta20210401.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationARM   (Appears on:StorageAccounts_SpecARM)  Deprecated version of ExtendedLocation. Use v1beta20210401.ExtendedLocation instead\n    Field Description      name  string        type  ExtendedLocationType         ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)  Deprecated version of ExtendedLocationType. Use v1beta20210401.ExtendedLocationType instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)  Deprecated version of ExtendedLocationType_Status. Use v1beta20210401.ExtendedLocationType_Status instead\n    Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:StorageAccount_Status)  Deprecated version of ExtendedLocation_Status. Use v1beta20210401.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         ExtendedLocation_StatusARM   (Appears on:StorageAccount_StatusARM)  Deprecated version of ExtendedLocation_Status. Use v1beta20210401.ExtendedLocation_Status instead\n    Field Description      name  string        type  ExtendedLocationType_Status         GeoReplicationStatsStatusStatus (string alias)  (Appears on:GeoReplicationStats_Status, GeoReplicationStats_StatusARM)  Deprecated version of GeoReplicationStatsStatusStatus. Use v1beta20210401.GeoReplicationStatsStatusStatus instead\n    Value Description   \u0026#34;Bootstrap\u0026#34;\n  \u0026#34;Live\u0026#34;\n  \u0026#34;Unavailable\u0026#34;\n    GeoReplicationStats_Status   (Appears on:StorageAccount_Status)  Deprecated version of GeoReplicationStats_Status. Use v1beta20210401.GeoReplicationStats_Status instead\n    Field Description      canFailover  bool        lastSyncTime  string        status  GeoReplicationStatsStatusStatus         GeoReplicationStats_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of GeoReplicationStats_Status. Use v1beta20210401.GeoReplicationStats_Status instead\n    Field Description      canFailover  bool        lastSyncTime  string        status  GeoReplicationStatsStatusStatus         IPRule   (Appears on:NetworkRuleSet)  Deprecated version of IPRule. Use v1beta20210401.IPRule instead\n    Field Description      action  IPRuleAction         value  string        IPRuleARM   (Appears on:NetworkRuleSetARM)  Deprecated version of IPRule. Use v1beta20210401.IPRule instead\n    Field Description      action  IPRuleAction         value  string        IPRuleAction (string alias)  (Appears on:IPRule, IPRuleARM)  Deprecated version of IPRuleAction. Use v1beta20210401.IPRuleAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    IPRuleStatusAction (string alias)  (Appears on:IPRule_Status, IPRule_StatusARM)  Deprecated version of IPRuleStatusAction. Use v1beta20210401.IPRuleStatusAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    IPRule_Status   (Appears on:NetworkRuleSet_Status)  Deprecated version of IPRule_Status. Use v1beta20210401.IPRule_Status instead\n    Field Description      action  IPRuleStatusAction         value  string        IPRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)  Deprecated version of IPRule_Status. Use v1beta20210401.IPRule_Status instead\n    Field Description      action  IPRuleStatusAction         value  string        Identity   (Appears on:StorageAccounts_Spec)  Deprecated version of Identity. Use v1beta20210401.Identity instead\n    Field Description      type  IdentityType         IdentityARM   (Appears on:StorageAccounts_SpecARM)  Deprecated version of Identity. Use v1beta20210401.Identity instead\n    Field Description      type  IdentityType         IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)  Deprecated version of IdentityStatusType. Use v1beta20210401.IdentityStatusType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)  Deprecated version of IdentityType. Use v1beta20210401.IdentityType instead\n    Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:StorageAccount_Status)  Deprecated version of Identity_Status. Use v1beta20210401.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/storage/v1alpha1api20210401.UserAssignedIdentity_Status         Identity_StatusARM   (Appears on:StorageAccount_StatusARM)  Deprecated version of Identity_Status. Use v1beta20210401.Identity_Status instead\n    Field Description      principalId  string        tenantId  string        type  IdentityStatusType         userAssignedIdentities  map[string]./api/storage/v1alpha1api20210401.UserAssignedIdentity_StatusARM         ImmutabilityPolicyProperties_Status   (Appears on:BlobContainer_Status)  Deprecated version of ImmutabilityPolicyProperties_Status. Use v1beta20210401.ImmutabilityPolicyProperties_Status instead\n    Field Description      allowProtectedAppendWrites  bool        etag  string        immutabilityPeriodSinceCreationInDays  int        state  ImmutabilityPolicyPropertyStatusState         updateHistory  []UpdateHistoryProperty_Status         ImmutabilityPolicyProperties_StatusARM   (Appears on:ContainerProperties_StatusARM)  Deprecated version of ImmutabilityPolicyProperties_Status. Use v1beta20210401.ImmutabilityPolicyProperties_Status instead\n    Field Description      etag  string        properties  ImmutabilityPolicyProperty_StatusARM         updateHistory  []UpdateHistoryProperty_StatusARM         ImmutabilityPolicyPropertyStatusState (string alias)  (Appears on:ImmutabilityPolicyProperties_Status, ImmutabilityPolicyProperty_StatusARM)  Deprecated version of ImmutabilityPolicyPropertyStatusState. Use v1beta20210401.ImmutabilityPolicyPropertyStatusState instead\n    Value Description   \u0026#34;Locked\u0026#34;\n  \u0026#34;Unlocked\u0026#34;\n    ImmutabilityPolicyProperty_StatusARM   (Appears on:ImmutabilityPolicyProperties_StatusARM)  Deprecated version of ImmutabilityPolicyProperty_Status. Use v1beta20210401.ImmutabilityPolicyProperty_Status instead\n    Field Description      allowProtectedAppendWrites  bool        immutabilityPeriodSinceCreationInDays  int        state  ImmutabilityPolicyPropertyStatusState         ImmutableStorageWithVersioning   (Appears on:StorageAccountsBlobServicesContainers_Spec)  Deprecated version of ImmutableStorageWithVersioning. Use v1beta20210401.ImmutableStorageWithVersioning instead\n    Field Description      enabled  bool        ImmutableStorageWithVersioningARM   (Appears on:ContainerPropertiesARM)  Deprecated version of ImmutableStorageWithVersioning. Use v1beta20210401.ImmutableStorageWithVersioning instead\n    Field Description      enabled  bool        ImmutableStorageWithVersioningStatusMigrationState (string alias)  (Appears on:ImmutableStorageWithVersioning_Status, ImmutableStorageWithVersioning_StatusARM)  Deprecated version of ImmutableStorageWithVersioningStatusMigrationState. Use v1beta20210401.ImmutableStorageWithVersioningStatusMigrationState instead\n    Value Description   \u0026#34;Completed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n    ImmutableStorageWithVersioning_Status   (Appears on:BlobContainer_Status)  Deprecated version of ImmutableStorageWithVersioning_Status. Use v1beta20210401.ImmutableStorageWithVersioning_Status instead\n    Field Description      enabled  bool        migrationState  ImmutableStorageWithVersioningStatusMigrationState         timeStamp  string        ImmutableStorageWithVersioning_StatusARM   (Appears on:ContainerProperties_StatusARM)  Deprecated version of ImmutableStorageWithVersioning_Status. Use v1beta20210401.ImmutableStorageWithVersioning_Status instead\n    Field Description      enabled  bool        migrationState  ImmutableStorageWithVersioningStatusMigrationState         timeStamp  string        KeyCreationTime_Status   (Appears on:StorageAccount_Status)  Deprecated version of KeyCreationTime_Status. Use v1beta20210401.KeyCreationTime_Status instead\n    Field Description      key1  string        key2  string        KeyCreationTime_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of KeyCreationTime_Status. Use v1beta20210401.KeyCreationTime_Status instead\n    Field Description      key1  string        key2  string        KeyPolicy   (Appears on:StorageAccounts_Spec)  Deprecated version of KeyPolicy. Use v1beta20210401.KeyPolicy instead\n    Field Description      keyExpirationPeriodInDays  int        KeyPolicyARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of KeyPolicy. Use v1beta20210401.KeyPolicy instead\n    Field Description      keyExpirationPeriodInDays  int        KeyPolicy_Status   (Appears on:StorageAccount_Status)  Deprecated version of KeyPolicy_Status. Use v1beta20210401.KeyPolicy_Status instead\n    Field Description      keyExpirationPeriodInDays  int        KeyPolicy_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of KeyPolicy_Status. Use v1beta20210401.KeyPolicy_Status instead\n    Field Description      keyExpirationPeriodInDays  int        KeyVaultProperties   (Appears on:Encryption)  Deprecated version of KeyVaultProperties. Use v1beta20210401.KeyVaultProperties instead\n    Field Description      keyname  string        keyvaulturi  string        keyversion  string        KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Deprecated version of KeyVaultProperties. Use v1beta20210401.KeyVaultProperties instead\n    Field Description      keyname  string        keyvaulturi  string        keyversion  string        KeyVaultProperties_Status   (Appears on:Encryption_Status)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210401.KeyVaultProperties_Status instead\n    Field Description      currentVersionedKeyIdentifier  string        keyname  string        keyvaulturi  string        keyversion  string        lastKeyRotationTimestamp  string        KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)  Deprecated version of KeyVaultProperties_Status. Use v1beta20210401.KeyVaultProperties_Status instead\n    Field Description      currentVersionedKeyIdentifier  string        keyname  string        keyvaulturi  string        keyversion  string        lastKeyRotationTimestamp  string        LastAccessTimeTrackingPolicy   (Appears on:StorageAccountsBlobServices_Spec)  Deprecated version of LastAccessTimeTrackingPolicy. Use v1beta20210401.LastAccessTimeTrackingPolicy instead\n    Field Description      blobType  []string        enable  bool        name  LastAccessTimeTrackingPolicyName         trackingGranularityInDays  int        LastAccessTimeTrackingPolicyARM   (Appears on:BlobServicePropertiesPropertiesARM)  Deprecated version of LastAccessTimeTrackingPolicy. Use v1beta20210401.LastAccessTimeTrackingPolicy instead\n    Field Description      blobType  []string        enable  bool        name  LastAccessTimeTrackingPolicyName         trackingGranularityInDays  int        LastAccessTimeTrackingPolicyName (string alias)  (Appears on:LastAccessTimeTrackingPolicy, LastAccessTimeTrackingPolicyARM)  Deprecated version of LastAccessTimeTrackingPolicyName. Use v1beta20210401.LastAccessTimeTrackingPolicyName instead\n    Value Description   \u0026#34;AccessTimeTracking\u0026#34;\n    LastAccessTimeTrackingPolicyStatusName (string alias)  (Appears on:LastAccessTimeTrackingPolicy_Status, LastAccessTimeTrackingPolicy_StatusARM)  Deprecated version of LastAccessTimeTrackingPolicyStatusName. Use v1beta20210401.LastAccessTimeTrackingPolicyStatusName instead\n    Value Description   \u0026#34;AccessTimeTracking\u0026#34;\n    LastAccessTimeTrackingPolicy_Status   (Appears on:BlobServiceProperties_Status)  Deprecated version of LastAccessTimeTrackingPolicy_Status. Use v1beta20210401.LastAccessTimeTrackingPolicy_Status instead\n    Field Description      blobType  []string        enable  bool        name  LastAccessTimeTrackingPolicyStatusName         trackingGranularityInDays  int        LastAccessTimeTrackingPolicy_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)  Deprecated version of LastAccessTimeTrackingPolicy_Status. Use v1beta20210401.LastAccessTimeTrackingPolicy_Status instead\n    Field Description      blobType  []string        enable  bool        name  LastAccessTimeTrackingPolicyStatusName         trackingGranularityInDays  int        LegalHoldProperties_Status   (Appears on:BlobContainer_Status)  Deprecated version of LegalHoldProperties_Status. Use v1beta20210401.LegalHoldProperties_Status instead\n    Field Description      hasLegalHold  bool        tags  []TagProperty_Status         LegalHoldProperties_StatusARM   (Appears on:ContainerProperties_StatusARM)  Deprecated version of LegalHoldProperties_Status. Use v1beta20210401.LegalHoldProperties_Status instead\n    Field Description      hasLegalHold  bool        tags  []TagProperty_StatusARM         ManagementPolicyAction   (Appears on:ManagementPolicyDefinition)  Deprecated version of ManagementPolicyAction. Use v1beta20210401.ManagementPolicyAction instead\n    Field Description      baseBlob  ManagementPolicyBaseBlob         snapshot  ManagementPolicySnapShot         version  ManagementPolicyVersion         ManagementPolicyActionARM   (Appears on:ManagementPolicyDefinitionARM)  Deprecated version of ManagementPolicyAction. Use v1beta20210401.ManagementPolicyAction instead\n    Field Description      baseBlob  ManagementPolicyBaseBlobARM         snapshot  ManagementPolicySnapShotARM         version  ManagementPolicyVersionARM         ManagementPolicyAction_Status   (Appears on:ManagementPolicyDefinition_Status)  Deprecated version of ManagementPolicyAction_Status. Use v1beta20210401.ManagementPolicyAction_Status instead\n    Field Description      baseBlob  ManagementPolicyBaseBlob_Status         snapshot  ManagementPolicySnapShot_Status         version  ManagementPolicyVersion_Status         ManagementPolicyAction_StatusARM   (Appears on:ManagementPolicyDefinition_StatusARM)  Deprecated version of ManagementPolicyAction_Status. Use v1beta20210401.ManagementPolicyAction_Status instead\n    Field Description      baseBlob  ManagementPolicyBaseBlob_StatusARM         snapshot  ManagementPolicySnapShot_StatusARM         version  ManagementPolicyVersion_StatusARM         ManagementPolicyBaseBlob   (Appears on:ManagementPolicyAction)  Deprecated version of ManagementPolicyBaseBlob. Use v1beta20210401.ManagementPolicyBaseBlob instead\n    Field Description      delete  DateAfterModification         enableAutoTierToHotFromCool  bool        tierToArchive  DateAfterModification         tierToCool  DateAfterModification         ManagementPolicyBaseBlobARM   (Appears on:ManagementPolicyActionARM)  Deprecated version of ManagementPolicyBaseBlob. Use v1beta20210401.ManagementPolicyBaseBlob instead\n    Field Description      delete  DateAfterModificationARM         enableAutoTierToHotFromCool  bool        tierToArchive  DateAfterModificationARM         tierToCool  DateAfterModificationARM         ManagementPolicyBaseBlob_Status   (Appears on:ManagementPolicyAction_Status)  Deprecated version of ManagementPolicyBaseBlob_Status. Use v1beta20210401.ManagementPolicyBaseBlob_Status instead\n    Field Description      delete  DateAfterModification_Status         enableAutoTierToHotFromCool  bool        tierToArchive  DateAfterModification_Status         tierToCool  DateAfterModification_Status         ManagementPolicyBaseBlob_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)  Deprecated version of ManagementPolicyBaseBlob_Status. Use v1beta20210401.ManagementPolicyBaseBlob_Status instead\n    Field Description      delete  DateAfterModification_StatusARM         enableAutoTierToHotFromCool  bool        tierToArchive  DateAfterModification_StatusARM         tierToCool  DateAfterModification_StatusARM         ManagementPolicyDefinition   (Appears on:ManagementPolicyRule)  Deprecated version of ManagementPolicyDefinition. Use v1beta20210401.ManagementPolicyDefinition instead\n    Field Description      actions  ManagementPolicyAction         filters  ManagementPolicyFilter         ManagementPolicyDefinitionARM   (Appears on:ManagementPolicyRuleARM)  Deprecated version of ManagementPolicyDefinition. Use v1beta20210401.ManagementPolicyDefinition instead\n    Field Description      actions  ManagementPolicyActionARM         filters  ManagementPolicyFilterARM         ManagementPolicyDefinition_Status   (Appears on:ManagementPolicyRule_Status)  Deprecated version of ManagementPolicyDefinition_Status. Use v1beta20210401.ManagementPolicyDefinition_Status instead\n    Field Description      actions  ManagementPolicyAction_Status         filters  ManagementPolicyFilter_Status         ManagementPolicyDefinition_StatusARM   (Appears on:ManagementPolicyRule_StatusARM)  Deprecated version of ManagementPolicyDefinition_Status. Use v1beta20210401.ManagementPolicyDefinition_Status instead\n    Field Description      actions  ManagementPolicyAction_StatusARM         filters  ManagementPolicyFilter_StatusARM         ManagementPolicyFilter   (Appears on:ManagementPolicyDefinition)  Deprecated version of ManagementPolicyFilter. Use v1beta20210401.ManagementPolicyFilter instead\n    Field Description      blobIndexMatch  []TagFilter         blobTypes  []string        prefixMatch  []string        ManagementPolicyFilterARM   (Appears on:ManagementPolicyDefinitionARM)  Deprecated version of ManagementPolicyFilter. Use v1beta20210401.ManagementPolicyFilter instead\n    Field Description      blobIndexMatch  []TagFilterARM         blobTypes  []string        prefixMatch  []string        ManagementPolicyFilter_Status   (Appears on:ManagementPolicyDefinition_Status)  Deprecated version of ManagementPolicyFilter_Status. Use v1beta20210401.ManagementPolicyFilter_Status instead\n    Field Description      blobIndexMatch  []TagFilter_Status         blobTypes  []string        prefixMatch  []string        ManagementPolicyFilter_StatusARM   (Appears on:ManagementPolicyDefinition_StatusARM)  Deprecated version of ManagementPolicyFilter_Status. Use v1beta20210401.ManagementPolicyFilter_Status instead\n    Field Description      blobIndexMatch  []TagFilter_StatusARM         blobTypes  []string        prefixMatch  []string        ManagementPolicyPropertiesARM   (Appears on:StorageAccountsManagementPolicies_SpecARM)  Deprecated version of ManagementPolicyProperties. Use v1beta20210401.ManagementPolicyProperties instead\n    Field Description      policy  ManagementPolicySchemaARM         ManagementPolicyProperties_StatusARM   (Appears on:ManagementPolicy_StatusARM)  Deprecated version of ManagementPolicyProperties_Status. Use v1beta20210401.ManagementPolicyProperties_Status instead\n    Field Description      lastModifiedTime  string        policy  ManagementPolicySchema_StatusARM         ManagementPolicyRule   (Appears on:ManagementPolicySchema)  Deprecated version of ManagementPolicyRule. Use v1beta20210401.ManagementPolicyRule instead\n    Field Description      definition  ManagementPolicyDefinition         enabled  bool        name  string        type  ManagementPolicyRuleType         ManagementPolicyRuleARM   (Appears on:ManagementPolicySchemaARM)  Deprecated version of ManagementPolicyRule. Use v1beta20210401.ManagementPolicyRule instead\n    Field Description      definition  ManagementPolicyDefinitionARM         enabled  bool        name  string        type  ManagementPolicyRuleType         ManagementPolicyRuleStatusType (string alias)  (Appears on:ManagementPolicyRule_Status, ManagementPolicyRule_StatusARM)  Deprecated version of ManagementPolicyRuleStatusType. Use v1beta20210401.ManagementPolicyRuleStatusType instead\n    Value Description   \u0026#34;Lifecycle\u0026#34;\n    ManagementPolicyRuleType (string alias)  (Appears on:ManagementPolicyRule, ManagementPolicyRuleARM)  Deprecated version of ManagementPolicyRuleType. Use v1beta20210401.ManagementPolicyRuleType instead\n    Value Description   \u0026#34;Lifecycle\u0026#34;\n    ManagementPolicyRule_Status   (Appears on:ManagementPolicySchema_Status)  Deprecated version of ManagementPolicyRule_Status. Use v1beta20210401.ManagementPolicyRule_Status instead\n    Field Description      definition  ManagementPolicyDefinition_Status         enabled  bool        name  string        type  ManagementPolicyRuleStatusType         ManagementPolicyRule_StatusARM   (Appears on:ManagementPolicySchema_StatusARM)  Deprecated version of ManagementPolicyRule_Status. Use v1beta20210401.ManagementPolicyRule_Status instead\n    Field Description      definition  ManagementPolicyDefinition_StatusARM         enabled  bool        name  string        type  ManagementPolicyRuleStatusType         ManagementPolicySchema   (Appears on:StorageAccountsManagementPolicies_Spec)  Deprecated version of ManagementPolicySchema. Use v1beta20210401.ManagementPolicySchema instead\n    Field Description      rules  []ManagementPolicyRule         ManagementPolicySchemaARM   (Appears on:ManagementPolicyPropertiesARM)  Deprecated version of ManagementPolicySchema. Use v1beta20210401.ManagementPolicySchema instead\n    Field Description      rules  []ManagementPolicyRuleARM         ManagementPolicySchema_Status   (Appears on:ManagementPolicy_Status)  Deprecated version of ManagementPolicySchema_Status. Use v1beta20210401.ManagementPolicySchema_Status instead\n    Field Description      rules  []ManagementPolicyRule_Status         ManagementPolicySchema_StatusARM   (Appears on:ManagementPolicyProperties_StatusARM)  Deprecated version of ManagementPolicySchema_Status. Use v1beta20210401.ManagementPolicySchema_Status instead\n    Field Description      rules  []ManagementPolicyRule_StatusARM         ManagementPolicySnapShot   (Appears on:ManagementPolicyAction)  Deprecated version of ManagementPolicySnapShot. Use v1beta20210401.ManagementPolicySnapShot instead\n    Field Description      delete  DateAfterCreation         tierToArchive  DateAfterCreation         tierToCool  DateAfterCreation         ManagementPolicySnapShotARM   (Appears on:ManagementPolicyActionARM)  Deprecated version of ManagementPolicySnapShot. Use v1beta20210401.ManagementPolicySnapShot instead\n    Field Description      delete  DateAfterCreationARM         tierToArchive  DateAfterCreationARM         tierToCool  DateAfterCreationARM         ManagementPolicySnapShot_Status   (Appears on:ManagementPolicyAction_Status)  Deprecated version of ManagementPolicySnapShot_Status. Use v1beta20210401.ManagementPolicySnapShot_Status instead\n    Field Description      delete  DateAfterCreation_Status         tierToArchive  DateAfterCreation_Status         tierToCool  DateAfterCreation_Status         ManagementPolicySnapShot_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)  Deprecated version of ManagementPolicySnapShot_Status. Use v1beta20210401.ManagementPolicySnapShot_Status instead\n    Field Description      delete  DateAfterCreation_StatusARM         tierToArchive  DateAfterCreation_StatusARM         tierToCool  DateAfterCreation_StatusARM         ManagementPolicyVersion   (Appears on:ManagementPolicyAction)  Deprecated version of ManagementPolicyVersion. Use v1beta20210401.ManagementPolicyVersion instead\n    Field Description      delete  DateAfterCreation         tierToArchive  DateAfterCreation         tierToCool  DateAfterCreation         ManagementPolicyVersionARM   (Appears on:ManagementPolicyActionARM)  Deprecated version of ManagementPolicyVersion. Use v1beta20210401.ManagementPolicyVersion instead\n    Field Description      delete  DateAfterCreationARM         tierToArchive  DateAfterCreationARM         tierToCool  DateAfterCreationARM         ManagementPolicyVersion_Status   (Appears on:ManagementPolicyAction_Status)  Deprecated version of ManagementPolicyVersion_Status. Use v1beta20210401.ManagementPolicyVersion_Status instead\n    Field Description      delete  DateAfterCreation_Status         tierToArchive  DateAfterCreation_Status         tierToCool  DateAfterCreation_Status         ManagementPolicyVersion_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)  Deprecated version of ManagementPolicyVersion_Status. Use v1beta20210401.ManagementPolicyVersion_Status instead\n    Field Description      delete  DateAfterCreation_StatusARM         tierToArchive  DateAfterCreation_StatusARM         tierToCool  DateAfterCreation_StatusARM         ManagementPolicy_Status   (Appears on:StorageAccountsManagementPolicy)  Deprecated version of ManagementPolicy_Status. Use v1beta20210401.ManagementPolicy_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        lastModifiedTime  string        name  string        policy  ManagementPolicySchema_Status         type  string        ManagementPolicy_StatusARM   Deprecated version of ManagementPolicy_Status. Use v1beta20210401.ManagementPolicy_Status instead\n    Field Description      id  string        name  string        properties  ManagementPolicyProperties_StatusARM         type  string        NetworkRuleSet   (Appears on:StorageAccounts_Spec)  Deprecated version of NetworkRuleSet. Use v1beta20210401.NetworkRuleSet instead\n    Field Description      bypass  NetworkRuleSetBypass         defaultAction  NetworkRuleSetDefaultAction         ipRules  []IPRule         resourceAccessRules  []ResourceAccessRule         virtualNetworkRules  []VirtualNetworkRule         NetworkRuleSetARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of NetworkRuleSet. Use v1beta20210401.NetworkRuleSet instead\n    Field Description      bypass  NetworkRuleSetBypass         defaultAction  NetworkRuleSetDefaultAction         ipRules  []IPRuleARM         resourceAccessRules  []ResourceAccessRuleARM         virtualNetworkRules  []VirtualNetworkRuleARM         NetworkRuleSetBypass (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)  Deprecated version of NetworkRuleSetBypass. Use v1beta20210401.NetworkRuleSetBypass instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;Logging\u0026#34;\n  \u0026#34;Metrics\u0026#34;\n  \u0026#34;None\u0026#34;\n    NetworkRuleSetDefaultAction (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)  Deprecated version of NetworkRuleSetDefaultAction. Use v1beta20210401.NetworkRuleSetDefaultAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSetStatusBypass (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)  Deprecated version of NetworkRuleSetStatusBypass. Use v1beta20210401.NetworkRuleSetStatusBypass instead\n    Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;Logging\u0026#34;\n  \u0026#34;Metrics\u0026#34;\n  \u0026#34;None\u0026#34;\n    NetworkRuleSetStatusDefaultAction (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)  Deprecated version of NetworkRuleSetStatusDefaultAction. Use v1beta20210401.NetworkRuleSetStatusDefaultAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSet_Status   (Appears on:StorageAccount_Status)  Deprecated version of NetworkRuleSet_Status. Use v1beta20210401.NetworkRuleSet_Status instead\n    Field Description      bypass  NetworkRuleSetStatusBypass         defaultAction  NetworkRuleSetStatusDefaultAction         ipRules  []IPRule_Status         resourceAccessRules  []ResourceAccessRule_Status         virtualNetworkRules  []VirtualNetworkRule_Status         NetworkRuleSet_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of NetworkRuleSet_Status. Use v1beta20210401.NetworkRuleSet_Status instead\n    Field Description      bypass  NetworkRuleSetStatusBypass         defaultAction  NetworkRuleSetStatusDefaultAction         ipRules  []IPRule_StatusARM         resourceAccessRules  []ResourceAccessRule_StatusARM         virtualNetworkRules  []VirtualNetworkRule_StatusARM         PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:StorageAccount_Status)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210401.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of PrivateEndpointConnection_Status_SubResourceEmbedded. Use v1beta20210401.PrivateEndpointConnection_Status_SubResourceEmbedded instead\n    Field Description      id  string        QueuePropertiesARM   (Appears on:StorageAccountsQueueServicesQueues_SpecARM)  Deprecated version of QueueProperties. Use v1beta20210401.QueueProperties instead\n    Field Description      metadata  map[string]string        QueueProperties_StatusARM   (Appears on:StorageQueue_StatusARM)  Deprecated version of QueueProperties_Status. Use v1beta20210401.QueueProperties_Status instead\n    Field Description      approximateMessageCount  int        metadata  map[string]string        QueueServicePropertiesPropertiesARM   (Appears on:StorageAccountsQueueServices_SpecARM)  Deprecated version of QueueServicePropertiesProperties. Use v1beta20210401.QueueServicePropertiesProperties instead\n    Field Description      cors  CorsRulesARM         QueueServiceProperties_Status   (Appears on:StorageAccountsQueueService)  Deprecated version of QueueServiceProperties_Status. Use v1beta20210401.QueueServiceProperties_Status instead\n    Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    cors  CorsRules_Status         id  string        name  string        type  string        QueueServiceProperties_StatusARM   Deprecated version of QueueServiceProperties_Status. Use v1beta20210401.QueueServiceProperties_Status instead\n    Field Description      id  string        name  string        properties  QueueServiceProperties_Status_PropertiesARM         type  string        QueueServiceProperties_Status_PropertiesARM   (Appears on:QueueServiceProperties_StatusARM)  Deprecated version of QueueServiceProperties_Status_Properties. Use v1beta20210401.QueueServiceProperties_Status_Properties instead\n    Field Description      cors  CorsRules_StatusARM         ResourceAccessRule   (Appears on:NetworkRuleSet)  Deprecated version of ResourceAccessRule. Use v1beta20210401.ResourceAccessRule instead\n    Field Description      resourceReference  genruntime.ResourceReference         tenantId  string        ResourceAccessRuleARM   (Appears on:NetworkRuleSetARM)  Deprecated version of ResourceAccessRule. Use v1beta20210401.ResourceAccessRule instead\n    Field Description      resourceId  string        tenantId  string        ResourceAccessRule_Status   (Appears on:NetworkRuleSet_Status)  Deprecated version of ResourceAccessRule_Status. Use v1beta20210401.ResourceAccessRule_Status instead\n    Field Description      resourceId  string        tenantId  string        ResourceAccessRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)  Deprecated version of ResourceAccessRule_Status. Use v1beta20210401.ResourceAccessRule_Status instead\n    Field Description      resourceId  string        tenantId  string        RestorePolicyProperties   (Appears on:StorageAccountsBlobServices_Spec)  Deprecated version of RestorePolicyProperties. Use v1beta20210401.RestorePolicyProperties instead\n    Field Description      days  int        enabled  bool        RestorePolicyPropertiesARM   (Appears on:BlobServicePropertiesPropertiesARM)  Deprecated version of RestorePolicyProperties. Use v1beta20210401.RestorePolicyProperties instead\n    Field Description      days  int        enabled  bool        RestorePolicyProperties_Status   (Appears on:BlobServiceProperties_Status)  Deprecated version of RestorePolicyProperties_Status. Use v1beta20210401.RestorePolicyProperties_Status instead\n    Field Description      days  int        enabled  bool        lastEnabledTime  string        minRestoreTime  string        RestorePolicyProperties_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)  Deprecated version of RestorePolicyProperties_Status. Use v1beta20210401.RestorePolicyProperties_Status instead\n    Field Description      days  int        enabled  bool        lastEnabledTime  string        minRestoreTime  string        RoutingPreference   (Appears on:StorageAccounts_Spec)  Deprecated version of RoutingPreference. Use v1beta20210401.RoutingPreference instead\n    Field Description      publishInternetEndpoints  bool        publishMicrosoftEndpoints  bool        routingChoice  RoutingPreferenceRoutingChoice         RoutingPreferenceARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of RoutingPreference. Use v1beta20210401.RoutingPreference instead\n    Field Description      publishInternetEndpoints  bool        publishMicrosoftEndpoints  bool        routingChoice  RoutingPreferenceRoutingChoice         RoutingPreferenceRoutingChoice (string alias)  (Appears on:RoutingPreference, RoutingPreferenceARM)  Deprecated version of RoutingPreferenceRoutingChoice. Use v1beta20210401.RoutingPreferenceRoutingChoice instead\n    Value Description   \u0026#34;InternetRouting\u0026#34;\n  \u0026#34;MicrosoftRouting\u0026#34;\n    RoutingPreferenceStatusRoutingChoice (string alias)  (Appears on:RoutingPreference_Status, RoutingPreference_StatusARM)  Deprecated version of RoutingPreferenceStatusRoutingChoice. Use v1beta20210401.RoutingPreferenceStatusRoutingChoice instead\n    Value Description   \u0026#34;InternetRouting\u0026#34;\n  \u0026#34;MicrosoftRouting\u0026#34;\n    RoutingPreference_Status   (Appears on:StorageAccount_Status)  Deprecated version of RoutingPreference_Status. Use v1beta20210401.RoutingPreference_Status instead\n    Field Description      publishInternetEndpoints  bool        publishMicrosoftEndpoints  bool        routingChoice  RoutingPreferenceStatusRoutingChoice         RoutingPreference_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of RoutingPreference_Status. Use v1beta20210401.RoutingPreference_Status instead\n    Field Description      publishInternetEndpoints  bool        publishMicrosoftEndpoints  bool        routingChoice  RoutingPreferenceStatusRoutingChoice         SasPolicy   (Appears on:StorageAccounts_Spec)  Deprecated version of SasPolicy. Use v1beta20210401.SasPolicy instead\n    Field Description      expirationAction  SasPolicyExpirationAction         sasExpirationPeriod  string        SasPolicyARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Deprecated version of SasPolicy. Use v1beta20210401.SasPolicy instead\n    Field Description      expirationAction  SasPolicyExpirationAction         sasExpirationPeriod  string        SasPolicyExpirationAction (string alias)  (Appears on:SasPolicy, SasPolicyARM)  Deprecated version of SasPolicyExpirationAction. Use v1beta20210401.SasPolicyExpirationAction instead\n    Value Description   \u0026#34;Log\u0026#34;\n    SasPolicyStatusExpirationAction (string alias)  (Appears on:SasPolicy_Status, SasPolicy_StatusARM)  Deprecated version of SasPolicyStatusExpirationAction. Use v1beta20210401.SasPolicyStatusExpirationAction instead\n    Value Description   \u0026#34;Log\u0026#34;\n    SasPolicy_Status   (Appears on:StorageAccount_Status)  Deprecated version of SasPolicy_Status. Use v1beta20210401.SasPolicy_Status instead\n    Field Description      expirationAction  SasPolicyStatusExpirationAction         sasExpirationPeriod  string        SasPolicy_StatusARM   (Appears on:StorageAccountProperties_StatusARM)  Deprecated version of SasPolicy_Status. Use v1beta20210401.SasPolicy_Status instead\n    Field Description      expirationAction  SasPolicyStatusExpirationAction         sasExpirationPeriod  string        Sku   (Appears on:StorageAccounts_Spec)  Deprecated version of Sku. Use v1beta20210401.Sku instead\n    Field Description      name  SkuName         tier  SkuTier         SkuARM   (Appears on:StorageAccounts_SpecARM)  Deprecated version of Sku. Use v1beta20210401.Sku instead\n    Field Description      name  SkuName         tier  SkuTier         SkuName (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuName. Use v1beta20210401.SkuName instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_GRS\u0026#34;\n  \u0026#34;Standard_GZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_RAGRS\u0026#34;\n  \u0026#34;Standard_RAGZRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SkuName_Status (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of SkuName_Status. Use v1beta20210401.SkuName_Status instead\n    Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_GRS\u0026#34;\n  \u0026#34;Standard_GZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_RAGRS\u0026#34;\n  \u0026#34;Standard_RAGZRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)  Deprecated version of SkuTier. Use v1beta20210401.SkuTier instead\n    Value Description   \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:BlobServiceProperties_Status, StorageAccount_Status)  Deprecated version of Sku_Status. Use v1beta20210401.Sku_Status instead\n    Field Description      name  SkuName_Status         tier  Tier_Status         Sku_StatusARM   (Appears on:BlobServiceProperties_StatusARM, StorageAccount_StatusARM)  Deprecated version of Sku_Status. Use v1beta20210401.Sku_Status instead\n    Field Description      name  SkuName_Status         tier  Tier_Status         StorageAccount   Deprecated version of StorageAccount. Use v1beta20210401.StorageAccount instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccounts_Spec          accessTier  StorageAccountPropertiesCreateParametersAccessTier         allowBlobPublicAccess  bool        allowCrossTenantReplication  bool        allowSharedKeyAccess  bool        azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    customDomain  CustomDomain         encryption  Encryption         extendedLocation  ExtendedLocation         identity  Identity         isHnsEnabled  bool        isNfsV3Enabled  bool        keyPolicy  KeyPolicy         kind  StorageAccountsSpecKind         largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState         location  string        minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion         networkAcls  NetworkRuleSet         operatorSpec  StorageAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    routingPreference  RoutingPreference         sasPolicy  SasPolicy         sku  Sku         supportsHttpsTrafficOnly  bool        tags  map[string]string           status  StorageAccount_Status         StorageAccountInternetEndpoints_Status   (Appears on:Endpoints_Status)  Deprecated version of StorageAccountInternetEndpoints_Status. Use v1beta20210401.StorageAccountInternetEndpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        web  string        StorageAccountInternetEndpoints_StatusARM   (Appears on:Endpoints_StatusARM)  Deprecated version of StorageAccountInternetEndpoints_Status. Use v1beta20210401.StorageAccountInternetEndpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        web  string        StorageAccountMicrosoftEndpoints_Status   (Appears on:Endpoints_Status)  Deprecated version of StorageAccountMicrosoftEndpoints_Status. Use v1beta20210401.StorageAccountMicrosoftEndpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        queue  string        table  string        web  string        StorageAccountMicrosoftEndpoints_StatusARM   (Appears on:Endpoints_StatusARM)  Deprecated version of StorageAccountMicrosoftEndpoints_Status. Use v1beta20210401.StorageAccountMicrosoftEndpoints_Status instead\n    Field Description      blob  string        dfs  string        file  string        queue  string        table  string        web  string        StorageAccountOperatorSecrets   (Appears on:StorageAccountOperatorSpec)      Field Description      blobEndpoint  genruntime.SecretDestination     BlobEndpoint: indicates where the BlobEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    dfsEndpoint  genruntime.SecretDestination     DfsEndpoint: indicates where the DfsEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    fileEndpoint  genruntime.SecretDestination     FileEndpoint: indicates where the FileEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    key1  genruntime.SecretDestination     Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    key2  genruntime.SecretDestination     Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    queueEndpoint  genruntime.SecretDestination     QueueEndpoint: indicates where the QueueEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    tableEndpoint  genruntime.SecretDestination     TableEndpoint: indicates where the TableEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    webEndpoint  genruntime.SecretDestination     WebEndpoint: indicates where the WebEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    StorageAccountOperatorSpec   (Appears on:StorageAccounts_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  StorageAccountOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    StorageAccountPropertiesCreateParametersARM   (Appears on:StorageAccounts_SpecARM)  Deprecated version of StorageAccountPropertiesCreateParameters. Use v1beta20210401.StorageAccountPropertiesCreateParameters instead\n    Field Description      accessTier  StorageAccountPropertiesCreateParametersAccessTier         allowBlobPublicAccess  bool        allowCrossTenantReplication  bool        allowSharedKeyAccess  bool        azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthenticationARM         customDomain  CustomDomainARM         encryption  EncryptionARM         isHnsEnabled  bool        isNfsV3Enabled  bool        keyPolicy  KeyPolicyARM         largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState         minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion         networkAcls  NetworkRuleSetARM         routingPreference  RoutingPreferenceARM         sasPolicy  SasPolicyARM         supportsHttpsTrafficOnly  bool        StorageAccountPropertiesCreateParametersAccessTier (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)  Deprecated version of StorageAccountPropertiesCreateParametersAccessTier. Use v1beta20210401.StorageAccountPropertiesCreateParametersAccessTier instead\n    Value Description   \u0026#34;Cool\u0026#34;\n  \u0026#34;Hot\u0026#34;\n    StorageAccountPropertiesCreateParametersLargeFileSharesState (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)  Deprecated version of StorageAccountPropertiesCreateParametersLargeFileSharesState. Use v1beta20210401.StorageAccountPropertiesCreateParametersLargeFileSharesState instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    StorageAccountPropertiesCreateParametersMinimumTlsVersion (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)  Deprecated version of StorageAccountPropertiesCreateParametersMinimumTlsVersion. Use v1beta20210401.StorageAccountPropertiesCreateParametersMinimumTlsVersion instead\n    Value Description   \u0026#34;TLS1_0\u0026#34;\n  \u0026#34;TLS1_1\u0026#34;\n  \u0026#34;TLS1_2\u0026#34;\n    StorageAccountPropertiesStatusAccessTier (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusAccessTier. Use v1beta20210401.StorageAccountPropertiesStatusAccessTier instead\n    Value Description   \u0026#34;Cool\u0026#34;\n  \u0026#34;Hot\u0026#34;\n    StorageAccountPropertiesStatusLargeFileSharesState (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusLargeFileSharesState. Use v1beta20210401.StorageAccountPropertiesStatusLargeFileSharesState instead\n    Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    StorageAccountPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusMinimumTlsVersion. Use v1beta20210401.StorageAccountPropertiesStatusMinimumTlsVersion instead\n    Value Description   \u0026#34;TLS1_0\u0026#34;\n  \u0026#34;TLS1_1\u0026#34;\n  \u0026#34;TLS1_2\u0026#34;\n    StorageAccountPropertiesStatusProvisioningState (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusProvisioningState. Use v1beta20210401.StorageAccountPropertiesStatusProvisioningState instead\n    Value Description   \u0026#34;Creating\u0026#34;\n  \u0026#34;ResolvingDNS\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    StorageAccountPropertiesStatusStatusOfPrimary (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusStatusOfPrimary. Use v1beta20210401.StorageAccountPropertiesStatusStatusOfPrimary instead\n    Value Description   \u0026#34;available\u0026#34;\n  \u0026#34;unavailable\u0026#34;\n    StorageAccountPropertiesStatusStatusOfSecondary (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)  Deprecated version of StorageAccountPropertiesStatusStatusOfSecondary. Use v1beta20210401.StorageAccountPropertiesStatusStatusOfSecondary instead\n    Value Description   \u0026#34;available\u0026#34;\n  \u0026#34;unavailable\u0026#34;\n    StorageAccountProperties_StatusARM   (Appears on:StorageAccount_StatusARM)  Deprecated version of StorageAccountProperties_Status. Use v1beta20210401.StorageAccountProperties_Status instead\n    Field Description      accessTier  StorageAccountPropertiesStatusAccessTier         allowBlobPublicAccess  bool        allowCrossTenantReplication  bool        allowSharedKeyAccess  bool        azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication_StatusARM         blobRestoreStatus  BlobRestoreStatus_StatusARM         creationTime  string        customDomain  CustomDomain_StatusARM         encryption  Encryption_StatusARM         failoverInProgress  bool        geoReplicationStats  GeoReplicationStats_StatusARM         isHnsEnabled  bool        isNfsV3Enabled  bool        keyCreationTime  KeyCreationTime_StatusARM         keyPolicy  KeyPolicy_StatusARM         largeFileSharesState  StorageAccountPropertiesStatusLargeFileSharesState         lastGeoFailoverTime  string        minimumTlsVersion  StorageAccountPropertiesStatusMinimumTlsVersion         networkAcls  NetworkRuleSet_StatusARM         primaryEndpoints  Endpoints_StatusARM         primaryLocation  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM         provisioningState  StorageAccountPropertiesStatusProvisioningState         routingPreference  RoutingPreference_StatusARM         sasPolicy  SasPolicy_StatusARM         secondaryEndpoints  Endpoints_StatusARM         secondaryLocation  string        statusOfPrimary  StorageAccountPropertiesStatusStatusOfPrimary         statusOfSecondary  StorageAccountPropertiesStatusStatusOfSecondary         supportsHttpsTrafficOnly  bool        StorageAccountStatusKind (string alias)  (Appears on:StorageAccount_Status, StorageAccount_StatusARM)  Deprecated version of StorageAccountStatusKind. Use v1beta20210401.StorageAccountStatusKind instead\n    Value Description   \u0026#34;BlobStorage\u0026#34;\n  \u0026#34;BlockBlobStorage\u0026#34;\n  \u0026#34;FileStorage\u0026#34;\n  \u0026#34;Storage\u0026#34;\n  \u0026#34;StorageV2\u0026#34;\n    StorageAccount_Status   (Appears on:StorageAccount)  Deprecated version of StorageAccount_Status. Use v1beta20210401.StorageAccount_Status instead\n    Field Description      accessTier  StorageAccountPropertiesStatusAccessTier         allowBlobPublicAccess  bool        allowCrossTenantReplication  bool        allowSharedKeyAccess  bool        azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication_Status         blobRestoreStatus  BlobRestoreStatus_Status         conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationTime  string        customDomain  CustomDomain_Status         encryption  Encryption_Status         extendedLocation  ExtendedLocation_Status         failoverInProgress  bool        geoReplicationStats  GeoReplicationStats_Status         id  string        identity  Identity_Status         isHnsEnabled  bool        isNfsV3Enabled  bool        keyCreationTime  KeyCreationTime_Status         keyPolicy  KeyPolicy_Status         kind  StorageAccountStatusKind         largeFileSharesState  StorageAccountPropertiesStatusLargeFileSharesState         lastGeoFailoverTime  string        location  string        minimumTlsVersion  StorageAccountPropertiesStatusMinimumTlsVersion         name  string        networkAcls  NetworkRuleSet_Status         primaryEndpoints  Endpoints_Status         primaryLocation  string        privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded         provisioningState  StorageAccountPropertiesStatusProvisioningState         routingPreference  RoutingPreference_Status         sasPolicy  SasPolicy_Status         secondaryEndpoints  Endpoints_Status         secondaryLocation  string        sku  Sku_Status         statusOfPrimary  StorageAccountPropertiesStatusStatusOfPrimary         statusOfSecondary  StorageAccountPropertiesStatusStatusOfSecondary         supportsHttpsTrafficOnly  bool        tags  map[string]string        type  string        StorageAccount_StatusARM   Deprecated version of StorageAccount_Status. Use v1beta20210401.StorageAccount_Status instead\n    Field Description      extendedLocation  ExtendedLocation_StatusARM         id  string        identity  Identity_StatusARM         kind  StorageAccountStatusKind         location  string        name  string        properties  StorageAccountProperties_StatusARM         sku  Sku_StatusARM         tags  map[string]string        type  string        StorageAccountsBlobService   Deprecated version of StorageAccountsBlobService. Use v1beta20210401.StorageAccountsBlobService instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsBlobServices_Spec          automaticSnapshotPolicyEnabled  bool        changeFeed  ChangeFeed         containerDeleteRetentionPolicy  DeleteRetentionPolicy         cors  CorsRules         defaultServiceVersion  string        deleteRetentionPolicy  DeleteRetentionPolicy         isVersioningEnabled  bool        lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    restorePolicy  RestorePolicyProperties         tags  map[string]string           status  BlobServiceProperties_Status         StorageAccountsBlobServicesContainer   Deprecated version of StorageAccountsBlobServicesContainer. Use v1beta20210401.StorageAccountsBlobServicesContainer instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsBlobServicesContainers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultEncryptionScope  string        denyEncryptionScopeOverride  bool        immutableStorageWithVersioning  ImmutableStorageWithVersioning         location  string        metadata  map[string]string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsBlobService resource\n    publicAccess  ContainerPropertiesPublicAccess         tags  map[string]string           status  BlobContainer_Status         StorageAccountsBlobServicesContainers_Spec   (Appears on:StorageAccountsBlobServicesContainer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultEncryptionScope  string        denyEncryptionScopeOverride  bool        immutableStorageWithVersioning  ImmutableStorageWithVersioning         location  string        metadata  map[string]string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsBlobService resource\n    publicAccess  ContainerPropertiesPublicAccess         tags  map[string]string        StorageAccountsBlobServicesContainers_SpecARM   Deprecated version of StorageAccountsBlobServicesContainers_Spec. Use v1beta20210401.StorageAccountsBlobServicesContainers_Spec instead\n    Field Description      location  string        name  string        properties  ContainerPropertiesARM         tags  map[string]string        StorageAccountsBlobServices_Spec   (Appears on:StorageAccountsBlobService)      Field Description      automaticSnapshotPolicyEnabled  bool        changeFeed  ChangeFeed         containerDeleteRetentionPolicy  DeleteRetentionPolicy         cors  CorsRules         defaultServiceVersion  string        deleteRetentionPolicy  DeleteRetentionPolicy         isVersioningEnabled  bool        lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    restorePolicy  RestorePolicyProperties         tags  map[string]string        StorageAccountsBlobServices_SpecARM   Deprecated version of StorageAccountsBlobServices_Spec. Use v1beta20210401.StorageAccountsBlobServices_Spec instead\n    Field Description      location  string        name  string        properties  BlobServicePropertiesPropertiesARM         tags  map[string]string        StorageAccountsManagementPolicies_Spec   (Appears on:StorageAccountsManagementPolicy)      Field Description      owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    policy  ManagementPolicySchema         tags  map[string]string        StorageAccountsManagementPolicies_SpecARM   Deprecated version of StorageAccountsManagementPolicies_Spec. Use v1beta20210401.StorageAccountsManagementPolicies_Spec instead\n    Field Description      name  string        properties  ManagementPolicyPropertiesARM         tags  map[string]string        StorageAccountsManagementPolicy   Deprecated version of StorageAccountsManagementPolicy. Use v1beta20210401.StorageAccountsManagementPolicy instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsManagementPolicies_Spec          owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    policy  ManagementPolicySchema         tags  map[string]string           status  ManagementPolicy_Status         StorageAccountsQueueService   Deprecated version of StorageAccountsQueueService. Use v1beta20210401.StorageAccountsQueueService instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsQueueServices_Spec          cors  CorsRules         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    tags  map[string]string           status  QueueServiceProperties_Status         StorageAccountsQueueServicesQueue   Deprecated version of StorageAccountsQueueServicesQueue. Use v1beta20210401.StorageAccountsQueueServicesQueue instead\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsQueueServicesQueues_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        metadata  map[string]string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsQueueService resource\n    tags  map[string]string           status  StorageQueue_Status         StorageAccountsQueueServicesQueues_Spec   (Appears on:StorageAccountsQueueServicesQueue)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string        metadata  map[string]string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsQueueService resource\n    tags  map[string]string        StorageAccountsQueueServicesQueues_SpecARM   Deprecated version of StorageAccountsQueueServicesQueues_Spec. Use v1beta20210401.StorageAccountsQueueServicesQueues_Spec instead\n    Field Description      location  string        name  string        properties  QueuePropertiesARM         tags  map[string]string        StorageAccountsQueueServices_Spec   (Appears on:StorageAccountsQueueService)      Field Description      cors  CorsRules         location  string        owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    tags  map[string]string        StorageAccountsQueueServices_SpecARM   Deprecated version of StorageAccountsQueueServices_Spec. Use v1beta20210401.StorageAccountsQueueServices_Spec instead\n    Field Description      location  string        name  string        properties  QueueServicePropertiesPropertiesARM         tags  map[string]string        StorageAccountsSpecKind (string alias)  (Appears on:StorageAccounts_Spec, StorageAccounts_SpecARM)  Deprecated version of StorageAccountsSpecKind. Use v1beta20210401.StorageAccountsSpecKind instead\n    Value Description   \u0026#34;BlobStorage\u0026#34;\n  \u0026#34;BlockBlobStorage\u0026#34;\n  \u0026#34;FileStorage\u0026#34;\n  \u0026#34;Storage\u0026#34;\n  \u0026#34;StorageV2\u0026#34;\n    StorageAccounts_Spec   (Appears on:StorageAccount)      Field Description      accessTier  StorageAccountPropertiesCreateParametersAccessTier         allowBlobPublicAccess  bool        allowCrossTenantReplication  bool        allowSharedKeyAccess  bool        azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication         azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    customDomain  CustomDomain         encryption  Encryption         extendedLocation  ExtendedLocation         identity  Identity         isHnsEnabled  bool        isNfsV3Enabled  bool        keyPolicy  KeyPolicy         kind  StorageAccountsSpecKind         largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState         location  string        minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion         networkAcls  NetworkRuleSet         operatorSpec  StorageAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    routingPreference  RoutingPreference         sasPolicy  SasPolicy         sku  Sku         supportsHttpsTrafficOnly  bool        tags  map[string]string        StorageAccounts_SpecARM   Deprecated version of StorageAccounts_Spec. Use v1beta20210401.StorageAccounts_Spec instead\n    Field Description      extendedLocation  ExtendedLocationARM         identity  IdentityARM         kind  StorageAccountsSpecKind         location  string        name  string        properties  StorageAccountPropertiesCreateParametersARM         sku  SkuARM         tags  map[string]string        StorageQueue_Status   (Appears on:StorageAccountsQueueServicesQueue)  Deprecated version of StorageQueue_Status. Use v1beta20210401.StorageQueue_Status instead\n    Field Description      approximateMessageCount  int        conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string        metadata  map[string]string        name  string        type  string        StorageQueue_StatusARM   Deprecated version of StorageQueue_Status. Use v1beta20210401.StorageQueue_Status instead\n    Field Description      id  string        name  string        properties  QueueProperties_StatusARM         type  string        TagFilter   (Appears on:ManagementPolicyFilter)  Deprecated version of TagFilter. Use v1beta20210401.TagFilter instead\n    Field Description      name  string        op  string        value  string        TagFilterARM   (Appears on:ManagementPolicyFilterARM)  Deprecated version of TagFilter. Use v1beta20210401.TagFilter instead\n    Field Description      name  string        op  string        value  string        TagFilter_Status   (Appears on:ManagementPolicyFilter_Status)  Deprecated version of TagFilter_Status. Use v1beta20210401.TagFilter_Status instead\n    Field Description      name  string        op  string        value  string        TagFilter_StatusARM   (Appears on:ManagementPolicyFilter_StatusARM)  Deprecated version of TagFilter_Status. Use v1beta20210401.TagFilter_Status instead\n    Field Description      name  string        op  string        value  string        TagProperty_Status   (Appears on:LegalHoldProperties_Status)  Deprecated version of TagProperty_Status. Use v1beta20210401.TagProperty_Status instead\n    Field Description      objectIdentifier  string        tag  string        tenantId  string        timestamp  string        upn  string        TagProperty_StatusARM   (Appears on:LegalHoldProperties_StatusARM)  Deprecated version of TagProperty_Status. Use v1beta20210401.TagProperty_Status instead\n    Field Description      objectIdentifier  string        tag  string        tenantId  string        timestamp  string        upn  string        Tier_Status (string alias)  (Appears on:Sku_Status, Sku_StatusARM)  Deprecated version of Tier_Status. Use v1beta20210401.Tier_Status instead\n    Value Description   \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    UpdateHistoryPropertyStatusUpdate (string alias)  (Appears on:UpdateHistoryProperty_Status, UpdateHistoryProperty_StatusARM)  Deprecated version of UpdateHistoryPropertyStatusUpdate. Use v1beta20210401.UpdateHistoryPropertyStatusUpdate instead\n    Value Description   \u0026#34;extend\u0026#34;\n  \u0026#34;lock\u0026#34;\n  \u0026#34;put\u0026#34;\n    UpdateHistoryProperty_Status   (Appears on:ImmutabilityPolicyProperties_Status)  Deprecated version of UpdateHistoryProperty_Status. Use v1beta20210401.UpdateHistoryProperty_Status instead\n    Field Description      immutabilityPeriodSinceCreationInDays  int        objectIdentifier  string        tenantId  string        timestamp  string        update  UpdateHistoryPropertyStatusUpdate         upn  string        UpdateHistoryProperty_StatusARM   (Appears on:ImmutabilityPolicyProperties_StatusARM)  Deprecated version of UpdateHistoryProperty_Status. Use v1beta20210401.UpdateHistoryProperty_Status instead\n    Field Description      immutabilityPeriodSinceCreationInDays  int        objectIdentifier  string        tenantId  string        timestamp  string        update  UpdateHistoryPropertyStatusUpdate         upn  string        UserAssignedIdentity_Status   (Appears on:Identity_Status)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20210401.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        principalId  string        UserAssignedIdentity_StatusARM   (Appears on:Identity_StatusARM)  Deprecated version of UserAssignedIdentity_Status. Use v1beta20210401.UserAssignedIdentity_Status instead\n    Field Description      clientId  string        principalId  string        VirtualNetworkRule   (Appears on:NetworkRuleSet)  Deprecated version of VirtualNetworkRule. Use v1beta20210401.VirtualNetworkRule instead\n    Field Description      action  VirtualNetworkRuleAction         reference  genruntime.ResourceReference         state  VirtualNetworkRuleState         VirtualNetworkRuleARM   (Appears on:NetworkRuleSetARM)  Deprecated version of VirtualNetworkRule. Use v1beta20210401.VirtualNetworkRule instead\n    Field Description      action  VirtualNetworkRuleAction         id  string        state  VirtualNetworkRuleState         VirtualNetworkRuleAction (string alias)  (Appears on:VirtualNetworkRule, VirtualNetworkRuleARM)  Deprecated version of VirtualNetworkRuleAction. Use v1beta20210401.VirtualNetworkRuleAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    VirtualNetworkRuleState (string alias)  (Appears on:VirtualNetworkRule, VirtualNetworkRuleARM)  Deprecated version of VirtualNetworkRuleState. Use v1beta20210401.VirtualNetworkRuleState instead\n    Value Description   \u0026#34;Deprovisioning\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;NetworkSourceDeleted\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    VirtualNetworkRuleStatusAction (string alias)  (Appears on:VirtualNetworkRule_Status, VirtualNetworkRule_StatusARM)  Deprecated version of VirtualNetworkRuleStatusAction. Use v1beta20210401.VirtualNetworkRuleStatusAction instead\n    Value Description   \u0026#34;Allow\u0026#34;\n    VirtualNetworkRuleStatusState (string alias)  (Appears on:VirtualNetworkRule_Status, VirtualNetworkRule_StatusARM)  Deprecated version of VirtualNetworkRuleStatusState. Use v1beta20210401.VirtualNetworkRuleStatusState instead\n    Value Description   \u0026#34;Deprovisioning\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;NetworkSourceDeleted\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    VirtualNetworkRule_Status   (Appears on:NetworkRuleSet_Status)  Deprecated version of VirtualNetworkRule_Status. Use v1beta20210401.VirtualNetworkRule_Status instead\n    Field Description      action  VirtualNetworkRuleStatusAction         id  string        state  VirtualNetworkRuleStatusState         VirtualNetworkRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)  Deprecated version of VirtualNetworkRule_Status. Use v1beta20210401.VirtualNetworkRule_Status instead\n    Field Description      action  VirtualNetworkRuleStatusAction         id  string        state  VirtualNetworkRuleStatusState          "},{"id":73,"href":"/azure-service-operator/reference/storage.v1beta20210401/","title":"storage.azure.com/v1beta20210401","section":"References","content":"storage.azure.com/v1beta20210401  Package v1beta20210401 contains API Schema definitions for the storage v1beta20210401 API group\n Resource Types:  ActiveDirectoryProperties   (Appears on:AzureFilesIdentityBasedAuthentication)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ActiveDirectoryProperties\n    Field Description      azureStorageSid  string    AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.\n    domainGuid  string    DomainGuid: Specifies the domain GUID.\n    domainName  string    DomainName: Specifies the primary domain that the AD DNS server is authoritative for.\n    domainSid  string    DomainSid: Specifies the security identifier (SID).\n    forestName  string    ForestName: Specifies the Active Directory forest to get.\n    netBiosDomainName  string    NetBiosDomainName: Specifies the NetBIOS domain name.\n    ActiveDirectoryPropertiesARM   (Appears on:AzureFilesIdentityBasedAuthenticationARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ActiveDirectoryProperties\n    Field Description      azureStorageSid  string    AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.\n    domainGuid  string    DomainGuid: Specifies the domain GUID.\n    domainName  string    DomainName: Specifies the primary domain that the AD DNS server is authoritative for.\n    domainSid  string    DomainSid: Specifies the security identifier (SID).\n    forestName  string    ForestName: Specifies the Active Directory forest to get.\n    netBiosDomainName  string    NetBiosDomainName: Specifies the NetBIOS domain name.\n    ActiveDirectoryProperties_Status   (Appears on:AzureFilesIdentityBasedAuthentication_Status)      Field Description      azureStorageSid  string    AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.\n    domainGuid  string    DomainGuid: Specifies the domain GUID.\n    domainName  string    DomainName: Specifies the primary domain that the AD DNS server is authoritative for.\n    domainSid  string    DomainSid: Specifies the security identifier (SID).\n    forestName  string    ForestName: Specifies the Active Directory forest to get.\n    netBiosDomainName  string    NetBiosDomainName: Specifies the NetBIOS domain name.\n    ActiveDirectoryProperties_StatusARM   (Appears on:AzureFilesIdentityBasedAuthentication_StatusARM)      Field Description      azureStorageSid  string    AzureStorageSid: Specifies the security identifier (SID) for Azure Storage.\n    domainGuid  string    DomainGuid: Specifies the domain GUID.\n    domainName  string    DomainName: Specifies the primary domain that the AD DNS server is authoritative for.\n    domainSid  string    DomainSid: Specifies the security identifier (SID).\n    forestName  string    ForestName: Specifies the Active Directory forest to get.\n    netBiosDomainName  string    NetBiosDomainName: Specifies the NetBIOS domain name.\n    AzureFilesIdentityBasedAuthentication   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/AzureFilesIdentityBasedAuthentication\n    Field Description      activeDirectoryProperties  ActiveDirectoryProperties     ActiveDirectoryProperties: Settings properties for Active Directory (AD).\n    defaultSharePermission  AzureFilesIdentityBasedAuthenticationDefaultSharePermission     DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.\n    directoryServiceOptions  AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions     DirectoryServiceOptions: Indicates the directory service used.\n    AzureFilesIdentityBasedAuthenticationARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/AzureFilesIdentityBasedAuthentication\n    Field Description      activeDirectoryProperties  ActiveDirectoryPropertiesARM     ActiveDirectoryProperties: Settings properties for Active Directory (AD).\n    defaultSharePermission  AzureFilesIdentityBasedAuthenticationDefaultSharePermission     DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.\n    directoryServiceOptions  AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions     DirectoryServiceOptions: Indicates the directory service used.\n    AzureFilesIdentityBasedAuthenticationDefaultSharePermission (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication, AzureFilesIdentityBasedAuthenticationARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;StorageFileDataSmbShareContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareElevatedContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareOwner\u0026#34;\n  \u0026#34;StorageFileDataSmbShareReader\u0026#34;\n    AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication, AzureFilesIdentityBasedAuthenticationARM)      Value Description   \u0026#34;AADDS\u0026#34;\n  \u0026#34;AD\u0026#34;\n  \u0026#34;None\u0026#34;\n    AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication_Status, AzureFilesIdentityBasedAuthentication_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;StorageFileDataSmbShareContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareElevatedContributor\u0026#34;\n  \u0026#34;StorageFileDataSmbShareOwner\u0026#34;\n  \u0026#34;StorageFileDataSmbShareReader\u0026#34;\n    AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions (string alias)  (Appears on:AzureFilesIdentityBasedAuthentication_Status, AzureFilesIdentityBasedAuthentication_StatusARM)      Value Description   \u0026#34;AADDS\u0026#34;\n  \u0026#34;AD\u0026#34;\n  \u0026#34;None\u0026#34;\n    AzureFilesIdentityBasedAuthentication_Status   (Appears on:StorageAccount_Status)      Field Description      activeDirectoryProperties  ActiveDirectoryProperties_Status     ActiveDirectoryProperties: Required if choose AD.\n    defaultSharePermission  AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission     DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.\n    directoryServiceOptions  AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions     DirectoryServiceOptions: Indicates the directory service used.\n    AzureFilesIdentityBasedAuthentication_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      activeDirectoryProperties  ActiveDirectoryProperties_StatusARM     ActiveDirectoryProperties: Required if choose AD.\n    defaultSharePermission  AzureFilesIdentityBasedAuthenticationStatusDefaultSharePermission     DefaultSharePermission: Default share permission for users using Kerberos authentication if RBAC role is not assigned.\n    directoryServiceOptions  AzureFilesIdentityBasedAuthenticationStatusDirectoryServiceOptions     DirectoryServiceOptions: Indicates the directory service used.\n    BlobContainer_Status   (Appears on:StorageAccountsBlobServicesContainer)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    defaultEncryptionScope  string    DefaultEncryptionScope: Default the container to use specified encryption scope for all writes.\n    deleted  bool    Deleted: Indicates whether the blob container was deleted.\n    deletedTime  string    DeletedTime: Blob container deletion time.\n    denyEncryptionScopeOverride  bool    DenyEncryptionScopeOverride: Block override of encryption scope from the container default.\n    etag  string    Etag: Resource Etag.\n    hasImmutabilityPolicy  bool    HasImmutabilityPolicy: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n    hasLegalHold  bool    HasLegalHold: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    immutabilityPolicy  ImmutabilityPolicyProperties_Status     ImmutabilityPolicy: The ImmutabilityPolicy property of the container.\n    immutableStorageWithVersioning  ImmutableStorageWithVersioning_Status     ImmutableStorageWithVersioning: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.\n    lastModifiedTime  string    LastModifiedTime: Returns the date and time the container was last modified.\n    leaseDuration  ContainerPropertiesStatusLeaseDuration     LeaseDuration: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n    leaseState  ContainerPropertiesStatusLeaseState     LeaseState: Lease state of the container.\n    leaseStatus  ContainerPropertiesStatusLeaseStatus     LeaseStatus: The lease status of the container.\n    legalHold  LegalHoldProperties_Status     LegalHold: The LegalHold property of the container.\n    metadata  map[string]string    Metadata: A name-value pair to associate with the container as metadata.\n    name  string    Name: The name of the resource\n    publicAccess  ContainerPropertiesStatusPublicAccess     PublicAccess: Specifies whether data in the container may be accessed publicly and the level of access.\n    remainingRetentionDays  int    RemainingRetentionDays: Remaining retention days for soft deleted blob container.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    version  string    Version: The version of the deleted blob container.\n    BlobContainer_StatusARM       Field Description      etag  string    Etag: Resource Etag.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  ContainerProperties_StatusARM     Properties: Properties of the blob container.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    BlobRestoreParameters_Status   (Appears on:BlobRestoreStatus_Status)      Field Description      blobRanges  []BlobRestoreRange_Status     BlobRanges: Blob ranges to restore.\n    timeToRestore  string    TimeToRestore: Restore blob to the specified time.\n    BlobRestoreParameters_StatusARM   (Appears on:BlobRestoreStatus_StatusARM)      Field Description      blobRanges  []BlobRestoreRange_StatusARM     BlobRanges: Blob ranges to restore.\n    timeToRestore  string    TimeToRestore: Restore blob to the specified time.\n    BlobRestoreRange_Status   (Appears on:BlobRestoreParameters_Status)      Field Description      endRange  string    EndRange: Blob end range. This is exclusive. Empty means account end.\n    startRange  string    StartRange: Blob start range. This is inclusive. Empty means account start.\n    BlobRestoreRange_StatusARM   (Appears on:BlobRestoreParameters_StatusARM)      Field Description      endRange  string    EndRange: Blob end range. This is exclusive. Empty means account end.\n    startRange  string    StartRange: Blob start range. This is inclusive. Empty means account start.\n    BlobRestoreStatusStatusStatus (string alias)  (Appears on:BlobRestoreStatus_Status, BlobRestoreStatus_StatusARM)      Value Description   \u0026#34;Complete\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n    BlobRestoreStatus_Status   (Appears on:StorageAccount_Status)      Field Description      failureReason  string    FailureReason: Failure reason when blob restore is failed.\n    parameters  BlobRestoreParameters_Status     Parameters: Blob restore request parameters.\n    restoreId  string    RestoreId: Id for tracking blob restore request.\n    status  BlobRestoreStatusStatusStatus     Status: The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.\n    BlobRestoreStatus_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      failureReason  string    FailureReason: Failure reason when blob restore is failed.\n    parameters  BlobRestoreParameters_StatusARM     Parameters: Blob restore request parameters.\n    restoreId  string    RestoreId: Id for tracking blob restore request.\n    status  BlobRestoreStatusStatusStatus     Status: The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.\n    BlobServicePropertiesPropertiesARM   (Appears on:StorageAccountsBlobServices_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/BlobServicePropertiesProperties\n    Field Description      automaticSnapshotPolicyEnabled  bool    AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.\n    changeFeed  ChangeFeedARM     ChangeFeed: The blob service properties for change feed events.\n    containerDeleteRetentionPolicy  DeleteRetentionPolicyARM     ContainerDeleteRetentionPolicy: The service properties for soft delete.\n    cors  CorsRulesARM     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    defaultServiceVersion  string    DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n    deleteRetentionPolicy  DeleteRetentionPolicyARM     DeleteRetentionPolicy: The service properties for soft delete.\n    isVersioningEnabled  bool    IsVersioningEnabled: Versioning is enabled if set to true.\n    lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicyARM     LastAccessTimeTrackingPolicy: The blob service properties for Last access time based tracking policy.\n    restorePolicy  RestorePolicyPropertiesARM     RestorePolicy: The blob service properties for blob restore policy\n    BlobServiceProperties_Status   (Appears on:StorageAccountsBlobService)      Field Description      automaticSnapshotPolicyEnabled  bool    AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.\n    changeFeed  ChangeFeed_Status     ChangeFeed: The blob service properties for change feed events.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    containerDeleteRetentionPolicy  DeleteRetentionPolicy_Status     ContainerDeleteRetentionPolicy: The blob service properties for container soft delete.\n    cors  CorsRules_Status     Cors: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.\n    defaultServiceVersion  string    DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n    deleteRetentionPolicy  DeleteRetentionPolicy_Status     DeleteRetentionPolicy: The blob service properties for blob soft delete.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    isVersioningEnabled  bool    IsVersioningEnabled: Versioning is enabled if set to true.\n    lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy_Status     LastAccessTimeTrackingPolicy: The blob service property to configure last access time based tracking policy.\n    name  string    Name: The name of the resource\n    restorePolicy  RestorePolicyProperties_Status     RestorePolicy: The blob service properties for blob restore policy.\n    sku  Sku_Status     Sku: Sku name and tier.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    BlobServiceProperties_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  BlobServiceProperties_Status_PropertiesARM     Properties: The properties of a storage account’s Blob service.\n    sku  Sku_StatusARM     Sku: Sku name and tier.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    BlobServiceProperties_Status_PropertiesARM   (Appears on:BlobServiceProperties_StatusARM)      Field Description      automaticSnapshotPolicyEnabled  bool    AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.\n    changeFeed  ChangeFeed_StatusARM     ChangeFeed: The blob service properties for change feed events.\n    containerDeleteRetentionPolicy  DeleteRetentionPolicy_StatusARM     ContainerDeleteRetentionPolicy: The blob service properties for container soft delete.\n    cors  CorsRules_StatusARM     Cors: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.\n    defaultServiceVersion  string    DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n    deleteRetentionPolicy  DeleteRetentionPolicy_StatusARM     DeleteRetentionPolicy: The blob service properties for blob soft delete.\n    isVersioningEnabled  bool    IsVersioningEnabled: Versioning is enabled if set to true.\n    lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy_StatusARM     LastAccessTimeTrackingPolicy: The blob service property to configure last access time based tracking policy.\n    restorePolicy  RestorePolicyProperties_StatusARM     RestorePolicy: The blob service properties for blob restore policy.\n    ChangeFeed   (Appears on:StorageAccountsBlobServices_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ChangeFeed\n    Field Description      enabled  bool    Enabled: Indicates whether change feed event logging is enabled for the Blob service.\n    retentionInDays  int    RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.\n    ChangeFeedARM   (Appears on:BlobServicePropertiesPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ChangeFeed\n    Field Description      enabled  bool    Enabled: Indicates whether change feed event logging is enabled for the Blob service.\n    retentionInDays  int    RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.\n    ChangeFeed_Status   (Appears on:BlobServiceProperties_Status)      Field Description      enabled  bool    Enabled: Indicates whether change feed event logging is enabled for the Blob service.\n    retentionInDays  int    RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.\n    ChangeFeed_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)      Field Description      enabled  bool    Enabled: Indicates whether change feed event logging is enabled for the Blob service.\n    retentionInDays  int    RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.\n    ContainerPropertiesARM   (Appears on:StorageAccountsBlobServicesContainers_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ContainerProperties\n    Field Description      defaultEncryptionScope  string    DefaultEncryptionScope: Default the container to use specified encryption scope for all writes.\n    denyEncryptionScopeOverride  bool    DenyEncryptionScopeOverride: Block override of encryption scope from the container default.\n    immutableStorageWithVersioning  ImmutableStorageWithVersioningARM     ImmutableStorageWithVersioning: Object level immutability properties of the container.\n    metadata  map[string]string    Metadata: A name-value pair to associate with the container as metadata.\n    publicAccess  ContainerPropertiesPublicAccess     PublicAccess: Specifies whether data in the container may be accessed publicly and the level of access.\n    ContainerPropertiesPublicAccess (string alias)  (Appears on:ContainerPropertiesARM, StorageAccountsBlobServicesContainers_Spec)      Value Description   \u0026#34;Blob\u0026#34;\n  \u0026#34;Container\u0026#34;\n  \u0026#34;None\u0026#34;\n    ContainerPropertiesStatusLeaseDuration (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)      Value Description   \u0026#34;Fixed\u0026#34;\n  \u0026#34;Infinite\u0026#34;\n    ContainerPropertiesStatusLeaseState (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)      Value Description   \u0026#34;Available\u0026#34;\n  \u0026#34;Breaking\u0026#34;\n  \u0026#34;Broken\u0026#34;\n  \u0026#34;Expired\u0026#34;\n  \u0026#34;Leased\u0026#34;\n    ContainerPropertiesStatusLeaseStatus (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)      Value Description   \u0026#34;Locked\u0026#34;\n  \u0026#34;Unlocked\u0026#34;\n    ContainerPropertiesStatusPublicAccess (string alias)  (Appears on:BlobContainer_Status, ContainerProperties_StatusARM)      Value Description   \u0026#34;Blob\u0026#34;\n  \u0026#34;Container\u0026#34;\n  \u0026#34;None\u0026#34;\n    ContainerProperties_StatusARM   (Appears on:BlobContainer_StatusARM)      Field Description      defaultEncryptionScope  string    DefaultEncryptionScope: Default the container to use specified encryption scope for all writes.\n    deleted  bool    Deleted: Indicates whether the blob container was deleted.\n    deletedTime  string    DeletedTime: Blob container deletion time.\n    denyEncryptionScopeOverride  bool    DenyEncryptionScopeOverride: Block override of encryption scope from the container default.\n    hasImmutabilityPolicy  bool    HasImmutabilityPolicy: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n    hasLegalHold  bool    HasLegalHold: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n    immutabilityPolicy  ImmutabilityPolicyProperties_StatusARM     ImmutabilityPolicy: The ImmutabilityPolicy property of the container.\n    immutableStorageWithVersioning  ImmutableStorageWithVersioning_StatusARM     ImmutableStorageWithVersioning: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.\n    lastModifiedTime  string    LastModifiedTime: Returns the date and time the container was last modified.\n    leaseDuration  ContainerPropertiesStatusLeaseDuration     LeaseDuration: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n    leaseState  ContainerPropertiesStatusLeaseState     LeaseState: Lease state of the container.\n    leaseStatus  ContainerPropertiesStatusLeaseStatus     LeaseStatus: The lease status of the container.\n    legalHold  LegalHoldProperties_StatusARM     LegalHold: The LegalHold property of the container.\n    metadata  map[string]string    Metadata: A name-value pair to associate with the container as metadata.\n    publicAccess  ContainerPropertiesStatusPublicAccess     PublicAccess: Specifies whether data in the container may be accessed publicly and the level of access.\n    remainingRetentionDays  int    RemainingRetentionDays: Remaining retention days for soft deleted blob container.\n    version  string    Version: The version of the deleted blob container.\n    CorsRule   (Appears on:CorsRules)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CorsRule\n    Field Description      allowedHeaders  []string    AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.\n    allowedMethods  []CorsRuleAllowedMethods     AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.\n    allowedOrigins  []string    AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \u0026ldquo;*\u0026rdquo; to allow all domains\n    exposedHeaders  []string    ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.\n    maxAgeInSeconds  int    MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.\n    CorsRuleARM   (Appears on:CorsRulesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CorsRule\n    Field Description      allowedHeaders  []string    AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.\n    allowedMethods  []CorsRuleAllowedMethods     AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.\n    allowedOrigins  []string    AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \u0026ldquo;*\u0026rdquo; to allow all domains\n    exposedHeaders  []string    ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.\n    maxAgeInSeconds  int    MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.\n    CorsRuleAllowedMethods (string alias)  (Appears on:CorsRule, CorsRuleARM)      Value Description   \u0026#34;DELETE\u0026#34;\n  \u0026#34;GET\u0026#34;\n  \u0026#34;HEAD\u0026#34;\n  \u0026#34;MERGE\u0026#34;\n  \u0026#34;OPTIONS\u0026#34;\n  \u0026#34;POST\u0026#34;\n  \u0026#34;PUT\u0026#34;\n    CorsRuleStatusAllowedMethods (string alias)  (Appears on:CorsRule_Status, CorsRule_StatusARM)      Value Description   \u0026#34;DELETE\u0026#34;\n  \u0026#34;GET\u0026#34;\n  \u0026#34;HEAD\u0026#34;\n  \u0026#34;MERGE\u0026#34;\n  \u0026#34;OPTIONS\u0026#34;\n  \u0026#34;POST\u0026#34;\n  \u0026#34;PUT\u0026#34;\n    CorsRule_Status   (Appears on:CorsRules_Status)      Field Description      allowedHeaders  []string    AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.\n    allowedMethods  []CorsRuleStatusAllowedMethods     AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.\n    allowedOrigins  []string    AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \u0026ldquo;*\u0026rdquo; to allow all domains\n    exposedHeaders  []string    ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.\n    maxAgeInSeconds  int    MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.\n    CorsRule_StatusARM   (Appears on:CorsRules_StatusARM)      Field Description      allowedHeaders  []string    AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.\n    allowedMethods  []CorsRuleStatusAllowedMethods     AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.\n    allowedOrigins  []string    AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \u0026ldquo;*\u0026rdquo; to allow all domains\n    exposedHeaders  []string    ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.\n    maxAgeInSeconds  int    MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.\n    CorsRules   (Appears on:StorageAccountsBlobServices_Spec, StorageAccountsQueueServices_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CorsRules\n    Field Description      corsRules  []CorsRule     CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.\n    CorsRulesARM   (Appears on:BlobServicePropertiesPropertiesARM, QueueServicePropertiesPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CorsRules\n    Field Description      corsRules  []CorsRuleARM     CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.\n    CorsRules_Status   (Appears on:BlobServiceProperties_Status, QueueServiceProperties_Status)      Field Description      corsRules  []CorsRule_Status     CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.\n    CorsRules_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM, QueueServiceProperties_Status_PropertiesARM)      Field Description      corsRules  []CorsRule_StatusARM     CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.\n    CustomDomain   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CustomDomain\n    Field Description      name  string    Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.\n    useSubDomainName  bool    UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.\n    CustomDomainARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/CustomDomain\n    Field Description      name  string    Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.\n    useSubDomainName  bool    UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.\n    CustomDomain_Status   (Appears on:StorageAccount_Status)      Field Description      name  string    Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.\n    useSubDomainName  bool    UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.\n    CustomDomain_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      name  string    Name: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.\n    useSubDomainName  bool    UseSubDomainName: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.\n    DateAfterCreation   (Appears on:ManagementPolicySnapShot, ManagementPolicyVersion)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DateAfterCreation\n    Field Description      daysAfterCreationGreaterThan  int    DaysAfterCreationGreaterThan: Value indicating the age in days after creation\n    DateAfterCreationARM   (Appears on:ManagementPolicySnapShotARM, ManagementPolicyVersionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DateAfterCreation\n    Field Description      daysAfterCreationGreaterThan  int    DaysAfterCreationGreaterThan: Value indicating the age in days after creation\n    DateAfterCreation_Status   (Appears on:ManagementPolicySnapShot_Status, ManagementPolicyVersion_Status)      Field Description      daysAfterCreationGreaterThan  float64    DaysAfterCreationGreaterThan: Value indicating the age in days after creation\n    DateAfterCreation_StatusARM   (Appears on:ManagementPolicySnapShot_StatusARM, ManagementPolicyVersion_StatusARM)      Field Description      daysAfterCreationGreaterThan  float64    DaysAfterCreationGreaterThan: Value indicating the age in days after creation\n    DateAfterModification   (Appears on:ManagementPolicyBaseBlob)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DateAfterModification\n    Field Description      daysAfterLastAccessTimeGreaterThan  int    DaysAfterLastAccessTimeGreaterThan: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy\n    daysAfterModificationGreaterThan  int    DaysAfterModificationGreaterThan: Value indicating the age in days after last modification\n    DateAfterModificationARM   (Appears on:ManagementPolicyBaseBlobARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DateAfterModification\n    Field Description      daysAfterLastAccessTimeGreaterThan  int    DaysAfterLastAccessTimeGreaterThan: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy\n    daysAfterModificationGreaterThan  int    DaysAfterModificationGreaterThan: Value indicating the age in days after last modification\n    DateAfterModification_Status   (Appears on:ManagementPolicyBaseBlob_Status)      Field Description      daysAfterLastAccessTimeGreaterThan  float64    DaysAfterLastAccessTimeGreaterThan: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy\n    daysAfterModificationGreaterThan  float64    DaysAfterModificationGreaterThan: Value indicating the age in days after last modification\n    DateAfterModification_StatusARM   (Appears on:ManagementPolicyBaseBlob_StatusARM)      Field Description      daysAfterLastAccessTimeGreaterThan  float64    DaysAfterLastAccessTimeGreaterThan: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy\n    daysAfterModificationGreaterThan  float64    DaysAfterModificationGreaterThan: Value indicating the age in days after last modification\n    DeleteRetentionPolicy   (Appears on:StorageAccountsBlobServices_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DeleteRetentionPolicy\n    Field Description      days  int    Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.\n    enabled  bool    Enabled: Indicates whether DeleteRetentionPolicy is enabled.\n    DeleteRetentionPolicyARM   (Appears on:BlobServicePropertiesPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/DeleteRetentionPolicy\n    Field Description      days  int    Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.\n    enabled  bool    Enabled: Indicates whether DeleteRetentionPolicy is enabled.\n    DeleteRetentionPolicy_Status   (Appears on:BlobServiceProperties_Status)      Field Description      days  int    Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.\n    enabled  bool    Enabled: Indicates whether DeleteRetentionPolicy is enabled.\n    DeleteRetentionPolicy_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)      Field Description      days  int    Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.\n    enabled  bool    Enabled: Indicates whether DeleteRetentionPolicy is enabled.\n    Encryption   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Encryption\n    Field Description      identity  EncryptionIdentity     Identity: Encryption identity for the storage account.\n    keySource  EncryptionKeySource     KeySource: The encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault.\n    keyvaultproperties  KeyVaultProperties     Keyvaultproperties: Properties of key vault.\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n    services  EncryptionServices     Services: A list of services that support encryption.\n    EncryptionARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Encryption\n    Field Description      identity  EncryptionIdentityARM     Identity: Encryption identity for the storage account.\n    keySource  EncryptionKeySource     KeySource: The encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault.\n    keyvaultproperties  KeyVaultPropertiesARM     Keyvaultproperties: Properties of key vault.\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n    services  EncryptionServicesARM     Services: A list of services that support encryption.\n    EncryptionIdentity   (Appears on:Encryption)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionIdentity\n    Field Description      userAssignedIdentityReference  genruntime.ResourceReference     UserAssignedIdentityReference: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.\n    EncryptionIdentityARM   (Appears on:EncryptionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionIdentity\n    Field Description      userAssignedIdentity  string        EncryptionIdentity_Status   (Appears on:Encryption_Status)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.\n    EncryptionIdentity_StatusARM   (Appears on:Encryption_StatusARM)      Field Description      userAssignedIdentity  string    UserAssignedIdentity: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.\n    EncryptionKeySource (string alias)  (Appears on:Encryption, EncryptionARM)      Value Description   \u0026#34;Microsoft.Keyvault\u0026#34;\n  \u0026#34;Microsoft.Storage\u0026#34;\n    EncryptionService   (Appears on:EncryptionServices)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionService\n    Field Description      enabled  bool    Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.\n    keyType  EncryptionServiceKeyType     KeyType: Encryption key type to be used for the encryption service. \u0026lsquo;Account\u0026rsquo; key type implies that an account-scoped encryption key will be used. \u0026lsquo;Service\u0026rsquo; key type implies that a default service key is used.\n    EncryptionServiceARM   (Appears on:EncryptionServicesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionService\n    Field Description      enabled  bool    Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.\n    keyType  EncryptionServiceKeyType     KeyType: Encryption key type to be used for the encryption service. \u0026lsquo;Account\u0026rsquo; key type implies that an account-scoped encryption key will be used. \u0026lsquo;Service\u0026rsquo; key type implies that a default service key is used.\n    EncryptionServiceKeyType (string alias)  (Appears on:EncryptionService, EncryptionServiceARM)      Value Description   \u0026#34;Account\u0026#34;\n  \u0026#34;Service\u0026#34;\n    EncryptionServiceStatusKeyType (string alias)  (Appears on:EncryptionService_Status, EncryptionService_StatusARM)      Value Description   \u0026#34;Account\u0026#34;\n  \u0026#34;Service\u0026#34;\n    EncryptionService_Status   (Appears on:EncryptionServices_Status)      Field Description      enabled  bool    Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.\n    keyType  EncryptionServiceStatusKeyType     KeyType: Encryption key type to be used for the encryption service. \u0026lsquo;Account\u0026rsquo; key type implies that an account-scoped encryption key will be used. \u0026lsquo;Service\u0026rsquo; key type implies that a default service key is used.\n    lastEnabledTime  string    LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.\n    EncryptionService_StatusARM   (Appears on:EncryptionServices_StatusARM)      Field Description      enabled  bool    Enabled: A boolean indicating whether or not the service encrypts the data as it is stored.\n    keyType  EncryptionServiceStatusKeyType     KeyType: Encryption key type to be used for the encryption service. \u0026lsquo;Account\u0026rsquo; key type implies that an account-scoped encryption key will be used. \u0026lsquo;Service\u0026rsquo; key type implies that a default service key is used.\n    lastEnabledTime  string    LastEnabledTime: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.\n    EncryptionServices   (Appears on:Encryption)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionServices\n    Field Description      blob  EncryptionService     Blob: A service that allows server-side encryption to be used.\n    file  EncryptionService     File: A service that allows server-side encryption to be used.\n    queue  EncryptionService     Queue: A service that allows server-side encryption to be used.\n    table  EncryptionService     Table: A service that allows server-side encryption to be used.\n    EncryptionServicesARM   (Appears on:EncryptionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/EncryptionServices\n    Field Description      blob  EncryptionServiceARM     Blob: A service that allows server-side encryption to be used.\n    file  EncryptionServiceARM     File: A service that allows server-side encryption to be used.\n    queue  EncryptionServiceARM     Queue: A service that allows server-side encryption to be used.\n    table  EncryptionServiceARM     Table: A service that allows server-side encryption to be used.\n    EncryptionServices_Status   (Appears on:Encryption_Status)      Field Description      blob  EncryptionService_Status     Blob: The encryption function of the blob storage service.\n    file  EncryptionService_Status     File: The encryption function of the file storage service.\n    queue  EncryptionService_Status     Queue: The encryption function of the queue storage service.\n    table  EncryptionService_Status     Table: The encryption function of the table storage service.\n    EncryptionServices_StatusARM   (Appears on:Encryption_StatusARM)      Field Description      blob  EncryptionService_StatusARM     Blob: The encryption function of the blob storage service.\n    file  EncryptionService_StatusARM     File: The encryption function of the file storage service.\n    queue  EncryptionService_StatusARM     Queue: The encryption function of the queue storage service.\n    table  EncryptionService_StatusARM     Table: The encryption function of the table storage service.\n    EncryptionStatusKeySource (string alias)  (Appears on:Encryption_Status, Encryption_StatusARM)      Value Description   \u0026#34;Microsoft.Keyvault\u0026#34;\n  \u0026#34;Microsoft.Storage\u0026#34;\n    Encryption_Status   (Appears on:StorageAccount_Status)      Field Description      identity  EncryptionIdentity_Status     Identity: The identity to be used with service-side encryption at rest.\n    keySource  EncryptionStatusKeySource     KeySource: The encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault\n    keyvaultproperties  KeyVaultProperties_Status     Keyvaultproperties: Properties provided by key vault.\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n    services  EncryptionServices_Status     Services: List of services which support encryption.\n    Encryption_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      identity  EncryptionIdentity_StatusARM     Identity: The identity to be used with service-side encryption at rest.\n    keySource  EncryptionStatusKeySource     KeySource: The encryption keySource (provider). Possible values (case-insensitive): Microsoft.Storage, Microsoft.Keyvault\n    keyvaultproperties  KeyVaultProperties_StatusARM     Keyvaultproperties: Properties provided by key vault.\n    requireInfrastructureEncryption  bool    RequireInfrastructureEncryption: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n    services  EncryptionServices_StatusARM     Services: List of services which support encryption.\n    Endpoints_Status   (Appears on:StorageAccount_Status)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    internetEndpoints  StorageAccountInternetEndpoints_Status     InternetEndpoints: Gets the internet routing storage endpoints\n    microsoftEndpoints  StorageAccountMicrosoftEndpoints_Status     MicrosoftEndpoints: Gets the microsoft routing storage endpoints.\n    queue  string    Queue: Gets the queue endpoint.\n    table  string    Table: Gets the table endpoint.\n    web  string    Web: Gets the web endpoint.\n    Endpoints_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    internetEndpoints  StorageAccountInternetEndpoints_StatusARM     InternetEndpoints: Gets the internet routing storage endpoints\n    microsoftEndpoints  StorageAccountMicrosoftEndpoints_StatusARM     MicrosoftEndpoints: Gets the microsoft routing storage endpoints.\n    queue  string    Queue: Gets the queue endpoint.\n    table  string    Table: Gets the table endpoint.\n    web  string    Web: Gets the web endpoint.\n    ExtendedLocation   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationARM   (Appears on:StorageAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ExtendedLocation\n    Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType     Type: The type of the extended location.\n    ExtendedLocationType (string alias)  (Appears on:ExtendedLocation, ExtendedLocationARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocationType_Status (string alias)  (Appears on:ExtendedLocation_Status, ExtendedLocation_StatusARM)      Value Description   \u0026#34;EdgeZone\u0026#34;\n    ExtendedLocation_Status   (Appears on:StorageAccount_Status)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    ExtendedLocation_StatusARM   (Appears on:StorageAccount_StatusARM)      Field Description      name  string    Name: The name of the extended location.\n    type  ExtendedLocationType_Status     Type: The type of the extended location.\n    GeoReplicationStatsStatusStatus (string alias)  (Appears on:GeoReplicationStats_Status, GeoReplicationStats_StatusARM)      Value Description   \u0026#34;Bootstrap\u0026#34;\n  \u0026#34;Live\u0026#34;\n  \u0026#34;Unavailable\u0026#34;\n    GeoReplicationStats_Status   (Appears on:StorageAccount_Status)      Field Description      canFailover  bool    CanFailover: A boolean flag which indicates whether or not account failover is supported for the account.\n    lastSyncTime  string    LastSyncTime: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.\n    status  GeoReplicationStatsStatusStatus     Status: The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.\n    GeoReplicationStats_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      canFailover  bool    CanFailover: A boolean flag which indicates whether or not account failover is supported for the account.\n    lastSyncTime  string    LastSyncTime: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.\n    status  GeoReplicationStatsStatusStatus     Status: The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.\n    IPRule   (Appears on:NetworkRuleSet)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/IPRule\n    Field Description      action  IPRuleAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRuleARM   (Appears on:NetworkRuleSetARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/IPRule\n    Field Description      action  IPRuleAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRuleAction (string alias)  (Appears on:IPRule, IPRuleARM)      Value Description   \u0026#34;Allow\u0026#34;\n    IPRuleStatusAction (string alias)  (Appears on:IPRule_Status, IPRule_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n    IPRule_Status   (Appears on:NetworkRuleSet_Status)      Field Description      action  IPRuleStatusAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    IPRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)      Field Description      action  IPRuleStatusAction     Action: The action of IP ACL rule.\n    value  string    Value: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n    Identity   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: The identity type.\n    IdentityARM   (Appears on:StorageAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Identity\n    Field Description      type  IdentityType     Type: The identity type.\n    IdentityStatusType (string alias)  (Appears on:Identity_Status, Identity_StatusARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    IdentityType (string alias)  (Appears on:Identity, IdentityARM)      Value Description   \u0026#34;None\u0026#34;\n  \u0026#34;SystemAssigned\u0026#34;\n  \u0026#34;SystemAssigned,UserAssigned\u0026#34;\n  \u0026#34;UserAssigned\u0026#34;\n    Identity_Status   (Appears on:StorageAccount_Status)      Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityStatusType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/storage/v1beta20210401.UserAssignedIdentity_Status     UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.\n    Identity_StatusARM   (Appears on:StorageAccount_StatusARM)      Field Description      principalId  string    PrincipalId: The principal ID of resource identity.\n    tenantId  string    TenantId: The tenant ID of resource.\n    type  IdentityStatusType     Type: The identity type.\n    userAssignedIdentities  map[string]./api/storage/v1beta20210401.UserAssignedIdentity_StatusARM     UserAssignedIdentities: Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.\n    ImmutabilityPolicyProperties_Status   (Appears on:BlobContainer_Status)      Field Description      allowProtectedAppendWrites  bool    AllowProtectedAppendWrites: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API\n    etag  string    Etag: ImmutabilityPolicy Etag.\n    immutabilityPeriodSinceCreationInDays  int    ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation, in days.\n    state  ImmutabilityPolicyPropertyStatusState     State: The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n    updateHistory  []UpdateHistoryProperty_Status     UpdateHistory: The ImmutabilityPolicy update history of the blob container.\n    ImmutabilityPolicyProperties_StatusARM   (Appears on:ContainerProperties_StatusARM)      Field Description      etag  string    Etag: ImmutabilityPolicy Etag.\n    properties  ImmutabilityPolicyProperty_StatusARM     Properties: The properties of an ImmutabilityPolicy of a blob container.\n    updateHistory  []UpdateHistoryProperty_StatusARM     UpdateHistory: The ImmutabilityPolicy update history of the blob container.\n    ImmutabilityPolicyPropertyStatusState (string alias)  (Appears on:ImmutabilityPolicyProperties_Status, ImmutabilityPolicyProperty_StatusARM)      Value Description   \u0026#34;Locked\u0026#34;\n  \u0026#34;Unlocked\u0026#34;\n    ImmutabilityPolicyProperty_StatusARM   (Appears on:ImmutabilityPolicyProperties_StatusARM)      Field Description      allowProtectedAppendWrites  bool    AllowProtectedAppendWrites: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API\n    immutabilityPeriodSinceCreationInDays  int    ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation, in days.\n    state  ImmutabilityPolicyPropertyStatusState     State: The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n    ImmutableStorageWithVersioning   (Appears on:StorageAccountsBlobServicesContainers_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ImmutableStorageWithVersioning\n    Field Description      enabled  bool    Enabled: This is an immutable property, when set to true it enables object level immutability at the container level.\n    ImmutableStorageWithVersioningARM   (Appears on:ContainerPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ImmutableStorageWithVersioning\n    Field Description      enabled  bool    Enabled: This is an immutable property, when set to true it enables object level immutability at the container level.\n    ImmutableStorageWithVersioningStatusMigrationState (string alias)  (Appears on:ImmutableStorageWithVersioning_Status, ImmutableStorageWithVersioning_StatusARM)      Value Description   \u0026#34;Completed\u0026#34;\n  \u0026#34;InProgress\u0026#34;\n    ImmutableStorageWithVersioning_Status   (Appears on:BlobContainer_Status)      Field Description      enabled  bool    Enabled: This is an immutable property, when set to true it enables object level immutability at the container level.\n    migrationState  ImmutableStorageWithVersioningStatusMigrationState     MigrationState: This property denotes the container level immutability to object level immutability migration state.\n    timeStamp  string    TimeStamp: Returns the date and time the object level immutability was enabled.\n    ImmutableStorageWithVersioning_StatusARM   (Appears on:ContainerProperties_StatusARM)      Field Description      enabled  bool    Enabled: This is an immutable property, when set to true it enables object level immutability at the container level.\n    migrationState  ImmutableStorageWithVersioningStatusMigrationState     MigrationState: This property denotes the container level immutability to object level immutability migration state.\n    timeStamp  string    TimeStamp: Returns the date and time the object level immutability was enabled.\n    KeyCreationTime_Status   (Appears on:StorageAccount_Status)      Field Description      key1  string        key2  string        KeyCreationTime_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      key1  string        key2  string        KeyPolicy   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/KeyPolicy\n    Field Description      keyExpirationPeriodInDays  int    KeyExpirationPeriodInDays: The key expiration period in days.\n    KeyPolicyARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/KeyPolicy\n    Field Description      keyExpirationPeriodInDays  int    KeyExpirationPeriodInDays: The key expiration period in days.\n    KeyPolicy_Status   (Appears on:StorageAccount_Status)      Field Description      keyExpirationPeriodInDays  int    KeyExpirationPeriodInDays: The key expiration period in days.\n    KeyPolicy_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      keyExpirationPeriodInDays  int    KeyExpirationPeriodInDays: The key expiration period in days.\n    KeyVaultProperties   (Appears on:Encryption)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/KeyVaultProperties\n    Field Description      keyname  string    Keyname: The name of KeyVault key.\n    keyvaulturi  string    Keyvaulturi: The Uri of KeyVault.\n    keyversion  string    Keyversion: The version of KeyVault key.\n    KeyVaultPropertiesARM   (Appears on:EncryptionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/KeyVaultProperties\n    Field Description      keyname  string    Keyname: The name of KeyVault key.\n    keyvaulturi  string    Keyvaulturi: The Uri of KeyVault.\n    keyversion  string    Keyversion: The version of KeyVault key.\n    KeyVaultProperties_Status   (Appears on:Encryption_Status)      Field Description      currentVersionedKeyIdentifier  string    CurrentVersionedKeyIdentifier: The object identifier of the current versioned Key Vault Key in use.\n    keyname  string    Keyname: The name of KeyVault key.\n    keyvaulturi  string    Keyvaulturi: The Uri of KeyVault.\n    keyversion  string    Keyversion: The version of KeyVault key.\n    lastKeyRotationTimestamp  string    LastKeyRotationTimestamp: Timestamp of last rotation of the Key Vault Key.\n    KeyVaultProperties_StatusARM   (Appears on:Encryption_StatusARM)      Field Description      currentVersionedKeyIdentifier  string    CurrentVersionedKeyIdentifier: The object identifier of the current versioned Key Vault Key in use.\n    keyname  string    Keyname: The name of KeyVault key.\n    keyvaulturi  string    Keyvaulturi: The Uri of KeyVault.\n    keyversion  string    Keyversion: The version of KeyVault key.\n    lastKeyRotationTimestamp  string    LastKeyRotationTimestamp: Timestamp of last rotation of the Key Vault Key.\n    LastAccessTimeTrackingPolicy   (Appears on:StorageAccountsBlobServices_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/LastAccessTimeTrackingPolicy\n    Field Description      blobType  []string    BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only\n    enable  bool    Enable: When set to true last access time based tracking is enabled.\n    name  LastAccessTimeTrackingPolicyName     Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only.\n    trackingGranularityInDays  int    TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1\n    LastAccessTimeTrackingPolicyARM   (Appears on:BlobServicePropertiesPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/LastAccessTimeTrackingPolicy\n    Field Description      blobType  []string    BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only\n    enable  bool    Enable: When set to true last access time based tracking is enabled.\n    name  LastAccessTimeTrackingPolicyName     Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only.\n    trackingGranularityInDays  int    TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1\n    LastAccessTimeTrackingPolicyName (string alias)  (Appears on:LastAccessTimeTrackingPolicy, LastAccessTimeTrackingPolicyARM)      Value Description   \u0026#34;AccessTimeTracking\u0026#34;\n    LastAccessTimeTrackingPolicyStatusName (string alias)  (Appears on:LastAccessTimeTrackingPolicy_Status, LastAccessTimeTrackingPolicy_StatusARM)      Value Description   \u0026#34;AccessTimeTracking\u0026#34;\n    LastAccessTimeTrackingPolicy_Status   (Appears on:BlobServiceProperties_Status)      Field Description      blobType  []string    BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only\n    enable  bool    Enable: When set to true last access time based tracking is enabled.\n    name  LastAccessTimeTrackingPolicyStatusName     Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only\n    trackingGranularityInDays  int    TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1\n    LastAccessTimeTrackingPolicy_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)      Field Description      blobType  []string    BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only\n    enable  bool    Enable: When set to true last access time based tracking is enabled.\n    name  LastAccessTimeTrackingPolicyStatusName     Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only\n    trackingGranularityInDays  int    TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1\n    LegalHoldProperties_Status   (Appears on:BlobContainer_Status)      Field Description      hasLegalHold  bool    HasLegalHold: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n    tags  []TagProperty_Status     Tags: The list of LegalHold tags of a blob container.\n    LegalHoldProperties_StatusARM   (Appears on:ContainerProperties_StatusARM)      Field Description      hasLegalHold  bool    HasLegalHold: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n    tags  []TagProperty_StatusARM     Tags: The list of LegalHold tags of a blob container.\n    ManagementPolicyAction   (Appears on:ManagementPolicyDefinition)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyAction\n    Field Description      baseBlob  ManagementPolicyBaseBlob     BaseBlob: Management policy action for base blob.\n    snapshot  ManagementPolicySnapShot     Snapshot: Management policy action for snapshot.\n    version  ManagementPolicyVersion     Version: Management policy action for blob version.\n    ManagementPolicyActionARM   (Appears on:ManagementPolicyDefinitionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyAction\n    Field Description      baseBlob  ManagementPolicyBaseBlobARM     BaseBlob: Management policy action for base blob.\n    snapshot  ManagementPolicySnapShotARM     Snapshot: Management policy action for snapshot.\n    version  ManagementPolicyVersionARM     Version: Management policy action for blob version.\n    ManagementPolicyAction_Status   (Appears on:ManagementPolicyDefinition_Status)      Field Description      baseBlob  ManagementPolicyBaseBlob_Status     BaseBlob: The management policy action for base blob\n    snapshot  ManagementPolicySnapShot_Status     Snapshot: The management policy action for snapshot\n    version  ManagementPolicyVersion_Status     Version: The management policy action for version\n    ManagementPolicyAction_StatusARM   (Appears on:ManagementPolicyDefinition_StatusARM)      Field Description      baseBlob  ManagementPolicyBaseBlob_StatusARM     BaseBlob: The management policy action for base blob\n    snapshot  ManagementPolicySnapShot_StatusARM     Snapshot: The management policy action for snapshot\n    version  ManagementPolicyVersion_StatusARM     Version: The management policy action for version\n    ManagementPolicyBaseBlob   (Appears on:ManagementPolicyAction)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyBaseBlob\n    Field Description      delete  DateAfterModification     Delete: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    enableAutoTierToHotFromCool  bool    EnableAutoTierToHotFromCool: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.\n    tierToArchive  DateAfterModification     TierToArchive: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    tierToCool  DateAfterModification     TierToCool: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    ManagementPolicyBaseBlobARM   (Appears on:ManagementPolicyActionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyBaseBlob\n    Field Description      delete  DateAfterModificationARM     Delete: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    enableAutoTierToHotFromCool  bool    EnableAutoTierToHotFromCool: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.\n    tierToArchive  DateAfterModificationARM     TierToArchive: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    tierToCool  DateAfterModificationARM     TierToCool: Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.\n    ManagementPolicyBaseBlob_Status   (Appears on:ManagementPolicyAction_Status)      Field Description      delete  DateAfterModification_Status     Delete: The function to delete the blob\n    enableAutoTierToHotFromCool  bool    EnableAutoTierToHotFromCool: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.\n    tierToArchive  DateAfterModification_Status     TierToArchive: The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier\n    tierToCool  DateAfterModification_Status     TierToCool: The function to tier blobs to cool storage. Support blobs currently at Hot tier\n    ManagementPolicyBaseBlob_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)      Field Description      delete  DateAfterModification_StatusARM     Delete: The function to delete the blob\n    enableAutoTierToHotFromCool  bool    EnableAutoTierToHotFromCool: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.\n    tierToArchive  DateAfterModification_StatusARM     TierToArchive: The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier\n    tierToCool  DateAfterModification_StatusARM     TierToCool: The function to tier blobs to cool storage. Support blobs currently at Hot tier\n    ManagementPolicyDefinition   (Appears on:ManagementPolicyRule)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyDefinition\n    Field Description      actions  ManagementPolicyAction     Actions: Actions are applied to the filtered blobs when the execution condition is met.\n    filters  ManagementPolicyFilter     Filters: Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.\n    ManagementPolicyDefinitionARM   (Appears on:ManagementPolicyRuleARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyDefinition\n    Field Description      actions  ManagementPolicyActionARM     Actions: Actions are applied to the filtered blobs when the execution condition is met.\n    filters  ManagementPolicyFilterARM     Filters: Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.\n    ManagementPolicyDefinition_Status   (Appears on:ManagementPolicyRule_Status)      Field Description      actions  ManagementPolicyAction_Status     Actions: An object that defines the action set.\n    filters  ManagementPolicyFilter_Status     Filters: An object that defines the filter set.\n    ManagementPolicyDefinition_StatusARM   (Appears on:ManagementPolicyRule_StatusARM)      Field Description      actions  ManagementPolicyAction_StatusARM     Actions: An object that defines the action set.\n    filters  ManagementPolicyFilter_StatusARM     Filters: An object that defines the filter set.\n    ManagementPolicyFilter   (Appears on:ManagementPolicyDefinition)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyFilter\n    Field Description      blobIndexMatch  []TagFilter     BlobIndexMatch: An array of blob index tag based filters, there can be at most 10 tag filters\n    blobTypes  []string    BlobTypes: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.\n    prefixMatch  []string    PrefixMatch: An array of strings for prefixes to be match.\n    ManagementPolicyFilterARM   (Appears on:ManagementPolicyDefinitionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyFilter\n    Field Description      blobIndexMatch  []TagFilterARM     BlobIndexMatch: An array of blob index tag based filters, there can be at most 10 tag filters\n    blobTypes  []string    BlobTypes: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.\n    prefixMatch  []string    PrefixMatch: An array of strings for prefixes to be match.\n    ManagementPolicyFilter_Status   (Appears on:ManagementPolicyDefinition_Status)      Field Description      blobIndexMatch  []TagFilter_Status     BlobIndexMatch: An array of blob index tag based filters, there can be at most 10 tag filters\n    blobTypes  []string    BlobTypes: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.\n    prefixMatch  []string    PrefixMatch: An array of strings for prefixes to be match.\n    ManagementPolicyFilter_StatusARM   (Appears on:ManagementPolicyDefinition_StatusARM)      Field Description      blobIndexMatch  []TagFilter_StatusARM     BlobIndexMatch: An array of blob index tag based filters, there can be at most 10 tag filters\n    blobTypes  []string    BlobTypes: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.\n    prefixMatch  []string    PrefixMatch: An array of strings for prefixes to be match.\n    ManagementPolicyPropertiesARM   (Appears on:StorageAccountsManagementPolicies_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyProperties\n    Field Description      policy  ManagementPolicySchemaARM     Policy: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicyProperties_StatusARM   (Appears on:ManagementPolicy_StatusARM)      Field Description      lastModifiedTime  string    LastModifiedTime: Returns the date and time the ManagementPolicies was last modified.\n    policy  ManagementPolicySchema_StatusARM     Policy: The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicyRule   (Appears on:ManagementPolicySchema)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyRule\n    Field Description      definition  ManagementPolicyDefinition     Definition: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.\n    enabled  bool    Enabled: Rule is enabled if set to true.\n    name  string    Name: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n    type  ManagementPolicyRuleType     Type: The valid value is Lifecycle\n    ManagementPolicyRuleARM   (Appears on:ManagementPolicySchemaARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyRule\n    Field Description      definition  ManagementPolicyDefinitionARM     Definition: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.\n    enabled  bool    Enabled: Rule is enabled if set to true.\n    name  string    Name: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n    type  ManagementPolicyRuleType     Type: The valid value is Lifecycle\n    ManagementPolicyRuleStatusType (string alias)  (Appears on:ManagementPolicyRule_Status, ManagementPolicyRule_StatusARM)      Value Description   \u0026#34;Lifecycle\u0026#34;\n    ManagementPolicyRuleType (string alias)  (Appears on:ManagementPolicyRule, ManagementPolicyRuleARM)      Value Description   \u0026#34;Lifecycle\u0026#34;\n    ManagementPolicyRule_Status   (Appears on:ManagementPolicySchema_Status)      Field Description      definition  ManagementPolicyDefinition_Status     Definition: An object that defines the Lifecycle rule.\n    enabled  bool    Enabled: Rule is enabled if set to true.\n    name  string    Name: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n    type  ManagementPolicyRuleStatusType     Type: The valid value is Lifecycle\n    ManagementPolicyRule_StatusARM   (Appears on:ManagementPolicySchema_StatusARM)      Field Description      definition  ManagementPolicyDefinition_StatusARM     Definition: An object that defines the Lifecycle rule.\n    enabled  bool    Enabled: Rule is enabled if set to true.\n    name  string    Name: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n    type  ManagementPolicyRuleStatusType     Type: The valid value is Lifecycle\n    ManagementPolicySchema   (Appears on:StorageAccountsManagementPolicies_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicySchema\n    Field Description      rules  []ManagementPolicyRule     Rules: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicySchemaARM   (Appears on:ManagementPolicyPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicySchema\n    Field Description      rules  []ManagementPolicyRuleARM     Rules: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicySchema_Status   (Appears on:ManagementPolicy_Status)      Field Description      rules  []ManagementPolicyRule_Status     Rules: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicySchema_StatusARM   (Appears on:ManagementPolicyProperties_StatusARM)      Field Description      rules  []ManagementPolicyRule_StatusARM     Rules: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    ManagementPolicySnapShot   (Appears on:ManagementPolicyAction)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicySnapShot\n    Field Description      delete  DateAfterCreation     Delete: Object to define the number of days after creation.\n    tierToArchive  DateAfterCreation     TierToArchive: Object to define the number of days after creation.\n    tierToCool  DateAfterCreation     TierToCool: Object to define the number of days after creation.\n    ManagementPolicySnapShotARM   (Appears on:ManagementPolicyActionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicySnapShot\n    Field Description      delete  DateAfterCreationARM     Delete: Object to define the number of days after creation.\n    tierToArchive  DateAfterCreationARM     TierToArchive: Object to define the number of days after creation.\n    tierToCool  DateAfterCreationARM     TierToCool: Object to define the number of days after creation.\n    ManagementPolicySnapShot_Status   (Appears on:ManagementPolicyAction_Status)      Field Description      delete  DateAfterCreation_Status     Delete: The function to delete the blob snapshot\n    tierToArchive  DateAfterCreation_Status     TierToArchive: The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier\n    tierToCool  DateAfterCreation_Status     TierToCool: The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier\n    ManagementPolicySnapShot_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)      Field Description      delete  DateAfterCreation_StatusARM     Delete: The function to delete the blob snapshot\n    tierToArchive  DateAfterCreation_StatusARM     TierToArchive: The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier\n    tierToCool  DateAfterCreation_StatusARM     TierToCool: The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier\n    ManagementPolicyVersion   (Appears on:ManagementPolicyAction)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyVersion\n    Field Description      delete  DateAfterCreation     Delete: Object to define the number of days after creation.\n    tierToArchive  DateAfterCreation     TierToArchive: Object to define the number of days after creation.\n    tierToCool  DateAfterCreation     TierToCool: Object to define the number of days after creation.\n    ManagementPolicyVersionARM   (Appears on:ManagementPolicyActionARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ManagementPolicyVersion\n    Field Description      delete  DateAfterCreationARM     Delete: Object to define the number of days after creation.\n    tierToArchive  DateAfterCreationARM     TierToArchive: Object to define the number of days after creation.\n    tierToCool  DateAfterCreationARM     TierToCool: Object to define the number of days after creation.\n    ManagementPolicyVersion_Status   (Appears on:ManagementPolicyAction_Status)      Field Description      delete  DateAfterCreation_Status     Delete: The function to delete the blob version\n    tierToArchive  DateAfterCreation_Status     TierToArchive: The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier\n    tierToCool  DateAfterCreation_Status     TierToCool: The function to tier blob version to cool storage. Support blob version currently at Hot tier\n    ManagementPolicyVersion_StatusARM   (Appears on:ManagementPolicyAction_StatusARM)      Field Description      delete  DateAfterCreation_StatusARM     Delete: The function to delete the blob version\n    tierToArchive  DateAfterCreation_StatusARM     TierToArchive: The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier\n    tierToCool  DateAfterCreation_StatusARM     TierToCool: The function to tier blob version to cool storage. Support blob version currently at Hot tier\n    ManagementPolicy_Status   (Appears on:StorageAccountsManagementPolicy)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    lastModifiedTime  string    LastModifiedTime: Returns the date and time the ManagementPolicies was last modified.\n    name  string    Name: The name of the resource\n    policy  ManagementPolicySchema_Status     Policy: The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    ManagementPolicy_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  ManagementPolicyProperties_StatusARM     Properties: Returns the Storage Account Data Policies Rules.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    NetworkRuleSet   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/NetworkRuleSet\n    Field Description      bypass  NetworkRuleSetBypass     Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \u0026ldquo;Logging, Metrics\u0026rdquo;), or None to bypass none of those traffics.\n    defaultAction  NetworkRuleSetDefaultAction     DefaultAction: Specifies the default action of allow or deny when no other rules match.\n    ipRules  []IPRule     IpRules: Sets the IP ACL rules\n    resourceAccessRules  []ResourceAccessRule     ResourceAccessRules: Sets the resource access rules\n    virtualNetworkRules  []VirtualNetworkRule     VirtualNetworkRules: Sets the virtual network rules\n    NetworkRuleSetARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/NetworkRuleSet\n    Field Description      bypass  NetworkRuleSetBypass     Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \u0026ldquo;Logging, Metrics\u0026rdquo;), or None to bypass none of those traffics.\n    defaultAction  NetworkRuleSetDefaultAction     DefaultAction: Specifies the default action of allow or deny when no other rules match.\n    ipRules  []IPRuleARM     IpRules: Sets the IP ACL rules\n    resourceAccessRules  []ResourceAccessRuleARM     ResourceAccessRules: Sets the resource access rules\n    virtualNetworkRules  []VirtualNetworkRuleARM     VirtualNetworkRules: Sets the virtual network rules\n    NetworkRuleSetBypass (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;Logging\u0026#34;\n  \u0026#34;Metrics\u0026#34;\n  \u0026#34;None\u0026#34;\n    NetworkRuleSetDefaultAction (string alias)  (Appears on:NetworkRuleSet, NetworkRuleSetARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSetStatusBypass (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)      Value Description   \u0026#34;AzureServices\u0026#34;\n  \u0026#34;Logging\u0026#34;\n  \u0026#34;Metrics\u0026#34;\n  \u0026#34;None\u0026#34;\n    NetworkRuleSetStatusDefaultAction (string alias)  (Appears on:NetworkRuleSet_Status, NetworkRuleSet_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n  \u0026#34;Deny\u0026#34;\n    NetworkRuleSet_Status   (Appears on:StorageAccount_Status)      Field Description      bypass  NetworkRuleSetStatusBypass     Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \u0026ldquo;Logging, Metrics\u0026rdquo;), or None to bypass none of those traffics.\n    defaultAction  NetworkRuleSetStatusDefaultAction     DefaultAction: Specifies the default action of allow or deny when no other rules match.\n    ipRules  []IPRule_Status     IpRules: Sets the IP ACL rules\n    resourceAccessRules  []ResourceAccessRule_Status     ResourceAccessRules: Sets the resource access rules\n    virtualNetworkRules  []VirtualNetworkRule_Status     VirtualNetworkRules: Sets the virtual network rules\n    NetworkRuleSet_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      bypass  NetworkRuleSetStatusBypass     Bypass: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \u0026ldquo;Logging, Metrics\u0026rdquo;), or None to bypass none of those traffics.\n    defaultAction  NetworkRuleSetStatusDefaultAction     DefaultAction: Specifies the default action of allow or deny when no other rules match.\n    ipRules  []IPRule_StatusARM     IpRules: Sets the IP ACL rules\n    resourceAccessRules  []ResourceAccessRule_StatusARM     ResourceAccessRules: Sets the resource access rules\n    virtualNetworkRules  []VirtualNetworkRule_StatusARM     VirtualNetworkRules: Sets the virtual network rules\n    PrivateEndpointConnection_Status_SubResourceEmbedded   (Appears on:StorageAccount_Status)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    PrivateEndpointConnection_Status_SubResourceEmbeddedARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    QueuePropertiesARM   (Appears on:StorageAccountsQueueServicesQueues_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/QueueProperties\n    Field Description      metadata  map[string]string    Metadata: A name-value pair that represents queue metadata.\n    QueueProperties_StatusARM   (Appears on:StorageQueue_StatusARM)      Field Description      approximateMessageCount  int    ApproximateMessageCount: Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n    metadata  map[string]string    Metadata: A name-value pair that represents queue metadata.\n    QueueServicePropertiesPropertiesARM   (Appears on:StorageAccountsQueueServices_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/QueueServicePropertiesProperties\n    Field Description      cors  CorsRulesARM     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    QueueServiceProperties_Status   (Appears on:StorageAccountsQueueService)      Field Description      conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    cors  CorsRules_Status     Cors: Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    QueueServiceProperties_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  QueueServiceProperties_Status_PropertiesARM     Properties: The properties of a storage account’s Queue service.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    QueueServiceProperties_Status_PropertiesARM   (Appears on:QueueServiceProperties_StatusARM)      Field Description      cors  CorsRules_StatusARM     Cors: Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.\n    ResourceAccessRule   (Appears on:NetworkRuleSet)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ResourceAccessRule\n    Field Description      resourceReference  genruntime.ResourceReference     ResourceReference: Resource Id\n    tenantId  string    TenantId: Tenant Id\n    ResourceAccessRuleARM   (Appears on:NetworkRuleSetARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/ResourceAccessRule\n    Field Description      resourceId  string        tenantId  string    TenantId: Tenant Id\n    ResourceAccessRule_Status   (Appears on:NetworkRuleSet_Status)      Field Description      resourceId  string    ResourceId: Resource Id\n    tenantId  string    TenantId: Tenant Id\n    ResourceAccessRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)      Field Description      resourceId  string    ResourceId: Resource Id\n    tenantId  string    TenantId: Tenant Id\n    RestorePolicyProperties   (Appears on:StorageAccountsBlobServices_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/RestorePolicyProperties\n    Field Description      days  int    Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.\n    enabled  bool    Enabled: Blob restore is enabled if set to true.\n    RestorePolicyPropertiesARM   (Appears on:BlobServicePropertiesPropertiesARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/RestorePolicyProperties\n    Field Description      days  int    Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.\n    enabled  bool    Enabled: Blob restore is enabled if set to true.\n    RestorePolicyProperties_Status   (Appears on:BlobServiceProperties_Status)      Field Description      days  int    Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.\n    enabled  bool    Enabled: Blob restore is enabled if set to true.\n    lastEnabledTime  string    LastEnabledTime: Deprecated in favor of minRestoreTime property.\n    minRestoreTime  string    MinRestoreTime: Returns the minimum date and time that the restore can be started.\n    RestorePolicyProperties_StatusARM   (Appears on:BlobServiceProperties_Status_PropertiesARM)      Field Description      days  int    Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.\n    enabled  bool    Enabled: Blob restore is enabled if set to true.\n    lastEnabledTime  string    LastEnabledTime: Deprecated in favor of minRestoreTime property.\n    minRestoreTime  string    MinRestoreTime: Returns the minimum date and time that the restore can be started.\n    RoutingPreference   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/RoutingPreference\n    Field Description      publishInternetEndpoints  bool    PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published\n    publishMicrosoftEndpoints  bool    PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published\n    routingChoice  RoutingPreferenceRoutingChoice     RoutingChoice: Routing Choice defines the kind of network routing opted by the user.\n    RoutingPreferenceARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/RoutingPreference\n    Field Description      publishInternetEndpoints  bool    PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published\n    publishMicrosoftEndpoints  bool    PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published\n    routingChoice  RoutingPreferenceRoutingChoice     RoutingChoice: Routing Choice defines the kind of network routing opted by the user.\n    RoutingPreferenceRoutingChoice (string alias)  (Appears on:RoutingPreference, RoutingPreferenceARM)      Value Description   \u0026#34;InternetRouting\u0026#34;\n  \u0026#34;MicrosoftRouting\u0026#34;\n    RoutingPreferenceStatusRoutingChoice (string alias)  (Appears on:RoutingPreference_Status, RoutingPreference_StatusARM)      Value Description   \u0026#34;InternetRouting\u0026#34;\n  \u0026#34;MicrosoftRouting\u0026#34;\n    RoutingPreference_Status   (Appears on:StorageAccount_Status)      Field Description      publishInternetEndpoints  bool    PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published\n    publishMicrosoftEndpoints  bool    PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published\n    routingChoice  RoutingPreferenceStatusRoutingChoice     RoutingChoice: Routing Choice defines the kind of network routing opted by the user.\n    RoutingPreference_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      publishInternetEndpoints  bool    PublishInternetEndpoints: A boolean flag which indicates whether internet routing storage endpoints are to be published\n    publishMicrosoftEndpoints  bool    PublishMicrosoftEndpoints: A boolean flag which indicates whether microsoft routing storage endpoints are to be published\n    routingChoice  RoutingPreferenceStatusRoutingChoice     RoutingChoice: Routing Choice defines the kind of network routing opted by the user.\n    SasPolicy   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/SasPolicy\n    Field Description      expirationAction  SasPolicyExpirationAction     ExpirationAction: The SAS expiration action. Can only be Log.\n    sasExpirationPeriod  string    SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.\n    SasPolicyARM   (Appears on:StorageAccountPropertiesCreateParametersARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/SasPolicy\n    Field Description      expirationAction  SasPolicyExpirationAction     ExpirationAction: The SAS expiration action. Can only be Log.\n    sasExpirationPeriod  string    SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.\n    SasPolicyExpirationAction (string alias)  (Appears on:SasPolicy, SasPolicyARM)      Value Description   \u0026#34;Log\u0026#34;\n    SasPolicyStatusExpirationAction (string alias)  (Appears on:SasPolicy_Status, SasPolicy_StatusARM)      Value Description   \u0026#34;Log\u0026#34;\n    SasPolicy_Status   (Appears on:StorageAccount_Status)      Field Description      expirationAction  SasPolicyStatusExpirationAction     ExpirationAction: The SAS expiration action. Can only be Log.\n    sasExpirationPeriod  string    SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.\n    SasPolicy_StatusARM   (Appears on:StorageAccountProperties_StatusARM)      Field Description      expirationAction  SasPolicyStatusExpirationAction     ExpirationAction: The SAS expiration action. Can only be Log.\n    sasExpirationPeriod  string    SasExpirationPeriod: The SAS expiration period, DD.HH:MM:SS.\n    Sku   (Appears on:StorageAccounts_Spec)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Sku\n    Field Description      name  SkuName         tier  SkuTier         SkuARM   (Appears on:StorageAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/Sku\n    Field Description      name  SkuName         tier  SkuTier         SkuName (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_GRS\u0026#34;\n  \u0026#34;Standard_GZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_RAGRS\u0026#34;\n  \u0026#34;Standard_RAGZRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SkuName_Status (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Premium_LRS\u0026#34;\n  \u0026#34;Premium_ZRS\u0026#34;\n  \u0026#34;Standard_GRS\u0026#34;\n  \u0026#34;Standard_GZRS\u0026#34;\n  \u0026#34;Standard_LRS\u0026#34;\n  \u0026#34;Standard_RAGRS\u0026#34;\n  \u0026#34;Standard_RAGZRS\u0026#34;\n  \u0026#34;Standard_ZRS\u0026#34;\n    SkuTier (string alias)  (Appears on:Sku, SkuARM)      Value Description   \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    Sku_Status   (Appears on:BlobServiceProperties_Status, StorageAccount_Status)      Field Description      name  SkuName_Status         tier  Tier_Status         Sku_StatusARM   (Appears on:BlobServiceProperties_StatusARM, StorageAccount_StatusARM)      Field Description      name  SkuName_Status         tier  Tier_Status         StorageAccount   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccounts_Spec          accessTier  StorageAccountPropertiesCreateParametersAccessTier     AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.\n    allowBlobPublicAccess  bool    AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n    allowCrossTenantReplication  bool    AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n    allowSharedKeyAccess  bool    AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n    azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication     AzureFilesIdentityBasedAuthentication: Settings for Azure Files identity based authentication.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    customDomain  CustomDomain     CustomDomain: The custom domain assigned to this storage account. This can be set via Update.\n    encryption  Encryption     Encryption: The encryption settings on the storage account.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    identity  Identity     Identity: Identity for the resource.\n    isHnsEnabled  bool    IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.\n    isNfsV3Enabled  bool    IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.\n    keyPolicy  KeyPolicy     KeyPolicy: KeyPolicy assigned to the storage account.\n    kind  StorageAccountsSpecKind     Kind: Required. Indicates the type of storage account.\n    largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState     LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n    location  string    Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.\n    minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion     MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n    networkAcls  NetworkRuleSet     NetworkAcls: Network rule set\n    operatorSpec  StorageAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    routingPreference  RoutingPreference     RoutingPreference: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing\n    sasPolicy  SasPolicy     SasPolicy: SasPolicy assigned to the storage account.\n    sku  Sku     Sku: The SKU of the storage account.\n    supportsHttpsTrafficOnly  bool    SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.\n    tags  map[string]string    Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\n       status  StorageAccount_Status         StorageAccountInternetEndpoints_Status   (Appears on:Endpoints_Status)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    web  string    Web: Gets the web endpoint.\n    StorageAccountInternetEndpoints_StatusARM   (Appears on:Endpoints_StatusARM)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    web  string    Web: Gets the web endpoint.\n    StorageAccountMicrosoftEndpoints_Status   (Appears on:Endpoints_Status)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    queue  string    Queue: Gets the queue endpoint.\n    table  string    Table: Gets the table endpoint.\n    web  string    Web: Gets the web endpoint.\n    StorageAccountMicrosoftEndpoints_StatusARM   (Appears on:Endpoints_StatusARM)      Field Description      blob  string    Blob: Gets the blob endpoint.\n    dfs  string    Dfs: Gets the dfs endpoint.\n    file  string    File: Gets the file endpoint.\n    queue  string    Queue: Gets the queue endpoint.\n    table  string    Table: Gets the table endpoint.\n    web  string    Web: Gets the web endpoint.\n    StorageAccountOperatorSecrets   (Appears on:StorageAccountOperatorSpec)      Field Description      blobEndpoint  genruntime.SecretDestination     BlobEndpoint: indicates where the BlobEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    dfsEndpoint  genruntime.SecretDestination     DfsEndpoint: indicates where the DfsEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    fileEndpoint  genruntime.SecretDestination     FileEndpoint: indicates where the FileEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    key1  genruntime.SecretDestination     Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    key2  genruntime.SecretDestination     Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    queueEndpoint  genruntime.SecretDestination     QueueEndpoint: indicates where the QueueEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    tableEndpoint  genruntime.SecretDestination     TableEndpoint: indicates where the TableEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    webEndpoint  genruntime.SecretDestination     WebEndpoint: indicates where the WebEndpoint secret should be placed. If omitted, the secret will not be retrieved from Azure.\n    StorageAccountOperatorSpec   (Appears on:StorageAccounts_Spec)  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure\n    Field Description      secrets  StorageAccountOperatorSecrets     Secrets: configures where to place Azure generated secrets.\n    StorageAccountPropertiesCreateParametersARM   (Appears on:StorageAccounts_SpecARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/StorageAccountPropertiesCreateParameters\n    Field Description      accessTier  StorageAccountPropertiesCreateParametersAccessTier     AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.\n    allowBlobPublicAccess  bool    AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n    allowCrossTenantReplication  bool    AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n    allowSharedKeyAccess  bool    AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n    azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthenticationARM     AzureFilesIdentityBasedAuthentication: Settings for Azure Files identity based authentication.\n    customDomain  CustomDomainARM     CustomDomain: The custom domain assigned to this storage account. This can be set via Update.\n    encryption  EncryptionARM     Encryption: The encryption settings on the storage account.\n    isHnsEnabled  bool    IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.\n    isNfsV3Enabled  bool    IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.\n    keyPolicy  KeyPolicyARM     KeyPolicy: KeyPolicy assigned to the storage account.\n    largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState     LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n    minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion     MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n    networkAcls  NetworkRuleSetARM     NetworkAcls: Network rule set\n    routingPreference  RoutingPreferenceARM     RoutingPreference: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing\n    sasPolicy  SasPolicyARM     SasPolicy: SasPolicy assigned to the storage account.\n    supportsHttpsTrafficOnly  bool    SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.\n    StorageAccountPropertiesCreateParametersAccessTier (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)      Value Description   \u0026#34;Cool\u0026#34;\n  \u0026#34;Hot\u0026#34;\n    StorageAccountPropertiesCreateParametersLargeFileSharesState (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    StorageAccountPropertiesCreateParametersMinimumTlsVersion (string alias)  (Appears on:StorageAccountPropertiesCreateParametersARM, StorageAccounts_Spec)      Value Description   \u0026#34;TLS1_0\u0026#34;\n  \u0026#34;TLS1_1\u0026#34;\n  \u0026#34;TLS1_2\u0026#34;\n    StorageAccountPropertiesStatusAccessTier (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;Cool\u0026#34;\n  \u0026#34;Hot\u0026#34;\n    StorageAccountPropertiesStatusLargeFileSharesState (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;Disabled\u0026#34;\n  \u0026#34;Enabled\u0026#34;\n    StorageAccountPropertiesStatusMinimumTlsVersion (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;TLS1_0\u0026#34;\n  \u0026#34;TLS1_1\u0026#34;\n  \u0026#34;TLS1_2\u0026#34;\n    StorageAccountPropertiesStatusProvisioningState (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;Creating\u0026#34;\n  \u0026#34;ResolvingDNS\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    StorageAccountPropertiesStatusStatusOfPrimary (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;available\u0026#34;\n  \u0026#34;unavailable\u0026#34;\n    StorageAccountPropertiesStatusStatusOfSecondary (string alias)  (Appears on:StorageAccountProperties_StatusARM, StorageAccount_Status)      Value Description   \u0026#34;available\u0026#34;\n  \u0026#34;unavailable\u0026#34;\n    StorageAccountProperties_StatusARM   (Appears on:StorageAccount_StatusARM)      Field Description      accessTier  StorageAccountPropertiesStatusAccessTier     AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.\n    allowBlobPublicAccess  bool    AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n    allowCrossTenantReplication  bool    AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n    allowSharedKeyAccess  bool    AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n    azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication_StatusARM     AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.\n    blobRestoreStatus  BlobRestoreStatus_StatusARM     BlobRestoreStatus: Blob restore status\n    creationTime  string    CreationTime: Gets the creation date and time of the storage account in UTC.\n    customDomain  CustomDomain_StatusARM     CustomDomain: Gets the custom domain the user assigned to this storage account.\n    encryption  Encryption_StatusARM     Encryption: Gets the encryption settings on the account. If unspecified, the account is unencrypted.\n    failoverInProgress  bool    FailoverInProgress: If the failover is in progress, the value will be true, otherwise, it will be null.\n    geoReplicationStats  GeoReplicationStats_StatusARM     GeoReplicationStats: Geo Replication Stats\n    isHnsEnabled  bool    IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.\n    isNfsV3Enabled  bool    IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.\n    keyCreationTime  KeyCreationTime_StatusARM     KeyCreationTime: Storage account keys creation time.\n    keyPolicy  KeyPolicy_StatusARM     KeyPolicy: KeyPolicy assigned to the storage account.\n    largeFileSharesState  StorageAccountPropertiesStatusLargeFileSharesState     LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n    lastGeoFailoverTime  string    LastGeoFailoverTime: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n    minimumTlsVersion  StorageAccountPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n    networkAcls  NetworkRuleSet_StatusARM     NetworkAcls: Network rule set\n    primaryEndpoints  Endpoints_StatusARM     PrimaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n    primaryLocation  string    PrimaryLocation: Gets the location of the primary data center for the storage account.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbeddedARM     PrivateEndpointConnections: List of private endpoint connection associated with the specified storage account\n    provisioningState  StorageAccountPropertiesStatusProvisioningState     ProvisioningState: Gets the status of the storage account at the time the operation was called.\n    routingPreference  RoutingPreference_StatusARM     RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer\n    sasPolicy  SasPolicy_StatusARM     SasPolicy: SasPolicy assigned to the storage account.\n    secondaryEndpoints  Endpoints_StatusARM     SecondaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n    secondaryLocation  string    SecondaryLocation: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n    statusOfPrimary  StorageAccountPropertiesStatusStatusOfPrimary     StatusOfPrimary: Gets the status indicating whether the primary location of the storage account is available or unavailable.\n    statusOfSecondary  StorageAccountPropertiesStatusStatusOfSecondary     StatusOfSecondary: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n    supportsHttpsTrafficOnly  bool    SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true.\n    StorageAccountStatusKind (string alias)  (Appears on:StorageAccount_Status, StorageAccount_StatusARM)      Value Description   \u0026#34;BlobStorage\u0026#34;\n  \u0026#34;BlockBlobStorage\u0026#34;\n  \u0026#34;FileStorage\u0026#34;\n  \u0026#34;Storage\u0026#34;\n  \u0026#34;StorageV2\u0026#34;\n    StorageAccount_Status   (Appears on:StorageAccount)      Field Description      accessTier  StorageAccountPropertiesStatusAccessTier     AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.\n    allowBlobPublicAccess  bool    AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n    allowCrossTenantReplication  bool    AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n    allowSharedKeyAccess  bool    AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n    azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication_Status     AzureFilesIdentityBasedAuthentication: Provides the identity based authentication settings for Azure Files.\n    blobRestoreStatus  BlobRestoreStatus_Status     BlobRestoreStatus: Blob restore status\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    creationTime  string    CreationTime: Gets the creation date and time of the storage account in UTC.\n    customDomain  CustomDomain_Status     CustomDomain: Gets the custom domain the user assigned to this storage account.\n    encryption  Encryption_Status     Encryption: Gets the encryption settings on the account. If unspecified, the account is unencrypted.\n    extendedLocation  ExtendedLocation_Status     ExtendedLocation: The extendedLocation of the resource.\n    failoverInProgress  bool    FailoverInProgress: If the failover is in progress, the value will be true, otherwise, it will be null.\n    geoReplicationStats  GeoReplicationStats_Status     GeoReplicationStats: Geo Replication Stats\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    identity  Identity_Status     Identity: The identity of the resource.\n    isHnsEnabled  bool    IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.\n    isNfsV3Enabled  bool    IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.\n    keyCreationTime  KeyCreationTime_Status     KeyCreationTime: Storage account keys creation time.\n    keyPolicy  KeyPolicy_Status     KeyPolicy: KeyPolicy assigned to the storage account.\n    kind  StorageAccountStatusKind     Kind: Gets the Kind.\n    largeFileSharesState  StorageAccountPropertiesStatusLargeFileSharesState     LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n    lastGeoFailoverTime  string    LastGeoFailoverTime: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n    location  string    Location: The geo-location where the resource lives\n    minimumTlsVersion  StorageAccountPropertiesStatusMinimumTlsVersion     MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n    name  string    Name: The name of the resource\n    networkAcls  NetworkRuleSet_Status     NetworkAcls: Network rule set\n    primaryEndpoints  Endpoints_Status     PrimaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n    primaryLocation  string    PrimaryLocation: Gets the location of the primary data center for the storage account.\n    privateEndpointConnections  []PrivateEndpointConnection_Status_SubResourceEmbedded     PrivateEndpointConnections: List of private endpoint connection associated with the specified storage account\n    provisioningState  StorageAccountPropertiesStatusProvisioningState     ProvisioningState: Gets the status of the storage account at the time the operation was called.\n    routingPreference  RoutingPreference_Status     RoutingPreference: Maintains information about the network routing choice opted by the user for data transfer\n    sasPolicy  SasPolicy_Status     SasPolicy: SasPolicy assigned to the storage account.\n    secondaryEndpoints  Endpoints_Status     SecondaryEndpoints: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n    secondaryLocation  string    SecondaryLocation: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n    sku  Sku_Status     Sku: Gets the SKU.\n    statusOfPrimary  StorageAccountPropertiesStatusStatusOfPrimary     StatusOfPrimary: Gets the status indicating whether the primary location of the storage account is available or unavailable.\n    statusOfSecondary  StorageAccountPropertiesStatusStatusOfSecondary     StatusOfSecondary: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n    supportsHttpsTrafficOnly  bool    SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    StorageAccount_StatusARM       Field Description      extendedLocation  ExtendedLocation_StatusARM     ExtendedLocation: The extendedLocation of the resource.\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    identity  Identity_StatusARM     Identity: The identity of the resource.\n    kind  StorageAccountStatusKind     Kind: Gets the Kind.\n    location  string    Location: The geo-location where the resource lives\n    name  string    Name: The name of the resource\n    properties  StorageAccountProperties_StatusARM     Properties: Properties of the storage account.\n    sku  Sku_StatusARM     Sku: Gets the SKU.\n    tags  map[string]string    Tags: Resource tags.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    StorageAccountsBlobService   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts_blobServices\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsBlobServices_Spec          automaticSnapshotPolicyEnabled  bool    AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.\n    changeFeed  ChangeFeed     ChangeFeed: The blob service properties for change feed events.\n    containerDeleteRetentionPolicy  DeleteRetentionPolicy     ContainerDeleteRetentionPolicy: The service properties for soft delete.\n    cors  CorsRules     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    defaultServiceVersion  string    DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n    deleteRetentionPolicy  DeleteRetentionPolicy     DeleteRetentionPolicy: The service properties for soft delete.\n    isVersioningEnabled  bool    IsVersioningEnabled: Versioning is enabled if set to true.\n    lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy     LastAccessTimeTrackingPolicy: The blob service properties for Last access time based tracking policy.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    restorePolicy  RestorePolicyProperties     RestorePolicy: The blob service properties for blob restore policy\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  BlobServiceProperties_Status         StorageAccountsBlobServicesContainer   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts_blobServices_containers\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsBlobServicesContainers_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultEncryptionScope  string    DefaultEncryptionScope: Default the container to use specified encryption scope for all writes.\n    denyEncryptionScopeOverride  bool    DenyEncryptionScopeOverride: Block override of encryption scope from the container default.\n    immutableStorageWithVersioning  ImmutableStorageWithVersioning     ImmutableStorageWithVersioning: Object level immutability properties of the container.\n    location  string    Location: Location to deploy resource to\n    metadata  map[string]string    Metadata: A name-value pair to associate with the container as metadata.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsBlobService resource\n    publicAccess  ContainerPropertiesPublicAccess     PublicAccess: Specifies whether data in the container may be accessed publicly and the level of access.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  BlobContainer_Status         StorageAccountsBlobServicesContainersSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsBlobServicesContainers_Spec   (Appears on:StorageAccountsBlobServicesContainer)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    defaultEncryptionScope  string    DefaultEncryptionScope: Default the container to use specified encryption scope for all writes.\n    denyEncryptionScopeOverride  bool    DenyEncryptionScopeOverride: Block override of encryption scope from the container default.\n    immutableStorageWithVersioning  ImmutableStorageWithVersioning     ImmutableStorageWithVersioning: Object level immutability properties of the container.\n    location  string    Location: Location to deploy resource to\n    metadata  map[string]string    Metadata: A name-value pair to associate with the container as metadata.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsBlobService resource\n    publicAccess  ContainerPropertiesPublicAccess     PublicAccess: Specifies whether data in the container may be accessed publicly and the level of access.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsBlobServicesContainers_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.\n    properties  ContainerPropertiesARM     Properties: The properties of a container.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsBlobServicesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsBlobServices_Spec   (Appears on:StorageAccountsBlobService)      Field Description      automaticSnapshotPolicyEnabled  bool    AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.\n    changeFeed  ChangeFeed     ChangeFeed: The blob service properties for change feed events.\n    containerDeleteRetentionPolicy  DeleteRetentionPolicy     ContainerDeleteRetentionPolicy: The service properties for soft delete.\n    cors  CorsRules     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    defaultServiceVersion  string    DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n    deleteRetentionPolicy  DeleteRetentionPolicy     DeleteRetentionPolicy: The service properties for soft delete.\n    isVersioningEnabled  bool    IsVersioningEnabled: Versioning is enabled if set to true.\n    lastAccessTimeTrackingPolicy  LastAccessTimeTrackingPolicy     LastAccessTimeTrackingPolicy: The blob service properties for Last access time based tracking policy.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    restorePolicy  RestorePolicyProperties     RestorePolicy: The blob service properties for blob restore policy\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsBlobServices_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the blob Service within the specified storage account. Blob Service Name must be \u0026lsquo;default\u0026rsquo;\n    properties  BlobServicePropertiesPropertiesARM     Properties: The properties of a storage account’s Blob service.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsManagementPoliciesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsManagementPolicies_Spec   (Appears on:StorageAccountsManagementPolicy)      Field Description      owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    policy  ManagementPolicySchema     Policy: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsManagementPolicies_SpecARM       Field Description      name  string    Name: The name of the Storage Account Management Policy. It should always be \u0026lsquo;default\u0026rsquo;\n    properties  ManagementPolicyPropertiesARM     Properties: The Storage Account ManagementPolicy properties.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsManagementPolicy   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts_managementPolicies\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsManagementPolicies_Spec          owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    policy  ManagementPolicySchema     Policy: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  ManagementPolicy_Status         StorageAccountsQueueService   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts_queueServices\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsQueueServices_Spec          cors  CorsRules     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  QueueServiceProperties_Status         StorageAccountsQueueServicesQueue   Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/resourceDefinitions/storageAccounts_queueServices_queues\n    Field Description      metadata  Kubernetes meta/v1.ObjectMeta     Refer to the Kubernetes API documentation for the fields of the metadata field.     spec  StorageAccountsQueueServicesQueues_Spec          azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    metadata  map[string]string    Metadata: A name-value pair that represents queue metadata.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsQueueService resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n       status  StorageQueue_Status         StorageAccountsQueueServicesQueuesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsQueueServicesQueues_Spec   (Appears on:StorageAccountsQueueServicesQueue)      Field Description      azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    location  string    Location: Location to deploy resource to\n    metadata  map[string]string    Metadata: A name-value pair that represents queue metadata.\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccountsQueueService resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsQueueServicesQueues_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n    properties  QueuePropertiesARM         tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsQueueServicesSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsQueueServices_Spec   (Appears on:StorageAccountsQueueService)      Field Description      cors  CorsRules     Cors: Sets the CORS rules. You can include up to five CorsRule elements in the request.\n    location  string    Location: Location to deploy resource to\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a storage.azure.com/StorageAccount resource\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsQueueServices_SpecARM       Field Description      location  string    Location: Location to deploy resource to\n    name  string    Name: The name of the Queue Service within the specified storage account. Queue Service Name must be \u0026lsquo;default\u0026rsquo;\n    properties  QueueServicePropertiesPropertiesARM     Properties: The properties of a storage account’s Queue service.\n    tags  map[string]string    Tags: Name-value pairs to add to the resource\n    StorageAccountsSpecAPIVersion (string alias)      Value Description   \u0026#34;2021-04-01\u0026#34;\n    StorageAccountsSpecKind (string alias)  (Appears on:StorageAccounts_Spec, StorageAccounts_SpecARM)      Value Description   \u0026#34;BlobStorage\u0026#34;\n  \u0026#34;BlockBlobStorage\u0026#34;\n  \u0026#34;FileStorage\u0026#34;\n  \u0026#34;Storage\u0026#34;\n  \u0026#34;StorageV2\u0026#34;\n    StorageAccounts_Spec   (Appears on:StorageAccount)      Field Description      accessTier  StorageAccountPropertiesCreateParametersAccessTier     AccessTier: Required for storage accounts where kind = BlobStorage. The access tier used for billing.\n    allowBlobPublicAccess  bool    AllowBlobPublicAccess: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n    allowCrossTenantReplication  bool    AllowCrossTenantReplication: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n    allowSharedKeyAccess  bool    AllowSharedKeyAccess: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n    azureFilesIdentityBasedAuthentication  AzureFilesIdentityBasedAuthentication     AzureFilesIdentityBasedAuthentication: Settings for Azure Files identity based authentication.\n    azureName  string    AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn\u0026rsquo;t have to be.\n    customDomain  CustomDomain     CustomDomain: The custom domain assigned to this storage account. This can be set via Update.\n    encryption  Encryption     Encryption: The encryption settings on the storage account.\n    extendedLocation  ExtendedLocation     ExtendedLocation: The complex type of the extended location.\n    identity  Identity     Identity: Identity for the resource.\n    isHnsEnabled  bool    IsHnsEnabled: Account HierarchicalNamespace enabled if sets to true.\n    isNfsV3Enabled  bool    IsNfsV3Enabled: NFS 3.0 protocol support enabled if set to true.\n    keyPolicy  KeyPolicy     KeyPolicy: KeyPolicy assigned to the storage account.\n    kind  StorageAccountsSpecKind     Kind: Required. Indicates the type of storage account.\n    largeFileSharesState  StorageAccountPropertiesCreateParametersLargeFileSharesState     LargeFileSharesState: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n    location  string    Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.\n    minimumTlsVersion  StorageAccountPropertiesCreateParametersMinimumTlsVersion     MinimumTlsVersion: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n    networkAcls  NetworkRuleSet     NetworkAcls: Network rule set\n    operatorSpec  StorageAccountOperatorSpec     OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not passed directly to Azure\n    owner  genruntime.KnownResourceReference     Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a resources.azure.com/ResourceGroup resource\n    routingPreference  RoutingPreference     RoutingPreference: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing\n    sasPolicy  SasPolicy     SasPolicy: SasPolicy assigned to the storage account.\n    sku  Sku     Sku: The SKU of the storage account.\n    supportsHttpsTrafficOnly  bool    SupportsHttpsTrafficOnly: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.\n    tags  map[string]string    Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\n    StorageAccounts_SpecARM       Field Description      extendedLocation  ExtendedLocationARM     ExtendedLocation: The complex type of the extended location.\n    identity  IdentityARM     Identity: Identity for the resource.\n    kind  StorageAccountsSpecKind     Kind: Required. Indicates the type of storage account.\n    location  string    Location: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.\n    name  string    Name: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n    properties  StorageAccountPropertiesCreateParametersARM     Properties: The parameters used to create the storage account.\n    sku  SkuARM     Sku: The SKU of the storage account.\n    tags  map[string]string    Tags: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\n    StorageQueue_Status   (Appears on:StorageAccountsQueueServicesQueue)      Field Description      approximateMessageCount  int    ApproximateMessageCount: Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n    conditions  []genruntime/conditions.Condition     Conditions: The observed state of the resource\n    id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    metadata  map[string]string    Metadata: A name-value pair that represents queue metadata.\n    name  string    Name: The name of the resource\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    StorageQueue_StatusARM       Field Description      id  string    Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n    name  string    Name: The name of the resource\n    properties  QueueProperties_StatusARM     Properties: Queue resource properties.\n    type  string    Type: The type of the resource. E.g. \u0026ldquo;Microsoft.Compute/virtualMachines\u0026rdquo; or \u0026ldquo;Microsoft.Storage/storageAccounts\u0026rdquo;\n    TagFilter   (Appears on:ManagementPolicyFilter)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/TagFilter\n    Field Description      name  string    Name: This is the filter tag name, it can have 1 - 128 characters\n    op  string    Op: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported\n    value  string    Value: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters\n    TagFilterARM   (Appears on:ManagementPolicyFilterARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/TagFilter\n    Field Description      name  string    Name: This is the filter tag name, it can have 1 - 128 characters\n    op  string    Op: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported\n    value  string    Value: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters\n    TagFilter_Status   (Appears on:ManagementPolicyFilter_Status)      Field Description      name  string    Name: This is the filter tag name, it can have 1 - 128 characters\n    op  string    Op: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported\n    value  string    Value: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters\n    TagFilter_StatusARM   (Appears on:ManagementPolicyFilter_StatusARM)      Field Description      name  string    Name: This is the filter tag name, it can have 1 - 128 characters\n    op  string    Op: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported\n    value  string    Value: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters\n    TagProperty_Status   (Appears on:LegalHoldProperties_Status)      Field Description      objectIdentifier  string    ObjectIdentifier: Returns the Object ID of the user who added the tag.\n    tag  string    Tag: The tag value.\n    tenantId  string    TenantId: Returns the Tenant ID that issued the token for the user who added the tag.\n    timestamp  string    Timestamp: Returns the date and time the tag was added.\n    upn  string    Upn: Returns the User Principal Name of the user who added the tag.\n    TagProperty_StatusARM   (Appears on:LegalHoldProperties_StatusARM)      Field Description      objectIdentifier  string    ObjectIdentifier: Returns the Object ID of the user who added the tag.\n    tag  string    Tag: The tag value.\n    tenantId  string    TenantId: Returns the Tenant ID that issued the token for the user who added the tag.\n    timestamp  string    Timestamp: Returns the date and time the tag was added.\n    upn  string    Upn: Returns the User Principal Name of the user who added the tag.\n    Tier_Status (string alias)  (Appears on:Sku_Status, Sku_StatusARM)      Value Description   \u0026#34;Premium\u0026#34;\n  \u0026#34;Standard\u0026#34;\n    UpdateHistoryPropertyStatusUpdate (string alias)  (Appears on:UpdateHistoryProperty_Status, UpdateHistoryProperty_StatusARM)      Value Description   \u0026#34;extend\u0026#34;\n  \u0026#34;lock\u0026#34;\n  \u0026#34;put\u0026#34;\n    UpdateHistoryProperty_Status   (Appears on:ImmutabilityPolicyProperties_Status)      Field Description      immutabilityPeriodSinceCreationInDays  int    ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation, in days.\n    objectIdentifier  string    ObjectIdentifier: Returns the Object ID of the user who updated the ImmutabilityPolicy.\n    tenantId  string    TenantId: Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.\n    timestamp  string    Timestamp: Returns the date and time the ImmutabilityPolicy was updated.\n    update  UpdateHistoryPropertyStatusUpdate     Update: The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.\n    upn  string    Upn: Returns the User Principal Name of the user who updated the ImmutabilityPolicy.\n    UpdateHistoryProperty_StatusARM   (Appears on:ImmutabilityPolicyProperties_StatusARM)      Field Description      immutabilityPeriodSinceCreationInDays  int    ImmutabilityPeriodSinceCreationInDays: The immutability period for the blobs in the container since the policy creation, in days.\n    objectIdentifier  string    ObjectIdentifier: Returns the Object ID of the user who updated the ImmutabilityPolicy.\n    tenantId  string    TenantId: Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.\n    timestamp  string    Timestamp: Returns the date and time the ImmutabilityPolicy was updated.\n    update  UpdateHistoryPropertyStatusUpdate     Update: The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.\n    upn  string    Upn: Returns the User Principal Name of the user who updated the ImmutabilityPolicy.\n    UserAssignedIdentity_Status   (Appears on:Identity_Status)      Field Description      clientId  string    ClientId: The client ID of the identity.\n    principalId  string    PrincipalId: The principal ID of the identity.\n    UserAssignedIdentity_StatusARM   (Appears on:Identity_StatusARM)      Field Description      clientId  string    ClientId: The client ID of the identity.\n    principalId  string    PrincipalId: The principal ID of the identity.\n    VirtualNetworkRule   (Appears on:NetworkRuleSet)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/VirtualNetworkRule\n    Field Description      action  VirtualNetworkRuleAction     Action: The action of virtual network rule.\n    reference  genruntime.ResourceReference     Reference: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.\n    state  VirtualNetworkRuleState     State: Gets the state of virtual network rule.\n    VirtualNetworkRuleARM   (Appears on:NetworkRuleSetARM)  Generated from: https://schema.management.azure.com/schemas/2021-04-01/Microsoft.Storage.json#/definitions/VirtualNetworkRule\n    Field Description      action  VirtualNetworkRuleAction     Action: The action of virtual network rule.\n    id  string        state  VirtualNetworkRuleState     State: Gets the state of virtual network rule.\n    VirtualNetworkRuleAction (string alias)  (Appears on:VirtualNetworkRule, VirtualNetworkRuleARM)      Value Description   \u0026#34;Allow\u0026#34;\n    VirtualNetworkRuleState (string alias)  (Appears on:VirtualNetworkRule, VirtualNetworkRuleARM)      Value Description   \u0026#34;Deprovisioning\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;NetworkSourceDeleted\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    VirtualNetworkRuleStatusAction (string alias)  (Appears on:VirtualNetworkRule_Status, VirtualNetworkRule_StatusARM)      Value Description   \u0026#34;Allow\u0026#34;\n    VirtualNetworkRuleStatusState (string alias)  (Appears on:VirtualNetworkRule_Status, VirtualNetworkRule_StatusARM)      Value Description   \u0026#34;Deprovisioning\u0026#34;\n  \u0026#34;Failed\u0026#34;\n  \u0026#34;NetworkSourceDeleted\u0026#34;\n  \u0026#34;Provisioning\u0026#34;\n  \u0026#34;Succeeded\u0026#34;\n    VirtualNetworkRule_Status   (Appears on:NetworkRuleSet_Status)      Field Description      action  VirtualNetworkRuleStatusAction     Action: The action of virtual network rule.\n    id  string    Id: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.\n    state  VirtualNetworkRuleStatusState     State: Gets the state of virtual network rule.\n    VirtualNetworkRule_StatusARM   (Appears on:NetworkRuleSet_StatusARM)      Field Description      action  VirtualNetworkRuleStatusAction     Action: The action of virtual network rule.\n    id  string    Id: Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.\n    state  VirtualNetworkRuleStatusState     State: Gets the state of virtual network rule.\n     "},{"id":74,"href":"/azure-service-operator/design/crossplane/","title":"Thoughts on performing provider-azure code generation for Crossplane","section":"Design \u0026 Specifications","content":"Thoughts on performing provider-azure code generation for Crossplane #  The patterns identified below were extrapolated from the Crossplane VNET spec.\nGeneral notes #  Crossplane has the following static \u0026ldquo;special\u0026rdquo; properties #   ForProvider - this contains the actual \u0026ldquo;spec\u0026rdquo; as Azure would see it. DeletionPolicy ProviderConfigRef WriteConnectionSecretToRef  Since these are statically shaped they should be relatively easy to add with Crossplane specific generator pipeline stages.\nItems #2-4 are included automatically by embedding the runtimev1alpha1.ResourceSpec from runtimev1alpha1 \u0026quot;github.com/crossplane/crossplane-runtime/apis/core/v1alpha1\u0026quot;.\nCross resource references in Crossplane #   X (e.g. ResourceGroupName) - An actual field that exists in the Azure API. Can be set to any string you\u0026rsquo;d post to the Azure API. XRef (e.g. ResourceGroupNameRef) - A reference to a named Kubernetes object of a preordained kind. Used to resolve a value for X. XNameSelector (e.g. ResourceGroupNameSelector) - A selector used to set XRef.  Note that these values cascade down from the selector, to the ref, to the underlying field. If the ref is already set the selector is ignored, and if the field is already set the ref is ignored.\nUsually these are used to specify parentage for a resource (as in the case of the example above with ResourceGroupName) but may also be used for other cross resource references.\nGenerating these might take a bit of work as we need to derive the name(s) for each of these for each of the parent resources. This should be doable in a pipeline stage by walking up the graph of owners that we already have and getting their names, then generating a set of these for each owner.\nStatus #  Our status' include the \u0026ldquo;full\u0026rdquo; shape of the object, whereas Crossplane\u0026rsquo;s include the things which are not in the spec (basically the server-only fields). As pointed out by @negz, it\u0026rsquo;s a bit weird to duplicate data across Spec and Status like we\u0026rsquo;re currently doing so it may be worth us considering their approach. #269 is tracking this discussion.\nMissing features #  These are features the k8s-infra code generator is currently lacking that would be required to do a good job of generating the Crossplane CRDs.\n#266 Support for embedding structs/interfaces into generated types #  We don\u0026rsquo;t currently support embedding in the generated types, and we will need to in order to support embedding of runtimev1alpha1.ResourceSpec and runtimev1alpha1.ResourceStatus.\nSupport for additionalPrinterColumns in the CRD YAML #  Since these are likely custom per resource I am not sure if we want to generate them or just merge them in with hand-maintained Kustomize files.\n#267 Detection and removal of embedded subresources. #  Some of our CRDs aren\u0026rsquo;t as clear as they should be due to the service teams embedding subresources in the parent resource as properties. For example on VNET we have subnets and virtualNetworkPeerings properties that really probably shouldn\u0026rsquo;t be there (since those are their own sub-resources).\nImprovements in JSON schema/Swagger upstream for marking read-only properties #  This is minor as we can bypass properties using exclusions in the configuration file for now, but ideally we\u0026rsquo;d push this stuff up to the actual \u0026ldquo;source of truth\u0026rdquo; documents.\nAn example of this is: our VNET Spec has provisioningState in the spec which doesn\u0026rsquo;t make sense.\nA plan for secrets #  Right now we don\u0026rsquo;t have a plan for fields which are classified as secret. This will matter for some things such as Microsoft SQL Server. We do already have an issue tracking this at #154.\nSupport for resource references other than ownership #  We have a plan for supporting Cross resource references but don\u0026rsquo;t currently have the data to easily detect them. Ideally we could detect these and then turn them into our resource reference shape, or into Crossplanes.\n#268 Promote \u0026ldquo;Properties\u0026rdquo; Spec property #  This shows up on quite a large number of resources and adds an extra level of nesting that doesn\u0026rsquo;t look great.\nSpecific resources #  VNET #  Note: VNET in Crossplane is a v1alpha1 API and as such doesn\u0026rsquo;t follow all of their best practices (v1beta1 APIs do)\n As mentioned above, our VNET today has subnets and virtualNetworkPeerings, which are really subresources. It also has provisioningState which it shouldn\u0026rsquo;t. If we excluded these properties in the configuration file, we could definitely hack towards generating a VNET that looks like Crossplane\u0026rsquo;s now.  Redis #   Our version of Redis has a Properties field in the spec, which holds a bunch of properties. Some properties (Location, Owner, Tags) are peers of Properties. We should consider promoting the contents of Properties up a level into Spec, as mentioned above. There are a few trivial capitalization differences between our generated Redis and the one that is in Crossplane. For example: EnableNonSSLPort vs our EnableNonSslPort. Crossplane is correct here, but the difference only shows up in the generated code and so isn\u0026rsquo;t a big deal. We generate Enums for Redis.Sku fields Name and Family, whereas Crossplane just uses strings. Neither Crossplane nor we support SubnetId as a reference to a Kubernetes resource, but we probably should. (They have a TODO in the code). Crossplane makes use of a +immutable annotation, presumably to annotate that certain fields cannot be changed once they are set. We should look into doing that as well. #180 is tracking this. It\u0026rsquo;s not clear to me that this annotation actually does anything right now though. Crossplane is making use of a newer version of the Redis API than we see, because the 2018+ versions of the Redis API seem to have not made it into the deployment template we\u0026rsquo;re using as the source of truth. I filed #1237 in the schemas repro tracking this.  Microsoft SQL #   The strange thing with SQL is somehow some of their APIs don\u0026rsquo;t have the full API surface area\u0026hellip; For example I think 2019-06-01-preview exists but it\u0026rsquo;s not in the JSON schema we\u0026rsquo;re using. Other bits are split across API versions but then unioned together in their SDK: 2015-05-01-preview has servers, and 2017-03-01-preview has databases. Their Swagger is equally confusing. As mentioned above, the big issue here is going to be secrets/credentials since we don\u0026rsquo;t have an automated solution for that yet. Other than that, I think servers and databases (which are AFAIK the two interesting resources here) should be doable today.  Plugging into Crossplane framework #  One other area we need to investigate is how to write a generic adapter that takes standard ARM deployments and turns them into something that plugs into the Crossplane framework (CRUD). We might need some discussion with the Crossplane folks here because one thing with deployments is that they are actually their own resource, so a Create VNET operation would have to create a deployment that created the VNET. Once the deployment is done (resource in steady state), we\u0026rsquo;d want a way to conditionally delete the deployment (that doesn\u0026rsquo;t delete the VNET).\nFor those curious, we\u0026rsquo;ve got the scaffolding to do that in our generic controller in PR #250, you can see the workflow here.\n"},{"id":75,"href":"/azure-service-operator/introduction/tutorial-cosmosdb/","title":"Tutorial: CosmosDB to-do List","section":"User’s Guide","content":"Tutorial: CosmosDB to-do List #  Follow the guided example to create a to-do list application backed by CosmosDB. The CosmosDB is hosted in Azure but created easily via kubectl and Azure Service Operator!\n"},{"id":76,"href":"/azure-service-operator/introduction/tutorial-postgresql/","title":"Tutorial: PostgreSQL Votes","section":"User’s Guide","content":"Tutorial: PostgreSQL Votes #  Follow the guided example to create a simple voting application backed by PostgreSQL. The PostgreSQL Server and Database are hosted in Azure but created easily via kubectl and Azure Service Operator!\n"},{"id":77,"href":"/azure-service-operator/design/type-references-and-ownership/","title":"Type references and ownership","section":"Design \u0026 Specifications","content":"Type references and ownership #  Related reading #   Kubernetes garbage collection. Kubernetes RBAC  Related Projects #   ASO: Azure Service Operator k8s-infra: The handcrafted precurser to the code generation tool being designed.  Goals #   Provide a way for customers to express relationships between Azure resources in an idiomatic Kubernetes way. Provide automatic ownership and garbage collection (using Kubernetes garbage collection) where appropriate (e.g. ResourceGroup as an owner of all the resources inside of it)  Ideally ResourceGroup is handled the same as other owners and isn\u0026rsquo;t special cased.   Define how Kubernetes interacts with Azure resources not created/managed by Kubernetes, for example resources which were created prior to the customer onboarding to the Azure Service Operator. References should be extensible to work across multiple Azure subscriptions, although initially we may not support that.  Non-goals #   Managing ownership for resources/resource hierarchies that were not created by the service operator. While this proposal allows references to point to external resources not managed by the service operator, the operator is not watching/monitoring the resource in question and as such cannot propagate deletes. Put another way: for the operator to manage ownership/object lifecycles, the entire resource hierarchy must exist within Kubernetes. If only part of the resource hierarchy is managed by the service operator, only those parts can have their lifecycles managed.  Different kinds of resource relationships in Azure #  Related/linked resources #  Two resources are related to one another (\u0026ldquo;has-a\u0026rdquo; relationship), but there is no ownership. Example: VMSS → Subnet (json schema).\nThis relationship is always one-way (a VMSS refers to a Subnet, but a Subnet does not refer to a VMSS).\nOwner and dependent #  Two resources have a relationship where one is owned by the other.\nExamples:\n a RouteTable owns many Routes (json schema) a BatchAccount owns many Pools (json schema) a ResourceGroup owns any resource  A relationship like those shown here tells us two things:\n Where to create/manage the dependent resource (this Route goes in that particular RouteTable, this RouteTable has that Route) That the dependent resource should be deleted when the parent resource is deleted. There are theoretically two cases here:  The dependent resource must be deleted before the parent can be deleted. Deletion of the parent automatically cascades to all dependent resources. Due to how Azure ARM resources express ownership (via id which is part of the URL, with dependent resources being a subdirectory under the owning resources URL) all ARM resources should fall into this case.    Note that sometimes an owning resource has its dependent resources embedded directly (for example: RouteTable has the property RouteTablePropertiesFormat). Most types do not embed the dependent resource directly in the owning resource. We will need to cater for both the embedded and non-embedded cases.\nWhat do these relationships look like in existing solutions? #  This section examines how other operator solutions have tackled these problems. We look at:\n ARM templates Azure Service Operator (ASO) k8s-infra  Related/Linked resources #  What does ARM do? #  These are just properties (often but not always called id) which refer to the fully qualified ARM ID of another resource. For example see a sample deployment template for a VMSS refering to an existing vnet.\n\u0026#34;properties\u0026#34;: { \u0026#34;subnet\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;[resourceId(parameters(\u0026#39;existingVnetResourceGroupName\u0026#39;), \u0026#39;Microsoft.Network/virtualNetworks/subnets\u0026#39;, parameters(\u0026#39;existingVnetName\u0026#39;), parameters(\u0026#39;existingSubNetName\u0026#39;))]\u0026#34; }, } What does ASO do? #  Similar to how ARM templates behave, ASO uses the decomposition of fully qualified resource id to reference another resource, as seen here for VMSS → VNet\ntype AzureVMScaleSetSpec struct { ... Location string `json:\u0026#34;location\u0026#34;` ResourceGroup string `json:\u0026#34;resourceGroup\u0026#34;` VirtualNetworkName string `json:\u0026#34;virtualNetworkName\u0026#34;` SubnetName string `json:\u0026#34;subnetName\u0026#34;` ... } These properties are combined into a fully qualified ARM ID like so:\nsubnetIDInput := helpers.MakeResourceID( client.SubscriptionID, resourceGroupName, \u0026#34;Microsoft.Network\u0026#34;, \u0026#34;virtualNetworks\u0026#34;, vnetName, \u0026#34;subnets\u0026#34;, subnetName, ) This produces a resource ID: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.\nCurrently ASO does not support cross-subscription references (and some of the resources such as VMSS don\u0026rsquo;t allow cross-resource group references), but it in theory could by adding parameters.\nWhat does k8s-infra do? #  k8s-infra is a bit different in that resource references are in Kubernetes style (namespace + name) and not Azure style (resource-group + resource-name). All resource references are done using the special type KnownTypeReference which contains the fully qualified Kubernetes name for the resource.\nDependent Resources #  What does ARM do? #  ARM template deployments support two different ways of deploying dependent resources:\n Deploy the resources in the same ARM template with dependent resources embedded inside owning resources using the resources property.  The dependent resource need not specify which resource is its owner, because it is implied by embedded structure. The owning resource and the dependent resource must be created at the same time.   Deploy the resources separately.  The dependent resource must specify which resource is its owner by including in its name field both the owning resource name and the dependent resource name separated by a /. Each segment of the name corresponds to an owning resource. For example creating a Batch Pool foo in Batch account account would have name = account/foo. The dependent resource can be created after the owning resource has already been created, or can be created at the same time as the owning resource. If created at the same time, the dependsOn field must be used to inform ARM of the order to perform resource creation.    What does ASO do? #  Dependent resources in ASO have properties which map to the name/path to their owner. For example MySQLFirewallRuleSpec looks like this:\ntype MySQLFirewallRuleSpec struct { ResourceGroup string `json:\u0026#34;resourceGroup\u0026#34;` Server string `json:\u0026#34;server\u0026#34;` StartIPAddress string `json:\u0026#34;startIpAddress\u0026#34;` EndIPAddress string `json:\u0026#34;endIpAddress\u0026#34;` } The ResourceGroup and Server are references to the owners of this type.\nWhat does k8s-infra do? #  k8s-infra uses the same KnownTypeReference type mentioned above for ownership references too. There are two patterns for ownership in k8s-infra today.\nOne pattern is used for ResourceGroup, where top level resources have a link to the resource group they are in.\ntype VirtualMachineScaleSetSpec struct { // +kubebuilder:validation:Required  ResourceGroupRef *azcorev1.KnownTypeReference `json:\u0026#34;resourceGroupRef\u0026#34; group:\u0026#34;microsoft.resources.infra.azure.com\u0026#34; kind:\u0026#34;ResourceGroup\u0026#34;` ... } The other pattern is where the owning resource has links to the dependent resources it is expecting to have:\ntype RouteTableSpecProperties struct { DisableBGPRoutePropagation bool `json:\u0026#34;disableBgpRoutePropagation,omitempty\u0026#34;` RouteRefs []azcorev1.KnownTypeReference `json:\u0026#34;routeRefs,omitempty\u0026#34; group:\u0026#34;microsoft.network.infra.azure.com\u0026#34; kind:\u0026#34;Route\u0026#34; owned:\u0026#34;true\u0026#34;` } If the dependent resources aren\u0026rsquo;t there, the status of the owning resource reflects an error explaining that.\nProposal #  A note on names before we get started #  In Kubernetes each resource must have a unique name for its group-kind. For example, if we had a RouteTable CRD, each RouteTable object would need to have a unique name. In ARM, resources do not need to be uniquely named. There can be two RouteTable resources with the same name provided they are in different resource groups. The owner-dependent resource relationship impacts uniqueness in Azure in a way that it doesn\u0026rsquo;t in Kubernetes.\nProposed solution #  All Kubernetes resources will have two fields which are used in combination to build the Azure name: Metadata.Name and Spec.AzureName. When Spec.AzureName is empty, Metadata.Name is used as the resource name. When Spec.AzureName is provided, it takes precedence and is used when interacting with ARM, but the resource in Kubernetes is still called by its Metadata.Name.\nOverview #  We propose the following high-level solution:\n All references will be via Kubernetes group, kind, and name. If a resource not managed by Kubernetes must be referenced, that resource must be imported into Kubernetes as an Unmanaged resource. Dependent resources will refer to their parent via an Owner property. The Owner property will automatically detect group and kind, making specifying an owner as simple as providing the Kubernetes resource name. Dependent resources with the Owner property set will automatically have their ownerReferences configured so that Kubernetes garbage collection will delete the dependent resources when the owner is deleted. References to related resources will be automatically detected by the code generator and transformed into the correct reference type. At serialization time, the controller will transform the Kubernetes types (including related resource references and owner references) into the correct Azure resource definitions (including fully qualified ARM IDs).  More specific details about how this will be achieved are in the following sections.\nHow to represent references #  There are two kinds of references we need to represent: References to a resource whose type we know statically at compile time, and references to a resource whose type we do not know at compile time.\nWe could use the same type for both kinds of references, but that has the downside of allowing a situation where we know the group and version statically at compile time, but the customer has also provided it and it doesn\u0026rsquo;t match. Two types allows us to clearly express what we\u0026rsquo;re expecting for each reference. The resulting YAMLs look basically the same to the customer, and the required-ness of the fields will give push-back when customers need to specify a group or kind and have not.\n// KnownResourceReference is a resource reference to a known type. type KnownResourceReference struct { // This is the name of the Kubernetes resource to reference. \tName string `json:\u0026#34;name\u0026#34;` // References across namespaces are not supported.  // Note that ownership across namespaces in Kubernetes is not allowed, but technically resource \t// references are. There are RBAC considerations here though so probably easier to just start by \t// disallowing cross-namespace references for now } type ResourceReference struct { // The group of the referenced resource.  Group string `json:\u0026#34;group\u0026#34;` // The kind of the referenced resource.  Kind string `json:\u0026#34;kind\u0026#34;` // The name of the referenced resource.  Name string `json:\u0026#34;name\u0026#34;` // Note: Version is not required here because references are all about linking one Kubernetes  // resource to another, and Kubernetes resources are uniquely identified by group, kind, (optionally namespace) and  // name - the versions are just giving a different view on the same resource } How to represent ownership and dependent resources #  We will use the same KnownResourceReference type as an additional Owner field on dependent resource specifications.\nWhen we determine that a resource is a dependent resource of another resource kind, we will code-generate an Owner property in the dependent resource Spec. This will also include an annotation about the expected type of the resource (group and kind) so that the customer doesn\u0026rsquo;t have to specify that in the YAML.\ntype SubnetSpec struct { Owner KnownResourceReference `json:\u0026#34;owner\u0026#34; group:\u0026#34;microsoft.network.infra.azure.com\u0026#34; kind:\u0026#34;VirtualNetwork\u0026#34;` ... } When users submit a dependent object we will validate that the provided owner reference is present. This can be accomplished by making the property required in the CRD.\nA YAML snippet showing how this will look from the customer\u0026rsquo;s perspective:\n... spec: owner: name: my-vnet ... One major advantage of this approach is that the customer cannot really get the owning type wrong, because we\u0026rsquo;ve autogenerated the expected group/kind information all names they supply must point to the right kind of resource.\nHow to represent a resource generically #  In addition to representing references generically, we will need the ability to reference ARM resources generically, so that the generic controller can act on them without needing to cast to their specific type.\n// TODO: There may be more in this interface, or it may get rolled into MetaObject depending on yet to be determined implementation details type ArmResource interface { // Name returns the ARM resource name \tName() string // Owner returns the ResourceReference so that we can extract the Group/Kind for easier lookups  Owner() *ResourceReference } How to identify resource relationships #  For related (not owned) resources we must find each field that represents a resource reference and transform its type to ResourceReference. There is no specific marker which means: \u0026ldquo;This field is a reference\u0026rdquo; - most are called id but that\u0026rsquo;s not a guarantee. For example on the VirtualMachineScaleSetIPConfigurationProperties the subnet field is of custom type ApiEntityReference, which has an id field where you put the ARM ID for a subnet. This may require some manual work. One thing we can investigate doing long term is see if there\u0026rsquo;s a way to get teams to annotate \u0026ldquo;links\u0026rdquo; in their Swagger somehow.\nFor dependent resources we must identify all of the owner to dependent relationships between resources. As discussed in what ARM does, this can be done using the resources property in the ARM deployment templates. These are much easier to automatically detect than related resources as the dependent types are called out in the resources property explicitly.\nHow to choose the right reference type (ResourceReference vs KnownResourceReference) at generation time #  Because we are code-generating all of the Owner fields based on the resources property in the JSON schema, and each ARM resource can be owned by at most 1 other resource, we can always supply the annotations for group and kind automatically for the Owner field. This is not the case for abitrary references (id\u0026rsquo;s) to other resources. We do not actually know programmatically what type those references are. In some cases it may actually be allowed to point to multiple different types (for example: custom image vs shared image gallery).\nIn the KnownResourceReference case, we know the type we\u0026rsquo;re looking for and can fail fast if the customer specifies the wrong type. In the ResourceReference case, we cannot know the type we\u0026rsquo;re looking for, so we must accept what the customer has provided and ensure that we have good error messages if they have provided a link to an invalid resource (usually the error from Azure should suffice).\nResourceLifeCycle and unmanaged resources #  In order to keep references Kubernetes-native, allow a \u0026ldquo;single pane of glass\u0026rdquo; for customers looking at their Azure resources through Kubernetes, and allow references to resources that were created before the customer onboarded to the operator, we introduce a new mode to each resource: ResourceLifeCycle.\nResourceLifeCycle can be either Managed or Unmanaged.\nResourceLifeCycle is not specified by the customer explicitly in the Spec, instead it is inferred based on how the resource was created in Kubernetes. If a resource is created as just a reference (id, name, no spec details) then it is Unmanaged. If a resource is created with a populated spec, then the resource is Managed.\nRouteTable + Routes issue (multiple routes of the same name are allowed) #  Options for this: Note that all of these options share this restriction: Each resource must be imported, e.g. to import a VNET you may need to import the resource group the VNET is in, and then the VNET (with an Owner reference pointing to the imported ResourceGroup).\nOption 1: Users must create a valid resource with the same name as the resource they want to track. If this resource\u0026rsquo;s spec differs from what is in Azure, an error is logged but we never actually apply any state to Azure (i.e. we don\u0026rsquo;t try to sync to the spec). A tag in the metadata must be added to inform the operator not to sync.\nAdvantages\n Swapping from unmanaged to managed is super easy, just remove the tag blocking the reconciliation loop.  Disadvantages\n There is possibly a significant amount of extra effort required to re-specify a resource whose shape we really just want to \u0026ldquo;import\u0026rdquo; from ARM. Worse for large trees of objects or deeply nested objects. If the tag is forgotten (or has a typo) we will try to manage a resource which we shouldn\u0026rsquo;t be managing. This could be very problematic depending on how different the specification is from what exists in Azure. The existence of a spec may suggest we are actually seeking towards it \u0026ndash; which we are not. ASO does have a similar feature though so maybe not that big of a problem.  Option 2: Users create an entity with just the \u0026ldquo;identifying fields\u0026rdquo; set: Metadata.Name, Owner, and optionally Spec.AzureName. When an entity is created like this, the controller knows to treat it specially (optionally may also add a tag automatically?). These entities will only be watched by the controller, no mutating update will be sent to ARM.\nAdvantages\n Relatively easy to import even complex object hierarchies.  Disadvantages\n This screws up the \u0026ldquo;required-ness\u0026rdquo; of non-identifying fields in a spec. For example: a Virtual Network requires a Properties VirtualNetworkProperties field to be set, but since we have to allow that field to be nil when importing a Virtual Network we can\u0026rsquo;t set the Properties field with a required annotation for Kubebuilder.  Option 3: Same as option 2, but use anyOf to specify two valid structures:\nspec: type: object properties: owner: properties: name: type: string azureName: type: string foo: type: integer anyOf: - required: [\u0026#34;owner\u0026#34;] - required: [\u0026#34;owner\u0026#34;, \u0026#34;foo\u0026#34;] Note that it has to be anyOf because oneOf disallows multiple matches, and owner + foo matches both sets in the example above.\nAdvantages\n Represents what we want and maintains better automatic validation.  Disadvantages\n Kubebuilder doesn\u0026rsquo;t support generating this, so we would have to come up with another way to do it, or possibly upstream changes to Kubebuilder to support it.  Option 4: Other ideas\u0026hellip; Do away with Kubebuilder validation entirely and use our own (including our own validating webhooks). Use Kustomize and our own code-generator/parser to generate amendments to Kubebuilder\u0026rsquo;s generated CRDs to get the anyOf shape we want above.\nHow to transform Kubernetes objects to ARM objects (and back) #  In the case of resource ownership, the proposed Owner property exists on dependent resources in the CRD but must not go to Azure as Azure doesn\u0026rsquo;t understand it. In the case of a generic resource reference, the ResourceReference in the CRD must become an id (with fully-qualified ARM ID) when serialized to ARM. In both cases, we need two representations of the entity: one to Kubernetes as the CRD, and one to Azure. These two types are structurally similar but not identical. We cannot just override JSON serialization to solve this problem due to the fact that there are actually two distinct JSON representations we need.\nThe proposed solution is that the code generator intelligently generates 2 types for cases where we know the CRD shape differs from ARM. We will add an interface which types can optionally implement which allows them to transform themselves to another type prior to serialization to/from ARM. This is also a useful hook for any manual customization for serialization we may need.\nThe interface will look something like this:\ntype ARMTransformer interface { ToArm(owningName string) (interface{}, error) FromArm(owner KnownResourceReference, input interface{}) error } Here\u0026rsquo;s an example of how it will be implemented:\nfunc CreateArmResourceNameForDeployment(owningName string, name string) string { result := owningName + \u0026#34;/\u0026#34; + name return result } // +kubebuilder:object:root=true // +kubebuilder:storageversion type VirtualNetworksSubnets struct { metav1.TypeMeta `json:\u0026#34;,inline\u0026#34;` metav1.ObjectMeta `json:\u0026#34;metadata,omitempty\u0026#34;` Spec VirtualNetworksSubnetsSpec `json:\u0026#34;spec,omitempty\u0026#34;` } var _ ArmResource = \u0026amp;VirtualNetworksSubnets{} func (resource *VirtualNetworksSubnets) Owner() *ResourceReference { r := reflect.TypeOf(resource.Spec) ownerField, found := r.FieldByName(\u0026#34;Owner\u0026#34;) if !found { return nil } group := ownerField.Tag.Get(\u0026#34;group\u0026#34;) kind := ownerField.Tag.Get(\u0026#34;kind\u0026#34;) return \u0026amp;ResourceReference { group: group, kind: kind, name: resource.Spec.Owner.Name } } func (resource *VirtualNetworksSubnets) Name() string { return resource.Spec.Name } type VirtualNetworksSubnetsSpec struct { // +kubebuilder:validation:Required \tApiVersion VirtualNetworksSubnetsSpecApiVersion `json:\u0026#34;apiVersion\u0026#34;` // +kubebuilder:validation:Required \tName string `json:\u0026#34;name\u0026#34;` // +kubebuilder:validation:Required \tOwner genruntime.KnownResourceReference `json:\u0026#34;owner\u0026#34; group:\u0026#34;microsoft.network\u0026#34; kind:\u0026#34;VirtualNetworks\u0026#34;` // +kubebuilder:validation:Required \t//Properties: Properties of the subnet. \tProperties SubnetPropertiesFormat `json:\u0026#34;properties\u0026#34;` // +kubebuilder:validation:Required \tType VirtualNetworksSubnetsSpecType `json:\u0026#34;type\u0026#34;` } // No KubeBuilder comments required here because not ever used to generate CRD type VirtualNetworksSubnetsSpecArm struct { ApiVersion VirtualNetworksSubnetsSpecApiVersion `json:\u0026#34;apiVersion\u0026#34;` Name string `json:\u0026#34;name\u0026#34;` //Properties: Properties of the subnet. \tProperties SubnetPropertiesFormat `json:\u0026#34;properties\u0026#34;` Type VirtualNetworksSubnetsSpecType `json:\u0026#34;type\u0026#34;` } // This interface implementation would be autogenerated for ARM resources with references var _ genruntime.ArmTransformer = \u0026amp;VirtualNetworksSubnetsSpec{} func (transformer *VirtualNetworksSubnetsSpec) ToArm(owningName string) (interface{}, error) { result = VirtualNetworksSubnetsSpecArm{} result.ApiVersion = transformer.ApiVersion result.Name = CreateArmResourceNameForDeployment(owningName, transformer.Name) result.Properties = transformer.Properties result.Type = transformer.Type return result, nil } func (transformer *VirtualNetworksSubnetsSpec) FromArm(owner genruntime.KnownResourceReference, input interface{}) error { typedInput, ok := input.(VirtualNetworksSubnetsSpecArm) if !ok { return fmt.Errorf(\u0026#34;unexepected type supplied for FromArm function. Expected VirtualNetworksSubnetsSpecArm, got %T\u0026#34;, input) } transformer.ApiVersion = typedInput.ApiVersion transformer.Name = ExtractKubernetesResourceNameFromArmName(typedInput.Name) transformer.Owner = owner transformer.Properties = typedInput.Properties transformer.Type = typedInput.Type return nil } Controller example #  Putting it all together, here\u0026rsquo;s what a generic controller reconciliation loop would look like using the interfaces discussed previously.\n// Example usage -- error handling elided for brevity func (gr *GenericReconciler) Reconcile(req ctrl.Request) (ctrl.Result, error) { scheme := ... gvk := ... client := ... // Load the object from etcd  obj := scheme.New(gvk) resource := client.Get(req.NamespacedName, obj) // Get the owner details  armResource := obj.(ARMResource) ownerRef := armResource.Owner() // Perform a get from Azure to see current resource state  armId := helpers.GetArmId(resource) objFromAzure := scheme.new(gvk) // We need to provide the empty type to deserialize into  // Somehow construct a new object of type etcdObject  if armTransformer, ok := objFromAzure.(ARMTransformer); ok { result := armTransformer.ToArm(\u0026#34;\u0026#34;) // This just converts from an empty kube shape to an empty arm shape  armClient.GetIt(armId, result) armTransformer.FromArm(ownerRef, result) } // Perform a put to update resource state  // Walk the owner hierarchy (assuming owner has no owner here for simplicity) to build owner name  ownerGvk := ownerRef.ToGvk() owner := scheme.New(ownerGvk) ownerArmResource := owner.(ARMResource) ownerId := owner.Name() var toSerialize interface{} toSerialize = resource if armTransformer, ok := toSerialize.(ARMTransformer); ok { toSerialize = armTransformer.ToArm(ownerArmId) } json := json.Marshal(toSerialize) armClient.SendIt(json) } FAQ #  What happens when a dependent resource specifies an Owner that doesn\u0026rsquo;t exist? #  The dependent resource will be stuck in an unprovisioned state with an error stating that the owner doesn\u0026rsquo;t exist. If the owner is created, the dependent resource will then be created by the reconciliation loop automatically.\nWhat happens when a resource contains a link to another resource which doesn\u0026rsquo;t exist? #  The resource with the link will be stuck in an unprovisioned state with an error stating that the linked resource doesn\u0026rsquo;t exist. This behavior is the same as for a dependent resource with a non-existent owner.\nHow are the CRD entities going to be rendered as ARM deployments? #  There are a few different ways to perform ARM deployments as discussed in Dependent Resources. Due to the nature of Kubernetes CRDs, each resource is managed separately and has its own reconcilation loop. It doesn\u0026rsquo;t make sense to try to deploy a single ARM template with the entire resource graph. Each resource will be done in its own deployment (with a dependsOn specified if required).\nAren\u0026rsquo;t there going to be races in resource creation? #  Yes. If you have a complex hierarchy of resources (where resources have involved relationships between one another) and submit all of their YAMLs to the operator at the same time it is likely that some requests when sent to ARM will fail because of missing dependencies. Those resources that failed to deploy initially will be in an unprovisioned state in Kubernetes, and eventually all the resources will be created through multiple iterations of the reconciliation loop.\nAren\u0026rsquo;t there going to be races in resource deletion? #  Yes. Owner as discussed in this specification is informing Kubernetes how Azure behaves. The fact that a ResourceGroup is the owner of a VirtualMachineScaleSet means that when the ResourceGroup is deleted in Azure, the VirtualMachineScaleSet will be too.\nThis means that practically speaking, we don\u0026rsquo;t need Kubernetes garbage collection to perform deletion of resources in Azure. Azure is already going to do that automatically. We need Kubernetes garbage collection to easily maintain sync with Azure.\nAs far as implementation goes this just means that when we are performing deletes in the generic controller and the resource is already deleted in Azure we just swallow that error and allow the Kubernetes object to be deleted.\nWhat exactly happens when a resource with an Owner is created? #  Once the resource has been accepted by the various admissions controllers and has been cofirmed to match the structural schema defined in the CRD, the generic controller will attempt to look up the owning resource in etcd (or in ARM if it\u0026rsquo;s an AzureReference).\nIf the generic controller finds the owning resource, it updates the ownerReference in the object metadata to include the uid of the owning resource and then submits an ARM template to ARM using the name of the owner and the name of the resource to build the name specified in the ARM template. It will include the name of the owner in the dependsOn field.\nWhat happens if an owning resource is deleted and immediately recreated? #  Kubernetes garbage collection is based on object uid\u0026rsquo;s. As discussed above, we bind to that uid on dependent resource creation. If a resource is deleted and then recreated Kubernetes will still understand that the new resource is fundamentally different than the old resource and garbage collection will happen as expected. The result will be that there is a new owning resource but all of its dependent resources were deleted (in Azure and in k8s).\nTODOs #   How can we allow customers to easily find all dependents for a particular owner (i.e. all subnets of a vnet) using kubectl? Cross subscription refs? Note that these are supported by a few Azure resources (VNET for example), but aren\u0026rsquo;t supported in most places.  Questions #  These are questions I am posing to the group - I don\u0026rsquo;t expect to have an answer without input from the group.\n What to do with awkward resources where the owner requires at least 1 dependent to also be created with it? David Justice pointed out this one Do we want to use the same type for ownership relationships and \u0026ldquo;related\u0026rdquo; relationships? Ownership has other angles such as how deletes propagate which in theory don\u0026rsquo;t apply for other kinds of relationships. Do we need to worry about letting customers choose between foreground cascading deletion and background cascading deletion or do we just pick one behavior which is best for our case?  The road not travelled #  Shape of Azure References #  We considered avoiding the complexity of ResourceLifecycle (Managed vs Unmanaged), instead allowing references to Azure resources directly by ARM ID.\nReferences would look like this:\ntype KnownResourceReference struct { Kubernetes KnownKubernetesReference `json:\u0026#34;kubernetes\u0026#34;` Azure string `json:\u0026#34;azure\u0026#34;` } type ResourceReference struct { Kubernetes KubernetesReference `json:\u0026#34;kubernetes\u0026#34;` Azure string `json:\u0026#34;azure\u0026#34;` } type KnownKubernetesReference struct { // This is the name of the Kubernetes resource to reference. \tName string `json:\u0026#34;name\u0026#34;` // References across namespaces are not supported. \t// Note that ownership across namespaces in Kubernetes is not allowed, but technically resource \t// references are. There are RBAC considerations here though so probably easier to just start by \t// disallowing cross-namespace references for now } type KubernetesReference struct { // The group of the referenced resource. \tGroup string `json:\u0026#34;group\u0026#34;` // The kind of the referenced resource. \tKind string `json:\u0026#34;kind\u0026#34;` // The name of the referenced resource. \tName string `json:\u0026#34;name\u0026#34;` // Note: Version is not required here because references are all about linking one Kubernetes \t// resource to another, and Kubernetes resources are uniquely identified by group, kind, (optionally namespace) and \t// name - the versions are just giving a different view on the same resource } Advantages compared to what we chose #   Can track resources which are not tracked by Kubernetes. Doesn\u0026rsquo;t need to introduce ResourceLifeCycle. ResourceLifeCycle complicates the mental model of individual resources as now apply on a resource can fail due to ResourceLifeCycle being Unmanaged. Can support references to resource types which the operator doesn\u0026rsquo;t yet support. It\u0026rsquo;s likely that we can work around this in the chosen architecture if it becomes a big problem though.  Disadvantages compared to what we chose #   References are not always Kubernetes-native looking. The reference structure is a more complex nested type, which makes references (which are common) more complicated. Moving from a resource link being to Azure directly to that same resource being managed/tracked by Kubernetes requires sweeping updates across all types referencing the migrated resource. Doesn\u0026rsquo;t allow for a \u0026ldquo;single pane of glass\u0026rdquo; experience where customers can easily view all of their resources in a Kubernetes native way.  How to represent references #  Use fully qualified ARM ID (a single string) for all references #  Pros #   Super simple to implement, because it\u0026rsquo;s what ARM expects at the end of the day anyway.  Cons #   You can\u0026rsquo;t easily transplant your YAML between subscriptions/resource groups because those IDs are in the YAML - you need templates and variables so that you can easily move between different resource groups or Subscriptions. Customers can\u0026rsquo;t stay in Kubernetes-land, they have to move their mental model to an \u0026ldquo;Azure\u0026rdquo; model.  Use built-in OwnerReference for owner references (customer setting these directly) #  Pros #   Basically none - customers are not supposed to set this directly.  Cons #   OwnerReference requires the object UID, which cannot be known at template authoring time. OwnerReference only works for ownership relationships, not for references.  Where ownership references are specified #  Ownership is from owner to dependent #  Pros #   It makes getting a list of all resources under a particular owner very easy.  Cons #   Adding/deleting a new dependent resource requires an update to the owner. The owner can be in a failed state because dependent resources are missing. It feels like we\u0026rsquo;re repeating our intent here: On the one hand, we told the owner that it should have 3 dependents, while on the other hand we only created 2 of those 3. It feels like the state of the resources in kubernetes (i.e. how many dependents there actually are) is already expressing the intent for how many we want, so having that also on the owner seems duplicate.  "},{"id":78,"href":"/azure-service-operator/introduction/conditions/","title":"Understanding Conditions","section":"User’s Guide","content":"Understanding Conditions #  Each resource reports a Ready condition in .status.conditions. It is also visible when you examine the resource with kubectl get, for example:\n$ kubectl get resourcegroups.resources.azure.com NAME READY SEVERITY REASON MESSAGE aso-sample-rg False Info Reconciling The resource is in the process of being reconciled by the operator If the condition\u0026rsquo;s status is True (visible in the READY column via kubectl get) the resource is in the goal state. No more reconciliations will be performed until a change is detected.\nSeverity #  When a conditions status is not True, it will include a severity and message detailing the problem (if any). The possible severities are:\n Info: The resource is working as intended. It may be taking a while to get to the goal state. The message field describes what the operator is working on. Warning: There may be a problem with the resource. The operator does not believe that this problem is fatal. Reconciliation will continue. Examine the message for more details. Error: There is a problem with the resource. The operator has given up reconciling this resource and requires you to make a change to correct the problem. See the message for specific details about the problem. The resource will stay in this state until user action is taken.  "},{"id":79,"href":"/azure-service-operator/design/versioning/","title":"Versioning","section":"Design \u0026 Specifications","content":"Versioning #  Specification for how storage versioning will operate for code generated CRD definitions.\nWe\u0026rsquo;re generating a large number of CRD definitions based on the JSON schema definitions published for Azure Resource Manager use.\nGoals #  Principle of Least Surprise: The goal of the service operator is to allow users to consume Azure resources without having to leave the tooling they are familiar with. We therefore want to do things in the idiomatic Kubernetes fashion, so that they don\u0026rsquo;t experience any nasty surprises.\nAuto-generated conversions: As far as practical, we want to autogenerate the schema for storage use along with the conversions to and from the actual ARM API versions. Hand coding all the required conversions doesn\u0026rsquo;t scale across all the different Azure sevices, especially with the ongoing rate of change.\nAllow for hand coded conversions: While we expect to use code generation to handle the vast majority of needed conversions, we anticipate that some breaking API changes will require part of the conversion to be hand coded. We need to make it simple for these conversions to be introduced while still autogenerating the majority of the conversion. We also want to minimize the need for these conversions to be revisited and maintained over time.\nNo modification of generated files. Manual modification of generated files is a known antipattern that greatly increases the complexity and burden of updates. If some files have been manually changed, every difference showing after code generation needs to be manually reviewed before being committed. This is tedious and error prone because the vast majority of auto generated changes will be perfectly fine. Worse, this process would need to be repeated every time we want to update the operator.\nCompliance with Kubernetes versioning. To quote Kubebuilder\u0026rsquo;s documentation:\n In Kubernetes, all versions must be safely round-tripable through each other. This means that if we convert from version 1 to version 2, and then back to version 1, we must not lose information. Thus, any change we make to our API must be compatible with whatever we supported in v1, and also need to make sure anything we add in v2 is supported in v1.\n Consistency of experience: Early adopters should have a similar experience with the latest release of the service operator as new users who are adopting it for the first time. We don\u0026rsquo;t want early adopters to be penalized for their enthusiasm.\nNon-Goals #  Coverage of every case by code generation: While it\u0026rsquo;s likely that very high coverage will be achievable with code generation, we don\u0026rsquo;t believe that it will be practical to handle every possible situation automatically. It\u0026rsquo;s therefore necessary for the solution to have some form of extensibility allowing for the injection of hand written code.\nOther Constraints #  Unlike the typical situation with a hand written service operator, we don\u0026rsquo;t have complete control over the schema we are publishing for custom resources - we\u0026rsquo;re deriving the CRD schema from the ARM JSON schema published online. This somewhat paints us into a corner where some issues that would be easily avoided with a hand-coded schema have to be faced head on.\nCase Studies #  There are three case studies that accompany this specification, each one walking through one possible solution and showing how it will perform as a synthetic ARM style API evolves over time.\nThe Chained Versions case study shows how the preferred solution adapts to changes as the API is modified.\nThe Rolling Versions case study shows an alternative that works well but falls down when hand coded conversions are introduced between versions.\nThe Fixed Version case study shows how a popular alternative would fare, calling out some specific problems that will occur.\nTL;DR: Using a fixed storage version appears simpler at first, and works well as long as the changes from version to version are simple. However, when the changes become complex (as they are bound to do over time), this approach starts to break down. While there is up front complexity to address with chained storage versions, the approach doesn\u0026rsquo;t break down over time and we can generate useful automated tests for verification. The rolling storage version approach is viable, but requires additional ongoing maintenance when manual conversions are introduced between versions.\nExamples shown in this document are drawn from the case studies.\nProposed Solution #  In summary:\n  For each supported version of an Azure Resource Type, we will define a synthetic storage type type that will be used for serialization of that versions of the API. The latest non-preview version will be tagged as the canonical storage type for Kubernetes.\n  Automatically generated conversions will allow for lossless conversions between the externally exposed API versions of resources and the related storage versions. Additional conversions will be generated to allow upgrade or downgrade between adjacent storage versions.\n  External metadata that we bundle with the code generator will document common changes that occur over time (including property and type name changes), extending the coverage of our automatically generated conversions.\n  For cases where automatically generated conversion is not sufficient, standard extension points for each resource type will allow hand-coded conversion steps to be injected into the process at key points.\n  Each of these four points is expanded upon in detail below.\nDefining Storage Versions #  We\u0026rsquo;ll base the schema of the storage versions on the corresponding API version, with the following modifications:\nAll properties will be defined as optional allowing for back compatibility with prior versions of the API that might not have included specific properties.\nInclusion of a property bag to provide for storage for properties present in other versions of the API that are not present in this version.\nIf a resource type is dropped from later releases of the ARM API, we will still generate a storage type based on the latest available release of that type. We need to do this in order to maintain backward compatibility with existing installations of the service operator.\nUsing a purpose designed types for storage avoids a number of version-to-version compatibility issues that can arise if the API version itself is used directly for storage.\nTo illustrate, if the API version defined the following Person type:\npackage v20110101 type Person struct { Id Guid FirstName string LastName string } Then the generated storage (hub) version will be:\npackage v20110101storage type Person struct { PropertyBag Id *Guid FirstName *string LastName *string } Using the latest version of the API as the basis for our storage version gives us maximum compatibility for the usual case, where a user defines their custom resource using the latest available version.\nIf a type has been dropped from the ARM API, we will still generate a storage schema for it based on the last ARM API version where it existed; this helps to ensure backward compatibility with existing service operator deployments. For example, if Person was dropped in favour of Party type (that can capture companies and organizations as well), we will still continue to generate a storage version of Person to allow deserialization by existing service operator installations as a part of their upgrade process.\nSequestering additional properties away within a property bag in the storage schema is more robust than using separate annotations as they are less subject to arbitrary modification by users. This allows us to largely avoid situations where well meaning (but uninformed) consumers of the service operator innocently make changes that result in the operator becoming failing. We particularly want to avoid this failure mode because recovery will be difficult - restoration of the modified/deleted information may be impractical or impossible.\nThe latest non-preview storage version will be selected as the definitive storage version (or hub version) for use by the controller.\nGenerated conversion methods #  Each of the structs generated for ARM API will have the normal ConvertTo() and ConvertFrom() methods generated automatically, implementing the required Convertible interface:\n// ConvertTo converts this Person to the matching storage version. func (person *Person) ConvertTo(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertToStorage(p) } // ConvertFrom converts from the matching storage version func (person *Person) ConvertFrom(raw conversion.Hub) error { p := raw.(*storage.Person) return ConvertFromStorage(p) } As shown, these methods will delegate to two strongly typed helper methods (ConvertToStorage() and ConvertFromStorage()) that are generated to handle the process of copying information across between instances.\nThe ConvertToStorage() method is responsible for copying all of the properties from the API type onto the storage type. The ConvertFromStorage() method is its mirror, responsible for populating all of the properties on the API type from the storage type.\nEach property defined in the API type is considered in turn, and will require different handling based on its type and whether a suitable match is found on the storage type:\nFor properties with a primitive type a matching property must have the same name and the identical type. If found, a simple assignment will copy the value over. If not found, the value will be stashed-in/recalled-from the property bag present on the storage type.\n Primitive types are string, int, float64, and bool Name comparisons are case-insensitive  For properties with an enumeration type a matching property must have the same property name and a type matching the underlying type of the enumeration. If found, a simple assignment will copy the value over with a suitable type cast. If not found, the value will be stashed-in/recalled-from the property bag present on the storage type using the underlying type of the enumeration.\n Name comparisons are case-insensitive for both property names and enumeration type names Enumeration types are generated independently for each version, so they will never be identical types  For properties with a custom type a matching property must have the same name and a custom type with same type name. If found, a new instance will be created and the appropriate ConvertToStorage() or ConvertFromStorage() method for the custom type will be used. If not found, JSON serialization will be used with the property bag for storage.\n Name comparisons are case-insensitive for both property names and custom type names Custom types are generated independently for each version, so they will never be identical types   TODO: Show an example that includes all the cases\n External Metadata for common changes #  We\u0026rsquo;ll capture common changes between versions in metadata (likely a YAML file) that we bundle with the code generator, allowing it to handle a wider range of scenarios.\nIf a property is renamed in a particular API version, conversion from the prior API version to that point of change will instead match based on the new name of the property on the storage type.\nThere are more than 40 cases of properties being renamed across versions of the ARM API.\n TODO: Show an example\n If a type has been renamed in a particular API version, conversion from the API version prior to that point of change will instead match based on the new type of the property on the storage type.\nThere are 160 cases of properties changing type across versions of the ARM API. Many of these can be handled automatically by capturing type renames in metadata.\n TODO: Show an example\n  Outstanding Issue: Are there other kinds of common change we want to support?\nAre there other cases of changes between versions that we may be able to handle automatically. Can we find examples? Do we want to support these cases?\n Standard extension points #  Code generation will include interfaces to allow easy injection of manual conversion steps.\nFor each storage type, two interfaces will be generated, one for each direction of conversion.\nAn AssignableTo* interface for conversion to the storage type will be available for conversions that write to an instance of the storage type.\ntype AssignableToPerson interface { AssignToPerson(person Person) error } Similarly, an AssignableFrom* interface for conversion from the storage type will be available for conversions that read from an instance of the storage type:\ntype AssignableFromPerson interface { AssignFromPerson(person Person) error } If a type (whether API or storage) implements one (or both) of these interfaces, they will be automatically invoked after the standard conversion code has completed, creating an opportunity to augment the standard conversion process.\nTesting #  It\u0026rsquo;s vital that we are able to correctly convert between versions. We will therefore generate a set of unit tests to help ensure that the conversions work correctly. Coverage won\u0026rsquo;t be perfect (as there are conversion steps we can\u0026rsquo;t automatically verify) but these tests will help ensure correctness.\nRound Trip Testing #  We will generate a unit test to ensure that every spoke version can round trip to the hub version and back again to the same version with no loss of information. This will help to ensure a base level of compliance, that information is not lost through serialization.\nThis test targets the following failure modes:\n Edge cases not correctly handled by the generated conversion code. Manually implemented conversions that don\u0026rsquo;t handle some cases correctly.  Each test will work as follows:\n Create an instance of the required type and API version  This will likely be done by using one of the available fuzzing libraries for Go testing   Convert this to the current storage version Convert back from the storage version to a new instance of the original type and API version Verify that all properties are equal  string, int, bool much match exactly Float64 match within tolerance Complex types are recursively matched using the same rules    Relibility Testing #  We will generate unit tests to ensure that every spoke version can be converted to every other spoke version via the hub version without crashing. We lack the semantic context to verify that the conversion is correct, but we can at least verify that it doesn\u0026rsquo;t crash.\nThis test targets the following failure modes:\n Conversions that fail when information is missing (as may happen when converting from earlier versions)  Golden Tests #  For API (spoke) types where the optional interfaces AssignableTo...() and AssignableFrom...() have been implemented, we\u0026rsquo;ll generate golden tests to verify that they are generating the expected results.\nThis test targets the following failure modes:\n Manually implemented conversions that don\u0026rsquo;t handle all the expected edge cases. Manually implemented conversions that fail when given newer (or older) starting versions than expected.  These tests will be particularly useful when a new version of the ARM API is released for a given service as they will help to catch any new changes that now require support.\nWe\u0026rsquo;ll generate two golden tests for each type in each API type, one to test verify conversion to the latest version, and one to test conversion from the latest version.\nTesting conversion to the latest version will check that an instance of a older version of the API can be up-converted to the latest version:\nThe test will involve these steps:\n Create an exemplar instance of the older API type Convert it to the storage type using ConvertToStorage() Convert it to the latest API type using ConvertFromStorage() Check that it matches the golden file from a previous run  Testing will only occur if one (or both) types implements one of the optional interfaces. That is, one or both of the following must be true:\n The older API type implements AssignableTo...() The latest API type implements AssignableFrom...()  If neither rule is satisfied, the test will silently null out.\nTesting conversion from the latest version will check that an instance of the latest version of the API can be down-converted to an older version.\n Create an exemplar instance of the latest API type Convert it to the storage type using ConvertToStorage() Convert it to the older API type using ConvertFromStorage() Check that it matches the golden file from a previous run  Testing will only occur if one (or both) types implements one of the optional interfaces. That is, one or both of the following must be true:\n The older API type implements AssignableFrom...() The latest API type implements AssignableTo...()  If neither rule is satisfied, the test will silently null out.\nConversion Flow #  To illustrate the operation of conversions, consider the following graph of related versions of Person:\nAPI versions are shown across the top, with the associated storage versions directly below. The arrows show the direction of references between the packages, with a package at the start of the arrow importing the package at the end. For example, package v3 imports v3storage and can access the types within.\nThe highlighted storage version v4storage is the currently nominated hub version - all conversions are to or from this type.\nDirect conversion to storage type #  The simplest case is a conversion directly between v4 and v4storage, which simply involves copying properties across:\nTwo step conversion to storage type #  There\u0026rsquo;s no direct conversion between a v3.Person and a v4storage.Person, so an intermediate step is required: we convert first to a v3storage.Person, and then to the final type:\nMultiple step conversion to storage type #  The approach generalizes - at each stage, an intermediate instance is created, one step closer to the current hub type, and the properties are copied across:\nTwo step conversion from storage type #  When converting in the other direction, the process is similar - we show here just the two step case to illustrate.\nAlternative Solutions #  AKA the road not travelled\nAlternative: Fixed storage version #  The \u0026ldquo;v1\u0026rdquo; storage version of each supported resource type will be created by merging all of the fields of all the distinct versions of the resource type, creating a superset type that includes every property declared across every version of the API.\nTo maintain backward compatibility as Azure APIs evolve over time, we will include properties across all versions of the API, even for versions we are not currently generating as output. This ensures that properties in use by older APIs are still present and available for forward conversion to newer APIs, even as those older APIs age out of use.\nThis approach has a number of issues that are called out in detail in the fixed storage version case study.\nProperty Bloat: As our API evolves over time, our storage version is accumulating all the properties that have ever existed, bloating the storage version with obsolete properties that are seldom (if ever) used. Even properties that only ever existed on a single preview release of an ARM API need to be correctly managed for the lifetime of the service operator.\nProperty Amnesia: Our code generator only knows about properties defined in current versions of the API. Once an API version has been excluded (or if the JSON schema definition is no longer available), the generator completely forgets about older properties. This would cause compatibility issues for established users who would find upgrading the service operator breaks their cluster.\nType Collision: Identically named properties with different types can\u0026rsquo;t be stored in the same property; mitigation is possible for a limited time, though eventually property amnesia will cause a breaking change.\nAlternative: Use the latest API version #  The supported storage version of each resource type will simply be the latest version of the API supported by ARM. Any additional information not supported on that version will be persisted via annotations on the resource.\nThis is a known antipattern that we should avoid.\nAnnotations are publicly visible on the cluster and can easily modified. This makes it spectacularly easy for a user to make an innocent change that would break the functionality of the operator.\nMetadata Design #  To support property and type renaming, we will include metadata describing the known changes. This will be added to the existing configuration file we already have that includes filtering information on the types we exclude/include in the output.\nAs identification of renames requires manual inspection, any case of a property not appearing in a later version of the API needs to be checked. We\u0026rsquo;ll therefore also capture metadata for property removal so that we know which properties have been assessed and which have not.\nOutstanding Issues #  Service Operator Upgrades #  There are a number of issues outstanding around upgrades of the service operator.\nTiming - when are upgrades triggered? Does this happen immediately after installation of a new version of the service operator, or does it happen at a later point? If so, what\u0026rsquo;s the trigger?\nAtomicity - are all the CRDs upgraded in one atomic operation that either succeeds or fails, or are they upgraded one at a time? Are CRDs upgraded serially, or in parallel?\nPerformance - for users who have a large number of CRDs (hundreds to thousands), what sort of upgrade performance will they see?\nRecovery - if an upgrade aborts part way through, or if a new version of the service operator proves to be unreliable, is it possible for users to roll back to a previous version, or must they roll forward to a fixed version?\nSee Also #    Hubs, spokes, and other wheel metaphors\n  Falsehoods programmers believe about addresses\n  https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definition-versioning/\n"}]