apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app.kubernetes.io/name: azure-service-operator
    app.kubernetes.io/version: v2.9.0
    control-plane: controller-manager
  name: azureserviceoperator-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8}}
        {{- end }}
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- if .Values.aadPodIdentity.enable }}
        aadpodidbinding: aso-manager-binding
        {{- end }}
        app.kubernetes.io/name: azure-service-operator
        app.kubernetes.io/version: v2.9.0
        control-plane: controller-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args:
        {{- if .Values.metrics.enable}}
        - --metrics-addr={{ tpl .Values.metrics.address . }}
        - --secure-metrics={{ .Values.metrics.secure }}
        - --profiling-metrics={{ .Values.metrics.profiling }}
        {{- end }}
        - --health-addr=:8081
        {{- if or (eq .Values.multitenant.enable false) (eq .Values.azureOperatorMode "watchers") }}
        - --enable-leader-election
        {{- end }}
        - --v=2
        {{- if and (eq .Values.installCRDs true) (or (eq .Values.multitenant.enable false) (eq .Values.azureOperatorMode "webhooks")) }}
        - --crd-pattern={{ .Values.crdPattern }}
        {{- end }}
        - --webhook-port={{ .Values.webhook.port }}
        {{- if or (eq .Values.multitenant.enable false) (eq .Values.azureOperatorMode "webhooks") }}
        - --webhook-cert-dir={{ .Values.webhook.certDir }}
        {{- end }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{.Values.image.repository}}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 60
        name: manager
        ports:
        - containerPort: {{ .Values.webhook.port }}
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: health-port
          protocol: TCP
        - containerPort: 8443
          name: metrics-port
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 60
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: azure-identity
          readOnly: true
        {{- if or (eq .Values.multitenant.enable false) (eq .Values.azureOperatorMode "webhooks") }}
        - mountPath: {{ .Values.webhook.certDir }}
          name: cert
          readOnly: true
        {{- end }}
        - name: settings-volume
          readOnly: true
          mountPath: "/etc/aso-controller-settings"
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "azure-service-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if or (eq .Values.multitenant.enable false) (eq .Values.azureOperatorMode "webhooks") }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- end }}
      - name: azure-identity
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: api://AzureADTokenExchange
              expirationSeconds: 3600
              path: azure-identity
      - name: settings-volume
        secret:
          secretName: aso-controller-settings
