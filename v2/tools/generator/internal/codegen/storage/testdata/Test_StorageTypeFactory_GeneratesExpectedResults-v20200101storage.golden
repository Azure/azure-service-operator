// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101storage

import (
	"github.com/Azure/azure-service-operator/hack/generated/microsoft.person/v20200101storage"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
//Storage version of v20200101.Person
type Person struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              v20200101storage.Person_Spec   `json:"spec,omitempty"`
	Status            v20200101storage.Person_Status `json:"status,omitempty"`
}

func (person *v20200101storage.Person) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: person.Spec.OriginalVersion,
		Kind:    "Person",
	}
}

// +kubebuilder:object:root=true
//Storage version of v20200101.Person
type PersonList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []v20200101storage.Person `json:"items"`
}

//Storage version of v20200101.Person_Spec
type Person_Spec struct {
	FamilyName      *string `json:"familyName,omitempty"`
	FullName        *string `json:"fullName,omitempty"`
	KnownAs         *string `json:"knownAs,omitempty"`
	OriginalVersion string  `json:"original-version"`
}

//Storage version of v20200101.Person_Status
type Person_Status struct {
	Status *string `json:"status,omitempty"`
}

func init() {
	SchemeBuilder.Register(&v20200101storage.Person{}, &v20200101storage.PersonList{})
}
