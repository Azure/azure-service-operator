// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import (
	"fmt"
	arm "github.com/Azure/azure-service-operator/testing/person/v20200101/arm"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

type Person struct {
	// FullName: As would be used to address mail
	FullName string `json:"fullName,omitempty"`

	// Qualifications: Expect alias of array on CRD type to become array on ARM type
	Qualifications Qualifications `json:"qualifications,omitempty"`
}

var _ genruntime.ARMTransformer = &Person{}

// ConvertToARM converts from a Kubernetes CRD object to an ARM object
func (person *Person) ConvertToARM(resolved genruntime.ConvertToARMResolvedDetails) (interface{}, error) {
	if person == nil {
		return nil, nil
	}
	result := &arm.Person{}

	// Set property "FullName":
	result.FullName = person.FullName

	// Set property "Qualifications":
	var qualificationsTemp []string
	for _, item := range person.Qualifications {
		qualificationsTemp = append(qualificationsTemp, item)
	}
	result.Qualifications = qualificationsTemp
	return result, nil
}

// NewEmptyARMValue returns an empty ARM value suitable for deserializing into
func (person *Person) NewEmptyARMValue() genruntime.ARMResourceStatus {
	return &arm.Person{}
}

// PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
func (person *Person) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
	typedInput, ok := armInput.(arm.Person)
	if !ok {
		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Person, got %T", armInput)
	}

	// Set property "FullName":
	person.FullName = typedInput.FullName

	// Set property "Qualifications":
	var qualificationsTemp []string
	for _, item := range typedInput.Qualifications {
		qualificationsTemp = append(qualificationsTemp, item)
	}
	person.Qualifications = Qualifications(qualificationsTemp)

	// No error
	return nil
}

type Qualifications []string
