// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200601

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Lion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Lion_Spec   `json:"spec,omitempty"`
	Status            Lion_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Lion `json:"items"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type LionCub struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LionCub_Spec   `json:"spec,omitempty"`
	Status            LionCub_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LionCubList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LionCub `json:"items"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type LionPride struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LionPride_Spec   `json:"spec,omitempty"`
	Status            LionPride_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LionPrideList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LionPride `json:"items"`
}

type Lion_Spec struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string        `json:"name,omitempty"`
	Properties LionProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type Lion_STATUS struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string        `json:"name,omitempty"`
	Properties LionProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type LionCub_Spec struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string           `json:"name,omitempty"`
	Properties LionCubProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionCubType `json:"type,omitempty"`
}

type LionCub_STATUS struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string           `json:"name,omitempty"`
	Properties LionCubProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionCubType `json:"type,omitempty"`
}

type LionPride_Spec struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string             `json:"name,omitempty"`
	Properties LionPrideProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionPrideType `json:"type,omitempty"`
}

type LionPride_STATUS struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string             `json:"name,omitempty"`
	Properties LionPrideProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionPrideType `json:"type,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type APIVersion string

const APIVersion_apiVersion = APIVersion("2020-06-01")

type LionCubProperties struct {
	Cuteness int `json:"cuteness,omitempty"`
}

// +kubebuilder:validation:Enum={Microsoft.Lions/cub}
type LionCubType string

const LionCubType_type = LionCubType(Microsoft.Lions/cub)

// Mapping from string to LionCubType
var lionCubType_Values = map[string]LionCubType{
	microsoft.lions/cub: LionCubType_type,
}

type LionPrideProperties struct {
	Hunts int       `json:"hunts,omitempty"`
	Lions []LionRef `json:"lions,omitempty"`
}

// +kubebuilder:validation:Enum={Microsoft.Lions/lionPride}
type LionPrideType string

const LionPrideType_type = LionPrideType(Microsoft.Lions/lionPride)

// Mapping from string to LionPrideType
var lionPrideType_Values = map[string]LionPrideType{
	microsoft.lions/lionpride: LionPrideType_type,
}

type LionProperties struct {
	Cubs               []LionCubRef `json:"cubs,omitempty"`
	RoarVolumeDecibels int          `json:"roarVolumeDecibels,omitempty"`
}

// +kubebuilder:validation:Enum={Microsoft.Lions/lion}
type LionType string

const LionType_type = LionType(Microsoft.Lions/lion)

// Mapping from string to LionType
var lionType_Values = map[string]LionType{
	microsoft.lions/lion: LionType_type,
}

type LionCubRef struct {
	Id armid `json:"id,omitempty"`
}

type LionRef struct {
	Id armid `json:"id,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Lion{}, &LionList{}, &LionCub{}, &LionCubList{}, &LionPride{}, &LionPrideList{})
}
