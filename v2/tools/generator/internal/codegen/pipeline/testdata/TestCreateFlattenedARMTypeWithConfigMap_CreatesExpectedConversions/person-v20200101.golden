// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import (
	"fmt"
	arm "github.com/Azure/azure-service-operator/testing/person/v20200101/arm"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Person struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Person_Spec   `json:"spec,omitempty"`
	Status            Person_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type PersonList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Person `json:"items"`
}

// +kubebuilder:validation:Enum={"v2020"}
type APIVersion string

const APIVersion_v2020 = APIVersion("v2020")

type Person_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName string `json:"azureName,omitempty"`

	// FamilyName: Shared name of the family
	FamilyName *string `json:"familyName,omitempty" optionalConfigMapPair:"FamilyName"`

	// FamilyNameFromConfig: Shared name of the family
	FamilyNameFromConfig *genruntime.ConfigMapReference `json:"familyNameFromConfig,omitempty" optionalConfigMapPair:"FamilyName"`

	// FullName: As would be used to address mail
	FullName *genruntime.ConfigMapReference `json:"fullName,omitempty"`

	// KnownAs: How the person is generally known
	KnownAs *string `json:"knownAs,omitempty"`
}

var _ genruntime.ARMTransformer = &Person_Spec{}

// ConvertToARM converts from a Kubernetes CRD object to an ARM object
func (person *Person_Spec) ConvertToARM(resolved genruntime.ConvertToARMResolvedDetails) (interface{}, error) {
	if person == nil {
		return nil, nil
	}
	result := &arm.Person_Spec{}

	// Set property "Name":
	result.Name = resolved.Name

	// Set property "Properties":
	if person.FamilyName != nil ||
		person.FamilyNameFromConfig != nil ||
		person.FullName != nil ||
		person.KnownAs != nil {
		result.Properties = &arm.PersonProperties{}
	}
	if person.FamilyName != nil {
		familyName := *person.FamilyName
		result.Properties.FamilyName = &familyName
	}
	if person.FamilyNameFromConfig != nil {
		familyNameValue, err := resolved.ResolvedConfigMaps.Lookup(*person.FamilyNameFromConfig)
		if err != nil {
			return nil, errors.Wrap(err, "looking up configmap for property FamilyName")
		}
		familyName := familyNameValue
		result.Properties.FamilyName = &familyName
	}
	if person.FullName != nil {
		var temp string
		tempValue, err := resolved.ResolvedConfigMaps.Lookup(*person.FullName)
		if err != nil {
			return nil, errors.Wrap(err, "looking up configmap for property temp")
		}
		temp = tempValue
		result.Properties.FullName = temp
	}
	if person.KnownAs != nil {
		result.Properties.KnownAs = *person.KnownAs
	}
	return result, nil
}

// NewEmptyARMValue returns an empty ARM value suitable for deserializing into
func (person *Person_Spec) NewEmptyARMValue() genruntime.ARMResourceStatus {
	return &arm.Person_Spec{}
}

// PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
func (person *Person_Spec) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
	typedInput, ok := armInput.(arm.Person_Spec)
	if !ok {
		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Person_Spec, got %T", armInput)
	}

	// Set property "AzureName":
	person.SetAzureName(genruntime.ExtractKubernetesResourceNameFromARMName(typedInput.Name))

	// Set property "FamilyName":
	// copying flattened property:
	if typedInput.Properties != nil {
		if typedInput.Properties.FamilyName != nil {
			familyName := *typedInput.Properties.FamilyName
			person.FamilyName = &familyName
		}
	}

	// no assignment for property "FamilyNameFromConfig"

	// no assignment for property "FullName"

	// Set property "KnownAs":
	// copying flattened property:
	if typedInput.Properties != nil {
		person.KnownAs = &typedInput.Properties.KnownAs
	}

	// No error
	return nil
}

type Person_STATUS struct {
	// Status: Current status
	Status string `json:"status,omitempty"`
}

var _ genruntime.FromARMConverter = &Person_STATUS{}

// NewEmptyARMValue returns an empty ARM value suitable for deserializing into
func (person *Person_STATUS) NewEmptyARMValue() genruntime.ARMResourceStatus {
	return &arm.Person_STATUS{}
}

// PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
func (person *Person_STATUS) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
	typedInput, ok := armInput.(arm.Person_STATUS)
	if !ok {
		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Person_STATUS, got %T", armInput)
	}

	// Set property "Status":
	person.Status = typedInput.Status

	// No error
	return nil
}

func init() {
	SchemeBuilder.Register(&Person{}, &PersonList{})
}
