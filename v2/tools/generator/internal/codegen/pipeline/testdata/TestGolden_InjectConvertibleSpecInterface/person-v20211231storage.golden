// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20211231storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// Storage version of v20211231.Person
type Person struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Person_Spec   `json:"spec,omitempty"`
	Status            Person_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
// Storage version of v20211231.Person
type PersonList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Person `json:"items"`
}

// Storage version of v20211231.Person_Spec
type Person_Spec struct {
	FullName    *string                `json:"fullName,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Person_Spec{}

// ConvertSpecFrom populates our Person_Spec from the provided source
func (person *Person_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == person {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(person)
}

// ConvertSpecTo populates the provided destination from our Person_Spec
func (person *Person_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == person {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(person)
}

// Storage version of v20211231.Person_Status
type Person_Status struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Status      *string                `json:"status,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Person{}, &PersonList{})
}
