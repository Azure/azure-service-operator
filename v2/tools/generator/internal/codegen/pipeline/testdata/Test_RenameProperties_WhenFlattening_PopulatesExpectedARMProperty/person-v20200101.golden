 // Code generated by azure-service-operator-codegen. DO NOT EDIT.
 // Copyright (c) Microsoft Corporation.
 // Licensed under the MIT license.
 package v20200101
 
 import (
 	"fmt"
 	arm "github.com/Azure/azure-service-operator/testing/person/v20200101/arm"
 	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 )
 
 type Address struct {
 	// City: City or town (or nearest)
 	City string `json:"city,omitempty"`
 
 	// FullAddress: Full written address for map or postal use
 	FullAddress string `json:"fullAddress,omitempty"`
 }
 
 var _ genruntime.ARMTransformer = &Address{}
 
 // ConvertToARM converts from a Kubernetes CRD object to an ARM object
 func (address *Address) ConvertToARM(resolved genruntime.ConvertToARMResolvedDetails) (interface{}, error) {
 	if address == nil {
 		return nil, nil
 	}
 	result := &arm.Address{}
 
 	// Set property "City":
 	result.City = address.City
 
 	// Set property "FullAddress":
 	result.FullAddress = address.FullAddress
 	return result, nil
 }
 
 // NewEmptyARMValue returns an empty ARM value suitable for deserializing into
 func (address *Address) NewEmptyARMValue() genruntime.ARMResourceStatus {
 	return &arm.Address{}
 }
 
 // PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
 func (address *Address) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
 	typedInput, ok := armInput.(arm.Address)
 	if !ok {
 		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Address, got %T", armInput)
 	}
 
 	// Set property "City":
 	address.City = typedInput.City
 
 	// Set property "FullAddress":
 	address.FullAddress = typedInput.FullAddress
 
 	// No error
 	return nil
 }
 
 // +kubebuilder:object:root=true
 // +kubebuilder:subresource:status
 type Person struct {
 	metav1.TypeMeta   `json:",inline"`
 	metav1.ObjectMeta `json:"metadata,omitempty"`
 	Spec              Person_Spec   `json:"spec,omitempty"`
 	Status            Person_STATUS `json:"status,omitempty"`
 }
 
 // +kubebuilder:object:root=true
 type PersonList struct {
 	metav1.TypeMeta `json:",inline"`
 	metav1.ListMeta `json:"metadata,omitempty"`
 	Items           []Person `json:"items"`
 }
 
 // +kubebuilder:validation:Enum={"2020-06-01"}
 type APIVersion string
 
 const APIVersion_apiVersion = APIVersion("2020-06-01")
 
 type Person_Spec struct {
 	// +kubebuilder:validation:Required
 	APIVersion *APIVersion `json:"apiVersion,omitempty"`
 
 	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
 	// doesn't have to be.
 	AzureName string `json:"azureName,omitempty"`
 
 	// City: City or town (or nearest)
 	City *string `json:"city,omitempty"`
 
 	// FamilyName: Shared name of the family
 	FamilyName string `json:"familyName,omitempty"`
 
-	// FullAddress: Full written address for map or postal use
-	FullAddress *string `json:"fullAddress,omitempty"`
-
 	// FullName: As would be used to address mail
 	FullName string `json:"fullName,omitempty"`
 
 	// KnownAs: How the person is generally known
 	KnownAs string `json:"knownAs,omitempty"`
+
+	// PostalAddress: Full written address for map or postal use
+	PostalAddress *string `json:"postaladdress,omitempty"`
 }
 
 var _ genruntime.ARMTransformer = &Person_Spec{}
 
 // ConvertToARM converts from a Kubernetes CRD object to an ARM object
 func (person *Person_Spec) ConvertToARM(resolved genruntime.ConvertToARMResolvedDetails) (interface{}, error) {
 	if person == nil {
 		return nil, nil
 	}
 	result := &arm.Person_Spec{}
 
 	// Set property "APIVersion":
 	if person.APIVersion != nil {
 		var temp string
 		temp = string(*person.APIVersion)
 		apiVersion := arm.APIVersion(temp)
 		result.APIVersion = &apiVersion
 	}
 
 	// Set property "Address":
 	if person.City != nil || person.PostalAddress != nil {
 		result.Address = &arm.Address{}
 	}
 	if person.City != nil {
 		result.Address.City = *person.City
 	}
 	if person.PostalAddress != nil {
 		result.Address.FullAddress = *person.PostalAddress
 	}
 
 	// Set property "FamilyName":
 	result.FamilyName = person.FamilyName
 
 	// Set property "FullName":
 	result.FullName = person.FullName
 
 	// Set property "KnownAs":
 	result.KnownAs = person.KnownAs
 
 	// Set property "Name":
 	result.Name = resolved.Name
 	return result, nil
 }
 
 // NewEmptyARMValue returns an empty ARM value suitable for deserializing into
 func (person *Person_Spec) NewEmptyARMValue() genruntime.ARMResourceStatus {
 	return &arm.Person_Spec{}
 }
 
 // PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
 func (person *Person_Spec) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
 	typedInput, ok := armInput.(arm.Person_Spec)
 	if !ok {
 		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Person_Spec, got %T", armInput)
 	}
 
 	// Set property "APIVersion":
 	if typedInput.APIVersion != nil {
 		var temp string
 		temp = string(*typedInput.APIVersion)
 		apiVersion := APIVersion(temp)
 		person.APIVersion = &apiVersion
 	}
 
 	// Set property "AzureName":
 	person.SetAzureName(genruntime.ExtractKubernetesResourceNameFromARMName(typedInput.Name))
 
 	// Set property "City":
 	// copying flattened property:
 	if typedInput.Address != nil {
 		person.City = &typedInput.Address.City
 	}
 
 	// Set property "FamilyName":
 	person.FamilyName = typedInput.FamilyName
 
 	// Set property "FullName":
 	person.FullName = typedInput.FullName
 
 	// Set property "KnownAs":
 	person.KnownAs = typedInput.KnownAs
 
 	// Set property "PostalAddress":
 	// copying flattened property:
 	if typedInput.Address != nil {
 		person.PostalAddress = &typedInput.Address.FullAddress
 	}
 
 	// No error
 	return nil
 }
 
 type Person_STATUS struct {
 	// FamilyName: Shared name of the family
 	FamilyName string `json:"familyName,omitempty"`
 
 	// FullName: As would be used to address mail
 	FullName string `json:"fullName,omitempty"`
 
 	// KnownAs: How the person is generally known
 	KnownAs string `json:"knownAs,omitempty"`
 
 	// Name: The name of the resource
 	Name string `json:"name,omitempty"`
 
 	// Status: Current status
 	Status string `json:"status,omitempty"`
 }
 
 var _ genruntime.FromARMConverter = &Person_STATUS{}
 
 // NewEmptyARMValue returns an empty ARM value suitable for deserializing into
 func (person *Person_STATUS) NewEmptyARMValue() genruntime.ARMResourceStatus {
 	return &arm.Person_STATUS{}
 }
 
 // PopulateFromARM populates a Kubernetes CRD object from an Azure ARM object
 func (person *Person_STATUS) PopulateFromARM(owner genruntime.ArbitraryOwnerReference, armInput interface{}) error {
 	typedInput, ok := armInput.(arm.Person_STATUS)
 	if !ok {
 		return fmt.Errorf("unexpected type supplied for PopulateFromARM() function. Expected arm.Person_STATUS, got %T", armInput)
 	}
 
 	// Set property "FamilyName":
 	person.FamilyName = typedInput.FamilyName
 
 	// Set property "FullName":
 	person.FullName = typedInput.FullName
 
 	// Set property "KnownAs":
 	person.KnownAs = typedInput.KnownAs
 
 	// Set property "Name":
 	person.Name = typedInput.Name
 
 	// Set property "Status":
 	person.Status = typedInput.Status
 
 	// No error
 	return nil
 }
 
 func init() {
 	SchemeBuilder.Register(&Person{}, &PersonList{})
 }
 
