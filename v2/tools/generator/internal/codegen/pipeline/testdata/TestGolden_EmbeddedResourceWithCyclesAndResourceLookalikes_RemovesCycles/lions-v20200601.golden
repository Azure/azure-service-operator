// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200601

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Lion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Lion_Spec   `json:"spec,omitempty"`
	Status            Lion_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Lion `json:"items"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type LionPride struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LionPride_Spec   `json:"spec,omitempty"`
	Status            LionPride_STATUS `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LionPrideList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LionPride `json:"items"`
}

type Lion_Spec struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string        `json:"name,omitempty"`
	Properties LionProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type Lion_STATUS struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string        `json:"name,omitempty"`
	Properties LionProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type LionPride_Spec struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string             `json:"name,omitempty"`
	Properties LionPrideProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionPrideType `json:"type,omitempty"`
}

type LionPride_STATUS struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string             `json:"name,omitempty"`
	Properties LionPrideProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionPrideType `json:"type,omitempty"`
}

// +kubebuilder:validation:Enum={2020-06-01}
type APIVersion string

const APIVersion_apiVersion = APIVersion(2020-06-01)

type LionPrideProperties struct {
	Hunts int                         `json:"hunts,omitempty"`
	Left  Left_SubResourceEmbedded    `json:"left,omitempty"`
	Right Right_SubResourceEmbedded_1 `json:"right,omitempty"`
}

// +kubebuilder:validation:Enum={Microsoft.Lions/lionPride}
type LionPrideType string

const LionPrideType_type = LionPrideType(Microsoft.Lions/lionPride)

type LionProperties struct {
	Left  Left  `json:"left,omitempty"`
	Right Right `json:"right,omitempty"`
}

// +kubebuilder:validation:Enum={Microsoft.Lions/lion}
type LionType string

const LionType_type = LionType(Microsoft.Lions/lion)

type Left struct {
	// +kubebuilder:validation:Required
	Name       *string `json:"name,omitempty"`
	Properties string  `json:"properties,omitempty"`
	Ref        LionRef `json:"ref,omitempty"`
}

type Left_SubResourceEmbedded struct {
	// +kubebuilder:validation:Required
	Name       *string                     `json:"name,omitempty"`
	Properties string                      `json:"properties,omitempty"`
	Ref        LionRef_SubResourceEmbedded `json:"ref,omitempty"`
}

type Right struct {
	// +kubebuilder:validation:Required
	Name       *string `json:"name,omitempty"`
	Properties string  `json:"properties,omitempty"`
	Ref        LionRef `json:"ref,omitempty"`
}

type Right_SubResourceEmbedded_1 struct {
	// +kubebuilder:validation:Required
	Name       *string                       `json:"name,omitempty"`
	Properties string                        `json:"properties,omitempty"`
	Ref        LionRef_SubResourceEmbedded_1 `json:"ref,omitempty"`
}

type LionRef struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`
	Id         armid       `json:"id,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string        `json:"name,omitempty"`
	Properties LionProperties `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type LionRef_SubResourceEmbedded struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`
	Id         armid       `json:"id,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string                            `json:"name,omitempty"`
	Properties LionProperties_SubResourceEmbedded `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type LionRef_SubResourceEmbedded_1 struct {
	// +kubebuilder:validation:Required
	APIVersion *APIVersion `json:"apiVersion,omitempty"`
	Id         armid       `json:"id,omitempty"`

	// +kubebuilder:validation:Required
	Name       *string                              `json:"name,omitempty"`
	Properties LionProperties_SubResourceEmbedded_1 `json:"properties,omitempty"`

	// +kubebuilder:validation:Required
	Type *LionType `json:"type,omitempty"`
}

type LionProperties_SubResourceEmbedded struct {
	Right Right_SubResourceEmbedded `json:"right,omitempty"`
}

type LionProperties_SubResourceEmbedded_1 struct {
	Left Left_SubResourceEmbedded_1 `json:"left,omitempty"`
}

type Left_SubResourceEmbedded_1 struct {
	// +kubebuilder:validation:Required
	Name       *string `json:"name,omitempty"`
	Properties string  `json:"properties,omitempty"`
}

type Right_SubResourceEmbedded struct {
	// +kubebuilder:validation:Required
	Name       *string `json:"name,omitempty"`
	Properties string  `json:"properties,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Lion{}, &LionList{}, &LionPride{}, &LionPrideList{})
}
