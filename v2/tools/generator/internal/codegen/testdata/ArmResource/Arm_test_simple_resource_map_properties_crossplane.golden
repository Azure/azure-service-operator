// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.azure.com,resources=fakeresources,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={fakeresources/status,fakeresources/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FakeResource_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FakeResource `json:"items"`
}

// +kubebuilder:validation:Enum={"2020-01-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2020-01-01")

type FakeResource_Spec struct {
	v1.ResourceSpec `json:",inline,omitempty"`
	ForProvider     FakeResourceParameters `json:"forProvider,omitempty"`
}

type FakeResourceParameters struct {
	// +kubebuilder:validation:Required
	APIVersion FakeResource_APIVersion_Spec `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	MapFoo                   map[string]Foo                          `json:"mapFoo,omitempty"`
	MapOfArrays              map[string][]Foo                        `json:"mapOfArrays,omitempty"`
	MapOfEnums               map[string]Color                        `json:"mapOfEnums,omitempty"`
	MapOfMaps                map[string]map[string]Foo               `json:"mapOfMaps,omitempty"`
	MapOfMapsOfMaps          map[string]map[string]map[string]Foo    `json:"mapOfMapsOfMaps,omitempty"`
	MapOfMapsOfMapsOfStrings map[string]map[string]map[string]string `json:"mapOfMapsOfMapsOfStrings,omitempty"`
	MapOfStrings             map[string]string                       `json:"mapOfStrings,omitempty"`

	// +kubebuilder:validation:Required
	Name                      string        `json:"name,omitempty"`
	ResourceGroupName         string        `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type FakeResource_Type_Spec `json:"type,omitempty"`
}

// Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/Color
// +kubebuilder:validation:Enum={"blue","green","red"}
type Color string

const (
	Color_Blue  = Color("blue")
	Color_Green = Color("green")
	Color_Red   = Color("red")
)

// +kubebuilder:validation:Enum={"2020-06-01"}
type FakeResource_APIVersion_Spec string

const FakeResource_APIVersion_Spec_20200601 = FakeResource_APIVersion_Spec("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/FakeResource"}
type FakeResource_Type_Spec string

const FakeResource_Type_Spec_MicrosoftAzureFakeResource = FakeResource_Type_Spec("Microsoft.Azure/FakeResource")

// Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/Foo
type Foo struct {
	FooName *string `json:"fooName,omitempty"`
}

func init() {
	SchemeBuilder.Register(&FakeResource{}, &FakeResourceList{})
}
