// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.azure.com,resources=fakeresources,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={fakeresources/status,fakeresources/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FakeResource_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/FakeResource
type FakeResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FakeResource `json:"items"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type APIVersion string

const APIVersionValue = APIVersion("2020-06-01")

type FakeResource_Spec struct {
	v1alpha1.ResourceSpec `json:",inline,omitempty"`
	ForProvider           FakeResourceParameters `json:"forProvider,omitempty"`
}

type FakeResourceParameters struct {
	// +kubebuilder:validation:Required
	Name                      string                  `json:"name,omitempty"`
	Properties                *FakeResourceProperties `json:"properties,omitempty"`
	ResourceGroupName         string                  `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1alpha1.Reference     `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector      `json:"resourceGroupNameSelector,omitempty"`
}

// Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/FakeResourceProperties
type FakeResourceProperties struct {
	// Id: A string of the form
	// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}
	Id *string `json:"id,omitempty"`

	// NsgIds: A collection of NSG IDs of the form
	// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/networkSecurityGroups/{nsgName}
	NsgIds []string `json:"nsgIds,omitempty"`

	// NsgMap: A map of NSG IDs of the form
	// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/networkSecurityGroups/{nsgName}
	NsgMap map[string]string `json:"nsgMap,omitempty"`

	// SubnetId: A string of the form
	// /SUBSCRIPTIONS/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}
	SubnetId *string `json:"subnetId,omitempty"`
}

func init() {
	SchemeBuilder.Register(&FakeResource{}, &FakeResourceList{})
}
