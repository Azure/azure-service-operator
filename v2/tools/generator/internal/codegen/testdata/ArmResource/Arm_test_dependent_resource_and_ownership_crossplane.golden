// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.azure.com,resources=as,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={as/status,as/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type A struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              A_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type AList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []A `json:"items"`
}

// +kubebuilder:rbac:groups=test.azure.com,resources=bs,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={bs/status,bs/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/B
type B struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              B_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/B
type BList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []B `json:"items"`
}

// +kubebuilder:rbac:groups=test.azure.com,resources=cs,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={cs/status,cs/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/C
type C struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              C_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/C
type CList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []C `json:"items"`
}

// +kubebuilder:rbac:groups=test.azure.com,resources=ds,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={ds/status,ds/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/D
type D struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              D_Spec `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
// Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/D
type DList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []D `json:"items"`
}

type A_Spec struct {
	v1.ResourceSpec `json:",inline,omitempty"`
	ForProvider     AParameters `json:"forProvider,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-01-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2020-01-01")

type B_Spec struct {
	v1.ResourceSpec `json:",inline,omitempty"`
	ForProvider     BParameters `json:"forProvider,omitempty"`
}

type C_Spec struct {
	v1.ResourceSpec `json:",inline,omitempty"`
	ForProvider     CParameters `json:"forProvider,omitempty"`
}

type D_Spec struct {
	v1.ResourceSpec `json:",inline,omitempty"`
	ForProvider     DParameters `json:"forProvider,omitempty"`
}

type AParameters struct {
	// +kubebuilder:validation:Required
	APIVersion A_APIVersion_Spec `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name                      string        `json:"name,omitempty"`
	ResourceGroupName         string        `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type A_Type_Spec `json:"type,omitempty"`
}

type BParameters struct {
	// +kubebuilder:validation:Required
	APIVersion B_APIVersion_Spec `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name                      string        `json:"name,omitempty"`
	ResourceGroupName         string        `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type B_Type_Spec `json:"type,omitempty"`
}

type CParameters struct {
	// +kubebuilder:validation:Required
	APIVersion C_APIVersion_Spec `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name                      string        `json:"name,omitempty"`
	ResourceGroupName         string        `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type C_Type_Spec `json:"type,omitempty"`
}

type DParameters struct {
	// +kubebuilder:validation:Required
	APIVersion D_APIVersion_Spec `json:"apiVersion,omitempty"`

	// +kubebuilder:validation:Required
	Name                      string        `json:"name,omitempty"`
	ResourceGroupName         string        `json:"resourceGroupName,omitempty"`
	ResourceGroupNameRef      *v1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type D_Type_Spec `json:"type,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type A_APIVersion_Spec string

const A_APIVersion_Spec_20200601 = A_APIVersion_Spec("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/A"}
type A_Type_Spec string

const A_Type_Spec_MicrosoftAzureA = A_Type_Spec("Microsoft.Azure/A")

// +kubebuilder:validation:Enum={"2020-06-01"}
type B_APIVersion_Spec string

const B_APIVersion_Spec_20200601 = B_APIVersion_Spec("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/B"}
type B_Type_Spec string

const B_Type_Spec_MicrosoftAzureB = B_Type_Spec("Microsoft.Azure/B")

// +kubebuilder:validation:Enum={"2020-06-01"}
type C_APIVersion_Spec string

const C_APIVersion_Spec_20200601 = C_APIVersion_Spec("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/C"}
type C_Type_Spec string

const C_Type_Spec_MicrosoftAzureC = C_Type_Spec("Microsoft.Azure/C")

// +kubebuilder:validation:Enum={"2020-06-01"}
type D_APIVersion_Spec string

const D_APIVersion_Spec_20200601 = D_APIVersion_Spec("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/D"}
type D_Type_Spec string

const D_Type_Spec_MicrosoftAzureD = D_Type_Spec("Microsoft.Azure/D")

func init() {
	SchemeBuilder.Register(&A{}, &AList{}, &B{}, &BList{}, &C{}, &CList{}, &D{}, &DList{})
}
