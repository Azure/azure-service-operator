// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20200101

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:rbac:groups=test.azure.com,resources=as,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={as/status,as/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type A struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              A_SPEC `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/A
type AList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []A `json:"items"`
}

// +kubebuilder:rbac:groups=test.azure.com,resources=bs,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=test.azure.com,resources={bs/status,bs/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/B
type B struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              B_SPEC `json:"spec,omitempty"`
}

// +kubebuilder:object:root=true
//Generated from: https://test.test/schemas/2020-01-01/test.json#/resourceDefinitions/B
type BList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []B `json:"items"`
}

// +kubebuilder:validation:Enum={placeholder for golden tests}
type APIVersion string

const APIVersionAPIVersionValue = APIVersion(placeholder for golden tests)

type A_SPEC struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           AParameters `json:"forProvider"`
}

type B_SPEC struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           BParameters `json:"forProvider"`
}

type AParameters struct {
	// +kubebuilder:validation:Required
	APIVersion A_APIVersion_SPEC `json:"apiVersion"`

	// +kubebuilder:validation:Required
	Name                      string              `json:"name"`
	Properties                *AProperties        `json:"properties,omitempty"`
	ResourceGroupName         string              `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type A_Type_SPEC `json:"type"`
}

type BParameters struct {
	AName         string              `json:"aName"`
	ANameRef      *v1alpha1.Reference `json:"aNameRef,omitempty"`
	ANameSelector *v1alpha1.Selector  `json:"aNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	APIVersion B_APIVersion_SPEC `json:"apiVersion"`

	// +kubebuilder:validation:Required
	Name                      string              `json:"name"`
	Properties                *BProperties        `json:"properties,omitempty"`
	ResourceGroupName         string              `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector  `json:"resourceGroupNameSelector,omitempty"`

	// +kubebuilder:validation:Required
	Type B_Type_SPEC `json:"type"`
}

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/AProperties
type AProperties struct {
	IntField    *int       `json:"intField,omitempty"`
	RefField    *BResource `json:"refField,omitempty"`
	StringField *string    `json:"stringField,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type A_APIVersion_SPEC string

const A_APIVersion_SPEC20200601 = A_APIVersion_SPEC("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/A"}
type A_Type_SPEC string

const A_Type_SPECMicrosoftAzureA = A_Type_SPEC("Microsoft.Azure/A")

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/BProperties
type BProperties struct {
	EnumField *BProperties_EnumField `json:"enumField,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-06-01"}
type B_APIVersion_SPEC string

const B_APIVersion_SPEC20200601 = B_APIVersion_SPEC("2020-06-01")

// +kubebuilder:validation:Enum={"Microsoft.Azure/B"}
type B_Type_SPEC string

const B_Type_SPECMicrosoftAzureB = B_Type_SPEC("Microsoft.Azure/B")

// +kubebuilder:validation:Enum={"Qux"}
type BProperties_EnumField string

const BProperties_EnumFieldQux = BProperties_EnumField("Qux")

//Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/BResource
type BResource struct {
	Location   *string      `json:"location,omitempty"`
	Name       *string      `json:"name,omitempty"`
	Properties *BProperties `json:"properties,omitempty"`
}

func init() {
	SchemeBuilder.Register(&A{}, &AList{}, &B{}, &BList{})
}
