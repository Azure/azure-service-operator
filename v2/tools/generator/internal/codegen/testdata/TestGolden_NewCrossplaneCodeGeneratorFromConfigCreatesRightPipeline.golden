Expected Pipeline Stages for ARM Code Generation
------------------------------------------------
loadTypesFromSwagger                               Load all types from Swagger files
simplifySwaggerNames                               Remove redundant components from Swagger names
allof-anyof-objects                                Convert allOf and oneOf to object types
stripUnreferenced                                  Strip unreferenced types
flattenResources                                   Flatten nested resource types
stripUnreferenced                                  Strip unreferenced types
makeStatusPropertiesOptional                       Force all status properties to be optional
removeStatusPropertyValidation                     Remove validation from all status properties
removeAliases                                      Remove type aliases
stripUnreferenced                                  Strip unreferenced types
nameTypes                                          Name inner types for CRD
removeAliases                                      Remove type aliases
identifySubResources                               Replace sub-resources with references
propertyRewrites                                   Modify property types using configured transforms
removeResourceScope                                Remove scope from all resources
unrollRecursiveTypes                               Unroll directly recursive types since they are not supported by controller-gen
removeAliases                                      Remove type aliases
determineResourceOwnership                         Determine ARM resource relationships
collapseCrossGroupReferences                       Find and remove cross group references
stripUnreferenced                                  Strip unreferenced types
assertTypesStructureValid                          Verify that all local TypeNames refer to a type
filterTypes                                        Apply export filters to reduce the number of generated types
verifyNoErroredTypes                               Verify there are no ErroredType's containing errors
stripUnreferenced                                  Strip unreferenced types
replaceAnyTypeWithJSON                             Replace properties using interface{} with arbitrary JSON
flattenProperties                                  Apply flattening to properties marked for flattening
stripUnreferenced                                  Strip unreferenced types
addCrossplaneOwnerProperties            crossplane Add the 3-tuple of (xName, xNameRef, xNameSelector) for each owning resource
addCrossplaneForProviderProperty        crossplane Add a 'ForProvider' property on every spec
addCrossplaneAtProviderProperty         crossplane Add an 'AtProvider' property on every status
addCrossplaneEmbeddedResourceSpec       crossplane Add an embedded runtimev1alpha1.ResourceSpec to every spec type
addCrossplaneEmbeddedResourceStatus     crossplane Add an embedded runtimev1alpha1.ResourceStatus to every status type
markStorageVersion                      crossplane Mark the latest API version of each resource as the storage version
simplifyDefinitions                                Flatten definitions by removing wrapper types
rogueCheck                                         Check for rogue definitions using AnyTypes
deleteGenerated                                    Delete generated code from .
exportPackages                                     Export packages to "."
reportResourceVersions                             Generate a report listing all the resources generated
