// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20200101

import (
	v20200101s "github.com/Azure/azure-service-operator/testing/test/v1api20200101/storage"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

// Generated from: https://test.test/schemas/2020-01-01/test.json
type Test struct {
	AdditionalProperties map[string]bool `json:"additionalProperties,omitempty"`

	// +kubebuilder:validation:Required
	Size *int `json:"size,omitempty"`
}

// AssignProperties_From_Test populates our Test from the provided source Test
func (test *Test) AssignProperties_From_Test(source *v20200101s.Test) error {

	// AdditionalProperties
	if source.AdditionalProperties != nil {
		additionalPropertyMap := make(map[string]bool, len(source.AdditionalProperties))
		for additionalPropertyKey, additionalPropertyValue := range source.AdditionalProperties {
			// Shadow the loop variable to avoid aliasing
			additionalPropertyValue := additionalPropertyValue
			additionalPropertyMap[additionalPropertyKey] = additionalPropertyValue
		}
		test.AdditionalProperties = additionalPropertyMap
	} else {
		test.AdditionalProperties = nil
	}

	// Size
	test.Size = genruntime.ClonePointerToInt(source.Size)

	// No error
	return nil
}

// AssignProperties_To_Test populates the provided destination Test from our Test
func (test *Test) AssignProperties_To_Test(destination *v20200101s.Test) error {
	// Create a new property bag
	propertyBag := genruntime.NewPropertyBag()

	// AdditionalProperties
	if test.AdditionalProperties != nil {
		additionalPropertyMap := make(map[string]bool, len(test.AdditionalProperties))
		for additionalPropertyKey, additionalPropertyValue := range test.AdditionalProperties {
			// Shadow the loop variable to avoid aliasing
			additionalPropertyValue := additionalPropertyValue
			additionalPropertyMap[additionalPropertyKey] = additionalPropertyValue
		}
		destination.AdditionalProperties = additionalPropertyMap
	} else {
		destination.AdditionalProperties = nil
	}

	// Size
	destination.Size = genruntime.ClonePointerToInt(test.Size)

	// Update the property bag
	if len(propertyBag) > 0 {
		destination.PropertyBag = propertyBag
	} else {
		destination.PropertyBag = nil
	}

	// No error
	return nil
}
