// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200101

import (
	"github.com/Azure/azure-service-operator/testing/test/v1beta20200101storage"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

//Generated from: https://test.test/schemas/2020-01-01/test.json
type Test struct {
	// +kubebuilder:validation:Required
	Enabled *bool   `json:"enabled,omitempty"`
	Name    *string `json:"name,omitempty"`

	// +kubebuilder:validation:Required
	Size *int `json:"size,omitempty"`
}

// AssignPropertiesFromTest populates our Test from the provided source Test
func (test *Test) AssignPropertiesFromTest(source *v1beta20200101storage.Test) error {

	// Enabled
	if source.Enabled != nil {
		enabled := *source.Enabled
		test.Enabled = &enabled
	} else {
		test.Enabled = nil
	}

	// Name
	test.Name = genruntime.ClonePointerToString(source.Name)

	// Size
	test.Size = genruntime.ClonePointerToInt(source.Size)

	// No error
	return nil
}

// AssignPropertiesToTest populates the provided destination Test from our Test
func (test *Test) AssignPropertiesToTest(destination *v1beta20200101storage.Test) error {
	// Create a new property bag
	propertyBag := genruntime.NewPropertyBag()

	// Enabled
	if test.Enabled != nil {
		enabled := *test.Enabled
		destination.Enabled = &enabled
	} else {
		destination.Enabled = nil
	}

	// Name
	destination.Name = genruntime.ClonePointerToString(test.Name)

	// Size
	destination.Size = genruntime.ClonePointerToInt(test.Size)

	// Update the property bag
	if len(propertyBag) > 0 {
		destination.PropertyBag = propertyBag
	} else {
		destination.PropertyBag = nil
	}

	// No error
	return nil
}
