// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200101

import (
	v20200101s "github.com/Azure/azure-service-operator/testing/test/v1beta20200101storage"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

// Generated from: https://test.test/schemas/2020-01-01/test.json
type Test struct {
	// +kubebuilder:validation:Required
	Ducks []Test_Ducks `json:"ducks,omitempty"`
}

// AssignPropertiesFromTest populates our Test from the provided source Test
func (test *Test) AssignPropertiesFromTest(source *v20200101s.Test) error {

	// Ducks
	if source.Ducks != nil {
		duckList := make([]Test_Ducks, len(source.Ducks))
		for duckIndex, duckItem := range source.Ducks {
			// Shadow the loop variable to avoid aliasing
			duckItem := duckItem
			duckList[duckIndex] = Test_Ducks(duckItem)
		}
		test.Ducks = duckList
	} else {
		test.Ducks = nil
	}

	// No error
	return nil
}

// AssignPropertiesToTest populates the provided destination Test from our Test
func (test *Test) AssignPropertiesToTest(destination *v20200101s.Test) error {
	// Create a new property bag
	propertyBag := genruntime.NewPropertyBag()

	// Ducks
	if test.Ducks != nil {
		duckList := make([]string, len(test.Ducks))
		for duckIndex, duckItem := range test.Ducks {
			// Shadow the loop variable to avoid aliasing
			duckItem := duckItem
			duckList[duckIndex] = string(duckItem)
		}
		destination.Ducks = duckList
	} else {
		destination.Ducks = nil
	}

	// Update the property bag
	if len(propertyBag) > 0 {
		destination.PropertyBag = propertyBag
	} else {
		destination.PropertyBag = nil
	}

	// No error
	return nil
}

// +kubebuilder:validation:MaxLength=20
// +kubebuilder:validation:MinLength=10
// +kubebuilder:validation:Pattern="^[a-z]+$"
type Test_Ducks string
