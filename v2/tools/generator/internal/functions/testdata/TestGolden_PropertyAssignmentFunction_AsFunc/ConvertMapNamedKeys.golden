// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vCurrent

import (
	"github.com/Azure/azure-service-operator/testing/Verification/vNext"
	"github.com/pkg/errors"
)

type Person struct {
	Keys map[string]Release `json:"keys"`
}

// AssignPropertiesFromPerson populates our Person from the provided source Person
func (person *Person) AssignPropertiesFromPerson(source *vNext.Person) error {

	// Keys
	if source.Keys != nil {
		keyMap := make(map[string]Release, len(source.Keys))
		for key, keyValue := range source.Keys {
			// Shadow the loop variable to avoid aliasing
			keyValue := keyValue
			var keyLocal Release
			err := keyLocal.AssignPropertiesFromRelease(&keyValue)
			if err != nil {
				return errors.Wrap(err, "populating Keys from Keys, calling AssignPropertiesFromRelease()")
			}
			keyMap[key] = keyLocal
		}
		person.Keys = keyMap
	} else {
		person.Keys = nil
	}

	// No error
	return nil
}

// AssignPropertiesToPerson populates the provided destination Person from our Person
func (person *Person) AssignPropertiesToPerson(destination *vNext.Person) error {

	// Keys
	if person.Keys != nil {
		keyMap := make(map[string]vNext.Release, len(person.Keys))
		for key, keyValue := range person.Keys {
			// Shadow the loop variable to avoid aliasing
			keyValue := keyValue
			var keyLocal vNext.Release
			err := keyValue.AssignPropertiesToRelease(&keyLocal)
			if err != nil {
				return errors.Wrap(err, "populating Keys from Keys, calling AssignPropertiesToRelease()")
			}
			keyMap[key] = keyLocal
		}
		destination.Keys = keyMap
	} else {
		destination.Keys = nil
	}

	// No error
	return nil
}
