// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vCurrent

import (
	verification "github.com/Azure/azure-service-operator/testing/verification/vNext"
	"github.com/pkg/errors"
)

type Person struct {
	Indexes []Release `json:"indexes"`
}

// AssignPropertiesFromPerson populates our Person from the provided source Person
func (person *Person) AssignPropertiesFromPerson(source *verification.Person) error {

	// Indexes
	if source.Indexes != nil {
		indexList := make([]Release, len(source.Indexes))
		for index, indexItem := range source.Indexes {
			// Shadow the loop variable to avoid aliasing
			indexItem := indexItem
			var indexLocal Release
			err := indexLocal.AssignPropertiesFromRelease(&indexItem)
			if err != nil {
				return errors.Wrap(err, "calling AssignPropertiesFromRelease() to populate field Indexes")
			}
			indexList[index] = indexLocal
		}
		person.Indexes = indexList
	} else {
		person.Indexes = nil
	}

	// No error
	return nil
}

// AssignPropertiesToPerson populates the provided destination Person from our Person
func (person *Person) AssignPropertiesToPerson(destination *verification.Person) error {

	// Indexes
	if person.Indexes != nil {
		indexList := make([]verification.Release, len(person.Indexes))
		for index, indexItem := range person.Indexes {
			// Shadow the loop variable to avoid aliasing
			indexItem := indexItem
			var indexLocal verification.Release
			err := indexItem.AssignPropertiesToRelease(&indexLocal)
			if err != nil {
				return errors.Wrap(err, "calling AssignPropertiesToRelease() to populate field Indexes")
			}
			indexList[index] = indexLocal
		}
		destination.Indexes = indexList
	} else {
		destination.Indexes = nil
	}

	// No error
	return nil
}
