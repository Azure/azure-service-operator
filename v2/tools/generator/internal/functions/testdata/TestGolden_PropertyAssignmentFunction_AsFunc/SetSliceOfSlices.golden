// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vcurrent

import vnext "github.com/Azure/azure-service-operator/testing/verification/vnext"

type Person struct {
	Items [][]int `json:"items,omitempty"`
}

// AssignProperties_From_Person populates our Person from the provided source Person
func (person *Person) AssignProperties_From_Person(source *vnext.Person) error {

	// Items
	if source.Items != nil {
		itemList := make([][]int, len(source.Items))
		for itemIndex, item := range source.Items {
			// Shadow the loop variable to avoid aliasing
			item := item
			if item != nil {
				itemList1 := make([]int, len(item))
				for itemIndex1, item1 := range item {
					// Shadow the loop variable to avoid aliasing
					item1 := item1
					itemList1[itemIndex1] = item1
				}
				itemList[itemIndex] = itemList1
			} else {
				itemList[itemIndex] = nil
			}
		}
		person.Items = itemList
	} else {
		person.Items = nil
	}

	// No error
	return nil
}

// AssignProperties_To_Person populates the provided destination Person from our Person
func (person *Person) AssignProperties_To_Person(destination *vnext.Person) error {

	// Items
	if person.Items != nil {
		itemList := make([][]int, len(person.Items))
		for itemIndex, item := range person.Items {
			// Shadow the loop variable to avoid aliasing
			item := item
			if item != nil {
				itemList1 := make([]int, len(item))
				for itemIndex1, item1 := range item {
					// Shadow the loop variable to avoid aliasing
					item1 := item1
					itemList1[itemIndex1] = item1
				}
				itemList[itemIndex] = itemList1
			} else {
				itemList[itemIndex] = nil
			}
		}
		destination.Items = itemList
	} else {
		destination.Items = nil
	}

	// No error
	return nil
}
