// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vcurrent

import (
	verification "github.com/Azure/azure-service-operator/testing/verification/vnext"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

type Person struct {
	JSONObject map[string]v1.JSON `json:"jsonObject,omitempty"`
}

// AssignPropertiesFromPerson populates our Person from the provided source Person
func (person *Person) AssignPropertiesFromPerson(source *verification.Person) error {

	// JSONObject
	if source.JSONObject != nil {
		jsonObjectMap := make(map[string]v1.JSON, len(source.JSONObject))
		for jsonObjectKey, jsonObjectValue := range source.JSONObject {
			// Shadow the loop variable to avoid aliasing
			jsonObjectValue := jsonObjectValue
			jsonObjectMap[jsonObjectKey] = *jsonObjectValue.DeepCopy()
		}
		person.JSONObject = jsonObjectMap
	} else {
		person.JSONObject = nil
	}

	// No error
	return nil
}

// AssignPropertiesToPerson populates the provided destination Person from our Person
func (person *Person) AssignPropertiesToPerson(destination *verification.Person) error {

	// JSONObject
	if person.JSONObject != nil {
		jsonObjectMap := make(map[string]v1.JSON, len(person.JSONObject))
		for jsonObjectKey, jsonObjectValue := range person.JSONObject {
			// Shadow the loop variable to avoid aliasing
			jsonObjectValue := jsonObjectValue
			jsonObjectMap[jsonObjectKey] = *jsonObjectValue.DeepCopy()
		}
		destination.JSONObject = jsonObjectMap
	} else {
		destination.JSONObject = nil
	}

	// No error
	return nil
}
