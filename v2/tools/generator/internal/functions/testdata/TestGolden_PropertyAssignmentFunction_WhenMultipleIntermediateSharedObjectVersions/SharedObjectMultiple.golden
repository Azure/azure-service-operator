// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import (
	v20210301 "github.com/Azure/azure-service-operator/testing/person/v20210301"
	v20210306 "github.com/Azure/azure-service-operator/testing/person/v20210306"
	v20210312 "github.com/Azure/azure-service-operator/testing/person/v20210312"
	v20220630 "github.com/Azure/azure-service-operator/testing/person/v20220630"
	"github.com/pkg/errors"
)

type Person struct {
	Residence Location `json:"residence,omitempty"`
}

// AssignProperties_From_Person populates our Person from the provided source Person
func (person *Person) AssignProperties_From_Person(source *v20220630.Person) error {

	// Residence
	var locationStash v20210312.Location
	err := locationStash.AssignProperties_From_Location(&source.Residence)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_From_Location() to populate field LocationStash from Residence")
	}
	var locationStashLocal v20210306.Location
	err = locationStashLocal.AssignProperties_From_Location(&locationStash)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_From_Location() to populate field LocationStash")
	}
	var locationStashCopy v20210301.Location
	err = locationStashCopy.AssignProperties_From_Location(&locationStashLocal)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_From_Location() to populate field LocationStash")
	}
	var residence Location
	err = residence.AssignProperties_From_Location(&locationStashCopy)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_From_Location() to populate field Residence from LocationStash")
	}
	person.Residence = residence

	// No error
	return nil
}

// AssignProperties_To_Person populates the provided destination Person from our Person
func (person *Person) AssignProperties_To_Person(destination *v20220630.Person) error {

	// Residence
	var locationStash v20210301.Location
	err := person.Residence.AssignProperties_To_Location(&locationStash)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_To_Location() to populate field LocationStash from Residence")
	}
	var locationStashLocal v20210306.Location
	err = locationStash.AssignProperties_To_Location(&locationStashLocal)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_To_Location() to populate field LocationStash")
	}
	var locationStashCopy v20210312.Location
	err = locationStashLocal.AssignProperties_To_Location(&locationStashCopy)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_To_Location() to populate field LocationStash")
	}
	var residence v20220630.Location
	err = locationStashCopy.AssignProperties_To_Location(&residence)
	if err != nil {
		return errors.Wrap(err, "calling AssignProperties_To_Location() to populate field Residence from LocationStash")
	}
	destination.Residence = residence

	// No error
	return nil
}
