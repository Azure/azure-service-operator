
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: namespaces.microsoft.servicebus.azure.com
spec:
  group: microsoft.servicebus.azure.com
  names:
    kind: Namespace
    listKind: NamespaceList
    plural: namespaces
    singular: namespace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20210101preview
    schema:
      openAPIV3Schema:
        description: 'Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                type: string
              encryption:
                description: 'Encryption: Properties to configure Encryption'
                properties:
                  keySource:
                    description: 'KeySource: Enumerates the possible value of keySource for Encryption.'
                    enum:
                    - Microsoft.KeyVault
                    type: string
                  keyVaultProperties:
                    description: 'KeyVaultProperties: Properties of KeyVault'
                    items:
                      description: 'Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/KeyVaultProperties'
                      properties:
                        identity:
                          description: 'Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/UserAssignedIdentityProperties'
                          properties:
                            userAssignedIdentityReference:
                              description: 'UserAssignedIdentityReference: ARM ID of user Identity selected for encryption'
                              properties:
                                armId:
                                  description: 'TODO: The below regex may be overly restrictive ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. ARMID is mutually exclusive with Group, Kind, Namespace and Name.'
                                  pattern: (?i)^/subscriptions/([^/]+)/resourcegroups/([^/]+)/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))+$
                                  type: string
                                group:
                                  description: Group is the Kubernetes group of the resource.
                                  type: string
                                kind:
                                  description: Kind is the Kubernetes kind of the resource.
                                  type: string
                                name:
                                  description: Name is the Kubernetes name of the resource.
                                  type: string
                                namespace:
                                  description: Namespace is the Kubernetes namespace of the resource.
                                  type: string
                              type: object
                          type: object
                        keyName:
                          description: 'KeyName: Name of the Key from KeyVault'
                          type: string
                        keyVaultUri:
                          description: 'KeyVaultUri: Uri of KeyVault'
                          type: string
                        keyVersion:
                          description: 'KeyVersion: Version of KeyVault'
                          type: string
                      type: object
                    type: array
                  requireInfrastructureEncryption:
                    description: 'RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)'
                    type: boolean
                type: object
              identity:
                description: 'Identity: Properties to configure User Assigned Identities for Bring your Own Keys'
                properties:
                  type:
                    description: 'Type: Type of managed service identity.'
                    enum:
                    - None
                    - SystemAssigned
                    - SystemAssigned, UserAssigned
                    - UserAssigned
                    type: string
                type: object
              location:
                description: 'Location: Location to deploy resource to'
                type: string
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              sku:
                description: 'Sku: SKU of the namespace.'
                properties:
                  capacity:
                    description: 'Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.'
                    type: integer
                  name:
                    description: 'Name: Name of this SKU.'
                    enum:
                    - Basic
                    - Premium
                    - Standard
                    type: string
                  tier:
                    description: 'Tier: The billing tier of this particular SKU.'
                    enum:
                    - Basic
                    - Premium
                    - Standard
                    type: string
                required:
                - name
                type: object
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: Name-value pairs to add to the resource'
                type: object
              zoneRedundant:
                description: 'ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.'
                type: boolean
            required:
            - owner
            type: object
          status:
            description: 'Generated from:'
            properties:
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: 'CreatedAt: The time the namespace was created'
                type: string
              encryption:
                description: 'Encryption: Properties of BYOK Encryption description'
                properties:
                  keySource:
                    description: 'KeySource: Enumerates the possible value of keySource for Encryption'
                    enum:
                    - Microsoft.KeyVault
                    type: string
                  keyVaultProperties:
                    description: 'KeyVaultProperties: Properties of KeyVault'
                    items:
                      description: 'Generated from:'
                      properties:
                        identity:
                          description: 'Generated from:'
                          properties:
                            userAssignedIdentity:
                              description: 'UserAssignedIdentity: ARM ID of user Identity selected for encryption'
                              type: string
                          type: object
                        keyName:
                          description: 'KeyName: Name of the Key from KeyVault'
                          type: string
                        keyVaultUri:
                          description: 'KeyVaultUri: Uri of KeyVault'
                          type: string
                        keyVersion:
                          description: 'KeyVersion: Version of KeyVault'
                          type: string
                      type: object
                    type: array
                  requireInfrastructureEncryption:
                    description: 'RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)'
                    type: boolean
                type: object
              id:
                description: 'Id: Resource Id'
                type: string
              identity:
                description: 'Identity: Properties of BYOK Identity description'
                properties:
                  principalId:
                    description: 'PrincipalId: ObjectId from the KeyVault'
                    type: string
                  tenantId:
                    description: 'TenantId: TenantId from the KeyVault'
                    type: string
                  type:
                    description: 'Type: Type of managed service identity.'
                    enum:
                    - None
                    - SystemAssigned
                    - SystemAssigned, UserAssigned
                    - UserAssigned
                    type: string
                  userAssignedIdentities:
                    additionalProperties:
                      description: 'Generated from:'
                      properties:
                        clientId:
                          description: 'ClientId: Client Id of user assigned identity'
                          type: string
                        principalId:
                          description: 'PrincipalId: Principal Id of user assigned identity'
                          type: string
                      type: object
                    description: 'UserAssignedIdentities: Properties for User Assigned Identities'
                    type: object
                type: object
              location:
                description: 'Location: The Geo-location where the resource lives'
                type: string
              metricId:
                description: 'MetricId: Identifier for Azure Insights metrics'
                type: string
              name:
                description: 'Name: Resource name'
                type: string
              privateEndpointConnections:
                description: 'PrivateEndpointConnections: List of private endpoint connections.'
                items:
                  description: 'Generated from:'
                  properties:
                    id:
                      description: 'Id: Resource Id'
                      type: string
                    systemData:
                      description: 'SystemData: The system meta data relating to this resource.'
                      properties:
                        createdAt:
                          description: 'CreatedAt: The timestamp of resource creation (UTC).'
                          type: string
                        createdBy:
                          description: 'CreatedBy: The identity that created the resource.'
                          type: string
                        createdByType:
                          description: 'CreatedByType: The type of identity that created the resource.'
                          enum:
                          - Application
                          - Key
                          - ManagedIdentity
                          - User
                          type: string
                        lastModifiedAt:
                          description: 'LastModifiedAt: The type of identity that last modified the resource.'
                          type: string
                        lastModifiedBy:
                          description: 'LastModifiedBy: The identity that last modified the resource.'
                          type: string
                        lastModifiedByType:
                          description: 'LastModifiedByType: The type of identity that last modified the resource.'
                          enum:
                          - Application
                          - Key
                          - ManagedIdentity
                          - User
                          type: string
                      type: object
                  type: object
                type: array
              provisioningState:
                description: 'ProvisioningState: Provisioning state of the namespace.'
                type: string
              serviceBusEndpoint:
                description: 'ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.'
                type: string
              sku:
                description: 'Sku: Properties of SKU'
                properties:
                  capacity:
                    description: 'Capacity: The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.'
                    type: integer
                  name:
                    description: 'Name: Name of this SKU.'
                    enum:
                    - Basic
                    - Premium
                    - Standard
                    type: string
                  tier:
                    description: 'Tier: The billing tier of this particular SKU.'
                    enum:
                    - Basic
                    - Premium
                    - Standard
                    type: string
                required:
                - name
                type: object
              status:
                description: 'Status: Status of the namespace.'
                type: string
              systemData:
                description: 'SystemData: The system meta data relating to this resource.'
                properties:
                  createdAt:
                    description: 'CreatedAt: The timestamp of resource creation (UTC).'
                    type: string
                  createdBy:
                    description: 'CreatedBy: The identity that created the resource.'
                    type: string
                  createdByType:
                    description: 'CreatedByType: The type of identity that created the resource.'
                    enum:
                    - Application
                    - Key
                    - ManagedIdentity
                    - User
                    type: string
                  lastModifiedAt:
                    description: 'LastModifiedAt: The type of identity that last modified the resource.'
                    type: string
                  lastModifiedBy:
                    description: 'LastModifiedBy: The identity that last modified the resource.'
                    type: string
                  lastModifiedByType:
                    description: 'LastModifiedByType: The type of identity that last modified the resource.'
                    enum:
                    - Application
                    - Key
                    - ManagedIdentity
                    - User
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: Resource tags'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              updatedAt:
                description: 'UpdatedAt: The time the namespace was updated.'
                type: string
              zoneRedundant:
                description: 'ZoneRedundant: Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.'
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20210101previewstorage
    schema:
      openAPIV3Schema:
        description: 'Storage version of v1alpha1api20210101preview.Namespace Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1alpha1api20210101preview.Namespaces_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                type: string
              encryption:
                description: 'Storage version of v1alpha1api20210101preview.Encryption Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Encryption'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  keySource:
                    type: string
                  keyVaultProperties:
                    items:
                      description: 'Storage version of v1alpha1api20210101preview.KeyVaultProperties Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/KeyVaultProperties'
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                          type: object
                        identity:
                          description: 'Storage version of v1alpha1api20210101preview.UserAssignedIdentityProperties Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/UserAssignedIdentityProperties'
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                              type: object
                            userAssignedIdentityReference:
                              description: 'UserAssignedIdentityReference: ARM ID of user Identity selected for encryption'
                              properties:
                                armId:
                                  description: 'TODO: The below regex may be overly restrictive ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. ARMID is mutually exclusive with Group, Kind, Namespace and Name.'
                                  pattern: (?i)^/subscriptions/([^/]+)/resourcegroups/([^/]+)/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))+$
                                  type: string
                                group:
                                  description: Group is the Kubernetes group of the resource.
                                  type: string
                                kind:
                                  description: Kind is the Kubernetes kind of the resource.
                                  type: string
                                name:
                                  description: Name is the Kubernetes name of the resource.
                                  type: string
                                namespace:
                                  description: Namespace is the Kubernetes namespace of the resource.
                                  type: string
                              type: object
                          type: object
                        keyName:
                          type: string
                        keyVaultUri:
                          type: string
                        keyVersion:
                          type: string
                      type: object
                    type: array
                  requireInfrastructureEncryption:
                    type: boolean
                type: object
              identity:
                description: 'Storage version of v1alpha1api20210101preview.Identity Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/Identity'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  type:
                    type: string
                type: object
              location:
                type: string
              originalVersion:
                type: string
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              sku:
                description: 'Storage version of v1alpha1api20210101preview.SBSku Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/definitions/SBSku'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  capacity:
                    type: integer
                  name:
                    type: string
                  tier:
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              zoneRedundant:
                type: boolean
            required:
            - owner
            type: object
          status:
            description: 'Storage version of v1alpha1api20210101preview.SBNamespace_Status Generated from:'
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              encryption:
                description: 'Storage version of v1alpha1api20210101preview.Encryption_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  keySource:
                    type: string
                  keyVaultProperties:
                    items:
                      description: 'Storage version of v1alpha1api20210101preview.KeyVaultProperties_Status Generated from:'
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                          type: object
                        identity:
                          description: 'Storage version of v1alpha1api20210101preview.UserAssignedIdentityProperties_Status Generated from:'
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                              type: object
                            userAssignedIdentity:
                              type: string
                          type: object
                        keyName:
                          type: string
                        keyVaultUri:
                          type: string
                        keyVersion:
                          type: string
                      type: object
                    type: array
                  requireInfrastructureEncryption:
                    type: boolean
                type: object
              id:
                type: string
              identity:
                description: 'Storage version of v1alpha1api20210101preview.Identity_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  principalId:
                    type: string
                  tenantId:
                    type: string
                  type:
                    type: string
                  userAssignedIdentities:
                    additionalProperties:
                      description: 'Storage version of v1alpha1api20210101preview.DictionaryValue_Status Generated from:'
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                          type: object
                        clientId:
                          type: string
                        principalId:
                          type: string
                      type: object
                    type: object
                type: object
              location:
                type: string
              metricId:
                type: string
              name:
                type: string
              privateEndpointConnections:
                items:
                  description: 'Storage version of v1alpha1api20210101preview.PrivateEndpointConnection_Status_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    id:
                      type: string
                    systemData:
                      description: 'Storage version of v1alpha1api20210101preview.SystemData_Status Generated from:'
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                          type: object
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        createdByType:
                          type: string
                        lastModifiedAt:
                          type: string
                        lastModifiedBy:
                          type: string
                        lastModifiedByType:
                          type: string
                      type: object
                  type: object
                type: array
              provisioningState:
                type: string
              serviceBusEndpoint:
                type: string
              sku:
                description: 'Storage version of v1alpha1api20210101preview.SBSku_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  capacity:
                    type: integer
                  name:
                    type: string
                  tier:
                    type: string
                type: object
              status:
                type: string
              systemData:
                description: 'Storage version of v1alpha1api20210101preview.SystemData_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
              zoneRedundant:
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
