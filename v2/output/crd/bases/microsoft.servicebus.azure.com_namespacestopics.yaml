
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: namespacestopics.microsoft.servicebus.azure.com
spec:
  group: microsoft.servicebus.azure.com
  names:
    kind: NamespacesTopic
    listKind: NamespacesTopicList
    plural: namespacestopics
    singular: namespacestopic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20210101preview
    schema:
      openAPIV3Schema:
        description: 'Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces_topics'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoDeleteOnIdle:
                description: 'AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.'
                type: string
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                minLength: 1
                type: string
              defaultMessageTimeToLive:
                description: 'DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.'
                type: string
              duplicateDetectionHistoryTimeWindow:
                description: 'DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.'
                type: string
              enableBatchedOperations:
                description: 'EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.'
                type: boolean
              enableExpress:
                description: 'EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.'
                type: boolean
              enablePartitioning:
                description: 'EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.'
                type: boolean
              location:
                description: 'Location: Location to deploy resource to'
                type: string
              maxSizeInMegabytes:
                description: 'MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.'
                type: integer
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              requiresDuplicateDetection:
                description: 'RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.'
                type: boolean
              supportOrdering:
                description: 'SupportOrdering: Value that indicates whether the topic supports ordering.'
                type: boolean
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: Name-value pairs to add to the resource'
                type: object
            required:
            - owner
            type: object
          status:
            description: 'Generated from:'
            properties:
              accessedAt:
                description: 'AccessedAt: Last time the message was sent, or a request was received, for this topic.'
                type: string
              autoDeleteOnIdle:
                description: 'AutoDeleteOnIdle: ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.'
                type: string
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              countDetails:
                description: 'CountDetails: Message count details'
                properties:
                  activeMessageCount:
                    description: 'ActiveMessageCount: Number of active messages in the queue, topic, or subscription.'
                    type: integer
                  deadLetterMessageCount:
                    description: 'DeadLetterMessageCount: Number of messages that are dead lettered.'
                    type: integer
                  scheduledMessageCount:
                    description: 'ScheduledMessageCount: Number of scheduled messages.'
                    type: integer
                  transferDeadLetterMessageCount:
                    description: 'TransferDeadLetterMessageCount: Number of messages transferred into dead letters.'
                    type: integer
                  transferMessageCount:
                    description: 'TransferMessageCount: Number of messages transferred to another queue, topic, or subscription.'
                    type: integer
                type: object
              createdAt:
                description: 'CreatedAt: Exact time the message was created.'
                type: string
              defaultMessageTimeToLive:
                description: 'DefaultMessageTimeToLive: ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.'
                type: string
              duplicateDetectionHistoryTimeWindow:
                description: 'DuplicateDetectionHistoryTimeWindow: ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.'
                type: string
              enableBatchedOperations:
                description: 'EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.'
                type: boolean
              enableExpress:
                description: 'EnableExpress: Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.'
                type: boolean
              enablePartitioning:
                description: 'EnablePartitioning: Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.'
                type: boolean
              id:
                description: 'Id: Resource Id'
                type: string
              maxSizeInMegabytes:
                description: 'MaxSizeInMegabytes: Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.'
                type: integer
              name:
                description: 'Name: Resource name'
                type: string
              requiresDuplicateDetection:
                description: 'RequiresDuplicateDetection: Value indicating if this topic requires duplicate detection.'
                type: boolean
              sizeInBytes:
                description: 'SizeInBytes: Size of the topic, in bytes.'
                type: integer
              status:
                description: 'Status: Enumerates the possible values for the status of a messaging entity.'
                enum:
                - Active
                - Creating
                - Deleting
                - Disabled
                - ReceiveDisabled
                - Renaming
                - Restoring
                - SendDisabled
                - Unknown
                type: string
              subscriptionCount:
                description: 'SubscriptionCount: Number of subscriptions.'
                type: integer
              supportOrdering:
                description: 'SupportOrdering: Value that indicates whether the topic supports ordering.'
                type: boolean
              systemData:
                description: 'SystemData: The system meta data relating to this resource.'
                properties:
                  createdAt:
                    description: 'CreatedAt: The timestamp of resource creation (UTC).'
                    type: string
                  createdBy:
                    description: 'CreatedBy: The identity that created the resource.'
                    type: string
                  createdByType:
                    description: 'CreatedByType: The type of identity that created the resource.'
                    enum:
                    - Application
                    - Key
                    - ManagedIdentity
                    - User
                    type: string
                  lastModifiedAt:
                    description: 'LastModifiedAt: The type of identity that last modified the resource.'
                    type: string
                  lastModifiedBy:
                    description: 'LastModifiedBy: The identity that last modified the resource.'
                    type: string
                  lastModifiedByType:
                    description: 'LastModifiedByType: The type of identity that last modified the resource.'
                    enum:
                    - Application
                    - Key
                    - ManagedIdentity
                    - User
                    type: string
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              updatedAt:
                description: 'UpdatedAt: The exact time the message was updated.'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20210101previewstorage
    schema:
      openAPIV3Schema:
        description: 'Storage version of v1alpha1api20210101preview.NamespacesTopic Generated from: https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceBus.json#/resourceDefinitions/namespaces_topics'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1alpha1api20210101preview.NamespacesTopics_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              autoDeleteOnIdle:
                type: string
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                minLength: 1
                type: string
              defaultMessageTimeToLive:
                type: string
              duplicateDetectionHistoryTimeWindow:
                type: string
              enableBatchedOperations:
                type: boolean
              enableExpress:
                type: boolean
              enablePartitioning:
                type: boolean
              location:
                type: string
              maxSizeInMegabytes:
                type: integer
              originalVersion:
                type: string
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              requiresDuplicateDetection:
                type: boolean
              supportOrdering:
                type: boolean
              tags:
                additionalProperties:
                  type: string
                type: object
            required:
            - owner
            type: object
          status:
            description: 'Storage version of v1alpha1api20210101preview.SBTopic_Status Generated from:'
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              accessedAt:
                type: string
              autoDeleteOnIdle:
                type: string
              conditions:
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              countDetails:
                description: 'Storage version of v1alpha1api20210101preview.MessageCountDetails_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  activeMessageCount:
                    type: integer
                  deadLetterMessageCount:
                    type: integer
                  scheduledMessageCount:
                    type: integer
                  transferDeadLetterMessageCount:
                    type: integer
                  transferMessageCount:
                    type: integer
                type: object
              createdAt:
                type: string
              defaultMessageTimeToLive:
                type: string
              duplicateDetectionHistoryTimeWindow:
                type: string
              enableBatchedOperations:
                type: boolean
              enableExpress:
                type: boolean
              enablePartitioning:
                type: boolean
              id:
                type: string
              maxSizeInMegabytes:
                type: integer
              name:
                type: string
              requiresDuplicateDetection:
                type: boolean
              sizeInBytes:
                type: integer
              status:
                type: string
              subscriptionCount:
                type: integer
              supportOrdering:
                type: boolean
              systemData:
                description: 'Storage version of v1alpha1api20210101preview.SystemData_Status Generated from:'
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
