
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: networksecuritygroups.microsoft.network.azure.com
spec:
  group: microsoft.network.azure.com
  names:
    kind: NetworkSecurityGroup
    listKind: NetworkSecurityGroupList
    plural: networksecuritygroups
    singular: networksecuritygroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20201101
    schema:
      openAPIV3Schema:
        description: 'Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                type: string
              location:
                description: 'Location: Location to deploy resource to'
                type: string
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: Name-value pairs to add to the resource'
                type: object
            required:
            - owner
            type: object
          status:
            description: 'Generated from:'
            properties:
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              defaultSecurityRules:
                description: 'DefaultSecurityRules: The default security rules of network security group.'
                items:
                  description: 'Generated from:'
                  properties:
                    id:
                      description: 'Id: Resource ID.'
                      type: string
                  type: object
                type: array
              etag:
                description: 'Etag: A unique read-only string that changes whenever the resource is updated.'
                type: string
              flowLogs:
                description: 'FlowLogs: A collection of references to flow log resources.'
                items:
                  description: 'Generated from:'
                  properties:
                    id:
                      description: 'Id: Resource ID.'
                      type: string
                  type: object
                type: array
              id:
                description: 'Id: Resource ID.'
                type: string
              location:
                description: 'Location: Resource location.'
                type: string
              name:
                description: 'Name: Resource name.'
                type: string
              networkInterfaces:
                description: 'NetworkInterfaces: A collection of references to network interfaces.'
                items:
                  description: 'Generated from:'
                  properties:
                    extendedLocation:
                      description: 'ExtendedLocation: The extended location of the network interface.'
                      properties:
                        name:
                          description: 'Name: The name of the extended location.'
                          type: string
                        type:
                          description: 'Type: The type of the extended location.'
                          enum:
                          - EdgeZone
                          type: string
                      required:
                      - name
                      - type
                      type: object
                    id:
                      description: 'Id: Resource ID.'
                      type: string
                  type: object
                type: array
              provisioningState:
                description: 'ProvisioningState: The provisioning state of the network security group resource.'
                enum:
                - Deleting
                - Failed
                - Succeeded
                - Updating
                type: string
              resourceGuid:
                description: 'ResourceGuid: The resource GUID property of the network security group resource.'
                type: string
              securityRules:
                description: 'SecurityRules: A collection of security rules of the network security group.'
                items:
                  description: 'Generated from:'
                  properties:
                    id:
                      description: 'Id: Resource ID.'
                      type: string
                  type: object
                type: array
              subnets:
                description: 'Subnets: A collection of references to subnets.'
                items:
                  description: 'Generated from:'
                  properties:
                    id:
                      description: 'Id: Resource ID.'
                      type: string
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: Resource tags.'
                type: object
              type:
                description: 'Type: Resource type.'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1api20201101storage
    schema:
      openAPIV3Schema:
        description: 'Storage version of v1alpha1api20201101.NetworkSecurityGroup Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/resourceDefinitions/networkSecurityGroups'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1alpha1api20201101.NetworkSecurityGroups_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              azureName:
                description: 'AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn''t have to be.'
                type: string
              location:
                type: string
              originalVersion:
                type: string
              owner:
                description: KnownResourceReference is a resource reference to a known type.
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              tags:
                additionalProperties:
                  type: string
                type: object
            required:
            - owner
            type: object
          status:
            description: 'Storage version of v1alpha1api20201101.NetworkSecurityGroup_Status_NetworkSecurityGroup_SubResourceEmbedded Generated from:'
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              defaultSecurityRules:
                items:
                  description: 'Storage version of v1alpha1api20201101.SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    id:
                      type: string
                  type: object
                type: array
              etag:
                type: string
              flowLogs:
                items:
                  description: 'Storage version of v1alpha1api20201101.FlowLog_Status_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    id:
                      type: string
                  type: object
                type: array
              id:
                type: string
              location:
                type: string
              name:
                type: string
              networkInterfaces:
                items:
                  description: 'Storage version of v1alpha1api20201101.NetworkInterface_Status_NetworkSecurityGroup_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    extendedLocation:
                      description: 'Storage version of v1alpha1api20201101.ExtendedLocation_Status Generated from:'
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                          type: object
                        name:
                          type: string
                        type:
                          type: string
                      type: object
                    id:
                      type: string
                  type: object
                type: array
              provisioningState:
                type: string
              resourceGuid:
                type: string
              securityRules:
                items:
                  description: 'Storage version of v1alpha1api20201101.SecurityRule_Status_NetworkSecurityGroup_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    id:
                      type: string
                  type: object
                type: array
              subnets:
                items:
                  description: 'Storage version of v1alpha1api20201101.Subnet_Status_NetworkSecurityGroup_SubResourceEmbedded Generated from:'
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions We store items in the bag as serialized JSON, which we can then deserialize in a just-in-time fashion once we know the type of the instance we're going to populate. Unlike other platforms, Go doesn't embed type information as it serializes to JSON or YAML, which means that deserialization requires a type hint that's not available when our containing resource is hydrated. We only have the required type available when we are doing the conversion to a related type.
                      type: object
                    id:
                      type: string
                  type: object
                type: array
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
