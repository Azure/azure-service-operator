// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210515

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type DatabaseAccountsMongodbDatabasesCollections_SpecARM struct {
	//APIVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	APIVersion DatabaseAccountsMongodbDatabasesCollectionsSpecAPIVersion `json:"apiVersion"`

	//Location: The location of the resource group to which the resource belongs.
	Location *string `json:"location,omitempty"`

	//Name: Cosmos DB collection name.
	Name string `json:"name"`

	//Properties: Properties to create and update Azure Cosmos DB MongoDB collection.
	Properties MongoDBCollectionCreateUpdatePropertiesARM `json:"properties"`

	//Tags: Tags are a list of key-value pairs that describe the resource. These tags
	//can be used in viewing and grouping this resource (across resource groups). A
	//maximum of 15 tags can be provided for a resource. Each tag must have a key no
	//greater than 128 characters and value no greater than 256 characters. For
	//example, the default experience for a template type is set with
	//"defaultExperience": "Cassandra". Current "defaultExperience" values also
	//include "Table", "Graph", "DocumentDB", and "MongoDB".
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type
	Type DatabaseAccountsMongodbDatabasesCollectionsSpecType `json:"type"`
}

var _ genruntime.ARMResourceSpec = &DatabaseAccountsMongodbDatabasesCollections_SpecARM{}

// GetAPIVersion returns the APIVersion of the resource
func (databaseAccountsMongodbDatabasesCollectionsSpecARM DatabaseAccountsMongodbDatabasesCollections_SpecARM) GetAPIVersion() string {
	return string(databaseAccountsMongodbDatabasesCollectionsSpecARM.APIVersion)
}

// GetName returns the Name of the resource
func (databaseAccountsMongodbDatabasesCollectionsSpecARM DatabaseAccountsMongodbDatabasesCollections_SpecARM) GetName() string {
	return databaseAccountsMongodbDatabasesCollectionsSpecARM.Name
}

// GetType returns the Type of the resource
func (databaseAccountsMongodbDatabasesCollectionsSpecARM DatabaseAccountsMongodbDatabasesCollections_SpecARM) GetType() string {
	return string(databaseAccountsMongodbDatabasesCollectionsSpecARM.Type)
}

// +kubebuilder:validation:Enum={"2021-05-15"}
type DatabaseAccountsMongodbDatabasesCollectionsSpecAPIVersion string

const DatabaseAccountsMongodbDatabasesCollectionsSpecAPIVersion20210515 = DatabaseAccountsMongodbDatabasesCollectionsSpecAPIVersion("2021-05-15")

// +kubebuilder:validation:Enum={"Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections"}
type DatabaseAccountsMongodbDatabasesCollectionsSpecType string

const DatabaseAccountsMongodbDatabasesCollectionsSpecTypeMicrosoftDocumentDBDatabaseAccountsMongodbDatabasesCollections = DatabaseAccountsMongodbDatabasesCollectionsSpecType("Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections")

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBCollectionCreateUpdateProperties
type MongoDBCollectionCreateUpdatePropertiesARM struct {
	//Options: CreateUpdateOptions are a list of key-value pairs that describe the
	//resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and
	//"Throughput"
	Options *CreateUpdateOptionsARM `json:"options,omitempty"`

	//Resource: Cosmos DB MongoDB collection resource object
	Resource MongoDBCollectionResourceARM `json:"resource"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/CreateUpdateOptions
type CreateUpdateOptionsARM struct {
	AutoscaleSettings *AutoscaleSettingsARM `json:"autoscaleSettings,omitempty"`

	//Throughput: Request Units per second. For example, "throughput": 10000.
	Throughput *int `json:"throughput,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoDBCollectionResource
type MongoDBCollectionResourceARM struct {
	//AnalyticalStorageTtl: Analytical TTL.
	AnalyticalStorageTtl *int `json:"analyticalStorageTtl,omitempty"`

	//Id: Name of the Cosmos DB MongoDB collection
	Id string `json:"id"`

	//Indexes: List of index keys
	Indexes []MongoIndexARM `json:"indexes,omitempty"`

	//ShardKey: The shard key and partition kind pair, only support "Hash" partition
	//kind
	ShardKey map[string]string `json:"shardKey,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/AutoscaleSettings
type AutoscaleSettingsARM struct {
	//MaxThroughput: Represents maximum throughput, the resource can scale up to.
	MaxThroughput *int `json:"maxThroughput,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndex
type MongoIndexARM struct {
	//Key: Cosmos DB MongoDB collection resource object
	Key *MongoIndexKeysARM `json:"key,omitempty"`

	//Options: Cosmos DB MongoDB collection index options
	Options *MongoIndexOptionsARM `json:"options,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexKeys
type MongoIndexKeysARM struct {
	//Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `json:"keys,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2021-05-15/Microsoft.DocumentDB.json#/definitions/MongoIndexOptions
type MongoIndexOptionsARM struct {
	//ExpireAfterSeconds: Expire after seconds
	ExpireAfterSeconds *int `json:"expireAfterSeconds,omitempty"`

	//Unique: Is unique or not
	Unique *bool `json:"unique,omitempty"`
}
