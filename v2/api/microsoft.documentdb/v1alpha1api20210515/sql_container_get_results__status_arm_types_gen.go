// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210515

//Generated from:
type SqlContainerGetResults_StatusARM struct {
	//Id: The unique resource identifier of the ARM resource.
	Id *string `json:"id,omitempty"`

	//Location: The location of the resource group to which the resource belongs.
	Location *string `json:"location,omitempty"`

	//Name: The name of the ARM resource.
	Name *string `json:"name,omitempty"`

	//Properties: The properties of an Azure Cosmos DB container
	Properties *SqlContainerGetProperties_StatusARM `json:"properties,omitempty"`
	Tags       map[string]string                    `json:"tags,omitempty"`

	//Type: The type of Azure resource.
	Type *string `json:"type,omitempty"`
}

//Generated from:
type SqlContainerGetProperties_StatusARM struct {
	Options  *OptionsResource_StatusARM                    `json:"options,omitempty"`
	Resource *SqlContainerGetProperties_Status_ResourceARM `json:"resource,omitempty"`
}

type SqlContainerGetProperties_Status_ResourceARM struct {
	//AnalyticalStorageTtl: Analytical TTL.
	AnalyticalStorageTtl *int `json:"analyticalStorageTtl,omitempty"`

	//ConflictResolutionPolicy: The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicy_StatusARM `json:"conflictResolutionPolicy,omitempty"`

	//DefaultTtl: Default time to live
	DefaultTtl *int `json:"defaultTtl,omitempty"`

	//Etag: A system generated property representing the resource etag required for
	//optimistic concurrency control.
	Etag *string `json:"_etag,omitempty"`

	//Id: Name of the Cosmos DB SQL container
	Id string `json:"id"`

	//IndexingPolicy: The configuration of the indexing policy. By default, the
	//indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicy_StatusARM `json:"indexingPolicy,omitempty"`

	//PartitionKey: The configuration of the partition key to be used for partitioning
	//data into multiple partitions
	PartitionKey *ContainerPartitionKey_StatusARM `json:"partitionKey,omitempty"`

	//Rid: A system generated property. A unique identifier.
	Rid *string `json:"_rid,omitempty"`

	//Ts: A system generated property that denotes the last updated timestamp of the
	//resource.
	Ts *float64 `json:"_ts,omitempty"`

	//UniqueKeyPolicy: The unique key policy configuration for specifying uniqueness
	//constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy_StatusARM `json:"uniqueKeyPolicy,omitempty"`
}

//Generated from:
type ConflictResolutionPolicy_StatusARM struct {
	//ConflictResolutionPath: The conflict resolution path in the case of
	//LastWriterWins mode.
	ConflictResolutionPath *string `json:"conflictResolutionPath,omitempty"`

	//ConflictResolutionProcedure: The procedure to resolve conflicts in the case of
	//custom mode.
	ConflictResolutionProcedure *string `json:"conflictResolutionProcedure,omitempty"`

	//Mode: Indicates the conflict resolution mode.
	Mode *ConflictResolutionPolicyStatusMode `json:"mode,omitempty"`
}

//Generated from:
type ContainerPartitionKey_StatusARM struct {
	//Kind: Indicates the kind of algorithm used for partitioning. For MultiHash,
	//multiple partition keys (upto three maximum) are supported for container create
	Kind *ContainerPartitionKeyStatusKind `json:"kind,omitempty"`

	//Paths: List of paths using which data within the container can be partitioned
	Paths []string `json:"paths,omitempty"`

	//SystemKey: Indicates if the container is using a system generated partition key
	SystemKey *bool `json:"systemKey,omitempty"`

	//Version: Indicates the version of the partition key definition
	Version *int `json:"version,omitempty"`
}

//Generated from:
type IndexingPolicy_StatusARM struct {
	//Automatic: Indicates if the indexing policy is automatic
	Automatic *bool `json:"automatic,omitempty"`

	//CompositeIndexes: List of composite path list
	CompositeIndexes [][]CompositePath_StatusARM `json:"compositeIndexes,omitempty"`

	//ExcludedPaths: List of paths to exclude from indexing
	ExcludedPaths []ExcludedPath_StatusARM `json:"excludedPaths,omitempty"`

	//IncludedPaths: List of paths to include in the indexing
	IncludedPaths []IncludedPath_StatusARM `json:"includedPaths,omitempty"`

	//IndexingMode: Indicates the indexing mode.
	IndexingMode *IndexingPolicyStatusIndexingMode `json:"indexingMode,omitempty"`

	//SpatialIndexes: List of spatial specifics
	SpatialIndexes []SpatialSpec_StatusARM `json:"spatialIndexes,omitempty"`
}

//Generated from:
type UniqueKeyPolicy_StatusARM struct {
	//UniqueKeys: List of unique keys on that enforces uniqueness constraint on
	//documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKey_StatusARM `json:"uniqueKeys,omitempty"`
}

//Generated from:
type CompositePath_StatusARM struct {
	//Order: Sort order for composite paths.
	Order *CompositePathStatusOrder `json:"order,omitempty"`

	//Path: The path for which the indexing behavior applies to. Index paths typically
	//start with root and end with wildcard (/path/*)
	Path *string `json:"path,omitempty"`
}

//Generated from:
type ExcludedPath_StatusARM struct {
	//Path: The path for which the indexing behavior applies to. Index paths typically
	//start with root and end with wildcard (/path/*)
	Path *string `json:"path,omitempty"`
}

//Generated from:
type IncludedPath_StatusARM struct {
	//Indexes: List of indexes for this path
	Indexes []Indexes_StatusARM `json:"indexes,omitempty"`

	//Path: The path for which the indexing behavior applies to. Index paths typically
	//start with root and end with wildcard (/path/*)
	Path *string `json:"path,omitempty"`
}

//Generated from:
type SpatialSpec_StatusARM struct {
	//Path: The path for which the indexing behavior applies to. Index paths typically
	//start with root and end with wildcard (/path/*)
	Path *string `json:"path,omitempty"`

	//Types: List of path's spatial type
	Types []SpatialType_Status `json:"types,omitempty"`
}

//Generated from:
type UniqueKey_StatusARM struct {
	//Paths: List of paths must be unique for each document in the Azure Cosmos DB
	//service
	Paths []string `json:"paths,omitempty"`
}

//Generated from:
type Indexes_StatusARM struct {
	//DataType: The datatype for which the indexing behavior is applied to.
	DataType *IndexesStatusDataType `json:"dataType,omitempty"`

	//Kind: Indicates the type of index.
	Kind *IndexesStatusKind `json:"kind,omitempty"`

	//Precision: The precision of the index. -1 is maximum precision.
	Precision *int `json:"precision,omitempty"`
}
