// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211001storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=subscription.azure.com,resources=aliases,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=subscription.azure.com,resources={aliases/status,aliases/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1beta20211001.Alias
// Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.Subscription.json#/tenant_resourceDefinitions/aliases
type Alias struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Aliases_Spec                     `json:"spec,omitempty"`
	Status            SubscriptionAliasResponse_Status `json:"status,omitempty"`
}

var _ conditions.Conditioner = &Alias{}

// GetConditions returns the conditions of the resource
func (alias *Alias) GetConditions() conditions.Conditions {
	return alias.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (alias *Alias) SetConditions(conditions conditions.Conditions) {
	alias.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &Alias{}

// AzureName returns the Azure name of the resource
func (alias *Alias) AzureName() string {
	return alias.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-10-01"
func (alias Alias) GetAPIVersion() string {
	return string(APIVersionValue)
}

// GetResourceScope returns the scope of the resource
func (alias *Alias) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeTenant
}

// GetSpec returns the specification of this resource
func (alias *Alias) GetSpec() genruntime.ConvertibleSpec {
	return &alias.Spec
}

// GetStatus returns the status of this resource
func (alias *Alias) GetStatus() genruntime.ConvertibleStatus {
	return &alias.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Subscription/aliases"
func (alias *Alias) GetType() string {
	return "Microsoft.Subscription/aliases"
}

// NewEmptyStatus returns a new empty (blank) status
func (alias *Alias) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &SubscriptionAliasResponse_Status{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (alias *Alias) Owner() *genruntime.ResourceReference {
	return nil
}

// SetStatus sets the status of this resource
func (alias *Alias) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*SubscriptionAliasResponse_Status); ok {
		alias.Status = *st
		return nil
	}

	// Convert status to required version
	var st SubscriptionAliasResponse_Status
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	alias.Status = st
	return nil
}

// Hub marks that this Alias is the hub type for conversion
func (alias *Alias) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (alias *Alias) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: alias.Spec.OriginalVersion,
		Kind:    "Alias",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1beta20211001.Alias
// Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.Subscription.json#/tenant_resourceDefinitions/aliases
type AliasList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Alias `json:"items"`
}

// Storage version of v1beta20211001.APIVersion
// +kubebuilder:validation:Enum={"2021-10-01"}
type APIVersion string

const APIVersionValue = APIVersion("2021-10-01")

// Storage version of v1beta20211001.Aliases_Spec
type Aliases_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string                     `json:"azureName,omitempty"`
	OriginalVersion string                     `json:"originalVersion,omitempty"`
	Properties      *PutAliasRequestProperties `json:"properties,omitempty"`
	PropertyBag     genruntime.PropertyBag     `json:"$propertyBag,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Aliases_Spec{}

// ConvertSpecFrom populates our Aliases_Spec from the provided source
func (aliases *Aliases_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == aliases {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(aliases)
}

// ConvertSpecTo populates the provided destination from our Aliases_Spec
func (aliases *Aliases_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == aliases {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(aliases)
}

// Storage version of v1beta20211001.SubscriptionAliasResponse_Status
type SubscriptionAliasResponse_Status struct {
	Conditions  []conditions.Condition                      `json:"conditions,omitempty"`
	Id          *string                                     `json:"id,omitempty"`
	Name        *string                                     `json:"name,omitempty"`
	Properties  *SubscriptionAliasResponseProperties_Status `json:"properties,omitempty"`
	PropertyBag genruntime.PropertyBag                      `json:"$propertyBag,omitempty"`
	SystemData  *SystemData_Status                          `json:"systemData,omitempty"`
	Type        *string                                     `json:"type,omitempty"`
}

var _ genruntime.ConvertibleStatus = &SubscriptionAliasResponse_Status{}

// ConvertStatusFrom populates our SubscriptionAliasResponse_Status from the provided source
func (response *SubscriptionAliasResponse_Status) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == response {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(response)
}

// ConvertStatusTo populates the provided destination from our SubscriptionAliasResponse_Status
func (response *SubscriptionAliasResponse_Status) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == response {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(response)
}

// Storage version of v1beta20211001.PutAliasRequestProperties
// Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.Subscription.json#/definitions/PutAliasRequestProperties
type PutAliasRequestProperties struct {
	AdditionalProperties *PutAliasRequestAdditionalProperties `json:"additionalProperties,omitempty"`
	BillingScope         *string                              `json:"billingScope,omitempty"`
	DisplayName          *string                              `json:"displayName,omitempty"`
	PropertyBag          genruntime.PropertyBag               `json:"$propertyBag,omitempty"`
	ResellerId           *string                              `json:"resellerId,omitempty"`
	SubscriptionId       *string                              `json:"subscriptionId,omitempty"`
	Workload             *string                              `json:"workload,omitempty"`
}

// Storage version of v1beta20211001.SubscriptionAliasResponseProperties_Status
type SubscriptionAliasResponseProperties_Status struct {
	AcceptOwnershipState *string                `json:"acceptOwnershipState,omitempty"`
	AcceptOwnershipUrl   *string                `json:"acceptOwnershipUrl,omitempty"`
	BillingScope         *string                `json:"billingScope,omitempty"`
	CreatedTime          *string                `json:"createdTime,omitempty"`
	DisplayName          *string                `json:"displayName,omitempty"`
	ManagementGroupId    *string                `json:"managementGroupId,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ProvisioningState    *string                `json:"provisioningState,omitempty"`
	ResellerId           *string                `json:"resellerId,omitempty"`
	SubscriptionId       *string                `json:"subscriptionId,omitempty"`
	SubscriptionOwnerId  *string                `json:"subscriptionOwnerId,omitempty"`
	Tags                 map[string]string      `json:"tags,omitempty"`
	Workload             *string                `json:"workload,omitempty"`
}

// Storage version of v1beta20211001.SystemData_Status
type SystemData_Status struct {
	CreatedAt          *string                `json:"createdAt,omitempty"`
	CreatedBy          *string                `json:"createdBy,omitempty"`
	CreatedByType      *string                `json:"createdByType,omitempty"`
	LastModifiedAt     *string                `json:"lastModifiedAt,omitempty"`
	LastModifiedBy     *string                `json:"lastModifiedBy,omitempty"`
	LastModifiedByType *string                `json:"lastModifiedByType,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20211001.PutAliasRequestAdditionalProperties
// Generated from: https://schema.management.azure.com/schemas/2021-10-01/Microsoft.Subscription.json#/definitions/PutAliasRequestAdditionalProperties
type PutAliasRequestAdditionalProperties struct {
	ManagementGroupId    *string                `json:"managementGroupId,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SubscriptionOwnerId  *string                `json:"subscriptionOwnerId,omitempty"`
	SubscriptionTenantId *string                `json:"subscriptionTenantId,omitempty"`
	Tags                 map[string]string      `json:"tags,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Alias{}, &AliasList{})
}
