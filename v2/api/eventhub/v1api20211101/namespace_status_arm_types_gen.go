// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20211101

type Namespace_STATUS_ARM struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Identity: Properties of BYOK Identity description
	Identity *Identity_STATUS_ARM `json:"identity,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Name: The name of the resource
	Name *string `json:"name,omitempty"`

	// Properties: Namespace properties supplied for create namespace operation.
	Properties *Namespace_Properties_STATUS_ARM `json:"properties,omitempty"`

	// Sku: Properties of sku resource
	Sku *Sku_STATUS_ARM `json:"sku,omitempty"`

	// SystemData: The system meta data relating to this resource.
	SystemData *SystemData_STATUS_ARM `json:"systemData,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// Properties to configure Identity for Bring your Own Keys
type Identity_STATUS_ARM struct {
	// PrincipalId: ObjectId from the KeyVault
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: TenantId from the KeyVault
	TenantId *string `json:"tenantId,omitempty"`

	// Type: Type of managed service identity.
	Type *Identity_Type_STATUS_ARM `json:"type,omitempty"`

	// UserAssignedIdentities: Properties for User Assigned Identities
	UserAssignedIdentities map[string]UserAssignedIdentity_STATUS_ARM `json:"userAssignedIdentities,omitempty"`
}

type Namespace_Properties_STATUS_ARM struct {
	// AlternateName: Alternate name specified when alias and namespace names are same.
	AlternateName *string `json:"alternateName,omitempty"`

	// ClusterArmId: Cluster ARM ID of the Namespace.
	ClusterArmId *string `json:"clusterArmId,omitempty"`

	// CreatedAt: The time the Namespace was created.
	CreatedAt *string `json:"createdAt,omitempty"`

	// DisableLocalAuth: This property disables SAS authentication for the Event Hubs namespace.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// Encryption: Properties of BYOK Encryption description
	Encryption *Encryption_STATUS_ARM `json:"encryption,omitempty"`

	// IsAutoInflateEnabled: Value that indicates whether AutoInflate is enabled for eventhub namespace.
	IsAutoInflateEnabled *bool `json:"isAutoInflateEnabled,omitempty"`

	// KafkaEnabled: Value that indicates whether Kafka is enabled for eventhub namespace.
	KafkaEnabled *bool `json:"kafkaEnabled,omitempty"`

	// MaximumThroughputUnits: Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20
	// throughput units. ( '0' if AutoInflateEnabled = true)
	MaximumThroughputUnits *int `json:"maximumThroughputUnits,omitempty"`

	// MetricId: Identifier for Azure Insights metrics.
	MetricId *string `json:"metricId,omitempty"`

	// PrivateEndpointConnections: List of private endpoint connections.
	PrivateEndpointConnections []PrivateEndpointConnection_STATUS_ARM `json:"privateEndpointConnections,omitempty"`

	// ProvisioningState: Provisioning state of the Namespace.
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ServiceBusEndpoint: Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint *string `json:"serviceBusEndpoint,omitempty"`

	// Status: Status of the Namespace.
	Status *string `json:"status,omitempty"`

	// UpdatedAt: The time the Namespace was updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`

	// ZoneRedundant: Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.
	ZoneRedundant *bool `json:"zoneRedundant,omitempty"`
}

// SKU parameters supplied to the create namespace operation
type Sku_STATUS_ARM struct {
	// Capacity: The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units.
	// The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.
	Capacity *int `json:"capacity,omitempty"`

	// Name: Name of this SKU.
	Name *Sku_Name_STATUS_ARM `json:"name,omitempty"`

	// Tier: The billing tier of this particular SKU.
	Tier *Sku_Tier_STATUS_ARM `json:"tier,omitempty"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS_ARM struct {
	// CreatedAt: The timestamp of resource creation (UTC).
	CreatedAt *string `json:"createdAt,omitempty"`

	// CreatedBy: The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedByType: The type of identity that created the resource.
	CreatedByType *SystemData_CreatedByType_STATUS_ARM `json:"createdByType,omitempty"`

	// LastModifiedAt: The type of identity that last modified the resource.
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`

	// LastModifiedBy: The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// LastModifiedByType: The type of identity that last modified the resource.
	LastModifiedByType *SystemData_LastModifiedByType_STATUS_ARM `json:"lastModifiedByType,omitempty"`
}

// Properties to configure Encryption
type Encryption_STATUS_ARM struct {
	// KeySource: Enumerates the possible value of keySource for Encryption
	KeySource *Encryption_KeySource_STATUS_ARM `json:"keySource,omitempty"`

	// KeyVaultProperties: Properties of KeyVault
	KeyVaultProperties []KeyVaultProperties_STATUS_ARM `json:"keyVaultProperties,omitempty"`

	// RequireInfrastructureEncryption: Enable Infrastructure Encryption (Double Encryption)
	RequireInfrastructureEncryption *bool `json:"requireInfrastructureEncryption,omitempty"`
}

type Identity_Type_STATUS_ARM string

const (
	Identity_Type_STATUS_ARM_None                       = Identity_Type_STATUS_ARM("None")
	Identity_Type_STATUS_ARM_SystemAssigned             = Identity_Type_STATUS_ARM("SystemAssigned")
	Identity_Type_STATUS_ARM_SystemAssignedUserAssigned = Identity_Type_STATUS_ARM("SystemAssigned, UserAssigned")
	Identity_Type_STATUS_ARM_UserAssigned               = Identity_Type_STATUS_ARM("UserAssigned")
)

// Mapping from string to Identity_Type_STATUS_ARM
var identity_Type_STATUS_ARM_Values = map[string]Identity_Type_STATUS_ARM{
	"none":                         Identity_Type_STATUS_ARM_None,
	"systemassigned":               Identity_Type_STATUS_ARM_SystemAssigned,
	"systemassigned, userassigned": Identity_Type_STATUS_ARM_SystemAssignedUserAssigned,
	"userassigned":                 Identity_Type_STATUS_ARM_UserAssigned,
}

// Properties of the PrivateEndpointConnection.
type PrivateEndpointConnection_STATUS_ARM struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`
}

type Sku_Name_STATUS_ARM string

const (
	Sku_Name_STATUS_ARM_Basic    = Sku_Name_STATUS_ARM("Basic")
	Sku_Name_STATUS_ARM_Premium  = Sku_Name_STATUS_ARM("Premium")
	Sku_Name_STATUS_ARM_Standard = Sku_Name_STATUS_ARM("Standard")
)

// Mapping from string to Sku_Name_STATUS_ARM
var sku_Name_STATUS_ARM_Values = map[string]Sku_Name_STATUS_ARM{
	"basic":    Sku_Name_STATUS_ARM_Basic,
	"premium":  Sku_Name_STATUS_ARM_Premium,
	"standard": Sku_Name_STATUS_ARM_Standard,
}

type Sku_Tier_STATUS_ARM string

const (
	Sku_Tier_STATUS_ARM_Basic    = Sku_Tier_STATUS_ARM("Basic")
	Sku_Tier_STATUS_ARM_Premium  = Sku_Tier_STATUS_ARM("Premium")
	Sku_Tier_STATUS_ARM_Standard = Sku_Tier_STATUS_ARM("Standard")
)

// Mapping from string to Sku_Tier_STATUS_ARM
var sku_Tier_STATUS_ARM_Values = map[string]Sku_Tier_STATUS_ARM{
	"basic":    Sku_Tier_STATUS_ARM_Basic,
	"premium":  Sku_Tier_STATUS_ARM_Premium,
	"standard": Sku_Tier_STATUS_ARM_Standard,
}

type SystemData_CreatedByType_STATUS_ARM string

const (
	SystemData_CreatedByType_STATUS_ARM_Application     = SystemData_CreatedByType_STATUS_ARM("Application")
	SystemData_CreatedByType_STATUS_ARM_Key             = SystemData_CreatedByType_STATUS_ARM("Key")
	SystemData_CreatedByType_STATUS_ARM_ManagedIdentity = SystemData_CreatedByType_STATUS_ARM("ManagedIdentity")
	SystemData_CreatedByType_STATUS_ARM_User            = SystemData_CreatedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_CreatedByType_STATUS_ARM
var systemData_CreatedByType_STATUS_ARM_Values = map[string]SystemData_CreatedByType_STATUS_ARM{
	"application":     SystemData_CreatedByType_STATUS_ARM_Application,
	"key":             SystemData_CreatedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_CreatedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_CreatedByType_STATUS_ARM_User,
}

type SystemData_LastModifiedByType_STATUS_ARM string

const (
	SystemData_LastModifiedByType_STATUS_ARM_Application     = SystemData_LastModifiedByType_STATUS_ARM("Application")
	SystemData_LastModifiedByType_STATUS_ARM_Key             = SystemData_LastModifiedByType_STATUS_ARM("Key")
	SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity = SystemData_LastModifiedByType_STATUS_ARM("ManagedIdentity")
	SystemData_LastModifiedByType_STATUS_ARM_User            = SystemData_LastModifiedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_LastModifiedByType_STATUS_ARM
var systemData_LastModifiedByType_STATUS_ARM_Values = map[string]SystemData_LastModifiedByType_STATUS_ARM{
	"application":     SystemData_LastModifiedByType_STATUS_ARM_Application,
	"key":             SystemData_LastModifiedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_LastModifiedByType_STATUS_ARM_User,
}

// Recognized Dictionary value.
type UserAssignedIdentity_STATUS_ARM struct {
	// ClientId: Client Id of user assigned identity
	ClientId *string `json:"clientId,omitempty"`

	// PrincipalId: Principal Id of user assigned identity
	PrincipalId *string `json:"principalId,omitempty"`
}

type Encryption_KeySource_STATUS_ARM string

const Encryption_KeySource_STATUS_ARM_MicrosoftKeyVault = Encryption_KeySource_STATUS_ARM("Microsoft.KeyVault")

// Mapping from string to Encryption_KeySource_STATUS_ARM
var encryption_KeySource_STATUS_ARM_Values = map[string]Encryption_KeySource_STATUS_ARM{
	"microsoft.keyvault": Encryption_KeySource_STATUS_ARM_MicrosoftKeyVault,
}

// Properties to configure keyVault Properties
type KeyVaultProperties_STATUS_ARM struct {
	Identity *UserAssignedIdentityProperties_STATUS_ARM `json:"identity,omitempty"`

	// KeyName: Name of the Key from KeyVault
	KeyName *string `json:"keyName,omitempty"`

	// KeyVaultUri: Uri of KeyVault
	KeyVaultUri *string `json:"keyVaultUri,omitempty"`

	// KeyVersion: Key Version
	KeyVersion *string `json:"keyVersion,omitempty"`
}

type UserAssignedIdentityProperties_STATUS_ARM struct {
	// UserAssignedIdentity: ARM ID of user Identity selected for encryption
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`
}
