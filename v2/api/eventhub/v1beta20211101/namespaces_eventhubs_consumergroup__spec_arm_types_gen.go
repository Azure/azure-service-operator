// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type NamespacesEventhubsConsumergroup_SpecARM struct {
	AzureName string `json:"azureName,omitempty"`

	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Location: The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Name: The name of the resource
	Name string `json:"name,omitempty"`

	// Properties: Single item in List or Get Consumer group operation
	Properties *NamespacesEventhubsConsumergroup_Spec_PropertiesARM `json:"properties,omitempty"`

	// SystemData: The system meta data relating to this resource.
	SystemData *SystemDataARM `json:"systemData,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
	Type *string `json:"type,omitempty"`
}

var _ genruntime.ARMResourceSpec = &NamespacesEventhubsConsumergroup_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (consumergroup NamespacesEventhubsConsumergroup_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (consumergroup *NamespacesEventhubsConsumergroup_SpecARM) GetName() string {
	return consumergroup.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (consumergroup *NamespacesEventhubsConsumergroup_SpecARM) GetType() string {
	return ""
}

type NamespacesEventhubsConsumergroup_Spec_PropertiesARM struct {
	// CreatedAt: Exact time the message was created.
	CreatedAt *string `json:"createdAt,omitempty"`

	// UpdatedAt: The exact time the message was updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`

	// UserMetadata: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be
	// used to store descriptive data, such as list of teams and their contact information also user-defined configuration
	// settings can be stored.
	UserMetadata *string `json:"userMetadata,omitempty"`
}
