// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201101

import "github.com/Azure/azure-service-operator/hack/generated/pkg/genruntime"

type VirtualNetworkGateways_SpecARM struct {
	//APIVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	APIVersion VirtualNetworkGatewaysSpecAPIVersion `json:"apiVersion"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	//Name: Name of the resource
	Name string `json:"name"`

	//Properties: Properties of the virtual network gateway.
	Properties VirtualNetworkGateways_Spec_PropertiesARM `json:"properties"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type
	Type VirtualNetworkGatewaysSpecType `json:"type"`
}

var _ genruntime.ARMResourceSpec = &VirtualNetworkGateways_SpecARM{}

// GetAPIVersion returns the APIVersion of the resource
func (virtualNetworkGatewaysSpecARM VirtualNetworkGateways_SpecARM) GetAPIVersion() string {
	return string(virtualNetworkGatewaysSpecARM.APIVersion)
}

// GetName returns the Name of the resource
func (virtualNetworkGatewaysSpecARM VirtualNetworkGateways_SpecARM) GetName() string {
	return virtualNetworkGatewaysSpecARM.Name
}

// GetType returns the Type of the resource
func (virtualNetworkGatewaysSpecARM VirtualNetworkGateways_SpecARM) GetType() string {
	return string(virtualNetworkGatewaysSpecARM.Type)
}

// +kubebuilder:validation:Enum={"2020-11-01"}
type VirtualNetworkGatewaysSpecAPIVersion string

const VirtualNetworkGatewaysSpecAPIVersion20201101 = VirtualNetworkGatewaysSpecAPIVersion("2020-11-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/virtualNetworkGateways"}
type VirtualNetworkGatewaysSpecType string

const VirtualNetworkGatewaysSpecTypeMicrosoftNetworkVirtualNetworkGateways = VirtualNetworkGatewaysSpecType("Microsoft.Network/virtualNetworkGateways")

type VirtualNetworkGateways_Spec_PropertiesARM struct {
	//ActiveActive: ActiveActive flag.
	ActiveActive *bool `json:"activeActive,omitempty"`

	//BgpSettings: Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsARM `json:"bgpSettings,omitempty"`

	//CustomRoutes: The reference to the address space resource which represents the
	//custom routes address space specified by the customer for virtual network
	//gateway and VpnClient.
	CustomRoutes *AddressSpaceARM `json:"customRoutes,omitempty"`

	//EnableBgp: Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `json:"enableBgp,omitempty"`

	//EnableDnsForwarding: Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `json:"enableDnsForwarding,omitempty"`

	//EnablePrivateIpAddress: Whether private IP needs to be enabled on this gateway
	//for connections or not.
	EnablePrivateIpAddress *bool `json:"enablePrivateIpAddress,omitempty"`

	//GatewayDefaultSite: The reference to the LocalNetworkGateway resource which
	//represents local network site having default routes. Assign Null value in case
	//of removing existing default site setting.
	GatewayDefaultSite *SubResourceARM `json:"gatewayDefaultSite,omitempty"`

	//GatewayType: The type of this virtual network gateway.
	GatewayType *VirtualNetworkGatewaysSpecPropertiesGatewayType `json:"gatewayType,omitempty"`

	//IpConfigurations: IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM `json:"ipConfigurations,omitempty"`

	//Sku: The reference to the VirtualNetworkGatewaySku resource which represents the
	//SKU selected for Virtual network gateway.
	Sku                            *VirtualNetworkGatewaySkuARM `json:"sku,omitempty"`
	VNetExtendedLocationResourceId *string                      `json:"vNetExtendedLocationResourceId,omitempty"`

	//VirtualNetworkExtendedLocation: The extended location of type local virtual
	//network gateway.
	VirtualNetworkExtendedLocation *ExtendedLocationARM `json:"virtualNetworkExtendedLocation,omitempty"`

	//VpnClientConfiguration: The reference to the VpnClientConfiguration resource
	//which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM `json:"vpnClientConfiguration,omitempty"`

	//VpnGatewayGeneration: The generation for this VirtualNetworkGateway. Must be
	//None if gatewayType is not VPN.
	VpnGatewayGeneration *VirtualNetworkGatewaysSpecPropertiesVpnGatewayGeneration `json:"vpnGatewayGeneration,omitempty"`

	//VpnType: The type of this virtual network gateway.
	VpnType *VirtualNetworkGatewaysSpecPropertiesVpnType `json:"vpnType,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/AddressSpace
type AddressSpaceARM struct {
	//AddressPrefixes: A list of address blocks reserved for this virtual network in
	//CIDR notation.
	AddressPrefixes []string `json:"addressPrefixes"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/BgpSettings
type BgpSettingsARM struct {
	//Asn: The BGP speaker's ASN.
	Asn *uint32 `json:"asn,omitempty"`

	//BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP
	//speaker.
	BgpPeeringAddress *string `json:"bgpPeeringAddress,omitempty"`

	//BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual
	//network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddressARM `json:"bgpPeeringAddresses,omitempty"`

	//PeerWeight: The weight added to routes learned from this BGP speaker.
	PeerWeight *int `json:"peerWeight,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkGatewaySku
type VirtualNetworkGatewaySkuARM struct {
	//Name: Gateway SKU name.
	Name *VirtualNetworkGatewaySkuName `json:"name,omitempty"`

	//Tier: Gateway SKU tier.
	Tier *VirtualNetworkGatewaySkuTier `json:"tier,omitempty"`
}

type VirtualNetworkGateways_Spec_Properties_IpConfigurationsARM struct {
	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the virtual network gateway ip configuration.
	Properties *VirtualNetworkGatewayIPConfigurationPropertiesFormatARM `json:"properties,omitempty"`
}

type VirtualNetworkGateways_Spec_Properties_VpnClientConfigurationARM struct {
	//AadAudience: The AADAudience property of the VirtualNetworkGateway resource for
	//vpn client connection used for AAD authentication.
	AadAudience *string `json:"aadAudience,omitempty"`

	//AadIssuer: The AADIssuer property of the VirtualNetworkGateway resource for vpn
	//client connection used for AAD authentication.
	AadIssuer *string `json:"aadIssuer,omitempty"`

	//AadTenant: The AADTenant property of the VirtualNetworkGateway resource for vpn
	//client connection used for AAD authentication.
	AadTenant *string `json:"aadTenant,omitempty"`

	//RadiusServerAddress: The radius server address property of the
	//VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `json:"radiusServerAddress,omitempty"`

	//RadiusServerSecret: The radius secret property of the VirtualNetworkGateway
	//resource for vpn client connection.
	RadiusServerSecret *string `json:"radiusServerSecret,omitempty"`

	//RadiusServers: The radiusServers property for multiple radius server
	//configuration.
	RadiusServers []RadiusServerARM `json:"radiusServers,omitempty"`

	//VpnAuthenticationTypes: VPN authentication types for the virtual network
	//gateway..
	VpnAuthenticationTypes []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnAuthenticationTypes `json:"vpnAuthenticationTypes,omitempty"`

	//VpnClientAddressPool: The reference to the address space resource which
	//represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceARM `json:"vpnClientAddressPool,omitempty"`

	//VpnClientIpsecPolicies: VpnClientIpsecPolicies for virtual network gateway P2S
	//client.
	VpnClientIpsecPolicies []IpsecPolicyARM `json:"vpnClientIpsecPolicies,omitempty"`

	//VpnClientProtocols: VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []VirtualNetworkGatewaysSpecPropertiesVpnClientConfigurationVpnClientProtocols `json:"vpnClientProtocols,omitempty"`

	//VpnClientRevokedCertificates: VpnClientRevokedCertificate for Virtual network
	//gateway.
	VpnClientRevokedCertificates []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM `json:"vpnClientRevokedCertificates,omitempty"`

	//VpnClientRootCertificates: VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM `json:"vpnClientRootCertificates,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IPConfigurationBgpPeeringAddress
type IPConfigurationBgpPeeringAddressARM struct {
	//CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to
	//IP configuration.
	CustomBgpIpAddresses []string `json:"customBgpIpAddresses,omitempty"`

	//IpconfigurationId: The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `json:"ipconfigurationId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/IpsecPolicy
type IpsecPolicyARM struct {
	//DhGroup: The DH Group used in IKE Phase 1 for initial SA.
	DhGroup IpsecPolicyDhGroup `json:"dhGroup"`

	//IkeEncryption: The IKE encryption algorithm (IKE phase 2).
	IkeEncryption IpsecPolicyIkeEncryption `json:"ikeEncryption"`

	//IkeIntegrity: The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity IpsecPolicyIkeIntegrity `json:"ikeIntegrity"`

	//IpsecEncryption: The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption IpsecPolicyIpsecEncryption `json:"ipsecEncryption"`

	//IpsecIntegrity: The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity IpsecPolicyIpsecIntegrity `json:"ipsecIntegrity"`

	//PfsGroup: The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup IpsecPolicyPfsGroup `json:"pfsGroup"`

	//SaDataSizeKilobytes: The IPSec Security Association (also called Quick Mode or
	//Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `json:"saDataSizeKilobytes"`

	//SaLifeTimeSeconds: The IPSec Security Association (also called Quick Mode or
	//Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `json:"saLifeTimeSeconds"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/RadiusServer
type RadiusServerARM struct {
	//RadiusServerAddress: The address of this radius server.
	RadiusServerAddress string `json:"radiusServerAddress"`

	//RadiusServerScore: The initial score assigned to this radius server.
	RadiusServerScore *int `json:"radiusServerScore,omitempty"`

	//RadiusServerSecret: The secret used for this radius server.
	RadiusServerSecret *string `json:"radiusServerSecret,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat
type VirtualNetworkGatewayIPConfigurationPropertiesFormatARM struct {
	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *VirtualNetworkGatewayIPConfigurationPropertiesFormatPrivateIPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`

	//PublicIPAddress: The reference to the public IP resource.
	PublicIPAddress *SubResourceARM `json:"publicIPAddress,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *SubResourceARM `json:"subnet,omitempty"`
}

type VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRevokedCertificatesARM struct {
	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the vpn client revoked certificate.
	Properties *VpnClientRevokedCertificatePropertiesFormatARM `json:"properties,omitempty"`
}

type VirtualNetworkGateways_Spec_Properties_VpnClientConfiguration_VpnClientRootCertificatesARM struct {
	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the vpn client root certificate.
	Properties VpnClientRootCertificatePropertiesFormatARM `json:"properties"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VpnClientRevokedCertificatePropertiesFormat
type VpnClientRevokedCertificatePropertiesFormatARM struct {
	//Thumbprint: The revoked VPN client certificate thumbprint.
	Thumbprint *string `json:"thumbprint,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/VpnClientRootCertificatePropertiesFormat
type VpnClientRootCertificatePropertiesFormatARM struct {
	//PublicCertData: The certificate public data.
	PublicCertData string `json:"publicCertData"`
}
