// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type RouteTablesRoutes_SpecARM struct {
	//Location: Location to deploy resource to
	Location *string `json:"location,omitempty"`

	//Name: Name of the resource
	Name string `json:"name"`

	//Properties: Properties of the route.
	Properties RoutePropertiesFormatARM `json:"properties"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &RouteTablesRoutes_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-11-01"
func (routeTablesRoutesSpecARM RouteTablesRoutes_SpecARM) GetAPIVersion() string {
	return "2020-11-01"
}

// GetName returns the Name of the resource
func (routeTablesRoutesSpecARM RouteTablesRoutes_SpecARM) GetName() string {
	return routeTablesRoutesSpecARM.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/routeTables/routes"
func (routeTablesRoutesSpecARM RouteTablesRoutes_SpecARM) GetType() string {
	return "Microsoft.Network/routeTables/routes"
}

//Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/RoutePropertiesFormat
type RoutePropertiesFormatARM struct {
	//AddressPrefix: The destination CIDR to which the route applies.
	AddressPrefix string `json:"addressPrefix"`

	//HasBgpOverride: A value indicating whether this route overrides overlapping BGP
	//routes regardless of LPM.
	HasBgpOverride *bool `json:"hasBgpOverride,omitempty"`

	//NextHopIpAddress: The IP address packets should be forwarded to. Next hop values
	//are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `json:"nextHopIpAddress,omitempty"`

	//NextHopType: The type of Azure hop the packet should be sent to.
	NextHopType RoutePropertiesFormatNextHopType `json:"nextHopType"`
}
