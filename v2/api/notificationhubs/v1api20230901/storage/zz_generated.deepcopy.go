//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmCredential) DeepCopyInto(out *AdmCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(AdmCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmCredential.
func (in *AdmCredential) DeepCopy() *AdmCredential {
	if in == nil {
		return nil
	}
	out := new(AdmCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmCredentialProperties) DeepCopyInto(out *AdmCredentialProperties) {
	*out = *in
	if in.AuthTokenUrl != nil {
		in, out := &in.AuthTokenUrl, &out.AuthTokenUrl
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmCredentialProperties.
func (in *AdmCredentialProperties) DeepCopy() *AdmCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(AdmCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmCredentialProperties_STATUS) DeepCopyInto(out *AdmCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmCredentialProperties_STATUS.
func (in *AdmCredentialProperties_STATUS) DeepCopy() *AdmCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(AdmCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdmCredential_STATUS) DeepCopyInto(out *AdmCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(AdmCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdmCredential_STATUS.
func (in *AdmCredential_STATUS) DeepCopy() *AdmCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(AdmCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApnsCredential) DeepCopyInto(out *ApnsCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ApnsCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApnsCredential.
func (in *ApnsCredential) DeepCopy() *ApnsCredential {
	if in == nil {
		return nil
	}
	out := new(ApnsCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApnsCredentialProperties) DeepCopyInto(out *ApnsCredentialProperties) {
	*out = *in
	if in.ApnsCertificate != nil {
		in, out := &in.ApnsCertificate, &out.ApnsCertificate
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.AppId != nil {
		in, out := &in.AppId, &out.AppId
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.AppName != nil {
		in, out := &in.AppName, &out.AppName
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.CertificateKey != nil {
		in, out := &in.CertificateKey, &out.CertificateKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.KeyId != nil {
		in, out := &in.KeyId, &out.KeyId
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(genruntime.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApnsCredentialProperties.
func (in *ApnsCredentialProperties) DeepCopy() *ApnsCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(ApnsCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApnsCredentialProperties_STATUS) DeepCopyInto(out *ApnsCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApnsCredentialProperties_STATUS.
func (in *ApnsCredentialProperties_STATUS) DeepCopy() *ApnsCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(ApnsCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApnsCredential_STATUS) DeepCopyInto(out *ApnsCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ApnsCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApnsCredential_STATUS.
func (in *ApnsCredential_STATUS) DeepCopy() *ApnsCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(ApnsCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaiduCredential) DeepCopyInto(out *BaiduCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(BaiduCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaiduCredential.
func (in *BaiduCredential) DeepCopy() *BaiduCredential {
	if in == nil {
		return nil
	}
	out := new(BaiduCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaiduCredentialProperties) DeepCopyInto(out *BaiduCredentialProperties) {
	*out = *in
	if in.BaiduApiKey != nil {
		in, out := &in.BaiduApiKey, &out.BaiduApiKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.BaiduEndPoint != nil {
		in, out := &in.BaiduEndPoint, &out.BaiduEndPoint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.BaiduSecretKey != nil {
		in, out := &in.BaiduSecretKey, &out.BaiduSecretKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaiduCredentialProperties.
func (in *BaiduCredentialProperties) DeepCopy() *BaiduCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(BaiduCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaiduCredentialProperties_STATUS) DeepCopyInto(out *BaiduCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaiduCredentialProperties_STATUS.
func (in *BaiduCredentialProperties_STATUS) DeepCopy() *BaiduCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(BaiduCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaiduCredential_STATUS) DeepCopyInto(out *BaiduCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(BaiduCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaiduCredential_STATUS.
func (in *BaiduCredential_STATUS) DeepCopy() *BaiduCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(BaiduCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserCredential) DeepCopyInto(out *BrowserCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(BrowserCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserCredential.
func (in *BrowserCredential) DeepCopy() *BrowserCredential {
	if in == nil {
		return nil
	}
	out := new(BrowserCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserCredentialProperties) DeepCopyInto(out *BrowserCredentialProperties) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.VapidPrivateKey != nil {
		in, out := &in.VapidPrivateKey, &out.VapidPrivateKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.VapidPublicKey != nil {
		in, out := &in.VapidPublicKey, &out.VapidPublicKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserCredentialProperties.
func (in *BrowserCredentialProperties) DeepCopy() *BrowserCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(BrowserCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserCredentialProperties_STATUS) DeepCopyInto(out *BrowserCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserCredentialProperties_STATUS.
func (in *BrowserCredentialProperties_STATUS) DeepCopy() *BrowserCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(BrowserCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserCredential_STATUS) DeepCopyInto(out *BrowserCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(BrowserCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserCredential_STATUS.
func (in *BrowserCredential_STATUS) DeepCopy() *BrowserCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(BrowserCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcmCredential) DeepCopyInto(out *GcmCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(GcmCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcmCredential.
func (in *GcmCredential) DeepCopy() *GcmCredential {
	if in == nil {
		return nil
	}
	out := new(GcmCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcmCredentialProperties) DeepCopyInto(out *GcmCredentialProperties) {
	*out = *in
	if in.GcmEndpoint != nil {
		in, out := &in.GcmEndpoint, &out.GcmEndpoint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.GoogleApiKey != nil {
		in, out := &in.GoogleApiKey, &out.GoogleApiKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcmCredentialProperties.
func (in *GcmCredentialProperties) DeepCopy() *GcmCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(GcmCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcmCredentialProperties_STATUS) DeepCopyInto(out *GcmCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcmCredentialProperties_STATUS.
func (in *GcmCredentialProperties_STATUS) DeepCopy() *GcmCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(GcmCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcmCredential_STATUS) DeepCopyInto(out *GcmCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(GcmCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcmCredential_STATUS.
func (in *GcmCredential_STATUS) DeepCopy() *GcmCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(GcmCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpRule) DeepCopyInto(out *IpRule) {
	*out = *in
	if in.IpMask != nil {
		in, out := &in.IpMask, &out.IpMask
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpRule.
func (in *IpRule) DeepCopy() *IpRule {
	if in == nil {
		return nil
	}
	out := new(IpRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpRule_STATUS) DeepCopyInto(out *IpRule_STATUS) {
	*out = *in
	if in.IpMask != nil {
		in, out := &in.IpMask, &out.IpMask
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpRule_STATUS.
func (in *IpRule_STATUS) DeepCopy() *IpRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(IpRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MpnsCredential) DeepCopyInto(out *MpnsCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(MpnsCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpnsCredential.
func (in *MpnsCredential) DeepCopy() *MpnsCredential {
	if in == nil {
		return nil
	}
	out := new(MpnsCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MpnsCredentialProperties) DeepCopyInto(out *MpnsCredentialProperties) {
	*out = *in
	if in.CertificateKey != nil {
		in, out := &in.CertificateKey, &out.CertificateKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.MpnsCertificate != nil {
		in, out := &in.MpnsCertificate, &out.MpnsCertificate
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpnsCredentialProperties.
func (in *MpnsCredentialProperties) DeepCopy() *MpnsCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(MpnsCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MpnsCredentialProperties_STATUS) DeepCopyInto(out *MpnsCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpnsCredentialProperties_STATUS.
func (in *MpnsCredentialProperties_STATUS) DeepCopy() *MpnsCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(MpnsCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MpnsCredential_STATUS) DeepCopyInto(out *MpnsCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(MpnsCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpnsCredential_STATUS.
func (in *MpnsCredential_STATUS) DeepCopy() *MpnsCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(MpnsCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace) DeepCopyInto(out *Namespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace.
func (in *Namespace) DeepCopy() *Namespace {
	if in == nil {
		return nil
	}
	out := new(Namespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Namespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceList) DeepCopyInto(out *NamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Namespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceList.
func (in *NamespaceList) DeepCopy() *NamespaceList {
	if in == nil {
		return nil
	}
	out := new(NamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOperatorConfigMaps) DeepCopyInto(out *NamespaceOperatorConfigMaps) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceBusEndpoint != nil {
		in, out := &in.ServiceBusEndpoint, &out.ServiceBusEndpoint
		*out = new(genruntime.ConfigMapDestination)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOperatorConfigMaps.
func (in *NamespaceOperatorConfigMaps) DeepCopy() *NamespaceOperatorConfigMaps {
	if in == nil {
		return nil
	}
	out := new(NamespaceOperatorConfigMaps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOperatorSecrets) DeepCopyInto(out *NamespaceOperatorSecrets) {
	*out = *in
	if in.PrimaryConnectionString != nil {
		in, out := &in.PrimaryConnectionString, &out.PrimaryConnectionString
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecondaryConnectionString != nil {
		in, out := &in.SecondaryConnectionString, &out.SecondaryConnectionString
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.SecondaryKey != nil {
		in, out := &in.SecondaryKey, &out.SecondaryKey
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOperatorSecrets.
func (in *NamespaceOperatorSecrets) DeepCopy() *NamespaceOperatorSecrets {
	if in == nil {
		return nil
	}
	out := new(NamespaceOperatorSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOperatorSpec) DeepCopyInto(out *NamespaceOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = new(NamespaceOperatorConfigMaps)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = new(NamespaceOperatorSecrets)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOperatorSpec.
func (in *NamespaceOperatorSpec) DeepCopy() *NamespaceOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceProperties) DeepCopyInto(out *NamespaceProperties) {
	*out = *in
	if in.DataCenter != nil {
		in, out := &in.DataCenter, &out.DataCenter
		*out = new(string)
		**out = **in
	}
	if in.NamespaceType != nil {
		in, out := &in.NamespaceType, &out.NamespaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkAcls)
		(*in).DeepCopyInto(*out)
	}
	if in.PnsCredentials != nil {
		in, out := &in.PnsCredentials, &out.PnsCredentials
		*out = new(PnsCredentials)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.ReplicationRegion != nil {
		in, out := &in.ReplicationRegion, &out.ReplicationRegion
		*out = new(string)
		**out = **in
	}
	if in.ScaleUnit != nil {
		in, out := &in.ScaleUnit, &out.ScaleUnit
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundancy != nil {
		in, out := &in.ZoneRedundancy, &out.ZoneRedundancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceProperties.
func (in *NamespaceProperties) DeepCopy() *NamespaceProperties {
	if in == nil {
		return nil
	}
	out := new(NamespaceProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceProperties_STATUS) DeepCopyInto(out *NamespaceProperties_STATUS) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Critical != nil {
		in, out := &in.Critical, &out.Critical
		*out = new(bool)
		**out = **in
	}
	if in.DataCenter != nil {
		in, out := &in.DataCenter, &out.DataCenter
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MetricId != nil {
		in, out := &in.MetricId, &out.MetricId
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceType != nil {
		in, out := &in.NamespaceType, &out.NamespaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkAcls_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PnsCredentials != nil {
		in, out := &in.PnsCredentials, &out.PnsCredentials
		*out = new(PnsCredentials_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateEndpointConnections != nil {
		in, out := &in.PrivateEndpointConnections, &out.PrivateEndpointConnections
		*out = make([]PrivateEndpointConnectionResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplicationRegion != nil {
		in, out := &in.ReplicationRegion, &out.ReplicationRegion
		*out = new(string)
		**out = **in
	}
	if in.ScaleUnit != nil {
		in, out := &in.ScaleUnit, &out.ScaleUnit
		*out = new(string)
		**out = **in
	}
	if in.ServiceBusEndpoint != nil {
		in, out := &in.ServiceBusEndpoint, &out.ServiceBusEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionId != nil {
		in, out := &in.SubscriptionId, &out.SubscriptionId
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundancy != nil {
		in, out := &in.ZoneRedundancy, &out.ZoneRedundancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceProperties_STATUS.
func (in *NamespaceProperties_STATUS) DeepCopy() *NamespaceProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(NamespaceProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_STATUS) DeepCopyInto(out *Namespace_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(NamespaceProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_STATUS.
func (in *Namespace_STATUS) DeepCopy() *Namespace_STATUS {
	if in == nil {
		return nil
	}
	out := new(Namespace_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace_Spec) DeepCopyInto(out *Namespace_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NamespaceOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(NamespaceProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace_Spec.
func (in *Namespace_Spec) DeepCopy() *Namespace_Spec {
	if in == nil {
		return nil
	}
	out := new(Namespace_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesAuthorizationRule) DeepCopyInto(out *NamespacesAuthorizationRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesAuthorizationRule.
func (in *NamespacesAuthorizationRule) DeepCopy() *NamespacesAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(NamespacesAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespacesAuthorizationRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesAuthorizationRuleList) DeepCopyInto(out *NamespacesAuthorizationRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespacesAuthorizationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesAuthorizationRuleList.
func (in *NamespacesAuthorizationRuleList) DeepCopy() *NamespacesAuthorizationRuleList {
	if in == nil {
		return nil
	}
	out := new(NamespacesAuthorizationRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespacesAuthorizationRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesAuthorizationRuleOperatorSpec) DeepCopyInto(out *NamespacesAuthorizationRuleOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesAuthorizationRuleOperatorSpec.
func (in *NamespacesAuthorizationRuleOperatorSpec) DeepCopy() *NamespacesAuthorizationRuleOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NamespacesAuthorizationRuleOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesAuthorizationRule_STATUS) DeepCopyInto(out *NamespacesAuthorizationRule_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(SharedAccessAuthorizationRuleProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesAuthorizationRule_STATUS.
func (in *NamespacesAuthorizationRule_STATUS) DeepCopy() *NamespacesAuthorizationRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(NamespacesAuthorizationRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesAuthorizationRule_Spec) DeepCopyInto(out *NamespacesAuthorizationRule_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NamespacesAuthorizationRuleOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(SharedAccessAuthorizationRuleProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesAuthorizationRule_Spec.
func (in *NamespacesAuthorizationRule_Spec) DeepCopy() *NamespacesAuthorizationRule_Spec {
	if in == nil {
		return nil
	}
	out := new(NamespacesAuthorizationRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAcls) DeepCopyInto(out *NetworkAcls) {
	*out = *in
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IpRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicNetworkRule != nil {
		in, out := &in.PublicNetworkRule, &out.PublicNetworkRule
		*out = new(PublicInternetAuthorizationRule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAcls.
func (in *NetworkAcls) DeepCopy() *NetworkAcls {
	if in == nil {
		return nil
	}
	out := new(NetworkAcls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkAcls_STATUS) DeepCopyInto(out *NetworkAcls_STATUS) {
	*out = *in
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IpRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicNetworkRule != nil {
		in, out := &in.PublicNetworkRule, &out.PublicNetworkRule
		*out = new(PublicInternetAuthorizationRule_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkAcls_STATUS.
func (in *NetworkAcls_STATUS) DeepCopy() *NetworkAcls_STATUS {
	if in == nil {
		return nil
	}
	out := new(NetworkAcls_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHub) DeepCopyInto(out *NotificationHub) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHub.
func (in *NotificationHub) DeepCopy() *NotificationHub {
	if in == nil {
		return nil
	}
	out := new(NotificationHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationHub) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubList) DeepCopyInto(out *NotificationHubList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationHub, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubList.
func (in *NotificationHubList) DeepCopy() *NotificationHubList {
	if in == nil {
		return nil
	}
	out := new(NotificationHubList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationHubList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubOperatorSecrets) DeepCopyInto(out *NotificationHubOperatorSecrets) {
	*out = *in
	if in.PrimaryConnectionString != nil {
		in, out := &in.PrimaryConnectionString, &out.PrimaryConnectionString
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecondaryConnectionString != nil {
		in, out := &in.SecondaryConnectionString, &out.SecondaryConnectionString
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
	if in.SecondaryKey != nil {
		in, out := &in.SecondaryKey, &out.SecondaryKey
		*out = new(genruntime.SecretDestination)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubOperatorSecrets.
func (in *NotificationHubOperatorSecrets) DeepCopy() *NotificationHubOperatorSecrets {
	if in == nil {
		return nil
	}
	out := new(NotificationHubOperatorSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubOperatorSpec) DeepCopyInto(out *NotificationHubOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = new(NotificationHubOperatorSecrets)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubOperatorSpec.
func (in *NotificationHubOperatorSpec) DeepCopy() *NotificationHubOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationHubOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubProperties) DeepCopyInto(out *NotificationHubProperties) {
	*out = *in
	if in.AdmCredential != nil {
		in, out := &in.AdmCredential, &out.AdmCredential
		*out = new(AdmCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.ApnsCredential != nil {
		in, out := &in.ApnsCredential, &out.ApnsCredential
		*out = new(ApnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.BaiduCredential != nil {
		in, out := &in.BaiduCredential, &out.BaiduCredential
		*out = new(BaiduCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserCredential != nil {
		in, out := &in.BrowserCredential, &out.BrowserCredential
		*out = new(BrowserCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.GcmCredential != nil {
		in, out := &in.GcmCredential, &out.GcmCredential
		*out = new(GcmCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.MpnsCredential != nil {
		in, out := &in.MpnsCredential, &out.MpnsCredential
		*out = new(MpnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RegistrationTtl != nil {
		in, out := &in.RegistrationTtl, &out.RegistrationTtl
		*out = new(string)
		**out = **in
	}
	if in.WnsCredential != nil {
		in, out := &in.WnsCredential, &out.WnsCredential
		*out = new(WnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.XiaomiCredential != nil {
		in, out := &in.XiaomiCredential, &out.XiaomiCredential
		*out = new(XiaomiCredential)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubProperties.
func (in *NotificationHubProperties) DeepCopy() *NotificationHubProperties {
	if in == nil {
		return nil
	}
	out := new(NotificationHubProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubProperties_STATUS) DeepCopyInto(out *NotificationHubProperties_STATUS) {
	*out = *in
	if in.AdmCredential != nil {
		in, out := &in.AdmCredential, &out.AdmCredential
		*out = new(AdmCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ApnsCredential != nil {
		in, out := &in.ApnsCredential, &out.ApnsCredential
		*out = new(ApnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizationRules != nil {
		in, out := &in.AuthorizationRules, &out.AuthorizationRules
		*out = make([]SharedAccessAuthorizationRuleProperties_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaiduCredential != nil {
		in, out := &in.BaiduCredential, &out.BaiduCredential
		*out = new(BaiduCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserCredential != nil {
		in, out := &in.BrowserCredential, &out.BrowserCredential
		*out = new(BrowserCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.DailyMaxActiveDevices != nil {
		in, out := &in.DailyMaxActiveDevices, &out.DailyMaxActiveDevices
		*out = new(int)
		**out = **in
	}
	if in.GcmCredential != nil {
		in, out := &in.GcmCredential, &out.GcmCredential
		*out = new(GcmCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.MpnsCredential != nil {
		in, out := &in.MpnsCredential, &out.MpnsCredential
		*out = new(MpnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RegistrationTtl != nil {
		in, out := &in.RegistrationTtl, &out.RegistrationTtl
		*out = new(string)
		**out = **in
	}
	if in.WnsCredential != nil {
		in, out := &in.WnsCredential, &out.WnsCredential
		*out = new(WnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.XiaomiCredential != nil {
		in, out := &in.XiaomiCredential, &out.XiaomiCredential
		*out = new(XiaomiCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubProperties_STATUS.
func (in *NotificationHubProperties_STATUS) DeepCopy() *NotificationHubProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(NotificationHubProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHub_STATUS) DeepCopyInto(out *NotificationHub_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(NotificationHubProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHub_STATUS.
func (in *NotificationHub_STATUS) DeepCopy() *NotificationHub_STATUS {
	if in == nil {
		return nil
	}
	out := new(NotificationHub_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHub_Spec) DeepCopyInto(out *NotificationHub_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NotificationHubOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(NotificationHubProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHub_Spec.
func (in *NotificationHub_Spec) DeepCopy() *NotificationHub_Spec {
	if in == nil {
		return nil
	}
	out := new(NotificationHub_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubsAuthorizationRule) DeepCopyInto(out *NotificationHubsAuthorizationRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubsAuthorizationRule.
func (in *NotificationHubsAuthorizationRule) DeepCopy() *NotificationHubsAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(NotificationHubsAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationHubsAuthorizationRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubsAuthorizationRuleList) DeepCopyInto(out *NotificationHubsAuthorizationRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationHubsAuthorizationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubsAuthorizationRuleList.
func (in *NotificationHubsAuthorizationRuleList) DeepCopy() *NotificationHubsAuthorizationRuleList {
	if in == nil {
		return nil
	}
	out := new(NotificationHubsAuthorizationRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationHubsAuthorizationRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubsAuthorizationRuleOperatorSpec) DeepCopyInto(out *NotificationHubsAuthorizationRuleOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubsAuthorizationRuleOperatorSpec.
func (in *NotificationHubsAuthorizationRuleOperatorSpec) DeepCopy() *NotificationHubsAuthorizationRuleOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationHubsAuthorizationRuleOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubsAuthorizationRule_STATUS) DeepCopyInto(out *NotificationHubsAuthorizationRule_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(SharedAccessAuthorizationRuleProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubsAuthorizationRule_STATUS.
func (in *NotificationHubsAuthorizationRule_STATUS) DeepCopy() *NotificationHubsAuthorizationRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(NotificationHubsAuthorizationRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationHubsAuthorizationRule_Spec) DeepCopyInto(out *NotificationHubsAuthorizationRule_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NotificationHubsAuthorizationRuleOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(SharedAccessAuthorizationRuleProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationHubsAuthorizationRule_Spec.
func (in *NotificationHubsAuthorizationRule_Spec) DeepCopy() *NotificationHubsAuthorizationRule_Spec {
	if in == nil {
		return nil
	}
	out := new(NotificationHubsAuthorizationRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PnsCredentials) DeepCopyInto(out *PnsCredentials) {
	*out = *in
	if in.AdmCredential != nil {
		in, out := &in.AdmCredential, &out.AdmCredential
		*out = new(AdmCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.ApnsCredential != nil {
		in, out := &in.ApnsCredential, &out.ApnsCredential
		*out = new(ApnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.BaiduCredential != nil {
		in, out := &in.BaiduCredential, &out.BaiduCredential
		*out = new(BaiduCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserCredential != nil {
		in, out := &in.BrowserCredential, &out.BrowserCredential
		*out = new(BrowserCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.GcmCredential != nil {
		in, out := &in.GcmCredential, &out.GcmCredential
		*out = new(GcmCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.MpnsCredential != nil {
		in, out := &in.MpnsCredential, &out.MpnsCredential
		*out = new(MpnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WnsCredential != nil {
		in, out := &in.WnsCredential, &out.WnsCredential
		*out = new(WnsCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.XiaomiCredential != nil {
		in, out := &in.XiaomiCredential, &out.XiaomiCredential
		*out = new(XiaomiCredential)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PnsCredentials.
func (in *PnsCredentials) DeepCopy() *PnsCredentials {
	if in == nil {
		return nil
	}
	out := new(PnsCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PnsCredentials_STATUS) DeepCopyInto(out *PnsCredentials_STATUS) {
	*out = *in
	if in.AdmCredential != nil {
		in, out := &in.AdmCredential, &out.AdmCredential
		*out = new(AdmCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ApnsCredential != nil {
		in, out := &in.ApnsCredential, &out.ApnsCredential
		*out = new(ApnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BaiduCredential != nil {
		in, out := &in.BaiduCredential, &out.BaiduCredential
		*out = new(BaiduCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserCredential != nil {
		in, out := &in.BrowserCredential, &out.BrowserCredential
		*out = new(BrowserCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.GcmCredential != nil {
		in, out := &in.GcmCredential, &out.GcmCredential
		*out = new(GcmCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.MpnsCredential != nil {
		in, out := &in.MpnsCredential, &out.MpnsCredential
		*out = new(MpnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WnsCredential != nil {
		in, out := &in.WnsCredential, &out.WnsCredential
		*out = new(WnsCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.XiaomiCredential != nil {
		in, out := &in.XiaomiCredential, &out.XiaomiCredential
		*out = new(XiaomiCredential_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PnsCredentials_STATUS.
func (in *PnsCredentials_STATUS) DeepCopy() *PnsCredentials_STATUS {
	if in == nil {
		return nil
	}
	out := new(PnsCredentials_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointConnectionResource_STATUS) DeepCopyInto(out *PrivateEndpointConnectionResource_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointConnectionResource_STATUS.
func (in *PrivateEndpointConnectionResource_STATUS) DeepCopy() *PrivateEndpointConnectionResource_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointConnectionResource_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicInternetAuthorizationRule) DeepCopyInto(out *PublicInternetAuthorizationRule) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicInternetAuthorizationRule.
func (in *PublicInternetAuthorizationRule) DeepCopy() *PublicInternetAuthorizationRule {
	if in == nil {
		return nil
	}
	out := new(PublicInternetAuthorizationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicInternetAuthorizationRule_STATUS) DeepCopyInto(out *PublicInternetAuthorizationRule_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicInternetAuthorizationRule_STATUS.
func (in *PublicInternetAuthorizationRule_STATUS) DeepCopy() *PublicInternetAuthorizationRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicInternetAuthorizationRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedAccessAuthorizationRuleProperties) DeepCopyInto(out *SharedAccessAuthorizationRuleProperties) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedAccessAuthorizationRuleProperties.
func (in *SharedAccessAuthorizationRuleProperties) DeepCopy() *SharedAccessAuthorizationRuleProperties {
	if in == nil {
		return nil
	}
	out := new(SharedAccessAuthorizationRuleProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedAccessAuthorizationRuleProperties_STATUS) DeepCopyInto(out *SharedAccessAuthorizationRuleProperties_STATUS) {
	*out = *in
	if in.ClaimType != nil {
		in, out := &in.ClaimType, &out.ClaimType
		*out = new(string)
		**out = **in
	}
	if in.ClaimValue != nil {
		in, out := &in.ClaimValue, &out.ClaimValue
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.ModifiedTime != nil {
		in, out := &in.ModifiedTime, &out.ModifiedTime
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(int)
		**out = **in
	}
	if in.Rights != nil {
		in, out := &in.Rights, &out.Rights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedAccessAuthorizationRuleProperties_STATUS.
func (in *SharedAccessAuthorizationRuleProperties_STATUS) DeepCopy() *SharedAccessAuthorizationRuleProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(SharedAccessAuthorizationRuleProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku) DeepCopyInto(out *Sku) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku.
func (in *Sku) DeepCopy() *Sku {
	if in == nil {
		return nil
	}
	out := new(Sku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_STATUS) DeepCopyInto(out *Sku_STATUS) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_STATUS.
func (in *Sku_STATUS) DeepCopy() *Sku_STATUS {
	if in == nil {
		return nil
	}
	out := new(Sku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemData_STATUS) DeepCopyInto(out *SystemData_STATUS) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CreatedByType != nil {
		in, out := &in.CreatedByType, &out.CreatedByType
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedAt != nil {
		in, out := &in.LastModifiedAt, &out.LastModifiedAt
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedByType != nil {
		in, out := &in.LastModifiedByType, &out.LastModifiedByType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemData_STATUS.
func (in *SystemData_STATUS) DeepCopy() *SystemData_STATUS {
	if in == nil {
		return nil
	}
	out := new(SystemData_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WnsCredential) DeepCopyInto(out *WnsCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(WnsCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WnsCredential.
func (in *WnsCredential) DeepCopy() *WnsCredential {
	if in == nil {
		return nil
	}
	out := new(WnsCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WnsCredentialProperties) DeepCopyInto(out *WnsCredentialProperties) {
	*out = *in
	if in.CertificateKey != nil {
		in, out := &in.CertificateKey, &out.CertificateKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PackageSid != nil {
		in, out := &in.PackageSid, &out.PackageSid
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.WindowsLiveEndpoint != nil {
		in, out := &in.WindowsLiveEndpoint, &out.WindowsLiveEndpoint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.WnsCertificate != nil {
		in, out := &in.WnsCertificate, &out.WnsCertificate
		*out = new(genruntime.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WnsCredentialProperties.
func (in *WnsCredentialProperties) DeepCopy() *WnsCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(WnsCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WnsCredentialProperties_STATUS) DeepCopyInto(out *WnsCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WnsCredentialProperties_STATUS.
func (in *WnsCredentialProperties_STATUS) DeepCopy() *WnsCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(WnsCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WnsCredential_STATUS) DeepCopyInto(out *WnsCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(WnsCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WnsCredential_STATUS.
func (in *WnsCredential_STATUS) DeepCopy() *WnsCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(WnsCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XiaomiCredential) DeepCopyInto(out *XiaomiCredential) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(XiaomiCredentialProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XiaomiCredential.
func (in *XiaomiCredential) DeepCopy() *XiaomiCredential {
	if in == nil {
		return nil
	}
	out := new(XiaomiCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XiaomiCredentialProperties) DeepCopyInto(out *XiaomiCredentialProperties) {
	*out = *in
	if in.AppSecret != nil {
		in, out := &in.AppSecret, &out.AppSecret
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XiaomiCredentialProperties.
func (in *XiaomiCredentialProperties) DeepCopy() *XiaomiCredentialProperties {
	if in == nil {
		return nil
	}
	out := new(XiaomiCredentialProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XiaomiCredentialProperties_STATUS) DeepCopyInto(out *XiaomiCredentialProperties_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XiaomiCredentialProperties_STATUS.
func (in *XiaomiCredentialProperties_STATUS) DeepCopy() *XiaomiCredentialProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(XiaomiCredentialProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XiaomiCredential_STATUS) DeepCopyInto(out *XiaomiCredential_STATUS) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(XiaomiCredentialProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XiaomiCredential_STATUS.
func (in *XiaomiCredential_STATUS) DeepCopy() *XiaomiCredential_STATUS {
	if in == nil {
		return nil
	}
	out := new(XiaomiCredential_STATUS)
	in.DeepCopyInto(out)
	return out
}
