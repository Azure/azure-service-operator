// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200801preview

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type RoleAssignment_SpecARM struct {
	AzureName string `json:"azureName,omitempty"`
	Name      string `json:"name,omitempty"`

	// Properties: Role assignment properties.
	Properties *RoleAssignmentPropertiesARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &RoleAssignment_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "20200801preview"
func (assignment RoleAssignment_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (assignment *RoleAssignment_SpecARM) GetName() string {
	return assignment.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (assignment *RoleAssignment_SpecARM) GetType() string {
	return ""
}

type RoleAssignmentPropertiesARM struct {
	// Condition: The conditions on the role assignment. This limits the resources it can be assigned to. e.g.:
	// @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase
	// 'foo_storage_container'
	Condition *string `json:"condition,omitempty"`

	// ConditionVersion: Version of the condition. Currently accepted value is '2.0'
	ConditionVersion *string `json:"conditionVersion,omitempty"`

	// CreatedBy: Id of the user who created the assignment
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedOn: Time it was created
	CreatedOn *string `json:"createdOn,omitempty"`

	// DelegatedManagedIdentityResourceId: Id of the delegated managed identity resource
	DelegatedManagedIdentityResourceId *string `json:"delegatedManagedIdentityResourceId,omitempty"`

	// Description: Description of role assignment
	Description *string `json:"description,omitempty"`

	// PrincipalId: The principal ID.
	PrincipalId *string `json:"principalId,omitempty"`

	// PrincipalType: The principal type of the assigned principal ID.
	PrincipalType    *RoleAssignmentProperties_PrincipalType `json:"principalType,omitempty"`
	RoleDefinitionId *string                                 `json:"roleDefinitionId,omitempty"`

	// Scope: The role assignment scope.
	Scope *string `json:"scope,omitempty"`

	// UpdatedBy: Id of the user who updated the assignment
	UpdatedBy *string `json:"updatedBy,omitempty"`

	// UpdatedOn: Time it was updated
	UpdatedOn *string `json:"updatedOn,omitempty"`
}
