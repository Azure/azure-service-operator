// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210515

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_SpecARM struct {
	AzureName string `json:"azureName,omitempty"`

	// Id: The unique resource identifier of the ARM resource.
	Id *string `json:"id,omitempty"`

	// Location: The location of the resource group to which the resource belongs.
	Location *string `json:"location,omitempty"`

	// Name: The name of the ARM resource.
	Name string `json:"name,omitempty"`

	// Properties: Properties to update Azure Cosmos DB resource throughput.
	Properties *ThroughputSettingsUpdatePropertiesARM `json:"properties,omitempty"`
	Tags       map[string]string                      `json:"tags,omitempty"`

	// Type: The type of Azure resource.
	Type *string `json:"type,omitempty"`
}

var _ genruntime.ARMResourceSpec = &DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "20210515"
func (setting DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (setting *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_SpecARM) GetName() string {
	return setting.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (setting *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_SpecARM) GetType() string {
	return ""
}

type ThroughputSettingsUpdatePropertiesARM struct {
	// Resource: The standard JSON format of a resource throughput
	Resource *ThroughputSettingsResourceARM `json:"resource,omitempty"`
}

type ThroughputSettingsResourceARM struct {
	// AutoscaleSettings: Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is
	// required, but not both.
	AutoscaleSettings *AutoscaleSettingsResourceARM `json:"autoscaleSettings,omitempty"`

	// MinimumThroughput: The minimum throughput of the resource
	MinimumThroughput *string `json:"minimumThroughput,omitempty"`

	// OfferReplacePending: The throughput replace is pending
	OfferReplacePending *string `json:"offerReplacePending,omitempty"`

	// Throughput: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required,
	// but not both.
	Throughput *int `json:"throughput,omitempty"`
}

type AutoscaleSettingsResourceARM struct {
	// AutoUpgradePolicy: Cosmos DB resource auto-upgrade policy
	AutoUpgradePolicy *AutoUpgradePolicyResourceARM `json:"autoUpgradePolicy,omitempty"`

	// MaxThroughput: Represents maximum throughput container can scale up to.
	MaxThroughput *int `json:"maxThroughput,omitempty"`

	// TargetMaxThroughput: Represents target maximum throughput container can scale up to once offer is no longer in pending
	// state.
	TargetMaxThroughput *int `json:"targetMaxThroughput,omitempty"`
}

type AutoUpgradePolicyResourceARM struct {
	// ThroughputPolicy: Represents throughput policy which service must adhere to for auto-upgrade
	ThroughputPolicy *ThroughputPolicyResourceARM `json:"throughputPolicy,omitempty"`
}

type ThroughputPolicyResourceARM struct {
	// IncrementPercent: Represents the percentage by which throughput can increase every time throughput policy kicks in.
	IncrementPercent *int `json:"incrementPercent,omitempty"`

	// IsEnabled: Determines whether the ThroughputPolicy is active or not
	IsEnabled *bool `json:"isEnabled,omitempty"`
}
