// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210515

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type DatabaseAccountsMongodbDatabasesCollection_SpecARM struct {
	AzureName string `json:"azureName,omitempty"`

	// Id: The unique resource identifier of the ARM resource.
	Id *string `json:"id,omitempty"`

	// Location: The location of the resource group to which the resource belongs.
	Location *string `json:"location,omitempty"`

	// Name: The name of the ARM resource.
	Name string `json:"name,omitempty"`

	// Properties: Properties to create and update Azure Cosmos DB MongoDB collection.
	Properties *MongoDBCollectionCreateUpdatePropertiesARM `json:"properties,omitempty"`
	Tags       map[string]string                           `json:"tags,omitempty"`

	// Type: The type of Azure resource.
	Type *string `json:"type,omitempty"`
}

var _ genruntime.ARMResourceSpec = &DatabaseAccountsMongodbDatabasesCollection_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "20210515"
func (collection DatabaseAccountsMongodbDatabasesCollection_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (collection *DatabaseAccountsMongodbDatabasesCollection_SpecARM) GetName() string {
	return collection.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (collection *DatabaseAccountsMongodbDatabasesCollection_SpecARM) GetType() string {
	return ""
}

type MongoDBCollectionCreateUpdatePropertiesARM struct {
	// Options: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the
	// request.
	Options *CreateUpdateOptionsARM `json:"options,omitempty"`

	// Resource: The standard JSON format of a MongoDB collection
	Resource *MongoDBCollectionResourceARM `json:"resource,omitempty"`
}

type MongoDBCollectionResourceARM struct {
	// AnalyticalStorageTtl: Analytical TTL.
	AnalyticalStorageTtl *int `json:"analyticalStorageTtl,omitempty"`

	// Id: Name of the Cosmos DB MongoDB collection
	Id *string `json:"id,omitempty"`

	// Indexes: List of index keys
	Indexes []MongoIndexARM `json:"indexes,omitempty"`

	// ShardKey: A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `json:"shardKey,omitempty"`
}

type MongoIndexARM struct {
	// Key: Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeysARM `json:"key,omitempty"`

	// Options: Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptionsARM `json:"options,omitempty"`
}

type MongoIndexKeysARM struct {
	// Keys: List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `json:"keys,omitempty"`
}

type MongoIndexOptionsARM struct {
	// ExpireAfterSeconds: Expire after seconds
	ExpireAfterSeconds *int `json:"expireAfterSeconds,omitempty"`

	// Unique: Is unique or not
	Unique *bool `json:"unique,omitempty"`
}
