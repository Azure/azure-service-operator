// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210515

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of DatabaseAccounts_SqlDatabases_Container_Spec. Use v1beta20210515.DatabaseAccounts_SqlDatabases_Container_Spec instead
type DatabaseAccounts_SqlDatabases_Container_Spec_ARM struct {
	Location   *string                                 `json:"location,omitempty"`
	Name       string                                  `json:"name,omitempty"`
	Properties *SqlContainerCreateUpdateProperties_ARM `json:"properties,omitempty"`
	Tags       map[string]string                       `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &DatabaseAccounts_SqlDatabases_Container_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-05-15"
func (container DatabaseAccounts_SqlDatabases_Container_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (container *DatabaseAccounts_SqlDatabases_Container_Spec_ARM) GetName() string {
	return container.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
func (container *DatabaseAccounts_SqlDatabases_Container_Spec_ARM) GetType() string {
	return "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
}

// Deprecated version of SqlContainerCreateUpdateProperties. Use v1beta20210515.SqlContainerCreateUpdateProperties instead
type SqlContainerCreateUpdateProperties_ARM struct {
	Options  *CreateUpdateOptions_ARM  `json:"options,omitempty"`
	Resource *SqlContainerResource_ARM `json:"resource,omitempty"`
}

// Deprecated version of SqlContainerResource. Use v1beta20210515.SqlContainerResource instead
type SqlContainerResource_ARM struct {
	AnalyticalStorageTtl     *int                          `json:"analyticalStorageTtl,omitempty"`
	ConflictResolutionPolicy *ConflictResolutionPolicy_ARM `json:"conflictResolutionPolicy,omitempty"`
	DefaultTtl               *int                          `json:"defaultTtl,omitempty"`
	Id                       *string                       `json:"id,omitempty"`
	IndexingPolicy           *IndexingPolicy_ARM           `json:"indexingPolicy,omitempty"`
	PartitionKey             *ContainerPartitionKey_ARM    `json:"partitionKey,omitempty"`
	UniqueKeyPolicy          *UniqueKeyPolicy_ARM          `json:"uniqueKeyPolicy,omitempty"`
}

// Deprecated version of ConflictResolutionPolicy. Use v1beta20210515.ConflictResolutionPolicy instead
type ConflictResolutionPolicy_ARM struct {
	ConflictResolutionPath      *string                        `json:"conflictResolutionPath,omitempty"`
	ConflictResolutionProcedure *string                        `json:"conflictResolutionProcedure,omitempty"`
	Mode                        *ConflictResolutionPolicy_Mode `json:"mode,omitempty"`
}

// Deprecated version of ContainerPartitionKey. Use v1beta20210515.ContainerPartitionKey instead
type ContainerPartitionKey_ARM struct {
	Kind    *ContainerPartitionKey_Kind `json:"kind,omitempty"`
	Paths   []string                    `json:"paths,omitempty"`
	Version *int                        `json:"version,omitempty"`
}

// Deprecated version of IndexingPolicy. Use v1beta20210515.IndexingPolicy instead
type IndexingPolicy_ARM struct {
	Automatic        *bool                        `json:"automatic,omitempty"`
	CompositeIndexes [][]CompositePath_ARM        `json:"compositeIndexes,omitempty"`
	ExcludedPaths    []ExcludedPath_ARM           `json:"excludedPaths,omitempty"`
	IncludedPaths    []IncludedPath_ARM           `json:"includedPaths,omitempty"`
	IndexingMode     *IndexingPolicy_IndexingMode `json:"indexingMode,omitempty"`
	SpatialIndexes   []SpatialSpec_ARM            `json:"spatialIndexes,omitempty"`
}

// Deprecated version of UniqueKeyPolicy. Use v1beta20210515.UniqueKeyPolicy instead
type UniqueKeyPolicy_ARM struct {
	UniqueKeys []UniqueKey_ARM `json:"uniqueKeys,omitempty"`
}

// Deprecated version of CompositePath. Use v1beta20210515.CompositePath instead
type CompositePath_ARM struct {
	Order *CompositePath_Order `json:"order,omitempty"`
	Path  *string              `json:"path,omitempty"`
}

// Deprecated version of ConflictResolutionPolicy_Mode. Use v1beta20210515.ConflictResolutionPolicy_Mode instead
// +kubebuilder:validation:Enum={"Custom","LastWriterWins"}
type ConflictResolutionPolicy_Mode string

const (
	ConflictResolutionPolicy_Mode_Custom         = ConflictResolutionPolicy_Mode("Custom")
	ConflictResolutionPolicy_Mode_LastWriterWins = ConflictResolutionPolicy_Mode("LastWriterWins")
)

// Deprecated version of ContainerPartitionKey_Kind. Use v1beta20210515.ContainerPartitionKey_Kind instead
// +kubebuilder:validation:Enum={"Hash","MultiHash","Range"}
type ContainerPartitionKey_Kind string

const (
	ContainerPartitionKey_Kind_Hash      = ContainerPartitionKey_Kind("Hash")
	ContainerPartitionKey_Kind_MultiHash = ContainerPartitionKey_Kind("MultiHash")
	ContainerPartitionKey_Kind_Range     = ContainerPartitionKey_Kind("Range")
)

// Deprecated version of ExcludedPath. Use v1beta20210515.ExcludedPath instead
type ExcludedPath_ARM struct {
	Path *string `json:"path,omitempty"`
}

// Deprecated version of IncludedPath. Use v1beta20210515.IncludedPath instead
type IncludedPath_ARM struct {
	Indexes []Indexes_ARM `json:"indexes,omitempty"`
	Path    *string       `json:"path,omitempty"`
}

// Deprecated version of IndexingPolicy_IndexingMode. Use v1beta20210515.IndexingPolicy_IndexingMode instead
// +kubebuilder:validation:Enum={"consistent","lazy","none"}
type IndexingPolicy_IndexingMode string

const (
	IndexingPolicy_IndexingMode_Consistent = IndexingPolicy_IndexingMode("consistent")
	IndexingPolicy_IndexingMode_Lazy       = IndexingPolicy_IndexingMode("lazy")
	IndexingPolicy_IndexingMode_None       = IndexingPolicy_IndexingMode("none")
)

// Deprecated version of SpatialSpec. Use v1beta20210515.SpatialSpec instead
type SpatialSpec_ARM struct {
	Path  *string       `json:"path,omitempty"`
	Types []SpatialType `json:"types,omitempty"`
}

// Deprecated version of UniqueKey. Use v1beta20210515.UniqueKey instead
type UniqueKey_ARM struct {
	Paths []string `json:"paths,omitempty"`
}

// Deprecated version of CompositePath_Order. Use v1beta20210515.CompositePath_Order instead
// +kubebuilder:validation:Enum={"ascending","descending"}
type CompositePath_Order string

const (
	CompositePath_Order_Ascending  = CompositePath_Order("ascending")
	CompositePath_Order_Descending = CompositePath_Order("descending")
)

// Deprecated version of Indexes. Use v1beta20210515.Indexes instead
type Indexes_ARM struct {
	DataType  *Indexes_DataType `json:"dataType,omitempty"`
	Kind      *Indexes_Kind     `json:"kind,omitempty"`
	Precision *int              `json:"precision,omitempty"`
}

// Deprecated version of SpatialType. Use v1beta20210515.SpatialType instead
// +kubebuilder:validation:Enum={"LineString","MultiPolygon","Point","Polygon"}
type SpatialType string

const (
	SpatialType_LineString   = SpatialType("LineString")
	SpatialType_MultiPolygon = SpatialType("MultiPolygon")
	SpatialType_Point        = SpatialType("Point")
	SpatialType_Polygon      = SpatialType("Polygon")
)

// Deprecated version of Indexes_DataType. Use v1beta20210515.Indexes_DataType instead
// +kubebuilder:validation:Enum={"LineString","MultiPolygon","Number","Point","Polygon","String"}
type Indexes_DataType string

const (
	Indexes_DataType_LineString   = Indexes_DataType("LineString")
	Indexes_DataType_MultiPolygon = Indexes_DataType("MultiPolygon")
	Indexes_DataType_Number       = Indexes_DataType("Number")
	Indexes_DataType_Point        = Indexes_DataType("Point")
	Indexes_DataType_Polygon      = Indexes_DataType("Polygon")
	Indexes_DataType_String       = Indexes_DataType("String")
)

// Deprecated version of Indexes_Kind. Use v1beta20210515.Indexes_Kind instead
// +kubebuilder:validation:Enum={"Hash","Range","Spatial"}
type Indexes_Kind string

const (
	Indexes_Kind_Hash    = Indexes_Kind("Hash")
	Indexes_Kind_Range   = Indexes_Kind("Range")
	Indexes_Kind_Spatial = Indexes_Kind("Spatial")
)
