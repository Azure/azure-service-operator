//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1api20210515storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticalStorageConfiguration) DeepCopyInto(out *AnalyticalStorageConfiguration) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticalStorageConfiguration.
func (in *AnalyticalStorageConfiguration) DeepCopy() *AnalyticalStorageConfiguration {
	if in == nil {
		return nil
	}
	out := new(AnalyticalStorageConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticalStorageConfiguration_Status) DeepCopyInto(out *AnalyticalStorageConfiguration_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SchemaType != nil {
		in, out := &in.SchemaType, &out.SchemaType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticalStorageConfiguration_Status.
func (in *AnalyticalStorageConfiguration_Status) DeepCopy() *AnalyticalStorageConfiguration_Status {
	if in == nil {
		return nil
	}
	out := new(AnalyticalStorageConfiguration_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiProperties) DeepCopyInto(out *ApiProperties) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServerVersion != nil {
		in, out := &in.ServerVersion, &out.ServerVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiProperties.
func (in *ApiProperties) DeepCopy() *ApiProperties {
	if in == nil {
		return nil
	}
	out := new(ApiProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiProperties_Status) DeepCopyInto(out *ApiProperties_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServerVersion != nil {
		in, out := &in.ServerVersion, &out.ServerVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiProperties_Status.
func (in *ApiProperties_Status) DeepCopy() *ApiProperties_Status {
	if in == nil {
		return nil
	}
	out := new(ApiProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradePolicyResource) DeepCopyInto(out *AutoUpgradePolicyResource) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThroughputPolicy != nil {
		in, out := &in.ThroughputPolicy, &out.ThroughputPolicy
		*out = new(ThroughputPolicyResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradePolicyResource.
func (in *AutoUpgradePolicyResource) DeepCopy() *AutoUpgradePolicyResource {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradePolicyResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoUpgradePolicyResource_Status) DeepCopyInto(out *AutoUpgradePolicyResource_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThroughputPolicy != nil {
		in, out := &in.ThroughputPolicy, &out.ThroughputPolicy
		*out = new(ThroughputPolicyResource_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoUpgradePolicyResource_Status.
func (in *AutoUpgradePolicyResource_Status) DeepCopy() *AutoUpgradePolicyResource_Status {
	if in == nil {
		return nil
	}
	out := new(AutoUpgradePolicyResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettings) DeepCopyInto(out *AutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettings.
func (in *AutoscaleSettings) DeepCopy() *AutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettingsResource) DeepCopyInto(out *AutoscaleSettingsResource) {
	*out = *in
	if in.AutoUpgradePolicy != nil {
		in, out := &in.AutoUpgradePolicy, &out.AutoUpgradePolicy
		*out = new(AutoUpgradePolicyResource)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettingsResource.
func (in *AutoscaleSettingsResource) DeepCopy() *AutoscaleSettingsResource {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettingsResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettingsResource_Status) DeepCopyInto(out *AutoscaleSettingsResource_Status) {
	*out = *in
	if in.AutoUpgradePolicy != nil {
		in, out := &in.AutoUpgradePolicy, &out.AutoUpgradePolicy
		*out = new(AutoUpgradePolicyResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TargetMaxThroughput != nil {
		in, out := &in.TargetMaxThroughput, &out.TargetMaxThroughput
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettingsResource_Status.
func (in *AutoscaleSettingsResource_Status) DeepCopy() *AutoscaleSettingsResource_Status {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettingsResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleSettings_Status) DeepCopyInto(out *AutoscaleSettings_Status) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleSettings_Status.
func (in *AutoscaleSettings_Status) DeepCopy() *AutoscaleSettings_Status {
	if in == nil {
		return nil
	}
	out := new(AutoscaleSettings_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicy) DeepCopyInto(out *BackupPolicy) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicy.
func (in *BackupPolicy) DeepCopy() *BackupPolicy {
	if in == nil {
		return nil
	}
	out := new(BackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicy_Status) DeepCopyInto(out *BackupPolicy_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicy_Status.
func (in *BackupPolicy_Status) DeepCopy() *BackupPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(BackupPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Capability) DeepCopyInto(out *Capability) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Capability.
func (in *Capability) DeepCopy() *Capability {
	if in == nil {
		return nil
	}
	out := new(Capability)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Capability_Status) DeepCopyInto(out *Capability_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Capability_Status.
func (in *Capability_Status) DeepCopy() *Capability_Status {
	if in == nil {
		return nil
	}
	out := new(Capability_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositePath) DeepCopyInto(out *CompositePath) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositePath.
func (in *CompositePath) DeepCopy() *CompositePath {
	if in == nil {
		return nil
	}
	out := new(CompositePath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompositePath_Status) DeepCopyInto(out *CompositePath_Status) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompositePath_Status.
func (in *CompositePath_Status) DeepCopy() *CompositePath_Status {
	if in == nil {
		return nil
	}
	out := new(CompositePath_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionPolicy) DeepCopyInto(out *ConflictResolutionPolicy) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionPolicy.
func (in *ConflictResolutionPolicy) DeepCopy() *ConflictResolutionPolicy {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConflictResolutionPolicy_Status) DeepCopyInto(out *ConflictResolutionPolicy_Status) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConflictResolutionPolicy_Status.
func (in *ConflictResolutionPolicy_Status) DeepCopy() *ConflictResolutionPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(ConflictResolutionPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistencyPolicy) DeepCopyInto(out *ConsistencyPolicy) {
	*out = *in
	if in.DefaultConsistencyLevel != nil {
		in, out := &in.DefaultConsistencyLevel, &out.DefaultConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistencyPolicy.
func (in *ConsistencyPolicy) DeepCopy() *ConsistencyPolicy {
	if in == nil {
		return nil
	}
	out := new(ConsistencyPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistencyPolicy_Status) DeepCopyInto(out *ConsistencyPolicy_Status) {
	*out = *in
	if in.DefaultConsistencyLevel != nil {
		in, out := &in.DefaultConsistencyLevel, &out.DefaultConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistencyPolicy_Status.
func (in *ConsistencyPolicy_Status) DeepCopy() *ConsistencyPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(ConsistencyPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerPartitionKey) DeepCopyInto(out *ContainerPartitionKey) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerPartitionKey.
func (in *ContainerPartitionKey) DeepCopy() *ContainerPartitionKey {
	if in == nil {
		return nil
	}
	out := new(ContainerPartitionKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerPartitionKey_Status) DeepCopyInto(out *ContainerPartitionKey_Status) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SystemKey != nil {
		in, out := &in.SystemKey, &out.SystemKey
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerPartitionKey_Status.
func (in *ContainerPartitionKey_Status) DeepCopy() *ContainerPartitionKey_Status {
	if in == nil {
		return nil
	}
	out := new(ContainerPartitionKey_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicy) DeepCopyInto(out *CorsPolicy) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = new(string)
		**out = **in
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = new(string)
		**out = **in
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = new(string)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = new(string)
		**out = **in
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicy.
func (in *CorsPolicy) DeepCopy() *CorsPolicy {
	if in == nil {
		return nil
	}
	out := new(CorsPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicy_Status) DeepCopyInto(out *CorsPolicy_Status) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = new(string)
		**out = **in
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = new(string)
		**out = **in
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = new(string)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = new(string)
		**out = **in
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicy_Status.
func (in *CorsPolicy_Status) DeepCopy() *CorsPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(CorsPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateUpdateOptions) DeepCopyInto(out *CreateUpdateOptions) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(AutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateUpdateOptions.
func (in *CreateUpdateOptions) DeepCopy() *CreateUpdateOptions {
	if in == nil {
		return nil
	}
	out := new(CreateUpdateOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateUpdateOptions_Status) DeepCopyInto(out *CreateUpdateOptions_Status) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(AutoscaleSettings_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateUpdateOptions_Status.
func (in *CreateUpdateOptions_Status) DeepCopy() *CreateUpdateOptions_Status {
	if in == nil {
		return nil
	}
	out := new(CreateUpdateOptions_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccount) DeepCopyInto(out *DatabaseAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccount.
func (in *DatabaseAccount) DeepCopy() *DatabaseAccount {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountList) DeepCopyInto(out *DatabaseAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountList.
func (in *DatabaseAccountList) DeepCopy() *DatabaseAccountList {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccount_Spec) DeepCopyInto(out *DatabaseAccount_Spec) {
	*out = *in
	if in.AnalyticalStorageConfiguration != nil {
		in, out := &in.AnalyticalStorageConfiguration, &out.AnalyticalStorageConfiguration
		*out = new(AnalyticalStorageConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiProperties != nil {
		in, out := &in.ApiProperties, &out.ApiProperties
		*out = new(ApiProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = new(BackupPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]Capability, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectorOffer != nil {
		in, out := &in.ConnectorOffer, &out.ConnectorOffer
		*out = new(string)
		**out = **in
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = new(ConsistencyPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseAccountOfferType != nil {
		in, out := &in.DatabaseAccountOfferType, &out.DatabaseAccountOfferType
		*out = new(string)
		**out = **in
	}
	if in.DefaultIdentity != nil {
		in, out := &in.DefaultIdentity, &out.DefaultIdentity
		*out = new(string)
		**out = **in
	}
	if in.DisableKeyBasedMetadataWriteAccess != nil {
		in, out := &in.DisableKeyBasedMetadataWriteAccess, &out.DisableKeyBasedMetadataWriteAccess
		*out = new(bool)
		**out = **in
	}
	if in.EnableAnalyticalStorage != nil {
		in, out := &in.EnableAnalyticalStorage, &out.EnableAnalyticalStorage
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableCassandraConnector != nil {
		in, out := &in.EnableCassandraConnector, &out.EnableCassandraConnector
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IpAddressOrRange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyUri != nil {
		in, out := &in.KeyVaultKeyUri, &out.KeyVaultKeyUri
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]Location, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkAclBypass != nil {
		in, out := &in.NetworkAclBypass, &out.NetworkAclBypass
		*out = new(string)
		**out = **in
	}
	if in.NetworkAclBypassResourceIds != nil {
		in, out := &in.NetworkAclBypassResourceIds, &out.NetworkAclBypassResourceIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VirtualNetworkRules != nil {
		in, out := &in.VirtualNetworkRules, &out.VirtualNetworkRules
		*out = make([]VirtualNetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccount_Spec.
func (in *DatabaseAccount_Spec) DeepCopy() *DatabaseAccount_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccount_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccount_Status) DeepCopyInto(out *DatabaseAccount_Status) {
	*out = *in
	if in.AnalyticalStorageConfiguration != nil {
		in, out := &in.AnalyticalStorageConfiguration, &out.AnalyticalStorageConfiguration
		*out = new(AnalyticalStorageConfiguration_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiProperties != nil {
		in, out := &in.ApiProperties, &out.ApiProperties
		*out = new(ApiProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = new(BackupPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]Capability_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectorOffer != nil {
		in, out := &in.ConnectorOffer, &out.ConnectorOffer
		*out = new(string)
		**out = **in
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = new(ConsistencyPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsPolicy_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatabaseAccountOfferType != nil {
		in, out := &in.DatabaseAccountOfferType, &out.DatabaseAccountOfferType
		*out = new(string)
		**out = **in
	}
	if in.DefaultIdentity != nil {
		in, out := &in.DefaultIdentity, &out.DefaultIdentity
		*out = new(string)
		**out = **in
	}
	if in.DisableKeyBasedMetadataWriteAccess != nil {
		in, out := &in.DisableKeyBasedMetadataWriteAccess, &out.DisableKeyBasedMetadataWriteAccess
		*out = new(bool)
		**out = **in
	}
	if in.EnableAnalyticalStorage != nil {
		in, out := &in.EnableAnalyticalStorage, &out.EnableAnalyticalStorage
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableCassandraConnector != nil {
		in, out := &in.EnableCassandraConnector, &out.EnableCassandraConnector
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IpAddressOrRange_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyUri != nil {
		in, out := &in.KeyVaultKeyUri, &out.KeyVaultKeyUri
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]Location_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkAclBypass != nil {
		in, out := &in.NetworkAclBypass, &out.NetworkAclBypass
		*out = new(string)
		**out = **in
	}
	if in.NetworkAclBypassResourceIds != nil {
		in, out := &in.NetworkAclBypassResourceIds, &out.NetworkAclBypassResourceIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkRules != nil {
		in, out := &in.VirtualNetworkRules, &out.VirtualNetworkRules
		*out = make([]VirtualNetworkRule_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccount_Status.
func (in *DatabaseAccount_Status) DeepCopy() *DatabaseAccount_Status {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccount_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsMongodbDatabase_Spec) DeepCopyInto(out *DatabaseAccountsMongodbDatabase_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(MongoDBDatabaseResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsMongodbDatabase_Spec.
func (in *DatabaseAccountsMongodbDatabase_Spec) DeepCopy() *DatabaseAccountsMongodbDatabase_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsMongodbDatabase_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsMongodbDatabasesCollection_Spec) DeepCopyInto(out *DatabaseAccountsMongodbDatabasesCollection_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(MongoDBCollectionResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsMongodbDatabasesCollection_Spec.
func (in *DatabaseAccountsMongodbDatabasesCollection_Spec) DeepCopy() *DatabaseAccountsMongodbDatabasesCollection_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsMongodbDatabasesCollection_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec) DeepCopyInto(out *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ThroughputSettingsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec.
func (in *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec) DeepCopy() *DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsMongodbDatabasesThroughputSetting_Spec) DeepCopyInto(out *DatabaseAccountsMongodbDatabasesThroughputSetting_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ThroughputSettingsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsMongodbDatabasesThroughputSetting_Spec.
func (in *DatabaseAccountsMongodbDatabasesThroughputSetting_Spec) DeepCopy() *DatabaseAccountsMongodbDatabasesThroughputSetting_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsMongodbDatabasesThroughputSetting_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabase_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabase_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlDatabaseResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabase_Spec.
func (in *DatabaseAccountsSqlDatabase_Spec) DeepCopy() *DatabaseAccountsSqlDatabase_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabase_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesContainer_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesContainer_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlContainerResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesContainer_Spec.
func (in *DatabaseAccountsSqlDatabasesContainer_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesContainer_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesContainer_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlStoredProcedureResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec.
func (in *DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesContainersStoredProcedure_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ThroughputSettingsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec.
func (in *DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesContainersThroughputSetting_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesContainersTrigger_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesContainersTrigger_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlTriggerResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesContainersTrigger_Spec.
func (in *DatabaseAccountsSqlDatabasesContainersTrigger_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesContainersTrigger_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesContainersTrigger_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlUserDefinedFunctionResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec.
func (in *DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesContainersUserDefinedFunction_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseAccountsSqlDatabasesThroughputSetting_Spec) DeepCopyInto(out *DatabaseAccountsSqlDatabasesThroughputSetting_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ThroughputSettingsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseAccountsSqlDatabasesThroughputSetting_Spec.
func (in *DatabaseAccountsSqlDatabasesThroughputSetting_Spec) DeepCopy() *DatabaseAccountsSqlDatabasesThroughputSetting_Spec {
	if in == nil {
		return nil
	}
	out := new(DatabaseAccountsSqlDatabasesThroughputSetting_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPath) DeepCopyInto(out *ExcludedPath) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPath.
func (in *ExcludedPath) DeepCopy() *ExcludedPath {
	if in == nil {
		return nil
	}
	out := new(ExcludedPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedPath_Status) DeepCopyInto(out *ExcludedPath_Status) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedPath_Status.
func (in *ExcludedPath_Status) DeepCopy() *ExcludedPath_Status {
	if in == nil {
		return nil
	}
	out := new(ExcludedPath_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedPath) DeepCopyInto(out *IncludedPath) {
	*out = *in
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]Indexes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedPath.
func (in *IncludedPath) DeepCopy() *IncludedPath {
	if in == nil {
		return nil
	}
	out := new(IncludedPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IncludedPath_Status) DeepCopyInto(out *IncludedPath_Status) {
	*out = *in
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]Indexes_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IncludedPath_Status.
func (in *IncludedPath_Status) DeepCopy() *IncludedPath_Status {
	if in == nil {
		return nil
	}
	out := new(IncludedPath_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Indexes) DeepCopyInto(out *Indexes) {
	*out = *in
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Indexes.
func (in *Indexes) DeepCopy() *Indexes {
	if in == nil {
		return nil
	}
	out := new(Indexes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Indexes_Status) DeepCopyInto(out *Indexes_Status) {
	*out = *in
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Indexes_Status.
func (in *Indexes_Status) DeepCopy() *Indexes_Status {
	if in == nil {
		return nil
	}
	out := new(Indexes_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicy) DeepCopyInto(out *IndexingPolicy) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.CompositeIndexes != nil {
		in, out := &in.CompositeIndexes, &out.CompositeIndexes
		*out = make([][]CompositePath, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]CompositePath, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
		}
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]ExcludedPath, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]IncludedPath, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SpatialIndexes != nil {
		in, out := &in.SpatialIndexes, &out.SpatialIndexes
		*out = make([]SpatialSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicy.
func (in *IndexingPolicy) DeepCopy() *IndexingPolicy {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingPolicy_Status) DeepCopyInto(out *IndexingPolicy_Status) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.CompositeIndexes != nil {
		in, out := &in.CompositeIndexes, &out.CompositeIndexes
		*out = make([][]CompositePath_Status, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]CompositePath_Status, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
		}
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]ExcludedPath_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]IncludedPath_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SpatialIndexes != nil {
		in, out := &in.SpatialIndexes, &out.SpatialIndexes
		*out = make([]SpatialSpec_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingPolicy_Status.
func (in *IndexingPolicy_Status) DeepCopy() *IndexingPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(IndexingPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpAddressOrRange) DeepCopyInto(out *IpAddressOrRange) {
	*out = *in
	if in.IpAddressOrRange != nil {
		in, out := &in.IpAddressOrRange, &out.IpAddressOrRange
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpAddressOrRange.
func (in *IpAddressOrRange) DeepCopy() *IpAddressOrRange {
	if in == nil {
		return nil
	}
	out := new(IpAddressOrRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpAddressOrRange_Status) DeepCopyInto(out *IpAddressOrRange_Status) {
	*out = *in
	if in.IpAddressOrRange != nil {
		in, out := &in.IpAddressOrRange, &out.IpAddressOrRange
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpAddressOrRange_Status.
func (in *IpAddressOrRange_Status) DeepCopy() *IpAddressOrRange_Status {
	if in == nil {
		return nil
	}
	out := new(IpAddressOrRange_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Location) DeepCopyInto(out *Location) {
	*out = *in
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(int)
		**out = **in
	}
	if in.IsZoneRedundant != nil {
		in, out := &in.IsZoneRedundant, &out.IsZoneRedundant
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Location.
func (in *Location) DeepCopy() *Location {
	if in == nil {
		return nil
	}
	out := new(Location)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Location_Status) DeepCopyInto(out *Location_Status) {
	*out = *in
	if in.DocumentEndpoint != nil {
		in, out := &in.DocumentEndpoint, &out.DocumentEndpoint
		*out = new(string)
		**out = **in
	}
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IsZoneRedundant != nil {
		in, out := &in.IsZoneRedundant, &out.IsZoneRedundant
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Location_Status.
func (in *Location_Status) DeepCopy() *Location_Status {
	if in == nil {
		return nil
	}
	out := new(Location_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity) DeepCopyInto(out *ManagedServiceIdentity) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity.
func (in *ManagedServiceIdentity) DeepCopy() *ManagedServiceIdentity {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity_Status) DeepCopyInto(out *ManagedServiceIdentity_Status) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]ManagedServiceIdentity_StatusUserAssignedIdentities, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity_Status.
func (in *ManagedServiceIdentity_Status) DeepCopy() *ManagedServiceIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity_StatusUserAssignedIdentities) DeepCopyInto(out *ManagedServiceIdentity_StatusUserAssignedIdentities) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity_StatusUserAssignedIdentities.
func (in *ManagedServiceIdentity_StatusUserAssignedIdentities) DeepCopy() *ManagedServiceIdentity_StatusUserAssignedIdentities {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity_StatusUserAssignedIdentities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBCollectionResource) DeepCopyInto(out *MongoDBCollectionResource) {
	*out = *in
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]MongoIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBCollectionResource.
func (in *MongoDBCollectionResource) DeepCopy() *MongoDBCollectionResource {
	if in == nil {
		return nil
	}
	out := new(MongoDBCollectionResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBCollectionResource_Status) DeepCopyInto(out *MongoDBCollectionResource_Status) {
	*out = *in
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]MongoIndex_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBCollectionResource_Status.
func (in *MongoDBCollectionResource_Status) DeepCopy() *MongoDBCollectionResource_Status {
	if in == nil {
		return nil
	}
	out := new(MongoDBCollectionResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBCollection_Status) DeepCopyInto(out *MongoDBCollection_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(MongoDBCollectionResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBCollection_Status.
func (in *MongoDBCollection_Status) DeepCopy() *MongoDBCollection_Status {
	if in == nil {
		return nil
	}
	out := new(MongoDBCollection_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBDatabaseResource) DeepCopyInto(out *MongoDBDatabaseResource) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBDatabaseResource.
func (in *MongoDBDatabaseResource) DeepCopy() *MongoDBDatabaseResource {
	if in == nil {
		return nil
	}
	out := new(MongoDBDatabaseResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBDatabaseResource_Status) DeepCopyInto(out *MongoDBDatabaseResource_Status) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBDatabaseResource_Status.
func (in *MongoDBDatabaseResource_Status) DeepCopy() *MongoDBDatabaseResource_Status {
	if in == nil {
		return nil
	}
	out := new(MongoDBDatabaseResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBDatabase_Status) DeepCopyInto(out *MongoDBDatabase_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(MongoDBDatabaseResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBDatabase_Status.
func (in *MongoDBDatabase_Status) DeepCopy() *MongoDBDatabase_Status {
	if in == nil {
		return nil
	}
	out := new(MongoDBDatabase_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndex) DeepCopyInto(out *MongoIndex) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(MongoIndexKeys)
		(*in).DeepCopyInto(*out)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(MongoIndexOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndex.
func (in *MongoIndex) DeepCopy() *MongoIndex {
	if in == nil {
		return nil
	}
	out := new(MongoIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndexKeys) DeepCopyInto(out *MongoIndexKeys) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndexKeys.
func (in *MongoIndexKeys) DeepCopy() *MongoIndexKeys {
	if in == nil {
		return nil
	}
	out := new(MongoIndexKeys)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndexKeys_Status) DeepCopyInto(out *MongoIndexKeys_Status) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndexKeys_Status.
func (in *MongoIndexKeys_Status) DeepCopy() *MongoIndexKeys_Status {
	if in == nil {
		return nil
	}
	out := new(MongoIndexKeys_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndexOptions) DeepCopyInto(out *MongoIndexOptions) {
	*out = *in
	if in.ExpireAfterSeconds != nil {
		in, out := &in.ExpireAfterSeconds, &out.ExpireAfterSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndexOptions.
func (in *MongoIndexOptions) DeepCopy() *MongoIndexOptions {
	if in == nil {
		return nil
	}
	out := new(MongoIndexOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndexOptions_Status) DeepCopyInto(out *MongoIndexOptions_Status) {
	*out = *in
	if in.ExpireAfterSeconds != nil {
		in, out := &in.ExpireAfterSeconds, &out.ExpireAfterSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndexOptions_Status.
func (in *MongoIndexOptions_Status) DeepCopy() *MongoIndexOptions_Status {
	if in == nil {
		return nil
	}
	out := new(MongoIndexOptions_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoIndex_Status) DeepCopyInto(out *MongoIndex_Status) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(MongoIndexKeys_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(MongoIndexOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoIndex_Status.
func (in *MongoIndex_Status) DeepCopy() *MongoIndex_Status {
	if in == nil {
		return nil
	}
	out := new(MongoIndex_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabase) DeepCopyInto(out *MongodbDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabase.
func (in *MongodbDatabase) DeepCopy() *MongodbDatabase {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseCollection) DeepCopyInto(out *MongodbDatabaseCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseCollection.
func (in *MongodbDatabaseCollection) DeepCopy() *MongodbDatabaseCollection {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseCollectionList) DeepCopyInto(out *MongodbDatabaseCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongodbDatabaseCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseCollectionList.
func (in *MongodbDatabaseCollectionList) DeepCopy() *MongodbDatabaseCollectionList {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseCollectionThroughputSetting) DeepCopyInto(out *MongodbDatabaseCollectionThroughputSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseCollectionThroughputSetting.
func (in *MongodbDatabaseCollectionThroughputSetting) DeepCopy() *MongodbDatabaseCollectionThroughputSetting {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseCollectionThroughputSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseCollectionThroughputSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseCollectionThroughputSettingList) DeepCopyInto(out *MongodbDatabaseCollectionThroughputSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongodbDatabaseCollectionThroughputSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseCollectionThroughputSettingList.
func (in *MongodbDatabaseCollectionThroughputSettingList) DeepCopy() *MongodbDatabaseCollectionThroughputSettingList {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseCollectionThroughputSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseCollectionThroughputSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseList) DeepCopyInto(out *MongodbDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongodbDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseList.
func (in *MongodbDatabaseList) DeepCopy() *MongodbDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseThroughputSetting) DeepCopyInto(out *MongodbDatabaseThroughputSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseThroughputSetting.
func (in *MongodbDatabaseThroughputSetting) DeepCopy() *MongodbDatabaseThroughputSetting {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseThroughputSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseThroughputSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongodbDatabaseThroughputSettingList) DeepCopyInto(out *MongodbDatabaseThroughputSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongodbDatabaseThroughputSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongodbDatabaseThroughputSettingList.
func (in *MongodbDatabaseThroughputSettingList) DeepCopy() *MongodbDatabaseThroughputSettingList {
	if in == nil {
		return nil
	}
	out := new(MongodbDatabaseThroughputSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongodbDatabaseThroughputSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpatialSpec) DeepCopyInto(out *SpatialSpec) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpatialSpec.
func (in *SpatialSpec) DeepCopy() *SpatialSpec {
	if in == nil {
		return nil
	}
	out := new(SpatialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpatialSpec_Status) DeepCopyInto(out *SpatialSpec_Status) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpatialSpec_Status.
func (in *SpatialSpec_Status) DeepCopy() *SpatialSpec_Status {
	if in == nil {
		return nil
	}
	out := new(SpatialSpec_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerResource) DeepCopyInto(out *SqlContainerResource) {
	*out = *in
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int)
		**out = **in
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = new(ConflictResolutionPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = new(IndexingPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(ContainerPartitionKey)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UniqueKeyPolicy != nil {
		in, out := &in.UniqueKeyPolicy, &out.UniqueKeyPolicy
		*out = new(UniqueKeyPolicy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerResource.
func (in *SqlContainerResource) DeepCopy() *SqlContainerResource {
	if in == nil {
		return nil
	}
	out := new(SqlContainerResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerResource_Status) DeepCopyInto(out *SqlContainerResource_Status) {
	*out = *in
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int)
		**out = **in
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = new(ConflictResolutionPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = new(IndexingPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(ContainerPartitionKey_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UniqueKeyPolicy != nil {
		in, out := &in.UniqueKeyPolicy, &out.UniqueKeyPolicy
		*out = new(UniqueKeyPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerResource_Status.
func (in *SqlContainerResource_Status) DeepCopy() *SqlContainerResource_Status {
	if in == nil {
		return nil
	}
	out := new(SqlContainerResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainer_Status) DeepCopyInto(out *SqlContainer_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlContainerResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainer_Status.
func (in *SqlContainer_Status) DeepCopy() *SqlContainer_Status {
	if in == nil {
		return nil
	}
	out := new(SqlContainer_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabase) DeepCopyInto(out *SqlDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabase.
func (in *SqlDatabase) DeepCopy() *SqlDatabase {
	if in == nil {
		return nil
	}
	out := new(SqlDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainer) DeepCopyInto(out *SqlDatabaseContainer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainer.
func (in *SqlDatabaseContainer) DeepCopy() *SqlDatabaseContainer {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerList) DeepCopyInto(out *SqlDatabaseContainerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerList.
func (in *SqlDatabaseContainerList) DeepCopy() *SqlDatabaseContainerList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerStoredProcedure) DeepCopyInto(out *SqlDatabaseContainerStoredProcedure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerStoredProcedure.
func (in *SqlDatabaseContainerStoredProcedure) DeepCopy() *SqlDatabaseContainerStoredProcedure {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerStoredProcedure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerStoredProcedure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerStoredProcedureList) DeepCopyInto(out *SqlDatabaseContainerStoredProcedureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseContainerStoredProcedure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerStoredProcedureList.
func (in *SqlDatabaseContainerStoredProcedureList) DeepCopy() *SqlDatabaseContainerStoredProcedureList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerStoredProcedureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerStoredProcedureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerThroughputSetting) DeepCopyInto(out *SqlDatabaseContainerThroughputSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerThroughputSetting.
func (in *SqlDatabaseContainerThroughputSetting) DeepCopy() *SqlDatabaseContainerThroughputSetting {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerThroughputSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerThroughputSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerThroughputSettingList) DeepCopyInto(out *SqlDatabaseContainerThroughputSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseContainerThroughputSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerThroughputSettingList.
func (in *SqlDatabaseContainerThroughputSettingList) DeepCopy() *SqlDatabaseContainerThroughputSettingList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerThroughputSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerThroughputSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerTrigger) DeepCopyInto(out *SqlDatabaseContainerTrigger) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerTrigger.
func (in *SqlDatabaseContainerTrigger) DeepCopy() *SqlDatabaseContainerTrigger {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerTrigger) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerTriggerList) DeepCopyInto(out *SqlDatabaseContainerTriggerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseContainerTrigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerTriggerList.
func (in *SqlDatabaseContainerTriggerList) DeepCopy() *SqlDatabaseContainerTriggerList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerTriggerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerTriggerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerUserDefinedFunction) DeepCopyInto(out *SqlDatabaseContainerUserDefinedFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerUserDefinedFunction.
func (in *SqlDatabaseContainerUserDefinedFunction) DeepCopy() *SqlDatabaseContainerUserDefinedFunction {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerUserDefinedFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerUserDefinedFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseContainerUserDefinedFunctionList) DeepCopyInto(out *SqlDatabaseContainerUserDefinedFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseContainerUserDefinedFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseContainerUserDefinedFunctionList.
func (in *SqlDatabaseContainerUserDefinedFunctionList) DeepCopy() *SqlDatabaseContainerUserDefinedFunctionList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseContainerUserDefinedFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseContainerUserDefinedFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseList) DeepCopyInto(out *SqlDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseList.
func (in *SqlDatabaseList) DeepCopy() *SqlDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseResource) DeepCopyInto(out *SqlDatabaseResource) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseResource.
func (in *SqlDatabaseResource) DeepCopy() *SqlDatabaseResource {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseResource_Status) DeepCopyInto(out *SqlDatabaseResource_Status) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseResource_Status.
func (in *SqlDatabaseResource_Status) DeepCopy() *SqlDatabaseResource_Status {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseThroughputSetting) DeepCopyInto(out *SqlDatabaseThroughputSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseThroughputSetting.
func (in *SqlDatabaseThroughputSetting) DeepCopy() *SqlDatabaseThroughputSetting {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseThroughputSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseThroughputSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseThroughputSettingList) DeepCopyInto(out *SqlDatabaseThroughputSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabaseThroughputSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseThroughputSettingList.
func (in *SqlDatabaseThroughputSettingList) DeepCopy() *SqlDatabaseThroughputSettingList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseThroughputSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseThroughputSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabase_Status) DeepCopyInto(out *SqlDatabase_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlDatabaseResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabase_Status.
func (in *SqlDatabase_Status) DeepCopy() *SqlDatabase_Status {
	if in == nil {
		return nil
	}
	out := new(SqlDatabase_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureResource) DeepCopyInto(out *SqlStoredProcedureResource) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureResource.
func (in *SqlStoredProcedureResource) DeepCopy() *SqlStoredProcedureResource {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureResource_Status) DeepCopyInto(out *SqlStoredProcedureResource_Status) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureResource_Status.
func (in *SqlStoredProcedureResource_Status) DeepCopy() *SqlStoredProcedureResource_Status {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedure_Status) DeepCopyInto(out *SqlStoredProcedure_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlStoredProcedureResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedure_Status.
func (in *SqlStoredProcedure_Status) DeepCopy() *SqlStoredProcedure_Status {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedure_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerResource) DeepCopyInto(out *SqlTriggerResource) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TriggerOperation != nil {
		in, out := &in.TriggerOperation, &out.TriggerOperation
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerResource.
func (in *SqlTriggerResource) DeepCopy() *SqlTriggerResource {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerResource_Status) DeepCopyInto(out *SqlTriggerResource_Status) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TriggerOperation != nil {
		in, out := &in.TriggerOperation, &out.TriggerOperation
		*out = new(string)
		**out = **in
	}
	if in.TriggerType != nil {
		in, out := &in.TriggerType, &out.TriggerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerResource_Status.
func (in *SqlTriggerResource_Status) DeepCopy() *SqlTriggerResource_Status {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTrigger_Status) DeepCopyInto(out *SqlTrigger_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlTriggerResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTrigger_Status.
func (in *SqlTrigger_Status) DeepCopy() *SqlTrigger_Status {
	if in == nil {
		return nil
	}
	out := new(SqlTrigger_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlUserDefinedFunctionResource) DeepCopyInto(out *SqlUserDefinedFunctionResource) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlUserDefinedFunctionResource.
func (in *SqlUserDefinedFunctionResource) DeepCopy() *SqlUserDefinedFunctionResource {
	if in == nil {
		return nil
	}
	out := new(SqlUserDefinedFunctionResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlUserDefinedFunctionResource_Status) DeepCopyInto(out *SqlUserDefinedFunctionResource_Status) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlUserDefinedFunctionResource_Status.
func (in *SqlUserDefinedFunctionResource_Status) DeepCopy() *SqlUserDefinedFunctionResource_Status {
	if in == nil {
		return nil
	}
	out := new(SqlUserDefinedFunctionResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlUserDefinedFunction_Status) DeepCopyInto(out *SqlUserDefinedFunction_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(CreateUpdateOptions_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(SqlUserDefinedFunctionResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlUserDefinedFunction_Status.
func (in *SqlUserDefinedFunction_Status) DeepCopy() *SqlUserDefinedFunction_Status {
	if in == nil {
		return nil
	}
	out := new(SqlUserDefinedFunction_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThroughputPolicyResource) DeepCopyInto(out *ThroughputPolicyResource) {
	*out = *in
	if in.IncrementPercent != nil {
		in, out := &in.IncrementPercent, &out.IncrementPercent
		*out = new(int)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThroughputPolicyResource.
func (in *ThroughputPolicyResource) DeepCopy() *ThroughputPolicyResource {
	if in == nil {
		return nil
	}
	out := new(ThroughputPolicyResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThroughputPolicyResource_Status) DeepCopyInto(out *ThroughputPolicyResource_Status) {
	*out = *in
	if in.IncrementPercent != nil {
		in, out := &in.IncrementPercent, &out.IncrementPercent
		*out = new(int)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThroughputPolicyResource_Status.
func (in *ThroughputPolicyResource_Status) DeepCopy() *ThroughputPolicyResource_Status {
	if in == nil {
		return nil
	}
	out := new(ThroughputPolicyResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThroughputSettingsResource) DeepCopyInto(out *ThroughputSettingsResource) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(AutoscaleSettingsResource)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThroughputSettingsResource.
func (in *ThroughputSettingsResource) DeepCopy() *ThroughputSettingsResource {
	if in == nil {
		return nil
	}
	out := new(ThroughputSettingsResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThroughputSettingsResource_Status) DeepCopyInto(out *ThroughputSettingsResource_Status) {
	*out = *in
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(AutoscaleSettingsResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.MinimumThroughput != nil {
		in, out := &in.MinimumThroughput, &out.MinimumThroughput
		*out = new(string)
		**out = **in
	}
	if in.OfferReplacePending != nil {
		in, out := &in.OfferReplacePending, &out.OfferReplacePending
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThroughputSettingsResource_Status.
func (in *ThroughputSettingsResource_Status) DeepCopy() *ThroughputSettingsResource_Status {
	if in == nil {
		return nil
	}
	out := new(ThroughputSettingsResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThroughputSettings_Status) DeepCopyInto(out *ThroughputSettings_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ThroughputSettingsResource_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThroughputSettings_Status.
func (in *ThroughputSettings_Status) DeepCopy() *ThroughputSettings_Status {
	if in == nil {
		return nil
	}
	out := new(ThroughputSettings_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKey) DeepCopyInto(out *UniqueKey) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKey.
func (in *UniqueKey) DeepCopy() *UniqueKey {
	if in == nil {
		return nil
	}
	out := new(UniqueKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKeyPolicy) DeepCopyInto(out *UniqueKeyPolicy) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UniqueKeys != nil {
		in, out := &in.UniqueKeys, &out.UniqueKeys
		*out = make([]UniqueKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKeyPolicy.
func (in *UniqueKeyPolicy) DeepCopy() *UniqueKeyPolicy {
	if in == nil {
		return nil
	}
	out := new(UniqueKeyPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKeyPolicy_Status) DeepCopyInto(out *UniqueKeyPolicy_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UniqueKeys != nil {
		in, out := &in.UniqueKeys, &out.UniqueKeys
		*out = make([]UniqueKey_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKeyPolicy_Status.
func (in *UniqueKeyPolicy_Status) DeepCopy() *UniqueKeyPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(UniqueKeyPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UniqueKey_Status) DeepCopyInto(out *UniqueKey_Status) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UniqueKey_Status.
func (in *UniqueKey_Status) DeepCopy() *UniqueKey_Status {
	if in == nil {
		return nil
	}
	out := new(UniqueKey_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRule) DeepCopyInto(out *VirtualNetworkRule) {
	*out = *in
	if in.IgnoreMissingVNetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVNetServiceEndpoint, &out.IgnoreMissingVNetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRule.
func (in *VirtualNetworkRule) DeepCopy() *VirtualNetworkRule {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRule_Status) DeepCopyInto(out *VirtualNetworkRule_Status) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingVNetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVNetServiceEndpoint, &out.IgnoreMissingVNetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRule_Status.
func (in *VirtualNetworkRule_Status) DeepCopy() *VirtualNetworkRule_Status {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRule_Status)
	in.DeepCopyInto(out)
	return out
}
