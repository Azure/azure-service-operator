// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210601

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type Workspaces_SPECARM struct {
	AzureName string `json:"azureName"`

	//ETag: The ETag of the workspace.
	ETag *string `json:"eTag,omitempty"`

	//Location: The geo-location where the resource lives
	Location string `json:"location"`
	Name     string `json:"name"`

	//Properties: Workspace properties.
	Properties *WorkspaceProperties_SpecARM `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Workspaces_SPECARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-06-01"
func (specarm Workspaces_SPECARM) GetAPIVersion() string {
	return "2021-06-01"
}

// GetName returns the Name of the resource
func (specarm Workspaces_SPECARM) GetName() string {
	return specarm.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (specarm Workspaces_SPECARM) GetType() string {
	return ""
}

type WorkspaceProperties_SpecARM struct {
	//Features: Workspace features.
	Features *WorkspaceFeatures_SpecARM `json:"features,omitempty"`

	//ForceCmkForQuery: Indicates whether customer managed storage is mandatory for
	//query management.
	ForceCmkForQuery *bool `json:"forceCmkForQuery,omitempty"`

	//ProvisioningState: The provisioning state of the workspace.
	ProvisioningState *WorkspacePropertiesSpecProvisioningState `json:"provisioningState,omitempty"`

	//PublicNetworkAccessForIngestion: The network access type for accessing Log
	//Analytics ingestion.
	PublicNetworkAccessForIngestion *PublicNetworkAccessType_Spec `json:"publicNetworkAccessForIngestion,omitempty"`

	//PublicNetworkAccessForQuery: The network access type for accessing Log Analytics
	//query.
	PublicNetworkAccessForQuery *PublicNetworkAccessType_Spec `json:"publicNetworkAccessForQuery,omitempty"`

	//RetentionInDays: The workspace data retention in days. Allowed values are per
	//pricing plan. See pricing tiers documentation for details.
	RetentionInDays *int `json:"retentionInDays,omitempty"`

	//Sku: The SKU of the workspace.
	Sku *WorkspaceSku_SpecARM `json:"sku,omitempty"`

	//WorkspaceCapping: The daily volume cap for ingestion.
	WorkspaceCapping *WorkspaceCapping_SpecARM `json:"workspaceCapping,omitempty"`
}

type WorkspaceCapping_SpecARM struct {
	//DailyQuotaGb: The workspace daily quota for ingestion.
	DailyQuotaGb *float64 `json:"dailyQuotaGb,omitempty"`
}

type WorkspaceFeatures_SpecARM struct {
	ClusterResourceId *string `json:"clusterResourceId,omitempty"`

	//DisableLocalAuth: Disable Non-AAD based Auth.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	//EnableDataExport: Flag that indicate if data should be exported.
	EnableDataExport *bool `json:"enableDataExport,omitempty"`

	//EnableLogAccessUsingOnlyResourcePermissions: Flag that indicate which permission
	//to use - resource or workspace or both.
	EnableLogAccessUsingOnlyResourcePermissions *bool `json:"enableLogAccessUsingOnlyResourcePermissions,omitempty"`

	//ImmediatePurgeDataOn30Days: Flag that describes if we want to remove the data
	//after 30 days.
	ImmediatePurgeDataOn30Days *bool `json:"immediatePurgeDataOn30Days,omitempty"`
}

type WorkspaceSku_SpecARM struct {
	//CapacityReservationLevel: The capacity reservation level in GB for this
	//workspace, when CapacityReservation sku is selected.
	CapacityReservationLevel *WorkspaceSkuSpecCapacityReservationLevel `json:"capacityReservationLevel,omitempty"`

	//Name: The name of the SKU.
	Name WorkspaceSkuSpecName `json:"name"`
}
