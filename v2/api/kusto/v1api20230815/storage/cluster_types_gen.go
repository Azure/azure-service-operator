// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/rotisserie/eris"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=kusto.azure.com,resources=clusters,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=kusto.azure.com,resources={clusters/status,clusters/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:resource:categories={azure,kusto}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20230815.Cluster
// Generator information:
// - Generated from: /azure-kusto/resource-manager/Microsoft.Kusto/stable/2023-08-15/kusto.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Cluster_Spec   `json:"spec,omitempty"`
	Status            Cluster_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &Cluster{}

// GetConditions returns the conditions of the resource
func (cluster *Cluster) GetConditions() conditions.Conditions {
	return cluster.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (cluster *Cluster) SetConditions(conditions conditions.Conditions) {
	cluster.Status.Conditions = conditions
}

var _ configmaps.Exporter = &Cluster{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (cluster *Cluster) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if cluster.Spec.OperatorSpec == nil {
		return nil
	}
	return cluster.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &Cluster{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (cluster *Cluster) SecretDestinationExpressions() []*core.DestinationExpression {
	if cluster.Spec.OperatorSpec == nil {
		return nil
	}
	return cluster.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &Cluster{}

// AzureName returns the Azure name of the resource
func (cluster *Cluster) AzureName() string {
	return cluster.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2023-08-15"
func (cluster Cluster) GetAPIVersion() string {
	return "2023-08-15"
}

// GetResourceScope returns the scope of the resource
func (cluster *Cluster) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (cluster *Cluster) GetSpec() genruntime.ConvertibleSpec {
	return &cluster.Spec
}

// GetStatus returns the status of this resource
func (cluster *Cluster) GetStatus() genruntime.ConvertibleStatus {
	return &cluster.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (cluster *Cluster) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Kusto/clusters"
func (cluster *Cluster) GetType() string {
	return "Microsoft.Kusto/clusters"
}

// NewEmptyStatus returns a new empty (blank) status
func (cluster *Cluster) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &Cluster_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (cluster *Cluster) Owner() *genruntime.ResourceReference {
	if cluster.Spec.Owner == nil {
		return nil
	}

	group, kind := genruntime.LookupOwnerGroupKind(cluster.Spec)
	return cluster.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (cluster *Cluster) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*Cluster_STATUS); ok {
		cluster.Status = *st
		return nil
	}

	// Convert status to required version
	var st Cluster_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return eris.Wrap(err, "failed to convert status")
	}

	cluster.Status = st
	return nil
}

// Hub marks that this Cluster is the hub type for conversion
func (cluster *Cluster) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (cluster *Cluster) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: cluster.Spec.OriginalVersion,
		Kind:    "Cluster",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20230815.Cluster
// Generator information:
// - Generated from: /azure-kusto/resource-manager/Microsoft.Kusto/stable/2023-08-15/kusto.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Storage version of v1api20230815.APIVersion
// +kubebuilder:validation:Enum={"2023-08-15"}
type APIVersion string

const APIVersion_Value = APIVersion("2023-08-15")

// Storage version of v1api20230815.Cluster_Spec
type Cluster_Spec struct {
	AcceptedAudiences  []AcceptedAudiences `json:"acceptedAudiences,omitempty"`
	AllowedFqdnList    []string            `json:"allowedFqdnList,omitempty"`
	AllowedIpRangeList []string            `json:"allowedIpRangeList,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName              string                  `json:"azureName,omitempty"`
	EnableAutoStop         *bool                   `json:"enableAutoStop,omitempty"`
	EnableDiskEncryption   *bool                   `json:"enableDiskEncryption,omitempty"`
	EnableDoubleEncryption *bool                   `json:"enableDoubleEncryption,omitempty"`
	EnablePurge            *bool                   `json:"enablePurge,omitempty"`
	EnableStreamingIngest  *bool                   `json:"enableStreamingIngest,omitempty"`
	EngineType             *string                 `json:"engineType,omitempty"`
	Identity               *Identity               `json:"identity,omitempty"`
	KeyVaultProperties     *KeyVaultProperties     `json:"keyVaultProperties,omitempty"`
	LanguageExtensions     *LanguageExtensionsList `json:"languageExtensions,omitempty"`
	Location               *string                 `json:"location,omitempty"`
	OperatorSpec           *ClusterOperatorSpec    `json:"operatorSpec,omitempty"`
	OptimizedAutoscale     *OptimizedAutoscale     `json:"optimizedAutoscale,omitempty"`
	OriginalVersion        string                  `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a resources.azure.com/ResourceGroup resource
	Owner                              *genruntime.KnownResourceReference `group:"resources.azure.com" json:"owner,omitempty" kind:"ResourceGroup"`
	PropertyBag                        genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	PublicIPType                       *string                            `json:"publicIPType,omitempty"`
	PublicNetworkAccess                *string                            `json:"publicNetworkAccess,omitempty"`
	RestrictOutboundNetworkAccess      *string                            `json:"restrictOutboundNetworkAccess,omitempty"`
	Sku                                *AzureSku                          `json:"sku,omitempty"`
	Tags                               map[string]string                  `json:"tags,omitempty"`
	TrustedExternalTenants             []TrustedExternalTenant            `json:"trustedExternalTenants,omitempty"`
	VirtualClusterGraduationProperties *genruntime.SecretReference        `json:"virtualClusterGraduationProperties,omitempty"`
	VirtualNetworkConfiguration        *VirtualNetworkConfiguration       `json:"virtualNetworkConfiguration,omitempty"`
	Zones                              []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Cluster_Spec{}

// ConvertSpecFrom populates our Cluster_Spec from the provided source
func (cluster *Cluster_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == cluster {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(cluster)
}

// ConvertSpecTo populates the provided destination from our Cluster_Spec
func (cluster *Cluster_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == cluster {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(cluster)
}

// Storage version of v1api20230815.Cluster_STATUS
// Class representing a Kusto cluster.
type Cluster_STATUS struct {
	AcceptedAudiences             []AcceptedAudiences_STATUS          `json:"acceptedAudiences,omitempty"`
	AllowedFqdnList               []string                            `json:"allowedFqdnList,omitempty"`
	AllowedIpRangeList            []string                            `json:"allowedIpRangeList,omitempty"`
	Conditions                    []conditions.Condition              `json:"conditions,omitempty"`
	DataIngestionUri              *string                             `json:"dataIngestionUri,omitempty"`
	EnableAutoStop                *bool                               `json:"enableAutoStop,omitempty"`
	EnableDiskEncryption          *bool                               `json:"enableDiskEncryption,omitempty"`
	EnableDoubleEncryption        *bool                               `json:"enableDoubleEncryption,omitempty"`
	EnablePurge                   *bool                               `json:"enablePurge,omitempty"`
	EnableStreamingIngest         *bool                               `json:"enableStreamingIngest,omitempty"`
	EngineType                    *string                             `json:"engineType,omitempty"`
	Etag                          *string                             `json:"etag,omitempty"`
	Id                            *string                             `json:"id,omitempty"`
	Identity                      *Identity_STATUS                    `json:"identity,omitempty"`
	KeyVaultProperties            *KeyVaultProperties_STATUS          `json:"keyVaultProperties,omitempty"`
	LanguageExtensions            *LanguageExtensionsList_STATUS      `json:"languageExtensions,omitempty"`
	Location                      *string                             `json:"location,omitempty"`
	MigrationCluster              *MigrationClusterProperties_STATUS  `json:"migrationCluster,omitempty"`
	Name                          *string                             `json:"name,omitempty"`
	OptimizedAutoscale            *OptimizedAutoscale_STATUS          `json:"optimizedAutoscale,omitempty"`
	PrivateEndpointConnections    []PrivateEndpointConnection_STATUS  `json:"privateEndpointConnections,omitempty"`
	PropertyBag                   genruntime.PropertyBag              `json:"$propertyBag,omitempty"`
	ProvisioningState             *string                             `json:"provisioningState,omitempty"`
	PublicIPType                  *string                             `json:"publicIPType,omitempty"`
	PublicNetworkAccess           *string                             `json:"publicNetworkAccess,omitempty"`
	RestrictOutboundNetworkAccess *string                             `json:"restrictOutboundNetworkAccess,omitempty"`
	Sku                           *AzureSku_STATUS                    `json:"sku,omitempty"`
	State                         *string                             `json:"state,omitempty"`
	StateReason                   *string                             `json:"stateReason,omitempty"`
	SystemData                    *SystemData_STATUS                  `json:"systemData,omitempty"`
	Tags                          map[string]string                   `json:"tags,omitempty"`
	TrustedExternalTenants        []TrustedExternalTenant_STATUS      `json:"trustedExternalTenants,omitempty"`
	Type                          *string                             `json:"type,omitempty"`
	Uri                           *string                             `json:"uri,omitempty"`
	VirtualNetworkConfiguration   *VirtualNetworkConfiguration_STATUS `json:"virtualNetworkConfiguration,omitempty"`
	Zones                         []string                            `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &Cluster_STATUS{}

// ConvertStatusFrom populates our Cluster_STATUS from the provided source
func (cluster *Cluster_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == cluster {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(cluster)
}

// ConvertStatusTo populates the provided destination from our Cluster_STATUS
func (cluster *Cluster_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == cluster {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(cluster)
}

// Storage version of v1api20230815.AcceptedAudiences
// Represents an accepted audience trusted by the cluster.
type AcceptedAudiences struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20230815.AcceptedAudiences_STATUS
// Represents an accepted audience trusted by the cluster.
type AcceptedAudiences_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20230815.AzureSku
// Azure SKU definition.
type AzureSku struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1api20230815.AzureSku_STATUS
// Azure SKU definition.
type AzureSku_STATUS struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1api20230815.ClusterOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type ClusterOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20230815.Identity
// Identity for the resource.
type Identity struct {
	PropertyBag            genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	Type                   *string                       `json:"type,omitempty"`
	UserAssignedIdentities []UserAssignedIdentityDetails `json:"userAssignedIdentities,omitempty"`
}

// Storage version of v1api20230815.Identity_STATUS
// Identity for the resource.
type Identity_STATUS struct {
	PrincipalId            *string                                           `json:"principalId,omitempty"`
	PropertyBag            genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
	TenantId               *string                                           `json:"tenantId,omitempty"`
	Type                   *string                                           `json:"type,omitempty"`
	UserAssignedIdentities map[string]Identity_UserAssignedIdentities_STATUS `json:"userAssignedIdentities,omitempty"`
}

// Storage version of v1api20230815.KeyVaultProperties
// Properties of the key vault.
type KeyVaultProperties struct {
	KeyName     *string                `json:"keyName,omitempty"`
	KeyVaultUri *string                `json:"keyVaultUri,omitempty"`
	KeyVersion  *string                `json:"keyVersion,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	// UserIdentityReference: The user assigned identity (ARM resource id) that has access to the key.
	UserIdentityReference *genruntime.ResourceReference `armReference:"UserIdentity" json:"userIdentityReference,omitempty"`
}

// Storage version of v1api20230815.KeyVaultProperties_STATUS
// Properties of the key vault.
type KeyVaultProperties_STATUS struct {
	KeyName      *string                `json:"keyName,omitempty"`
	KeyVaultUri  *string                `json:"keyVaultUri,omitempty"`
	KeyVersion   *string                `json:"keyVersion,omitempty"`
	PropertyBag  genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	UserIdentity *string                `json:"userIdentity,omitempty"`
}

// Storage version of v1api20230815.LanguageExtensionsList
// The list of language extension objects.
type LanguageExtensionsList struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       []LanguageExtension    `json:"value,omitempty"`
}

// Storage version of v1api20230815.LanguageExtensionsList_STATUS
// The list of language extension objects.
type LanguageExtensionsList_STATUS struct {
	PropertyBag genruntime.PropertyBag     `json:"$propertyBag,omitempty"`
	Value       []LanguageExtension_STATUS `json:"value,omitempty"`
}

// Storage version of v1api20230815.MigrationClusterProperties_STATUS
// Represents a properties of a cluster that is part of a migration.
type MigrationClusterProperties_STATUS struct {
	DataIngestionUri *string                `json:"dataIngestionUri,omitempty"`
	Id               *string                `json:"id,omitempty"`
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Role             *string                `json:"role,omitempty"`
	Uri              *string                `json:"uri,omitempty"`
}

// Storage version of v1api20230815.OptimizedAutoscale
// A class that contains the optimized auto scale definition.
type OptimizedAutoscale struct {
	IsEnabled   *bool                  `json:"isEnabled,omitempty"`
	Maximum     *int                   `json:"maximum,omitempty"`
	Minimum     *int                   `json:"minimum,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Version     *int                   `json:"version,omitempty"`
}

// Storage version of v1api20230815.OptimizedAutoscale_STATUS
// A class that contains the optimized auto scale definition.
type OptimizedAutoscale_STATUS struct {
	IsEnabled   *bool                  `json:"isEnabled,omitempty"`
	Maximum     *int                   `json:"maximum,omitempty"`
	Minimum     *int                   `json:"minimum,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Version     *int                   `json:"version,omitempty"`
}

// Storage version of v1api20230815.PrivateEndpointConnection_STATUS
// A private endpoint connection
type PrivateEndpointConnection_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20230815.SystemData_STATUS
// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS struct {
	CreatedAt          *string                `json:"createdAt,omitempty"`
	CreatedBy          *string                `json:"createdBy,omitempty"`
	CreatedByType      *string                `json:"createdByType,omitempty"`
	LastModifiedAt     *string                `json:"lastModifiedAt,omitempty"`
	LastModifiedBy     *string                `json:"lastModifiedBy,omitempty"`
	LastModifiedByType *string                `json:"lastModifiedByType,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20230815.TrustedExternalTenant
// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenant struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20230815.TrustedExternalTenant_STATUS
// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenant_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20230815.VirtualNetworkConfiguration
// A class that contains virtual network definition.
type VirtualNetworkConfiguration struct {
	// +kubebuilder:validation:Required
	// DataManagementPublicIpReference: Data management's service public IP address resource id.
	DataManagementPublicIpReference *genruntime.ResourceReference `armReference:"DataManagementPublicIpId" json:"dataManagementPublicIpReference,omitempty"`

	// +kubebuilder:validation:Required
	// EnginePublicIpReference: Engine service's public IP address resource id.
	EnginePublicIpReference *genruntime.ResourceReference `armReference:"EnginePublicIpId" json:"enginePublicIpReference,omitempty"`
	PropertyBag             genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	State                   *string                       `json:"state,omitempty"`

	// +kubebuilder:validation:Required
	// SubnetReference: The subnet resource id.
	SubnetReference *genruntime.ResourceReference `armReference:"SubnetId" json:"subnetReference,omitempty"`
}

// Storage version of v1api20230815.VirtualNetworkConfiguration_STATUS
// A class that contains virtual network definition.
type VirtualNetworkConfiguration_STATUS struct {
	DataManagementPublicIpId *string                `json:"dataManagementPublicIpId,omitempty"`
	EnginePublicIpId         *string                `json:"enginePublicIpId,omitempty"`
	PropertyBag              genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	State                    *string                `json:"state,omitempty"`
	SubnetId                 *string                `json:"subnetId,omitempty"`
}

// Storage version of v1api20230815.Identity_UserAssignedIdentities_STATUS
type Identity_UserAssignedIdentities_STATUS struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20230815.LanguageExtension
// The language extension object.
type LanguageExtension struct {
	LanguageExtensionCustomImageName *string                `json:"languageExtensionCustomImageName,omitempty"`
	LanguageExtensionImageName       *string                `json:"languageExtensionImageName,omitempty"`
	LanguageExtensionName            *string                `json:"languageExtensionName,omitempty"`
	PropertyBag                      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20230815.LanguageExtension_STATUS
// The language extension object.
type LanguageExtension_STATUS struct {
	LanguageExtensionCustomImageName *string                `json:"languageExtensionCustomImageName,omitempty"`
	LanguageExtensionImageName       *string                `json:"languageExtensionImageName,omitempty"`
	LanguageExtensionName            *string                `json:"languageExtensionName,omitempty"`
	PropertyBag                      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20230815.UserAssignedIdentityDetails
// Information about the user assigned identity for the resource
type UserAssignedIdentityDetails struct {
	PropertyBag genruntime.PropertyBag       `json:"$propertyBag,omitempty"`
	Reference   genruntime.ResourceReference `armReference:"Reference" json:"reference,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
