//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptedAudiences) DeepCopyInto(out *AcceptedAudiences) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptedAudiences.
func (in *AcceptedAudiences) DeepCopy() *AcceptedAudiences {
	if in == nil {
		return nil
	}
	out := new(AcceptedAudiences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptedAudiences_STATUS) DeepCopyInto(out *AcceptedAudiences_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptedAudiences_STATUS.
func (in *AcceptedAudiences_STATUS) DeepCopy() *AcceptedAudiences_STATUS {
	if in == nil {
		return nil
	}
	out := new(AcceptedAudiences_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSku) DeepCopyInto(out *AzureSku) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSku.
func (in *AzureSku) DeepCopy() *AzureSku {
	if in == nil {
		return nil
	}
	out := new(AzureSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSku_STATUS) DeepCopyInto(out *AzureSku_STATUS) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSku_STATUS.
func (in *AzureSku_STATUS) DeepCopy() *AzureSku_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureSku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterOperatorSpec) DeepCopyInto(out *ClusterOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterOperatorSpec.
func (in *ClusterOperatorSpec) DeepCopy() *ClusterOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_STATUS) DeepCopyInto(out *Cluster_STATUS) {
	*out = *in
	if in.AcceptedAudiences != nil {
		in, out := &in.AcceptedAudiences, &out.AcceptedAudiences
		*out = make([]AcceptedAudiences_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedFqdnList != nil {
		in, out := &in.AllowedFqdnList, &out.AllowedFqdnList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedIpRangeList != nil {
		in, out := &in.AllowedIpRangeList, &out.AllowedIpRangeList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataIngestionUri != nil {
		in, out := &in.DataIngestionUri, &out.DataIngestionUri
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoStop != nil {
		in, out := &in.EnableAutoStop, &out.EnableAutoStop
		*out = new(bool)
		**out = **in
	}
	if in.EnableDiskEncryption != nil {
		in, out := &in.EnableDiskEncryption, &out.EnableDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableDoubleEncryption != nil {
		in, out := &in.EnableDoubleEncryption, &out.EnableDoubleEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnablePurge != nil {
		in, out := &in.EnablePurge, &out.EnablePurge
		*out = new(bool)
		**out = **in
	}
	if in.EnableStreamingIngest != nil {
		in, out := &in.EnableStreamingIngest, &out.EnableStreamingIngest
		*out = new(bool)
		**out = **in
	}
	if in.EngineType != nil {
		in, out := &in.EngineType, &out.EngineType
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(Identity_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultProperties != nil {
		in, out := &in.KeyVaultProperties, &out.KeyVaultProperties
		*out = new(KeyVaultProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.LanguageExtensions != nil {
		in, out := &in.LanguageExtensions, &out.LanguageExtensions
		*out = new(LanguageExtensionsList_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MigrationCluster != nil {
		in, out := &in.MigrationCluster, &out.MigrationCluster
		*out = new(MigrationClusterProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptimizedAutoscale != nil {
		in, out := &in.OptimizedAutoscale, &out.OptimizedAutoscale
		*out = new(OptimizedAutoscale_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateEndpointConnections != nil {
		in, out := &in.PrivateEndpointConnections, &out.PrivateEndpointConnections
		*out = make([]PrivateEndpointConnection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPType != nil {
		in, out := &in.PublicIPType, &out.PublicIPType
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.RestrictOutboundNetworkAccess != nil {
		in, out := &in.RestrictOutboundNetworkAccess, &out.RestrictOutboundNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(AzureSku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrustedExternalTenants != nil {
		in, out := &in.TrustedExternalTenants, &out.TrustedExternalTenants
		*out = make([]TrustedExternalTenant_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkConfiguration != nil {
		in, out := &in.VirtualNetworkConfiguration, &out.VirtualNetworkConfiguration
		*out = new(VirtualNetworkConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_STATUS.
func (in *Cluster_STATUS) DeepCopy() *Cluster_STATUS {
	if in == nil {
		return nil
	}
	out := new(Cluster_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_Spec) DeepCopyInto(out *Cluster_Spec) {
	*out = *in
	if in.AcceptedAudiences != nil {
		in, out := &in.AcceptedAudiences, &out.AcceptedAudiences
		*out = make([]AcceptedAudiences, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllowedFqdnList != nil {
		in, out := &in.AllowedFqdnList, &out.AllowedFqdnList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedIpRangeList != nil {
		in, out := &in.AllowedIpRangeList, &out.AllowedIpRangeList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableAutoStop != nil {
		in, out := &in.EnableAutoStop, &out.EnableAutoStop
		*out = new(bool)
		**out = **in
	}
	if in.EnableDiskEncryption != nil {
		in, out := &in.EnableDiskEncryption, &out.EnableDiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableDoubleEncryption != nil {
		in, out := &in.EnableDoubleEncryption, &out.EnableDoubleEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnablePurge != nil {
		in, out := &in.EnablePurge, &out.EnablePurge
		*out = new(bool)
		**out = **in
	}
	if in.EnableStreamingIngest != nil {
		in, out := &in.EnableStreamingIngest, &out.EnableStreamingIngest
		*out = new(bool)
		**out = **in
	}
	if in.EngineType != nil {
		in, out := &in.EngineType, &out.EngineType
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(Identity)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultProperties != nil {
		in, out := &in.KeyVaultProperties, &out.KeyVaultProperties
		*out = new(KeyVaultProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.LanguageExtensions != nil {
		in, out := &in.LanguageExtensions, &out.LanguageExtensions
		*out = new(LanguageExtensionsList)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(ClusterOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.OptimizedAutoscale != nil {
		in, out := &in.OptimizedAutoscale, &out.OptimizedAutoscale
		*out = new(OptimizedAutoscale)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPType != nil {
		in, out := &in.PublicIPType, &out.PublicIPType
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccess != nil {
		in, out := &in.PublicNetworkAccess, &out.PublicNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.RestrictOutboundNetworkAccess != nil {
		in, out := &in.RestrictOutboundNetworkAccess, &out.RestrictOutboundNetworkAccess
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(AzureSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrustedExternalTenants != nil {
		in, out := &in.TrustedExternalTenants, &out.TrustedExternalTenants
		*out = make([]TrustedExternalTenant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualClusterGraduationProperties != nil {
		in, out := &in.VirtualClusterGraduationProperties, &out.VirtualClusterGraduationProperties
		*out = new(genruntime.SecretReference)
		**out = **in
	}
	if in.VirtualNetworkConfiguration != nil {
		in, out := &in.VirtualNetworkConfiguration, &out.VirtualNetworkConfiguration
		*out = new(VirtualNetworkConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_Spec.
func (in *Cluster_Spec) DeepCopy() *Cluster_Spec {
	if in == nil {
		return nil
	}
	out := new(Cluster_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosmosDbDataConnection) DeepCopyInto(out *CosmosDbDataConnection) {
	*out = *in
	if in.CosmosDbAccountResourceReference != nil {
		in, out := &in.CosmosDbAccountResourceReference, &out.CosmosDbAccountResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.CosmosDbContainer != nil {
		in, out := &in.CosmosDbContainer, &out.CosmosDbContainer
		*out = new(string)
		**out = **in
	}
	if in.CosmosDbDatabase != nil {
		in, out := &in.CosmosDbDatabase, &out.CosmosDbDatabase
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceReference != nil {
		in, out := &in.ManagedIdentityResourceReference, &out.ManagedIdentityResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosmosDbDataConnection.
func (in *CosmosDbDataConnection) DeepCopy() *CosmosDbDataConnection {
	if in == nil {
		return nil
	}
	out := new(CosmosDbDataConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CosmosDbDataConnection_STATUS) DeepCopyInto(out *CosmosDbDataConnection_STATUS) {
	*out = *in
	if in.CosmosDbAccountResourceId != nil {
		in, out := &in.CosmosDbAccountResourceId, &out.CosmosDbAccountResourceId
		*out = new(string)
		**out = **in
	}
	if in.CosmosDbContainer != nil {
		in, out := &in.CosmosDbContainer, &out.CosmosDbContainer
		*out = new(string)
		**out = **in
	}
	if in.CosmosDbDatabase != nil {
		in, out := &in.CosmosDbDatabase, &out.CosmosDbDatabase
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityObjectId != nil {
		in, out := &in.ManagedIdentityObjectId, &out.ManagedIdentityObjectId
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceId != nil {
		in, out := &in.ManagedIdentityResourceId, &out.ManagedIdentityResourceId
		*out = new(string)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CosmosDbDataConnection_STATUS.
func (in *CosmosDbDataConnection_STATUS) DeepCopy() *CosmosDbDataConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(CosmosDbDataConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataConnection) DeepCopyInto(out *DataConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataConnection.
func (in *DataConnection) DeepCopy() *DataConnection {
	if in == nil {
		return nil
	}
	out := new(DataConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataConnectionList) DeepCopyInto(out *DataConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataConnectionList.
func (in *DataConnectionList) DeepCopy() *DataConnectionList {
	if in == nil {
		return nil
	}
	out := new(DataConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataConnectionOperatorSpec) DeepCopyInto(out *DataConnectionOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataConnectionOperatorSpec.
func (in *DataConnectionOperatorSpec) DeepCopy() *DataConnectionOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(DataConnectionOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataConnection_STATUS) DeepCopyInto(out *DataConnection_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CosmosDb != nil {
		in, out := &in.CosmosDb, &out.CosmosDb
		*out = new(CosmosDbDataConnection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.EventGrid != nil {
		in, out := &in.EventGrid, &out.EventGrid
		*out = new(EventGridDataConnection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.EventHub != nil {
		in, out := &in.EventHub, &out.EventHub
		*out = new(EventHubDataConnection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.IotHub != nil {
		in, out := &in.IotHub, &out.IotHub
		*out = new(IotHubDataConnection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataConnection_STATUS.
func (in *DataConnection_STATUS) DeepCopy() *DataConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(DataConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataConnection_Spec) DeepCopyInto(out *DataConnection_Spec) {
	*out = *in
	if in.CosmosDb != nil {
		in, out := &in.CosmosDb, &out.CosmosDb
		*out = new(CosmosDbDataConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.EventGrid != nil {
		in, out := &in.EventGrid, &out.EventGrid
		*out = new(EventGridDataConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.EventHub != nil {
		in, out := &in.EventHub, &out.EventHub
		*out = new(EventHubDataConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.IotHub != nil {
		in, out := &in.IotHub, &out.IotHub
		*out = new(IotHubDataConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(DataConnectionOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataConnection_Spec.
func (in *DataConnection_Spec) DeepCopy() *DataConnection_Spec {
	if in == nil {
		return nil
	}
	out := new(DataConnection_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database) DeepCopyInto(out *Database) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database.
func (in *Database) DeepCopy() *Database {
	if in == nil {
		return nil
	}
	out := new(Database)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Database) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseList) DeepCopyInto(out *DatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Database, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseList.
func (in *DatabaseList) DeepCopy() *DatabaseList {
	if in == nil {
		return nil
	}
	out := new(DatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseOperatorSpec) DeepCopyInto(out *DatabaseOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseOperatorSpec.
func (in *DatabaseOperatorSpec) DeepCopy() *DatabaseOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseStatistics_STATUS) DeepCopyInto(out *DatabaseStatistics_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseStatistics_STATUS.
func (in *DatabaseStatistics_STATUS) DeepCopy() *DatabaseStatistics_STATUS {
	if in == nil {
		return nil
	}
	out := new(DatabaseStatistics_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database_STATUS) DeepCopyInto(out *Database_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReadWrite != nil {
		in, out := &in.ReadWrite, &out.ReadWrite
		*out = new(ReadWriteDatabase_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database_STATUS.
func (in *Database_STATUS) DeepCopy() *Database_STATUS {
	if in == nil {
		return nil
	}
	out := new(Database_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Database_Spec) DeepCopyInto(out *Database_Spec) {
	*out = *in
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(DatabaseOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReadWrite != nil {
		in, out := &in.ReadWrite, &out.ReadWrite
		*out = new(ReadWriteDatabase)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Database_Spec.
func (in *Database_Spec) DeepCopy() *Database_Spec {
	if in == nil {
		return nil
	}
	out := new(Database_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventGridDataConnection) DeepCopyInto(out *EventGridDataConnection) {
	*out = *in
	if in.BlobStorageEventType != nil {
		in, out := &in.BlobStorageEventType, &out.BlobStorageEventType
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventGridResourceReference != nil {
		in, out := &in.EventGridResourceReference, &out.EventGridResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.EventHubResourceReference != nil {
		in, out := &in.EventHubResourceReference, &out.EventHubResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.IgnoreFirstRecord != nil {
		in, out := &in.IgnoreFirstRecord, &out.IgnoreFirstRecord
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceReference != nil {
		in, out := &in.ManagedIdentityResourceReference, &out.ManagedIdentityResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StorageAccountResourceReference != nil {
		in, out := &in.StorageAccountResourceReference, &out.StorageAccountResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventGridDataConnection.
func (in *EventGridDataConnection) DeepCopy() *EventGridDataConnection {
	if in == nil {
		return nil
	}
	out := new(EventGridDataConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventGridDataConnection_STATUS) DeepCopyInto(out *EventGridDataConnection_STATUS) {
	*out = *in
	if in.BlobStorageEventType != nil {
		in, out := &in.BlobStorageEventType, &out.BlobStorageEventType
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventGridResourceId != nil {
		in, out := &in.EventGridResourceId, &out.EventGridResourceId
		*out = new(string)
		**out = **in
	}
	if in.EventHubResourceId != nil {
		in, out := &in.EventHubResourceId, &out.EventHubResourceId
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IgnoreFirstRecord != nil {
		in, out := &in.IgnoreFirstRecord, &out.IgnoreFirstRecord
		*out = new(bool)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityObjectId != nil {
		in, out := &in.ManagedIdentityObjectId, &out.ManagedIdentityObjectId
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceId != nil {
		in, out := &in.ManagedIdentityResourceId, &out.ManagedIdentityResourceId
		*out = new(string)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountResourceId != nil {
		in, out := &in.StorageAccountResourceId, &out.StorageAccountResourceId
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventGridDataConnection_STATUS.
func (in *EventGridDataConnection_STATUS) DeepCopy() *EventGridDataConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(EventGridDataConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDataConnection) DeepCopyInto(out *EventHubDataConnection) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventHubResourceReference != nil {
		in, out := &in.EventHubResourceReference, &out.EventHubResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.EventSystemProperties != nil {
		in, out := &in.EventSystemProperties, &out.EventSystemProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceReference != nil {
		in, out := &in.ManagedIdentityResourceReference, &out.ManagedIdentityResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDataConnection.
func (in *EventHubDataConnection) DeepCopy() *EventHubDataConnection {
	if in == nil {
		return nil
	}
	out := new(EventHubDataConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventHubDataConnection_STATUS) DeepCopyInto(out *EventHubDataConnection_STATUS) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventHubResourceId != nil {
		in, out := &in.EventHubResourceId, &out.EventHubResourceId
		*out = new(string)
		**out = **in
	}
	if in.EventSystemProperties != nil {
		in, out := &in.EventSystemProperties, &out.EventSystemProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityObjectId != nil {
		in, out := &in.ManagedIdentityObjectId, &out.ManagedIdentityObjectId
		*out = new(string)
		**out = **in
	}
	if in.ManagedIdentityResourceId != nil {
		in, out := &in.ManagedIdentityResourceId, &out.ManagedIdentityResourceId
		*out = new(string)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventHubDataConnection_STATUS.
func (in *EventHubDataConnection_STATUS) DeepCopy() *EventHubDataConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(EventHubDataConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity) DeepCopyInto(out *Identity) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]UserAssignedIdentityDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity.
func (in *Identity) DeepCopy() *Identity {
	if in == nil {
		return nil
	}
	out := new(Identity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity_STATUS) DeepCopyInto(out *Identity_STATUS) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]Identity_UserAssignedIdentities_STATUS, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity_STATUS.
func (in *Identity_STATUS) DeepCopy() *Identity_STATUS {
	if in == nil {
		return nil
	}
	out := new(Identity_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity_UserAssignedIdentities_STATUS) DeepCopyInto(out *Identity_UserAssignedIdentities_STATUS) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity_UserAssignedIdentities_STATUS.
func (in *Identity_UserAssignedIdentities_STATUS) DeepCopy() *Identity_UserAssignedIdentities_STATUS {
	if in == nil {
		return nil
	}
	out := new(Identity_UserAssignedIdentities_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotHubDataConnection) DeepCopyInto(out *IotHubDataConnection) {
	*out = *in
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventSystemProperties != nil {
		in, out := &in.EventSystemProperties, &out.EventSystemProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IotHubResourceReference != nil {
		in, out := &in.IotHubResourceReference, &out.IotHubResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessPolicyName != nil {
		in, out := &in.SharedAccessPolicyName, &out.SharedAccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotHubDataConnection.
func (in *IotHubDataConnection) DeepCopy() *IotHubDataConnection {
	if in == nil {
		return nil
	}
	out := new(IotHubDataConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotHubDataConnection_STATUS) DeepCopyInto(out *IotHubDataConnection_STATUS) {
	*out = *in
	if in.ConsumerGroup != nil {
		in, out := &in.ConsumerGroup, &out.ConsumerGroup
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRouting != nil {
		in, out := &in.DatabaseRouting, &out.DatabaseRouting
		*out = new(string)
		**out = **in
	}
	if in.EventSystemProperties != nil {
		in, out := &in.EventSystemProperties, &out.EventSystemProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IotHubResourceId != nil {
		in, out := &in.IotHubResourceId, &out.IotHubResourceId
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MappingRuleName != nil {
		in, out := &in.MappingRuleName, &out.MappingRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RetrievalStartDate != nil {
		in, out := &in.RetrievalStartDate, &out.RetrievalStartDate
		*out = new(string)
		**out = **in
	}
	if in.SharedAccessPolicyName != nil {
		in, out := &in.SharedAccessPolicyName, &out.SharedAccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotHubDataConnection_STATUS.
func (in *IotHubDataConnection_STATUS) DeepCopy() *IotHubDataConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(IotHubDataConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultProperties) DeepCopyInto(out *KeyVaultProperties) {
	*out = *in
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultUri != nil {
		in, out := &in.KeyVaultUri, &out.KeyVaultUri
		*out = new(string)
		**out = **in
	}
	if in.KeyVersion != nil {
		in, out := &in.KeyVersion, &out.KeyVersion
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserIdentityReference != nil {
		in, out := &in.UserIdentityReference, &out.UserIdentityReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultProperties.
func (in *KeyVaultProperties) DeepCopy() *KeyVaultProperties {
	if in == nil {
		return nil
	}
	out := new(KeyVaultProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultProperties_STATUS) DeepCopyInto(out *KeyVaultProperties_STATUS) {
	*out = *in
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultUri != nil {
		in, out := &in.KeyVaultUri, &out.KeyVaultUri
		*out = new(string)
		**out = **in
	}
	if in.KeyVersion != nil {
		in, out := &in.KeyVersion, &out.KeyVersion
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserIdentity != nil {
		in, out := &in.UserIdentity, &out.UserIdentity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultProperties_STATUS.
func (in *KeyVaultProperties_STATUS) DeepCopy() *KeyVaultProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(KeyVaultProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanguageExtension) DeepCopyInto(out *LanguageExtension) {
	*out = *in
	if in.LanguageExtensionCustomImageName != nil {
		in, out := &in.LanguageExtensionCustomImageName, &out.LanguageExtensionCustomImageName
		*out = new(string)
		**out = **in
	}
	if in.LanguageExtensionImageName != nil {
		in, out := &in.LanguageExtensionImageName, &out.LanguageExtensionImageName
		*out = new(string)
		**out = **in
	}
	if in.LanguageExtensionName != nil {
		in, out := &in.LanguageExtensionName, &out.LanguageExtensionName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanguageExtension.
func (in *LanguageExtension) DeepCopy() *LanguageExtension {
	if in == nil {
		return nil
	}
	out := new(LanguageExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanguageExtension_STATUS) DeepCopyInto(out *LanguageExtension_STATUS) {
	*out = *in
	if in.LanguageExtensionCustomImageName != nil {
		in, out := &in.LanguageExtensionCustomImageName, &out.LanguageExtensionCustomImageName
		*out = new(string)
		**out = **in
	}
	if in.LanguageExtensionImageName != nil {
		in, out := &in.LanguageExtensionImageName, &out.LanguageExtensionImageName
		*out = new(string)
		**out = **in
	}
	if in.LanguageExtensionName != nil {
		in, out := &in.LanguageExtensionName, &out.LanguageExtensionName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanguageExtension_STATUS.
func (in *LanguageExtension_STATUS) DeepCopy() *LanguageExtension_STATUS {
	if in == nil {
		return nil
	}
	out := new(LanguageExtension_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanguageExtensionsList) DeepCopyInto(out *LanguageExtensionsList) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]LanguageExtension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanguageExtensionsList.
func (in *LanguageExtensionsList) DeepCopy() *LanguageExtensionsList {
	if in == nil {
		return nil
	}
	out := new(LanguageExtensionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanguageExtensionsList_STATUS) DeepCopyInto(out *LanguageExtensionsList_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]LanguageExtension_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanguageExtensionsList_STATUS.
func (in *LanguageExtensionsList_STATUS) DeepCopy() *LanguageExtensionsList_STATUS {
	if in == nil {
		return nil
	}
	out := new(LanguageExtensionsList_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationClusterProperties_STATUS) DeepCopyInto(out *MigrationClusterProperties_STATUS) {
	*out = *in
	if in.DataIngestionUri != nil {
		in, out := &in.DataIngestionUri, &out.DataIngestionUri
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationClusterProperties_STATUS.
func (in *MigrationClusterProperties_STATUS) DeepCopy() *MigrationClusterProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(MigrationClusterProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptimizedAutoscale) DeepCopyInto(out *OptimizedAutoscale) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(int)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptimizedAutoscale.
func (in *OptimizedAutoscale) DeepCopy() *OptimizedAutoscale {
	if in == nil {
		return nil
	}
	out := new(OptimizedAutoscale)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptimizedAutoscale_STATUS) DeepCopyInto(out *OptimizedAutoscale_STATUS) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(int)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptimizedAutoscale_STATUS.
func (in *OptimizedAutoscale_STATUS) DeepCopy() *OptimizedAutoscale_STATUS {
	if in == nil {
		return nil
	}
	out := new(OptimizedAutoscale_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointConnection_STATUS) DeepCopyInto(out *PrivateEndpointConnection_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointConnection_STATUS.
func (in *PrivateEndpointConnection_STATUS) DeepCopy() *PrivateEndpointConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteDatabase) DeepCopyInto(out *ReadWriteDatabase) {
	*out = *in
	if in.HotCachePeriod != nil {
		in, out := &in.HotCachePeriod, &out.HotCachePeriod
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultProperties != nil {
		in, out := &in.KeyVaultProperties, &out.KeyVaultProperties
		*out = new(KeyVaultProperties)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SoftDeletePeriod != nil {
		in, out := &in.SoftDeletePeriod, &out.SoftDeletePeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteDatabase.
func (in *ReadWriteDatabase) DeepCopy() *ReadWriteDatabase {
	if in == nil {
		return nil
	}
	out := new(ReadWriteDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadWriteDatabase_STATUS) DeepCopyInto(out *ReadWriteDatabase_STATUS) {
	*out = *in
	if in.HotCachePeriod != nil {
		in, out := &in.HotCachePeriod, &out.HotCachePeriod
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IsFollowed != nil {
		in, out := &in.IsFollowed, &out.IsFollowed
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultProperties != nil {
		in, out := &in.KeyVaultProperties, &out.KeyVaultProperties
		*out = new(KeyVaultProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.SoftDeletePeriod != nil {
		in, out := &in.SoftDeletePeriod, &out.SoftDeletePeriod
		*out = new(string)
		**out = **in
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = new(DatabaseStatistics_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.SuspensionDetails != nil {
		in, out := &in.SuspensionDetails, &out.SuspensionDetails
		*out = new(SuspensionDetails_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadWriteDatabase_STATUS.
func (in *ReadWriteDatabase_STATUS) DeepCopy() *ReadWriteDatabase_STATUS {
	if in == nil {
		return nil
	}
	out := new(ReadWriteDatabase_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuspensionDetails_STATUS) DeepCopyInto(out *SuspensionDetails_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SuspensionStartDate != nil {
		in, out := &in.SuspensionStartDate, &out.SuspensionStartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuspensionDetails_STATUS.
func (in *SuspensionDetails_STATUS) DeepCopy() *SuspensionDetails_STATUS {
	if in == nil {
		return nil
	}
	out := new(SuspensionDetails_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemData_STATUS) DeepCopyInto(out *SystemData_STATUS) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CreatedByType != nil {
		in, out := &in.CreatedByType, &out.CreatedByType
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedAt != nil {
		in, out := &in.LastModifiedAt, &out.LastModifiedAt
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedByType != nil {
		in, out := &in.LastModifiedByType, &out.LastModifiedByType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemData_STATUS.
func (in *SystemData_STATUS) DeepCopy() *SystemData_STATUS {
	if in == nil {
		return nil
	}
	out := new(SystemData_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustedExternalTenant) DeepCopyInto(out *TrustedExternalTenant) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustedExternalTenant.
func (in *TrustedExternalTenant) DeepCopy() *TrustedExternalTenant {
	if in == nil {
		return nil
	}
	out := new(TrustedExternalTenant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrustedExternalTenant_STATUS) DeepCopyInto(out *TrustedExternalTenant_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrustedExternalTenant_STATUS.
func (in *TrustedExternalTenant_STATUS) DeepCopy() *TrustedExternalTenant_STATUS {
	if in == nil {
		return nil
	}
	out := new(TrustedExternalTenant_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentityDetails) DeepCopyInto(out *UserAssignedIdentityDetails) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Reference = in.Reference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentityDetails.
func (in *UserAssignedIdentityDetails) DeepCopy() *UserAssignedIdentityDetails {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentityDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkConfiguration) DeepCopyInto(out *VirtualNetworkConfiguration) {
	*out = *in
	if in.DataManagementPublicIpReference != nil {
		in, out := &in.DataManagementPublicIpReference, &out.DataManagementPublicIpReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.EnginePublicIpReference != nil {
		in, out := &in.EnginePublicIpReference, &out.EnginePublicIpReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetReference != nil {
		in, out := &in.SubnetReference, &out.SubnetReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkConfiguration.
func (in *VirtualNetworkConfiguration) DeepCopy() *VirtualNetworkConfiguration {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkConfiguration_STATUS) DeepCopyInto(out *VirtualNetworkConfiguration_STATUS) {
	*out = *in
	if in.DataManagementPublicIpId != nil {
		in, out := &in.DataManagementPublicIpId, &out.DataManagementPublicIpId
		*out = new(string)
		**out = **in
	}
	if in.EnginePublicIpId != nil {
		in, out := &in.EnginePublicIpId, &out.EnginePublicIpId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetId != nil {
		in, out := &in.SubnetId, &out.SubnetId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkConfiguration_STATUS.
func (in *VirtualNetworkConfiguration_STATUS) DeepCopy() *VirtualNetworkConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}
