//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1api20210401storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryProperties_Spec) DeepCopyInto(out *ActiveDirectoryProperties_Spec) {
	*out = *in
	if in.AzureStorageSid != nil {
		in, out := &in.AzureStorageSid, &out.AzureStorageSid
		*out = new(string)
		**out = **in
	}
	if in.DomainGuid != nil {
		in, out := &in.DomainGuid, &out.DomainGuid
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainSid != nil {
		in, out := &in.DomainSid, &out.DomainSid
		*out = new(string)
		**out = **in
	}
	if in.ForestName != nil {
		in, out := &in.ForestName, &out.ForestName
		*out = new(string)
		**out = **in
	}
	if in.NetBiosDomainName != nil {
		in, out := &in.NetBiosDomainName, &out.NetBiosDomainName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryProperties_Spec.
func (in *ActiveDirectoryProperties_Spec) DeepCopy() *ActiveDirectoryProperties_Spec {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryProperties_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryProperties_Status) DeepCopyInto(out *ActiveDirectoryProperties_Status) {
	*out = *in
	if in.AzureStorageSid != nil {
		in, out := &in.AzureStorageSid, &out.AzureStorageSid
		*out = new(string)
		**out = **in
	}
	if in.DomainGuid != nil {
		in, out := &in.DomainGuid, &out.DomainGuid
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainSid != nil {
		in, out := &in.DomainSid, &out.DomainSid
		*out = new(string)
		**out = **in
	}
	if in.ForestName != nil {
		in, out := &in.ForestName, &out.ForestName
		*out = new(string)
		**out = **in
	}
	if in.NetBiosDomainName != nil {
		in, out := &in.NetBiosDomainName, &out.NetBiosDomainName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryProperties_Status.
func (in *ActiveDirectoryProperties_Status) DeepCopy() *ActiveDirectoryProperties_Status {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFilesIdentityBasedAuthentication_Spec) DeepCopyInto(out *AzureFilesIdentityBasedAuthentication_Spec) {
	*out = *in
	if in.ActiveDirectoryProperties != nil {
		in, out := &in.ActiveDirectoryProperties, &out.ActiveDirectoryProperties
		*out = new(ActiveDirectoryProperties_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultSharePermission != nil {
		in, out := &in.DefaultSharePermission, &out.DefaultSharePermission
		*out = new(string)
		**out = **in
	}
	if in.DirectoryServiceOptions != nil {
		in, out := &in.DirectoryServiceOptions, &out.DirectoryServiceOptions
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFilesIdentityBasedAuthentication_Spec.
func (in *AzureFilesIdentityBasedAuthentication_Spec) DeepCopy() *AzureFilesIdentityBasedAuthentication_Spec {
	if in == nil {
		return nil
	}
	out := new(AzureFilesIdentityBasedAuthentication_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFilesIdentityBasedAuthentication_Status) DeepCopyInto(out *AzureFilesIdentityBasedAuthentication_Status) {
	*out = *in
	if in.ActiveDirectoryProperties != nil {
		in, out := &in.ActiveDirectoryProperties, &out.ActiveDirectoryProperties
		*out = new(ActiveDirectoryProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultSharePermission != nil {
		in, out := &in.DefaultSharePermission, &out.DefaultSharePermission
		*out = new(string)
		**out = **in
	}
	if in.DirectoryServiceOptions != nil {
		in, out := &in.DirectoryServiceOptions, &out.DirectoryServiceOptions
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFilesIdentityBasedAuthentication_Status.
func (in *AzureFilesIdentityBasedAuthentication_Status) DeepCopy() *AzureFilesIdentityBasedAuthentication_Status {
	if in == nil {
		return nil
	}
	out := new(AzureFilesIdentityBasedAuthentication_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobContainer_Status) DeepCopyInto(out *BlobContainer_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultEncryptionScope != nil {
		in, out := &in.DefaultEncryptionScope, &out.DefaultEncryptionScope
		*out = new(string)
		**out = **in
	}
	if in.Deleted != nil {
		in, out := &in.Deleted, &out.Deleted
		*out = new(bool)
		**out = **in
	}
	if in.DeletedTime != nil {
		in, out := &in.DeletedTime, &out.DeletedTime
		*out = new(string)
		**out = **in
	}
	if in.DenyEncryptionScopeOverride != nil {
		in, out := &in.DenyEncryptionScopeOverride, &out.DenyEncryptionScopeOverride
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.HasImmutabilityPolicy != nil {
		in, out := &in.HasImmutabilityPolicy, &out.HasImmutabilityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.HasLegalHold != nil {
		in, out := &in.HasLegalHold, &out.HasLegalHold
		*out = new(bool)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ImmutabilityPolicy != nil {
		in, out := &in.ImmutabilityPolicy, &out.ImmutabilityPolicy
		*out = new(ImmutabilityPolicyProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.ImmutableStorageWithVersioning != nil {
		in, out := &in.ImmutableStorageWithVersioning, &out.ImmutableStorageWithVersioning
		*out = new(ImmutableStorageWithVersioning_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(string)
		**out = **in
	}
	if in.LeaseDuration != nil {
		in, out := &in.LeaseDuration, &out.LeaseDuration
		*out = new(string)
		**out = **in
	}
	if in.LeaseState != nil {
		in, out := &in.LeaseState, &out.LeaseState
		*out = new(string)
		**out = **in
	}
	if in.LeaseStatus != nil {
		in, out := &in.LeaseStatus, &out.LeaseStatus
		*out = new(string)
		**out = **in
	}
	if in.LegalHold != nil {
		in, out := &in.LegalHold, &out.LegalHold
		*out = new(LegalHoldProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicAccess != nil {
		in, out := &in.PublicAccess, &out.PublicAccess
		*out = new(string)
		**out = **in
	}
	if in.RemainingRetentionDays != nil {
		in, out := &in.RemainingRetentionDays, &out.RemainingRetentionDays
		*out = new(int)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobContainer_Status.
func (in *BlobContainer_Status) DeepCopy() *BlobContainer_Status {
	if in == nil {
		return nil
	}
	out := new(BlobContainer_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobServiceProperties_Status) DeepCopyInto(out *BlobServiceProperties_Status) {
	*out = *in
	if in.AutomaticSnapshotPolicyEnabled != nil {
		in, out := &in.AutomaticSnapshotPolicyEnabled, &out.AutomaticSnapshotPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ChangeFeed != nil {
		in, out := &in.ChangeFeed, &out.ChangeFeed
		*out = new(ChangeFeed_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerDeleteRetentionPolicy != nil {
		in, out := &in.ContainerDeleteRetentionPolicy, &out.ContainerDeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceVersion != nil {
		in, out := &in.DefaultServiceVersion, &out.DefaultServiceVersion
		*out = new(string)
		**out = **in
	}
	if in.DeleteRetentionPolicy != nil {
		in, out := &in.DeleteRetentionPolicy, &out.DeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IsVersioningEnabled != nil {
		in, out := &in.IsVersioningEnabled, &out.IsVersioningEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LastAccessTimeTrackingPolicy != nil {
		in, out := &in.LastAccessTimeTrackingPolicy, &out.LastAccessTimeTrackingPolicy
		*out = new(LastAccessTimeTrackingPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RestorePolicy != nil {
		in, out := &in.RestorePolicy, &out.RestorePolicy
		*out = new(RestorePolicyProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobServiceProperties_Status.
func (in *BlobServiceProperties_Status) DeepCopy() *BlobServiceProperties_Status {
	if in == nil {
		return nil
	}
	out := new(BlobServiceProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangeFeed_Spec) DeepCopyInto(out *ChangeFeed_Spec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangeFeed_Spec.
func (in *ChangeFeed_Spec) DeepCopy() *ChangeFeed_Spec {
	if in == nil {
		return nil
	}
	out := new(ChangeFeed_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangeFeed_Status) DeepCopyInto(out *ChangeFeed_Status) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetentionInDays != nil {
		in, out := &in.RetentionInDays, &out.RetentionInDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangeFeed_Status.
func (in *ChangeFeed_Status) DeepCopy() *ChangeFeed_Status {
	if in == nil {
		return nil
	}
	out := new(ChangeFeed_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRule_Spec) DeepCopyInto(out *CorsRule_Spec) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRule_Spec.
func (in *CorsRule_Spec) DeepCopy() *CorsRule_Spec {
	if in == nil {
		return nil
	}
	out := new(CorsRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRule_Status) DeepCopyInto(out *CorsRule_Status) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRule_Status.
func (in *CorsRule_Status) DeepCopy() *CorsRule_Status {
	if in == nil {
		return nil
	}
	out := new(CorsRule_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRules_Spec) DeepCopyInto(out *CorsRules_Spec) {
	*out = *in
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRule_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRules_Spec.
func (in *CorsRules_Spec) DeepCopy() *CorsRules_Spec {
	if in == nil {
		return nil
	}
	out := new(CorsRules_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRules_Status) DeepCopyInto(out *CorsRules_Status) {
	*out = *in
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRule_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRules_Status.
func (in *CorsRules_Status) DeepCopy() *CorsRules_Status {
	if in == nil {
		return nil
	}
	out := new(CorsRules_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomain_Spec) DeepCopyInto(out *CustomDomain_Spec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UseSubDomainName != nil {
		in, out := &in.UseSubDomainName, &out.UseSubDomainName
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomain_Spec.
func (in *CustomDomain_Spec) DeepCopy() *CustomDomain_Spec {
	if in == nil {
		return nil
	}
	out := new(CustomDomain_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomain_Status) DeepCopyInto(out *CustomDomain_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UseSubDomainName != nil {
		in, out := &in.UseSubDomainName, &out.UseSubDomainName
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomain_Status.
func (in *CustomDomain_Status) DeepCopy() *CustomDomain_Status {
	if in == nil {
		return nil
	}
	out := new(CustomDomain_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicy_Spec) DeepCopyInto(out *DeleteRetentionPolicy_Spec) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicy_Spec.
func (in *DeleteRetentionPolicy_Spec) DeepCopy() *DeleteRetentionPolicy_Spec {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicy_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicy_Status) DeepCopyInto(out *DeleteRetentionPolicy_Status) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicy_Status.
func (in *DeleteRetentionPolicy_Status) DeepCopy() *DeleteRetentionPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionIdentity_Spec) DeepCopyInto(out *EncryptionIdentity_Spec) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserAssignedIdentityReference != nil {
		in, out := &in.UserAssignedIdentityReference, &out.UserAssignedIdentityReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionIdentity_Spec.
func (in *EncryptionIdentity_Spec) DeepCopy() *EncryptionIdentity_Spec {
	if in == nil {
		return nil
	}
	out := new(EncryptionIdentity_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionIdentity_Status) DeepCopyInto(out *EncryptionIdentity_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UserAssignedIdentity != nil {
		in, out := &in.UserAssignedIdentity, &out.UserAssignedIdentity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionIdentity_Status.
func (in *EncryptionIdentity_Status) DeepCopy() *EncryptionIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(EncryptionIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionService_Spec) DeepCopyInto(out *EncryptionService_Spec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionService_Spec.
func (in *EncryptionService_Spec) DeepCopy() *EncryptionService_Spec {
	if in == nil {
		return nil
	}
	out := new(EncryptionService_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionService_Status) DeepCopyInto(out *EncryptionService_Status) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.LastEnabledTime != nil {
		in, out := &in.LastEnabledTime, &out.LastEnabledTime
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionService_Status.
func (in *EncryptionService_Status) DeepCopy() *EncryptionService_Status {
	if in == nil {
		return nil
	}
	out := new(EncryptionService_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionServices_Spec) DeepCopyInto(out *EncryptionServices_Spec) {
	*out = *in
	if in.Blob != nil {
		in, out := &in.Blob, &out.Blob
		*out = new(EncryptionService_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(EncryptionService_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = new(EncryptionService_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(EncryptionService_Spec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionServices_Spec.
func (in *EncryptionServices_Spec) DeepCopy() *EncryptionServices_Spec {
	if in == nil {
		return nil
	}
	out := new(EncryptionServices_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionServices_Status) DeepCopyInto(out *EncryptionServices_Status) {
	*out = *in
	if in.Blob != nil {
		in, out := &in.Blob, &out.Blob
		*out = new(EncryptionService_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(EncryptionService_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = new(EncryptionService_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(EncryptionService_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionServices_Status.
func (in *EncryptionServices_Status) DeepCopy() *EncryptionServices_Status {
	if in == nil {
		return nil
	}
	out := new(EncryptionServices_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Encryption_Spec) DeepCopyInto(out *Encryption_Spec) {
	*out = *in
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(EncryptionIdentity_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.KeySource != nil {
		in, out := &in.KeySource, &out.KeySource
		*out = new(string)
		**out = **in
	}
	if in.Keyvaultproperties != nil {
		in, out := &in.Keyvaultproperties, &out.Keyvaultproperties
		*out = new(KeyVaultProperties_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequireInfrastructureEncryption != nil {
		in, out := &in.RequireInfrastructureEncryption, &out.RequireInfrastructureEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = new(EncryptionServices_Spec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Encryption_Spec.
func (in *Encryption_Spec) DeepCopy() *Encryption_Spec {
	if in == nil {
		return nil
	}
	out := new(Encryption_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Encryption_Status) DeepCopyInto(out *Encryption_Status) {
	*out = *in
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(EncryptionIdentity_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.KeySource != nil {
		in, out := &in.KeySource, &out.KeySource
		*out = new(string)
		**out = **in
	}
	if in.Keyvaultproperties != nil {
		in, out := &in.Keyvaultproperties, &out.Keyvaultproperties
		*out = new(KeyVaultProperties_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequireInfrastructureEncryption != nil {
		in, out := &in.RequireInfrastructureEncryption, &out.RequireInfrastructureEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = new(EncryptionServices_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Encryption_Status.
func (in *Encryption_Status) DeepCopy() *Encryption_Status {
	if in == nil {
		return nil
	}
	out := new(Encryption_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_Spec) DeepCopyInto(out *ExtendedLocation_Spec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_Spec.
func (in *ExtendedLocation_Spec) DeepCopy() *ExtendedLocation_Spec {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_Status) DeepCopyInto(out *ExtendedLocation_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_Status.
func (in *ExtendedLocation_Status) DeepCopy() *ExtendedLocation_Status {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRule_Spec) DeepCopyInto(out *IPRule_Spec) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRule_Spec.
func (in *IPRule_Spec) DeepCopy() *IPRule_Spec {
	if in == nil {
		return nil
	}
	out := new(IPRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRule_Status) DeepCopyInto(out *IPRule_Status) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRule_Status.
func (in *IPRule_Status) DeepCopy() *IPRule_Status {
	if in == nil {
		return nil
	}
	out := new(IPRule_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity_Spec) DeepCopyInto(out *Identity_Spec) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity_Spec.
func (in *Identity_Spec) DeepCopy() *Identity_Spec {
	if in == nil {
		return nil
	}
	out := new(Identity_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Identity_Status) DeepCopyInto(out *Identity_Status) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]UserAssignedIdentity_Status, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Identity_Status.
func (in *Identity_Status) DeepCopy() *Identity_Status {
	if in == nil {
		return nil
	}
	out := new(Identity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmutabilityPolicyProperties_Status) DeepCopyInto(out *ImmutabilityPolicyProperties_Status) {
	*out = *in
	if in.AllowProtectedAppendWrites != nil {
		in, out := &in.AllowProtectedAppendWrites, &out.AllowProtectedAppendWrites
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ImmutabilityPeriodSinceCreationInDays != nil {
		in, out := &in.ImmutabilityPeriodSinceCreationInDays, &out.ImmutabilityPeriodSinceCreationInDays
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.UpdateHistory != nil {
		in, out := &in.UpdateHistory, &out.UpdateHistory
		*out = make([]UpdateHistoryProperty_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmutabilityPolicyProperties_Status.
func (in *ImmutabilityPolicyProperties_Status) DeepCopy() *ImmutabilityPolicyProperties_Status {
	if in == nil {
		return nil
	}
	out := new(ImmutabilityPolicyProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmutableStorageWithVersioning_Spec) DeepCopyInto(out *ImmutableStorageWithVersioning_Spec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmutableStorageWithVersioning_Spec.
func (in *ImmutableStorageWithVersioning_Spec) DeepCopy() *ImmutableStorageWithVersioning_Spec {
	if in == nil {
		return nil
	}
	out := new(ImmutableStorageWithVersioning_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmutableStorageWithVersioning_Status) DeepCopyInto(out *ImmutableStorageWithVersioning_Status) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MigrationState != nil {
		in, out := &in.MigrationState, &out.MigrationState
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TimeStamp != nil {
		in, out := &in.TimeStamp, &out.TimeStamp
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmutableStorageWithVersioning_Status.
func (in *ImmutableStorageWithVersioning_Status) DeepCopy() *ImmutableStorageWithVersioning_Status {
	if in == nil {
		return nil
	}
	out := new(ImmutableStorageWithVersioning_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPolicy_Spec) DeepCopyInto(out *KeyPolicy_Spec) {
	*out = *in
	if in.KeyExpirationPeriodInDays != nil {
		in, out := &in.KeyExpirationPeriodInDays, &out.KeyExpirationPeriodInDays
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPolicy_Spec.
func (in *KeyPolicy_Spec) DeepCopy() *KeyPolicy_Spec {
	if in == nil {
		return nil
	}
	out := new(KeyPolicy_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPolicy_Status) DeepCopyInto(out *KeyPolicy_Status) {
	*out = *in
	if in.KeyExpirationPeriodInDays != nil {
		in, out := &in.KeyExpirationPeriodInDays, &out.KeyExpirationPeriodInDays
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPolicy_Status.
func (in *KeyPolicy_Status) DeepCopy() *KeyPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(KeyPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultProperties_Spec) DeepCopyInto(out *KeyVaultProperties_Spec) {
	*out = *in
	if in.Keyname != nil {
		in, out := &in.Keyname, &out.Keyname
		*out = new(string)
		**out = **in
	}
	if in.Keyvaulturi != nil {
		in, out := &in.Keyvaulturi, &out.Keyvaulturi
		*out = new(string)
		**out = **in
	}
	if in.Keyversion != nil {
		in, out := &in.Keyversion, &out.Keyversion
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultProperties_Spec.
func (in *KeyVaultProperties_Spec) DeepCopy() *KeyVaultProperties_Spec {
	if in == nil {
		return nil
	}
	out := new(KeyVaultProperties_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultProperties_Status) DeepCopyInto(out *KeyVaultProperties_Status) {
	*out = *in
	if in.CurrentVersionedKeyIdentifier != nil {
		in, out := &in.CurrentVersionedKeyIdentifier, &out.CurrentVersionedKeyIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Keyname != nil {
		in, out := &in.Keyname, &out.Keyname
		*out = new(string)
		**out = **in
	}
	if in.Keyvaulturi != nil {
		in, out := &in.Keyvaulturi, &out.Keyvaulturi
		*out = new(string)
		**out = **in
	}
	if in.Keyversion != nil {
		in, out := &in.Keyversion, &out.Keyversion
		*out = new(string)
		**out = **in
	}
	if in.LastKeyRotationTimestamp != nil {
		in, out := &in.LastKeyRotationTimestamp, &out.LastKeyRotationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultProperties_Status.
func (in *KeyVaultProperties_Status) DeepCopy() *KeyVaultProperties_Status {
	if in == nil {
		return nil
	}
	out := new(KeyVaultProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastAccessTimeTrackingPolicy_Spec) DeepCopyInto(out *LastAccessTimeTrackingPolicy_Spec) {
	*out = *in
	if in.BlobType != nil {
		in, out := &in.BlobType, &out.BlobType
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrackingGranularityInDays != nil {
		in, out := &in.TrackingGranularityInDays, &out.TrackingGranularityInDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastAccessTimeTrackingPolicy_Spec.
func (in *LastAccessTimeTrackingPolicy_Spec) DeepCopy() *LastAccessTimeTrackingPolicy_Spec {
	if in == nil {
		return nil
	}
	out := new(LastAccessTimeTrackingPolicy_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastAccessTimeTrackingPolicy_Status) DeepCopyInto(out *LastAccessTimeTrackingPolicy_Status) {
	*out = *in
	if in.BlobType != nil {
		in, out := &in.BlobType, &out.BlobType
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrackingGranularityInDays != nil {
		in, out := &in.TrackingGranularityInDays, &out.TrackingGranularityInDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastAccessTimeTrackingPolicy_Status.
func (in *LastAccessTimeTrackingPolicy_Status) DeepCopy() *LastAccessTimeTrackingPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(LastAccessTimeTrackingPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LegalHoldProperties_Status) DeepCopyInto(out *LegalHoldProperties_Status) {
	*out = *in
	if in.HasLegalHold != nil {
		in, out := &in.HasLegalHold, &out.HasLegalHold
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagProperty_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LegalHoldProperties_Status.
func (in *LegalHoldProperties_Status) DeepCopy() *LegalHoldProperties_Status {
	if in == nil {
		return nil
	}
	out := new(LegalHoldProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleSet_Spec) DeepCopyInto(out *NetworkRuleSet_Spec) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IPRule_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceAccessRules != nil {
		in, out := &in.ResourceAccessRules, &out.ResourceAccessRules
		*out = make([]ResourceAccessRule_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkRules != nil {
		in, out := &in.VirtualNetworkRules, &out.VirtualNetworkRules
		*out = make([]VirtualNetworkRule_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleSet_Spec.
func (in *NetworkRuleSet_Spec) DeepCopy() *NetworkRuleSet_Spec {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleSet_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleSet_Status) DeepCopyInto(out *NetworkRuleSet_Status) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IPRule_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceAccessRules != nil {
		in, out := &in.ResourceAccessRules, &out.ResourceAccessRules
		*out = make([]ResourceAccessRule_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkRules != nil {
		in, out := &in.VirtualNetworkRules, &out.VirtualNetworkRules
		*out = make([]VirtualNetworkRule_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleSet_Status.
func (in *NetworkRuleSet_Status) DeepCopy() *NetworkRuleSet_Status {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleSet_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueServiceProperties_Status) DeepCopyInto(out *QueueServiceProperties_Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueServiceProperties_Status.
func (in *QueueServiceProperties_Status) DeepCopy() *QueueServiceProperties_Status {
	if in == nil {
		return nil
	}
	out := new(QueueServiceProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAccessRule_Spec) DeepCopyInto(out *ResourceAccessRule_Spec) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceReference != nil {
		in, out := &in.ResourceReference, &out.ResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAccessRule_Spec.
func (in *ResourceAccessRule_Spec) DeepCopy() *ResourceAccessRule_Spec {
	if in == nil {
		return nil
	}
	out := new(ResourceAccessRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAccessRule_Status) DeepCopyInto(out *ResourceAccessRule_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceId != nil {
		in, out := &in.ResourceId, &out.ResourceId
		*out = new(string)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAccessRule_Status.
func (in *ResourceAccessRule_Status) DeepCopy() *ResourceAccessRule_Status {
	if in == nil {
		return nil
	}
	out := new(ResourceAccessRule_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestorePolicyProperties_Spec) DeepCopyInto(out *RestorePolicyProperties_Spec) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestorePolicyProperties_Spec.
func (in *RestorePolicyProperties_Spec) DeepCopy() *RestorePolicyProperties_Spec {
	if in == nil {
		return nil
	}
	out := new(RestorePolicyProperties_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestorePolicyProperties_Status) DeepCopyInto(out *RestorePolicyProperties_Status) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LastEnabledTime != nil {
		in, out := &in.LastEnabledTime, &out.LastEnabledTime
		*out = new(string)
		**out = **in
	}
	if in.MinRestoreTime != nil {
		in, out := &in.MinRestoreTime, &out.MinRestoreTime
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestorePolicyProperties_Status.
func (in *RestorePolicyProperties_Status) DeepCopy() *RestorePolicyProperties_Status {
	if in == nil {
		return nil
	}
	out := new(RestorePolicyProperties_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingPreference_Spec) DeepCopyInto(out *RoutingPreference_Spec) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublishInternetEndpoints != nil {
		in, out := &in.PublishInternetEndpoints, &out.PublishInternetEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.PublishMicrosoftEndpoints != nil {
		in, out := &in.PublishMicrosoftEndpoints, &out.PublishMicrosoftEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.RoutingChoice != nil {
		in, out := &in.RoutingChoice, &out.RoutingChoice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingPreference_Spec.
func (in *RoutingPreference_Spec) DeepCopy() *RoutingPreference_Spec {
	if in == nil {
		return nil
	}
	out := new(RoutingPreference_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingPreference_Status) DeepCopyInto(out *RoutingPreference_Status) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublishInternetEndpoints != nil {
		in, out := &in.PublishInternetEndpoints, &out.PublishInternetEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.PublishMicrosoftEndpoints != nil {
		in, out := &in.PublishMicrosoftEndpoints, &out.PublishMicrosoftEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.RoutingChoice != nil {
		in, out := &in.RoutingChoice, &out.RoutingChoice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingPreference_Status.
func (in *RoutingPreference_Status) DeepCopy() *RoutingPreference_Status {
	if in == nil {
		return nil
	}
	out := new(RoutingPreference_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SasPolicy_Spec) DeepCopyInto(out *SasPolicy_Spec) {
	*out = *in
	if in.ExpirationAction != nil {
		in, out := &in.ExpirationAction, &out.ExpirationAction
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SasExpirationPeriod != nil {
		in, out := &in.SasExpirationPeriod, &out.SasExpirationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SasPolicy_Spec.
func (in *SasPolicy_Spec) DeepCopy() *SasPolicy_Spec {
	if in == nil {
		return nil
	}
	out := new(SasPolicy_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SasPolicy_Status) DeepCopyInto(out *SasPolicy_Status) {
	*out = *in
	if in.ExpirationAction != nil {
		in, out := &in.ExpirationAction, &out.ExpirationAction
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SasExpirationPeriod != nil {
		in, out := &in.SasExpirationPeriod, &out.SasExpirationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SasPolicy_Status.
func (in *SasPolicy_Status) DeepCopy() *SasPolicy_Status {
	if in == nil {
		return nil
	}
	out := new(SasPolicy_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_Spec) DeepCopyInto(out *Sku_Spec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_Spec.
func (in *Sku_Spec) DeepCopy() *Sku_Spec {
	if in == nil {
		return nil
	}
	out := new(Sku_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_Status) DeepCopyInto(out *Sku_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_Status.
func (in *Sku_Status) DeepCopy() *Sku_Status {
	if in == nil {
		return nil
	}
	out := new(Sku_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccount) DeepCopyInto(out *StorageAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccount.
func (in *StorageAccount) DeepCopy() *StorageAccount {
	if in == nil {
		return nil
	}
	out := new(StorageAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountCreateParameters_Status) DeepCopyInto(out *StorageAccountCreateParameters_Status) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.AllowBlobPublicAccess != nil {
		in, out := &in.AllowBlobPublicAccess, &out.AllowBlobPublicAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowCrossTenantReplication != nil {
		in, out := &in.AllowCrossTenantReplication, &out.AllowCrossTenantReplication
		*out = new(bool)
		**out = **in
	}
	if in.AllowSharedKeyAccess != nil {
		in, out := &in.AllowSharedKeyAccess, &out.AllowSharedKeyAccess
		*out = new(bool)
		**out = **in
	}
	if in.AzureFilesIdentityBasedAuthentication != nil {
		in, out := &in.AzureFilesIdentityBasedAuthentication, &out.AzureFilesIdentityBasedAuthentication
		*out = new(AzureFilesIdentityBasedAuthentication_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomDomain != nil {
		in, out := &in.CustomDomain, &out.CustomDomain
		*out = new(CustomDomain_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(Encryption_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(Identity_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.IsHnsEnabled != nil {
		in, out := &in.IsHnsEnabled, &out.IsHnsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsNfsV3Enabled != nil {
		in, out := &in.IsNfsV3Enabled, &out.IsNfsV3Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyPolicy != nil {
		in, out := &in.KeyPolicy, &out.KeyPolicy
		*out = new(KeyPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LargeFileSharesState != nil {
		in, out := &in.LargeFileSharesState, &out.LargeFileSharesState
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTlsVersion != nil {
		in, out := &in.MinimumTlsVersion, &out.MinimumTlsVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkRuleSet_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RoutingPreference != nil {
		in, out := &in.RoutingPreference, &out.RoutingPreference
		*out = new(RoutingPreference_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.SasPolicy != nil {
		in, out := &in.SasPolicy, &out.SasPolicy
		*out = new(SasPolicy_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportsHttpsTrafficOnly != nil {
		in, out := &in.SupportsHttpsTrafficOnly, &out.SupportsHttpsTrafficOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountCreateParameters_Status.
func (in *StorageAccountCreateParameters_Status) DeepCopy() *StorageAccountCreateParameters_Status {
	if in == nil {
		return nil
	}
	out := new(StorageAccountCreateParameters_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountList) DeepCopyInto(out *StorageAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountList.
func (in *StorageAccountList) DeepCopy() *StorageAccountList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobService) DeepCopyInto(out *StorageAccountsBlobService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobService.
func (in *StorageAccountsBlobService) DeepCopy() *StorageAccountsBlobService {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsBlobService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobServiceList) DeepCopyInto(out *StorageAccountsBlobServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsBlobService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobServiceList.
func (in *StorageAccountsBlobServiceList) DeepCopy() *StorageAccountsBlobServiceList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsBlobServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobServicesContainer) DeepCopyInto(out *StorageAccountsBlobServicesContainer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobServicesContainer.
func (in *StorageAccountsBlobServicesContainer) DeepCopy() *StorageAccountsBlobServicesContainer {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobServicesContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsBlobServicesContainer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobServicesContainerList) DeepCopyInto(out *StorageAccountsBlobServicesContainerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsBlobServicesContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobServicesContainerList.
func (in *StorageAccountsBlobServicesContainerList) DeepCopy() *StorageAccountsBlobServicesContainerList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobServicesContainerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsBlobServicesContainerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobServicesContainers_SPEC) DeepCopyInto(out *StorageAccountsBlobServicesContainers_SPEC) {
	*out = *in
	if in.DefaultEncryptionScope != nil {
		in, out := &in.DefaultEncryptionScope, &out.DefaultEncryptionScope
		*out = new(string)
		**out = **in
	}
	if in.DenyEncryptionScopeOverride != nil {
		in, out := &in.DenyEncryptionScopeOverride, &out.DenyEncryptionScopeOverride
		*out = new(bool)
		**out = **in
	}
	if in.ImmutableStorageWithVersioning != nil {
		in, out := &in.ImmutableStorageWithVersioning, &out.ImmutableStorageWithVersioning
		*out = new(ImmutableStorageWithVersioning_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicAccess != nil {
		in, out := &in.PublicAccess, &out.PublicAccess
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobServicesContainers_SPEC.
func (in *StorageAccountsBlobServicesContainers_SPEC) DeepCopy() *StorageAccountsBlobServicesContainers_SPEC {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobServicesContainers_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsBlobServices_SPEC) DeepCopyInto(out *StorageAccountsBlobServices_SPEC) {
	*out = *in
	if in.AutomaticSnapshotPolicyEnabled != nil {
		in, out := &in.AutomaticSnapshotPolicyEnabled, &out.AutomaticSnapshotPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ChangeFeed != nil {
		in, out := &in.ChangeFeed, &out.ChangeFeed
		*out = new(ChangeFeed_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerDeleteRetentionPolicy != nil {
		in, out := &in.ContainerDeleteRetentionPolicy, &out.ContainerDeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceVersion != nil {
		in, out := &in.DefaultServiceVersion, &out.DefaultServiceVersion
		*out = new(string)
		**out = **in
	}
	if in.DeleteRetentionPolicy != nil {
		in, out := &in.DeleteRetentionPolicy, &out.DeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.IsVersioningEnabled != nil {
		in, out := &in.IsVersioningEnabled, &out.IsVersioningEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LastAccessTimeTrackingPolicy != nil {
		in, out := &in.LastAccessTimeTrackingPolicy, &out.LastAccessTimeTrackingPolicy
		*out = new(LastAccessTimeTrackingPolicy_Spec)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RestorePolicy != nil {
		in, out := &in.RestorePolicy, &out.RestorePolicy
		*out = new(RestorePolicyProperties_Spec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsBlobServices_SPEC.
func (in *StorageAccountsBlobServices_SPEC) DeepCopy() *StorageAccountsBlobServices_SPEC {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsBlobServices_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueService) DeepCopyInto(out *StorageAccountsQueueService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueService.
func (in *StorageAccountsQueueService) DeepCopy() *StorageAccountsQueueService {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsQueueService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueServiceList) DeepCopyInto(out *StorageAccountsQueueServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsQueueService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueServiceList.
func (in *StorageAccountsQueueServiceList) DeepCopy() *StorageAccountsQueueServiceList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsQueueServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueServicesQueue) DeepCopyInto(out *StorageAccountsQueueServicesQueue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueServicesQueue.
func (in *StorageAccountsQueueServicesQueue) DeepCopy() *StorageAccountsQueueServicesQueue {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueServicesQueue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsQueueServicesQueue) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueServicesQueueList) DeepCopyInto(out *StorageAccountsQueueServicesQueueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsQueueServicesQueue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueServicesQueueList.
func (in *StorageAccountsQueueServicesQueueList) DeepCopy() *StorageAccountsQueueServicesQueueList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueServicesQueueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsQueueServicesQueueList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueServicesQueues_SPEC) DeepCopyInto(out *StorageAccountsQueueServicesQueues_SPEC) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueServicesQueues_SPEC.
func (in *StorageAccountsQueueServicesQueues_SPEC) DeepCopy() *StorageAccountsQueueServicesQueues_SPEC {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueServicesQueues_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsQueueServices_SPEC) DeepCopyInto(out *StorageAccountsQueueServices_SPEC) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_Spec)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsQueueServices_SPEC.
func (in *StorageAccountsQueueServices_SPEC) DeepCopy() *StorageAccountsQueueServices_SPEC {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsQueueServices_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_SPEC) DeepCopyInto(out *StorageAccounts_SPEC) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.AllowBlobPublicAccess != nil {
		in, out := &in.AllowBlobPublicAccess, &out.AllowBlobPublicAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowCrossTenantReplication != nil {
		in, out := &in.AllowCrossTenantReplication, &out.AllowCrossTenantReplication
		*out = new(bool)
		**out = **in
	}
	if in.AllowSharedKeyAccess != nil {
		in, out := &in.AllowSharedKeyAccess, &out.AllowSharedKeyAccess
		*out = new(bool)
		**out = **in
	}
	if in.AzureFilesIdentityBasedAuthentication != nil {
		in, out := &in.AzureFilesIdentityBasedAuthentication, &out.AzureFilesIdentityBasedAuthentication
		*out = new(AzureFilesIdentityBasedAuthentication_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomDomain != nil {
		in, out := &in.CustomDomain, &out.CustomDomain
		*out = new(CustomDomain_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(Encryption_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(Identity_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.IsHnsEnabled != nil {
		in, out := &in.IsHnsEnabled, &out.IsHnsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsNfsV3Enabled != nil {
		in, out := &in.IsNfsV3Enabled, &out.IsNfsV3Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyPolicy != nil {
		in, out := &in.KeyPolicy, &out.KeyPolicy
		*out = new(KeyPolicy_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LargeFileSharesState != nil {
		in, out := &in.LargeFileSharesState, &out.LargeFileSharesState
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinimumTlsVersion != nil {
		in, out := &in.MinimumTlsVersion, &out.MinimumTlsVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(NetworkRuleSet_Spec)
		(*in).DeepCopyInto(*out)
	}
	out.Owner = in.Owner
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RoutingPreference != nil {
		in, out := &in.RoutingPreference, &out.RoutingPreference
		*out = new(RoutingPreference_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.SasPolicy != nil {
		in, out := &in.SasPolicy, &out.SasPolicy
		*out = new(SasPolicy_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportsHttpsTrafficOnly != nil {
		in, out := &in.SupportsHttpsTrafficOnly, &out.SupportsHttpsTrafficOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_SPEC.
func (in *StorageAccounts_SPEC) DeepCopy() *StorageAccounts_SPEC {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageQueue_Status) DeepCopyInto(out *StorageQueue_Status) {
	*out = *in
	if in.ApproximateMessageCount != nil {
		in, out := &in.ApproximateMessageCount, &out.ApproximateMessageCount
		*out = new(int)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageQueue_Status.
func (in *StorageQueue_Status) DeepCopy() *StorageQueue_Status {
	if in == nil {
		return nil
	}
	out := new(StorageQueue_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagProperty_Status) DeepCopyInto(out *TagProperty_Status) {
	*out = *in
	if in.ObjectIdentifier != nil {
		in, out := &in.ObjectIdentifier, &out.ObjectIdentifier
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
	if in.Upn != nil {
		in, out := &in.Upn, &out.Upn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagProperty_Status.
func (in *TagProperty_Status) DeepCopy() *TagProperty_Status {
	if in == nil {
		return nil
	}
	out := new(TagProperty_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateHistoryProperty_Status) DeepCopyInto(out *UpdateHistoryProperty_Status) {
	*out = *in
	if in.ImmutabilityPeriodSinceCreationInDays != nil {
		in, out := &in.ImmutabilityPeriodSinceCreationInDays, &out.ImmutabilityPeriodSinceCreationInDays
		*out = new(int)
		**out = **in
	}
	if in.ObjectIdentifier != nil {
		in, out := &in.ObjectIdentifier, &out.ObjectIdentifier
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = new(string)
		**out = **in
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(string)
		**out = **in
	}
	if in.Upn != nil {
		in, out := &in.Upn, &out.Upn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateHistoryProperty_Status.
func (in *UpdateHistoryProperty_Status) DeepCopy() *UpdateHistoryProperty_Status {
	if in == nil {
		return nil
	}
	out := new(UpdateHistoryProperty_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentity_Status) DeepCopyInto(out *UserAssignedIdentity_Status) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentity_Status.
func (in *UserAssignedIdentity_Status) DeepCopy() *UserAssignedIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRule_Spec) DeepCopyInto(out *VirtualNetworkRule_Spec) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Reference = in.Reference
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRule_Spec.
func (in *VirtualNetworkRule_Spec) DeepCopy() *VirtualNetworkRule_Spec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkRule_Status) DeepCopyInto(out *VirtualNetworkRule_Status) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkRule_Status.
func (in *VirtualNetworkRule_Status) DeepCopy() *VirtualNetworkRule_Status {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkRule_Status)
	in.DeepCopyInto(out)
	return out
}
