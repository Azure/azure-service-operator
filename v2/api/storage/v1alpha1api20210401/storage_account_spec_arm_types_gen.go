// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210401

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of StorageAccount_Spec. Use v1beta20210401.StorageAccount_Spec instead
type StorageAccount_SpecARM struct {
	ExtendedLocation *ExtendedLocationARM                         `json:"extendedLocation,omitempty"`
	Identity         *IdentityARM                                 `json:"identity,omitempty"`
	Kind             *StorageAccount_Spec_Kind                    `json:"kind,omitempty"`
	Location         *string                                      `json:"location,omitempty"`
	Name             string                                       `json:"name,omitempty"`
	Properties       *StorageAccountPropertiesCreateParametersARM `json:"properties,omitempty"`
	Sku              *SkuARM                                      `json:"sku,omitempty"`
	Tags             map[string]string                            `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &StorageAccount_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-04-01"
func (account StorageAccount_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (account *StorageAccount_SpecARM) GetName() string {
	return account.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Storage/storageAccounts"
func (account *StorageAccount_SpecARM) GetType() string {
	return "Microsoft.Storage/storageAccounts"
}

// Deprecated version of ExtendedLocation. Use v1beta20210401.ExtendedLocation instead
type ExtendedLocationARM struct {
	Name *string                `json:"name,omitempty"`
	Type *ExtendedLocation_Type `json:"type,omitempty"`
}

// Deprecated version of Identity. Use v1beta20210401.Identity instead
type IdentityARM struct {
	Type *Identity_Type `json:"type,omitempty"`
}

// Deprecated version of Sku. Use v1beta20210401.Sku instead
type SkuARM struct {
	Name *Sku_Name `json:"name,omitempty"`
	Tier *Sku_Tier `json:"tier,omitempty"`
}

// Deprecated version of StorageAccount_Spec_Kind. Use v1beta20210401.StorageAccount_Spec_Kind instead
// +kubebuilder:validation:Enum={"BlobStorage","BlockBlobStorage","FileStorage","Storage","StorageV2"}
type StorageAccount_Spec_Kind string

const (
	StorageAccount_Spec_Kind_BlobStorage      = StorageAccount_Spec_Kind("BlobStorage")
	StorageAccount_Spec_Kind_BlockBlobStorage = StorageAccount_Spec_Kind("BlockBlobStorage")
	StorageAccount_Spec_Kind_FileStorage      = StorageAccount_Spec_Kind("FileStorage")
	StorageAccount_Spec_Kind_Storage          = StorageAccount_Spec_Kind("Storage")
	StorageAccount_Spec_Kind_StorageV2        = StorageAccount_Spec_Kind("StorageV2")
)

// Deprecated version of StorageAccountPropertiesCreateParameters. Use v1beta20210401.StorageAccountPropertiesCreateParameters instead
type StorageAccountPropertiesCreateParametersARM struct {
	AccessTier                            *StorageAccountPropertiesCreateParameters_AccessTier           `json:"accessTier,omitempty"`
	AllowBlobPublicAccess                 *bool                                                          `json:"allowBlobPublicAccess,omitempty"`
	AllowCrossTenantReplication           *bool                                                          `json:"allowCrossTenantReplication,omitempty"`
	AllowSharedKeyAccess                  *bool                                                          `json:"allowSharedKeyAccess,omitempty"`
	AzureFilesIdentityBasedAuthentication *AzureFilesIdentityBasedAuthenticationARM                      `json:"azureFilesIdentityBasedAuthentication,omitempty"`
	CustomDomain                          *CustomDomainARM                                               `json:"customDomain,omitempty"`
	Encryption                            *EncryptionARM                                                 `json:"encryption,omitempty"`
	IsHnsEnabled                          *bool                                                          `json:"isHnsEnabled,omitempty"`
	IsNfsV3Enabled                        *bool                                                          `json:"isNfsV3Enabled,omitempty"`
	KeyPolicy                             *KeyPolicyARM                                                  `json:"keyPolicy,omitempty"`
	LargeFileSharesState                  *StorageAccountPropertiesCreateParameters_LargeFileSharesState `json:"largeFileSharesState,omitempty"`
	MinimumTlsVersion                     *StorageAccountPropertiesCreateParameters_MinimumTlsVersion    `json:"minimumTlsVersion,omitempty"`
	NetworkAcls                           *NetworkRuleSetARM                                             `json:"networkAcls,omitempty"`
	RoutingPreference                     *RoutingPreferenceARM                                          `json:"routingPreference,omitempty"`
	SasPolicy                             *SasPolicyARM                                                  `json:"sasPolicy,omitempty"`
	SupportsHttpsTrafficOnly              *bool                                                          `json:"supportsHttpsTrafficOnly,omitempty"`
}

// Deprecated version of AzureFilesIdentityBasedAuthentication. Use v1beta20210401.AzureFilesIdentityBasedAuthentication instead
type AzureFilesIdentityBasedAuthenticationARM struct {
	ActiveDirectoryProperties *ActiveDirectoryPropertiesARM                                  `json:"activeDirectoryProperties,omitempty"`
	DefaultSharePermission    *AzureFilesIdentityBasedAuthentication_DefaultSharePermission  `json:"defaultSharePermission,omitempty"`
	DirectoryServiceOptions   *AzureFilesIdentityBasedAuthentication_DirectoryServiceOptions `json:"directoryServiceOptions,omitempty"`
}

// Deprecated version of CustomDomain. Use v1beta20210401.CustomDomain instead
type CustomDomainARM struct {
	Name             *string `json:"name,omitempty"`
	UseSubDomainName *bool   `json:"useSubDomainName,omitempty"`
}

// Deprecated version of Encryption. Use v1beta20210401.Encryption instead
type EncryptionARM struct {
	Identity                        *EncryptionIdentityARM `json:"identity,omitempty"`
	KeySource                       *Encryption_KeySource  `json:"keySource,omitempty"`
	Keyvaultproperties              *KeyVaultPropertiesARM `json:"keyvaultproperties,omitempty"`
	RequireInfrastructureEncryption *bool                  `json:"requireInfrastructureEncryption,omitempty"`
	Services                        *EncryptionServicesARM `json:"services,omitempty"`
}

// Deprecated version of ExtendedLocation_Type. Use v1beta20210401.ExtendedLocation_Type instead
// +kubebuilder:validation:Enum={"EdgeZone"}
type ExtendedLocation_Type string

const ExtendedLocation_Type_EdgeZone = ExtendedLocation_Type("EdgeZone")

// Deprecated version of Identity_Type. Use v1beta20210401.Identity_Type instead
// +kubebuilder:validation:Enum={"None","SystemAssigned","SystemAssigned,UserAssigned","UserAssigned"}
type Identity_Type string

const (
	Identity_Type_None                       = Identity_Type("None")
	Identity_Type_SystemAssigned             = Identity_Type("SystemAssigned")
	Identity_Type_SystemAssignedUserAssigned = Identity_Type("SystemAssigned,UserAssigned")
	Identity_Type_UserAssigned               = Identity_Type("UserAssigned")
)

// Deprecated version of KeyPolicy. Use v1beta20210401.KeyPolicy instead
type KeyPolicyARM struct {
	KeyExpirationPeriodInDays *int `json:"keyExpirationPeriodInDays,omitempty"`
}

// Deprecated version of NetworkRuleSet. Use v1beta20210401.NetworkRuleSet instead
type NetworkRuleSetARM struct {
	Bypass              *NetworkRuleSet_Bypass        `json:"bypass,omitempty"`
	DefaultAction       *NetworkRuleSet_DefaultAction `json:"defaultAction,omitempty"`
	IpRules             []IPRuleARM                   `json:"ipRules,omitempty"`
	ResourceAccessRules []ResourceAccessRuleARM       `json:"resourceAccessRules,omitempty"`
	VirtualNetworkRules []VirtualNetworkRuleARM       `json:"virtualNetworkRules,omitempty"`
}

// Deprecated version of RoutingPreference. Use v1beta20210401.RoutingPreference instead
type RoutingPreferenceARM struct {
	PublishInternetEndpoints  *bool                            `json:"publishInternetEndpoints,omitempty"`
	PublishMicrosoftEndpoints *bool                            `json:"publishMicrosoftEndpoints,omitempty"`
	RoutingChoice             *RoutingPreference_RoutingChoice `json:"routingChoice,omitempty"`
}

// Deprecated version of SasPolicy. Use v1beta20210401.SasPolicy instead
type SasPolicyARM struct {
	ExpirationAction    *SasPolicy_ExpirationAction `json:"expirationAction,omitempty"`
	SasExpirationPeriod *string                     `json:"sasExpirationPeriod,omitempty"`
}

// Deprecated version of Sku_Name. Use v1beta20210401.Sku_Name instead
// +kubebuilder:validation:Enum={"Premium_LRS","Premium_ZRS","Standard_GRS","Standard_GZRS","Standard_LRS","Standard_RAGRS","Standard_RAGZRS","Standard_ZRS"}
type Sku_Name string

const (
	Sku_Name_Premium_LRS     = Sku_Name("Premium_LRS")
	Sku_Name_Premium_ZRS     = Sku_Name("Premium_ZRS")
	Sku_Name_Standard_GRS    = Sku_Name("Standard_GRS")
	Sku_Name_Standard_GZRS   = Sku_Name("Standard_GZRS")
	Sku_Name_Standard_LRS    = Sku_Name("Standard_LRS")
	Sku_Name_Standard_RAGRS  = Sku_Name("Standard_RAGRS")
	Sku_Name_Standard_RAGZRS = Sku_Name("Standard_RAGZRS")
	Sku_Name_Standard_ZRS    = Sku_Name("Standard_ZRS")
)

// Deprecated version of Sku_Tier. Use v1beta20210401.Sku_Tier instead
// +kubebuilder:validation:Enum={"Premium","Standard"}
type Sku_Tier string

const (
	Sku_Tier_Premium  = Sku_Tier("Premium")
	Sku_Tier_Standard = Sku_Tier("Standard")
)

// Deprecated version of ActiveDirectoryProperties. Use v1beta20210401.ActiveDirectoryProperties instead
type ActiveDirectoryPropertiesARM struct {
	AzureStorageSid   *string `json:"azureStorageSid,omitempty"`
	DomainGuid        *string `json:"domainGuid,omitempty"`
	DomainName        *string `json:"domainName,omitempty"`
	DomainSid         *string `json:"domainSid,omitempty"`
	ForestName        *string `json:"forestName,omitempty"`
	NetBiosDomainName *string `json:"netBiosDomainName,omitempty"`
}

// Deprecated version of EncryptionIdentity. Use v1beta20210401.EncryptionIdentity instead
type EncryptionIdentityARM struct {
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`
}

// Deprecated version of EncryptionServices. Use v1beta20210401.EncryptionServices instead
type EncryptionServicesARM struct {
	Blob  *EncryptionServiceARM `json:"blob,omitempty"`
	File  *EncryptionServiceARM `json:"file,omitempty"`
	Queue *EncryptionServiceARM `json:"queue,omitempty"`
	Table *EncryptionServiceARM `json:"table,omitempty"`
}

// Deprecated version of IPRule. Use v1beta20210401.IPRule instead
type IPRuleARM struct {
	Action *IPRule_Action `json:"action,omitempty"`
	Value  *string        `json:"value,omitempty"`
}

// Deprecated version of KeyVaultProperties. Use v1beta20210401.KeyVaultProperties instead
type KeyVaultPropertiesARM struct {
	Keyname     *string `json:"keyname,omitempty"`
	Keyvaulturi *string `json:"keyvaulturi,omitempty"`
	Keyversion  *string `json:"keyversion,omitempty"`
}

// Deprecated version of ResourceAccessRule. Use v1beta20210401.ResourceAccessRule instead
type ResourceAccessRuleARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
	TenantId   *string `json:"tenantId,omitempty"`
}

// Deprecated version of VirtualNetworkRule. Use v1beta20210401.VirtualNetworkRule instead
type VirtualNetworkRuleARM struct {
	Action *VirtualNetworkRule_Action `json:"action,omitempty"`
	Id     *string                    `json:"id,omitempty"`
	State  *VirtualNetworkRule_State  `json:"state,omitempty"`
}

// Deprecated version of EncryptionService. Use v1beta20210401.EncryptionService instead
type EncryptionServiceARM struct {
	Enabled *bool                      `json:"enabled,omitempty"`
	KeyType *EncryptionService_KeyType `json:"keyType,omitempty"`
}
