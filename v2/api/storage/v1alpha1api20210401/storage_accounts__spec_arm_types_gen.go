// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210401

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of StorageAccounts_Spec. Use v1beta20210401.StorageAccounts_Spec instead
type StorageAccounts_SpecARM struct {
	ExtendedLocation *ExtendedLocationARM                         `json:"extendedLocation,omitempty"`
	Identity         *IdentityARM                                 `json:"identity,omitempty"`
	Kind             *StorageAccountsSpecKind                     `json:"kind,omitempty"`
	Location         *string                                      `json:"location,omitempty"`
	Name             string                                       `json:"name,omitempty"`
	Properties       *StorageAccountPropertiesCreateParametersARM `json:"properties,omitempty"`
	Sku              *SkuARM                                      `json:"sku,omitempty"`
	Tags             map[string]string                            `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &StorageAccounts_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-04-01"
func (accounts StorageAccounts_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (accounts *StorageAccounts_SpecARM) GetName() string {
	return accounts.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Storage/storageAccounts"
func (accounts *StorageAccounts_SpecARM) GetType() string {
	return "Microsoft.Storage/storageAccounts"
}

// Deprecated version of ExtendedLocation. Use v1beta20210401.ExtendedLocation instead
type ExtendedLocationARM struct {
	Name *string               `json:"name,omitempty"`
	Type *ExtendedLocationType `json:"type,omitempty"`
}

// Deprecated version of Identity. Use v1beta20210401.Identity instead
type IdentityARM struct {
	Type *IdentityType `json:"type,omitempty"`
}

// Deprecated version of Sku. Use v1beta20210401.Sku instead
type SkuARM struct {
	Name *SkuName `json:"name,omitempty"`
	Tier *SkuTier `json:"tier,omitempty"`
}

// Deprecated version of StorageAccountPropertiesCreateParameters. Use v1beta20210401.StorageAccountPropertiesCreateParameters instead
type StorageAccountPropertiesCreateParametersARM struct {
	AccessTier                            *StorageAccountPropertiesCreateParametersAccessTier           `json:"accessTier,omitempty"`
	AllowBlobPublicAccess                 *bool                                                         `json:"allowBlobPublicAccess,omitempty"`
	AllowCrossTenantReplication           *bool                                                         `json:"allowCrossTenantReplication,omitempty"`
	AllowSharedKeyAccess                  *bool                                                         `json:"allowSharedKeyAccess,omitempty"`
	AzureFilesIdentityBasedAuthentication *AzureFilesIdentityBasedAuthenticationARM                     `json:"azureFilesIdentityBasedAuthentication,omitempty"`
	CustomDomain                          *CustomDomainARM                                              `json:"customDomain,omitempty"`
	Encryption                            *EncryptionARM                                                `json:"encryption,omitempty"`
	IsHnsEnabled                          *bool                                                         `json:"isHnsEnabled,omitempty"`
	IsNfsV3Enabled                        *bool                                                         `json:"isNfsV3Enabled,omitempty"`
	KeyPolicy                             *KeyPolicyARM                                                 `json:"keyPolicy,omitempty"`
	LargeFileSharesState                  *StorageAccountPropertiesCreateParametersLargeFileSharesState `json:"largeFileSharesState,omitempty"`
	MinimumTlsVersion                     *StorageAccountPropertiesCreateParametersMinimumTlsVersion    `json:"minimumTlsVersion,omitempty"`
	NetworkAcls                           *NetworkRuleSetARM                                            `json:"networkAcls,omitempty"`
	RoutingPreference                     *RoutingPreferenceARM                                         `json:"routingPreference,omitempty"`
	SasPolicy                             *SasPolicyARM                                                 `json:"sasPolicy,omitempty"`
	SupportsHttpsTrafficOnly              *bool                                                         `json:"supportsHttpsTrafficOnly,omitempty"`
}

// Deprecated version of StorageAccountsSpecKind. Use v1beta20210401.StorageAccountsSpecKind instead
// +kubebuilder:validation:Enum={"BlobStorage","BlockBlobStorage","FileStorage","Storage","StorageV2"}
type StorageAccountsSpecKind string

const (
	StorageAccountsSpecKind_BlobStorage      = StorageAccountsSpecKind("BlobStorage")
	StorageAccountsSpecKind_BlockBlobStorage = StorageAccountsSpecKind("BlockBlobStorage")
	StorageAccountsSpecKind_FileStorage      = StorageAccountsSpecKind("FileStorage")
	StorageAccountsSpecKind_Storage          = StorageAccountsSpecKind("Storage")
	StorageAccountsSpecKind_StorageV2        = StorageAccountsSpecKind("StorageV2")
)

// Deprecated version of AzureFilesIdentityBasedAuthentication. Use v1beta20210401.AzureFilesIdentityBasedAuthentication instead
type AzureFilesIdentityBasedAuthenticationARM struct {
	ActiveDirectoryProperties *ActiveDirectoryPropertiesARM                                 `json:"activeDirectoryProperties,omitempty"`
	DefaultSharePermission    *AzureFilesIdentityBasedAuthenticationDefaultSharePermission  `json:"defaultSharePermission,omitempty"`
	DirectoryServiceOptions   *AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions `json:"directoryServiceOptions,omitempty"`
}

// Deprecated version of CustomDomain. Use v1beta20210401.CustomDomain instead
type CustomDomainARM struct {
	Name             *string `json:"name,omitempty"`
	UseSubDomainName *bool   `json:"useSubDomainName,omitempty"`
}

// Deprecated version of Encryption. Use v1beta20210401.Encryption instead
type EncryptionARM struct {
	Identity                        *EncryptionIdentityARM `json:"identity,omitempty"`
	KeySource                       *EncryptionKeySource   `json:"keySource,omitempty"`
	Keyvaultproperties              *KeyVaultPropertiesARM `json:"keyvaultproperties,omitempty"`
	RequireInfrastructureEncryption *bool                  `json:"requireInfrastructureEncryption,omitempty"`
	Services                        *EncryptionServicesARM `json:"services,omitempty"`
}

// Deprecated version of ExtendedLocationType. Use v1beta20210401.ExtendedLocationType instead
// +kubebuilder:validation:Enum={"EdgeZone"}
type ExtendedLocationType string

const ExtendedLocationType_EdgeZone = ExtendedLocationType("EdgeZone")

// Deprecated version of IdentityType. Use v1beta20210401.IdentityType instead
// +kubebuilder:validation:Enum={"None","SystemAssigned","SystemAssigned,UserAssigned","UserAssigned"}
type IdentityType string

const (
	IdentityType_None                       = IdentityType("None")
	IdentityType_SystemAssigned             = IdentityType("SystemAssigned")
	IdentityType_SystemAssignedUserAssigned = IdentityType("SystemAssigned,UserAssigned")
	IdentityType_UserAssigned               = IdentityType("UserAssigned")
)

// Deprecated version of KeyPolicy. Use v1beta20210401.KeyPolicy instead
type KeyPolicyARM struct {
	KeyExpirationPeriodInDays *int `json:"keyExpirationPeriodInDays,omitempty"`
}

// Deprecated version of NetworkRuleSet. Use v1beta20210401.NetworkRuleSet instead
type NetworkRuleSetARM struct {
	Bypass              *NetworkRuleSetBypass        `json:"bypass,omitempty"`
	DefaultAction       *NetworkRuleSetDefaultAction `json:"defaultAction,omitempty"`
	IpRules             []IPRuleARM                  `json:"ipRules,omitempty"`
	ResourceAccessRules []ResourceAccessRuleARM      `json:"resourceAccessRules,omitempty"`
	VirtualNetworkRules []VirtualNetworkRuleARM      `json:"virtualNetworkRules,omitempty"`
}

// Deprecated version of RoutingPreference. Use v1beta20210401.RoutingPreference instead
type RoutingPreferenceARM struct {
	PublishInternetEndpoints  *bool                           `json:"publishInternetEndpoints,omitempty"`
	PublishMicrosoftEndpoints *bool                           `json:"publishMicrosoftEndpoints,omitempty"`
	RoutingChoice             *RoutingPreferenceRoutingChoice `json:"routingChoice,omitempty"`
}

// Deprecated version of SasPolicy. Use v1beta20210401.SasPolicy instead
type SasPolicyARM struct {
	ExpirationAction    *SasPolicyExpirationAction `json:"expirationAction,omitempty"`
	SasExpirationPeriod *string                    `json:"sasExpirationPeriod,omitempty"`
}

// Deprecated version of SkuName. Use v1beta20210401.SkuName instead
// +kubebuilder:validation:Enum={"Premium_LRS","Premium_ZRS","Standard_GRS","Standard_GZRS","Standard_LRS","Standard_RAGRS","Standard_RAGZRS","Standard_ZRS"}
type SkuName string

const (
	SkuName_PremiumLRS     = SkuName("Premium_LRS")
	SkuName_PremiumZRS     = SkuName("Premium_ZRS")
	SkuName_StandardGRS    = SkuName("Standard_GRS")
	SkuName_StandardGZRS   = SkuName("Standard_GZRS")
	SkuName_StandardLRS    = SkuName("Standard_LRS")
	SkuName_StandardRAGRS  = SkuName("Standard_RAGRS")
	SkuName_StandardRAGZRS = SkuName("Standard_RAGZRS")
	SkuName_StandardZRS    = SkuName("Standard_ZRS")
)

// Deprecated version of SkuTier. Use v1beta20210401.SkuTier instead
// +kubebuilder:validation:Enum={"Premium","Standard"}
type SkuTier string

const (
	SkuTier_Premium  = SkuTier("Premium")
	SkuTier_Standard = SkuTier("Standard")
)

// Deprecated version of ActiveDirectoryProperties. Use v1beta20210401.ActiveDirectoryProperties instead
type ActiveDirectoryPropertiesARM struct {
	AzureStorageSid   *string `json:"azureStorageSid,omitempty"`
	DomainGuid        *string `json:"domainGuid,omitempty"`
	DomainName        *string `json:"domainName,omitempty"`
	DomainSid         *string `json:"domainSid,omitempty"`
	ForestName        *string `json:"forestName,omitempty"`
	NetBiosDomainName *string `json:"netBiosDomainName,omitempty"`
}

// Deprecated version of EncryptionIdentity. Use v1beta20210401.EncryptionIdentity instead
type EncryptionIdentityARM struct {
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`
}

// Deprecated version of EncryptionServices. Use v1beta20210401.EncryptionServices instead
type EncryptionServicesARM struct {
	Blob  *EncryptionServiceARM `json:"blob,omitempty"`
	File  *EncryptionServiceARM `json:"file,omitempty"`
	Queue *EncryptionServiceARM `json:"queue,omitempty"`
	Table *EncryptionServiceARM `json:"table,omitempty"`
}

// Deprecated version of IPRule. Use v1beta20210401.IPRule instead
type IPRuleARM struct {
	Action *IPRuleAction `json:"action,omitempty"`
	Value  *string       `json:"value,omitempty"`
}

// Deprecated version of KeyVaultProperties. Use v1beta20210401.KeyVaultProperties instead
type KeyVaultPropertiesARM struct {
	Keyname     *string `json:"keyname,omitempty"`
	Keyvaulturi *string `json:"keyvaulturi,omitempty"`
	Keyversion  *string `json:"keyversion,omitempty"`
}

// Deprecated version of ResourceAccessRule. Use v1beta20210401.ResourceAccessRule instead
type ResourceAccessRuleARM struct {
	ResourceId *string `json:"resourceId,omitempty"`
	TenantId   *string `json:"tenantId,omitempty"`
}

// Deprecated version of VirtualNetworkRule. Use v1beta20210401.VirtualNetworkRule instead
type VirtualNetworkRuleARM struct {
	Action *VirtualNetworkRuleAction `json:"action,omitempty"`
	Id     *string                   `json:"id,omitempty"`
	State  *VirtualNetworkRuleState  `json:"state,omitempty"`
}

// Deprecated version of EncryptionService. Use v1beta20210401.EncryptionService instead
type EncryptionServiceARM struct {
	Enabled *bool                     `json:"enabled,omitempty"`
	KeyType *EncryptionServiceKeyType `json:"keyType,omitempty"`
}
