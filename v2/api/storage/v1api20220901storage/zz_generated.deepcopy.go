//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1api20220901storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicy) DeepCopyInto(out *AccessPolicy) {
	*out = *in
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicy.
func (in *AccessPolicy) DeepCopy() *AccessPolicy {
	if in == nil {
		return nil
	}
	out := new(AccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicy_STATUS) DeepCopyInto(out *AccessPolicy_STATUS) {
	*out = *in
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicy_STATUS.
func (in *AccessPolicy_STATUS) DeepCopy() *AccessPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(AccessPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRule) DeepCopyInto(out *CorsRule) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRule.
func (in *CorsRule) DeepCopy() *CorsRule {
	if in == nil {
		return nil
	}
	out := new(CorsRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRule_STATUS) DeepCopyInto(out *CorsRule_STATUS) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRule_STATUS.
func (in *CorsRule_STATUS) DeepCopy() *CorsRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(CorsRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRules) DeepCopyInto(out *CorsRules) {
	*out = *in
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRules.
func (in *CorsRules) DeepCopy() *CorsRules {
	if in == nil {
		return nil
	}
	out := new(CorsRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRules_STATUS) DeepCopyInto(out *CorsRules_STATUS) {
	*out = *in
	if in.CorsRules != nil {
		in, out := &in.CorsRules, &out.CorsRules
		*out = make([]CorsRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRules_STATUS.
func (in *CorsRules_STATUS) DeepCopy() *CorsRules_STATUS {
	if in == nil {
		return nil
	}
	out := new(CorsRules_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicy) DeepCopyInto(out *DeleteRetentionPolicy) {
	*out = *in
	if in.AllowPermanentDelete != nil {
		in, out := &in.AllowPermanentDelete, &out.AllowPermanentDelete
		*out = new(bool)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicy.
func (in *DeleteRetentionPolicy) DeepCopy() *DeleteRetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicy_STATUS) DeepCopyInto(out *DeleteRetentionPolicy_STATUS) {
	*out = *in
	if in.AllowPermanentDelete != nil {
		in, out := &in.AllowPermanentDelete, &out.AllowPermanentDelete
		*out = new(bool)
		**out = **in
	}
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicy_STATUS.
func (in *DeleteRetentionPolicy_STATUS) DeepCopy() *DeleteRetentionPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Multichannel) DeepCopyInto(out *Multichannel) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Multichannel.
func (in *Multichannel) DeepCopy() *Multichannel {
	if in == nil {
		return nil
	}
	out := new(Multichannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Multichannel_STATUS) DeepCopyInto(out *Multichannel_STATUS) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Multichannel_STATUS.
func (in *Multichannel_STATUS) DeepCopy() *Multichannel_STATUS {
	if in == nil {
		return nil
	}
	out := new(Multichannel_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolSettings) DeepCopyInto(out *ProtocolSettings) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Smb != nil {
		in, out := &in.Smb, &out.Smb
		*out = new(SmbSetting)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolSettings.
func (in *ProtocolSettings) DeepCopy() *ProtocolSettings {
	if in == nil {
		return nil
	}
	out := new(ProtocolSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolSettings_STATUS) DeepCopyInto(out *ProtocolSettings_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Smb != nil {
		in, out := &in.Smb, &out.Smb
		*out = new(SmbSetting_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolSettings_STATUS.
func (in *ProtocolSettings_STATUS) DeepCopy() *ProtocolSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(ProtocolSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignedIdentifier) DeepCopyInto(out *SignedIdentifier) {
	*out = *in
	if in.AccessPolicy != nil {
		in, out := &in.AccessPolicy, &out.AccessPolicy
		*out = new(AccessPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignedIdentifier.
func (in *SignedIdentifier) DeepCopy() *SignedIdentifier {
	if in == nil {
		return nil
	}
	out := new(SignedIdentifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignedIdentifier_STATUS) DeepCopyInto(out *SignedIdentifier_STATUS) {
	*out = *in
	if in.AccessPolicy != nil {
		in, out := &in.AccessPolicy, &out.AccessPolicy
		*out = new(AccessPolicy_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignedIdentifier_STATUS.
func (in *SignedIdentifier_STATUS) DeepCopy() *SignedIdentifier_STATUS {
	if in == nil {
		return nil
	}
	out := new(SignedIdentifier_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_STATUS) DeepCopyInto(out *Sku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_STATUS.
func (in *Sku_STATUS) DeepCopy() *Sku_STATUS {
	if in == nil {
		return nil
	}
	out := new(Sku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbSetting) DeepCopyInto(out *SmbSetting) {
	*out = *in
	if in.AuthenticationMethods != nil {
		in, out := &in.AuthenticationMethods, &out.AuthenticationMethods
		*out = new(string)
		**out = **in
	}
	if in.ChannelEncryption != nil {
		in, out := &in.ChannelEncryption, &out.ChannelEncryption
		*out = new(string)
		**out = **in
	}
	if in.KerberosTicketEncryption != nil {
		in, out := &in.KerberosTicketEncryption, &out.KerberosTicketEncryption
		*out = new(string)
		**out = **in
	}
	if in.Multichannel != nil {
		in, out := &in.Multichannel, &out.Multichannel
		*out = new(Multichannel)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbSetting.
func (in *SmbSetting) DeepCopy() *SmbSetting {
	if in == nil {
		return nil
	}
	out := new(SmbSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbSetting_STATUS) DeepCopyInto(out *SmbSetting_STATUS) {
	*out = *in
	if in.AuthenticationMethods != nil {
		in, out := &in.AuthenticationMethods, &out.AuthenticationMethods
		*out = new(string)
		**out = **in
	}
	if in.ChannelEncryption != nil {
		in, out := &in.ChannelEncryption, &out.ChannelEncryption
		*out = new(string)
		**out = **in
	}
	if in.KerberosTicketEncryption != nil {
		in, out := &in.KerberosTicketEncryption, &out.KerberosTicketEncryption
		*out = new(string)
		**out = **in
	}
	if in.Multichannel != nil {
		in, out := &in.Multichannel, &out.Multichannel
		*out = new(Multichannel_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbSetting_STATUS.
func (in *SmbSetting_STATUS) DeepCopy() *SmbSetting_STATUS {
	if in == nil {
		return nil
	}
	out := new(SmbSetting_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsFileService) DeepCopyInto(out *StorageAccountsFileService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsFileService.
func (in *StorageAccountsFileService) DeepCopy() *StorageAccountsFileService {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsFileService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsFileService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsFileServiceList) DeepCopyInto(out *StorageAccountsFileServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsFileService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsFileServiceList.
func (in *StorageAccountsFileServiceList) DeepCopy() *StorageAccountsFileServiceList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsFileServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsFileServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsFileServicesShare) DeepCopyInto(out *StorageAccountsFileServicesShare) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsFileServicesShare.
func (in *StorageAccountsFileServicesShare) DeepCopy() *StorageAccountsFileServicesShare {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsFileServicesShare)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsFileServicesShare) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsFileServicesShareList) DeepCopyInto(out *StorageAccountsFileServicesShareList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsFileServicesShare, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsFileServicesShareList.
func (in *StorageAccountsFileServicesShareList) DeepCopy() *StorageAccountsFileServicesShareList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsFileServicesShareList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsFileServicesShareList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsTableService) DeepCopyInto(out *StorageAccountsTableService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsTableService.
func (in *StorageAccountsTableService) DeepCopy() *StorageAccountsTableService {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsTableService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsTableService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsTableServiceList) DeepCopyInto(out *StorageAccountsTableServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsTableService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsTableServiceList.
func (in *StorageAccountsTableServiceList) DeepCopy() *StorageAccountsTableServiceList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsTableServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsTableServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsTableServicesTable) DeepCopyInto(out *StorageAccountsTableServicesTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsTableServicesTable.
func (in *StorageAccountsTableServicesTable) DeepCopy() *StorageAccountsTableServicesTable {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsTableServicesTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsTableServicesTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccountsTableServicesTableList) DeepCopyInto(out *StorageAccountsTableServicesTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StorageAccountsTableServicesTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccountsTableServicesTableList.
func (in *StorageAccountsTableServicesTableList) DeepCopy() *StorageAccountsTableServicesTableList {
	if in == nil {
		return nil
	}
	out := new(StorageAccountsTableServicesTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StorageAccountsTableServicesTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_FileService_STATUS) DeepCopyInto(out *StorageAccounts_FileService_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtocolSettings != nil {
		in, out := &in.ProtocolSettings, &out.ProtocolSettings
		*out = new(ProtocolSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareDeleteRetentionPolicy != nil {
		in, out := &in.ShareDeleteRetentionPolicy, &out.ShareDeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_FileService_STATUS.
func (in *StorageAccounts_FileService_STATUS) DeepCopy() *StorageAccounts_FileService_STATUS {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_FileService_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_FileService_Spec) DeepCopyInto(out *StorageAccounts_FileService_Spec) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtocolSettings != nil {
		in, out := &in.ProtocolSettings, &out.ProtocolSettings
		*out = new(ProtocolSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ShareDeleteRetentionPolicy != nil {
		in, out := &in.ShareDeleteRetentionPolicy, &out.ShareDeleteRetentionPolicy
		*out = new(DeleteRetentionPolicy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_FileService_Spec.
func (in *StorageAccounts_FileService_Spec) DeepCopy() *StorageAccounts_FileService_Spec {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_FileService_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_FileServices_Share_STATUS) DeepCopyInto(out *StorageAccounts_FileServices_Share_STATUS) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.AccessTierChangeTime != nil {
		in, out := &in.AccessTierChangeTime, &out.AccessTierChangeTime
		*out = new(string)
		**out = **in
	}
	if in.AccessTierStatus != nil {
		in, out := &in.AccessTierStatus, &out.AccessTierStatus
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Deleted != nil {
		in, out := &in.Deleted, &out.Deleted
		*out = new(bool)
		**out = **in
	}
	if in.DeletedTime != nil {
		in, out := &in.DeletedTime, &out.DeletedTime
		*out = new(string)
		**out = **in
	}
	if in.EnabledProtocols != nil {
		in, out := &in.EnabledProtocols, &out.EnabledProtocols
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(string)
		**out = **in
	}
	if in.LeaseDuration != nil {
		in, out := &in.LeaseDuration, &out.LeaseDuration
		*out = new(string)
		**out = **in
	}
	if in.LeaseState != nil {
		in, out := &in.LeaseState, &out.LeaseState
		*out = new(string)
		**out = **in
	}
	if in.LeaseStatus != nil {
		in, out := &in.LeaseStatus, &out.LeaseStatus
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RemainingRetentionDays != nil {
		in, out := &in.RemainingRetentionDays, &out.RemainingRetentionDays
		*out = new(int)
		**out = **in
	}
	if in.RootSquash != nil {
		in, out := &in.RootSquash, &out.RootSquash
		*out = new(string)
		**out = **in
	}
	if in.ShareQuota != nil {
		in, out := &in.ShareQuota, &out.ShareQuota
		*out = new(int)
		**out = **in
	}
	if in.ShareUsageBytes != nil {
		in, out := &in.ShareUsageBytes, &out.ShareUsageBytes
		*out = new(int)
		**out = **in
	}
	if in.SignedIdentifiers != nil {
		in, out := &in.SignedIdentifiers, &out.SignedIdentifiers
		*out = make([]SignedIdentifier_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_FileServices_Share_STATUS.
func (in *StorageAccounts_FileServices_Share_STATUS) DeepCopy() *StorageAccounts_FileServices_Share_STATUS {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_FileServices_Share_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_FileServices_Share_Spec) DeepCopyInto(out *StorageAccounts_FileServices_Share_Spec) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.EnabledProtocols != nil {
		in, out := &in.EnabledProtocols, &out.EnabledProtocols
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RootSquash != nil {
		in, out := &in.RootSquash, &out.RootSquash
		*out = new(string)
		**out = **in
	}
	if in.ShareQuota != nil {
		in, out := &in.ShareQuota, &out.ShareQuota
		*out = new(int)
		**out = **in
	}
	if in.SignedIdentifiers != nil {
		in, out := &in.SignedIdentifiers, &out.SignedIdentifiers
		*out = make([]SignedIdentifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_FileServices_Share_Spec.
func (in *StorageAccounts_FileServices_Share_Spec) DeepCopy() *StorageAccounts_FileServices_Share_Spec {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_FileServices_Share_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_TableService_STATUS) DeepCopyInto(out *StorageAccounts_TableService_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_TableService_STATUS.
func (in *StorageAccounts_TableService_STATUS) DeepCopy() *StorageAccounts_TableService_STATUS {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_TableService_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_TableService_Spec) DeepCopyInto(out *StorageAccounts_TableService_Spec) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(CorsRules)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_TableService_Spec.
func (in *StorageAccounts_TableService_Spec) DeepCopy() *StorageAccounts_TableService_Spec {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_TableService_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_TableServices_Table_STATUS) DeepCopyInto(out *StorageAccounts_TableServices_Table_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SignedIdentifiers != nil {
		in, out := &in.SignedIdentifiers, &out.SignedIdentifiers
		*out = make([]TableSignedIdentifier_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_TableServices_Table_STATUS.
func (in *StorageAccounts_TableServices_Table_STATUS) DeepCopy() *StorageAccounts_TableServices_Table_STATUS {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_TableServices_Table_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageAccounts_TableServices_Table_Spec) DeepCopyInto(out *StorageAccounts_TableServices_Table_Spec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SignedIdentifiers != nil {
		in, out := &in.SignedIdentifiers, &out.SignedIdentifiers
		*out = make([]TableSignedIdentifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageAccounts_TableServices_Table_Spec.
func (in *StorageAccounts_TableServices_Table_Spec) DeepCopy() *StorageAccounts_TableServices_Table_Spec {
	if in == nil {
		return nil
	}
	out := new(StorageAccounts_TableServices_Table_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableAccessPolicy) DeepCopyInto(out *TableAccessPolicy) {
	*out = *in
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableAccessPolicy.
func (in *TableAccessPolicy) DeepCopy() *TableAccessPolicy {
	if in == nil {
		return nil
	}
	out := new(TableAccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableAccessPolicy_STATUS) DeepCopyInto(out *TableAccessPolicy_STATUS) {
	*out = *in
	if in.ExpiryTime != nil {
		in, out := &in.ExpiryTime, &out.ExpiryTime
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableAccessPolicy_STATUS.
func (in *TableAccessPolicy_STATUS) DeepCopy() *TableAccessPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(TableAccessPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSignedIdentifier) DeepCopyInto(out *TableSignedIdentifier) {
	*out = *in
	if in.AccessPolicy != nil {
		in, out := &in.AccessPolicy, &out.AccessPolicy
		*out = new(TableAccessPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSignedIdentifier.
func (in *TableSignedIdentifier) DeepCopy() *TableSignedIdentifier {
	if in == nil {
		return nil
	}
	out := new(TableSignedIdentifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSignedIdentifier_STATUS) DeepCopyInto(out *TableSignedIdentifier_STATUS) {
	*out = *in
	if in.AccessPolicy != nil {
		in, out := &in.AccessPolicy, &out.AccessPolicy
		*out = new(TableAccessPolicy_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSignedIdentifier_STATUS.
func (in *TableSignedIdentifier_STATUS) DeepCopy() *TableSignedIdentifier_STATUS {
	if in == nil {
		return nil
	}
	out := new(TableSignedIdentifier_STATUS)
	in.DeepCopyInto(out)
	return out
}
