// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210401

type BlobServiceProperties_STATUSARM struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Name: The name of the resource
	Name *string `json:"name,omitempty"`

	// Properties: The properties of a storage account’s Blob service.
	Properties *BlobServiceProperties_STATUS_PropertiesARM `json:"properties,omitempty"`

	// Sku: Sku name and tier.
	Sku *Sku_STATUSARM `json:"sku,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

type BlobServiceProperties_STATUS_PropertiesARM struct {
	// AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.
	AutomaticSnapshotPolicyEnabled *bool `json:"automaticSnapshotPolicyEnabled,omitempty"`

	// ChangeFeed: The blob service properties for change feed events.
	ChangeFeed *ChangeFeed_STATUSARM `json:"changeFeed,omitempty"`

	// ContainerDeleteRetentionPolicy: The blob service properties for container soft delete.
	ContainerDeleteRetentionPolicy *DeleteRetentionPolicy_STATUSARM `json:"containerDeleteRetentionPolicy,omitempty"`

	// Cors: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no
	// CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the
	// Blob service.
	Cors *CorsRules_STATUSARM `json:"cors,omitempty"`

	// DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an
	// incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
	DefaultServiceVersion *string `json:"defaultServiceVersion,omitempty"`

	// DeleteRetentionPolicy: The blob service properties for blob soft delete.
	DeleteRetentionPolicy *DeleteRetentionPolicy_STATUSARM `json:"deleteRetentionPolicy,omitempty"`

	// IsVersioningEnabled: Versioning is enabled if set to true.
	IsVersioningEnabled *bool `json:"isVersioningEnabled,omitempty"`

	// LastAccessTimeTrackingPolicy: The blob service property to configure last access time based tracking policy.
	LastAccessTimeTrackingPolicy *LastAccessTimeTrackingPolicy_STATUSARM `json:"lastAccessTimeTrackingPolicy,omitempty"`

	// RestorePolicy: The blob service properties for blob restore policy.
	RestorePolicy *RestorePolicyProperties_STATUSARM `json:"restorePolicy,omitempty"`
}

type Sku_STATUSARM struct {
	Name *SkuName_STATUS `json:"name,omitempty"`
	Tier *Tier_STATUS    `json:"tier,omitempty"`
}

type ChangeFeed_STATUSARM struct {
	// Enabled: Indicates whether change feed event logging is enabled for the Blob service.
	Enabled *bool `json:"enabled,omitempty"`

	// RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is
	// 146000 days (400 years). A null value indicates an infinite retention of the change feed.
	RetentionInDays *int `json:"retentionInDays,omitempty"`
}

type CorsRules_STATUSARM struct {
	// CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRule_STATUSARM `json:"corsRules,omitempty"`
}

type DeleteRetentionPolicy_STATUSARM struct {
	// Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and
	// the maximum value can be 365.
	Days *int `json:"days,omitempty"`

	// Enabled: Indicates whether DeleteRetentionPolicy is enabled.
	Enabled *bool `json:"enabled,omitempty"`
}

type LastAccessTimeTrackingPolicy_STATUSARM struct {
	// BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently
	// read only
	BlobType []string `json:"blobType,omitempty"`

	// Enable: When set to true last access time based tracking is enabled.
	Enable *bool `json:"enable,omitempty"`

	// Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
	Name *LastAccessTimeTrackingPolicySTATUSName `json:"name,omitempty"`

	// TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob
	// object should be tracked.This field is currently read only with value as 1
	TrackingGranularityInDays *int `json:"trackingGranularityInDays,omitempty"`
}

type RestorePolicyProperties_STATUSARM struct {
	// Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
	Days *int `json:"days,omitempty"`

	// Enabled: Blob restore is enabled if set to true.
	Enabled *bool `json:"enabled,omitempty"`

	// LastEnabledTime: Deprecated in favor of minRestoreTime property.
	LastEnabledTime *string `json:"lastEnabledTime,omitempty"`

	// MinRestoreTime: Returns the minimum date and time that the restore can be started.
	MinRestoreTime *string `json:"minRestoreTime,omitempty"`
}

type SkuName_STATUS string

const (
	SkuName_STATUS_PremiumLRS     = SkuName_STATUS("Premium_LRS")
	SkuName_STATUS_PremiumZRS     = SkuName_STATUS("Premium_ZRS")
	SkuName_STATUS_StandardGRS    = SkuName_STATUS("Standard_GRS")
	SkuName_STATUS_StandardGZRS   = SkuName_STATUS("Standard_GZRS")
	SkuName_STATUS_StandardLRS    = SkuName_STATUS("Standard_LRS")
	SkuName_STATUS_StandardRAGRS  = SkuName_STATUS("Standard_RAGRS")
	SkuName_STATUS_StandardRAGZRS = SkuName_STATUS("Standard_RAGZRS")
	SkuName_STATUS_StandardZRS    = SkuName_STATUS("Standard_ZRS")
)

type Tier_STATUS string

const (
	Tier_STATUS_Premium  = Tier_STATUS("Premium")
	Tier_STATUS_Standard = Tier_STATUS("Standard")
)

type CorsRule_STATUSARM struct {
	// AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin
	// request.
	AllowedHeaders []string `json:"allowedHeaders,omitempty"`

	// AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the
	// origin.
	AllowedMethods []CorsRuleSTATUSAllowedMethods `json:"allowedMethods,omitempty"`

	// AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*"
	// to allow all domains
	AllowedOrigins []string `json:"allowedOrigins,omitempty"`

	// ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders []string `json:"exposedHeaders,omitempty"`

	// MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a
	// preflight response.
	MaxAgeInSeconds *int `json:"maxAgeInSeconds,omitempty"`
}

type LastAccessTimeTrackingPolicySTATUSName string

const LastAccessTimeTrackingPolicySTATUSName_AccessTimeTracking = LastAccessTimeTrackingPolicySTATUSName("AccessTimeTracking")

type CorsRuleSTATUSAllowedMethods string

const (
	CorsRuleSTATUSAllowedMethods_DELETE  = CorsRuleSTATUSAllowedMethods("DELETE")
	CorsRuleSTATUSAllowedMethods_GET     = CorsRuleSTATUSAllowedMethods("GET")
	CorsRuleSTATUSAllowedMethods_HEAD    = CorsRuleSTATUSAllowedMethods("HEAD")
	CorsRuleSTATUSAllowedMethods_MERGE   = CorsRuleSTATUSAllowedMethods("MERGE")
	CorsRuleSTATUSAllowedMethods_OPTIONS = CorsRuleSTATUSAllowedMethods("OPTIONS")
	CorsRuleSTATUSAllowedMethods_POST    = CorsRuleSTATUSAllowedMethods("POST")
	CorsRuleSTATUSAllowedMethods_PUT     = CorsRuleSTATUSAllowedMethods("PUT")
)
