// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=sql.azure.com,resources=serversdatabasesvulnerabilityassessments,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=sql.azure.com,resources={serversdatabasesvulnerabilityassessments/status,serversdatabasesvulnerabilityassessments/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1beta20211101.ServersDatabasesVulnerabilityAssessment
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/DatabaseVulnerabilityAssessments.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/default
type ServersDatabasesVulnerabilityAssessment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Servers_Databases_VulnerabilityAssessment_Spec   `json:"spec,omitempty"`
	Status            Servers_Databases_VulnerabilityAssessment_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &ServersDatabasesVulnerabilityAssessment{}

// GetConditions returns the conditions of the resource
func (assessment *ServersDatabasesVulnerabilityAssessment) GetConditions() conditions.Conditions {
	return assessment.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (assessment *ServersDatabasesVulnerabilityAssessment) SetConditions(conditions conditions.Conditions) {
	assessment.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &ServersDatabasesVulnerabilityAssessment{}

// AzureName returns the Azure name of the resource (always "default")
func (assessment *ServersDatabasesVulnerabilityAssessment) AzureName() string {
	return "default"
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (assessment ServersDatabasesVulnerabilityAssessment) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetResourceScope returns the scope of the resource
func (assessment *ServersDatabasesVulnerabilityAssessment) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (assessment *ServersDatabasesVulnerabilityAssessment) GetSpec() genruntime.ConvertibleSpec {
	return &assessment.Spec
}

// GetStatus returns the status of this resource
func (assessment *ServersDatabasesVulnerabilityAssessment) GetStatus() genruntime.ConvertibleStatus {
	return &assessment.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
func (assessment *ServersDatabasesVulnerabilityAssessment) GetType() string {
	return "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
}

// NewEmptyStatus returns a new empty (blank) status
func (assessment *ServersDatabasesVulnerabilityAssessment) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &Servers_Databases_VulnerabilityAssessment_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (assessment *ServersDatabasesVulnerabilityAssessment) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(assessment.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  assessment.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (assessment *ServersDatabasesVulnerabilityAssessment) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*Servers_Databases_VulnerabilityAssessment_STATUS); ok {
		assessment.Status = *st
		return nil
	}

	// Convert status to required version
	var st Servers_Databases_VulnerabilityAssessment_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	assessment.Status = st
	return nil
}

// Hub marks that this ServersDatabasesVulnerabilityAssessment is the hub type for conversion
func (assessment *ServersDatabasesVulnerabilityAssessment) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (assessment *ServersDatabasesVulnerabilityAssessment) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: assessment.Spec.OriginalVersion,
		Kind:    "ServersDatabasesVulnerabilityAssessment",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1beta20211101.ServersDatabasesVulnerabilityAssessment
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/DatabaseVulnerabilityAssessments.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/default
type ServersDatabasesVulnerabilityAssessmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServersDatabasesVulnerabilityAssessment `json:"items"`
}

// Storage version of v1beta20211101.Servers_Databases_VulnerabilityAssessment_Spec
type Servers_Databases_VulnerabilityAssessment_Spec struct {
	OriginalVersion string `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a sql.azure.com/ServersDatabase resource
	Owner                          *genruntime.KnownResourceReference               `group:"sql.azure.com" json:"owner,omitempty" kind:"ServersDatabase"`
	PropertyBag                    genruntime.PropertyBag                           `json:"$propertyBag,omitempty"`
	RecurringScans                 *VulnerabilityAssessmentRecurringScansProperties `json:"recurringScans,omitempty"`
	StorageAccountAccessKey        *genruntime.SecretReference                      `json:"storageAccountAccessKey,omitempty"`
	StorageContainerPath           *string                                          `json:"storageContainerPath,omitempty" optionalConfigMapPair:"StorageContainerPath"`
	StorageContainerPathFromConfig *genruntime.ConfigMapReference                   `json:"storageContainerPathFromConfig,omitempty" optionalConfigMapPair:"StorageContainerPath"`
	StorageContainerSasKey         *genruntime.SecretReference                      `json:"storageContainerSasKey,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Servers_Databases_VulnerabilityAssessment_Spec{}

// ConvertSpecFrom populates our Servers_Databases_VulnerabilityAssessment_Spec from the provided source
func (assessment *Servers_Databases_VulnerabilityAssessment_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == assessment {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(assessment)
}

// ConvertSpecTo populates the provided destination from our Servers_Databases_VulnerabilityAssessment_Spec
func (assessment *Servers_Databases_VulnerabilityAssessment_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == assessment {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(assessment)
}

// Storage version of v1beta20211101.Servers_Databases_VulnerabilityAssessment_STATUS
type Servers_Databases_VulnerabilityAssessment_STATUS struct {
	Conditions           []conditions.Condition                                  `json:"conditions,omitempty"`
	Id                   *string                                                 `json:"id,omitempty"`
	Name                 *string                                                 `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag                                  `json:"$propertyBag,omitempty"`
	RecurringScans       *VulnerabilityAssessmentRecurringScansProperties_STATUS `json:"recurringScans,omitempty"`
	StorageContainerPath *string                                                 `json:"storageContainerPath,omitempty"`
	Type                 *string                                                 `json:"type,omitempty"`
}

var _ genruntime.ConvertibleStatus = &Servers_Databases_VulnerabilityAssessment_STATUS{}

// ConvertStatusFrom populates our Servers_Databases_VulnerabilityAssessment_STATUS from the provided source
func (assessment *Servers_Databases_VulnerabilityAssessment_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == assessment {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(assessment)
}

// ConvertStatusTo populates the provided destination from our Servers_Databases_VulnerabilityAssessment_STATUS
func (assessment *Servers_Databases_VulnerabilityAssessment_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == assessment {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(assessment)
}

// Storage version of v1beta20211101.VulnerabilityAssessmentRecurringScansProperties
// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansProperties struct {
	EmailSubscriptionAdmins *bool                  `json:"emailSubscriptionAdmins,omitempty"`
	Emails                  []string               `json:"emails,omitempty"`
	IsEnabled               *bool                  `json:"isEnabled,omitempty"`
	PropertyBag             genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20211101.VulnerabilityAssessmentRecurringScansProperties_STATUS
// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansProperties_STATUS struct {
	EmailSubscriptionAdmins *bool                  `json:"emailSubscriptionAdmins,omitempty"`
	Emails                  []string               `json:"emails,omitempty"`
	IsEnabled               *bool                  `json:"isEnabled,omitempty"`
	PropertyBag             genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

func init() {
	SchemeBuilder.Register(&ServersDatabasesVulnerabilityAssessment{}, &ServersDatabasesVulnerabilityAssessmentList{})
}
