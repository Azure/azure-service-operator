//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1api20201001

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionGroupReference) DeepCopyInto(out *ActionGroupReference) {
	*out = *in
	if in.ActionGroupReference != nil {
		in, out := &in.ActionGroupReference, &out.ActionGroupReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionGroupReference.
func (in *ActionGroupReference) DeepCopy() *ActionGroupReference {
	if in == nil {
		return nil
	}
	out := new(ActionGroupReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionGroup_STATUS) DeepCopyInto(out *ActionGroup_STATUS) {
	*out = *in
	if in.ActionGroupId != nil {
		in, out := &in.ActionGroupId, &out.ActionGroupId
		*out = new(string)
		**out = **in
	}
	if in.WebhookProperties != nil {
		in, out := &in.WebhookProperties, &out.WebhookProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionGroup_STATUS.
func (in *ActionGroup_STATUS) DeepCopy() *ActionGroup_STATUS {
	if in == nil {
		return nil
	}
	out := new(ActionGroup_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionList) DeepCopyInto(out *ActionList) {
	*out = *in
	if in.ActionGroups != nil {
		in, out := &in.ActionGroups, &out.ActionGroups
		*out = make([]ActionGroupReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionList.
func (in *ActionList) DeepCopy() *ActionList {
	if in == nil {
		return nil
	}
	out := new(ActionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionList_STATUS) DeepCopyInto(out *ActionList_STATUS) {
	*out = *in
	if in.ActionGroups != nil {
		in, out := &in.ActionGroups, &out.ActionGroups
		*out = make([]ActionGroup_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionList_STATUS.
func (in *ActionList_STATUS) DeepCopy() *ActionList_STATUS {
	if in == nil {
		return nil
	}
	out := new(ActionList_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivityLogAlert) DeepCopyInto(out *ActivityLogAlert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivityLogAlert.
func (in *ActivityLogAlert) DeepCopy() *ActivityLogAlert {
	if in == nil {
		return nil
	}
	out := new(ActivityLogAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivityLogAlert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivityLogAlertList) DeepCopyInto(out *ActivityLogAlertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActivityLogAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivityLogAlertList.
func (in *ActivityLogAlertList) DeepCopy() *ActivityLogAlertList {
	if in == nil {
		return nil
	}
	out := new(ActivityLogAlertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivityLogAlertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivityLogAlertOperatorSpec) DeepCopyInto(out *ActivityLogAlertOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivityLogAlertOperatorSpec.
func (in *ActivityLogAlertOperatorSpec) DeepCopy() *ActivityLogAlertOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(ActivityLogAlertOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivityLogAlert_STATUS) DeepCopyInto(out *ActivityLogAlert_STATUS) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new(ActionList_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(AlertRuleAllOfCondition_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivityLogAlert_STATUS.
func (in *ActivityLogAlert_STATUS) DeepCopy() *ActivityLogAlert_STATUS {
	if in == nil {
		return nil
	}
	out := new(ActivityLogAlert_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivityLogAlert_Spec) DeepCopyInto(out *ActivityLogAlert_Spec) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new(ActionList)
		(*in).DeepCopyInto(*out)
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(AlertRuleAllOfCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(ActivityLogAlertOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.ScopesReferences != nil {
		in, out := &in.ScopesReferences, &out.ScopesReferences
		*out = make([]genruntime.ResourceReference, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivityLogAlert_Spec.
func (in *ActivityLogAlert_Spec) DeepCopy() *ActivityLogAlert_Spec {
	if in == nil {
		return nil
	}
	out := new(ActivityLogAlert_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleAllOfCondition) DeepCopyInto(out *AlertRuleAllOfCondition) {
	*out = *in
	if in.AllOf != nil {
		in, out := &in.AllOf, &out.AllOf
		*out = make([]AlertRuleAnyOfOrLeafCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleAllOfCondition.
func (in *AlertRuleAllOfCondition) DeepCopy() *AlertRuleAllOfCondition {
	if in == nil {
		return nil
	}
	out := new(AlertRuleAllOfCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleAllOfCondition_STATUS) DeepCopyInto(out *AlertRuleAllOfCondition_STATUS) {
	*out = *in
	if in.AllOf != nil {
		in, out := &in.AllOf, &out.AllOf
		*out = make([]AlertRuleAnyOfOrLeafCondition_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleAllOfCondition_STATUS.
func (in *AlertRuleAllOfCondition_STATUS) DeepCopy() *AlertRuleAllOfCondition_STATUS {
	if in == nil {
		return nil
	}
	out := new(AlertRuleAllOfCondition_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleAnyOfOrLeafCondition) DeepCopyInto(out *AlertRuleAnyOfOrLeafCondition) {
	*out = *in
	if in.AnyOf != nil {
		in, out := &in.AnyOf, &out.AnyOf
		*out = make([]AlertRuleLeafCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainsAny != nil {
		in, out := &in.ContainsAny, &out.ContainsAny
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleAnyOfOrLeafCondition.
func (in *AlertRuleAnyOfOrLeafCondition) DeepCopy() *AlertRuleAnyOfOrLeafCondition {
	if in == nil {
		return nil
	}
	out := new(AlertRuleAnyOfOrLeafCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleAnyOfOrLeafCondition_STATUS) DeepCopyInto(out *AlertRuleAnyOfOrLeafCondition_STATUS) {
	*out = *in
	if in.AnyOf != nil {
		in, out := &in.AnyOf, &out.AnyOf
		*out = make([]AlertRuleLeafCondition_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainsAny != nil {
		in, out := &in.ContainsAny, &out.ContainsAny
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleAnyOfOrLeafCondition_STATUS.
func (in *AlertRuleAnyOfOrLeafCondition_STATUS) DeepCopy() *AlertRuleAnyOfOrLeafCondition_STATUS {
	if in == nil {
		return nil
	}
	out := new(AlertRuleAnyOfOrLeafCondition_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleLeafCondition) DeepCopyInto(out *AlertRuleLeafCondition) {
	*out = *in
	if in.ContainsAny != nil {
		in, out := &in.ContainsAny, &out.ContainsAny
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleLeafCondition.
func (in *AlertRuleLeafCondition) DeepCopy() *AlertRuleLeafCondition {
	if in == nil {
		return nil
	}
	out := new(AlertRuleLeafCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleLeafCondition_STATUS) DeepCopyInto(out *AlertRuleLeafCondition_STATUS) {
	*out = *in
	if in.ContainsAny != nil {
		in, out := &in.ContainsAny, &out.ContainsAny
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleLeafCondition_STATUS.
func (in *AlertRuleLeafCondition_STATUS) DeepCopy() *AlertRuleLeafCondition_STATUS {
	if in == nil {
		return nil
	}
	out := new(AlertRuleLeafCondition_STATUS)
	in.DeepCopyInto(out)
	return out
}
