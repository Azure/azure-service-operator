//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1api20210501

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPoolUpgradeSettings_Spec) DeepCopyInto(out *AgentPoolUpgradeSettings_Spec) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPoolUpgradeSettings_Spec.
func (in *AgentPoolUpgradeSettings_Spec) DeepCopy() *AgentPoolUpgradeSettings_Spec {
	if in == nil {
		return nil
	}
	out := new(AgentPoolUpgradeSettings_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPoolUpgradeSettings_SpecARM) DeepCopyInto(out *AgentPoolUpgradeSettings_SpecARM) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPoolUpgradeSettings_SpecARM.
func (in *AgentPoolUpgradeSettings_SpecARM) DeepCopy() *AgentPoolUpgradeSettings_SpecARM {
	if in == nil {
		return nil
	}
	out := new(AgentPoolUpgradeSettings_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPoolUpgradeSettings_Status) DeepCopyInto(out *AgentPoolUpgradeSettings_Status) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPoolUpgradeSettings_Status.
func (in *AgentPoolUpgradeSettings_Status) DeepCopy() *AgentPoolUpgradeSettings_Status {
	if in == nil {
		return nil
	}
	out := new(AgentPoolUpgradeSettings_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPoolUpgradeSettings_StatusARM) DeepCopyInto(out *AgentPoolUpgradeSettings_StatusARM) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPoolUpgradeSettings_StatusARM.
func (in *AgentPoolUpgradeSettings_StatusARM) DeepCopy() *AgentPoolUpgradeSettings_StatusARM {
	if in == nil {
		return nil
	}
	out := new(AgentPoolUpgradeSettings_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPool_Status) DeepCopyInto(out *AgentPool_Status) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Status)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Status)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Status)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(int)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Status)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Status)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Status)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertiesType != nil {
		in, out := &in.PropertiesType, &out.PropertiesType
		*out = new(AgentPoolType_Status)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Status)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Status)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPool_Status.
func (in *AgentPool_Status) DeepCopy() *AgentPool_Status {
	if in == nil {
		return nil
	}
	out := new(AgentPool_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentPool_StatusARM) DeepCopyInto(out *AgentPool_StatusARM) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ManagedClusterAgentPoolProfileProperties_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentPool_StatusARM.
func (in *AgentPool_StatusARM) DeepCopy() *AgentPool_StatusARM {
	if in == nil {
		return nil
	}
	out := new(AgentPool_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceLinuxProfile_Spec) DeepCopyInto(out *ContainerServiceLinuxProfile_Spec) {
	*out = *in
	in.Ssh.DeepCopyInto(&out.Ssh)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceLinuxProfile_Spec.
func (in *ContainerServiceLinuxProfile_Spec) DeepCopy() *ContainerServiceLinuxProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceLinuxProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceLinuxProfile_SpecARM) DeepCopyInto(out *ContainerServiceLinuxProfile_SpecARM) {
	*out = *in
	in.Ssh.DeepCopyInto(&out.Ssh)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceLinuxProfile_SpecARM.
func (in *ContainerServiceLinuxProfile_SpecARM) DeepCopy() *ContainerServiceLinuxProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceLinuxProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceLinuxProfile_Status) DeepCopyInto(out *ContainerServiceLinuxProfile_Status) {
	*out = *in
	in.Ssh.DeepCopyInto(&out.Ssh)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceLinuxProfile_Status.
func (in *ContainerServiceLinuxProfile_Status) DeepCopy() *ContainerServiceLinuxProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceLinuxProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceLinuxProfile_StatusARM) DeepCopyInto(out *ContainerServiceLinuxProfile_StatusARM) {
	*out = *in
	in.Ssh.DeepCopyInto(&out.Ssh)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceLinuxProfile_StatusARM.
func (in *ContainerServiceLinuxProfile_StatusARM) DeepCopy() *ContainerServiceLinuxProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceLinuxProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceNetworkProfile_Spec) DeepCopyInto(out *ContainerServiceNetworkProfile_Spec) {
	*out = *in
	if in.DnsServiceIP != nil {
		in, out := &in.DnsServiceIP, &out.DnsServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = new(ManagedClusterLoadBalancerProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(ContainerServiceNetworkProfileSpecLoadBalancerSku)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(ContainerServiceNetworkProfileSpecNetworkMode)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(ContainerServiceNetworkProfileSpecNetworkPlugin)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(ContainerServiceNetworkProfileSpecNetworkPolicy)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(ContainerServiceNetworkProfileSpecOutboundType)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceNetworkProfile_Spec.
func (in *ContainerServiceNetworkProfile_Spec) DeepCopy() *ContainerServiceNetworkProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceNetworkProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceNetworkProfile_SpecARM) DeepCopyInto(out *ContainerServiceNetworkProfile_SpecARM) {
	*out = *in
	if in.DnsServiceIP != nil {
		in, out := &in.DnsServiceIP, &out.DnsServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = new(ManagedClusterLoadBalancerProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(ContainerServiceNetworkProfileSpecLoadBalancerSku)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(ContainerServiceNetworkProfileSpecNetworkMode)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(ContainerServiceNetworkProfileSpecNetworkPlugin)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(ContainerServiceNetworkProfileSpecNetworkPolicy)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(ContainerServiceNetworkProfileSpecOutboundType)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceNetworkProfile_SpecARM.
func (in *ContainerServiceNetworkProfile_SpecARM) DeepCopy() *ContainerServiceNetworkProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceNetworkProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceNetworkProfile_Status) DeepCopyInto(out *ContainerServiceNetworkProfile_Status) {
	*out = *in
	if in.DnsServiceIP != nil {
		in, out := &in.DnsServiceIP, &out.DnsServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = new(ManagedClusterLoadBalancerProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(ContainerServiceNetworkProfileStatusLoadBalancerSku)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(ContainerServiceNetworkProfileStatusNetworkMode)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(ContainerServiceNetworkProfileStatusNetworkPlugin)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(ContainerServiceNetworkProfileStatusNetworkPolicy)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(ContainerServiceNetworkProfileStatusOutboundType)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceNetworkProfile_Status.
func (in *ContainerServiceNetworkProfile_Status) DeepCopy() *ContainerServiceNetworkProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceNetworkProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceNetworkProfile_StatusARM) DeepCopyInto(out *ContainerServiceNetworkProfile_StatusARM) {
	*out = *in
	if in.DnsServiceIP != nil {
		in, out := &in.DnsServiceIP, &out.DnsServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = new(ManagedClusterLoadBalancerProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(ContainerServiceNetworkProfileStatusLoadBalancerSku)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(ContainerServiceNetworkProfileStatusNetworkMode)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(ContainerServiceNetworkProfileStatusNetworkPlugin)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(ContainerServiceNetworkProfileStatusNetworkPolicy)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(ContainerServiceNetworkProfileStatusOutboundType)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceNetworkProfile_StatusARM.
func (in *ContainerServiceNetworkProfile_StatusARM) DeepCopy() *ContainerServiceNetworkProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceNetworkProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshConfiguration_Spec) DeepCopyInto(out *ContainerServiceSshConfiguration_Spec) {
	*out = *in
	if in.PublicKeys != nil {
		in, out := &in.PublicKeys, &out.PublicKeys
		*out = make([]ContainerServiceSshPublicKey_Spec, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshConfiguration_Spec.
func (in *ContainerServiceSshConfiguration_Spec) DeepCopy() *ContainerServiceSshConfiguration_Spec {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshConfiguration_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshConfiguration_SpecARM) DeepCopyInto(out *ContainerServiceSshConfiguration_SpecARM) {
	*out = *in
	if in.PublicKeys != nil {
		in, out := &in.PublicKeys, &out.PublicKeys
		*out = make([]ContainerServiceSshPublicKey_SpecARM, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshConfiguration_SpecARM.
func (in *ContainerServiceSshConfiguration_SpecARM) DeepCopy() *ContainerServiceSshConfiguration_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshConfiguration_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshConfiguration_Status) DeepCopyInto(out *ContainerServiceSshConfiguration_Status) {
	*out = *in
	if in.PublicKeys != nil {
		in, out := &in.PublicKeys, &out.PublicKeys
		*out = make([]ContainerServiceSshPublicKey_Status, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshConfiguration_Status.
func (in *ContainerServiceSshConfiguration_Status) DeepCopy() *ContainerServiceSshConfiguration_Status {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshConfiguration_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshConfiguration_StatusARM) DeepCopyInto(out *ContainerServiceSshConfiguration_StatusARM) {
	*out = *in
	if in.PublicKeys != nil {
		in, out := &in.PublicKeys, &out.PublicKeys
		*out = make([]ContainerServiceSshPublicKey_StatusARM, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshConfiguration_StatusARM.
func (in *ContainerServiceSshConfiguration_StatusARM) DeepCopy() *ContainerServiceSshConfiguration_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshConfiguration_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshPublicKey_Spec) DeepCopyInto(out *ContainerServiceSshPublicKey_Spec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshPublicKey_Spec.
func (in *ContainerServiceSshPublicKey_Spec) DeepCopy() *ContainerServiceSshPublicKey_Spec {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshPublicKey_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshPublicKey_SpecARM) DeepCopyInto(out *ContainerServiceSshPublicKey_SpecARM) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshPublicKey_SpecARM.
func (in *ContainerServiceSshPublicKey_SpecARM) DeepCopy() *ContainerServiceSshPublicKey_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshPublicKey_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshPublicKey_Status) DeepCopyInto(out *ContainerServiceSshPublicKey_Status) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshPublicKey_Status.
func (in *ContainerServiceSshPublicKey_Status) DeepCopy() *ContainerServiceSshPublicKey_Status {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshPublicKey_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSshPublicKey_StatusARM) DeepCopyInto(out *ContainerServiceSshPublicKey_StatusARM) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSshPublicKey_StatusARM.
func (in *ContainerServiceSshPublicKey_StatusARM) DeepCopy() *ContainerServiceSshPublicKey_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSshPublicKey_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_Spec) DeepCopyInto(out *ExtendedLocation_Spec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ExtendedLocationType_Spec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_Spec.
func (in *ExtendedLocation_Spec) DeepCopy() *ExtendedLocation_Spec {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_SpecARM) DeepCopyInto(out *ExtendedLocation_SpecARM) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ExtendedLocationType_Spec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_SpecARM.
func (in *ExtendedLocation_SpecARM) DeepCopy() *ExtendedLocation_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_Status) DeepCopyInto(out *ExtendedLocation_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ExtendedLocationType_Status)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_Status.
func (in *ExtendedLocation_Status) DeepCopy() *ExtendedLocation_Status {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_StatusARM) DeepCopyInto(out *ExtendedLocation_StatusARM) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ExtendedLocationType_Status)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_StatusARM.
func (in *ExtendedLocation_StatusARM) DeepCopy() *ExtendedLocation_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfig_Spec) DeepCopyInto(out *KubeletConfig_Spec) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxFiles != nil {
		in, out := &in.ContainerLogMaxFiles, &out.ContainerLogMaxFiles
		*out = new(int)
		**out = **in
	}
	if in.ContainerLogMaxSizeMB != nil {
		in, out := &in.ContainerLogMaxSizeMB, &out.ContainerLogMaxSizeMB
		*out = new(int)
		**out = **in
	}
	if in.CpuCfsQuota != nil {
		in, out := &in.CpuCfsQuota, &out.CpuCfsQuota
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int)
		**out = **in
	}
	if in.PodMaxPids != nil {
		in, out := &in.PodMaxPids, &out.PodMaxPids
		*out = new(int)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfig_Spec.
func (in *KubeletConfig_Spec) DeepCopy() *KubeletConfig_Spec {
	if in == nil {
		return nil
	}
	out := new(KubeletConfig_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfig_SpecARM) DeepCopyInto(out *KubeletConfig_SpecARM) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxFiles != nil {
		in, out := &in.ContainerLogMaxFiles, &out.ContainerLogMaxFiles
		*out = new(int)
		**out = **in
	}
	if in.ContainerLogMaxSizeMB != nil {
		in, out := &in.ContainerLogMaxSizeMB, &out.ContainerLogMaxSizeMB
		*out = new(int)
		**out = **in
	}
	if in.CpuCfsQuota != nil {
		in, out := &in.CpuCfsQuota, &out.CpuCfsQuota
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int)
		**out = **in
	}
	if in.PodMaxPids != nil {
		in, out := &in.PodMaxPids, &out.PodMaxPids
		*out = new(int)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfig_SpecARM.
func (in *KubeletConfig_SpecARM) DeepCopy() *KubeletConfig_SpecARM {
	if in == nil {
		return nil
	}
	out := new(KubeletConfig_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfig_Status) DeepCopyInto(out *KubeletConfig_Status) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxFiles != nil {
		in, out := &in.ContainerLogMaxFiles, &out.ContainerLogMaxFiles
		*out = new(int)
		**out = **in
	}
	if in.ContainerLogMaxSizeMB != nil {
		in, out := &in.ContainerLogMaxSizeMB, &out.ContainerLogMaxSizeMB
		*out = new(int)
		**out = **in
	}
	if in.CpuCfsQuota != nil {
		in, out := &in.CpuCfsQuota, &out.CpuCfsQuota
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int)
		**out = **in
	}
	if in.PodMaxPids != nil {
		in, out := &in.PodMaxPids, &out.PodMaxPids
		*out = new(int)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfig_Status.
func (in *KubeletConfig_Status) DeepCopy() *KubeletConfig_Status {
	if in == nil {
		return nil
	}
	out := new(KubeletConfig_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletConfig_StatusARM) DeepCopyInto(out *KubeletConfig_StatusARM) {
	*out = *in
	if in.AllowedUnsafeSysctls != nil {
		in, out := &in.AllowedUnsafeSysctls, &out.AllowedUnsafeSysctls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerLogMaxFiles != nil {
		in, out := &in.ContainerLogMaxFiles, &out.ContainerLogMaxFiles
		*out = new(int)
		**out = **in
	}
	if in.ContainerLogMaxSizeMB != nil {
		in, out := &in.ContainerLogMaxSizeMB, &out.ContainerLogMaxSizeMB
		*out = new(int)
		**out = **in
	}
	if in.CpuCfsQuota != nil {
		in, out := &in.CpuCfsQuota, &out.CpuCfsQuota
		*out = new(bool)
		**out = **in
	}
	if in.CpuCfsQuotaPeriod != nil {
		in, out := &in.CpuCfsQuotaPeriod, &out.CpuCfsQuotaPeriod
		*out = new(string)
		**out = **in
	}
	if in.CpuManagerPolicy != nil {
		in, out := &in.CpuManagerPolicy, &out.CpuManagerPolicy
		*out = new(string)
		**out = **in
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.ImageGcHighThreshold != nil {
		in, out := &in.ImageGcHighThreshold, &out.ImageGcHighThreshold
		*out = new(int)
		**out = **in
	}
	if in.ImageGcLowThreshold != nil {
		in, out := &in.ImageGcLowThreshold, &out.ImageGcLowThreshold
		*out = new(int)
		**out = **in
	}
	if in.PodMaxPids != nil {
		in, out := &in.PodMaxPids, &out.PodMaxPids
		*out = new(int)
		**out = **in
	}
	if in.TopologyManagerPolicy != nil {
		in, out := &in.TopologyManagerPolicy, &out.TopologyManagerPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletConfig_StatusARM.
func (in *KubeletConfig_StatusARM) DeepCopy() *KubeletConfig_StatusARM {
	if in == nil {
		return nil
	}
	out := new(KubeletConfig_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOSConfig_Spec) DeepCopyInto(out *LinuxOSConfig_Spec) {
	*out = *in
	if in.SwapFileSizeMB != nil {
		in, out := &in.SwapFileSizeMB, &out.SwapFileSizeMB
		*out = new(int)
		**out = **in
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = new(SysctlConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOSConfig_Spec.
func (in *LinuxOSConfig_Spec) DeepCopy() *LinuxOSConfig_Spec {
	if in == nil {
		return nil
	}
	out := new(LinuxOSConfig_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOSConfig_SpecARM) DeepCopyInto(out *LinuxOSConfig_SpecARM) {
	*out = *in
	if in.SwapFileSizeMB != nil {
		in, out := &in.SwapFileSizeMB, &out.SwapFileSizeMB
		*out = new(int)
		**out = **in
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = new(SysctlConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOSConfig_SpecARM.
func (in *LinuxOSConfig_SpecARM) DeepCopy() *LinuxOSConfig_SpecARM {
	if in == nil {
		return nil
	}
	out := new(LinuxOSConfig_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOSConfig_Status) DeepCopyInto(out *LinuxOSConfig_Status) {
	*out = *in
	if in.SwapFileSizeMB != nil {
		in, out := &in.SwapFileSizeMB, &out.SwapFileSizeMB
		*out = new(int)
		**out = **in
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = new(SysctlConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOSConfig_Status.
func (in *LinuxOSConfig_Status) DeepCopy() *LinuxOSConfig_Status {
	if in == nil {
		return nil
	}
	out := new(LinuxOSConfig_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOSConfig_StatusARM) DeepCopyInto(out *LinuxOSConfig_StatusARM) {
	*out = *in
	if in.SwapFileSizeMB != nil {
		in, out := &in.SwapFileSizeMB, &out.SwapFileSizeMB
		*out = new(int)
		**out = **in
	}
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = new(SysctlConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.TransparentHugePageDefrag != nil {
		in, out := &in.TransparentHugePageDefrag, &out.TransparentHugePageDefrag
		*out = new(string)
		**out = **in
	}
	if in.TransparentHugePageEnabled != nil {
		in, out := &in.TransparentHugePageEnabled, &out.TransparentHugePageEnabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOSConfig_StatusARM.
func (in *LinuxOSConfig_StatusARM) DeepCopy() *LinuxOSConfig_StatusARM {
	if in == nil {
		return nil
	}
	out := new(LinuxOSConfig_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster) DeepCopyInto(out *ManagedCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster.
func (in *ManagedCluster) DeepCopy() *ManagedCluster {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAADProfile_Spec) DeepCopyInto(out *ManagedClusterAADProfile_Spec) {
	*out = *in
	if in.AdminGroupObjectIDs != nil {
		in, out := &in.AdminGroupObjectIDs, &out.AdminGroupObjectIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClientAppID != nil {
		in, out := &in.ClientAppID, &out.ClientAppID
		*out = new(string)
		**out = **in
	}
	if in.EnableAzureRBAC != nil {
		in, out := &in.EnableAzureRBAC, &out.EnableAzureRBAC
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppID != nil {
		in, out := &in.ServerAppID, &out.ServerAppID
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAADProfile_Spec.
func (in *ManagedClusterAADProfile_Spec) DeepCopy() *ManagedClusterAADProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAADProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAADProfile_SpecARM) DeepCopyInto(out *ManagedClusterAADProfile_SpecARM) {
	*out = *in
	if in.AdminGroupObjectIDs != nil {
		in, out := &in.AdminGroupObjectIDs, &out.AdminGroupObjectIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClientAppID != nil {
		in, out := &in.ClientAppID, &out.ClientAppID
		*out = new(string)
		**out = **in
	}
	if in.EnableAzureRBAC != nil {
		in, out := &in.EnableAzureRBAC, &out.EnableAzureRBAC
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppID != nil {
		in, out := &in.ServerAppID, &out.ServerAppID
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAADProfile_SpecARM.
func (in *ManagedClusterAADProfile_SpecARM) DeepCopy() *ManagedClusterAADProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAADProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAADProfile_Status) DeepCopyInto(out *ManagedClusterAADProfile_Status) {
	*out = *in
	if in.AdminGroupObjectIDs != nil {
		in, out := &in.AdminGroupObjectIDs, &out.AdminGroupObjectIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClientAppID != nil {
		in, out := &in.ClientAppID, &out.ClientAppID
		*out = new(string)
		**out = **in
	}
	if in.EnableAzureRBAC != nil {
		in, out := &in.EnableAzureRBAC, &out.EnableAzureRBAC
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppID != nil {
		in, out := &in.ServerAppID, &out.ServerAppID
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAADProfile_Status.
func (in *ManagedClusterAADProfile_Status) DeepCopy() *ManagedClusterAADProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAADProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAADProfile_StatusARM) DeepCopyInto(out *ManagedClusterAADProfile_StatusARM) {
	*out = *in
	if in.AdminGroupObjectIDs != nil {
		in, out := &in.AdminGroupObjectIDs, &out.AdminGroupObjectIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClientAppID != nil {
		in, out := &in.ClientAppID, &out.ClientAppID
		*out = new(string)
		**out = **in
	}
	if in.EnableAzureRBAC != nil {
		in, out := &in.EnableAzureRBAC, &out.EnableAzureRBAC
		*out = new(bool)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppID != nil {
		in, out := &in.ServerAppID, &out.ServerAppID
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAADProfile_StatusARM.
func (in *ManagedClusterAADProfile_StatusARM) DeepCopy() *ManagedClusterAADProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAADProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAPIServerAccessProfile_Spec) DeepCopyInto(out *ManagedClusterAPIServerAccessProfile_Spec) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateClusterPublicFQDN != nil {
		in, out := &in.EnablePrivateClusterPublicFQDN, &out.EnablePrivateClusterPublicFQDN
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSZone != nil {
		in, out := &in.PrivateDNSZone, &out.PrivateDNSZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAPIServerAccessProfile_Spec.
func (in *ManagedClusterAPIServerAccessProfile_Spec) DeepCopy() *ManagedClusterAPIServerAccessProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAPIServerAccessProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAPIServerAccessProfile_SpecARM) DeepCopyInto(out *ManagedClusterAPIServerAccessProfile_SpecARM) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateClusterPublicFQDN != nil {
		in, out := &in.EnablePrivateClusterPublicFQDN, &out.EnablePrivateClusterPublicFQDN
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSZone != nil {
		in, out := &in.PrivateDNSZone, &out.PrivateDNSZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAPIServerAccessProfile_SpecARM.
func (in *ManagedClusterAPIServerAccessProfile_SpecARM) DeepCopy() *ManagedClusterAPIServerAccessProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAPIServerAccessProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAPIServerAccessProfile_Status) DeepCopyInto(out *ManagedClusterAPIServerAccessProfile_Status) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateClusterPublicFQDN != nil {
		in, out := &in.EnablePrivateClusterPublicFQDN, &out.EnablePrivateClusterPublicFQDN
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSZone != nil {
		in, out := &in.PrivateDNSZone, &out.PrivateDNSZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAPIServerAccessProfile_Status.
func (in *ManagedClusterAPIServerAccessProfile_Status) DeepCopy() *ManagedClusterAPIServerAccessProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAPIServerAccessProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAPIServerAccessProfile_StatusARM) DeepCopyInto(out *ManagedClusterAPIServerAccessProfile_StatusARM) {
	*out = *in
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnablePrivateCluster != nil {
		in, out := &in.EnablePrivateCluster, &out.EnablePrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateClusterPublicFQDN != nil {
		in, out := &in.EnablePrivateClusterPublicFQDN, &out.EnablePrivateClusterPublicFQDN
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSZone != nil {
		in, out := &in.PrivateDNSZone, &out.PrivateDNSZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAPIServerAccessProfile_StatusARM.
func (in *ManagedClusterAPIServerAccessProfile_StatusARM) DeepCopy() *ManagedClusterAPIServerAccessProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAPIServerAccessProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfileProperties_SpecARM) DeepCopyInto(out *ManagedClusterAgentPoolProfileProperties_SpecARM) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Spec)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Spec)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Spec)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(ContainerServiceOSDisk_Spec)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Spec)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Spec)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Spec)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Spec)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Spec)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Spec)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfileProperties_SpecARM.
func (in *ManagedClusterAgentPoolProfileProperties_SpecARM) DeepCopy() *ManagedClusterAgentPoolProfileProperties_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfileProperties_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfileProperties_StatusARM) DeepCopyInto(out *ManagedClusterAgentPoolProfileProperties_StatusARM) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Status)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Status)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Status)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(int)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Status)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Status)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Status)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Status)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Status)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Status)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfileProperties_StatusARM.
func (in *ManagedClusterAgentPoolProfileProperties_StatusARM) DeepCopy() *ManagedClusterAgentPoolProfileProperties_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfileProperties_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfile_Spec) DeepCopyInto(out *ManagedClusterAgentPoolProfile_Spec) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Spec)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Spec)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Spec)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixIDReference != nil {
		in, out := &in.NodePublicIPPrefixIDReference, &out.NodePublicIPPrefixIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(ContainerServiceOSDisk_Spec)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Spec)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Spec)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Spec)
		**out = **in
	}
	if in.PodSubnetIDReference != nil {
		in, out := &in.PodSubnetIDReference, &out.PodSubnetIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Spec)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Spec)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Spec)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetIDReference != nil {
		in, out := &in.VnetSubnetIDReference, &out.VnetSubnetIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfile_Spec.
func (in *ManagedClusterAgentPoolProfile_Spec) DeepCopy() *ManagedClusterAgentPoolProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfile_SpecARM) DeepCopyInto(out *ManagedClusterAgentPoolProfile_SpecARM) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Spec)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Spec)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Spec)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(ContainerServiceOSDisk_Spec)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Spec)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Spec)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Spec)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Spec)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Spec)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Spec)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfile_SpecARM.
func (in *ManagedClusterAgentPoolProfile_SpecARM) DeepCopy() *ManagedClusterAgentPoolProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfile_Status) DeepCopyInto(out *ManagedClusterAgentPoolProfile_Status) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Status)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Status)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Status)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(int)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Status)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Status)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Status)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Status)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Status)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Status)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfile_Status.
func (in *ManagedClusterAgentPoolProfile_Status) DeepCopy() *ManagedClusterAgentPoolProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAgentPoolProfile_StatusARM) DeepCopyInto(out *ManagedClusterAgentPoolProfile_StatusARM) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Status)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Status)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Status)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeImageVersion != nil {
		in, out := &in.NodeImageVersion, &out.NodeImageVersion
		*out = new(string)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixID != nil {
		in, out := &in.NodePublicIPPrefixID, &out.NodePublicIPPrefixID
		*out = new(string)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(int)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Status)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Status)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Status)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Status)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Status)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Status)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAgentPoolProfile_StatusARM.
func (in *ManagedClusterAgentPoolProfile_StatusARM) DeepCopy() *ManagedClusterAgentPoolProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAgentPoolProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAutoUpgradeProfile_Spec) DeepCopyInto(out *ManagedClusterAutoUpgradeProfile_Spec) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(ManagedClusterAutoUpgradeProfileSpecUpgradeChannel)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAutoUpgradeProfile_Spec.
func (in *ManagedClusterAutoUpgradeProfile_Spec) DeepCopy() *ManagedClusterAutoUpgradeProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAutoUpgradeProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAutoUpgradeProfile_SpecARM) DeepCopyInto(out *ManagedClusterAutoUpgradeProfile_SpecARM) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(ManagedClusterAutoUpgradeProfileSpecUpgradeChannel)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAutoUpgradeProfile_SpecARM.
func (in *ManagedClusterAutoUpgradeProfile_SpecARM) DeepCopy() *ManagedClusterAutoUpgradeProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAutoUpgradeProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAutoUpgradeProfile_Status) DeepCopyInto(out *ManagedClusterAutoUpgradeProfile_Status) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(ManagedClusterAutoUpgradeProfileStatusUpgradeChannel)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAutoUpgradeProfile_Status.
func (in *ManagedClusterAutoUpgradeProfile_Status) DeepCopy() *ManagedClusterAutoUpgradeProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAutoUpgradeProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterAutoUpgradeProfile_StatusARM) DeepCopyInto(out *ManagedClusterAutoUpgradeProfile_StatusARM) {
	*out = *in
	if in.UpgradeChannel != nil {
		in, out := &in.UpgradeChannel, &out.UpgradeChannel
		*out = new(ManagedClusterAutoUpgradeProfileStatusUpgradeChannel)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterAutoUpgradeProfile_StatusARM.
func (in *ManagedClusterAutoUpgradeProfile_StatusARM) DeepCopy() *ManagedClusterAutoUpgradeProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterAutoUpgradeProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterHTTPProxyConfig_Spec) DeepCopyInto(out *ManagedClusterHTTPProxyConfig_Spec) {
	*out = *in
	if in.HttpProxy != nil {
		in, out := &in.HttpProxy, &out.HttpProxy
		*out = new(string)
		**out = **in
	}
	if in.HttpsProxy != nil {
		in, out := &in.HttpsProxy, &out.HttpsProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TrustedCa != nil {
		in, out := &in.TrustedCa, &out.TrustedCa
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterHTTPProxyConfig_Spec.
func (in *ManagedClusterHTTPProxyConfig_Spec) DeepCopy() *ManagedClusterHTTPProxyConfig_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterHTTPProxyConfig_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterHTTPProxyConfig_SpecARM) DeepCopyInto(out *ManagedClusterHTTPProxyConfig_SpecARM) {
	*out = *in
	if in.HttpProxy != nil {
		in, out := &in.HttpProxy, &out.HttpProxy
		*out = new(string)
		**out = **in
	}
	if in.HttpsProxy != nil {
		in, out := &in.HttpsProxy, &out.HttpsProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TrustedCa != nil {
		in, out := &in.TrustedCa, &out.TrustedCa
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterHTTPProxyConfig_SpecARM.
func (in *ManagedClusterHTTPProxyConfig_SpecARM) DeepCopy() *ManagedClusterHTTPProxyConfig_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterHTTPProxyConfig_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterHTTPProxyConfig_Status) DeepCopyInto(out *ManagedClusterHTTPProxyConfig_Status) {
	*out = *in
	if in.HttpProxy != nil {
		in, out := &in.HttpProxy, &out.HttpProxy
		*out = new(string)
		**out = **in
	}
	if in.HttpsProxy != nil {
		in, out := &in.HttpsProxy, &out.HttpsProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TrustedCa != nil {
		in, out := &in.TrustedCa, &out.TrustedCa
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterHTTPProxyConfig_Status.
func (in *ManagedClusterHTTPProxyConfig_Status) DeepCopy() *ManagedClusterHTTPProxyConfig_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterHTTPProxyConfig_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterHTTPProxyConfig_StatusARM) DeepCopyInto(out *ManagedClusterHTTPProxyConfig_StatusARM) {
	*out = *in
	if in.HttpProxy != nil {
		in, out := &in.HttpProxy, &out.HttpProxy
		*out = new(string)
		**out = **in
	}
	if in.HttpsProxy != nil {
		in, out := &in.HttpsProxy, &out.HttpsProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TrustedCa != nil {
		in, out := &in.TrustedCa, &out.TrustedCa
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterHTTPProxyConfig_StatusARM.
func (in *ManagedClusterHTTPProxyConfig_StatusARM) DeepCopy() *ManagedClusterHTTPProxyConfig_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterHTTPProxyConfig_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_Spec) DeepCopyInto(out *ManagedClusterIdentity_Spec) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ManagedClusterIdentitySpecType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_Spec.
func (in *ManagedClusterIdentity_Spec) DeepCopy() *ManagedClusterIdentity_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_SpecARM) DeepCopyInto(out *ManagedClusterIdentity_SpecARM) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ManagedClusterIdentitySpecType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_SpecARM.
func (in *ManagedClusterIdentity_SpecARM) DeepCopy() *ManagedClusterIdentity_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_Status) DeepCopyInto(out *ManagedClusterIdentity_Status) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ManagedClusterIdentityStatusType)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]ManagedClusterIdentity_Status_UserAssignedIdentities, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_Status.
func (in *ManagedClusterIdentity_Status) DeepCopy() *ManagedClusterIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_StatusARM) DeepCopyInto(out *ManagedClusterIdentity_StatusARM) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ManagedClusterIdentityStatusType)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]ManagedClusterIdentity_Status_UserAssignedIdentitiesARM, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_StatusARM.
func (in *ManagedClusterIdentity_StatusARM) DeepCopy() *ManagedClusterIdentity_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_Status_UserAssignedIdentities) DeepCopyInto(out *ManagedClusterIdentity_Status_UserAssignedIdentities) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_Status_UserAssignedIdentities.
func (in *ManagedClusterIdentity_Status_UserAssignedIdentities) DeepCopy() *ManagedClusterIdentity_Status_UserAssignedIdentities {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_Status_UserAssignedIdentities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterIdentity_Status_UserAssignedIdentitiesARM) DeepCopyInto(out *ManagedClusterIdentity_Status_UserAssignedIdentitiesARM) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterIdentity_Status_UserAssignedIdentitiesARM.
func (in *ManagedClusterIdentity_Status_UserAssignedIdentitiesARM) DeepCopy() *ManagedClusterIdentity_Status_UserAssignedIdentitiesARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterIdentity_Status_UserAssignedIdentitiesARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterList) DeepCopyInto(out *ManagedClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterList.
func (in *ManagedClusterList) DeepCopy() *ManagedClusterList {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.EffectiveOutboundIPs != nil {
		in, out := &in.EffectiveOutboundIPs, &out.EffectiveOutboundIPs
		*out = make([]ResourceReference_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.ManagedOutboundIPs != nil {
		in, out := &in.ManagedOutboundIPs, &out.ManagedOutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPPrefixes != nil {
		in, out := &in.OutboundIPPrefixes, &out.OutboundIPPrefixes
		*out = new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPs != nil {
		in, out := &in.OutboundIPs, &out.OutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPs)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec.
func (in *ManagedClusterLoadBalancerProfile_Spec) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_SpecARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_SpecARM) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.EffectiveOutboundIPs != nil {
		in, out := &in.EffectiveOutboundIPs, &out.EffectiveOutboundIPs
		*out = make([]ResourceReference_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.ManagedOutboundIPs != nil {
		in, out := &in.ManagedOutboundIPs, &out.ManagedOutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPPrefixes != nil {
		in, out := &in.OutboundIPPrefixes, &out.OutboundIPPrefixes
		*out = new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPs != nil {
		in, out := &in.OutboundIPs, &out.OutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_SpecARM.
func (in *ManagedClusterLoadBalancerProfile_SpecARM) DeepCopy() *ManagedClusterLoadBalancerProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs.
func (in *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM.
func (in *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_ManagedOutboundIPsARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes) {
	*out = *in
	if in.PublicIPPrefixes != nil {
		in, out := &in.PublicIPPrefixes, &out.PublicIPPrefixes
		*out = make([]ResourceReference_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM) {
	*out = *in
	if in.PublicIPPrefixes != nil {
		in, out := &in.PublicIPPrefixes, &out.PublicIPPrefixes
		*out = make([]ResourceReference_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPPrefixesARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPs) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_OutboundIPs) {
	*out = *in
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = make([]ResourceReference_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_OutboundIPs.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPs) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_OutboundIPs {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM) {
	*out = *in
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = make([]ResourceReference_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM.
func (in *ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Spec_OutboundIPsARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.EffectiveOutboundIPs != nil {
		in, out := &in.EffectiveOutboundIPs, &out.EffectiveOutboundIPs
		*out = make([]ResourceReference_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.ManagedOutboundIPs != nil {
		in, out := &in.ManagedOutboundIPs, &out.ManagedOutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPPrefixes != nil {
		in, out := &in.OutboundIPPrefixes, &out.OutboundIPPrefixes
		*out = new(ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPs != nil {
		in, out := &in.OutboundIPs, &out.OutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Status_OutboundIPs)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status.
func (in *ManagedClusterLoadBalancerProfile_Status) DeepCopy() *ManagedClusterLoadBalancerProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_StatusARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_StatusARM) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.EffectiveOutboundIPs != nil {
		in, out := &in.EffectiveOutboundIPs, &out.EffectiveOutboundIPs
		*out = make([]ResourceReference_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.ManagedOutboundIPs != nil {
		in, out := &in.ManagedOutboundIPs, &out.ManagedOutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPPrefixes != nil {
		in, out := &in.OutboundIPPrefixes, &out.OutboundIPPrefixes
		*out = new(ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundIPs != nil {
		in, out := &in.OutboundIPs, &out.OutboundIPs
		*out = new(ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_StatusARM.
func (in *ManagedClusterLoadBalancerProfile_StatusARM) DeepCopy() *ManagedClusterLoadBalancerProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs.
func (in *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM.
func (in *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_ManagedOutboundIPsARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes) {
	*out = *in
	if in.PublicIPPrefixes != nil {
		in, out := &in.PublicIPPrefixes, &out.PublicIPPrefixes
		*out = make([]ResourceReference_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM) {
	*out = *in
	if in.PublicIPPrefixes != nil {
		in, out := &in.PublicIPPrefixes, &out.PublicIPPrefixes
		*out = make([]ResourceReference_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_OutboundIPPrefixesARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPs) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_OutboundIPs) {
	*out = *in
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = make([]ResourceReference_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_OutboundIPs.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPs) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_OutboundIPs {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_OutboundIPs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM) DeepCopyInto(out *ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM) {
	*out = *in
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = make([]ResourceReference_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM.
func (in *ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM) DeepCopy() *ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterLoadBalancerProfile_Status_OutboundIPsARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityException_Spec) DeepCopyInto(out *ManagedClusterPodIdentityException_Spec) {
	*out = *in
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityException_Spec.
func (in *ManagedClusterPodIdentityException_Spec) DeepCopy() *ManagedClusterPodIdentityException_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityException_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityException_SpecARM) DeepCopyInto(out *ManagedClusterPodIdentityException_SpecARM) {
	*out = *in
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityException_SpecARM.
func (in *ManagedClusterPodIdentityException_SpecARM) DeepCopy() *ManagedClusterPodIdentityException_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityException_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityException_Status) DeepCopyInto(out *ManagedClusterPodIdentityException_Status) {
	*out = *in
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityException_Status.
func (in *ManagedClusterPodIdentityException_Status) DeepCopy() *ManagedClusterPodIdentityException_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityException_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityException_StatusARM) DeepCopyInto(out *ManagedClusterPodIdentityException_StatusARM) {
	*out = *in
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityException_StatusARM.
func (in *ManagedClusterPodIdentityException_StatusARM) DeepCopy() *ManagedClusterPodIdentityException_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityException_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProfile_Spec) DeepCopyInto(out *ManagedClusterPodIdentityProfile_Spec) {
	*out = *in
	if in.AllowNetworkPluginKubenet != nil {
		in, out := &in.AllowNetworkPluginKubenet, &out.AllowNetworkPluginKubenet
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]ManagedClusterPodIdentity_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAssignedIdentityExceptions != nil {
		in, out := &in.UserAssignedIdentityExceptions, &out.UserAssignedIdentityExceptions
		*out = make([]ManagedClusterPodIdentityException_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProfile_Spec.
func (in *ManagedClusterPodIdentityProfile_Spec) DeepCopy() *ManagedClusterPodIdentityProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProfile_SpecARM) DeepCopyInto(out *ManagedClusterPodIdentityProfile_SpecARM) {
	*out = *in
	if in.AllowNetworkPluginKubenet != nil {
		in, out := &in.AllowNetworkPluginKubenet, &out.AllowNetworkPluginKubenet
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]ManagedClusterPodIdentity_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAssignedIdentityExceptions != nil {
		in, out := &in.UserAssignedIdentityExceptions, &out.UserAssignedIdentityExceptions
		*out = make([]ManagedClusterPodIdentityException_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProfile_SpecARM.
func (in *ManagedClusterPodIdentityProfile_SpecARM) DeepCopy() *ManagedClusterPodIdentityProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProfile_Status) DeepCopyInto(out *ManagedClusterPodIdentityProfile_Status) {
	*out = *in
	if in.AllowNetworkPluginKubenet != nil {
		in, out := &in.AllowNetworkPluginKubenet, &out.AllowNetworkPluginKubenet
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]ManagedClusterPodIdentity_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAssignedIdentityExceptions != nil {
		in, out := &in.UserAssignedIdentityExceptions, &out.UserAssignedIdentityExceptions
		*out = make([]ManagedClusterPodIdentityException_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProfile_Status.
func (in *ManagedClusterPodIdentityProfile_Status) DeepCopy() *ManagedClusterPodIdentityProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProfile_StatusARM) DeepCopyInto(out *ManagedClusterPodIdentityProfile_StatusARM) {
	*out = *in
	if in.AllowNetworkPluginKubenet != nil {
		in, out := &in.AllowNetworkPluginKubenet, &out.AllowNetworkPluginKubenet
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]ManagedClusterPodIdentity_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAssignedIdentityExceptions != nil {
		in, out := &in.UserAssignedIdentityExceptions, &out.UserAssignedIdentityExceptions
		*out = make([]ManagedClusterPodIdentityException_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProfile_StatusARM.
func (in *ManagedClusterPodIdentityProfile_StatusARM) DeepCopy() *ManagedClusterPodIdentityProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningErrorBody_Status) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningErrorBody_Status.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status) DeepCopy() *ManagedClusterPodIdentityProvisioningErrorBody_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningErrorBody_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_StatusARM) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningErrorBody_StatusARM) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningErrorBody_StatusARM.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_StatusARM) DeepCopy() *ManagedClusterPodIdentityProvisioningErrorBody_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningErrorBody_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled) DeepCopy() *ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM.
func (in *ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM) DeepCopy() *ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningErrorBody_Status_UnrolledARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningError_Status) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningError_Status) {
	*out = *in
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(ManagedClusterPodIdentityProvisioningErrorBody_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningError_Status.
func (in *ManagedClusterPodIdentityProvisioningError_Status) DeepCopy() *ManagedClusterPodIdentityProvisioningError_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningError_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentityProvisioningError_StatusARM) DeepCopyInto(out *ManagedClusterPodIdentityProvisioningError_StatusARM) {
	*out = *in
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(ManagedClusterPodIdentityProvisioningErrorBody_StatusARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentityProvisioningError_StatusARM.
func (in *ManagedClusterPodIdentityProvisioningError_StatusARM) DeepCopy() *ManagedClusterPodIdentityProvisioningError_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentityProvisioningError_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_Spec) DeepCopyInto(out *ManagedClusterPodIdentity_Spec) {
	*out = *in
	if in.BindingSelector != nil {
		in, out := &in.BindingSelector, &out.BindingSelector
		*out = new(string)
		**out = **in
	}
	in.Identity.DeepCopyInto(&out.Identity)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_Spec.
func (in *ManagedClusterPodIdentity_Spec) DeepCopy() *ManagedClusterPodIdentity_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_SpecARM) DeepCopyInto(out *ManagedClusterPodIdentity_SpecARM) {
	*out = *in
	if in.BindingSelector != nil {
		in, out := &in.BindingSelector, &out.BindingSelector
		*out = new(string)
		**out = **in
	}
	in.Identity.DeepCopyInto(&out.Identity)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_SpecARM.
func (in *ManagedClusterPodIdentity_SpecARM) DeepCopy() *ManagedClusterPodIdentity_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_Status) DeepCopyInto(out *ManagedClusterPodIdentity_Status) {
	*out = *in
	if in.BindingSelector != nil {
		in, out := &in.BindingSelector, &out.BindingSelector
		*out = new(string)
		**out = **in
	}
	in.Identity.DeepCopyInto(&out.Identity)
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = new(ManagedClusterPodIdentity_Status_ProvisioningInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(ManagedClusterPodIdentityStatusProvisioningState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_Status.
func (in *ManagedClusterPodIdentity_Status) DeepCopy() *ManagedClusterPodIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_StatusARM) DeepCopyInto(out *ManagedClusterPodIdentity_StatusARM) {
	*out = *in
	if in.BindingSelector != nil {
		in, out := &in.BindingSelector, &out.BindingSelector
		*out = new(string)
		**out = **in
	}
	in.Identity.DeepCopyInto(&out.Identity)
	if in.ProvisioningInfo != nil {
		in, out := &in.ProvisioningInfo, &out.ProvisioningInfo
		*out = new(ManagedClusterPodIdentity_Status_ProvisioningInfoARM)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(ManagedClusterPodIdentityStatusProvisioningState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_StatusARM.
func (in *ManagedClusterPodIdentity_StatusARM) DeepCopy() *ManagedClusterPodIdentity_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_Status_ProvisioningInfo) DeepCopyInto(out *ManagedClusterPodIdentity_Status_ProvisioningInfo) {
	*out = *in
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(ManagedClusterPodIdentityProvisioningError_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_Status_ProvisioningInfo.
func (in *ManagedClusterPodIdentity_Status_ProvisioningInfo) DeepCopy() *ManagedClusterPodIdentity_Status_ProvisioningInfo {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_Status_ProvisioningInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterPodIdentity_Status_ProvisioningInfoARM) DeepCopyInto(out *ManagedClusterPodIdentity_Status_ProvisioningInfoARM) {
	*out = *in
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(ManagedClusterPodIdentityProvisioningError_StatusARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterPodIdentity_Status_ProvisioningInfoARM.
func (in *ManagedClusterPodIdentity_Status_ProvisioningInfoARM) DeepCopy() *ManagedClusterPodIdentity_Status_ProvisioningInfoARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterPodIdentity_Status_ProvisioningInfoARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_SpecARM) DeepCopyInto(out *ManagedClusterProperties_SpecARM) {
	*out = *in
	if in.AadProfile != nil {
		in, out := &in.AadProfile, &out.AadProfile
		*out = new(ManagedClusterAADProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AddonProfiles != nil {
		in, out := &in.AddonProfiles, &out.AddonProfiles
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentPoolProfiles != nil {
		in, out := &in.AgentPoolProfiles, &out.AgentPoolProfiles
		*out = make([]ManagedClusterAgentPoolProfile_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApiServerAccessProfile != nil {
		in, out := &in.ApiServerAccessProfile, &out.ApiServerAccessProfile
		*out = new(ManagedClusterAPIServerAccessProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = new(ManagedClusterProperties_Spec_AutoScalerProfileARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoUpgradeProfile != nil {
		in, out := &in.AutoUpgradeProfile, &out.AutoUpgradeProfile
		*out = new(ManagedClusterAutoUpgradeProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.DiskEncryptionSetID != nil {
		in, out := &in.DiskEncryptionSetID, &out.DiskEncryptionSetID
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.EnableRBAC != nil {
		in, out := &in.EnableRBAC, &out.EnableRBAC
		*out = new(bool)
		**out = **in
	}
	if in.FqdnSubdomain != nil {
		in, out := &in.FqdnSubdomain, &out.FqdnSubdomain
		*out = new(string)
		**out = **in
	}
	if in.HttpProxyConfig != nil {
		in, out := &in.HttpProxyConfig, &out.HttpProxyConfig
		*out = new(ManagedClusterHTTPProxyConfig_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProfile != nil {
		in, out := &in.IdentityProfile, &out.IdentityProfile
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = new(ContainerServiceLinuxProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = new(ContainerServiceNetworkProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.PodIdentityProfile != nil {
		in, out := &in.PodIdentityProfile, &out.PodIdentityProfile
		*out = new(ManagedClusterPodIdentityProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkResources != nil {
		in, out := &in.PrivateLinkResources, &out.PrivateLinkResources
		*out = make([]PrivateLinkResource_SpecARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePrincipalProfile != nil {
		in, out := &in.ServicePrincipalProfile, &out.ServicePrincipalProfile
		*out = new(ManagedClusterServicePrincipalProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = new(ManagedClusterWindowsProfile_SpecARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_SpecARM.
func (in *ManagedClusterProperties_SpecARM) DeepCopy() *ManagedClusterProperties_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_Spec_AutoScalerProfile) DeepCopyInto(out *ManagedClusterProperties_Spec_AutoScalerProfile) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(ManagedClusterPropertiesSpecAutoScalerProfileExpander)
		**out = **in
	}
	if in.MaxEmptyBulkDelete != nil {
		in, out := &in.MaxEmptyBulkDelete, &out.MaxEmptyBulkDelete
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisionTime != nil {
		in, out := &in.MaxNodeProvisionTime, &out.MaxNodeProvisionTime
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalUnreadyPercentage != nil {
		in, out := &in.MaxTotalUnreadyPercentage, &out.MaxTotalUnreadyPercentage
		*out = new(string)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.OkTotalUnreadyCount != nil {
		in, out := &in.OkTotalUnreadyCount, &out.OkTotalUnreadyCount
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneededTime != nil {
		in, out := &in.ScaleDownUnneededTime, &out.ScaleDownUnneededTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnreadyTime != nil {
		in, out := &in.ScaleDownUnreadyTime, &out.ScaleDownUnreadyTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_Spec_AutoScalerProfile.
func (in *ManagedClusterProperties_Spec_AutoScalerProfile) DeepCopy() *ManagedClusterProperties_Spec_AutoScalerProfile {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_Spec_AutoScalerProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_Spec_AutoScalerProfileARM) DeepCopyInto(out *ManagedClusterProperties_Spec_AutoScalerProfileARM) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(ManagedClusterPropertiesSpecAutoScalerProfileExpander)
		**out = **in
	}
	if in.MaxEmptyBulkDelete != nil {
		in, out := &in.MaxEmptyBulkDelete, &out.MaxEmptyBulkDelete
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisionTime != nil {
		in, out := &in.MaxNodeProvisionTime, &out.MaxNodeProvisionTime
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalUnreadyPercentage != nil {
		in, out := &in.MaxTotalUnreadyPercentage, &out.MaxTotalUnreadyPercentage
		*out = new(string)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.OkTotalUnreadyCount != nil {
		in, out := &in.OkTotalUnreadyCount, &out.OkTotalUnreadyCount
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneededTime != nil {
		in, out := &in.ScaleDownUnneededTime, &out.ScaleDownUnneededTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnreadyTime != nil {
		in, out := &in.ScaleDownUnreadyTime, &out.ScaleDownUnreadyTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_Spec_AutoScalerProfileARM.
func (in *ManagedClusterProperties_Spec_AutoScalerProfileARM) DeepCopy() *ManagedClusterProperties_Spec_AutoScalerProfileARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_Spec_AutoScalerProfileARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_StatusARM) DeepCopyInto(out *ManagedClusterProperties_StatusARM) {
	*out = *in
	if in.AadProfile != nil {
		in, out := &in.AadProfile, &out.AadProfile
		*out = new(ManagedClusterAADProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AddonProfiles != nil {
		in, out := &in.AddonProfiles, &out.AddonProfiles
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentPoolProfiles != nil {
		in, out := &in.AgentPoolProfiles, &out.AgentPoolProfiles
		*out = make([]ManagedClusterAgentPoolProfile_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApiServerAccessProfile != nil {
		in, out := &in.ApiServerAccessProfile, &out.ApiServerAccessProfile
		*out = new(ManagedClusterAPIServerAccessProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = new(ManagedClusterProperties_Status_AutoScalerProfileARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoUpgradeProfile != nil {
		in, out := &in.AutoUpgradeProfile, &out.AutoUpgradeProfile
		*out = new(ManagedClusterAutoUpgradeProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.AzurePortalFQDN != nil {
		in, out := &in.AzurePortalFQDN, &out.AzurePortalFQDN
		*out = new(string)
		**out = **in
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.DiskEncryptionSetID != nil {
		in, out := &in.DiskEncryptionSetID, &out.DiskEncryptionSetID
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.EnableRBAC != nil {
		in, out := &in.EnableRBAC, &out.EnableRBAC
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.FqdnSubdomain != nil {
		in, out := &in.FqdnSubdomain, &out.FqdnSubdomain
		*out = new(string)
		**out = **in
	}
	if in.HttpProxyConfig != nil {
		in, out := &in.HttpProxyConfig, &out.HttpProxyConfig
		*out = new(ManagedClusterHTTPProxyConfig_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProfile != nil {
		in, out := &in.IdentityProfile, &out.IdentityProfile
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = new(ContainerServiceLinuxProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxAgentPools != nil {
		in, out := &in.MaxAgentPools, &out.MaxAgentPools
		*out = new(int)
		**out = **in
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = new(ContainerServiceNetworkProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.PodIdentityProfile != nil {
		in, out := &in.PodIdentityProfile, &out.PodIdentityProfile
		*out = new(ManagedClusterPodIdentityProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateFQDN != nil {
		in, out := &in.PrivateFQDN, &out.PrivateFQDN
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkResources != nil {
		in, out := &in.PrivateLinkResources, &out.PrivateLinkResources
		*out = make([]PrivateLinkResource_StatusARM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalProfile != nil {
		in, out := &in.ServicePrincipalProfile, &out.ServicePrincipalProfile
		*out = new(ManagedClusterServicePrincipalProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = new(ManagedClusterWindowsProfile_StatusARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_StatusARM.
func (in *ManagedClusterProperties_StatusARM) DeepCopy() *ManagedClusterProperties_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_Status_AutoScalerProfile) DeepCopyInto(out *ManagedClusterProperties_Status_AutoScalerProfile) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(ManagedClusterPropertiesStatusAutoScalerProfileExpander)
		**out = **in
	}
	if in.MaxEmptyBulkDelete != nil {
		in, out := &in.MaxEmptyBulkDelete, &out.MaxEmptyBulkDelete
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisionTime != nil {
		in, out := &in.MaxNodeProvisionTime, &out.MaxNodeProvisionTime
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalUnreadyPercentage != nil {
		in, out := &in.MaxTotalUnreadyPercentage, &out.MaxTotalUnreadyPercentage
		*out = new(string)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.OkTotalUnreadyCount != nil {
		in, out := &in.OkTotalUnreadyCount, &out.OkTotalUnreadyCount
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneededTime != nil {
		in, out := &in.ScaleDownUnneededTime, &out.ScaleDownUnneededTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnreadyTime != nil {
		in, out := &in.ScaleDownUnreadyTime, &out.ScaleDownUnreadyTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_Status_AutoScalerProfile.
func (in *ManagedClusterProperties_Status_AutoScalerProfile) DeepCopy() *ManagedClusterProperties_Status_AutoScalerProfile {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_Status_AutoScalerProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterProperties_Status_AutoScalerProfileARM) DeepCopyInto(out *ManagedClusterProperties_Status_AutoScalerProfileARM) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(ManagedClusterPropertiesStatusAutoScalerProfileExpander)
		**out = **in
	}
	if in.MaxEmptyBulkDelete != nil {
		in, out := &in.MaxEmptyBulkDelete, &out.MaxEmptyBulkDelete
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisionTime != nil {
		in, out := &in.MaxNodeProvisionTime, &out.MaxNodeProvisionTime
		*out = new(string)
		**out = **in
	}
	if in.MaxTotalUnreadyPercentage != nil {
		in, out := &in.MaxTotalUnreadyPercentage, &out.MaxTotalUnreadyPercentage
		*out = new(string)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.OkTotalUnreadyCount != nil {
		in, out := &in.OkTotalUnreadyCount, &out.OkTotalUnreadyCount
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneededTime != nil {
		in, out := &in.ScaleDownUnneededTime, &out.ScaleDownUnneededTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnreadyTime != nil {
		in, out := &in.ScaleDownUnreadyTime, &out.ScaleDownUnreadyTime
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterProperties_Status_AutoScalerProfileARM.
func (in *ManagedClusterProperties_Status_AutoScalerProfileARM) DeepCopy() *ManagedClusterProperties_Status_AutoScalerProfileARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterProperties_Status_AutoScalerProfileARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterSKU_Spec) DeepCopyInto(out *ManagedClusterSKU_Spec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(ManagedClusterSKUSpecName)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(ManagedClusterSKUSpecTier)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterSKU_Spec.
func (in *ManagedClusterSKU_Spec) DeepCopy() *ManagedClusterSKU_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterSKU_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterSKU_SpecARM) DeepCopyInto(out *ManagedClusterSKU_SpecARM) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(ManagedClusterSKUSpecName)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(ManagedClusterSKUSpecTier)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterSKU_SpecARM.
func (in *ManagedClusterSKU_SpecARM) DeepCopy() *ManagedClusterSKU_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterSKU_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterSKU_Status) DeepCopyInto(out *ManagedClusterSKU_Status) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(ManagedClusterSKUStatusName)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(ManagedClusterSKUStatusTier)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterSKU_Status.
func (in *ManagedClusterSKU_Status) DeepCopy() *ManagedClusterSKU_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterSKU_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterSKU_StatusARM) DeepCopyInto(out *ManagedClusterSKU_StatusARM) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(ManagedClusterSKUStatusName)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(ManagedClusterSKUStatusTier)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterSKU_StatusARM.
func (in *ManagedClusterSKU_StatusARM) DeepCopy() *ManagedClusterSKU_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterSKU_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterServicePrincipalProfile_Spec) DeepCopyInto(out *ManagedClusterServicePrincipalProfile_Spec) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterServicePrincipalProfile_Spec.
func (in *ManagedClusterServicePrincipalProfile_Spec) DeepCopy() *ManagedClusterServicePrincipalProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterServicePrincipalProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterServicePrincipalProfile_SpecARM) DeepCopyInto(out *ManagedClusterServicePrincipalProfile_SpecARM) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterServicePrincipalProfile_SpecARM.
func (in *ManagedClusterServicePrincipalProfile_SpecARM) DeepCopy() *ManagedClusterServicePrincipalProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterServicePrincipalProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterServicePrincipalProfile_Status) DeepCopyInto(out *ManagedClusterServicePrincipalProfile_Status) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterServicePrincipalProfile_Status.
func (in *ManagedClusterServicePrincipalProfile_Status) DeepCopy() *ManagedClusterServicePrincipalProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterServicePrincipalProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterServicePrincipalProfile_StatusARM) DeepCopyInto(out *ManagedClusterServicePrincipalProfile_StatusARM) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterServicePrincipalProfile_StatusARM.
func (in *ManagedClusterServicePrincipalProfile_StatusARM) DeepCopy() *ManagedClusterServicePrincipalProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterServicePrincipalProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterWindowsProfile_Spec) DeepCopyInto(out *ManagedClusterWindowsProfile_Spec) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableCSIProxy != nil {
		in, out := &in.EnableCSIProxy, &out.EnableCSIProxy
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(ManagedClusterWindowsProfileSpecLicenseType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterWindowsProfile_Spec.
func (in *ManagedClusterWindowsProfile_Spec) DeepCopy() *ManagedClusterWindowsProfile_Spec {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterWindowsProfile_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterWindowsProfile_SpecARM) DeepCopyInto(out *ManagedClusterWindowsProfile_SpecARM) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableCSIProxy != nil {
		in, out := &in.EnableCSIProxy, &out.EnableCSIProxy
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(ManagedClusterWindowsProfileSpecLicenseType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterWindowsProfile_SpecARM.
func (in *ManagedClusterWindowsProfile_SpecARM) DeepCopy() *ManagedClusterWindowsProfile_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterWindowsProfile_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterWindowsProfile_Status) DeepCopyInto(out *ManagedClusterWindowsProfile_Status) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableCSIProxy != nil {
		in, out := &in.EnableCSIProxy, &out.EnableCSIProxy
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(ManagedClusterWindowsProfileStatusLicenseType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterWindowsProfile_Status.
func (in *ManagedClusterWindowsProfile_Status) DeepCopy() *ManagedClusterWindowsProfile_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterWindowsProfile_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusterWindowsProfile_StatusARM) DeepCopyInto(out *ManagedClusterWindowsProfile_StatusARM) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.EnableCSIProxy != nil {
		in, out := &in.EnableCSIProxy, &out.EnableCSIProxy
		*out = new(bool)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(ManagedClusterWindowsProfileStatusLicenseType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusterWindowsProfile_StatusARM.
func (in *ManagedClusterWindowsProfile_StatusARM) DeepCopy() *ManagedClusterWindowsProfile_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusterWindowsProfile_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster_Status) DeepCopyInto(out *ManagedCluster_Status) {
	*out = *in
	if in.AadProfile != nil {
		in, out := &in.AadProfile, &out.AadProfile
		*out = new(ManagedClusterAADProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.AddonProfiles != nil {
		in, out := &in.AddonProfiles, &out.AddonProfiles
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentPoolProfiles != nil {
		in, out := &in.AgentPoolProfiles, &out.AgentPoolProfiles
		*out = make([]ManagedClusterAgentPoolProfile_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApiServerAccessProfile != nil {
		in, out := &in.ApiServerAccessProfile, &out.ApiServerAccessProfile
		*out = new(ManagedClusterAPIServerAccessProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = new(ManagedClusterProperties_Status_AutoScalerProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoUpgradeProfile != nil {
		in, out := &in.AutoUpgradeProfile, &out.AutoUpgradeProfile
		*out = new(ManagedClusterAutoUpgradeProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.AzurePortalFQDN != nil {
		in, out := &in.AzurePortalFQDN, &out.AzurePortalFQDN
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.DiskEncryptionSetID != nil {
		in, out := &in.DiskEncryptionSetID, &out.DiskEncryptionSetID
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.EnableRBAC != nil {
		in, out := &in.EnableRBAC, &out.EnableRBAC
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.FqdnSubdomain != nil {
		in, out := &in.FqdnSubdomain, &out.FqdnSubdomain
		*out = new(string)
		**out = **in
	}
	if in.HttpProxyConfig != nil {
		in, out := &in.HttpProxyConfig, &out.HttpProxyConfig
		*out = new(ManagedClusterHTTPProxyConfig_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedClusterIdentity_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProfile != nil {
		in, out := &in.IdentityProfile, &out.IdentityProfile
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = new(ContainerServiceLinuxProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxAgentPools != nil {
		in, out := &in.MaxAgentPools, &out.MaxAgentPools
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = new(ContainerServiceNetworkProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.PodIdentityProfile != nil {
		in, out := &in.PodIdentityProfile, &out.PodIdentityProfile
		*out = new(ManagedClusterPodIdentityProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PowerState != nil {
		in, out := &in.PowerState, &out.PowerState
		*out = new(PowerState_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateFQDN != nil {
		in, out := &in.PrivateFQDN, &out.PrivateFQDN
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkResources != nil {
		in, out := &in.PrivateLinkResources, &out.PrivateLinkResources
		*out = make([]PrivateLinkResource_Status, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalProfile != nil {
		in, out := &in.ServicePrincipalProfile, &out.ServicePrincipalProfile
		*out = new(ManagedClusterServicePrincipalProfile_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(ManagedClusterSKU_Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = new(ManagedClusterWindowsProfile_Status)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster_Status.
func (in *ManagedCluster_Status) DeepCopy() *ManagedCluster_Status {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedCluster_StatusARM) DeepCopyInto(out *ManagedCluster_StatusARM) {
	*out = *in
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedClusterIdentity_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ManagedClusterProperties_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(ManagedClusterSKU_StatusARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedCluster_StatusARM.
func (in *ManagedCluster_StatusARM) DeepCopy() *ManagedCluster_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ManagedCluster_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClustersAgentPool) DeepCopyInto(out *ManagedClustersAgentPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClustersAgentPool.
func (in *ManagedClustersAgentPool) DeepCopy() *ManagedClustersAgentPool {
	if in == nil {
		return nil
	}
	out := new(ManagedClustersAgentPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedClustersAgentPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClustersAgentPoolList) DeepCopyInto(out *ManagedClustersAgentPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedClustersAgentPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClustersAgentPoolList.
func (in *ManagedClustersAgentPoolList) DeepCopy() *ManagedClustersAgentPoolList {
	if in == nil {
		return nil
	}
	out := new(ManagedClustersAgentPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedClustersAgentPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClustersAgentPools_SPEC) DeepCopyInto(out *ManagedClustersAgentPools_SPEC) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableEncryptionAtHost != nil {
		in, out := &in.EnableEncryptionAtHost, &out.EnableEncryptionAtHost
		*out = new(bool)
		**out = **in
	}
	if in.EnableFIPS != nil {
		in, out := &in.EnableFIPS, &out.EnableFIPS
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableUltraSSD != nil {
		in, out := &in.EnableUltraSSD, &out.EnableUltraSSD
		*out = new(bool)
		**out = **in
	}
	if in.GpuInstanceProfile != nil {
		in, out := &in.GpuInstanceProfile, &out.GpuInstanceProfile
		*out = new(GPUInstanceProfile_Spec)
		**out = **in
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(KubeletConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeletDiskType != nil {
		in, out := &in.KubeletDiskType, &out.KubeletDiskType
		*out = new(KubeletDiskType_Spec)
		**out = **in
	}
	if in.LinuxOSConfig != nil {
		in, out := &in.LinuxOSConfig, &out.LinuxOSConfig
		*out = new(LinuxOSConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(AgentPoolMode_Spec)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodePublicIPPrefixIDReference != nil {
		in, out := &in.NodePublicIPPrefixIDReference, &out.NodePublicIPPrefixIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGB != nil {
		in, out := &in.OsDiskSizeGB, &out.OsDiskSizeGB
		*out = new(ContainerServiceOSDisk_Spec)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(OSDiskType_Spec)
		**out = **in
	}
	if in.OsSKU != nil {
		in, out := &in.OsSKU, &out.OsSKU
		*out = new(OSSKU_Spec)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(OSType_Spec)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PodSubnetIDReference != nil {
		in, out := &in.PodSubnetIDReference, &out.PodSubnetIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.ScaleSetEvictionPolicy != nil {
		in, out := &in.ScaleSetEvictionPolicy, &out.ScaleSetEvictionPolicy
		*out = new(ScaleSetEvictionPolicy_Spec)
		**out = **in
	}
	if in.ScaleSetPriority != nil {
		in, out := &in.ScaleSetPriority, &out.ScaleSetPriority
		*out = new(ScaleSetPriority_Spec)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(AgentPoolType_Spec)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(AgentPoolUpgradeSettings_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetIDReference != nil {
		in, out := &in.VnetSubnetIDReference, &out.VnetSubnetIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClustersAgentPools_SPEC.
func (in *ManagedClustersAgentPools_SPEC) DeepCopy() *ManagedClustersAgentPools_SPEC {
	if in == nil {
		return nil
	}
	out := new(ManagedClustersAgentPools_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClustersAgentPools_SPECARM) DeepCopyInto(out *ManagedClustersAgentPools_SPECARM) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ManagedClusterAgentPoolProfileProperties_SpecARM)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClustersAgentPools_SPECARM.
func (in *ManagedClustersAgentPools_SPECARM) DeepCopy() *ManagedClustersAgentPools_SPECARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClustersAgentPools_SPECARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusters_SPEC) DeepCopyInto(out *ManagedClusters_SPEC) {
	*out = *in
	if in.AadProfile != nil {
		in, out := &in.AadProfile, &out.AadProfile
		*out = new(ManagedClusterAADProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.AddonProfiles != nil {
		in, out := &in.AddonProfiles, &out.AddonProfiles
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentPoolProfiles != nil {
		in, out := &in.AgentPoolProfiles, &out.AgentPoolProfiles
		*out = make([]ManagedClusterAgentPoolProfile_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApiServerAccessProfile != nil {
		in, out := &in.ApiServerAccessProfile, &out.ApiServerAccessProfile
		*out = new(ManagedClusterAPIServerAccessProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = new(ManagedClusterProperties_Spec_AutoScalerProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoUpgradeProfile != nil {
		in, out := &in.AutoUpgradeProfile, &out.AutoUpgradeProfile
		*out = new(ManagedClusterAutoUpgradeProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableLocalAccounts != nil {
		in, out := &in.DisableLocalAccounts, &out.DisableLocalAccounts
		*out = new(bool)
		**out = **in
	}
	if in.DiskEncryptionSetIDReference != nil {
		in, out := &in.DiskEncryptionSetIDReference, &out.DiskEncryptionSetIDReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.EnableRBAC != nil {
		in, out := &in.EnableRBAC, &out.EnableRBAC
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.FqdnSubdomain != nil {
		in, out := &in.FqdnSubdomain, &out.FqdnSubdomain
		*out = new(string)
		**out = **in
	}
	if in.HttpProxyConfig != nil {
		in, out := &in.HttpProxyConfig, &out.HttpProxyConfig
		*out = new(ManagedClusterHTTPProxyConfig_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedClusterIdentity_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProfile != nil {
		in, out := &in.IdentityProfile, &out.IdentityProfile
		*out = new(v1.JSON)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = new(ContainerServiceLinuxProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = new(ContainerServiceNetworkProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	out.Owner = in.Owner
	if in.PodIdentityProfile != nil {
		in, out := &in.PodIdentityProfile, &out.PodIdentityProfile
		*out = new(ManagedClusterPodIdentityProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkResources != nil {
		in, out := &in.PrivateLinkResources, &out.PrivateLinkResources
		*out = make([]PrivateLinkResource_Spec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePrincipalProfile != nil {
		in, out := &in.ServicePrincipalProfile, &out.ServicePrincipalProfile
		*out = new(ManagedClusterServicePrincipalProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(ManagedClusterSKU_Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = new(ManagedClusterWindowsProfile_Spec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusters_SPEC.
func (in *ManagedClusters_SPEC) DeepCopy() *ManagedClusters_SPEC {
	if in == nil {
		return nil
	}
	out := new(ManagedClusters_SPEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedClusters_SPECARM) DeepCopyInto(out *ManagedClusters_SPECARM) {
	*out = *in
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedClusterIdentity_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(ManagedClusterProperties_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(ManagedClusterSKU_SpecARM)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedClusters_SPECARM.
func (in *ManagedClusters_SPECARM) DeepCopy() *ManagedClusters_SPECARM {
	if in == nil {
		return nil
	}
	out := new(ManagedClusters_SPECARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PowerState_Status) DeepCopyInto(out *PowerState_Status) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(PowerStateStatusCode)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PowerState_Status.
func (in *PowerState_Status) DeepCopy() *PowerState_Status {
	if in == nil {
		return nil
	}
	out := new(PowerState_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PowerState_StatusARM) DeepCopyInto(out *PowerState_StatusARM) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(PowerStateStatusCode)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PowerState_StatusARM.
func (in *PowerState_StatusARM) DeepCopy() *PowerState_StatusARM {
	if in == nil {
		return nil
	}
	out := new(PowerState_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkResource_Spec) DeepCopyInto(out *PrivateLinkResource_Spec) {
	*out = *in
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.RequiredMembers != nil {
		in, out := &in.RequiredMembers, &out.RequiredMembers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkResource_Spec.
func (in *PrivateLinkResource_Spec) DeepCopy() *PrivateLinkResource_Spec {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkResource_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkResource_SpecARM) DeepCopyInto(out *PrivateLinkResource_SpecARM) {
	*out = *in
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequiredMembers != nil {
		in, out := &in.RequiredMembers, &out.RequiredMembers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkResource_SpecARM.
func (in *PrivateLinkResource_SpecARM) DeepCopy() *PrivateLinkResource_SpecARM {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkResource_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkResource_Status) DeepCopyInto(out *PrivateLinkResource_Status) {
	*out = *in
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkServiceID != nil {
		in, out := &in.PrivateLinkServiceID, &out.PrivateLinkServiceID
		*out = new(string)
		**out = **in
	}
	if in.RequiredMembers != nil {
		in, out := &in.RequiredMembers, &out.RequiredMembers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkResource_Status.
func (in *PrivateLinkResource_Status) DeepCopy() *PrivateLinkResource_Status {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkResource_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkResource_StatusARM) DeepCopyInto(out *PrivateLinkResource_StatusARM) {
	*out = *in
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkServiceID != nil {
		in, out := &in.PrivateLinkServiceID, &out.PrivateLinkServiceID
		*out = new(string)
		**out = **in
	}
	if in.RequiredMembers != nil {
		in, out := &in.RequiredMembers, &out.RequiredMembers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkResource_StatusARM.
func (in *PrivateLinkResource_StatusARM) DeepCopy() *PrivateLinkResource_StatusARM {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkResource_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReference_Spec) DeepCopyInto(out *ResourceReference_Spec) {
	*out = *in
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReference_Spec.
func (in *ResourceReference_Spec) DeepCopy() *ResourceReference_Spec {
	if in == nil {
		return nil
	}
	out := new(ResourceReference_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReference_SpecARM) DeepCopyInto(out *ResourceReference_SpecARM) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReference_SpecARM.
func (in *ResourceReference_SpecARM) DeepCopy() *ResourceReference_SpecARM {
	if in == nil {
		return nil
	}
	out := new(ResourceReference_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReference_Status) DeepCopyInto(out *ResourceReference_Status) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReference_Status.
func (in *ResourceReference_Status) DeepCopy() *ResourceReference_Status {
	if in == nil {
		return nil
	}
	out := new(ResourceReference_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReference_StatusARM) DeepCopyInto(out *ResourceReference_StatusARM) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReference_StatusARM.
func (in *ResourceReference_StatusARM) DeepCopy() *ResourceReference_StatusARM {
	if in == nil {
		return nil
	}
	out := new(ResourceReference_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfig_Spec) DeepCopyInto(out *SysctlConfig_Spec) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRange != nil {
		in, out := &in.NetIpv4IpLocalPortRange, &out.NetIpv4IpLocalPortRange
		*out = new(string)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetIpv4TcpkeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpkeepaliveIntvl, &out.NetIpv4TcpkeepaliveIntvl
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfig_Spec.
func (in *SysctlConfig_Spec) DeepCopy() *SysctlConfig_Spec {
	if in == nil {
		return nil
	}
	out := new(SysctlConfig_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfig_SpecARM) DeepCopyInto(out *SysctlConfig_SpecARM) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRange != nil {
		in, out := &in.NetIpv4IpLocalPortRange, &out.NetIpv4IpLocalPortRange
		*out = new(string)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetIpv4TcpkeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpkeepaliveIntvl, &out.NetIpv4TcpkeepaliveIntvl
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfig_SpecARM.
func (in *SysctlConfig_SpecARM) DeepCopy() *SysctlConfig_SpecARM {
	if in == nil {
		return nil
	}
	out := new(SysctlConfig_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfig_Status) DeepCopyInto(out *SysctlConfig_Status) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRange != nil {
		in, out := &in.NetIpv4IpLocalPortRange, &out.NetIpv4IpLocalPortRange
		*out = new(string)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetIpv4TcpkeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpkeepaliveIntvl, &out.NetIpv4TcpkeepaliveIntvl
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfig_Status.
func (in *SysctlConfig_Status) DeepCopy() *SysctlConfig_Status {
	if in == nil {
		return nil
	}
	out := new(SysctlConfig_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlConfig_StatusARM) DeepCopyInto(out *SysctlConfig_StatusARM) {
	*out = *in
	if in.FsAioMaxNr != nil {
		in, out := &in.FsAioMaxNr, &out.FsAioMaxNr
		*out = new(int)
		**out = **in
	}
	if in.FsFileMax != nil {
		in, out := &in.FsFileMax, &out.FsFileMax
		*out = new(int)
		**out = **in
	}
	if in.FsInotifyMaxUserWatches != nil {
		in, out := &in.FsInotifyMaxUserWatches, &out.FsInotifyMaxUserWatches
		*out = new(int)
		**out = **in
	}
	if in.FsNrOpen != nil {
		in, out := &in.FsNrOpen, &out.FsNrOpen
		*out = new(int)
		**out = **in
	}
	if in.KernelThreadsMax != nil {
		in, out := &in.KernelThreadsMax, &out.KernelThreadsMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreNetdevMaxBacklog != nil {
		in, out := &in.NetCoreNetdevMaxBacklog, &out.NetCoreNetdevMaxBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetCoreOptmemMax != nil {
		in, out := &in.NetCoreOptmemMax, &out.NetCoreOptmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemDefault != nil {
		in, out := &in.NetCoreRmemDefault, &out.NetCoreRmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreRmemMax != nil {
		in, out := &in.NetCoreRmemMax, &out.NetCoreRmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetCoreSomaxconn != nil {
		in, out := &in.NetCoreSomaxconn, &out.NetCoreSomaxconn
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemDefault != nil {
		in, out := &in.NetCoreWmemDefault, &out.NetCoreWmemDefault
		*out = new(int)
		**out = **in
	}
	if in.NetCoreWmemMax != nil {
		in, out := &in.NetCoreWmemMax, &out.NetCoreWmemMax
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4IpLocalPortRange != nil {
		in, out := &in.NetIpv4IpLocalPortRange, &out.NetIpv4IpLocalPortRange
		*out = new(string)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh1 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh1, &out.NetIpv4NeighDefaultGcThresh1
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh2 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh2, &out.NetIpv4NeighDefaultGcThresh2
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4NeighDefaultGcThresh3 != nil {
		in, out := &in.NetIpv4NeighDefaultGcThresh3, &out.NetIpv4NeighDefaultGcThresh3
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpFinTimeout != nil {
		in, out := &in.NetIpv4TcpFinTimeout, &out.NetIpv4TcpFinTimeout
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveProbes != nil {
		in, out := &in.NetIpv4TcpKeepaliveProbes, &out.NetIpv4TcpKeepaliveProbes
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpKeepaliveTime != nil {
		in, out := &in.NetIpv4TcpKeepaliveTime, &out.NetIpv4TcpKeepaliveTime
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxSynBacklog != nil {
		in, out := &in.NetIpv4TcpMaxSynBacklog, &out.NetIpv4TcpMaxSynBacklog
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpMaxTwBuckets != nil {
		in, out := &in.NetIpv4TcpMaxTwBuckets, &out.NetIpv4TcpMaxTwBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetIpv4TcpTwReuse != nil {
		in, out := &in.NetIpv4TcpTwReuse, &out.NetIpv4TcpTwReuse
		*out = new(bool)
		**out = **in
	}
	if in.NetIpv4TcpkeepaliveIntvl != nil {
		in, out := &in.NetIpv4TcpkeepaliveIntvl, &out.NetIpv4TcpkeepaliveIntvl
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackBuckets != nil {
		in, out := &in.NetNetfilterNfConntrackBuckets, &out.NetNetfilterNfConntrackBuckets
		*out = new(int)
		**out = **in
	}
	if in.NetNetfilterNfConntrackMax != nil {
		in, out := &in.NetNetfilterNfConntrackMax, &out.NetNetfilterNfConntrackMax
		*out = new(int)
		**out = **in
	}
	if in.VmMaxMapCount != nil {
		in, out := &in.VmMaxMapCount, &out.VmMaxMapCount
		*out = new(int)
		**out = **in
	}
	if in.VmSwappiness != nil {
		in, out := &in.VmSwappiness, &out.VmSwappiness
		*out = new(int)
		**out = **in
	}
	if in.VmVfsCachePressure != nil {
		in, out := &in.VmVfsCachePressure, &out.VmVfsCachePressure
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlConfig_StatusARM.
func (in *SysctlConfig_StatusARM) DeepCopy() *SysctlConfig_StatusARM {
	if in == nil {
		return nil
	}
	out := new(SysctlConfig_StatusARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentity_Spec) DeepCopyInto(out *UserAssignedIdentity_Spec) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.ObjectId != nil {
		in, out := &in.ObjectId, &out.ObjectId
		*out = new(string)
		**out = **in
	}
	if in.ResourceReference != nil {
		in, out := &in.ResourceReference, &out.ResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentity_Spec.
func (in *UserAssignedIdentity_Spec) DeepCopy() *UserAssignedIdentity_Spec {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentity_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentity_SpecARM) DeepCopyInto(out *UserAssignedIdentity_SpecARM) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.ObjectId != nil {
		in, out := &in.ObjectId, &out.ObjectId
		*out = new(string)
		**out = **in
	}
	if in.ResourceId != nil {
		in, out := &in.ResourceId, &out.ResourceId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentity_SpecARM.
func (in *UserAssignedIdentity_SpecARM) DeepCopy() *UserAssignedIdentity_SpecARM {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentity_SpecARM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentity_Status) DeepCopyInto(out *UserAssignedIdentity_Status) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.ObjectId != nil {
		in, out := &in.ObjectId, &out.ObjectId
		*out = new(string)
		**out = **in
	}
	if in.ResourceId != nil {
		in, out := &in.ResourceId, &out.ResourceId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentity_Status.
func (in *UserAssignedIdentity_Status) DeepCopy() *UserAssignedIdentity_Status {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentity_Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentity_StatusARM) DeepCopyInto(out *UserAssignedIdentity_StatusARM) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.ObjectId != nil {
		in, out := &in.ObjectId, &out.ObjectId
		*out = new(string)
		**out = **in
	}
	if in.ResourceId != nil {
		in, out := &in.ResourceId, &out.ResourceId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentity_StatusARM.
func (in *UserAssignedIdentity_StatusARM) DeepCopy() *UserAssignedIdentity_StatusARM {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentity_StatusARM)
	in.DeepCopyInto(out)
	return out
}
