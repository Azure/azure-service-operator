// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210501

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// Deprecated version of ManagedCluster_Spec. Use v1beta20210501.ManagedCluster_Spec instead
type ManagedCluster_SpecARM struct {
	AzureName        string                       `json:"azureName,omitempty"`
	ExtendedLocation *ExtendedLocationARM         `json:"extendedLocation,omitempty"`
	Id               *string                      `json:"id,omitempty"`
	Identity         *ManagedClusterIdentityARM   `json:"identity,omitempty"`
	Location         *string                      `json:"location,omitempty"`
	Name             string                       `json:"name,omitempty"`
	Properties       *ManagedClusterPropertiesARM `json:"properties,omitempty"`
	Sku              *ManagedClusterSKUARM        `json:"sku,omitempty"`
	Tags             map[string]string            `json:"tags,omitempty"`
	Type             *string                      `json:"type,omitempty"`
}

var _ genruntime.ARMResourceSpec = &ManagedCluster_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "20210501"
func (cluster ManagedCluster_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (cluster *ManagedCluster_SpecARM) GetName() string {
	return cluster.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (cluster *ManagedCluster_SpecARM) GetType() string {
	return ""
}

// Deprecated version of ExtendedLocation. Use v1beta20210501.ExtendedLocation instead
type ExtendedLocationARM struct {
	Name *string               `json:"name,omitempty"`
	Type *ExtendedLocationType `json:"type,omitempty"`
}

// Deprecated version of ManagedClusterIdentity. Use v1beta20210501.ManagedClusterIdentity instead
type ManagedClusterIdentityARM struct {
	PrincipalId            *string                                                     `json:"principalId,omitempty"`
	TenantId               *string                                                     `json:"tenantId,omitempty"`
	Type                   *ManagedClusterIdentity_Type                                `json:"type,omitempty"`
	UserAssignedIdentities map[string]ManagedClusterIdentity_UserAssignedIdentitiesARM `json:"userAssignedIdentities,omitempty"`
}

// Deprecated version of ManagedClusterProperties. Use v1beta20210501.ManagedClusterProperties instead
type ManagedClusterPropertiesARM struct {
	AadProfile              *ManagedClusterAADProfileARM                   `json:"aadProfile,omitempty"`
	AddonProfiles           *v1.JSON                                       `json:"addonProfiles,omitempty"`
	AgentPoolProfiles       []ManagedClusterAgentPoolProfileARM            `json:"agentPoolProfiles,omitempty"`
	ApiServerAccessProfile  *ManagedClusterAPIServerAccessProfileARM       `json:"apiServerAccessProfile,omitempty"`
	AutoScalerProfile       *ManagedClusterProperties_AutoScalerProfileARM `json:"autoScalerProfile,omitempty"`
	AutoUpgradeProfile      *ManagedClusterAutoUpgradeProfileARM           `json:"autoUpgradeProfile,omitempty"`
	AzurePortalFQDN         *string                                        `json:"azurePortalFQDN,omitempty"`
	DisableLocalAccounts    *bool                                          `json:"disableLocalAccounts,omitempty"`
	DiskEncryptionSetID     *string                                        `json:"diskEncryptionSetID,omitempty"`
	DnsPrefix               *string                                        `json:"dnsPrefix,omitempty"`
	EnablePodSecurityPolicy *bool                                          `json:"enablePodSecurityPolicy,omitempty"`
	EnableRBAC              *bool                                          `json:"enableRBAC,omitempty"`
	Fqdn                    *string                                        `json:"fqdn,omitempty"`
	FqdnSubdomain           *string                                        `json:"fqdnSubdomain,omitempty"`
	HttpProxyConfig         *ManagedClusterHTTPProxyConfigARM              `json:"httpProxyConfig,omitempty"`
	IdentityProfile         *v1.JSON                                       `json:"identityProfile,omitempty"`
	KubernetesVersion       *string                                        `json:"kubernetesVersion,omitempty"`
	LinuxProfile            *ContainerServiceLinuxProfileARM               `json:"linuxProfile,omitempty"`
	MaxAgentPools           *int                                           `json:"maxAgentPools,omitempty"`
	NetworkProfile          *ContainerServiceNetworkProfileARM             `json:"networkProfile,omitempty"`
	NodeResourceGroup       *string                                        `json:"nodeResourceGroup,omitempty"`
	PodIdentityProfile      *ManagedClusterPodIdentityProfileARM           `json:"podIdentityProfile,omitempty"`
	PowerState              *PowerStateARM                                 `json:"powerState,omitempty"`
	PrivateFQDN             *string                                        `json:"privateFQDN,omitempty"`
	PrivateLinkResources    []PrivateLinkResourceARM                       `json:"privateLinkResources,omitempty"`
	ProvisioningState       *string                                        `json:"provisioningState,omitempty"`
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfileARM      `json:"servicePrincipalProfile,omitempty"`
	WindowsProfile          *ManagedClusterWindowsProfileARM               `json:"windowsProfile,omitempty"`
}

// Deprecated version of ManagedClusterSKU. Use v1beta20210501.ManagedClusterSKU instead
type ManagedClusterSKUARM struct {
	Name *ManagedClusterSKU_Name `json:"name,omitempty"`
	Tier *ManagedClusterSKU_Tier `json:"tier,omitempty"`
}

// Deprecated version of ContainerServiceLinuxProfile. Use v1beta20210501.ContainerServiceLinuxProfile instead
type ContainerServiceLinuxProfileARM struct {
	AdminUsername *string                              `json:"adminUsername,omitempty"`
	Ssh           *ContainerServiceSshConfigurationARM `json:"ssh,omitempty"`
}

// Deprecated version of ContainerServiceNetworkProfile. Use v1beta20210501.ContainerServiceNetworkProfile instead
type ContainerServiceNetworkProfileARM struct {
	DnsServiceIP        *string                                         `json:"dnsServiceIP,omitempty"`
	DockerBridgeCidr    *string                                         `json:"dockerBridgeCidr,omitempty"`
	LoadBalancerProfile *ManagedClusterLoadBalancerProfileARM           `json:"loadBalancerProfile,omitempty"`
	LoadBalancerSku     *ContainerServiceNetworkProfile_LoadBalancerSku `json:"loadBalancerSku,omitempty"`
	NetworkMode         *ContainerServiceNetworkProfile_NetworkMode     `json:"networkMode,omitempty"`
	NetworkPlugin       *ContainerServiceNetworkProfile_NetworkPlugin   `json:"networkPlugin,omitempty"`
	NetworkPolicy       *ContainerServiceNetworkProfile_NetworkPolicy   `json:"networkPolicy,omitempty"`
	OutboundType        *ContainerServiceNetworkProfile_OutboundType    `json:"outboundType,omitempty"`
	PodCidr             *string                                         `json:"podCidr,omitempty"`
	ServiceCidr         *string                                         `json:"serviceCidr,omitempty"`
}

// Deprecated version of ExtendedLocationType. Use v1beta20210501.ExtendedLocationType instead
// +kubebuilder:validation:Enum={"EdgeZone"}
type ExtendedLocationType string

const ExtendedLocationType_EdgeZone = ExtendedLocationType("EdgeZone")

// Deprecated version of ManagedClusterAADProfile. Use v1beta20210501.ManagedClusterAADProfile instead
type ManagedClusterAADProfileARM struct {
	AdminGroupObjectIDs []string `json:"adminGroupObjectIDs,omitempty"`
	ClientAppID         *string  `json:"clientAppID,omitempty"`
	EnableAzureRBAC     *bool    `json:"enableAzureRBAC,omitempty"`
	Managed             *bool    `json:"managed,omitempty"`
	ServerAppID         *string  `json:"serverAppID,omitempty"`
	ServerAppSecret     *string  `json:"serverAppSecret,omitempty"`
	TenantID            *string  `json:"tenantID,omitempty"`
}

// Deprecated version of ManagedClusterAPIServerAccessProfile. Use v1beta20210501.ManagedClusterAPIServerAccessProfile instead
type ManagedClusterAPIServerAccessProfileARM struct {
	AuthorizedIPRanges             []string `json:"authorizedIPRanges,omitempty"`
	EnablePrivateCluster           *bool    `json:"enablePrivateCluster,omitempty"`
	EnablePrivateClusterPublicFQDN *bool    `json:"enablePrivateClusterPublicFQDN,omitempty"`
	PrivateDNSZone                 *string  `json:"privateDNSZone,omitempty"`
}

// Deprecated version of ManagedClusterAgentPoolProfile. Use v1beta20210501.ManagedClusterAgentPoolProfile instead
type ManagedClusterAgentPoolProfileARM struct {
	AvailabilityZones         []string                     `json:"availabilityZones,omitempty"`
	Count                     *int                         `json:"count,omitempty"`
	EnableAutoScaling         *bool                        `json:"enableAutoScaling,omitempty"`
	EnableEncryptionAtHost    *bool                        `json:"enableEncryptionAtHost,omitempty"`
	EnableFIPS                *bool                        `json:"enableFIPS,omitempty"`
	EnableNodePublicIP        *bool                        `json:"enableNodePublicIP,omitempty"`
	EnableUltraSSD            *bool                        `json:"enableUltraSSD,omitempty"`
	GpuInstanceProfile        *GPUInstanceProfile          `json:"gpuInstanceProfile,omitempty"`
	KubeletConfig             *KubeletConfigARM            `json:"kubeletConfig,omitempty"`
	KubeletDiskType           *KubeletDiskType             `json:"kubeletDiskType,omitempty"`
	LinuxOSConfig             *LinuxOSConfigARM            `json:"linuxOSConfig,omitempty"`
	MaxCount                  *int                         `json:"maxCount,omitempty"`
	MaxPods                   *int                         `json:"maxPods,omitempty"`
	MinCount                  *int                         `json:"minCount,omitempty"`
	Mode                      *AgentPoolMode               `json:"mode,omitempty"`
	Name                      *string                      `json:"name,omitempty"`
	NodeImageVersion          *string                      `json:"nodeImageVersion,omitempty"`
	NodeLabels                map[string]string            `json:"nodeLabels,omitempty"`
	NodePublicIPPrefixID      *string                      `json:"nodePublicIPPrefixID,omitempty"`
	NodeTaints                []string                     `json:"nodeTaints,omitempty"`
	OrchestratorVersion       *string                      `json:"orchestratorVersion,omitempty"`
	OsDiskSizeGB              *ContainerServiceOSDisk      `json:"osDiskSizeGB,omitempty"`
	OsDiskType                *OSDiskType                  `json:"osDiskType,omitempty"`
	OsSKU                     *OSSKU                       `json:"osSKU,omitempty"`
	OsType                    *OSType                      `json:"osType,omitempty"`
	PodSubnetID               *string                      `json:"podSubnetID,omitempty"`
	PowerState                *PowerStateARM               `json:"powerState,omitempty"`
	ProvisioningState         *string                      `json:"provisioningState,omitempty"`
	ProximityPlacementGroupID *string                      `json:"proximityPlacementGroupID,omitempty"`
	ScaleSetEvictionPolicy    *ScaleSetEvictionPolicy      `json:"scaleSetEvictionPolicy,omitempty"`
	ScaleSetPriority          *ScaleSetPriority            `json:"scaleSetPriority,omitempty"`
	SpotMaxPrice              *float64                     `json:"spotMaxPrice,omitempty"`
	Tags                      map[string]string            `json:"tags,omitempty"`
	Type                      *AgentPoolType               `json:"type,omitempty"`
	UpgradeSettings           *AgentPoolUpgradeSettingsARM `json:"upgradeSettings,omitempty"`
	VmSize                    *string                      `json:"vmSize,omitempty"`
	VnetSubnetID              *string                      `json:"vnetSubnetID,omitempty"`
}

// Deprecated version of ManagedClusterAutoUpgradeProfile. Use v1beta20210501.ManagedClusterAutoUpgradeProfile instead
type ManagedClusterAutoUpgradeProfileARM struct {
	UpgradeChannel *ManagedClusterAutoUpgradeProfile_UpgradeChannel `json:"upgradeChannel,omitempty"`
}

// Deprecated version of ManagedClusterHTTPProxyConfig. Use v1beta20210501.ManagedClusterHTTPProxyConfig instead
type ManagedClusterHTTPProxyConfigARM struct {
	HttpProxy  *string  `json:"httpProxy,omitempty"`
	HttpsProxy *string  `json:"httpsProxy,omitempty"`
	NoProxy    []string `json:"noProxy,omitempty"`
	TrustedCa  *string  `json:"trustedCa,omitempty"`
}

// Deprecated version of ManagedClusterIdentity_Type. Use v1beta20210501.ManagedClusterIdentity_Type instead
// +kubebuilder:validation:Enum={"None","SystemAssigned","UserAssigned"}
type ManagedClusterIdentity_Type string

const (
	ManagedClusterIdentity_Type_None           = ManagedClusterIdentity_Type("None")
	ManagedClusterIdentity_Type_SystemAssigned = ManagedClusterIdentity_Type("SystemAssigned")
	ManagedClusterIdentity_Type_UserAssigned   = ManagedClusterIdentity_Type("UserAssigned")
)

// Deprecated version of ManagedClusterIdentity_UserAssignedIdentities. Use v1beta20210501.ManagedClusterIdentity_UserAssignedIdentities instead
type ManagedClusterIdentity_UserAssignedIdentitiesARM struct {
	ClientId    *string `json:"clientId,omitempty"`
	PrincipalId *string `json:"principalId,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentityProfile. Use v1beta20210501.ManagedClusterPodIdentityProfile instead
type ManagedClusterPodIdentityProfileARM struct {
	AllowNetworkPluginKubenet      *bool                                   `json:"allowNetworkPluginKubenet,omitempty"`
	Enabled                        *bool                                   `json:"enabled,omitempty"`
	UserAssignedIdentities         []ManagedClusterPodIdentityARM          `json:"userAssignedIdentities,omitempty"`
	UserAssignedIdentityExceptions []ManagedClusterPodIdentityExceptionARM `json:"userAssignedIdentityExceptions,omitempty"`
}

// Deprecated version of ManagedClusterProperties_AutoScalerProfile. Use v1beta20210501.ManagedClusterProperties_AutoScalerProfile instead
type ManagedClusterProperties_AutoScalerProfileARM struct {
	BalanceSimilarNodeGroups      *string                                              `json:"balance-similar-node-groups,omitempty"`
	Expander                      *ManagedClusterProperties_AutoScalerProfile_Expander `json:"expander,omitempty"`
	MaxEmptyBulkDelete            *string                                              `json:"max-empty-bulk-delete,omitempty"`
	MaxGracefulTerminationSec     *string                                              `json:"max-graceful-termination-sec,omitempty"`
	MaxNodeProvisionTime          *string                                              `json:"max-node-provision-time,omitempty"`
	MaxTotalUnreadyPercentage     *string                                              `json:"max-total-unready-percentage,omitempty"`
	NewPodScaleUpDelay            *string                                              `json:"new-pod-scale-up-delay,omitempty"`
	OkTotalUnreadyCount           *string                                              `json:"ok-total-unready-count,omitempty"`
	ScaleDownDelayAfterAdd        *string                                              `json:"scale-down-delay-after-add,omitempty"`
	ScaleDownDelayAfterDelete     *string                                              `json:"scale-down-delay-after-delete,omitempty"`
	ScaleDownDelayAfterFailure    *string                                              `json:"scale-down-delay-after-failure,omitempty"`
	ScaleDownUnneededTime         *string                                              `json:"scale-down-unneeded-time,omitempty"`
	ScaleDownUnreadyTime          *string                                              `json:"scale-down-unready-time,omitempty"`
	ScaleDownUtilizationThreshold *string                                              `json:"scale-down-utilization-threshold,omitempty"`
	ScanInterval                  *string                                              `json:"scan-interval,omitempty"`
	SkipNodesWithLocalStorage     *string                                              `json:"skip-nodes-with-local-storage,omitempty"`
	SkipNodesWithSystemPods       *string                                              `json:"skip-nodes-with-system-pods,omitempty"`
}

// Deprecated version of ManagedClusterSKU_Name. Use v1beta20210501.ManagedClusterSKU_Name instead
// +kubebuilder:validation:Enum={"Basic"}
type ManagedClusterSKU_Name string

const ManagedClusterSKU_Name_Basic = ManagedClusterSKU_Name("Basic")

// Deprecated version of ManagedClusterSKU_Tier. Use v1beta20210501.ManagedClusterSKU_Tier instead
// +kubebuilder:validation:Enum={"Free","Paid"}
type ManagedClusterSKU_Tier string

const (
	ManagedClusterSKU_Tier_Free = ManagedClusterSKU_Tier("Free")
	ManagedClusterSKU_Tier_Paid = ManagedClusterSKU_Tier("Paid")
)

// Deprecated version of ManagedClusterServicePrincipalProfile. Use v1beta20210501.ManagedClusterServicePrincipalProfile instead
type ManagedClusterServicePrincipalProfileARM struct {
	ClientId *string `json:"clientId,omitempty"`
	Secret   *string `json:"secret,omitempty"`
}

// Deprecated version of ManagedClusterWindowsProfile. Use v1beta20210501.ManagedClusterWindowsProfile instead
type ManagedClusterWindowsProfileARM struct {
	AdminPassword  *string                                   `json:"adminPassword,omitempty"`
	AdminUsername  *string                                   `json:"adminUsername,omitempty"`
	EnableCSIProxy *bool                                     `json:"enableCSIProxy,omitempty"`
	LicenseType    *ManagedClusterWindowsProfile_LicenseType `json:"licenseType,omitempty"`
}

// Deprecated version of PowerState. Use v1beta20210501.PowerState instead
type PowerStateARM struct {
	Code *PowerState_Code `json:"code,omitempty"`
}

// Deprecated version of PrivateLinkResource. Use v1beta20210501.PrivateLinkResource instead
type PrivateLinkResourceARM struct {
	GroupId              *string  `json:"groupId,omitempty"`
	Id                   *string  `json:"id,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	PrivateLinkServiceID *string  `json:"privateLinkServiceID,omitempty"`
	RequiredMembers      []string `json:"requiredMembers,omitempty"`
	Type                 *string  `json:"type,omitempty"`
}

// Deprecated version of ContainerServiceSshConfiguration. Use v1beta20210501.ContainerServiceSshConfiguration instead
type ContainerServiceSshConfigurationARM struct {
	PublicKeys []ContainerServiceSshPublicKeyARM `json:"publicKeys,omitempty"`
}

// Deprecated version of ManagedClusterLoadBalancerProfile. Use v1beta20210501.ManagedClusterLoadBalancerProfile instead
type ManagedClusterLoadBalancerProfileARM struct {
	AllocatedOutboundPorts *int                                                     `json:"allocatedOutboundPorts,omitempty"`
	EffectiveOutboundIPs   []ResourceReferenceARM                                   `json:"effectiveOutboundIPs,omitempty"`
	IdleTimeoutInMinutes   *int                                                     `json:"idleTimeoutInMinutes,omitempty"`
	ManagedOutboundIPs     *ManagedClusterLoadBalancerProfile_ManagedOutboundIPsARM `json:"managedOutboundIPs,omitempty"`
	OutboundIPPrefixes     *ManagedClusterLoadBalancerProfile_OutboundIPPrefixesARM `json:"outboundIPPrefixes,omitempty"`
	OutboundIPs            *ManagedClusterLoadBalancerProfile_OutboundIPsARM        `json:"outboundIPs,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentity. Use v1beta20210501.ManagedClusterPodIdentity instead
type ManagedClusterPodIdentityARM struct {
	BindingSelector   *string                                        `json:"bindingSelector,omitempty"`
	Identity          *UserAssignedIdentityARM                       `json:"identity,omitempty"`
	Name              *string                                        `json:"name,omitempty"`
	Namespace         *string                                        `json:"namespace,omitempty"`
	ProvisioningInfo  *ManagedClusterPodIdentity_ProvisioningInfoARM `json:"provisioningInfo,omitempty"`
	ProvisioningState *ManagedClusterPodIdentity_ProvisioningState   `json:"provisioningState,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentityException. Use v1beta20210501.ManagedClusterPodIdentityException instead
type ManagedClusterPodIdentityExceptionARM struct {
	Name      *string           `json:"name,omitempty"`
	Namespace *string           `json:"namespace,omitempty"`
	PodLabels map[string]string `json:"podLabels,omitempty"`
}

// Deprecated version of ContainerServiceSshPublicKey. Use v1beta20210501.ContainerServiceSshPublicKey instead
type ContainerServiceSshPublicKeyARM struct {
	KeyData *string `json:"keyData,omitempty"`
}

// Deprecated version of ManagedClusterLoadBalancerProfile_ManagedOutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_ManagedOutboundIPs instead
type ManagedClusterLoadBalancerProfile_ManagedOutboundIPsARM struct {
	Count *int `json:"count,omitempty"`
}

// Deprecated version of ManagedClusterLoadBalancerProfile_OutboundIPPrefixes. Use v1beta20210501.ManagedClusterLoadBalancerProfile_OutboundIPPrefixes instead
type ManagedClusterLoadBalancerProfile_OutboundIPPrefixesARM struct {
	PublicIPPrefixes []ResourceReferenceARM `json:"publicIPPrefixes,omitempty"`
}

// Deprecated version of ManagedClusterLoadBalancerProfile_OutboundIPs. Use v1beta20210501.ManagedClusterLoadBalancerProfile_OutboundIPs instead
type ManagedClusterLoadBalancerProfile_OutboundIPsARM struct {
	PublicIPs []ResourceReferenceARM `json:"publicIPs,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentity_ProvisioningInfo. Use v1beta20210501.ManagedClusterPodIdentity_ProvisioningInfo instead
type ManagedClusterPodIdentity_ProvisioningInfoARM struct {
	Error *ManagedClusterPodIdentityProvisioningErrorARM `json:"error,omitempty"`
}

// Deprecated version of ResourceReference. Use v1beta20210501.ResourceReference instead
type ResourceReferenceARM struct {
	Id *string `json:"id,omitempty"`
}

// Deprecated version of UserAssignedIdentity. Use v1beta20210501.UserAssignedIdentity instead
type UserAssignedIdentityARM struct {
	ClientId   *string `json:"clientId,omitempty"`
	ObjectId   *string `json:"objectId,omitempty"`
	ResourceId *string `json:"resourceId,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentityProvisioningError. Use v1beta20210501.ManagedClusterPodIdentityProvisioningError instead
type ManagedClusterPodIdentityProvisioningErrorARM struct {
	Error *ManagedClusterPodIdentityProvisioningErrorBodyARM `json:"error,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody instead
type ManagedClusterPodIdentityProvisioningErrorBodyARM struct {
	Code    *string                                                      `json:"code,omitempty"`
	Details []ManagedClusterPodIdentityProvisioningErrorBody_UnrolledARM `json:"details,omitempty"`
	Message *string                                                      `json:"message,omitempty"`
	Target  *string                                                      `json:"target,omitempty"`
}

// Deprecated version of ManagedClusterPodIdentityProvisioningErrorBody_Unrolled. Use v1beta20210501.ManagedClusterPodIdentityProvisioningErrorBody_Unrolled instead
type ManagedClusterPodIdentityProvisioningErrorBody_UnrolledARM struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Target  *string `json:"target,omitempty"`
}
