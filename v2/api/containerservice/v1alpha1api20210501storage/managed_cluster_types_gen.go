// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210501storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=containerservice.azure.com,resources=managedclusters,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=containerservice.azure.com,resources={managedclusters/status,managedclusters/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
//Storage version of v1alpha1api20210501.ManagedCluster
//Generator information:
//- Generated from: /containerservice/resource-manager/Microsoft.ContainerService/stable/2021-05-01/managedClusters.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}
type ManagedCluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagedCluster_Spec   `json:"spec,omitempty"`
	Status            ManagedCluster_Status `json:"status,omitempty"`
}

var _ conditions.Conditioner = &ManagedCluster{}

// GetConditions returns the conditions of the resource
func (cluster *ManagedCluster) GetConditions() conditions.Conditions {
	return cluster.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (cluster *ManagedCluster) SetConditions(conditions conditions.Conditions) {
	cluster.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &ManagedCluster{}

// AzureName returns the Azure name of the resource
func (cluster *ManagedCluster) AzureName() string {
	return cluster.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-05-01"
func (cluster ManagedCluster) GetAPIVersion() string {
	return string(APIVersionValue)
}

// GetResourceKind returns the kind of the resource
func (cluster *ManagedCluster) GetResourceKind() genruntime.ResourceKind {
	return genruntime.ResourceKindNormal
}

// GetSpec returns the specification of this resource
func (cluster *ManagedCluster) GetSpec() genruntime.ConvertibleSpec {
	return &cluster.Spec
}

// GetStatus returns the status of this resource
func (cluster *ManagedCluster) GetStatus() genruntime.ConvertibleStatus {
	return &cluster.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.ContainerService/managedClusters"
func (cluster *ManagedCluster) GetType() string {
	return "Microsoft.ContainerService/managedClusters"
}

// NewEmptyStatus returns a new empty (blank) status
func (cluster *ManagedCluster) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &ManagedCluster_Status{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (cluster *ManagedCluster) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(cluster.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  cluster.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (cluster *ManagedCluster) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*ManagedCluster_Status); ok {
		cluster.Status = *st
		return nil
	}

	// Convert status to required version
	var st ManagedCluster_Status
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	cluster.Status = st
	return nil
}

// Hub marks that this ManagedCluster is the hub type for conversion
func (cluster *ManagedCluster) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (cluster *ManagedCluster) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: cluster.Spec.OriginalVersion,
		Kind:    "ManagedCluster",
	}
}

// +kubebuilder:object:root=true
//Storage version of v1alpha1api20210501.ManagedCluster
//Generator information:
//- Generated from: /containerservice/resource-manager/Microsoft.ContainerService/stable/2021-05-01/managedClusters.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}
type ManagedClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedCluster `json:"items"`
}

// +kubebuilder:validation:Enum={"2021-05-01"}
type APIVersion string

const APIVersionValue = APIVersion("2021-05-01")

//Storage version of v1alpha1api20210501.ManagedCluster_Spec
type ManagedCluster_Spec struct {
	AadProfile             *ManagedClusterAADProfile                  `json:"aadProfile,omitempty"`
	AddonProfiles          *v1.JSON                                   `json:"addonProfiles,omitempty"`
	AgentPoolProfiles      []ManagedClusterAgentPoolProfile           `json:"agentPoolProfiles,omitempty"`
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfile      `json:"apiServerAccessProfile,omitempty"`
	AutoScalerProfile      *ManagedClusterPropertiesAutoScalerProfile `json:"autoScalerProfile,omitempty"`
	AutoUpgradeProfile     *ManagedClusterAutoUpgradeProfile          `json:"autoUpgradeProfile,omitempty"`

	//AzureName: The name of the resource in Azure. This is often the same as the name
	//of the resource in Kubernetes but it doesn't have to be.
	AzureName               string                          `json:"azureName"`
	DisableLocalAccounts    *bool                           `json:"disableLocalAccounts,omitempty"`
	DiskEncryptionSetID     *string                         `json:"diskEncryptionSetID,omitempty"`
	DnsPrefix               *string                         `json:"dnsPrefix,omitempty"`
	EnablePodSecurityPolicy *bool                           `json:"enablePodSecurityPolicy,omitempty"`
	EnableRBAC              *bool                           `json:"enableRBAC,omitempty"`
	ExtendedLocation        *ExtendedLocation               `json:"extendedLocation,omitempty"`
	FqdnSubdomain           *string                         `json:"fqdnSubdomain,omitempty"`
	HttpProxyConfig         *ManagedClusterHTTPProxyConfig  `json:"httpProxyConfig,omitempty"`
	Identity                *ManagedClusterIdentity         `json:"identity,omitempty"`
	IdentityProfile         *v1.JSON                        `json:"identityProfile,omitempty"`
	KubernetesVersion       *string                         `json:"kubernetesVersion,omitempty"`
	LinuxProfile            *ContainerServiceLinuxProfile   `json:"linuxProfile,omitempty"`
	Location                *string                         `json:"location,omitempty"`
	NetworkProfile          *ContainerServiceNetworkProfile `json:"networkProfile,omitempty"`
	NodeResourceGroup       *string                         `json:"nodeResourceGroup,omitempty"`
	OriginalVersion         string                          `json:"originalVersion"`

	// +kubebuilder:validation:Required
	Owner                   genruntime.KnownResourceReference      `group:"resources.azure.com" json:"owner" kind:"ResourceGroup"`
	PodIdentityProfile      *ManagedClusterPodIdentityProfile      `json:"podIdentityProfile,omitempty"`
	PrivateLinkResources    []genruntime.ResourceReference         `json:"privateLinkResources,omitempty"`
	PropertyBag             genruntime.PropertyBag                 `json:"$propertyBag,omitempty"`
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfile `json:"servicePrincipalProfile,omitempty"`
	Sku                     *ManagedClusterSKU                     `json:"sku,omitempty"`
	Tags                    map[string]string                      `json:"tags,omitempty"`
	WindowsProfile          *ManagedClusterWindowsProfile          `json:"windowsProfile,omitempty"`
}

var _ genruntime.ConvertibleSpec = &ManagedCluster_Spec{}

// ConvertSpecFrom populates our ManagedCluster_Spec from the provided source
func (cluster *ManagedCluster_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == cluster {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(cluster)
}

// ConvertSpecTo populates the provided destination from our ManagedCluster_Spec
func (cluster *ManagedCluster_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == cluster {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(cluster)
}

//Storage version of v1alpha1api20210501.ManagedCluster_Status
type ManagedCluster_Status struct {
	AadProfile              *ManagedClusterAADProfile_Status                  `json:"aadProfile,omitempty"`
	AddonProfiles           *v1.JSON                                          `json:"addonProfiles,omitempty"`
	AgentPoolProfiles       []ManagedClusterAgentPoolProfile_Status           `json:"agentPoolProfiles,omitempty"`
	ApiServerAccessProfile  *ManagedClusterAPIServerAccessProfile_Status      `json:"apiServerAccessProfile,omitempty"`
	AutoScalerProfile       *ManagedClusterProperties_StatusAutoScalerProfile `json:"autoScalerProfile,omitempty"`
	AutoUpgradeProfile      *ManagedClusterAutoUpgradeProfile_Status          `json:"autoUpgradeProfile,omitempty"`
	AzurePortalFQDN         *string                                           `json:"azurePortalFQDN,omitempty"`
	Conditions              []conditions.Condition                            `json:"conditions,omitempty"`
	DisableLocalAccounts    *bool                                             `json:"disableLocalAccounts,omitempty"`
	DiskEncryptionSetID     *string                                           `json:"diskEncryptionSetID,omitempty"`
	DnsPrefix               *string                                           `json:"dnsPrefix,omitempty"`
	EnablePodSecurityPolicy *bool                                             `json:"enablePodSecurityPolicy,omitempty"`
	EnableRBAC              *bool                                             `json:"enableRBAC,omitempty"`
	ExtendedLocation        *ExtendedLocation_Status                          `json:"extendedLocation,omitempty"`
	Fqdn                    *string                                           `json:"fqdn,omitempty"`
	FqdnSubdomain           *string                                           `json:"fqdnSubdomain,omitempty"`
	HttpProxyConfig         *ManagedClusterHTTPProxyConfig_Status             `json:"httpProxyConfig,omitempty"`
	Id                      *string                                           `json:"id,omitempty"`
	Identity                *ManagedClusterIdentity_Status                    `json:"identity,omitempty"`
	IdentityProfile         *v1.JSON                                          `json:"identityProfile,omitempty"`
	KubernetesVersion       *string                                           `json:"kubernetesVersion,omitempty"`
	LinuxProfile            *ContainerServiceLinuxProfile_Status              `json:"linuxProfile,omitempty"`
	Location                *string                                           `json:"location,omitempty"`
	MaxAgentPools           *int                                              `json:"maxAgentPools,omitempty"`
	Name                    *string                                           `json:"name,omitempty"`
	NetworkProfile          *ContainerServiceNetworkProfile_Status            `json:"networkProfile,omitempty"`
	NodeResourceGroup       *string                                           `json:"nodeResourceGroup,omitempty"`
	PodIdentityProfile      *ManagedClusterPodIdentityProfile_Status          `json:"podIdentityProfile,omitempty"`
	PowerState              *PowerState_Status                                `json:"powerState,omitempty"`
	PrivateFQDN             *string                                           `json:"privateFQDN,omitempty"`
	PrivateLinkResources    []PrivateLinkResource_Status                      `json:"privateLinkResources,omitempty"`
	PropertyBag             genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
	ProvisioningState       *string                                           `json:"provisioningState,omitempty"`
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfile_Status     `json:"servicePrincipalProfile,omitempty"`
	Sku                     *ManagedClusterSKU_Status                         `json:"sku,omitempty"`
	Tags                    map[string]string                                 `json:"tags,omitempty"`
	Type                    *string                                           `json:"type,omitempty"`
	WindowsProfile          *ManagedClusterWindowsProfile_Status              `json:"windowsProfile,omitempty"`
}

var _ genruntime.ConvertibleStatus = &ManagedCluster_Status{}

// ConvertStatusFrom populates our ManagedCluster_Status from the provided source
func (cluster *ManagedCluster_Status) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == cluster {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(cluster)
}

// ConvertStatusTo populates the provided destination from our ManagedCluster_Status
func (cluster *ManagedCluster_Status) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == cluster {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(cluster)
}

//Storage version of v1alpha1api20210501.ContainerServiceLinuxProfile
type ContainerServiceLinuxProfile struct {
	AdminUsername *string                           `json:"adminUsername,omitempty"`
	PropertyBag   genruntime.PropertyBag            `json:"$propertyBag,omitempty"`
	Ssh           *ContainerServiceSshConfiguration `json:"ssh,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceLinuxProfile_Status
type ContainerServiceLinuxProfile_Status struct {
	AdminUsername *string                                  `json:"adminUsername,omitempty"`
	PropertyBag   genruntime.PropertyBag                   `json:"$propertyBag,omitempty"`
	Ssh           *ContainerServiceSshConfiguration_Status `json:"ssh,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceNetworkProfile
type ContainerServiceNetworkProfile struct {
	DnsServiceIP        *string                            `json:"dnsServiceIP,omitempty"`
	DockerBridgeCidr    *string                            `json:"dockerBridgeCidr,omitempty"`
	LoadBalancerProfile *ManagedClusterLoadBalancerProfile `json:"loadBalancerProfile,omitempty"`
	LoadBalancerSku     *string                            `json:"loadBalancerSku,omitempty"`
	NetworkMode         *string                            `json:"networkMode,omitempty"`
	NetworkPlugin       *string                            `json:"networkPlugin,omitempty"`
	NetworkPolicy       *string                            `json:"networkPolicy,omitempty"`
	OutboundType        *string                            `json:"outboundType,omitempty"`
	PodCidr             *string                            `json:"podCidr,omitempty"`
	PropertyBag         genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	ServiceCidr         *string                            `json:"serviceCidr,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceNetworkProfile_Status
type ContainerServiceNetworkProfile_Status struct {
	DnsServiceIP        *string                                   `json:"dnsServiceIP,omitempty"`
	DockerBridgeCidr    *string                                   `json:"dockerBridgeCidr,omitempty"`
	LoadBalancerProfile *ManagedClusterLoadBalancerProfile_Status `json:"loadBalancerProfile,omitempty"`
	LoadBalancerSku     *string                                   `json:"loadBalancerSku,omitempty"`
	NetworkMode         *string                                   `json:"networkMode,omitempty"`
	NetworkPlugin       *string                                   `json:"networkPlugin,omitempty"`
	NetworkPolicy       *string                                   `json:"networkPolicy,omitempty"`
	OutboundType        *string                                   `json:"outboundType,omitempty"`
	PodCidr             *string                                   `json:"podCidr,omitempty"`
	PropertyBag         genruntime.PropertyBag                    `json:"$propertyBag,omitempty"`
	ServiceCidr         *string                                   `json:"serviceCidr,omitempty"`
}

//Storage version of v1alpha1api20210501.ExtendedLocation
type ExtendedLocation struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

//Storage version of v1alpha1api20210501.ExtendedLocation_Status
type ExtendedLocation_Status struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAADProfile
type ManagedClusterAADProfile struct {
	AdminGroupObjectIDs []string               `json:"adminGroupObjectIDs,omitempty"`
	ClientAppID         *string                `json:"clientAppID,omitempty"`
	EnableAzureRBAC     *bool                  `json:"enableAzureRBAC,omitempty"`
	Managed             *bool                  `json:"managed,omitempty"`
	PropertyBag         genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ServerAppID         *string                `json:"serverAppID,omitempty"`
	ServerAppSecret     *string                `json:"serverAppSecret,omitempty"`
	TenantID            *string                `json:"tenantID,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAADProfile_Status
type ManagedClusterAADProfile_Status struct {
	AdminGroupObjectIDs []string               `json:"adminGroupObjectIDs,omitempty"`
	ClientAppID         *string                `json:"clientAppID,omitempty"`
	EnableAzureRBAC     *bool                  `json:"enableAzureRBAC,omitempty"`
	Managed             *bool                  `json:"managed,omitempty"`
	PropertyBag         genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ServerAppID         *string                `json:"serverAppID,omitempty"`
	ServerAppSecret     *string                `json:"serverAppSecret,omitempty"`
	TenantID            *string                `json:"tenantID,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAPIServerAccessProfile
type ManagedClusterAPIServerAccessProfile struct {
	AuthorizedIPRanges             []string               `json:"authorizedIPRanges,omitempty"`
	EnablePrivateCluster           *bool                  `json:"enablePrivateCluster,omitempty"`
	EnablePrivateClusterPublicFQDN *bool                  `json:"enablePrivateClusterPublicFQDN,omitempty"`
	PrivateDNSZone                 *string                `json:"privateDNSZone,omitempty"`
	PropertyBag                    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAPIServerAccessProfile_Status
type ManagedClusterAPIServerAccessProfile_Status struct {
	AuthorizedIPRanges             []string               `json:"authorizedIPRanges,omitempty"`
	EnablePrivateCluster           *bool                  `json:"enablePrivateCluster,omitempty"`
	EnablePrivateClusterPublicFQDN *bool                  `json:"enablePrivateClusterPublicFQDN,omitempty"`
	PrivateDNSZone                 *string                `json:"privateDNSZone,omitempty"`
	PropertyBag                    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAgentPoolProfile
type ManagedClusterAgentPoolProfile struct {
	AvailabilityZones         []string                  `json:"availabilityZones,omitempty"`
	Count                     *int                      `json:"count,omitempty"`
	EnableAutoScaling         *bool                     `json:"enableAutoScaling,omitempty"`
	EnableEncryptionAtHost    *bool                     `json:"enableEncryptionAtHost,omitempty"`
	EnableFIPS                *bool                     `json:"enableFIPS,omitempty"`
	EnableNodePublicIP        *bool                     `json:"enableNodePublicIP,omitempty"`
	EnableUltraSSD            *bool                     `json:"enableUltraSSD,omitempty"`
	GpuInstanceProfile        *string                   `json:"gpuInstanceProfile,omitempty"`
	KubeletConfig             *KubeletConfig            `json:"kubeletConfig,omitempty"`
	KubeletDiskType           *string                   `json:"kubeletDiskType,omitempty"`
	LinuxOSConfig             *LinuxOSConfig            `json:"linuxOSConfig,omitempty"`
	MaxCount                  *int                      `json:"maxCount,omitempty"`
	MaxPods                   *int                      `json:"maxPods,omitempty"`
	MinCount                  *int                      `json:"minCount,omitempty"`
	Mode                      *string                   `json:"mode,omitempty"`
	Name                      *string                   `json:"name,omitempty"`
	NodeLabels                map[string]string         `json:"nodeLabels,omitempty"`
	NodePublicIPPrefixID      *string                   `json:"nodePublicIPPrefixID,omitempty"`
	NodeTaints                []string                  `json:"nodeTaints,omitempty"`
	OrchestratorVersion       *string                   `json:"orchestratorVersion,omitempty"`
	OsDiskSizeGB              *int                      `json:"osDiskSizeGB,omitempty"`
	OsDiskType                *string                   `json:"osDiskType,omitempty"`
	OsSKU                     *string                   `json:"osSKU,omitempty"`
	OsType                    *string                   `json:"osType,omitempty"`
	PodSubnetID               *string                   `json:"podSubnetID,omitempty"`
	PropertyBag               genruntime.PropertyBag    `json:"$propertyBag,omitempty"`
	ProximityPlacementGroupID *string                   `json:"proximityPlacementGroupID,omitempty"`
	ScaleSetEvictionPolicy    *string                   `json:"scaleSetEvictionPolicy,omitempty"`
	ScaleSetPriority          *string                   `json:"scaleSetPriority,omitempty"`
	SpotMaxPrice              *float64                  `json:"spotMaxPrice,omitempty"`
	Tags                      map[string]string         `json:"tags,omitempty"`
	Type                      *string                   `json:"type,omitempty"`
	UpgradeSettings           *AgentPoolUpgradeSettings `json:"upgradeSettings,omitempty"`
	VmSize                    *string                   `json:"vmSize,omitempty"`
	VnetSubnetID              *string                   `json:"vnetSubnetID,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAgentPoolProfile_Status
type ManagedClusterAgentPoolProfile_Status struct {
	AvailabilityZones         []string                         `json:"availabilityZones,omitempty"`
	Count                     *int                             `json:"count,omitempty"`
	EnableAutoScaling         *bool                            `json:"enableAutoScaling,omitempty"`
	EnableEncryptionAtHost    *bool                            `json:"enableEncryptionAtHost,omitempty"`
	EnableFIPS                *bool                            `json:"enableFIPS,omitempty"`
	EnableNodePublicIP        *bool                            `json:"enableNodePublicIP,omitempty"`
	EnableUltraSSD            *bool                            `json:"enableUltraSSD,omitempty"`
	GpuInstanceProfile        *string                          `json:"gpuInstanceProfile,omitempty"`
	KubeletConfig             *KubeletConfig_Status            `json:"kubeletConfig,omitempty"`
	KubeletDiskType           *string                          `json:"kubeletDiskType,omitempty"`
	LinuxOSConfig             *LinuxOSConfig_Status            `json:"linuxOSConfig,omitempty"`
	MaxCount                  *int                             `json:"maxCount,omitempty"`
	MaxPods                   *int                             `json:"maxPods,omitempty"`
	MinCount                  *int                             `json:"minCount,omitempty"`
	Mode                      *string                          `json:"mode,omitempty"`
	Name                      *string                          `json:"name,omitempty"`
	NodeImageVersion          *string                          `json:"nodeImageVersion,omitempty"`
	NodeLabels                map[string]string                `json:"nodeLabels,omitempty"`
	NodePublicIPPrefixID      *string                          `json:"nodePublicIPPrefixID,omitempty"`
	NodeTaints                []string                         `json:"nodeTaints,omitempty"`
	OrchestratorVersion       *string                          `json:"orchestratorVersion,omitempty"`
	OsDiskSizeGB              *int                             `json:"osDiskSizeGB,omitempty"`
	OsDiskType                *string                          `json:"osDiskType,omitempty"`
	OsSKU                     *string                          `json:"osSKU,omitempty"`
	OsType                    *string                          `json:"osType,omitempty"`
	PodSubnetID               *string                          `json:"podSubnetID,omitempty"`
	PowerState                *PowerState_Status               `json:"powerState,omitempty"`
	PropertyBag               genruntime.PropertyBag           `json:"$propertyBag,omitempty"`
	ProvisioningState         *string                          `json:"provisioningState,omitempty"`
	ProximityPlacementGroupID *string                          `json:"proximityPlacementGroupID,omitempty"`
	ScaleSetEvictionPolicy    *string                          `json:"scaleSetEvictionPolicy,omitempty"`
	ScaleSetPriority          *string                          `json:"scaleSetPriority,omitempty"`
	SpotMaxPrice              *float64                         `json:"spotMaxPrice,omitempty"`
	Tags                      map[string]string                `json:"tags,omitempty"`
	Type                      *string                          `json:"type,omitempty"`
	UpgradeSettings           *AgentPoolUpgradeSettings_Status `json:"upgradeSettings,omitempty"`
	VmSize                    *string                          `json:"vmSize,omitempty"`
	VnetSubnetID              *string                          `json:"vnetSubnetID,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAutoUpgradeProfile
type ManagedClusterAutoUpgradeProfile struct {
	PropertyBag    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	UpgradeChannel *string                `json:"upgradeChannel,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterAutoUpgradeProfile_Status
type ManagedClusterAutoUpgradeProfile_Status struct {
	PropertyBag    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	UpgradeChannel *string                `json:"upgradeChannel,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterHTTPProxyConfig
type ManagedClusterHTTPProxyConfig struct {
	HttpProxy   *string                `json:"httpProxy,omitempty"`
	HttpsProxy  *string                `json:"httpsProxy,omitempty"`
	NoProxy     []string               `json:"noProxy,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	TrustedCa   *string                `json:"trustedCa,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterHTTPProxyConfig_Status
type ManagedClusterHTTPProxyConfig_Status struct {
	HttpProxy   *string                `json:"httpProxy,omitempty"`
	HttpsProxy  *string                `json:"httpsProxy,omitempty"`
	NoProxy     []string               `json:"noProxy,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	TrustedCa   *string                `json:"trustedCa,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterIdentity
type ManagedClusterIdentity struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterIdentity_Status
type ManagedClusterIdentity_Status struct {
	PrincipalId            *string                                                        `json:"principalId,omitempty"`
	PropertyBag            genruntime.PropertyBag                                         `json:"$propertyBag,omitempty"`
	TenantId               *string                                                        `json:"tenantId,omitempty"`
	Type                   *string                                                        `json:"type,omitempty"`
	UserAssignedIdentities map[string]ManagedClusterIdentity_StatusUserAssignedIdentities `json:"userAssignedIdentities,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityProfile
type ManagedClusterPodIdentityProfile struct {
	AllowNetworkPluginKubenet      *bool                                `json:"allowNetworkPluginKubenet,omitempty"`
	Enabled                        *bool                                `json:"enabled,omitempty"`
	PropertyBag                    genruntime.PropertyBag               `json:"$propertyBag,omitempty"`
	UserAssignedIdentities         []ManagedClusterPodIdentity          `json:"userAssignedIdentities,omitempty"`
	UserAssignedIdentityExceptions []ManagedClusterPodIdentityException `json:"userAssignedIdentityExceptions,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityProfile_Status
type ManagedClusterPodIdentityProfile_Status struct {
	AllowNetworkPluginKubenet      *bool                                       `json:"allowNetworkPluginKubenet,omitempty"`
	Enabled                        *bool                                       `json:"enabled,omitempty"`
	PropertyBag                    genruntime.PropertyBag                      `json:"$propertyBag,omitempty"`
	UserAssignedIdentities         []ManagedClusterPodIdentity_Status          `json:"userAssignedIdentities,omitempty"`
	UserAssignedIdentityExceptions []ManagedClusterPodIdentityException_Status `json:"userAssignedIdentityExceptions,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPropertiesAutoScalerProfile
type ManagedClusterPropertiesAutoScalerProfile struct {
	BalanceSimilarNodeGroups      *string                `json:"balance-similar-node-groups,omitempty"`
	Expander                      *string                `json:"expander,omitempty"`
	MaxEmptyBulkDelete            *string                `json:"max-empty-bulk-delete,omitempty"`
	MaxGracefulTerminationSec     *string                `json:"max-graceful-termination-sec,omitempty"`
	MaxNodeProvisionTime          *string                `json:"max-node-provision-time,omitempty"`
	MaxTotalUnreadyPercentage     *string                `json:"max-total-unready-percentage,omitempty"`
	NewPodScaleUpDelay            *string                `json:"new-pod-scale-up-delay,omitempty"`
	OkTotalUnreadyCount           *string                `json:"ok-total-unready-count,omitempty"`
	PropertyBag                   genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ScaleDownDelayAfterAdd        *string                `json:"scale-down-delay-after-add,omitempty"`
	ScaleDownDelayAfterDelete     *string                `json:"scale-down-delay-after-delete,omitempty"`
	ScaleDownDelayAfterFailure    *string                `json:"scale-down-delay-after-failure,omitempty"`
	ScaleDownUnneededTime         *string                `json:"scale-down-unneeded-time,omitempty"`
	ScaleDownUnreadyTime          *string                `json:"scale-down-unready-time,omitempty"`
	ScaleDownUtilizationThreshold *string                `json:"scale-down-utilization-threshold,omitempty"`
	ScanInterval                  *string                `json:"scan-interval,omitempty"`
	SkipNodesWithLocalStorage     *string                `json:"skip-nodes-with-local-storage,omitempty"`
	SkipNodesWithSystemPods       *string                `json:"skip-nodes-with-system-pods,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterProperties_StatusAutoScalerProfile
type ManagedClusterProperties_StatusAutoScalerProfile struct {
	BalanceSimilarNodeGroups      *string                `json:"balance-similar-node-groups,omitempty"`
	Expander                      *string                `json:"expander,omitempty"`
	MaxEmptyBulkDelete            *string                `json:"max-empty-bulk-delete,omitempty"`
	MaxGracefulTerminationSec     *string                `json:"max-graceful-termination-sec,omitempty"`
	MaxNodeProvisionTime          *string                `json:"max-node-provision-time,omitempty"`
	MaxTotalUnreadyPercentage     *string                `json:"max-total-unready-percentage,omitempty"`
	NewPodScaleUpDelay            *string                `json:"new-pod-scale-up-delay,omitempty"`
	OkTotalUnreadyCount           *string                `json:"ok-total-unready-count,omitempty"`
	PropertyBag                   genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ScaleDownDelayAfterAdd        *string                `json:"scale-down-delay-after-add,omitempty"`
	ScaleDownDelayAfterDelete     *string                `json:"scale-down-delay-after-delete,omitempty"`
	ScaleDownDelayAfterFailure    *string                `json:"scale-down-delay-after-failure,omitempty"`
	ScaleDownUnneededTime         *string                `json:"scale-down-unneeded-time,omitempty"`
	ScaleDownUnreadyTime          *string                `json:"scale-down-unready-time,omitempty"`
	ScaleDownUtilizationThreshold *string                `json:"scale-down-utilization-threshold,omitempty"`
	ScanInterval                  *string                `json:"scan-interval,omitempty"`
	SkipNodesWithLocalStorage     *string                `json:"skip-nodes-with-local-storage,omitempty"`
	SkipNodesWithSystemPods       *string                `json:"skip-nodes-with-system-pods,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterSKU
type ManagedClusterSKU struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterSKU_Status
type ManagedClusterSKU_Status struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterServicePrincipalProfile
type ManagedClusterServicePrincipalProfile struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Secret      *string                `json:"secret,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterServicePrincipalProfile_Status
type ManagedClusterServicePrincipalProfile_Status struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Secret      *string                `json:"secret,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterWindowsProfile
type ManagedClusterWindowsProfile struct {
	AdminPassword  *string                `json:"adminPassword,omitempty"`
	AdminUsername  *string                `json:"adminUsername,omitempty"`
	EnableCSIProxy *bool                  `json:"enableCSIProxy,omitempty"`
	LicenseType    *string                `json:"licenseType,omitempty"`
	PropertyBag    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterWindowsProfile_Status
type ManagedClusterWindowsProfile_Status struct {
	AdminPassword  *string                `json:"adminPassword,omitempty"`
	AdminUsername  *string                `json:"adminUsername,omitempty"`
	EnableCSIProxy *bool                  `json:"enableCSIProxy,omitempty"`
	LicenseType    *string                `json:"licenseType,omitempty"`
	PropertyBag    genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.PowerState_Status
type PowerState_Status struct {
	Code        *string                `json:"code,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.PrivateLinkResource_Status
type PrivateLinkResource_Status struct {
	GroupId              *string                `json:"groupId,omitempty"`
	Id                   *string                `json:"id,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	PrivateLinkServiceID *string                `json:"privateLinkServiceID,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RequiredMembers      []string               `json:"requiredMembers,omitempty"`
	Type                 *string                `json:"type,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceSshConfiguration
type ContainerServiceSshConfiguration struct {
	PropertyBag genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	PublicKeys  []ContainerServiceSshPublicKey `json:"publicKeys,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceSshConfiguration_Status
type ContainerServiceSshConfiguration_Status struct {
	PropertyBag genruntime.PropertyBag                `json:"$propertyBag,omitempty"`
	PublicKeys  []ContainerServiceSshPublicKey_Status `json:"publicKeys,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterIdentity_StatusUserAssignedIdentities
type ManagedClusterIdentity_StatusUserAssignedIdentities struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfile
type ManagedClusterLoadBalancerProfile struct {
	AllocatedOutboundPorts *int                                                 `json:"allocatedOutboundPorts,omitempty"`
	EffectiveOutboundIPs   []ResourceReference                                  `json:"effectiveOutboundIPs,omitempty"`
	IdleTimeoutInMinutes   *int                                                 `json:"idleTimeoutInMinutes,omitempty"`
	ManagedOutboundIPs     *ManagedClusterLoadBalancerProfileManagedOutboundIPs `json:"managedOutboundIPs,omitempty"`
	OutboundIPPrefixes     *ManagedClusterLoadBalancerProfileOutboundIPPrefixes `json:"outboundIPPrefixes,omitempty"`
	OutboundIPs            *ManagedClusterLoadBalancerProfileOutboundIPs        `json:"outboundIPs,omitempty"`
	PropertyBag            genruntime.PropertyBag                               `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfile_Status
type ManagedClusterLoadBalancerProfile_Status struct {
	AllocatedOutboundPorts *int                                                        `json:"allocatedOutboundPorts,omitempty"`
	EffectiveOutboundIPs   []ResourceReference_Status                                  `json:"effectiveOutboundIPs,omitempty"`
	IdleTimeoutInMinutes   *int                                                        `json:"idleTimeoutInMinutes,omitempty"`
	ManagedOutboundIPs     *ManagedClusterLoadBalancerProfile_StatusManagedOutboundIPs `json:"managedOutboundIPs,omitempty"`
	OutboundIPPrefixes     *ManagedClusterLoadBalancerProfile_StatusOutboundIPPrefixes `json:"outboundIPPrefixes,omitempty"`
	OutboundIPs            *ManagedClusterLoadBalancerProfile_StatusOutboundIPs        `json:"outboundIPs,omitempty"`
	PropertyBag            genruntime.PropertyBag                                      `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentity
type ManagedClusterPodIdentity struct {
	BindingSelector *string                `json:"bindingSelector,omitempty"`
	Identity        *UserAssignedIdentity  `json:"identity,omitempty"`
	Name            *string                `json:"name,omitempty"`
	Namespace       *string                `json:"namespace,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityException
type ManagedClusterPodIdentityException struct {
	Name        *string                `json:"name,omitempty"`
	Namespace   *string                `json:"namespace,omitempty"`
	PodLabels   map[string]string      `json:"podLabels,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityException_Status
type ManagedClusterPodIdentityException_Status struct {
	Name        *string                `json:"name,omitempty"`
	Namespace   *string                `json:"namespace,omitempty"`
	PodLabels   map[string]string      `json:"podLabels,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentity_Status
type ManagedClusterPodIdentity_Status struct {
	BindingSelector   *string                                           `json:"bindingSelector,omitempty"`
	Identity          *UserAssignedIdentity_Status                      `json:"identity,omitempty"`
	Name              *string                                           `json:"name,omitempty"`
	Namespace         *string                                           `json:"namespace,omitempty"`
	PropertyBag       genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
	ProvisioningInfo  *ManagedClusterPodIdentity_StatusProvisioningInfo `json:"provisioningInfo,omitempty"`
	ProvisioningState *string                                           `json:"provisioningState,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceSshPublicKey
type ContainerServiceSshPublicKey struct {
	KeyData     *string                `json:"keyData,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ContainerServiceSshPublicKey_Status
type ContainerServiceSshPublicKey_Status struct {
	KeyData     *string                `json:"keyData,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfileManagedOutboundIPs
type ManagedClusterLoadBalancerProfileManagedOutboundIPs struct {
	Count       *int                   `json:"count,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfileOutboundIPPrefixes
type ManagedClusterLoadBalancerProfileOutboundIPPrefixes struct {
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	PublicIPPrefixes []ResourceReference    `json:"publicIPPrefixes,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfileOutboundIPs
type ManagedClusterLoadBalancerProfileOutboundIPs struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	PublicIPs   []ResourceReference    `json:"publicIPs,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfile_StatusManagedOutboundIPs
type ManagedClusterLoadBalancerProfile_StatusManagedOutboundIPs struct {
	Count       *int                   `json:"count,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfile_StatusOutboundIPPrefixes
type ManagedClusterLoadBalancerProfile_StatusOutboundIPPrefixes struct {
	PropertyBag      genruntime.PropertyBag     `json:"$propertyBag,omitempty"`
	PublicIPPrefixes []ResourceReference_Status `json:"publicIPPrefixes,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterLoadBalancerProfile_StatusOutboundIPs
type ManagedClusterLoadBalancerProfile_StatusOutboundIPs struct {
	PropertyBag genruntime.PropertyBag     `json:"$propertyBag,omitempty"`
	PublicIPs   []ResourceReference_Status `json:"publicIPs,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentity_StatusProvisioningInfo
type ManagedClusterPodIdentity_StatusProvisioningInfo struct {
	Error       *ManagedClusterPodIdentityProvisioningError_Status `json:"error,omitempty"`
	PropertyBag genruntime.PropertyBag                             `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ResourceReference
type ResourceReference struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ResourceReference_Status
type ResourceReference_Status struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.UserAssignedIdentity
type UserAssignedIdentity struct {
	ClientId    *string                `json:"clientId,omitempty"`
	ObjectId    *string                `json:"objectId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ResourceId  *string                `json:"resourceId,omitempty"`
}

//Storage version of v1alpha1api20210501.UserAssignedIdentity_Status
type UserAssignedIdentity_Status struct {
	ClientId    *string                `json:"clientId,omitempty"`
	ObjectId    *string                `json:"objectId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ResourceId  *string                `json:"resourceId,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityProvisioningError_Status
type ManagedClusterPodIdentityProvisioningError_Status struct {
	Error       *ManagedClusterPodIdentityProvisioningErrorBody_Status `json:"error,omitempty"`
	PropertyBag genruntime.PropertyBag                                 `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status
type ManagedClusterPodIdentityProvisioningErrorBody_Status struct {
	Code        *string                                                          `json:"code,omitempty"`
	Details     []ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled `json:"details,omitempty"`
	Message     *string                                                          `json:"message,omitempty"`
	PropertyBag genruntime.PropertyBag                                           `json:"$propertyBag,omitempty"`
	Target      *string                                                          `json:"target,omitempty"`
}

//Storage version of v1alpha1api20210501.ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled
type ManagedClusterPodIdentityProvisioningErrorBody_Status_Unrolled struct {
	Code        *string                `json:"code,omitempty"`
	Message     *string                `json:"message,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Target      *string                `json:"target,omitempty"`
}

func init() {
	SchemeBuilder.Register(&ManagedCluster{}, &ManagedClusterList{})
}
