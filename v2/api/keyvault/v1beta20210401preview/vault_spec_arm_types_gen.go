// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210401preview

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of Vault_Spec. Use v1api20210401preview.Vault_Spec instead
type Vault_Spec_ARM struct {
	Location   *string              `json:"location,omitempty"`
	Name       string               `json:"name,omitempty"`
	Properties *VaultProperties_ARM `json:"properties,omitempty"`
	Tags       map[string]string    `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Vault_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-04-01-preview"
func (vault Vault_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (vault *Vault_Spec_ARM) GetName() string {
	return vault.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.KeyVault/vaults"
func (vault *Vault_Spec_ARM) GetType() string {
	return "Microsoft.KeyVault/vaults"
}

// Deprecated version of VaultProperties. Use v1api20210401preview.VaultProperties instead
type VaultProperties_ARM struct {
	AccessPolicies               []AccessPolicyEntry_ARM            `json:"accessPolicies,omitempty"`
	CreateMode                   *VaultProperties_CreateMode        `json:"createMode,omitempty"`
	EnablePurgeProtection        *bool                              `json:"enablePurgeProtection,omitempty"`
	EnableRbacAuthorization      *bool                              `json:"enableRbacAuthorization,omitempty"`
	EnableSoftDelete             *bool                              `json:"enableSoftDelete,omitempty"`
	EnabledForDeployment         *bool                              `json:"enabledForDeployment,omitempty"`
	EnabledForDiskEncryption     *bool                              `json:"enabledForDiskEncryption,omitempty"`
	EnabledForTemplateDeployment *bool                              `json:"enabledForTemplateDeployment,omitempty"`
	NetworkAcls                  *NetworkRuleSet_ARM                `json:"networkAcls,omitempty"`
	ProvisioningState            *VaultProperties_ProvisioningState `json:"provisioningState,omitempty"`
	Sku                          *Sku_ARM                           `json:"sku,omitempty"`
	SoftDeleteRetentionInDays    *int                               `json:"softDeleteRetentionInDays,omitempty"`
	TenantId                     *string                            `json:"tenantId,omitempty" optionalConfigMapPair:"TenantId"`
	VaultUri                     *string                            `json:"vaultUri,omitempty"`
}

// Deprecated version of AccessPolicyEntry. Use v1api20210401preview.AccessPolicyEntry instead
type AccessPolicyEntry_ARM struct {
	ApplicationId *string          `json:"applicationId,omitempty" optionalConfigMapPair:"ApplicationId"`
	ObjectId      *string          `json:"objectId,omitempty" optionalConfigMapPair:"ObjectId"`
	Permissions   *Permissions_ARM `json:"permissions,omitempty"`
	TenantId      *string          `json:"tenantId,omitempty" optionalConfigMapPair:"TenantId"`
}

// Deprecated version of NetworkRuleSet. Use v1api20210401preview.NetworkRuleSet instead
type NetworkRuleSet_ARM struct {
	Bypass              *NetworkRuleSet_Bypass        `json:"bypass,omitempty"`
	DefaultAction       *NetworkRuleSet_DefaultAction `json:"defaultAction,omitempty"`
	IpRules             []IPRule_ARM                  `json:"ipRules,omitempty"`
	VirtualNetworkRules []VirtualNetworkRule_ARM      `json:"virtualNetworkRules,omitempty"`
}

// Deprecated version of Sku. Use v1api20210401preview.Sku instead
type Sku_ARM struct {
	Family *Sku_Family `json:"family,omitempty"`
	Name   *Sku_Name   `json:"name,omitempty"`
}

// Deprecated version of VaultProperties_CreateMode. Use v1api20210401preview.VaultProperties_CreateMode instead
// +kubebuilder:validation:Enum={"createOrRecover","default","purgeThenCreate","recover"}
type VaultProperties_CreateMode string

const (
	VaultProperties_CreateMode_CreateOrRecover = VaultProperties_CreateMode("createOrRecover")
	VaultProperties_CreateMode_Default         = VaultProperties_CreateMode("default")
	VaultProperties_CreateMode_PurgeThenCreate = VaultProperties_CreateMode("purgeThenCreate")
	VaultProperties_CreateMode_Recover         = VaultProperties_CreateMode("recover")
)

// Deprecated version of VaultProperties_ProvisioningState. Use v1api20210401preview.VaultProperties_ProvisioningState
// instead
// +kubebuilder:validation:Enum={"RegisteringDns","Succeeded"}
type VaultProperties_ProvisioningState string

const (
	VaultProperties_ProvisioningState_RegisteringDns = VaultProperties_ProvisioningState("RegisteringDns")
	VaultProperties_ProvisioningState_Succeeded      = VaultProperties_ProvisioningState("Succeeded")
)

// Deprecated version of IPRule. Use v1api20210401preview.IPRule instead
type IPRule_ARM struct {
	Value *string `json:"value,omitempty"`
}

// Deprecated version of NetworkRuleSet_Bypass. Use v1api20210401preview.NetworkRuleSet_Bypass instead
// +kubebuilder:validation:Enum={"AzureServices","None"}
type NetworkRuleSet_Bypass string

const (
	NetworkRuleSet_Bypass_AzureServices = NetworkRuleSet_Bypass("AzureServices")
	NetworkRuleSet_Bypass_None          = NetworkRuleSet_Bypass("None")
)

// Deprecated version of NetworkRuleSet_DefaultAction. Use v1api20210401preview.NetworkRuleSet_DefaultAction instead
// +kubebuilder:validation:Enum={"Allow","Deny"}
type NetworkRuleSet_DefaultAction string

const (
	NetworkRuleSet_DefaultAction_Allow = NetworkRuleSet_DefaultAction("Allow")
	NetworkRuleSet_DefaultAction_Deny  = NetworkRuleSet_DefaultAction("Deny")
)

// Deprecated version of Permissions. Use v1api20210401preview.Permissions instead
type Permissions_ARM struct {
	Certificates []Permissions_Certificates `json:"certificates,omitempty"`
	Keys         []Permissions_Keys         `json:"keys,omitempty"`
	Secrets      []Permissions_Secrets      `json:"secrets,omitempty"`
	Storage      []Permissions_Storage      `json:"storage,omitempty"`
}

// Deprecated version of Sku_Family. Use v1api20210401preview.Sku_Family instead
// +kubebuilder:validation:Enum={"A"}
type Sku_Family string

const Sku_Family_A = Sku_Family("A")

// Deprecated version of Sku_Name. Use v1api20210401preview.Sku_Name instead
// +kubebuilder:validation:Enum={"premium","standard"}
type Sku_Name string

const (
	Sku_Name_Premium  = Sku_Name("premium")
	Sku_Name_Standard = Sku_Name("standard")
)

// Deprecated version of VirtualNetworkRule. Use v1api20210401preview.VirtualNetworkRule instead
type VirtualNetworkRule_ARM struct {
	Id                               *string `json:"id,omitempty"`
	IgnoreMissingVnetServiceEndpoint *bool   `json:"ignoreMissingVnetServiceEndpoint,omitempty"`
}

// Deprecated version of Permissions_Certificates. Use v1api20210401preview.Permissions_Certificates instead
// +kubebuilder:validation:Enum={"backup","create","delete","deleteissuers","get","getissuers","import","list","listissuers","managecontacts","manageissuers","purge","recover","restore","setissuers","update"}
type Permissions_Certificates string

const (
	Permissions_Certificates_Backup         = Permissions_Certificates("backup")
	Permissions_Certificates_Create         = Permissions_Certificates("create")
	Permissions_Certificates_Delete         = Permissions_Certificates("delete")
	Permissions_Certificates_Deleteissuers  = Permissions_Certificates("deleteissuers")
	Permissions_Certificates_Get            = Permissions_Certificates("get")
	Permissions_Certificates_Getissuers     = Permissions_Certificates("getissuers")
	Permissions_Certificates_Import         = Permissions_Certificates("import")
	Permissions_Certificates_List           = Permissions_Certificates("list")
	Permissions_Certificates_Listissuers    = Permissions_Certificates("listissuers")
	Permissions_Certificates_Managecontacts = Permissions_Certificates("managecontacts")
	Permissions_Certificates_Manageissuers  = Permissions_Certificates("manageissuers")
	Permissions_Certificates_Purge          = Permissions_Certificates("purge")
	Permissions_Certificates_Recover        = Permissions_Certificates("recover")
	Permissions_Certificates_Restore        = Permissions_Certificates("restore")
	Permissions_Certificates_Setissuers     = Permissions_Certificates("setissuers")
	Permissions_Certificates_Update         = Permissions_Certificates("update")
)

// Deprecated version of Permissions_Keys. Use v1api20210401preview.Permissions_Keys instead
// +kubebuilder:validation:Enum={"backup","create","decrypt","delete","encrypt","get","import","list","purge","recover","release","restore","sign","unwrapKey","update","verify","wrapKey"}
type Permissions_Keys string

const (
	Permissions_Keys_Backup    = Permissions_Keys("backup")
	Permissions_Keys_Create    = Permissions_Keys("create")
	Permissions_Keys_Decrypt   = Permissions_Keys("decrypt")
	Permissions_Keys_Delete    = Permissions_Keys("delete")
	Permissions_Keys_Encrypt   = Permissions_Keys("encrypt")
	Permissions_Keys_Get       = Permissions_Keys("get")
	Permissions_Keys_Import    = Permissions_Keys("import")
	Permissions_Keys_List      = Permissions_Keys("list")
	Permissions_Keys_Purge     = Permissions_Keys("purge")
	Permissions_Keys_Recover   = Permissions_Keys("recover")
	Permissions_Keys_Release   = Permissions_Keys("release")
	Permissions_Keys_Restore   = Permissions_Keys("restore")
	Permissions_Keys_Sign      = Permissions_Keys("sign")
	Permissions_Keys_UnwrapKey = Permissions_Keys("unwrapKey")
	Permissions_Keys_Update    = Permissions_Keys("update")
	Permissions_Keys_Verify    = Permissions_Keys("verify")
	Permissions_Keys_WrapKey   = Permissions_Keys("wrapKey")
)

// Deprecated version of Permissions_Secrets. Use v1api20210401preview.Permissions_Secrets instead
// +kubebuilder:validation:Enum={"backup","delete","get","list","purge","recover","restore","set"}
type Permissions_Secrets string

const (
	Permissions_Secrets_Backup  = Permissions_Secrets("backup")
	Permissions_Secrets_Delete  = Permissions_Secrets("delete")
	Permissions_Secrets_Get     = Permissions_Secrets("get")
	Permissions_Secrets_List    = Permissions_Secrets("list")
	Permissions_Secrets_Purge   = Permissions_Secrets("purge")
	Permissions_Secrets_Recover = Permissions_Secrets("recover")
	Permissions_Secrets_Restore = Permissions_Secrets("restore")
	Permissions_Secrets_Set     = Permissions_Secrets("set")
)

// Deprecated version of Permissions_Storage. Use v1api20210401preview.Permissions_Storage instead
// +kubebuilder:validation:Enum={"backup","delete","deletesas","get","getsas","list","listsas","purge","recover","regeneratekey","restore","set","setsas","update"}
type Permissions_Storage string

const (
	Permissions_Storage_Backup        = Permissions_Storage("backup")
	Permissions_Storage_Delete        = Permissions_Storage("delete")
	Permissions_Storage_Deletesas     = Permissions_Storage("deletesas")
	Permissions_Storage_Get           = Permissions_Storage("get")
	Permissions_Storage_Getsas        = Permissions_Storage("getsas")
	Permissions_Storage_List          = Permissions_Storage("list")
	Permissions_Storage_Listsas       = Permissions_Storage("listsas")
	Permissions_Storage_Purge         = Permissions_Storage("purge")
	Permissions_Storage_Recover       = Permissions_Storage("recover")
	Permissions_Storage_Regeneratekey = Permissions_Storage("regeneratekey")
	Permissions_Storage_Restore       = Permissions_Storage("restore")
	Permissions_Storage_Set           = Permissions_Storage("set")
	Permissions_Storage_Setsas        = Permissions_Storage("setsas")
	Permissions_Storage_Update        = Permissions_Storage("update")
)
