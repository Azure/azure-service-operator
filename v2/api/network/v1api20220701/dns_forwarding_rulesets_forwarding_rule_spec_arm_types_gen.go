// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20220701

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type DnsForwardingRulesets_ForwardingRule_Spec_ARM struct {
	Name string `json:"name,omitempty"`

	// Properties: Properties of the forwarding rule.
	Properties *ForwardingRuleProperties_ARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &DnsForwardingRulesets_ForwardingRule_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2022-07-01"
func (rule DnsForwardingRulesets_ForwardingRule_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (rule *DnsForwardingRulesets_ForwardingRule_Spec_ARM) GetName() string {
	return rule.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/dnsForwardingRulesets/forwardingRules"
func (rule *DnsForwardingRulesets_ForwardingRule_Spec_ARM) GetType() string {
	return "Microsoft.Network/dnsForwardingRulesets/forwardingRules"
}

// Represents the properties of a forwarding rule within a DNS forwarding ruleset.
type ForwardingRuleProperties_ARM struct {
	// DomainName: The domain name for the forwarding rule.
	DomainName *string `json:"domainName,omitempty"`

	// ForwardingRuleState: The state of forwarding rule.
	ForwardingRuleState *ForwardingRuleProperties_ForwardingRuleState `json:"forwardingRuleState,omitempty"`

	// Metadata: Metadata attached to the forwarding rule.
	Metadata map[string]string `json:"metadata,omitempty"`

	// TargetDnsServers: DNS servers to forward the DNS query to.
	TargetDnsServers []TargetDnsServer_ARM `json:"targetDnsServers,omitempty"`
}

// Describes a server to forward the DNS queries to.
type TargetDnsServer_ARM struct {
	// IpAddress: DNS server IP address.
	IpAddress *string `json:"ipAddress,omitempty" optionalConfigMapPair:"IpAddress"`

	// Port: DNS server port.
	Port *int `json:"port,omitempty"`
}
