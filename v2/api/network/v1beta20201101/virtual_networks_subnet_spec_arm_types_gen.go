// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20201101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type VirtualNetworks_Subnet_SpecARM struct {
<<<<<<< HEAD
	AzureName string  `json:"azureName,omitempty"`
	Id        *string `json:"id,omitempty"`

	// Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *SubnetPropertiesFormatARM `json:"properties,omitempty"`

	// Type: Resource type.
	Type *string `json:"type,omitempty"`
=======
	// Name: Name of the resource
	Name string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *VirtualNetworks_Subnet_Spec_PropertiesARM `json:"properties,omitempty"`
>>>>>>> main
}

var _ genruntime.ARMResourceSpec = &VirtualNetworks_Subnet_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-11-01"
func (subnet VirtualNetworks_Subnet_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (subnet *VirtualNetworks_Subnet_SpecARM) GetName() string {
	return subnet.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/virtualNetworks/subnets"
func (subnet *VirtualNetworks_Subnet_SpecARM) GetType() string {
	return "Microsoft.Network/virtualNetworks/subnets"
}

<<<<<<< HEAD
type SubnetPropertiesFormatARM struct {
=======
type VirtualNetworks_Subnet_Spec_PropertiesARM struct {
>>>>>>> main
	// AddressPrefix: The address prefix for the subnet.
	AddressPrefix *string `json:"addressPrefix,omitempty"`

	// AddressPrefixes: List of address prefixes for the subnet.
	AddressPrefixes []string `json:"addressPrefixes,omitempty"`

<<<<<<< HEAD
	// ApplicationGatewayIpConfigurations: Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIpConfigurations []ApplicationGatewayIPConfigurationARM `json:"applicationGatewayIpConfigurations,omitempty"`

	// Delegations: An array of references to the delegations on the subnet.
	Delegations []DelegationARM `json:"delegations,omitempty"`
=======
	// Delegations: An array of references to the delegations on the subnet.
	Delegations []VirtualNetworks_Subnet_Spec_Properties_DelegationsARM `json:"delegations,omitempty"`
>>>>>>> main

	// IpAllocations: Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceARM `json:"ipAllocations,omitempty"`

	// NatGateway: Nat gateway associated with this subnet.
	NatGateway *SubResourceARM `json:"natGateway,omitempty"`

	// NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
<<<<<<< HEAD
	NetworkSecurityGroup *NetworkSecurityGroupSpecARM `json:"networkSecurityGroup,omitempty"`

	// PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *SubnetPropertiesFormat_PrivateEndpointNetworkPolicies `json:"privateEndpointNetworkPolicies,omitempty"`

	// PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies `json:"privateLinkServiceNetworkPolicies,omitempty"`

	// RouteTable: The reference to the RouteTable resource.
	RouteTable *RouteTableSpecARM `json:"routeTable,omitempty"`

	// ServiceEndpointPolicies: An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicySpecARM `json:"serviceEndpointPolicies,omitempty"`
=======
	NetworkSecurityGroup *SubResourceARM `json:"networkSecurityGroup,omitempty"`

	// PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `json:"privateEndpointNetworkPolicies,omitempty"`

	// PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `json:"privateLinkServiceNetworkPolicies,omitempty"`

	// RouteTable: The reference to the RouteTable resource.
	RouteTable *SubResourceARM `json:"routeTable,omitempty"`

	// ServiceEndpointPolicies: An array of service endpoint policies.
	ServiceEndpointPolicies []SubResourceARM `json:"serviceEndpointPolicies,omitempty"`
>>>>>>> main

	// ServiceEndpoints: An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatARM `json:"serviceEndpoints,omitempty"`
}

<<<<<<< HEAD
type ApplicationGatewayIPConfigurationARM struct {
	Id *string `json:"id,omitempty"`

	// Name: Name of the IP configuration that is unique within an Application Gateway.
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the application gateway IP configuration.
	Properties *ApplicationGatewayIPConfigurationPropertiesFormatARM `json:"properties,omitempty"`
}

type DelegationARM struct {
	Id *string `json:"id,omitempty"`

	// Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormatARM `json:"properties,omitempty"`

	// Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type RouteTableSpecARM struct {
	Id *string `json:"id,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Properties: Properties of the route table.
	Properties *RouteTablePropertiesFormatARM `json:"properties,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

type ServiceEndpointPolicySpecARM struct {
	Id *string `json:"id,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Properties: Properties of the service end point policy.
	Properties *ServiceEndpointPolicyPropertiesFormatARM `json:"properties,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

=======
// Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ServiceEndpointPropertiesFormat
>>>>>>> main
type ServiceEndpointPropertiesFormatARM struct {
	// Locations: A list of locations.
	Locations []string `json:"locations,omitempty"`

	// Service: The type of the endpoint service.
	Service *string `json:"service,omitempty"`
}

<<<<<<< HEAD
type ApplicationGatewayIPConfigurationPropertiesFormatARM struct {
	// Subnet: Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceARM `json:"subnet,omitempty"`
}

=======
type VirtualNetworks_Subnet_Spec_Properties_DelegationsARM struct {
	// Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormatARM `json:"properties,omitempty"`
}

// Generated from: https://schema.management.azure.com/schemas/2020-11-01/Microsoft.Network.json#/definitions/ServiceDelegationPropertiesFormat
>>>>>>> main
type ServiceDelegationPropertiesFormatARM struct {
	// ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `json:"serviceName,omitempty"`
}
<<<<<<< HEAD

type ServiceEndpointPolicyPropertiesFormatARM struct {
	// ServiceEndpointPolicyDefinitions: A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionARM `json:"serviceEndpointPolicyDefinitions,omitempty"`
}

type ServiceEndpointPolicyDefinitionARM struct {
	Id *string `json:"id,omitempty"`

	// Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the service endpoint policy definition.
	Properties *ServiceEndpointPolicyDefinitionPropertiesFormatARM `json:"properties,omitempty"`
}

type ServiceEndpointPolicyDefinitionPropertiesFormatARM struct {
	// Description: A description for this rule. Restricted to 140 chars.
	Description *string `json:"description,omitempty"`

	// Service: Service endpoint name.
	Service *string `json:"service,omitempty"`

	// ServiceResources: A list of service resources.
	ServiceResources []string `json:"serviceResources,omitempty"`
}
=======
>>>>>>> main
