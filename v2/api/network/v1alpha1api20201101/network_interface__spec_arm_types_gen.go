// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type NetworkInterface_SpecARM struct {
	AzureName string `json:"azureName"`

	//ExtendedLocation: The extended location of the network interface.
	ExtendedLocation *ExtendedLocationARM `json:"extendedLocation,omitempty"`
	Id               *string              `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`
	Name     string  `json:"name"`

	//Properties: Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormatARM `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &NetworkInterface_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-11-01"
func (networkInterface NetworkInterface_SpecARM) GetAPIVersion() string {
	return string(APIVersionValue)
}

// GetName returns the Name of the resource
func (networkInterface NetworkInterface_SpecARM) GetName() string {
	return networkInterface.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/networkInterfaces"
func (networkInterface NetworkInterface_SpecARM) GetType() string {
	return "Microsoft.Network/networkInterfaces"
}

type NetworkInterfacePropertiesFormatARM struct {
	//DnsSettings: The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsARM `json:"dnsSettings,omitempty"`

	//EnableAcceleratedNetworking: If the network interface is accelerated networking
	//enabled.
	EnableAcceleratedNetworking *bool `json:"enableAcceleratedNetworking,omitempty"`

	//EnableIPForwarding: Indicates whether IP forwarding is enabled on this network
	//interface.
	EnableIPForwarding *bool `json:"enableIPForwarding,omitempty"`

	//IpConfigurations: A list of IPConfigurations of the network interface.
	IpConfigurations []genruntime.ResourceReference `json:"ipConfigurations,omitempty"`

	//MigrationPhase: Migration phase of Network Interface resource.
	MigrationPhase *NetworkInterfacePropertiesFormatMigrationPhase `json:"migrationPhase,omitempty"`

	//NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupSpecARM `json:"networkSecurityGroup,omitempty"`

	//NicType: Type of Network Interface resource.
	NicType *NetworkInterfacePropertiesFormatNicType `json:"nicType,omitempty"`

	//PrivateLinkService: Privatelinkservice of the network interface resource.
	PrivateLinkService *PrivateLinkServiceSpecARM `json:"privateLinkService,omitempty"`
}

type NetworkInterfaceDnsSettingsARM struct {
	//DnsServers: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch
	//to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined
	//with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `json:"dnsServers,omitempty"`

	//InternalDnsNameLabel: Relative DNS name for this NIC used for internal
	//communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `json:"internalDnsNameLabel,omitempty"`
}

type NetworkSecurityGroupSpecARM struct {
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Properties: Properties of the network security group.
	Properties *NetworkSecurityGroupPropertiesFormatARM `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

type PrivateLinkServiceSpecARM struct {
	//ExtendedLocation: The extended location of the load balancer.
	ExtendedLocation *ExtendedLocationARM `json:"extendedLocation,omitempty"`
	Id               *string              `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Properties: Properties of the private link service.
	Properties *PrivateLinkServicePropertiesARM `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

type PrivateLinkServicePropertiesARM struct {
	//AutoApproval: The auto-approval list of the private link service.
	AutoApproval *ResourceSetARM `json:"autoApproval,omitempty"`

	//EnableProxyProtocol: Whether the private link service is enabled for proxy
	//protocol or not.
	EnableProxyProtocol *bool `json:"enableProxyProtocol,omitempty"`

	//Fqdns: The list of Fqdn.
	Fqdns []string `json:"fqdns,omitempty"`

	//IpConfigurations: An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfigurationARM `json:"ipConfigurations,omitempty"`

	//LoadBalancerFrontendIpConfigurations: An array of references to the load
	//balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []FrontendIPConfigurationARM `json:"loadBalancerFrontendIpConfigurations,omitempty"`

	//Visibility: The visibility list of the private link service.
	Visibility *ResourceSetARM `json:"visibility,omitempty"`
}

type PrivateLinkServiceIpConfigurationARM struct {
	Id *string `json:"id,omitempty"`

	//Name: The name of private link service ip configuration.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the private link service ip configuration.
	Properties *PrivateLinkServiceIpConfigurationPropertiesARM `json:"properties,omitempty"`
}

type ResourceSetARM struct {
	//Subscriptions: The list of subscriptions.
	Subscriptions []string `json:"subscriptions,omitempty"`
}

type PrivateLinkServiceIpConfigurationPropertiesARM struct {
	//Primary: Whether the ip configuration is primary or not.
	Primary *bool `json:"primary,omitempty"`

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6.
	//Default is IPv4.
	PrivateIPAddressVersion *IPVersion `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`
	Subnet                    *string             `json:"subnet,omitempty"`
}
