// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20201101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type LoadBalancersInboundNatRule_Spec_ARM struct {
	// Name: The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name
	// can be used to access the resource.
	Name string `json:"name,omitempty"`

	// Properties: Properties of load balancer inbound nat rule.
	Properties *InboundNatRulePropertiesFormat_ARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &LoadBalancersInboundNatRule_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-11-01"
func (rule LoadBalancersInboundNatRule_Spec_ARM) GetAPIVersion() string {
	return "2020-11-01"
}

// GetName returns the Name of the resource
func (rule *LoadBalancersInboundNatRule_Spec_ARM) GetName() string {
	return rule.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/loadBalancers/inboundNatRules"
func (rule *LoadBalancersInboundNatRule_Spec_ARM) GetType() string {
	return "Microsoft.Network/loadBalancers/inboundNatRules"
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormat_ARM struct {
	// BackendPort: The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `json:"backendPort,omitempty"`

	// EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL
	// AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.
	// This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `json:"enableFloatingIP,omitempty"`

	// EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This
	// element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	// FrontendIPConfiguration: A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource_ARM `json:"frontendIPConfiguration,omitempty"`

	// FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer.
	// Acceptable values range from 1 to 65534.
	FrontendPort *int `json:"frontendPort,omitempty"`

	// IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The
	// default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	// Protocol: The reference to the transport protocol used by the load balancing rule.
	Protocol *TransportProtocol_ARM `json:"protocol,omitempty"`
}

// Reference to another subresource.
type SubResource_ARM struct {
	Id *string `json:"id,omitempty"`
}

// The transport protocol for the endpoint.
// +kubebuilder:validation:Enum={"All","Tcp","Udp"}
type TransportProtocol_ARM string

const (
	TransportProtocol_ARM_All = TransportProtocol_ARM("All")
	TransportProtocol_ARM_Tcp = TransportProtocol_ARM("Tcp")
	TransportProtocol_ARM_Udp = TransportProtocol_ARM("Udp")
)

// Mapping from string to TransportProtocol_ARM
var transportProtocol_ARM_Values = map[string]TransportProtocol_ARM{
	"all": TransportProtocol_ARM_All,
	"tcp": TransportProtocol_ARM_Tcp,
	"udp": TransportProtocol_ARM_Udp,
}
