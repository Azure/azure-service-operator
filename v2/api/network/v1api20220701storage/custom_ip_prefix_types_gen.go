// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20220701storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=network.azure.com,resources=customipprefixes,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=network.azure.com,resources={customipprefixes/status,customipprefixes/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20220701.CustomIpPrefix
// Generator information:
// - Generated from: /network/resource-manager/Microsoft.Network/stable/2022-07-01/customIpPrefix.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}
type CustomIpPrefix struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CustomIpPrefix_Spec   `json:"spec,omitempty"`
	Status            CustomIpPrefix_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &CustomIpPrefix{}

// GetConditions returns the conditions of the resource
func (prefix *CustomIpPrefix) GetConditions() conditions.Conditions {
	return prefix.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (prefix *CustomIpPrefix) SetConditions(conditions conditions.Conditions) {
	prefix.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &CustomIpPrefix{}

// AzureName returns the Azure name of the resource
func (prefix *CustomIpPrefix) AzureName() string {
	return prefix.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2022-07-01"
func (prefix CustomIpPrefix) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetResourceScope returns the scope of the resource
func (prefix *CustomIpPrefix) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (prefix *CustomIpPrefix) GetSpec() genruntime.ConvertibleSpec {
	return &prefix.Spec
}

// GetStatus returns the status of this resource
func (prefix *CustomIpPrefix) GetStatus() genruntime.ConvertibleStatus {
	return &prefix.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/customIpPrefixes"
func (prefix *CustomIpPrefix) GetType() string {
	return "Microsoft.Network/customIpPrefixes"
}

// NewEmptyStatus returns a new empty (blank) status
func (prefix *CustomIpPrefix) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &CustomIpPrefix_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (prefix *CustomIpPrefix) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(prefix.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  prefix.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (prefix *CustomIpPrefix) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*CustomIpPrefix_STATUS); ok {
		prefix.Status = *st
		return nil
	}

	// Convert status to required version
	var st CustomIpPrefix_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	prefix.Status = st
	return nil
}

// Hub marks that this CustomIpPrefix is the hub type for conversion
func (prefix *CustomIpPrefix) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (prefix *CustomIpPrefix) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: prefix.Spec.OriginalVersion,
		Kind:    "CustomIpPrefix",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20220701.CustomIpPrefix
// Generator information:
// - Generated from: /network/resource-manager/Microsoft.Network/stable/2022-07-01/customIpPrefix.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}
type CustomIpPrefixList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomIpPrefix `json:"items"`
}

// Storage version of v1api20220701.APIVersion
// +kubebuilder:validation:Enum={"2022-07-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2022-07-01")

// Storage version of v1api20220701.CustomIpPrefix_Spec
type CustomIpPrefix_Spec struct {
	Asn                  *string `json:"asn,omitempty"`
	AuthorizationMessage *string `json:"authorizationMessage,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName             string                     `json:"azureName,omitempty"`
	Cidr                  *string                    `json:"cidr,omitempty"`
	CommissionedState     *string                    `json:"commissionedState,omitempty"`
	CustomIpPrefixParent  *CustomIpPrefixSubResource `json:"customIpPrefixParent,omitempty"`
	ExpressRouteAdvertise *bool                      `json:"expressRouteAdvertise,omitempty"`
	ExtendedLocation      *ExtendedLocation          `json:"extendedLocation,omitempty"`
	Geo                   *string                    `json:"geo,omitempty"`
	Location              *string                    `json:"location,omitempty"`
	NoInternetAdvertise   *bool                      `json:"noInternetAdvertise,omitempty"`
	OriginalVersion       string                     `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a resources.azure.com/ResourceGroup resource
	Owner         *genruntime.KnownResourceReference `group:"resources.azure.com" json:"owner,omitempty" kind:"ResourceGroup"`
	PrefixType    *string                            `json:"prefixType,omitempty"`
	PropertyBag   genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	SignedMessage *string                            `json:"signedMessage,omitempty"`
	Tags          map[string]string                  `json:"tags,omitempty"`
	Zones         []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &CustomIpPrefix_Spec{}

// ConvertSpecFrom populates our CustomIpPrefix_Spec from the provided source
func (prefix *CustomIpPrefix_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == prefix {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(prefix)
}

// ConvertSpecTo populates the provided destination from our CustomIpPrefix_Spec
func (prefix *CustomIpPrefix_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == prefix {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(prefix)
}

// Storage version of v1api20220701.CustomIpPrefix_STATUS
// Custom IP prefix resource.
type CustomIpPrefix_STATUS struct {
	Asn                   *string                            `json:"asn,omitempty"`
	AuthorizationMessage  *string                            `json:"authorizationMessage,omitempty"`
	ChildCustomIpPrefixes []CustomIpPrefixSubResource_STATUS `json:"childCustomIpPrefixes,omitempty"`
	Cidr                  *string                            `json:"cidr,omitempty"`
	CommissionedState     *string                            `json:"commissionedState,omitempty"`
	Conditions            []conditions.Condition             `json:"conditions,omitempty"`
	CustomIpPrefixParent  *CustomIpPrefixSubResource_STATUS  `json:"customIpPrefixParent,omitempty"`
	Etag                  *string                            `json:"etag,omitempty"`
	ExpressRouteAdvertise *bool                              `json:"expressRouteAdvertise,omitempty"`
	ExtendedLocation      *ExtendedLocation_STATUS           `json:"extendedLocation,omitempty"`
	FailedReason          *string                            `json:"failedReason,omitempty"`
	Geo                   *string                            `json:"geo,omitempty"`
	Id                    *string                            `json:"id,omitempty"`
	Location              *string                            `json:"location,omitempty"`
	Name                  *string                            `json:"name,omitempty"`
	NoInternetAdvertise   *bool                              `json:"noInternetAdvertise,omitempty"`
	PrefixType            *string                            `json:"prefixType,omitempty"`
	PropertyBag           genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	ProvisioningState     *string                            `json:"provisioningState,omitempty"`
	PublicIpPrefixes      []CustomIpPrefixSubResource_STATUS `json:"publicIpPrefixes,omitempty"`
	ResourceGuid          *string                            `json:"resourceGuid,omitempty"`
	SignedMessage         *string                            `json:"signedMessage,omitempty"`
	Tags                  map[string]string                  `json:"tags,omitempty"`
	Type                  *string                            `json:"type,omitempty"`
	Zones                 []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &CustomIpPrefix_STATUS{}

// ConvertStatusFrom populates our CustomIpPrefix_STATUS from the provided source
func (prefix *CustomIpPrefix_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == prefix {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(prefix)
}

// ConvertStatusTo populates the provided destination from our CustomIpPrefix_STATUS
func (prefix *CustomIpPrefix_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == prefix {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(prefix)
}

// Storage version of v1api20220701.CustomIpPrefixSubResource
// Reference to another subresource.
type CustomIpPrefixSubResource struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	// Reference: Resource ID.
	Reference *genruntime.ResourceReference `armReference:"Id" json:"reference,omitempty"`
}

// Storage version of v1api20220701.CustomIpPrefixSubResource_STATUS
// Reference to another subresource.
type CustomIpPrefixSubResource_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220701.ExtendedLocation
// ExtendedLocation complex type.
type ExtendedLocation struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1api20220701.ExtendedLocation_STATUS
// ExtendedLocation complex type.
type ExtendedLocation_STATUS struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

func init() {
	SchemeBuilder.Register(&CustomIpPrefix{}, &CustomIpPrefixList{})
}
