// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/rotisserie/eris"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=network.azure.com,resources=firewallpoliciesrulecollectiongroups,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=network.azure.com,resources={firewallpoliciesrulecollectiongroups/status,firewallpoliciesrulecollectiongroups/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:resource:categories={azure,network}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20240301.FirewallPoliciesRuleCollectionGroup
// Generator information:
// - Generated from: /network/resource-manager/Microsoft.Network/stable/2024-03-01/firewallPolicy.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}
type FirewallPoliciesRuleCollectionGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallPoliciesRuleCollectionGroup_Spec   `json:"spec,omitempty"`
	Status            FirewallPoliciesRuleCollectionGroup_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &FirewallPoliciesRuleCollectionGroup{}

// GetConditions returns the conditions of the resource
func (group *FirewallPoliciesRuleCollectionGroup) GetConditions() conditions.Conditions {
	return group.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (group *FirewallPoliciesRuleCollectionGroup) SetConditions(conditions conditions.Conditions) {
	group.Status.Conditions = conditions
}

var _ configmaps.Exporter = &FirewallPoliciesRuleCollectionGroup{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (group *FirewallPoliciesRuleCollectionGroup) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if group.Spec.OperatorSpec == nil {
		return nil
	}
	return group.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &FirewallPoliciesRuleCollectionGroup{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (group *FirewallPoliciesRuleCollectionGroup) SecretDestinationExpressions() []*core.DestinationExpression {
	if group.Spec.OperatorSpec == nil {
		return nil
	}
	return group.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &FirewallPoliciesRuleCollectionGroup{}

// AzureName returns the Azure name of the resource
func (group *FirewallPoliciesRuleCollectionGroup) AzureName() string {
	return group.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2024-03-01"
func (group FirewallPoliciesRuleCollectionGroup) GetAPIVersion() string {
	return "2024-03-01"
}

// GetResourceScope returns the scope of the resource
func (group *FirewallPoliciesRuleCollectionGroup) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (group *FirewallPoliciesRuleCollectionGroup) GetSpec() genruntime.ConvertibleSpec {
	return &group.Spec
}

// GetStatus returns the status of this resource
func (group *FirewallPoliciesRuleCollectionGroup) GetStatus() genruntime.ConvertibleStatus {
	return &group.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (group *FirewallPoliciesRuleCollectionGroup) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/firewallPolicies/ruleCollectionGroups"
func (group *FirewallPoliciesRuleCollectionGroup) GetType() string {
	return "Microsoft.Network/firewallPolicies/ruleCollectionGroups"
}

// NewEmptyStatus returns a new empty (blank) status
func (group *FirewallPoliciesRuleCollectionGroup) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &FirewallPoliciesRuleCollectionGroup_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (group *FirewallPoliciesRuleCollectionGroup) Owner() *genruntime.ResourceReference {
	if group.Spec.Owner == nil {
		return nil
	}

	ownerGroup, ownerKind := genruntime.LookupOwnerGroupKind(group.Spec)
	return group.Spec.Owner.AsResourceReference(ownerGroup, ownerKind)
}

// SetStatus sets the status of this resource
func (group *FirewallPoliciesRuleCollectionGroup) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*FirewallPoliciesRuleCollectionGroup_STATUS); ok {
		group.Status = *st
		return nil
	}

	// Convert status to required version
	var st FirewallPoliciesRuleCollectionGroup_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return eris.Wrap(err, "failed to convert status")
	}

	group.Status = st
	return nil
}

// Hub marks that this FirewallPoliciesRuleCollectionGroup is the hub type for conversion
func (group *FirewallPoliciesRuleCollectionGroup) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (group *FirewallPoliciesRuleCollectionGroup) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: group.Spec.OriginalVersion,
		Kind:    "FirewallPoliciesRuleCollectionGroup",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20240301.FirewallPoliciesRuleCollectionGroup
// Generator information:
// - Generated from: /network/resource-manager/Microsoft.Network/stable/2024-03-01/firewallPolicy.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}
type FirewallPoliciesRuleCollectionGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallPoliciesRuleCollectionGroup `json:"items"`
}

// Storage version of v1api20240301.FirewallPoliciesRuleCollectionGroup_Spec
type FirewallPoliciesRuleCollectionGroup_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string                                           `json:"azureName,omitempty"`
	OperatorSpec    *FirewallPoliciesRuleCollectionGroupOperatorSpec `json:"operatorSpec,omitempty"`
	OriginalVersion string                                           `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a network.azure.com/FirewallPolicy resource
	Owner           *genruntime.KnownResourceReference `group:"network.azure.com" json:"owner,omitempty" kind:"FirewallPolicy"`
	Priority        *int                               `json:"priority,omitempty"`
	PropertyBag     genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	RuleCollections []FirewallPolicyRuleCollection     `json:"ruleCollections,omitempty"`
}

var _ genruntime.ConvertibleSpec = &FirewallPoliciesRuleCollectionGroup_Spec{}

// ConvertSpecFrom populates our FirewallPoliciesRuleCollectionGroup_Spec from the provided source
func (group *FirewallPoliciesRuleCollectionGroup_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(group)
}

// ConvertSpecTo populates the provided destination from our FirewallPoliciesRuleCollectionGroup_Spec
func (group *FirewallPoliciesRuleCollectionGroup_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(group)
}

// Storage version of v1api20240301.FirewallPoliciesRuleCollectionGroup_STATUS
type FirewallPoliciesRuleCollectionGroup_STATUS struct {
	Conditions        []conditions.Condition                `json:"conditions,omitempty"`
	Etag              *string                               `json:"etag,omitempty"`
	Id                *string                               `json:"id,omitempty"`
	Name              *string                               `json:"name,omitempty"`
	Priority          *int                                  `json:"priority,omitempty"`
	PropertyBag       genruntime.PropertyBag                `json:"$propertyBag,omitempty"`
	ProvisioningState *string                               `json:"provisioningState,omitempty"`
	RuleCollections   []FirewallPolicyRuleCollection_STATUS `json:"ruleCollections,omitempty"`
	Size              *string                               `json:"size,omitempty"`
	Type              *string                               `json:"type,omitempty"`
}

var _ genruntime.ConvertibleStatus = &FirewallPoliciesRuleCollectionGroup_STATUS{}

// ConvertStatusFrom populates our FirewallPoliciesRuleCollectionGroup_STATUS from the provided source
func (group *FirewallPoliciesRuleCollectionGroup_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(group)
}

// ConvertStatusTo populates the provided destination from our FirewallPoliciesRuleCollectionGroup_STATUS
func (group *FirewallPoliciesRuleCollectionGroup_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(group)
}

// Storage version of v1api20240301.FirewallPoliciesRuleCollectionGroupOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type FirewallPoliciesRuleCollectionGroupOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRuleCollection
type FirewallPolicyRuleCollection struct {
	FirewallPolicyFilter *FirewallPolicyFilterRuleCollection `json:"firewallPolicyFilterRuleCollection,omitempty"`
	FirewallPolicyNat    *FirewallPolicyNatRuleCollection    `json:"firewallPolicyNatRuleCollection,omitempty"`
	PropertyBag          genruntime.PropertyBag              `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRuleCollection_STATUS
type FirewallPolicyRuleCollection_STATUS struct {
	FirewallPolicyFilter *FirewallPolicyFilterRuleCollection_STATUS `json:"firewallPolicyFilterRuleCollection,omitempty"`
	FirewallPolicyNat    *FirewallPolicyNatRuleCollection_STATUS    `json:"firewallPolicyNatRuleCollection,omitempty"`
	PropertyBag          genruntime.PropertyBag                     `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyFilterRuleCollection
type FirewallPolicyFilterRuleCollection struct {
	Action             *FirewallPolicyFilterRuleCollectionAction `json:"action,omitempty"`
	Name               *string                                   `json:"name,omitempty"`
	Priority           *int                                      `json:"priority,omitempty"`
	PropertyBag        genruntime.PropertyBag                    `json:"$propertyBag,omitempty"`
	RuleCollectionType *string                                   `json:"ruleCollectionType,omitempty"`
	Rules              []FirewallPolicyRule                      `json:"rules,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyFilterRuleCollection_STATUS
type FirewallPolicyFilterRuleCollection_STATUS struct {
	Action             *FirewallPolicyFilterRuleCollectionAction_STATUS `json:"action,omitempty"`
	Name               *string                                          `json:"name,omitempty"`
	Priority           *int                                             `json:"priority,omitempty"`
	PropertyBag        genruntime.PropertyBag                           `json:"$propertyBag,omitempty"`
	RuleCollectionType *string                                          `json:"ruleCollectionType,omitempty"`
	Rules              []FirewallPolicyRule_STATUS                      `json:"rules,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyNatRuleCollection
type FirewallPolicyNatRuleCollection struct {
	Action             *FirewallPolicyNatRuleCollectionAction `json:"action,omitempty"`
	Name               *string                                `json:"name,omitempty"`
	Priority           *int                                   `json:"priority,omitempty"`
	PropertyBag        genruntime.PropertyBag                 `json:"$propertyBag,omitempty"`
	RuleCollectionType *string                                `json:"ruleCollectionType,omitempty"`
	Rules              []FirewallPolicyRule                   `json:"rules,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyNatRuleCollection_STATUS
type FirewallPolicyNatRuleCollection_STATUS struct {
	Action             *FirewallPolicyNatRuleCollectionAction_STATUS `json:"action,omitempty"`
	Name               *string                                       `json:"name,omitempty"`
	Priority           *int                                          `json:"priority,omitempty"`
	PropertyBag        genruntime.PropertyBag                        `json:"$propertyBag,omitempty"`
	RuleCollectionType *string                                       `json:"ruleCollectionType,omitempty"`
	Rules              []FirewallPolicyRule_STATUS                   `json:"rules,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyFilterRuleCollectionAction
// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionAction struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyFilterRuleCollectionAction_STATUS
// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionAction_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyNatRuleCollectionAction
// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionAction struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyNatRuleCollectionAction_STATUS
// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionAction_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRule
type FirewallPolicyRule struct {
	Application *ApplicationRule       `json:"applicationRule,omitempty"`
	Nat         *NatRule               `json:"natRule,omitempty"`
	Network     *NetworkRule           `json:"networkRule,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRule_STATUS
type FirewallPolicyRule_STATUS struct {
	Application *ApplicationRule_STATUS `json:"applicationRule,omitempty"`
	Nat         *NatRule_STATUS         `json:"natRule,omitempty"`
	Network     *NetworkRule_STATUS     `json:"networkRule,omitempty"`
	PropertyBag genruntime.PropertyBag  `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.ApplicationRule
type ApplicationRule struct {
	Description          *string                                 `json:"description,omitempty"`
	DestinationAddresses []string                                `json:"destinationAddresses,omitempty"`
	FqdnTags             []string                                `json:"fqdnTags,omitempty"`
	HttpHeadersToInsert  []FirewallPolicyHttpHeaderToInsert      `json:"httpHeadersToInsert,omitempty"`
	Name                 *string                                 `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag                  `json:"$propertyBag,omitempty"`
	Protocols            []FirewallPolicyRuleApplicationProtocol `json:"protocols,omitempty"`
	RuleType             *string                                 `json:"ruleType,omitempty"`
	SourceAddresses      []string                                `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string                                `json:"sourceIpGroups,omitempty"`
	TargetFqdns          []string                                `json:"targetFqdns,omitempty"`
	TargetUrls           []string                                `json:"targetUrls,omitempty"`
	TerminateTLS         *bool                                   `json:"terminateTLS,omitempty"`
	WebCategories        []string                                `json:"webCategories,omitempty"`
}

// Storage version of v1api20240301.ApplicationRule_STATUS
type ApplicationRule_STATUS struct {
	Description          *string                                        `json:"description,omitempty"`
	DestinationAddresses []string                                       `json:"destinationAddresses,omitempty"`
	FqdnTags             []string                                       `json:"fqdnTags,omitempty"`
	HttpHeadersToInsert  []FirewallPolicyHttpHeaderToInsert_STATUS      `json:"httpHeadersToInsert,omitempty"`
	Name                 *string                                        `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag                         `json:"$propertyBag,omitempty"`
	Protocols            []FirewallPolicyRuleApplicationProtocol_STATUS `json:"protocols,omitempty"`
	RuleType             *string                                        `json:"ruleType,omitempty"`
	SourceAddresses      []string                                       `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string                                       `json:"sourceIpGroups,omitempty"`
	TargetFqdns          []string                                       `json:"targetFqdns,omitempty"`
	TargetUrls           []string                                       `json:"targetUrls,omitempty"`
	TerminateTLS         *bool                                          `json:"terminateTLS,omitempty"`
	WebCategories        []string                                       `json:"webCategories,omitempty"`
}

// Storage version of v1api20240301.NatRule
type NatRule struct {
	Description          *string                `json:"description,omitempty"`
	DestinationAddresses []string               `json:"destinationAddresses,omitempty"`
	DestinationPorts     []string               `json:"destinationPorts,omitempty"`
	IpProtocols          []string               `json:"ipProtocols,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RuleType             *string                `json:"ruleType,omitempty"`
	SourceAddresses      []string               `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string               `json:"sourceIpGroups,omitempty"`
	TranslatedAddress    *string                `json:"translatedAddress,omitempty"`
	TranslatedFqdn       *string                `json:"translatedFqdn,omitempty"`
	TranslatedPort       *string                `json:"translatedPort,omitempty"`
}

// Storage version of v1api20240301.NatRule_STATUS
type NatRule_STATUS struct {
	Description          *string                `json:"description,omitempty"`
	DestinationAddresses []string               `json:"destinationAddresses,omitempty"`
	DestinationPorts     []string               `json:"destinationPorts,omitempty"`
	IpProtocols          []string               `json:"ipProtocols,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RuleType             *string                `json:"ruleType,omitempty"`
	SourceAddresses      []string               `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string               `json:"sourceIpGroups,omitempty"`
	TranslatedAddress    *string                `json:"translatedAddress,omitempty"`
	TranslatedFqdn       *string                `json:"translatedFqdn,omitempty"`
	TranslatedPort       *string                `json:"translatedPort,omitempty"`
}

// Storage version of v1api20240301.NetworkRule
type NetworkRule struct {
	Description          *string                `json:"description,omitempty"`
	DestinationAddresses []string               `json:"destinationAddresses,omitempty"`
	DestinationFqdns     []string               `json:"destinationFqdns,omitempty"`
	DestinationIpGroups  []string               `json:"destinationIpGroups,omitempty"`
	DestinationPorts     []string               `json:"destinationPorts,omitempty"`
	IpProtocols          []string               `json:"ipProtocols,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RuleType             *string                `json:"ruleType,omitempty"`
	SourceAddresses      []string               `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string               `json:"sourceIpGroups,omitempty"`
}

// Storage version of v1api20240301.NetworkRule_STATUS
type NetworkRule_STATUS struct {
	Description          *string                `json:"description,omitempty"`
	DestinationAddresses []string               `json:"destinationAddresses,omitempty"`
	DestinationFqdns     []string               `json:"destinationFqdns,omitempty"`
	DestinationIpGroups  []string               `json:"destinationIpGroups,omitempty"`
	DestinationPorts     []string               `json:"destinationPorts,omitempty"`
	IpProtocols          []string               `json:"ipProtocols,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RuleType             *string                `json:"ruleType,omitempty"`
	SourceAddresses      []string               `json:"sourceAddresses,omitempty"`
	SourceIpGroups       []string               `json:"sourceIpGroups,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyHttpHeaderToInsert
// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsert struct {
	HeaderName  *string                `json:"headerName,omitempty"`
	HeaderValue *string                `json:"headerValue,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyHttpHeaderToInsert_STATUS
// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsert_STATUS struct {
	HeaderName  *string                `json:"headerName,omitempty"`
	HeaderValue *string                `json:"headerValue,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRuleApplicationProtocol
// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocol struct {
	Port         *int                   `json:"port,omitempty"`
	PropertyBag  genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ProtocolType *string                `json:"protocolType,omitempty"`
}

// Storage version of v1api20240301.FirewallPolicyRuleApplicationProtocol_STATUS
// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocol_STATUS struct {
	Port         *int                   `json:"port,omitempty"`
	PropertyBag  genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ProtocolType *string                `json:"protocolType,omitempty"`
}

func init() {
	SchemeBuilder.Register(&FirewallPoliciesRuleCollectionGroup{}, &FirewallPoliciesRuleCollectionGroupList{})
}
