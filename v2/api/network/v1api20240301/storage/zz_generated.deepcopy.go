//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSpace) DeepCopyInto(out *AddressSpace) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSpace.
func (in *AddressSpace) DeepCopy() *AddressSpace {
	if in == nil {
		return nil
	}
	out := new(AddressSpace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSpace_STATUS) DeepCopyInto(out *AddressSpace_STATUS) {
	*out = *in
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSpace_STATUS.
func (in *AddressSpace_STATUS) DeepCopy() *AddressSpace_STATUS {
	if in == nil {
		return nil
	}
	out := new(AddressSpace_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded.
func (in *ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded) DeepCopy() *ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRule) DeepCopyInto(out *ApplicationRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FqdnTags != nil {
		in, out := &in.FqdnTags, &out.FqdnTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HttpHeadersToInsert != nil {
		in, out := &in.HttpHeadersToInsert, &out.HttpHeadersToInsert
		*out = make([]FirewallPolicyHttpHeaderToInsert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]FirewallPolicyRuleApplicationProtocol, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetFqdns != nil {
		in, out := &in.TargetFqdns, &out.TargetFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetUrls != nil {
		in, out := &in.TargetUrls, &out.TargetUrls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TerminateTLS != nil {
		in, out := &in.TerminateTLS, &out.TerminateTLS
		*out = new(bool)
		**out = **in
	}
	if in.WebCategories != nil {
		in, out := &in.WebCategories, &out.WebCategories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRule.
func (in *ApplicationRule) DeepCopy() *ApplicationRule {
	if in == nil {
		return nil
	}
	out := new(ApplicationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRule_STATUS) DeepCopyInto(out *ApplicationRule_STATUS) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FqdnTags != nil {
		in, out := &in.FqdnTags, &out.FqdnTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HttpHeadersToInsert != nil {
		in, out := &in.HttpHeadersToInsert, &out.HttpHeadersToInsert
		*out = make([]FirewallPolicyHttpHeaderToInsert_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]FirewallPolicyRuleApplicationProtocol_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetFqdns != nil {
		in, out := &in.TargetFqdns, &out.TargetFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetUrls != nil {
		in, out := &in.TargetUrls, &out.TargetUrls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TerminateTLS != nil {
		in, out := &in.TerminateTLS, &out.TerminateTLS
		*out = new(bool)
		**out = **in
	}
	if in.WebCategories != nil {
		in, out := &in.WebCategories, &out.WebCategories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRule_STATUS.
func (in *ApplicationRule_STATUS) DeepCopy() *ApplicationRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(ApplicationRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded.
func (in *ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded.
func (in *ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded.
func (in *ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded.
func (in *ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded.
func (in *ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewall) DeepCopyInto(out *AzureFirewall) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewall.
func (in *AzureFirewall) DeepCopy() *AzureFirewall {
	if in == nil {
		return nil
	}
	out := new(AzureFirewall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureFirewall) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallApplicationRule) DeepCopyInto(out *AzureFirewallApplicationRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FqdnTags != nil {
		in, out := &in.FqdnTags, &out.FqdnTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]AzureFirewallApplicationRuleProtocol, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetFqdns != nil {
		in, out := &in.TargetFqdns, &out.TargetFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallApplicationRule.
func (in *AzureFirewallApplicationRule) DeepCopy() *AzureFirewallApplicationRule {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallApplicationRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallApplicationRuleCollection) DeepCopyInto(out *AzureFirewallApplicationRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(AzureFirewallRCAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AzureFirewallApplicationRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallApplicationRuleCollection.
func (in *AzureFirewallApplicationRuleCollection) DeepCopy() *AzureFirewallApplicationRuleCollection {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallApplicationRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallApplicationRuleCollection_STATUS) DeepCopyInto(out *AzureFirewallApplicationRuleCollection_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallApplicationRuleCollection_STATUS.
func (in *AzureFirewallApplicationRuleCollection_STATUS) DeepCopy() *AzureFirewallApplicationRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallApplicationRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallApplicationRuleProtocol) DeepCopyInto(out *AzureFirewallApplicationRuleProtocol) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallApplicationRuleProtocol.
func (in *AzureFirewallApplicationRuleProtocol) DeepCopy() *AzureFirewallApplicationRuleProtocol {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallApplicationRuleProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallAutoscaleConfiguration) DeepCopyInto(out *AzureFirewallAutoscaleConfiguration) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallAutoscaleConfiguration.
func (in *AzureFirewallAutoscaleConfiguration) DeepCopy() *AzureFirewallAutoscaleConfiguration {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallAutoscaleConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallAutoscaleConfiguration_STATUS) DeepCopyInto(out *AzureFirewallAutoscaleConfiguration_STATUS) {
	*out = *in
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(int)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallAutoscaleConfiguration_STATUS.
func (in *AzureFirewallAutoscaleConfiguration_STATUS) DeepCopy() *AzureFirewallAutoscaleConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallAutoscaleConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallIPConfiguration) DeepCopyInto(out *AzureFirewallIPConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallIPConfiguration.
func (in *AzureFirewallIPConfiguration) DeepCopy() *AzureFirewallIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallIPConfiguration_STATUS) DeepCopyInto(out *AzureFirewallIPConfiguration_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallIPConfiguration_STATUS.
func (in *AzureFirewallIPConfiguration_STATUS) DeepCopy() *AzureFirewallIPConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallIPConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallIpGroups_STATUS) DeepCopyInto(out *AzureFirewallIpGroups_STATUS) {
	*out = *in
	if in.ChangeNumber != nil {
		in, out := &in.ChangeNumber, &out.ChangeNumber
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallIpGroups_STATUS.
func (in *AzureFirewallIpGroups_STATUS) DeepCopy() *AzureFirewallIpGroups_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallIpGroups_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallList) DeepCopyInto(out *AzureFirewallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureFirewall, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallList.
func (in *AzureFirewallList) DeepCopy() *AzureFirewallList {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureFirewallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNatRCAction) DeepCopyInto(out *AzureFirewallNatRCAction) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNatRCAction.
func (in *AzureFirewallNatRCAction) DeepCopy() *AzureFirewallNatRCAction {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNatRCAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNatRule) DeepCopyInto(out *AzureFirewallNatRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TranslatedAddress != nil {
		in, out := &in.TranslatedAddress, &out.TranslatedAddress
		*out = new(string)
		**out = **in
	}
	if in.TranslatedFqdn != nil {
		in, out := &in.TranslatedFqdn, &out.TranslatedFqdn
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPort != nil {
		in, out := &in.TranslatedPort, &out.TranslatedPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNatRule.
func (in *AzureFirewallNatRule) DeepCopy() *AzureFirewallNatRule {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNatRuleCollection) DeepCopyInto(out *AzureFirewallNatRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(AzureFirewallNatRCAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AzureFirewallNatRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNatRuleCollection.
func (in *AzureFirewallNatRuleCollection) DeepCopy() *AzureFirewallNatRuleCollection {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNatRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNatRuleCollection_STATUS) DeepCopyInto(out *AzureFirewallNatRuleCollection_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNatRuleCollection_STATUS.
func (in *AzureFirewallNatRuleCollection_STATUS) DeepCopy() *AzureFirewallNatRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNatRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNetworkRule) DeepCopyInto(out *AzureFirewallNetworkRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIpGroups != nil {
		in, out := &in.DestinationIpGroups, &out.DestinationIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNetworkRule.
func (in *AzureFirewallNetworkRule) DeepCopy() *AzureFirewallNetworkRule {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNetworkRuleCollection) DeepCopyInto(out *AzureFirewallNetworkRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(AzureFirewallRCAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AzureFirewallNetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNetworkRuleCollection.
func (in *AzureFirewallNetworkRuleCollection) DeepCopy() *AzureFirewallNetworkRuleCollection {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNetworkRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallNetworkRuleCollection_STATUS) DeepCopyInto(out *AzureFirewallNetworkRuleCollection_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallNetworkRuleCollection_STATUS.
func (in *AzureFirewallNetworkRuleCollection_STATUS) DeepCopy() *AzureFirewallNetworkRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallNetworkRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallOperatorSpec) DeepCopyInto(out *AzureFirewallOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallOperatorSpec.
func (in *AzureFirewallOperatorSpec) DeepCopy() *AzureFirewallOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallPublicIPAddress) DeepCopyInto(out *AzureFirewallPublicIPAddress) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallPublicIPAddress.
func (in *AzureFirewallPublicIPAddress) DeepCopy() *AzureFirewallPublicIPAddress {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallPublicIPAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallPublicIPAddress_STATUS) DeepCopyInto(out *AzureFirewallPublicIPAddress_STATUS) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallPublicIPAddress_STATUS.
func (in *AzureFirewallPublicIPAddress_STATUS) DeepCopy() *AzureFirewallPublicIPAddress_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallPublicIPAddress_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallRCAction) DeepCopyInto(out *AzureFirewallRCAction) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallRCAction.
func (in *AzureFirewallRCAction) DeepCopy() *AzureFirewallRCAction {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallRCAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallSku) DeepCopyInto(out *AzureFirewallSku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallSku.
func (in *AzureFirewallSku) DeepCopy() *AzureFirewallSku {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewallSku_STATUS) DeepCopyInto(out *AzureFirewallSku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewallSku_STATUS.
func (in *AzureFirewallSku_STATUS) DeepCopy() *AzureFirewallSku_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewallSku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewall_STATUS) DeepCopyInto(out *AzureFirewall_STATUS) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ApplicationRuleCollections != nil {
		in, out := &in.ApplicationRuleCollections, &out.ApplicationRuleCollections
		*out = make([]AzureFirewallApplicationRuleCollection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleConfiguration != nil {
		in, out := &in.AutoscaleConfiguration, &out.AutoscaleConfiguration
		*out = new(AzureFirewallAutoscaleConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.HubIPAddresses != nil {
		in, out := &in.HubIPAddresses, &out.HubIPAddresses
		*out = new(HubIPAddresses_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]AzureFirewallIPConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpGroups != nil {
		in, out := &in.IpGroups, &out.IpGroups
		*out = make([]AzureFirewallIpGroups_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagementIpConfiguration != nil {
		in, out := &in.ManagementIpConfiguration, &out.ManagementIpConfiguration
		*out = new(AzureFirewallIPConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatRuleCollections != nil {
		in, out := &in.NatRuleCollections, &out.NatRuleCollections
		*out = make([]AzureFirewallNatRuleCollection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRuleCollections != nil {
		in, out := &in.NetworkRuleCollections, &out.NetworkRuleCollections
		*out = make([]AzureFirewallNetworkRuleCollection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(AzureFirewallSku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualHub != nil {
		in, out := &in.VirtualHub, &out.VirtualHub
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewall_STATUS.
func (in *AzureFirewall_STATUS) DeepCopy() *AzureFirewall_STATUS {
	if in == nil {
		return nil
	}
	out := new(AzureFirewall_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFirewall_Spec) DeepCopyInto(out *AzureFirewall_Spec) {
	*out = *in
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ApplicationRuleCollections != nil {
		in, out := &in.ApplicationRuleCollections, &out.ApplicationRuleCollections
		*out = make([]AzureFirewallApplicationRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleConfiguration != nil {
		in, out := &in.AutoscaleConfiguration, &out.AutoscaleConfiguration
		*out = new(AzureFirewallAutoscaleConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicy != nil {
		in, out := &in.FirewallPolicy, &out.FirewallPolicy
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.HubIPAddresses != nil {
		in, out := &in.HubIPAddresses, &out.HubIPAddresses
		*out = new(HubIPAddresses)
		(*in).DeepCopyInto(*out)
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]AzureFirewallIPConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagementIpConfiguration != nil {
		in, out := &in.ManagementIpConfiguration, &out.ManagementIpConfiguration
		*out = new(AzureFirewallIPConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NatRuleCollections != nil {
		in, out := &in.NatRuleCollections, &out.NatRuleCollections
		*out = make([]AzureFirewallNatRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRuleCollections != nil {
		in, out := &in.NetworkRuleCollections, &out.NetworkRuleCollections
		*out = make([]AzureFirewallNetworkRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(AzureFirewallOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(AzureFirewallSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.VirtualHub != nil {
		in, out := &in.VirtualHub, &out.VirtualHub
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFirewall_Spec.
func (in *AzureFirewall_Spec) DeepCopy() *AzureFirewall_Spec {
	if in == nil {
		return nil
	}
	out := new(AzureFirewall_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendAddressPool_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *BackendAddressPool_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.DrainPeriodInSeconds != nil {
		in, out := &in.DrainPeriodInSeconds, &out.DrainPeriodInSeconds
		*out = new(int)
		**out = **in
	}
	if in.LoadBalancerBackendAddresses != nil {
		in, out := &in.LoadBalancerBackendAddresses, &out.LoadBalancerBackendAddresses
		*out = make([]LoadBalancerBackendAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SyncMode != nil {
		in, out := &in.SyncMode, &out.SyncMode
		*out = new(string)
		**out = **in
	}
	if in.TunnelInterfaces != nil {
		in, out := &in.TunnelInterfaces, &out.TunnelInterfaces
		*out = make([]GatewayLoadBalancerTunnelInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendAddressPool_LoadBalancer_SubResourceEmbedded.
func (in *BackendAddressPool_LoadBalancer_SubResourceEmbedded) DeepCopy() *BackendAddressPool_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(BackendAddressPool_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendAddressPool_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *BackendAddressPool_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendAddressPool_NetworkInterface_SubResourceEmbedded.
func (in *BackendAddressPool_NetworkInterface_SubResourceEmbedded) DeepCopy() *BackendAddressPool_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(BackendAddressPool_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.BackendIPConfigurations != nil {
		in, out := &in.BackendIPConfigurations, &out.BackendIPConfigurations
		*out = make([]NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DrainPeriodInSeconds != nil {
		in, out := &in.DrainPeriodInSeconds, &out.DrainPeriodInSeconds
		*out = new(int)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.InboundNatRules != nil {
		in, out := &in.InboundNatRules, &out.InboundNatRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerBackendAddresses != nil {
		in, out := &in.LoadBalancerBackendAddresses, &out.LoadBalancerBackendAddresses
		*out = make([]LoadBalancerBackendAddress_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundRule != nil {
		in, out := &in.OutboundRule, &out.OutboundRule
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.SyncMode != nil {
		in, out := &in.SyncMode, &out.SyncMode
		*out = new(string)
		**out = **in
	}
	if in.TunnelInterfaces != nil {
		in, out := &in.TunnelInterfaces, &out.TunnelInterfaces
		*out = make([]GatewayLoadBalancerTunnelInterface_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHost) DeepCopyInto(out *BastionHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHost.
func (in *BastionHost) DeepCopy() *BastionHost {
	if in == nil {
		return nil
	}
	out := new(BastionHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BastionHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostIPConfiguration) DeepCopyInto(out *BastionHostIPConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostIPConfiguration.
func (in *BastionHostIPConfiguration) DeepCopy() *BastionHostIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(BastionHostIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostIPConfiguration_STATUS) DeepCopyInto(out *BastionHostIPConfiguration_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostIPConfiguration_STATUS.
func (in *BastionHostIPConfiguration_STATUS) DeepCopy() *BastionHostIPConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(BastionHostIPConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostList) DeepCopyInto(out *BastionHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BastionHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostList.
func (in *BastionHostList) DeepCopy() *BastionHostList {
	if in == nil {
		return nil
	}
	out := new(BastionHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BastionHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostOperatorSpec) DeepCopyInto(out *BastionHostOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostOperatorSpec.
func (in *BastionHostOperatorSpec) DeepCopy() *BastionHostOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(BastionHostOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostPropertiesFormat_NetworkAcls) DeepCopyInto(out *BastionHostPropertiesFormat_NetworkAcls) {
	*out = *in
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IPRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostPropertiesFormat_NetworkAcls.
func (in *BastionHostPropertiesFormat_NetworkAcls) DeepCopy() *BastionHostPropertiesFormat_NetworkAcls {
	if in == nil {
		return nil
	}
	out := new(BastionHostPropertiesFormat_NetworkAcls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostPropertiesFormat_NetworkAcls_STATUS) DeepCopyInto(out *BastionHostPropertiesFormat_NetworkAcls_STATUS) {
	*out = *in
	if in.IpRules != nil {
		in, out := &in.IpRules, &out.IpRules
		*out = make([]IPRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostPropertiesFormat_NetworkAcls_STATUS.
func (in *BastionHostPropertiesFormat_NetworkAcls_STATUS) DeepCopy() *BastionHostPropertiesFormat_NetworkAcls_STATUS {
	if in == nil {
		return nil
	}
	out := new(BastionHostPropertiesFormat_NetworkAcls_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHost_STATUS) DeepCopyInto(out *BastionHost_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableCopyPaste != nil {
		in, out := &in.DisableCopyPaste, &out.DisableCopyPaste
		*out = new(bool)
		**out = **in
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.EnableFileCopy != nil {
		in, out := &in.EnableFileCopy, &out.EnableFileCopy
		*out = new(bool)
		**out = **in
	}
	if in.EnableIpConnect != nil {
		in, out := &in.EnableIpConnect, &out.EnableIpConnect
		*out = new(bool)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.EnableSessionRecording != nil {
		in, out := &in.EnableSessionRecording, &out.EnableSessionRecording
		*out = new(bool)
		**out = **in
	}
	if in.EnableShareableLink != nil {
		in, out := &in.EnableShareableLink, &out.EnableShareableLink
		*out = new(bool)
		**out = **in
	}
	if in.EnableTunneling != nil {
		in, out := &in.EnableTunneling, &out.EnableTunneling
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]BastionHostIPConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(BastionHostPropertiesFormat_NetworkAcls_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ScaleUnits != nil {
		in, out := &in.ScaleUnits, &out.ScaleUnits
		*out = new(int)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHost_STATUS.
func (in *BastionHost_STATUS) DeepCopy() *BastionHost_STATUS {
	if in == nil {
		return nil
	}
	out := new(BastionHost_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHost_Spec) DeepCopyInto(out *BastionHost_Spec) {
	*out = *in
	if in.DisableCopyPaste != nil {
		in, out := &in.DisableCopyPaste, &out.DisableCopyPaste
		*out = new(bool)
		**out = **in
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.EnableFileCopy != nil {
		in, out := &in.EnableFileCopy, &out.EnableFileCopy
		*out = new(bool)
		**out = **in
	}
	if in.EnableIpConnect != nil {
		in, out := &in.EnableIpConnect, &out.EnableIpConnect
		*out = new(bool)
		**out = **in
	}
	if in.EnableKerberos != nil {
		in, out := &in.EnableKerberos, &out.EnableKerberos
		*out = new(bool)
		**out = **in
	}
	if in.EnableSessionRecording != nil {
		in, out := &in.EnableSessionRecording, &out.EnableSessionRecording
		*out = new(bool)
		**out = **in
	}
	if in.EnableShareableLink != nil {
		in, out := &in.EnableShareableLink, &out.EnableShareableLink
		*out = new(bool)
		**out = **in
	}
	if in.EnableTunneling != nil {
		in, out := &in.EnableTunneling, &out.EnableTunneling
		*out = new(bool)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]BastionHostIPConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkAcls != nil {
		in, out := &in.NetworkAcls, &out.NetworkAcls
		*out = new(BastionHostPropertiesFormat_NetworkAcls)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(BastionHostOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ScaleUnits != nil {
		in, out := &in.ScaleUnits, &out.ScaleUnits
		*out = new(int)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHost_Spec.
func (in *BastionHost_Spec) DeepCopy() *BastionHost_Spec {
	if in == nil {
		return nil
	}
	out := new(BastionHost_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BgpSettings) DeepCopyInto(out *BgpSettings) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(uint32)
		**out = **in
	}
	if in.BgpPeeringAddress != nil {
		in, out := &in.BgpPeeringAddress, &out.BgpPeeringAddress
		*out = new(string)
		**out = **in
	}
	if in.BgpPeeringAddresses != nil {
		in, out := &in.BgpPeeringAddresses, &out.BgpPeeringAddresses
		*out = make([]IPConfigurationBgpPeeringAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerWeight != nil {
		in, out := &in.PeerWeight, &out.PeerWeight
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BgpSettings.
func (in *BgpSettings) DeepCopy() *BgpSettings {
	if in == nil {
		return nil
	}
	out := new(BgpSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BgpSettings_STATUS) DeepCopyInto(out *BgpSettings_STATUS) {
	*out = *in
	if in.Asn != nil {
		in, out := &in.Asn, &out.Asn
		*out = new(uint32)
		**out = **in
	}
	if in.BgpPeeringAddress != nil {
		in, out := &in.BgpPeeringAddress, &out.BgpPeeringAddress
		*out = new(string)
		**out = **in
	}
	if in.BgpPeeringAddresses != nil {
		in, out := &in.BgpPeeringAddresses, &out.BgpPeeringAddresses
		*out = make([]IPConfigurationBgpPeeringAddress_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PeerWeight != nil {
		in, out := &in.PeerWeight, &out.PeerWeight
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BgpSettings_STATUS.
func (in *BgpSettings_STATUS) DeepCopy() *BgpSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(BgpSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDnsConfigPropertiesFormat_STATUS) DeepCopyInto(out *CustomDnsConfigPropertiesFormat_STATUS) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDnsConfigPropertiesFormat_STATUS.
func (in *CustomDnsConfigPropertiesFormat_STATUS) DeepCopy() *CustomDnsConfigPropertiesFormat_STATUS {
	if in == nil {
		return nil
	}
	out := new(CustomDnsConfigPropertiesFormat_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DdosSettings) DeepCopyInto(out *DdosSettings) {
	*out = *in
	if in.DdosProtectionPlan != nil {
		in, out := &in.DdosProtectionPlan, &out.DdosProtectionPlan
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtectionMode != nil {
		in, out := &in.ProtectionMode, &out.ProtectionMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DdosSettings.
func (in *DdosSettings) DeepCopy() *DdosSettings {
	if in == nil {
		return nil
	}
	out := new(DdosSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DdosSettings_STATUS) DeepCopyInto(out *DdosSettings_STATUS) {
	*out = *in
	if in.DdosProtectionPlan != nil {
		in, out := &in.DdosProtectionPlan, &out.DdosProtectionPlan
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtectionMode != nil {
		in, out := &in.ProtectionMode, &out.ProtectionMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DdosSettings_STATUS.
func (in *DdosSettings_STATUS) DeepCopy() *DdosSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(DdosSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Delegation) DeepCopyInto(out *Delegation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Delegation.
func (in *Delegation) DeepCopy() *Delegation {
	if in == nil {
		return nil
	}
	out := new(Delegation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Delegation_STATUS) DeepCopyInto(out *Delegation_STATUS) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Delegation_STATUS.
func (in *Delegation_STATUS) DeepCopy() *Delegation_STATUS {
	if in == nil {
		return nil
	}
	out := new(Delegation_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DhcpOptions) DeepCopyInto(out *DhcpOptions) {
	*out = *in
	if in.DnsServers != nil {
		in, out := &in.DnsServers, &out.DnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DhcpOptions.
func (in *DhcpOptions) DeepCopy() *DhcpOptions {
	if in == nil {
		return nil
	}
	out := new(DhcpOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DhcpOptions_STATUS) DeepCopyInto(out *DhcpOptions_STATUS) {
	*out = *in
	if in.DnsServers != nil {
		in, out := &in.DnsServers, &out.DnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DhcpOptions_STATUS.
func (in *DhcpOptions_STATUS) DeepCopy() *DhcpOptions_STATUS {
	if in == nil {
		return nil
	}
	out := new(DhcpOptions_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSettings) DeepCopyInto(out *DnsSettings) {
	*out = *in
	if in.EnableProxy != nil {
		in, out := &in.EnableProxy, &out.EnableProxy
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequireProxyForNetworkRules != nil {
		in, out := &in.RequireProxyForNetworkRules, &out.RequireProxyForNetworkRules
		*out = new(bool)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSettings.
func (in *DnsSettings) DeepCopy() *DnsSettings {
	if in == nil {
		return nil
	}
	out := new(DnsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSettings_STATUS) DeepCopyInto(out *DnsSettings_STATUS) {
	*out = *in
	if in.EnableProxy != nil {
		in, out := &in.EnableProxy, &out.EnableProxy
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequireProxyForNetworkRules != nil {
		in, out := &in.RequireProxyForNetworkRules, &out.RequireProxyForNetworkRules
		*out = new(bool)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSettings_STATUS.
func (in *DnsSettings_STATUS) DeepCopy() *DnsSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(DnsSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplicitProxy) DeepCopyInto(out *ExplicitProxy) {
	*out = *in
	if in.EnableExplicitProxy != nil {
		in, out := &in.EnableExplicitProxy, &out.EnableExplicitProxy
		*out = new(bool)
		**out = **in
	}
	if in.EnablePacFile != nil {
		in, out := &in.EnablePacFile, &out.EnablePacFile
		*out = new(bool)
		**out = **in
	}
	if in.HttpPort != nil {
		in, out := &in.HttpPort, &out.HttpPort
		*out = new(int)
		**out = **in
	}
	if in.HttpsPort != nil {
		in, out := &in.HttpsPort, &out.HttpsPort
		*out = new(int)
		**out = **in
	}
	if in.PacFile != nil {
		in, out := &in.PacFile, &out.PacFile
		*out = new(string)
		**out = **in
	}
	if in.PacFilePort != nil {
		in, out := &in.PacFilePort, &out.PacFilePort
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplicitProxy.
func (in *ExplicitProxy) DeepCopy() *ExplicitProxy {
	if in == nil {
		return nil
	}
	out := new(ExplicitProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplicitProxy_STATUS) DeepCopyInto(out *ExplicitProxy_STATUS) {
	*out = *in
	if in.EnableExplicitProxy != nil {
		in, out := &in.EnableExplicitProxy, &out.EnableExplicitProxy
		*out = new(bool)
		**out = **in
	}
	if in.EnablePacFile != nil {
		in, out := &in.EnablePacFile, &out.EnablePacFile
		*out = new(bool)
		**out = **in
	}
	if in.HttpPort != nil {
		in, out := &in.HttpPort, &out.HttpPort
		*out = new(int)
		**out = **in
	}
	if in.HttpsPort != nil {
		in, out := &in.HttpsPort, &out.HttpsPort
		*out = new(int)
		**out = **in
	}
	if in.PacFile != nil {
		in, out := &in.PacFile, &out.PacFile
		*out = new(string)
		**out = **in
	}
	if in.PacFilePort != nil {
		in, out := &in.PacFilePort, &out.PacFilePort
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplicitProxy_STATUS.
func (in *ExplicitProxy_STATUS) DeepCopy() *ExplicitProxy_STATUS {
	if in == nil {
		return nil
	}
	out := new(ExplicitProxy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation) DeepCopyInto(out *ExtendedLocation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation.
func (in *ExtendedLocation) DeepCopy() *ExtendedLocation {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedLocation_STATUS) DeepCopyInto(out *ExtendedLocation_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedLocation_STATUS.
func (in *ExtendedLocation_STATUS) DeepCopy() *ExtendedLocation_STATUS {
	if in == nil {
		return nil
	}
	out := new(ExtendedLocation_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPoliciesRuleCollectionGroup) DeepCopyInto(out *FirewallPoliciesRuleCollectionGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPoliciesRuleCollectionGroup.
func (in *FirewallPoliciesRuleCollectionGroup) DeepCopy() *FirewallPoliciesRuleCollectionGroup {
	if in == nil {
		return nil
	}
	out := new(FirewallPoliciesRuleCollectionGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPoliciesRuleCollectionGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPoliciesRuleCollectionGroupList) DeepCopyInto(out *FirewallPoliciesRuleCollectionGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPoliciesRuleCollectionGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPoliciesRuleCollectionGroupList.
func (in *FirewallPoliciesRuleCollectionGroupList) DeepCopy() *FirewallPoliciesRuleCollectionGroupList {
	if in == nil {
		return nil
	}
	out := new(FirewallPoliciesRuleCollectionGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPoliciesRuleCollectionGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPoliciesRuleCollectionGroupOperatorSpec) DeepCopyInto(out *FirewallPoliciesRuleCollectionGroupOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPoliciesRuleCollectionGroupOperatorSpec.
func (in *FirewallPoliciesRuleCollectionGroupOperatorSpec) DeepCopy() *FirewallPoliciesRuleCollectionGroupOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPoliciesRuleCollectionGroupOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPoliciesRuleCollectionGroup_STATUS) DeepCopyInto(out *FirewallPoliciesRuleCollectionGroup_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RuleCollections != nil {
		in, out := &in.RuleCollections, &out.RuleCollections
		*out = make([]FirewallPolicyRuleCollection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPoliciesRuleCollectionGroup_STATUS.
func (in *FirewallPoliciesRuleCollectionGroup_STATUS) DeepCopy() *FirewallPoliciesRuleCollectionGroup_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPoliciesRuleCollectionGroup_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPoliciesRuleCollectionGroup_Spec) DeepCopyInto(out *FirewallPoliciesRuleCollectionGroup_Spec) {
	*out = *in
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(FirewallPoliciesRuleCollectionGroupOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleCollections != nil {
		in, out := &in.RuleCollections, &out.RuleCollections
		*out = make([]FirewallPolicyRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPoliciesRuleCollectionGroup_Spec.
func (in *FirewallPoliciesRuleCollectionGroup_Spec) DeepCopy() *FirewallPoliciesRuleCollectionGroup_Spec {
	if in == nil {
		return nil
	}
	out := new(FirewallPoliciesRuleCollectionGroup_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicy) DeepCopyInto(out *FirewallPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicy.
func (in *FirewallPolicy) DeepCopy() *FirewallPolicy {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyCertificateAuthority) DeepCopyInto(out *FirewallPolicyCertificateAuthority) {
	*out = *in
	if in.KeyVaultSecretId != nil {
		in, out := &in.KeyVaultSecretId, &out.KeyVaultSecretId
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyCertificateAuthority.
func (in *FirewallPolicyCertificateAuthority) DeepCopy() *FirewallPolicyCertificateAuthority {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyCertificateAuthority)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyCertificateAuthority_STATUS) DeepCopyInto(out *FirewallPolicyCertificateAuthority_STATUS) {
	*out = *in
	if in.KeyVaultSecretId != nil {
		in, out := &in.KeyVaultSecretId, &out.KeyVaultSecretId
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyCertificateAuthority_STATUS.
func (in *FirewallPolicyCertificateAuthority_STATUS) DeepCopy() *FirewallPolicyCertificateAuthority_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyCertificateAuthority_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyFilterRuleCollection) DeepCopyInto(out *FirewallPolicyFilterRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(FirewallPolicyFilterRuleCollectionAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleCollectionType != nil {
		in, out := &in.RuleCollectionType, &out.RuleCollectionType
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]FirewallPolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyFilterRuleCollection.
func (in *FirewallPolicyFilterRuleCollection) DeepCopy() *FirewallPolicyFilterRuleCollection {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyFilterRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyFilterRuleCollectionAction) DeepCopyInto(out *FirewallPolicyFilterRuleCollectionAction) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyFilterRuleCollectionAction.
func (in *FirewallPolicyFilterRuleCollectionAction) DeepCopy() *FirewallPolicyFilterRuleCollectionAction {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyFilterRuleCollectionAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyFilterRuleCollectionAction_STATUS) DeepCopyInto(out *FirewallPolicyFilterRuleCollectionAction_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyFilterRuleCollectionAction_STATUS.
func (in *FirewallPolicyFilterRuleCollectionAction_STATUS) DeepCopy() *FirewallPolicyFilterRuleCollectionAction_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyFilterRuleCollectionAction_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyFilterRuleCollection_STATUS) DeepCopyInto(out *FirewallPolicyFilterRuleCollection_STATUS) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(FirewallPolicyFilterRuleCollectionAction_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleCollectionType != nil {
		in, out := &in.RuleCollectionType, &out.RuleCollectionType
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]FirewallPolicyRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyFilterRuleCollection_STATUS.
func (in *FirewallPolicyFilterRuleCollection_STATUS) DeepCopy() *FirewallPolicyFilterRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyFilterRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyHttpHeaderToInsert) DeepCopyInto(out *FirewallPolicyHttpHeaderToInsert) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyHttpHeaderToInsert.
func (in *FirewallPolicyHttpHeaderToInsert) DeepCopy() *FirewallPolicyHttpHeaderToInsert {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyHttpHeaderToInsert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyHttpHeaderToInsert_STATUS) DeepCopyInto(out *FirewallPolicyHttpHeaderToInsert_STATUS) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyHttpHeaderToInsert_STATUS.
func (in *FirewallPolicyHttpHeaderToInsert_STATUS) DeepCopy() *FirewallPolicyHttpHeaderToInsert_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyHttpHeaderToInsert_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyInsights) DeepCopyInto(out *FirewallPolicyInsights) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsResources != nil {
		in, out := &in.LogAnalyticsResources, &out.LogAnalyticsResources
		*out = new(FirewallPolicyLogAnalyticsResources)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyInsights.
func (in *FirewallPolicyInsights) DeepCopy() *FirewallPolicyInsights {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyInsights)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyInsights_STATUS) DeepCopyInto(out *FirewallPolicyInsights_STATUS) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsResources != nil {
		in, out := &in.LogAnalyticsResources, &out.LogAnalyticsResources
		*out = new(FirewallPolicyLogAnalyticsResources_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyInsights_STATUS.
func (in *FirewallPolicyInsights_STATUS) DeepCopy() *FirewallPolicyInsights_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyInsights_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetection) DeepCopyInto(out *FirewallPolicyIntrusionDetection) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(FirewallPolicyIntrusionDetectionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetection.
func (in *FirewallPolicyIntrusionDetection) DeepCopy() *FirewallPolicyIntrusionDetection {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) DeepCopyInto(out *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIpGroups != nil {
		in, out := &in.DestinationIpGroups, &out.DestinationIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionBypassTrafficSpecifications.
func (in *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) DeepCopy() *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS) DeepCopyInto(out *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIpGroups != nil {
		in, out := &in.DestinationIpGroups, &out.DestinationIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS.
func (in *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS) DeepCopy() *FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionConfiguration) DeepCopyInto(out *FirewallPolicyIntrusionDetectionConfiguration) {
	*out = *in
	if in.BypassTrafficSettings != nil {
		in, out := &in.BypassTrafficSettings, &out.BypassTrafficSettings
		*out = make([]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateRanges != nil {
		in, out := &in.PrivateRanges, &out.PrivateRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SignatureOverrides != nil {
		in, out := &in.SignatureOverrides, &out.SignatureOverrides
		*out = make([]FirewallPolicyIntrusionDetectionSignatureSpecification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionConfiguration.
func (in *FirewallPolicyIntrusionDetectionConfiguration) DeepCopy() *FirewallPolicyIntrusionDetectionConfiguration {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionConfiguration_STATUS) DeepCopyInto(out *FirewallPolicyIntrusionDetectionConfiguration_STATUS) {
	*out = *in
	if in.BypassTrafficSettings != nil {
		in, out := &in.BypassTrafficSettings, &out.BypassTrafficSettings
		*out = make([]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateRanges != nil {
		in, out := &in.PrivateRanges, &out.PrivateRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SignatureOverrides != nil {
		in, out := &in.SignatureOverrides, &out.SignatureOverrides
		*out = make([]FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionConfiguration_STATUS.
func (in *FirewallPolicyIntrusionDetectionConfiguration_STATUS) DeepCopy() *FirewallPolicyIntrusionDetectionConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionSignatureSpecification) DeepCopyInto(out *FirewallPolicyIntrusionDetectionSignatureSpecification) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionSignatureSpecification.
func (in *FirewallPolicyIntrusionDetectionSignatureSpecification) DeepCopy() *FirewallPolicyIntrusionDetectionSignatureSpecification {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionSignatureSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS) DeepCopyInto(out *FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS.
func (in *FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS) DeepCopy() *FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetectionSignatureSpecification_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyIntrusionDetection_STATUS) DeepCopyInto(out *FirewallPolicyIntrusionDetection_STATUS) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(FirewallPolicyIntrusionDetectionConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyIntrusionDetection_STATUS.
func (in *FirewallPolicyIntrusionDetection_STATUS) DeepCopy() *FirewallPolicyIntrusionDetection_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyIntrusionDetection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyList) DeepCopyInto(out *FirewallPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyList.
func (in *FirewallPolicyList) DeepCopy() *FirewallPolicyList {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyLogAnalyticsResources) DeepCopyInto(out *FirewallPolicyLogAnalyticsResources) {
	*out = *in
	if in.DefaultWorkspaceId != nil {
		in, out := &in.DefaultWorkspaceId, &out.DefaultWorkspaceId
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Workspaces != nil {
		in, out := &in.Workspaces, &out.Workspaces
		*out = make([]FirewallPolicyLogAnalyticsWorkspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyLogAnalyticsResources.
func (in *FirewallPolicyLogAnalyticsResources) DeepCopy() *FirewallPolicyLogAnalyticsResources {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyLogAnalyticsResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyLogAnalyticsResources_STATUS) DeepCopyInto(out *FirewallPolicyLogAnalyticsResources_STATUS) {
	*out = *in
	if in.DefaultWorkspaceId != nil {
		in, out := &in.DefaultWorkspaceId, &out.DefaultWorkspaceId
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Workspaces != nil {
		in, out := &in.Workspaces, &out.Workspaces
		*out = make([]FirewallPolicyLogAnalyticsWorkspace_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyLogAnalyticsResources_STATUS.
func (in *FirewallPolicyLogAnalyticsResources_STATUS) DeepCopy() *FirewallPolicyLogAnalyticsResources_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyLogAnalyticsResources_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyLogAnalyticsWorkspace) DeepCopyInto(out *FirewallPolicyLogAnalyticsWorkspace) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceId != nil {
		in, out := &in.WorkspaceId, &out.WorkspaceId
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyLogAnalyticsWorkspace.
func (in *FirewallPolicyLogAnalyticsWorkspace) DeepCopy() *FirewallPolicyLogAnalyticsWorkspace {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyLogAnalyticsWorkspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyLogAnalyticsWorkspace_STATUS) DeepCopyInto(out *FirewallPolicyLogAnalyticsWorkspace_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceId != nil {
		in, out := &in.WorkspaceId, &out.WorkspaceId
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyLogAnalyticsWorkspace_STATUS.
func (in *FirewallPolicyLogAnalyticsWorkspace_STATUS) DeepCopy() *FirewallPolicyLogAnalyticsWorkspace_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyLogAnalyticsWorkspace_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyNatRuleCollection) DeepCopyInto(out *FirewallPolicyNatRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(FirewallPolicyNatRuleCollectionAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleCollectionType != nil {
		in, out := &in.RuleCollectionType, &out.RuleCollectionType
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]FirewallPolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyNatRuleCollection.
func (in *FirewallPolicyNatRuleCollection) DeepCopy() *FirewallPolicyNatRuleCollection {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyNatRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyNatRuleCollectionAction) DeepCopyInto(out *FirewallPolicyNatRuleCollectionAction) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyNatRuleCollectionAction.
func (in *FirewallPolicyNatRuleCollectionAction) DeepCopy() *FirewallPolicyNatRuleCollectionAction {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyNatRuleCollectionAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyNatRuleCollectionAction_STATUS) DeepCopyInto(out *FirewallPolicyNatRuleCollectionAction_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyNatRuleCollectionAction_STATUS.
func (in *FirewallPolicyNatRuleCollectionAction_STATUS) DeepCopy() *FirewallPolicyNatRuleCollectionAction_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyNatRuleCollectionAction_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyNatRuleCollection_STATUS) DeepCopyInto(out *FirewallPolicyNatRuleCollection_STATUS) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(FirewallPolicyNatRuleCollectionAction_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleCollectionType != nil {
		in, out := &in.RuleCollectionType, &out.RuleCollectionType
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]FirewallPolicyRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyNatRuleCollection_STATUS.
func (in *FirewallPolicyNatRuleCollection_STATUS) DeepCopy() *FirewallPolicyNatRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyNatRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyOperatorSpec) DeepCopyInto(out *FirewallPolicyOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyOperatorSpec.
func (in *FirewallPolicyOperatorSpec) DeepCopy() *FirewallPolicyOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRule) DeepCopyInto(out *FirewallPolicyRule) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(ApplicationRule)
		(*in).DeepCopyInto(*out)
	}
	if in.Nat != nil {
		in, out := &in.Nat, &out.Nat
		*out = new(NatRule)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkRule)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRule.
func (in *FirewallPolicyRule) DeepCopy() *FirewallPolicyRule {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleApplicationProtocol) DeepCopyInto(out *FirewallPolicyRuleApplicationProtocol) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleApplicationProtocol.
func (in *FirewallPolicyRuleApplicationProtocol) DeepCopy() *FirewallPolicyRuleApplicationProtocol {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleApplicationProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleApplicationProtocol_STATUS) DeepCopyInto(out *FirewallPolicyRuleApplicationProtocol_STATUS) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleApplicationProtocol_STATUS.
func (in *FirewallPolicyRuleApplicationProtocol_STATUS) DeepCopy() *FirewallPolicyRuleApplicationProtocol_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleApplicationProtocol_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleCollection) DeepCopyInto(out *FirewallPolicyRuleCollection) {
	*out = *in
	if in.FirewallPolicyFilter != nil {
		in, out := &in.FirewallPolicyFilter, &out.FirewallPolicyFilter
		*out = new(FirewallPolicyFilterRuleCollection)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicyNat != nil {
		in, out := &in.FirewallPolicyNat, &out.FirewallPolicyNat
		*out = new(FirewallPolicyNatRuleCollection)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleCollection.
func (in *FirewallPolicyRuleCollection) DeepCopy() *FirewallPolicyRuleCollection {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRuleCollection_STATUS) DeepCopyInto(out *FirewallPolicyRuleCollection_STATUS) {
	*out = *in
	if in.FirewallPolicyFilter != nil {
		in, out := &in.FirewallPolicyFilter, &out.FirewallPolicyFilter
		*out = new(FirewallPolicyFilterRuleCollection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallPolicyNat != nil {
		in, out := &in.FirewallPolicyNat, &out.FirewallPolicyNat
		*out = new(FirewallPolicyNatRuleCollection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRuleCollection_STATUS.
func (in *FirewallPolicyRuleCollection_STATUS) DeepCopy() *FirewallPolicyRuleCollection_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRuleCollection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyRule_STATUS) DeepCopyInto(out *FirewallPolicyRule_STATUS) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(ApplicationRule_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Nat != nil {
		in, out := &in.Nat, &out.Nat
		*out = new(NatRule_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(NetworkRule_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyRule_STATUS.
func (in *FirewallPolicyRule_STATUS) DeepCopy() *FirewallPolicyRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySNAT) DeepCopyInto(out *FirewallPolicySNAT) {
	*out = *in
	if in.AutoLearnPrivateRanges != nil {
		in, out := &in.AutoLearnPrivateRanges, &out.AutoLearnPrivateRanges
		*out = new(string)
		**out = **in
	}
	if in.PrivateRanges != nil {
		in, out := &in.PrivateRanges, &out.PrivateRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySNAT.
func (in *FirewallPolicySNAT) DeepCopy() *FirewallPolicySNAT {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySNAT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySNAT_STATUS) DeepCopyInto(out *FirewallPolicySNAT_STATUS) {
	*out = *in
	if in.AutoLearnPrivateRanges != nil {
		in, out := &in.AutoLearnPrivateRanges, &out.AutoLearnPrivateRanges
		*out = new(string)
		**out = **in
	}
	if in.PrivateRanges != nil {
		in, out := &in.PrivateRanges, &out.PrivateRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySNAT_STATUS.
func (in *FirewallPolicySNAT_STATUS) DeepCopy() *FirewallPolicySNAT_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySNAT_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySQL) DeepCopyInto(out *FirewallPolicySQL) {
	*out = *in
	if in.AllowSqlRedirect != nil {
		in, out := &in.AllowSqlRedirect, &out.AllowSqlRedirect
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySQL.
func (in *FirewallPolicySQL) DeepCopy() *FirewallPolicySQL {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySQL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySQL_STATUS) DeepCopyInto(out *FirewallPolicySQL_STATUS) {
	*out = *in
	if in.AllowSqlRedirect != nil {
		in, out := &in.AllowSqlRedirect, &out.AllowSqlRedirect
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySQL_STATUS.
func (in *FirewallPolicySQL_STATUS) DeepCopy() *FirewallPolicySQL_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySQL_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySku) DeepCopyInto(out *FirewallPolicySku) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySku.
func (in *FirewallPolicySku) DeepCopy() *FirewallPolicySku {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySku_STATUS) DeepCopyInto(out *FirewallPolicySku_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySku_STATUS.
func (in *FirewallPolicySku_STATUS) DeepCopy() *FirewallPolicySku_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyThreatIntelWhitelist) DeepCopyInto(out *FirewallPolicyThreatIntelWhitelist) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyThreatIntelWhitelist.
func (in *FirewallPolicyThreatIntelWhitelist) DeepCopy() *FirewallPolicyThreatIntelWhitelist {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyThreatIntelWhitelist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyThreatIntelWhitelist_STATUS) DeepCopyInto(out *FirewallPolicyThreatIntelWhitelist_STATUS) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyThreatIntelWhitelist_STATUS.
func (in *FirewallPolicyThreatIntelWhitelist_STATUS) DeepCopy() *FirewallPolicyThreatIntelWhitelist_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyThreatIntelWhitelist_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyTransportSecurity) DeepCopyInto(out *FirewallPolicyTransportSecurity) {
	*out = *in
	if in.CertificateAuthority != nil {
		in, out := &in.CertificateAuthority, &out.CertificateAuthority
		*out = new(FirewallPolicyCertificateAuthority)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyTransportSecurity.
func (in *FirewallPolicyTransportSecurity) DeepCopy() *FirewallPolicyTransportSecurity {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyTransportSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyTransportSecurity_STATUS) DeepCopyInto(out *FirewallPolicyTransportSecurity_STATUS) {
	*out = *in
	if in.CertificateAuthority != nil {
		in, out := &in.CertificateAuthority, &out.CertificateAuthority
		*out = new(FirewallPolicyCertificateAuthority_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyTransportSecurity_STATUS.
func (in *FirewallPolicyTransportSecurity_STATUS) DeepCopy() *FirewallPolicyTransportSecurity_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyTransportSecurity_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicy_STATUS) DeepCopyInto(out *FirewallPolicy_STATUS) {
	*out = *in
	if in.BasePolicy != nil {
		in, out := &in.BasePolicy, &out.BasePolicy
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ChildPolicies != nil {
		in, out := &in.ChildPolicies, &out.ChildPolicies
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(DnsSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExplicitProxy != nil {
		in, out := &in.ExplicitProxy, &out.ExplicitProxy
		*out = new(ExplicitProxy_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Firewalls != nil {
		in, out := &in.Firewalls, &out.Firewalls
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Insights != nil {
		in, out := &in.Insights, &out.Insights
		*out = new(FirewallPolicyInsights_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.IntrusionDetection != nil {
		in, out := &in.IntrusionDetection, &out.IntrusionDetection
		*out = new(FirewallPolicyIntrusionDetection_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RuleCollectionGroups != nil {
		in, out := &in.RuleCollectionGroups, &out.RuleCollectionGroups
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(FirewallPolicySku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Snat != nil {
		in, out := &in.Snat, &out.Snat
		*out = new(FirewallPolicySNAT_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Sql != nil {
		in, out := &in.Sql, &out.Sql
		*out = new(FirewallPolicySQL_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.ThreatIntelWhitelist != nil {
		in, out := &in.ThreatIntelWhitelist, &out.ThreatIntelWhitelist
		*out = new(FirewallPolicyThreatIntelWhitelist_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportSecurity != nil {
		in, out := &in.TransportSecurity, &out.TransportSecurity
		*out = new(FirewallPolicyTransportSecurity_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicy_STATUS.
func (in *FirewallPolicy_STATUS) DeepCopy() *FirewallPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicy_Spec) DeepCopyInto(out *FirewallPolicy_Spec) {
	*out = *in
	if in.BasePolicy != nil {
		in, out := &in.BasePolicy, &out.BasePolicy
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(DnsSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ExplicitProxy != nil {
		in, out := &in.ExplicitProxy, &out.ExplicitProxy
		*out = new(ExplicitProxy)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Insights != nil {
		in, out := &in.Insights, &out.Insights
		*out = new(FirewallPolicyInsights)
		(*in).DeepCopyInto(*out)
	}
	if in.IntrusionDetection != nil {
		in, out := &in.IntrusionDetection, &out.IntrusionDetection
		*out = new(FirewallPolicyIntrusionDetection)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(FirewallPolicyOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(FirewallPolicySku)
		(*in).DeepCopyInto(*out)
	}
	if in.Snat != nil {
		in, out := &in.Snat, &out.Snat
		*out = new(FirewallPolicySNAT)
		(*in).DeepCopyInto(*out)
	}
	if in.Sql != nil {
		in, out := &in.Sql, &out.Sql
		*out = new(FirewallPolicySQL)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.ThreatIntelWhitelist != nil {
		in, out := &in.ThreatIntelWhitelist, &out.ThreatIntelWhitelist
		*out = new(FirewallPolicyThreatIntelWhitelist)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportSecurity != nil {
		in, out := &in.TransportSecurity, &out.TransportSecurity
		*out = new(FirewallPolicyTransportSecurity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicy_Spec.
func (in *FirewallPolicy_Spec) DeepCopy() *FirewallPolicy_Spec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicy_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLog_STATUS_SubResourceEmbedded) DeepCopyInto(out *FlowLog_STATUS_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLog_STATUS_SubResourceEmbedded.
func (in *FlowLog_STATUS_SubResourceEmbedded) DeepCopy() *FlowLog_STATUS_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(FlowLog_STATUS_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.GatewayLoadBalancer != nil {
		in, out := &in.GatewayLoadBalancer, &out.GatewayLoadBalancer
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_LoadBalancer_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded.
func (in *FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded) DeepCopy() *FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded.
func (in *FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded) DeepCopy() *FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.GatewayLoadBalancer != nil {
		in, out := &in.GatewayLoadBalancer, &out.GatewayLoadBalancer
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.InboundNatPools != nil {
		in, out := &in.InboundNatPools, &out.InboundNatPools
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatRules != nil {
		in, out := &in.InboundNatRules, &out.InboundNatRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_STATUS_LoadBalancer_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded.
func (in *FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopy() *FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayLoadBalancerTunnelInterface) DeepCopyInto(out *GatewayLoadBalancerTunnelInterface) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(int)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayLoadBalancerTunnelInterface.
func (in *GatewayLoadBalancerTunnelInterface) DeepCopy() *GatewayLoadBalancerTunnelInterface {
	if in == nil {
		return nil
	}
	out := new(GatewayLoadBalancerTunnelInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayLoadBalancerTunnelInterface_STATUS) DeepCopyInto(out *GatewayLoadBalancerTunnelInterface_STATUS) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(int)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayLoadBalancerTunnelInterface_STATUS.
func (in *GatewayLoadBalancerTunnelInterface_STATUS) DeepCopy() *GatewayLoadBalancerTunnelInterface_STATUS {
	if in == nil {
		return nil
	}
	out := new(GatewayLoadBalancerTunnelInterface_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HubIPAddresses) DeepCopyInto(out *HubIPAddresses) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = new(HubPublicIPAddresses)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HubIPAddresses.
func (in *HubIPAddresses) DeepCopy() *HubIPAddresses {
	if in == nil {
		return nil
	}
	out := new(HubIPAddresses)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HubIPAddresses_STATUS) DeepCopyInto(out *HubIPAddresses_STATUS) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPs != nil {
		in, out := &in.PublicIPs, &out.PublicIPs
		*out = new(HubPublicIPAddresses_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HubIPAddresses_STATUS.
func (in *HubIPAddresses_STATUS) DeepCopy() *HubIPAddresses_STATUS {
	if in == nil {
		return nil
	}
	out := new(HubIPAddresses_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HubPublicIPAddresses) DeepCopyInto(out *HubPublicIPAddresses) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]AzureFirewallPublicIPAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HubPublicIPAddresses.
func (in *HubPublicIPAddresses) DeepCopy() *HubPublicIPAddresses {
	if in == nil {
		return nil
	}
	out := new(HubPublicIPAddresses)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HubPublicIPAddresses_STATUS) DeepCopyInto(out *HubPublicIPAddresses_STATUS) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]AzureFirewallPublicIPAddress_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HubPublicIPAddresses_STATUS.
func (in *HubPublicIPAddresses_STATUS) DeepCopy() *HubPublicIPAddresses_STATUS {
	if in == nil {
		return nil
	}
	out := new(HubPublicIPAddresses_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationBgpPeeringAddress) DeepCopyInto(out *IPConfigurationBgpPeeringAddress) {
	*out = *in
	if in.CustomBgpIpAddresses != nil {
		in, out := &in.CustomBgpIpAddresses, &out.CustomBgpIpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpconfigurationId != nil {
		in, out := &in.IpconfigurationId, &out.IpconfigurationId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationBgpPeeringAddress.
func (in *IPConfigurationBgpPeeringAddress) DeepCopy() *IPConfigurationBgpPeeringAddress {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationBgpPeeringAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationBgpPeeringAddress_STATUS) DeepCopyInto(out *IPConfigurationBgpPeeringAddress_STATUS) {
	*out = *in
	if in.CustomBgpIpAddresses != nil {
		in, out := &in.CustomBgpIpAddresses, &out.CustomBgpIpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultBgpIpAddresses != nil {
		in, out := &in.DefaultBgpIpAddresses, &out.DefaultBgpIpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpconfigurationId != nil {
		in, out := &in.IpconfigurationId, &out.IpconfigurationId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TunnelIpAddresses != nil {
		in, out := &in.TunnelIpAddresses, &out.TunnelIpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationBgpPeeringAddress_STATUS.
func (in *IPConfigurationBgpPeeringAddress_STATUS) DeepCopy() *IPConfigurationBgpPeeringAddress_STATUS {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationBgpPeeringAddress_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigurationProfile_STATUS) DeepCopyInto(out *IPConfigurationProfile_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigurationProfile_STATUS.
func (in *IPConfigurationProfile_STATUS) DeepCopy() *IPConfigurationProfile_STATUS {
	if in == nil {
		return nil
	}
	out := new(IPConfigurationProfile_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded) DeepCopyInto(out *IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded.
func (in *IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded) DeepCopy() *IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRule) DeepCopyInto(out *IPRule) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRule.
func (in *IPRule) DeepCopy() *IPRule {
	if in == nil {
		return nil
	}
	out := new(IPRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPRule_STATUS) DeepCopyInto(out *IPRule_STATUS) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPRule_STATUS.
func (in *IPRule_STATUS) DeepCopy() *IPRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(IPRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatPool) DeepCopyInto(out *InboundNatPool) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatPool.
func (in *InboundNatPool) DeepCopy() *InboundNatPool {
	if in == nil {
		return nil
	}
	out := new(InboundNatPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatPool_STATUS) DeepCopyInto(out *InboundNatPool_STATUS) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatPool_STATUS.
func (in *InboundNatPool_STATUS) DeepCopy() *InboundNatPool_STATUS {
	if in == nil {
		return nil
	}
	out := new(InboundNatPool_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRule_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *InboundNatRule_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRule_LoadBalancer_SubResourceEmbedded.
func (in *InboundNatRule_LoadBalancer_SubResourceEmbedded) DeepCopy() *InboundNatRule_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(InboundNatRule_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRule_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *InboundNatRule_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRule_NetworkInterface_SubResourceEmbedded.
func (in *InboundNatRule_NetworkInterface_SubResourceEmbedded) DeepCopy() *InboundNatRule_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(InboundNatRule_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendIPConfiguration != nil {
		in, out := &in.BackendIPConfiguration, &out.BackendIPConfiguration
		*out = new(NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpTag) DeepCopyInto(out *IpTag) {
	*out = *in
	if in.IpTagType != nil {
		in, out := &in.IpTagType, &out.IpTagType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpTag.
func (in *IpTag) DeepCopy() *IpTag {
	if in == nil {
		return nil
	}
	out := new(IpTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpTag_STATUS) DeepCopyInto(out *IpTag_STATUS) {
	*out = *in
	if in.IpTagType != nil {
		in, out := &in.IpTagType, &out.IpTagType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpTag_STATUS.
func (in *IpTag_STATUS) DeepCopy() *IpTag_STATUS {
	if in == nil {
		return nil
	}
	out := new(IpTag_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecPolicy) DeepCopyInto(out *IpsecPolicy) {
	*out = *in
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IkeEncryption != nil {
		in, out := &in.IkeEncryption, &out.IkeEncryption
		*out = new(string)
		**out = **in
	}
	if in.IkeIntegrity != nil {
		in, out := &in.IkeIntegrity, &out.IkeIntegrity
		*out = new(string)
		**out = **in
	}
	if in.IpsecEncryption != nil {
		in, out := &in.IpsecEncryption, &out.IpsecEncryption
		*out = new(string)
		**out = **in
	}
	if in.IpsecIntegrity != nil {
		in, out := &in.IpsecIntegrity, &out.IpsecIntegrity
		*out = new(string)
		**out = **in
	}
	if in.PfsGroup != nil {
		in, out := &in.PfsGroup, &out.PfsGroup
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SaDataSizeKilobytes != nil {
		in, out := &in.SaDataSizeKilobytes, &out.SaDataSizeKilobytes
		*out = new(int)
		**out = **in
	}
	if in.SaLifeTimeSeconds != nil {
		in, out := &in.SaLifeTimeSeconds, &out.SaLifeTimeSeconds
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecPolicy.
func (in *IpsecPolicy) DeepCopy() *IpsecPolicy {
	if in == nil {
		return nil
	}
	out := new(IpsecPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecPolicy_STATUS) DeepCopyInto(out *IpsecPolicy_STATUS) {
	*out = *in
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IkeEncryption != nil {
		in, out := &in.IkeEncryption, &out.IkeEncryption
		*out = new(string)
		**out = **in
	}
	if in.IkeIntegrity != nil {
		in, out := &in.IkeIntegrity, &out.IkeIntegrity
		*out = new(string)
		**out = **in
	}
	if in.IpsecEncryption != nil {
		in, out := &in.IpsecEncryption, &out.IpsecEncryption
		*out = new(string)
		**out = **in
	}
	if in.IpsecIntegrity != nil {
		in, out := &in.IpsecIntegrity, &out.IpsecIntegrity
		*out = new(string)
		**out = **in
	}
	if in.PfsGroup != nil {
		in, out := &in.PfsGroup, &out.PfsGroup
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SaDataSizeKilobytes != nil {
		in, out := &in.SaDataSizeKilobytes, &out.SaDataSizeKilobytes
		*out = new(int)
		**out = **in
	}
	if in.SaLifeTimeSeconds != nil {
		in, out := &in.SaLifeTimeSeconds, &out.SaLifeTimeSeconds
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecPolicy_STATUS.
func (in *IpsecPolicy_STATUS) DeepCopy() *IpsecPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(IpsecPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddress) DeepCopyInto(out *LoadBalancerBackendAddress) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerFrontendIPConfiguration != nil {
		in, out := &in.LoadBalancerFrontendIPConfiguration, &out.LoadBalancerFrontendIPConfiguration
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddress.
func (in *LoadBalancerBackendAddress) DeepCopy() *LoadBalancerBackendAddress {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendAddress_STATUS) DeepCopyInto(out *LoadBalancerBackendAddress_STATUS) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.InboundNatRulesPortMapping != nil {
		in, out := &in.InboundNatRulesPortMapping, &out.InboundNatRulesPortMapping
		*out = make([]NatRulePortMapping_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerFrontendIPConfiguration != nil {
		in, out := &in.LoadBalancerFrontendIPConfiguration, &out.LoadBalancerFrontendIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIPConfiguration != nil {
		in, out := &in.NetworkInterfaceIPConfiguration, &out.NetworkInterfaceIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendAddress_STATUS.
func (in *LoadBalancerBackendAddress_STATUS) DeepCopy() *LoadBalancerBackendAddress_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendAddress_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerList) DeepCopyInto(out *LoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerList.
func (in *LoadBalancerList) DeepCopy() *LoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerOperatorSpec) DeepCopyInto(out *LoadBalancerOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerOperatorSpec.
func (in *LoadBalancerOperatorSpec) DeepCopy() *LoadBalancerOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSku) DeepCopyInto(out *LoadBalancerSku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSku.
func (in *LoadBalancerSku) DeepCopy() *LoadBalancerSku {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSku_STATUS) DeepCopyInto(out *LoadBalancerSku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSku_STATUS.
func (in *LoadBalancerSku_STATUS) DeepCopy() *LoadBalancerSku_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer_STATUS) DeepCopyInto(out *LoadBalancer_STATUS) {
	*out = *in
	if in.BackendAddressPools != nil {
		in, out := &in.BackendAddressPools, &out.BackendAddressPools
		*out = make([]BackendAddressPool_STATUS_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendIPConfigurations != nil {
		in, out := &in.FrontendIPConfigurations, &out.FrontendIPConfigurations
		*out = make([]FrontendIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.InboundNatPools != nil {
		in, out := &in.InboundNatPools, &out.InboundNatPools
		*out = make([]InboundNatPool_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatRules != nil {
		in, out := &in.InboundNatRules, &out.InboundNatRules
		*out = make([]InboundNatRule_STATUS_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]LoadBalancingRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]OutboundRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Probes != nil {
		in, out := &in.Probes, &out.Probes
		*out = make([]Probe_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(LoadBalancerSku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer_STATUS.
func (in *LoadBalancer_STATUS) DeepCopy() *LoadBalancer_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer_Spec) DeepCopyInto(out *LoadBalancer_Spec) {
	*out = *in
	if in.BackendAddressPools != nil {
		in, out := &in.BackendAddressPools, &out.BackendAddressPools
		*out = make([]BackendAddressPool_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendIPConfigurations != nil {
		in, out := &in.FrontendIPConfigurations, &out.FrontendIPConfigurations
		*out = make([]FrontendIPConfiguration_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatPools != nil {
		in, out := &in.InboundNatPools, &out.InboundNatPools
		*out = make([]InboundNatPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundNatRules != nil {
		in, out := &in.InboundNatRules, &out.InboundNatRules
		*out = make([]InboundNatRule_LoadBalancer_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]LoadBalancingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(LoadBalancerOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundRules != nil {
		in, out := &in.OutboundRules, &out.OutboundRules
		*out = make([]OutboundRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Probes != nil {
		in, out := &in.Probes, &out.Probes
		*out = make([]Probe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(LoadBalancerSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer_Spec.
func (in *LoadBalancer_Spec) DeepCopy() *LoadBalancer_Spec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInboundNatRule) DeepCopyInto(out *LoadBalancersInboundNatRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInboundNatRule.
func (in *LoadBalancersInboundNatRule) DeepCopy() *LoadBalancersInboundNatRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInboundNatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancersInboundNatRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInboundNatRuleList) DeepCopyInto(out *LoadBalancersInboundNatRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancersInboundNatRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInboundNatRuleList.
func (in *LoadBalancersInboundNatRuleList) DeepCopy() *LoadBalancersInboundNatRuleList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInboundNatRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancersInboundNatRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInboundNatRuleOperatorSpec) DeepCopyInto(out *LoadBalancersInboundNatRuleOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInboundNatRuleOperatorSpec.
func (in *LoadBalancersInboundNatRuleOperatorSpec) DeepCopy() *LoadBalancersInboundNatRuleOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInboundNatRuleOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInboundNatRule_STATUS) DeepCopyInto(out *LoadBalancersInboundNatRule_STATUS) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendIPConfiguration != nil {
		in, out := &in.BackendIPConfiguration, &out.BackendIPConfiguration
		*out = new(NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInboundNatRule_STATUS.
func (in *LoadBalancersInboundNatRule_STATUS) DeepCopy() *LoadBalancersInboundNatRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInboundNatRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInboundNatRule_Spec) DeepCopyInto(out *LoadBalancersInboundNatRule_Spec) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeEnd != nil {
		in, out := &in.FrontendPortRangeEnd, &out.FrontendPortRangeEnd
		*out = new(int)
		**out = **in
	}
	if in.FrontendPortRangeStart != nil {
		in, out := &in.FrontendPortRangeStart, &out.FrontendPortRangeStart
		*out = new(int)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(LoadBalancersInboundNatRuleOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInboundNatRule_Spec.
func (in *LoadBalancersInboundNatRule_Spec) DeepCopy() *LoadBalancersInboundNatRule_Spec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInboundNatRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingRule) DeepCopyInto(out *LoadBalancingRule) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendAddressPools != nil {
		in, out := &in.BackendAddressPools, &out.BackendAddressPools
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.DisableOutboundSnat != nil {
		in, out := &in.DisableOutboundSnat, &out.DisableOutboundSnat
		*out = new(bool)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.LoadDistribution != nil {
		in, out := &in.LoadDistribution, &out.LoadDistribution
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingRule.
func (in *LoadBalancingRule) DeepCopy() *LoadBalancingRule {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingRule_STATUS) DeepCopyInto(out *LoadBalancingRule_STATUS) {
	*out = *in
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendAddressPools != nil {
		in, out := &in.BackendAddressPools, &out.BackendAddressPools
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.DisableOutboundSnat != nil {
		in, out := &in.DisableOutboundSnat, &out.DisableOutboundSnat
		*out = new(bool)
		**out = **in
	}
	if in.EnableFloatingIP != nil {
		in, out := &in.EnableFloatingIP, &out.EnableFloatingIP
		*out = new(bool)
		**out = **in
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfiguration != nil {
		in, out := &in.FrontendIPConfiguration, &out.FrontendIPConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.LoadDistribution != nil {
		in, out := &in.LoadDistribution, &out.LoadDistribution
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Probe != nil {
		in, out := &in.Probe, &out.Probe
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingRule_STATUS.
func (in *LoadBalancingRule_STATUS) DeepCopy() *LoadBalancingRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity) DeepCopyInto(out *ManagedServiceIdentity) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make([]UserAssignedIdentityDetails, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity.
func (in *ManagedServiceIdentity) DeepCopy() *ManagedServiceIdentity {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity_STATUS) DeepCopyInto(out *ManagedServiceIdentity_STATUS) {
	*out = *in
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TenantId != nil {
		in, out := &in.TenantId, &out.TenantId
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentities != nil {
		in, out := &in.UserAssignedIdentities, &out.UserAssignedIdentities
		*out = make(map[string]ManagedServiceIdentity_UserAssignedIdentities_STATUS, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity_STATUS.
func (in *ManagedServiceIdentity_STATUS) DeepCopy() *ManagedServiceIdentity_STATUS {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedServiceIdentity_UserAssignedIdentities_STATUS) DeepCopyInto(out *ManagedServiceIdentity_UserAssignedIdentities_STATUS) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.PrincipalId != nil {
		in, out := &in.PrincipalId, &out.PrincipalId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedServiceIdentity_UserAssignedIdentities_STATUS.
func (in *ManagedServiceIdentity_UserAssignedIdentities_STATUS) DeepCopy() *ManagedServiceIdentity_UserAssignedIdentities_STATUS {
	if in == nil {
		return nil
	}
	out := new(ManagedServiceIdentity_UserAssignedIdentities_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGateway) DeepCopyInto(out *NatGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGateway.
func (in *NatGateway) DeepCopy() *NatGateway {
	if in == nil {
		return nil
	}
	out := new(NatGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewayList) DeepCopyInto(out *NatGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NatGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewayList.
func (in *NatGatewayList) DeepCopy() *NatGatewayList {
	if in == nil {
		return nil
	}
	out := new(NatGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewayOperatorSpec) DeepCopyInto(out *NatGatewayOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewayOperatorSpec.
func (in *NatGatewayOperatorSpec) DeepCopy() *NatGatewayOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NatGatewayOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewaySku) DeepCopyInto(out *NatGatewaySku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewaySku.
func (in *NatGatewaySku) DeepCopy() *NatGatewaySku {
	if in == nil {
		return nil
	}
	out := new(NatGatewaySku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewaySku_STATUS) DeepCopyInto(out *NatGatewaySku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewaySku_STATUS.
func (in *NatGatewaySku_STATUS) DeepCopy() *NatGatewaySku_STATUS {
	if in == nil {
		return nil
	}
	out := new(NatGatewaySku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewaySpec_PublicIPAddress_SubResourceEmbedded) DeepCopyInto(out *NatGatewaySpec_PublicIPAddress_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewaySpec_PublicIPAddress_SubResourceEmbedded.
func (in *NatGatewaySpec_PublicIPAddress_SubResourceEmbedded) DeepCopy() *NatGatewaySpec_PublicIPAddress_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NatGatewaySpec_PublicIPAddress_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded) DeepCopyInto(out *NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded.
func (in *NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded) DeepCopy() *NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGateway_STATUS) DeepCopyInto(out *NatGateway_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIpAddresses != nil {
		in, out := &in.PublicIpAddresses, &out.PublicIpAddresses
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicIpPrefixes != nil {
		in, out := &in.PublicIpPrefixes, &out.PublicIpPrefixes
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(NatGatewaySku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGateway_STATUS.
func (in *NatGateway_STATUS) DeepCopy() *NatGateway_STATUS {
	if in == nil {
		return nil
	}
	out := new(NatGateway_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded) DeepCopyInto(out *NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded.
func (in *NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded) DeepCopy() *NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded) DeepCopyInto(out *NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded.
func (in *NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded) DeepCopy() *NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatGateway_Spec) DeepCopyInto(out *NatGateway_Spec) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NatGatewayOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIpAddresses != nil {
		in, out := &in.PublicIpAddresses, &out.PublicIpAddresses
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicIpPrefixes != nil {
		in, out := &in.PublicIpPrefixes, &out.PublicIpPrefixes
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(NatGatewaySku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatGateway_Spec.
func (in *NatGateway_Spec) DeepCopy() *NatGateway_Spec {
	if in == nil {
		return nil
	}
	out := new(NatGateway_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRule) DeepCopyInto(out *NatRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpProtocols != nil {
		in, out := &in.IpProtocols, &out.IpProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TranslatedAddress != nil {
		in, out := &in.TranslatedAddress, &out.TranslatedAddress
		*out = new(string)
		**out = **in
	}
	if in.TranslatedFqdn != nil {
		in, out := &in.TranslatedFqdn, &out.TranslatedFqdn
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPort != nil {
		in, out := &in.TranslatedPort, &out.TranslatedPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRule.
func (in *NatRule) DeepCopy() *NatRule {
	if in == nil {
		return nil
	}
	out := new(NatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRulePortMapping_STATUS) DeepCopyInto(out *NatRulePortMapping_STATUS) {
	*out = *in
	if in.BackendPort != nil {
		in, out := &in.BackendPort, &out.BackendPort
		*out = new(int)
		**out = **in
	}
	if in.FrontendPort != nil {
		in, out := &in.FrontendPort, &out.FrontendPort
		*out = new(int)
		**out = **in
	}
	if in.InboundNatRuleName != nil {
		in, out := &in.InboundNatRuleName, &out.InboundNatRuleName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRulePortMapping_STATUS.
func (in *NatRulePortMapping_STATUS) DeepCopy() *NatRulePortMapping_STATUS {
	if in == nil {
		return nil
	}
	out := new(NatRulePortMapping_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRule_STATUS) DeepCopyInto(out *NatRule_STATUS) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpProtocols != nil {
		in, out := &in.IpProtocols, &out.IpProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TranslatedAddress != nil {
		in, out := &in.TranslatedAddress, &out.TranslatedAddress
		*out = new(string)
		**out = **in
	}
	if in.TranslatedFqdn != nil {
		in, out := &in.TranslatedFqdn, &out.TranslatedFqdn
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPort != nil {
		in, out := &in.TranslatedPort, &out.TranslatedPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRule_STATUS.
func (in *NatRule_STATUS) DeepCopy() *NatRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(NatRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceDnsSettings) DeepCopyInto(out *NetworkInterfaceDnsSettings) {
	*out = *in
	if in.DnsServers != nil {
		in, out := &in.DnsServers, &out.DnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InternalDnsNameLabel != nil {
		in, out := &in.InternalDnsNameLabel, &out.InternalDnsNameLabel
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceDnsSettings.
func (in *NetworkInterfaceDnsSettings) DeepCopy() *NetworkInterfaceDnsSettings {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceDnsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceDnsSettings_STATUS) DeepCopyInto(out *NetworkInterfaceDnsSettings_STATUS) {
	*out = *in
	if in.AppliedDnsServers != nil {
		in, out := &in.AppliedDnsServers, &out.AppliedDnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DnsServers != nil {
		in, out := &in.DnsServers, &out.DnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InternalDnsNameLabel != nil {
		in, out := &in.InternalDnsNameLabel, &out.InternalDnsNameLabel
		*out = new(string)
		**out = **in
	}
	if in.InternalDomainNameSuffix != nil {
		in, out := &in.InternalDomainNameSuffix, &out.InternalDomainNameSuffix
		*out = new(string)
		**out = **in
	}
	if in.InternalFqdn != nil {
		in, out := &in.InternalFqdn, &out.InternalFqdn
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceDnsSettings_STATUS.
func (in *NetworkInterfaceDnsSettings_STATUS) DeepCopy() *NetworkInterfaceDnsSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceDnsSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS) DeepCopyInto(out *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequiredMemberName != nil {
		in, out := &in.RequiredMemberName, &out.RequiredMemberName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS.
func (in *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS) DeepCopy() *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.ApplicationGatewayBackendAddressPools != nil {
		in, out := &in.ApplicationGatewayBackendAddressPools, &out.ApplicationGatewayBackendAddressPools
		*out = make([]ApplicationGatewayBackendAddressPool_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroupSpec_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayLoadBalancer != nil {
		in, out := &in.GatewayLoadBalancer, &out.GatewayLoadBalancer
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerBackendAddressPools != nil {
		in, out := &in.LoadBalancerBackendAddressPools, &out.LoadBalancerBackendAddressPools
		*out = make([]BackendAddressPool_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerInboundNatRules != nil {
		in, out := &in.LoadBalancerInboundNatRules, &out.LoadBalancerInboundNatRules
		*out = make([]InboundNatRule_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressPrefixLength != nil {
		in, out := &in.PrivateIPAddressPrefixLength, &out.PrivateIPAddressPrefixLength
		*out = new(int)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNetworkTaps != nil {
		in, out := &in.VirtualNetworkTaps, &out.VirtualNetworkTaps
		*out = make([]VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded.
func (in *NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfiguration_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded) DeepCopyInto(out *NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded.
func (in *NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded) DeepCopy() *NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfiguration_STATUS_LoadBalancers_InboundNatRule_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.ApplicationGatewayBackendAddressPools != nil {
		in, out := &in.ApplicationGatewayBackendAddressPools, &out.ApplicationGatewayBackendAddressPools
		*out = make([]ApplicationGatewayBackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.GatewayLoadBalancer != nil {
		in, out := &in.GatewayLoadBalancer, &out.GatewayLoadBalancer
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBackendAddressPools != nil {
		in, out := &in.LoadBalancerBackendAddressPools, &out.LoadBalancerBackendAddressPools
		*out = make([]BackendAddressPool_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerInboundNatRules != nil {
		in, out := &in.LoadBalancerInboundNatRules, &out.LoadBalancerInboundNatRules
		*out = make([]InboundNatRule_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressPrefixLength != nil {
		in, out := &in.PrivateIPAddressPrefixLength, &out.PrivateIPAddressPrefixLength
		*out = new(int)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkConnectionProperties != nil {
		in, out := &in.PrivateLinkConnectionProperties, &out.PrivateLinkConnectionProperties
		*out = new(NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_STATUS_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkTaps != nil {
		in, out := &in.VirtualNetworkTaps, &out.VirtualNetworkTaps
		*out = make([]VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceList) DeepCopyInto(out *NetworkInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceList.
func (in *NetworkInterfaceList) DeepCopy() *NetworkInterfaceList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceOperatorSpec) DeepCopyInto(out *NetworkInterfaceOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceOperatorSpec.
func (in *NetworkInterfaceOperatorSpec) DeepCopy() *NetworkInterfaceOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.AuxiliaryMode != nil {
		in, out := &in.AuxiliaryMode, &out.AuxiliaryMode
		*out = new(string)
		**out = **in
	}
	if in.AuxiliarySku != nil {
		in, out := &in.AuxiliarySku, &out.AuxiliarySku
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableTcpStateTracking != nil {
		in, out := &in.DisableTcpStateTracking, &out.DisableTcpStateTracking
		*out = new(bool)
		**out = **in
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(NetworkInterfaceDnsSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.DscpConfiguration != nil {
		in, out := &in.DscpConfiguration, &out.DscpConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleratedNetworking != nil {
		in, out := &in.EnableAcceleratedNetworking, &out.EnableAcceleratedNetworking
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPForwarding != nil {
		in, out := &in.EnableIPForwarding, &out.EnableIPForwarding
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.HostedWorkloads != nil {
		in, out := &in.HostedWorkloads, &out.HostedWorkloads
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]NetworkInterfaceIPConfiguration_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.MigrationPhase != nil {
		in, out := &in.MigrationPhase, &out.MigrationPhase
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkService != nil {
		in, out := &in.PrivateLinkService, &out.PrivateLinkService
		*out = new(PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TapConfigurations != nil {
		in, out := &in.TapConfigurations, &out.TapConfigurations
		*out = make([]NetworkInterfaceTapConfiguration_STATUS_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachine != nil {
		in, out := &in.VirtualMachine, &out.VirtualMachine
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.VnetEncryptionSupported != nil {
		in, out := &in.VnetEncryptionSupported, &out.VnetEncryptionSupported
		*out = new(bool)
		**out = **in
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopyInto(out *NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded.
func (in *NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopy() *NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded.
func (in *NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded.
func (in *NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopy() *NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface_Spec) DeepCopyInto(out *NetworkInterface_Spec) {
	*out = *in
	if in.AuxiliaryMode != nil {
		in, out := &in.AuxiliaryMode, &out.AuxiliaryMode
		*out = new(string)
		**out = **in
	}
	if in.AuxiliarySku != nil {
		in, out := &in.AuxiliarySku, &out.AuxiliarySku
		*out = new(string)
		**out = **in
	}
	if in.DisableTcpStateTracking != nil {
		in, out := &in.DisableTcpStateTracking, &out.DisableTcpStateTracking
		*out = new(bool)
		**out = **in
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(NetworkInterfaceDnsSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleratedNetworking != nil {
		in, out := &in.EnableAcceleratedNetworking, &out.EnableAcceleratedNetworking
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPForwarding != nil {
		in, out := &in.EnableIPForwarding, &out.EnableIPForwarding
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]NetworkInterfaceIPConfiguration_NetworkInterface_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NetworkInterfaceOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrivateLinkService != nil {
		in, out := &in.PrivateLinkService, &out.PrivateLinkService
		*out = new(PrivateLinkServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.WorkloadType != nil {
		in, out := &in.WorkloadType, &out.WorkloadType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface_Spec.
func (in *NetworkInterface_Spec) DeepCopy() *NetworkInterface_Spec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRule) DeepCopyInto(out *NetworkRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIpGroups != nil {
		in, out := &in.DestinationIpGroups, &out.DestinationIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpProtocols != nil {
		in, out := &in.IpProtocols, &out.IpProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRule.
func (in *NetworkRule) DeepCopy() *NetworkRule {
	if in == nil {
		return nil
	}
	out := new(NetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRule_STATUS) DeepCopyInto(out *NetworkRule_STATUS) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIpGroups != nil {
		in, out := &in.DestinationIpGroups, &out.DestinationIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpProtocols != nil {
		in, out := &in.IpProtocols, &out.IpProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIpGroups != nil {
		in, out := &in.SourceIpGroups, &out.SourceIpGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRule_STATUS.
func (in *NetworkRule_STATUS) DeepCopy() *NetworkRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(NetworkRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup) DeepCopyInto(out *NetworkSecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup.
func (in *NetworkSecurityGroup) DeepCopy() *NetworkSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupList) DeepCopyInto(out *NetworkSecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkSecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupList.
func (in *NetworkSecurityGroupList) DeepCopy() *NetworkSecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupOperatorSpec) DeepCopyInto(out *NetworkSecurityGroupOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupOperatorSpec.
func (in *NetworkSecurityGroupOperatorSpec) DeepCopy() *NetworkSecurityGroupOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded.
func (in *NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSpec_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopyInto(out *NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultSecurityRules != nil {
		in, out := &in.DefaultSecurityRules, &out.DefaultSecurityRules
		*out = make([]SecurityRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FlushConnection != nil {
		in, out := &in.FlushConnection, &out.FlushConnection
		*out = new(bool)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterface_STATUS_NetworkSecurityGroup_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded.
func (in *NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopy() *NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup_STATUS_NetworkSecurityGroup_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup_Spec) DeepCopyInto(out *NetworkSecurityGroup_Spec) {
	*out = *in
	if in.FlushConnection != nil {
		in, out := &in.FlushConnection, &out.FlushConnection
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NetworkSecurityGroupOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup_Spec.
func (in *NetworkSecurityGroup_Spec) DeepCopy() *NetworkSecurityGroup_Spec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupsSecurityRule) DeepCopyInto(out *NetworkSecurityGroupsSecurityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupsSecurityRule.
func (in *NetworkSecurityGroupsSecurityRule) DeepCopy() *NetworkSecurityGroupsSecurityRule {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupsSecurityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupsSecurityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupsSecurityRuleList) DeepCopyInto(out *NetworkSecurityGroupsSecurityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkSecurityGroupsSecurityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupsSecurityRuleList.
func (in *NetworkSecurityGroupsSecurityRuleList) DeepCopy() *NetworkSecurityGroupsSecurityRuleList {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupsSecurityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupsSecurityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupsSecurityRuleOperatorSpec) DeepCopyInto(out *NetworkSecurityGroupsSecurityRuleOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupsSecurityRuleOperatorSpec.
func (in *NetworkSecurityGroupsSecurityRuleOperatorSpec) DeepCopy() *NetworkSecurityGroupsSecurityRuleOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupsSecurityRuleOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupsSecurityRule_STATUS) DeepCopyInto(out *NetworkSecurityGroupsSecurityRule_STATUS) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefix != nil {
		in, out := &in.DestinationAddressPrefix, &out.DestinationAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefixes != nil {
		in, out := &in.DestinationAddressPrefixes, &out.DestinationAddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationApplicationSecurityGroups != nil {
		in, out := &in.DestinationApplicationSecurityGroups, &out.DestinationApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefix != nil {
		in, out := &in.SourceAddressPrefix, &out.SourceAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefixes != nil {
		in, out := &in.SourceAddressPrefixes, &out.SourceAddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceApplicationSecurityGroups != nil {
		in, out := &in.SourceApplicationSecurityGroups, &out.SourceApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroup_STATUS_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupsSecurityRule_STATUS.
func (in *NetworkSecurityGroupsSecurityRule_STATUS) DeepCopy() *NetworkSecurityGroupsSecurityRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupsSecurityRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupsSecurityRule_Spec) DeepCopyInto(out *NetworkSecurityGroupsSecurityRule_Spec) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefix != nil {
		in, out := &in.DestinationAddressPrefix, &out.DestinationAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddressPrefixes != nil {
		in, out := &in.DestinationAddressPrefixes, &out.DestinationAddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationApplicationSecurityGroups != nil {
		in, out := &in.DestinationApplicationSecurityGroups, &out.DestinationApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(NetworkSecurityGroupsSecurityRuleOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefix != nil {
		in, out := &in.SourceAddressPrefix, &out.SourceAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SourceAddressPrefixes != nil {
		in, out := &in.SourceAddressPrefixes, &out.SourceAddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceApplicationSecurityGroups != nil {
		in, out := &in.SourceApplicationSecurityGroups, &out.SourceApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroupSpec_NetworkSecurityGroups_SecurityRule_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupsSecurityRule_Spec.
func (in *NetworkSecurityGroupsSecurityRule_Spec) DeepCopy() *NetworkSecurityGroupsSecurityRule_Spec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupsSecurityRule_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundRule) DeepCopyInto(out *OutboundRule) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.FrontendIPConfigurations != nil {
		in, out := &in.FrontendIPConfigurations, &out.FrontendIPConfigurations
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundRule.
func (in *OutboundRule) DeepCopy() *OutboundRule {
	if in == nil {
		return nil
	}
	out := new(OutboundRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundRule_STATUS) DeepCopyInto(out *OutboundRule_STATUS) {
	*out = *in
	if in.AllocatedOutboundPorts != nil {
		in, out := &in.AllocatedOutboundPorts, &out.AllocatedOutboundPorts
		*out = new(int)
		**out = **in
	}
	if in.BackendAddressPool != nil {
		in, out := &in.BackendAddressPool, &out.BackendAddressPool
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableTcpReset != nil {
		in, out := &in.EnableTcpReset, &out.EnableTcpReset
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FrontendIPConfigurations != nil {
		in, out := &in.FrontendIPConfigurations, &out.FrontendIPConfigurations
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundRule_STATUS.
func (in *OutboundRule_STATUS) DeepCopy() *OutboundRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(OutboundRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDnsZoneConfig) DeepCopyInto(out *PrivateDnsZoneConfig) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDnsZoneReference != nil {
		in, out := &in.PrivateDnsZoneReference, &out.PrivateDnsZoneReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDnsZoneConfig.
func (in *PrivateDnsZoneConfig) DeepCopy() *PrivateDnsZoneConfig {
	if in == nil {
		return nil
	}
	out := new(PrivateDnsZoneConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDnsZoneConfig_STATUS) DeepCopyInto(out *PrivateDnsZoneConfig_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDnsZoneId != nil {
		in, out := &in.PrivateDnsZoneId, &out.PrivateDnsZoneId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RecordSets != nil {
		in, out := &in.RecordSets, &out.RecordSets
		*out = make([]RecordSet_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDnsZoneConfig_STATUS.
func (in *PrivateDnsZoneConfig_STATUS) DeepCopy() *PrivateDnsZoneConfig_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateDnsZoneConfig_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint) DeepCopyInto(out *PrivateEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint.
func (in *PrivateEndpoint) DeepCopy() *PrivateEndpoint {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointConnection_STATUS) DeepCopyInto(out *PrivateEndpointConnection_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointConnection_STATUS.
func (in *PrivateEndpointConnection_STATUS) DeepCopy() *PrivateEndpointConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointIPConfiguration) DeepCopyInto(out *PrivateEndpointIPConfiguration) {
	*out = *in
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.MemberName != nil {
		in, out := &in.MemberName, &out.MemberName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointIPConfiguration.
func (in *PrivateEndpointIPConfiguration) DeepCopy() *PrivateEndpointIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointIPConfiguration_STATUS) DeepCopyInto(out *PrivateEndpointIPConfiguration_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.GroupId != nil {
		in, out := &in.GroupId, &out.GroupId
		*out = new(string)
		**out = **in
	}
	if in.MemberName != nil {
		in, out := &in.MemberName, &out.MemberName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointIPConfiguration_STATUS.
func (in *PrivateEndpointIPConfiguration_STATUS) DeepCopy() *PrivateEndpointIPConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointIPConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointList) DeepCopyInto(out *PrivateEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointList.
func (in *PrivateEndpointList) DeepCopy() *PrivateEndpointList {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointOperatorConfigMaps) DeepCopyInto(out *PrivateEndpointOperatorConfigMaps) {
	*out = *in
	if in.PrimaryNicPrivateIpAddress != nil {
		in, out := &in.PrimaryNicPrivateIpAddress, &out.PrimaryNicPrivateIpAddress
		*out = new(genruntime.ConfigMapDestination)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointOperatorConfigMaps.
func (in *PrivateEndpointOperatorConfigMaps) DeepCopy() *PrivateEndpointOperatorConfigMaps {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointOperatorConfigMaps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointOperatorSpec) DeepCopyInto(out *PrivateEndpointOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = new(PrivateEndpointOperatorConfigMaps)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointOperatorSpec.
func (in *PrivateEndpointOperatorSpec) DeepCopy() *PrivateEndpointOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroup_STATUS_PrivateEndpoint_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomDnsConfigs != nil {
		in, out := &in.CustomDnsConfigs, &out.CustomDnsConfigs
		*out = make([]CustomDnsConfigPropertiesFormat_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomNetworkInterfaceName != nil {
		in, out := &in.CustomNetworkInterfaceName, &out.CustomNetworkInterfaceName
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]PrivateEndpointIPConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManualPrivateLinkServiceConnections != nil {
		in, out := &in.ManualPrivateLinkServiceConnections, &out.ManualPrivateLinkServiceConnections
		*out = make([]PrivateLinkServiceConnection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterface_STATUS_PrivateEndpoint_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateLinkServiceConnections != nil {
		in, out := &in.PrivateLinkServiceConnections, &out.PrivateLinkServiceConnections
		*out = make([]PrivateLinkServiceConnection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded.
func (in *PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint_STATUS_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpoint_Spec) DeepCopyInto(out *PrivateEndpoint_Spec) {
	*out = *in
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]ApplicationSecurityGroupSpec_PrivateEndpoint_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomNetworkInterfaceName != nil {
		in, out := &in.CustomNetworkInterfaceName, &out.CustomNetworkInterfaceName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]PrivateEndpointIPConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManualPrivateLinkServiceConnections != nil {
		in, out := &in.ManualPrivateLinkServiceConnections, &out.ManualPrivateLinkServiceConnections
		*out = make([]PrivateLinkServiceConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(PrivateEndpointOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrivateLinkServiceConnections != nil {
		in, out := &in.PrivateLinkServiceConnections, &out.PrivateLinkServiceConnections
		*out = make([]PrivateLinkServiceConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_PrivateEndpoint_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpoint_Spec.
func (in *PrivateEndpoint_Spec) DeepCopy() *PrivateEndpoint_Spec {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpoint_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointsPrivateDnsZoneGroup) DeepCopyInto(out *PrivateEndpointsPrivateDnsZoneGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointsPrivateDnsZoneGroup.
func (in *PrivateEndpointsPrivateDnsZoneGroup) DeepCopy() *PrivateEndpointsPrivateDnsZoneGroup {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointsPrivateDnsZoneGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpointsPrivateDnsZoneGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointsPrivateDnsZoneGroupList) DeepCopyInto(out *PrivateEndpointsPrivateDnsZoneGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateEndpointsPrivateDnsZoneGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointsPrivateDnsZoneGroupList.
func (in *PrivateEndpointsPrivateDnsZoneGroupList) DeepCopy() *PrivateEndpointsPrivateDnsZoneGroupList {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointsPrivateDnsZoneGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateEndpointsPrivateDnsZoneGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointsPrivateDnsZoneGroupOperatorSpec) DeepCopyInto(out *PrivateEndpointsPrivateDnsZoneGroupOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointsPrivateDnsZoneGroupOperatorSpec.
func (in *PrivateEndpointsPrivateDnsZoneGroupOperatorSpec) DeepCopy() *PrivateEndpointsPrivateDnsZoneGroupOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointsPrivateDnsZoneGroupOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointsPrivateDnsZoneGroup_STATUS) DeepCopyInto(out *PrivateEndpointsPrivateDnsZoneGroup_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDnsZoneConfigs != nil {
		in, out := &in.PrivateDnsZoneConfigs, &out.PrivateDnsZoneConfigs
		*out = make([]PrivateDnsZoneConfig_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointsPrivateDnsZoneGroup_STATUS.
func (in *PrivateEndpointsPrivateDnsZoneGroup_STATUS) DeepCopy() *PrivateEndpointsPrivateDnsZoneGroup_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointsPrivateDnsZoneGroup_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointsPrivateDnsZoneGroup_Spec) DeepCopyInto(out *PrivateEndpointsPrivateDnsZoneGroup_Spec) {
	*out = *in
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(PrivateEndpointsPrivateDnsZoneGroupOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrivateDnsZoneConfigs != nil {
		in, out := &in.PrivateDnsZoneConfigs, &out.PrivateDnsZoneConfigs
		*out = make([]PrivateDnsZoneConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointsPrivateDnsZoneGroup_Spec.
func (in *PrivateEndpointsPrivateDnsZoneGroup_Spec) DeepCopy() *PrivateEndpointsPrivateDnsZoneGroup_Spec {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointsPrivateDnsZoneGroup_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkService) DeepCopyInto(out *PrivateLinkService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkService.
func (in *PrivateLinkService) DeepCopy() *PrivateLinkService {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLinkService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceConnection) DeepCopyInto(out *PrivateLinkServiceConnection) {
	*out = *in
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkServiceConnectionState != nil {
		in, out := &in.PrivateLinkServiceConnectionState, &out.PrivateLinkServiceConnectionState
		*out = new(PrivateLinkServiceConnectionState)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkServiceReference != nil {
		in, out := &in.PrivateLinkServiceReference, &out.PrivateLinkServiceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceConnection.
func (in *PrivateLinkServiceConnection) DeepCopy() *PrivateLinkServiceConnection {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceConnectionState) DeepCopyInto(out *PrivateLinkServiceConnectionState) {
	*out = *in
	if in.ActionsRequired != nil {
		in, out := &in.ActionsRequired, &out.ActionsRequired
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceConnectionState.
func (in *PrivateLinkServiceConnectionState) DeepCopy() *PrivateLinkServiceConnectionState {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceConnectionState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceConnectionState_STATUS) DeepCopyInto(out *PrivateLinkServiceConnectionState_STATUS) {
	*out = *in
	if in.ActionsRequired != nil {
		in, out := &in.ActionsRequired, &out.ActionsRequired
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceConnectionState_STATUS.
func (in *PrivateLinkServiceConnectionState_STATUS) DeepCopy() *PrivateLinkServiceConnectionState_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceConnectionState_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceConnection_STATUS) DeepCopyInto(out *PrivateLinkServiceConnection_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkServiceConnectionState != nil {
		in, out := &in.PrivateLinkServiceConnectionState, &out.PrivateLinkServiceConnectionState
		*out = new(PrivateLinkServiceConnectionState_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateLinkServiceId != nil {
		in, out := &in.PrivateLinkServiceId, &out.PrivateLinkServiceId
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceConnection_STATUS.
func (in *PrivateLinkServiceConnection_STATUS) DeepCopy() *PrivateLinkServiceConnection_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceConnection_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceIpConfiguration) DeepCopyInto(out *PrivateLinkServiceIpConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_PrivateLinkService_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceIpConfiguration.
func (in *PrivateLinkServiceIpConfiguration) DeepCopy() *PrivateLinkServiceIpConfiguration {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceIpConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceIpConfiguration_STATUS) DeepCopyInto(out *PrivateLinkServiceIpConfiguration_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(Subnet_STATUS_PrivateLinkService_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceIpConfiguration_STATUS.
func (in *PrivateLinkServiceIpConfiguration_STATUS) DeepCopy() *PrivateLinkServiceIpConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceIpConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceList) DeepCopyInto(out *PrivateLinkServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateLinkService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceList.
func (in *PrivateLinkServiceList) DeepCopy() *PrivateLinkServiceList {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLinkServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceOperatorConfigMaps) DeepCopyInto(out *PrivateLinkServiceOperatorConfigMaps) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(genruntime.ConfigMapDestination)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceOperatorConfigMaps.
func (in *PrivateLinkServiceOperatorConfigMaps) DeepCopy() *PrivateLinkServiceOperatorConfigMaps {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceOperatorConfigMaps)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceOperatorSpec) DeepCopyInto(out *PrivateLinkServiceOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = new(PrivateLinkServiceOperatorConfigMaps)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceOperatorSpec.
func (in *PrivateLinkServiceOperatorSpec) DeepCopy() *PrivateLinkServiceOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkServiceSpec) DeepCopyInto(out *PrivateLinkServiceSpec) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkServiceSpec.
func (in *PrivateLinkServiceSpec) DeepCopy() *PrivateLinkServiceSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkService_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.AutoApproval != nil {
		in, out := &in.AutoApproval, &out.AutoApproval
		*out = new(ResourceSet_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationIPAddress != nil {
		in, out := &in.DestinationIPAddress, &out.DestinationIPAddress
		*out = new(string)
		**out = **in
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]PrivateLinkServiceIpConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerFrontendIpConfigurations != nil {
		in, out := &in.LoadBalancerFrontendIpConfigurations, &out.LoadBalancerFrontendIpConfigurations
		*out = make([]FrontendIPConfiguration_STATUS_PrivateLinkService_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterface_STATUS_PrivateLinkService_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateEndpointConnections != nil {
		in, out := &in.PrivateEndpointConnections, &out.PrivateEndpointConnections
		*out = make([]PrivateEndpointConnection_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(ResourceSet_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded.
func (in *PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopy() *PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkService_STATUS_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkService_Spec) DeepCopyInto(out *PrivateLinkService_Spec) {
	*out = *in
	if in.AutoApproval != nil {
		in, out := &in.AutoApproval, &out.AutoApproval
		*out = new(ResourceSet)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationIPAddress != nil {
		in, out := &in.DestinationIPAddress, &out.DestinationIPAddress
		*out = new(string)
		**out = **in
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]PrivateLinkServiceIpConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerFrontendIpConfigurations != nil {
		in, out := &in.LoadBalancerFrontendIpConfigurations, &out.LoadBalancerFrontendIpConfigurations
		*out = make([]FrontendIPConfiguration_PrivateLinkService_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(PrivateLinkServiceOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(ResourceSet)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkService_Spec.
func (in *PrivateLinkService_Spec) DeepCopy() *PrivateLinkService_Spec {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkService_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Probe) DeepCopyInto(out *Probe) {
	*out = *in
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoHealthyBackendsBehavior != nil {
		in, out := &in.NoHealthyBackendsBehavior, &out.NoHealthyBackendsBehavior
		*out = new(string)
		**out = **in
	}
	if in.NumberOfProbes != nil {
		in, out := &in.NumberOfProbes, &out.NumberOfProbes
		*out = new(int)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.ProbeThreshold != nil {
		in, out := &in.ProbeThreshold, &out.ProbeThreshold
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Probe.
func (in *Probe) DeepCopy() *Probe {
	if in == nil {
		return nil
	}
	out := new(Probe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Probe_STATUS) DeepCopyInto(out *Probe_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.LoadBalancingRules != nil {
		in, out := &in.LoadBalancingRules, &out.LoadBalancingRules
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoHealthyBackendsBehavior != nil {
		in, out := &in.NoHealthyBackendsBehavior, &out.NoHealthyBackendsBehavior
		*out = new(string)
		**out = **in
	}
	if in.NumberOfProbes != nil {
		in, out := &in.NumberOfProbes, &out.NumberOfProbes
		*out = new(int)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.ProbeThreshold != nil {
		in, out := &in.ProbeThreshold, &out.ProbeThreshold
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Probe_STATUS.
func (in *Probe_STATUS) DeepCopy() *Probe_STATUS {
	if in == nil {
		return nil
	}
	out := new(Probe_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddress) DeepCopyInto(out *PublicIPAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddress.
func (in *PublicIPAddress) DeepCopy() *PublicIPAddress {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressDnsSettings) DeepCopyInto(out *PublicIPAddressDnsSettings) {
	*out = *in
	if in.DomainNameLabel != nil {
		in, out := &in.DomainNameLabel, &out.DomainNameLabel
		*out = new(string)
		**out = **in
	}
	if in.DomainNameLabelScope != nil {
		in, out := &in.DomainNameLabelScope, &out.DomainNameLabelScope
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReverseFqdn != nil {
		in, out := &in.ReverseFqdn, &out.ReverseFqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressDnsSettings.
func (in *PublicIPAddressDnsSettings) DeepCopy() *PublicIPAddressDnsSettings {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressDnsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressDnsSettings_STATUS) DeepCopyInto(out *PublicIPAddressDnsSettings_STATUS) {
	*out = *in
	if in.DomainNameLabel != nil {
		in, out := &in.DomainNameLabel, &out.DomainNameLabel
		*out = new(string)
		**out = **in
	}
	if in.DomainNameLabelScope != nil {
		in, out := &in.DomainNameLabelScope, &out.DomainNameLabelScope
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ReverseFqdn != nil {
		in, out := &in.ReverseFqdn, &out.ReverseFqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressDnsSettings_STATUS.
func (in *PublicIPAddressDnsSettings_STATUS) DeepCopy() *PublicIPAddressDnsSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressDnsSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressList) DeepCopyInto(out *PublicIPAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIPAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressList.
func (in *PublicIPAddressList) DeepCopy() *PublicIPAddressList {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressOperatorSpec) DeepCopyInto(out *PublicIPAddressOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressOperatorSpec.
func (in *PublicIPAddressOperatorSpec) DeepCopy() *PublicIPAddressOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressSku) DeepCopyInto(out *PublicIPAddressSku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressSku.
func (in *PublicIPAddressSku) DeepCopy() *PublicIPAddressSku {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressSku_STATUS) DeepCopyInto(out *PublicIPAddressSku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressSku_STATUS.
func (in *PublicIPAddressSku_STATUS) DeepCopy() *PublicIPAddressSku_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressSku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded.
func (in *PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded) DeepCopy() *PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressSpec_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded.
func (in *PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded) DeepCopy() *PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressSpec_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded) DeepCopyInto(out *PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded.
func (in *PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded) DeepCopy() *PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddress_STATUS) DeepCopyInto(out *PublicIPAddress_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DdosSettings != nil {
		in, out := &in.DdosSettings, &out.DdosSettings
		*out = new(DdosSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.DeleteOption != nil {
		in, out := &in.DeleteOption, &out.DeleteOption
		*out = new(string)
		**out = **in
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(PublicIPAddressDnsSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = new(IPConfiguration_STATUS_PublicIPAddress_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.IpTags != nil {
		in, out := &in.IpTags, &out.IpTags
		*out = make([]IpTag_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MigrationPhase != nil {
		in, out := &in.MigrationPhase, &out.MigrationPhase
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(NatGateway_STATUS_PublicIPAddress_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressVersion != nil {
		in, out := &in.PublicIPAddressVersion, &out.PublicIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAllocationMethod != nil {
		in, out := &in.PublicIPAllocationMethod, &out.PublicIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(PublicIPAddressSku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddress_STATUS.
func (in *PublicIPAddress_STATUS) DeepCopy() *PublicIPAddress_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddress_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddress_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddress_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPAddress_Spec) DeepCopyInto(out *PublicIPAddress_Spec) {
	*out = *in
	if in.DdosSettings != nil {
		in, out := &in.DdosSettings, &out.DdosSettings
		*out = new(DdosSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.DeleteOption != nil {
		in, out := &in.DeleteOption, &out.DeleteOption
		*out = new(string)
		**out = **in
	}
	if in.DnsSettings != nil {
		in, out := &in.DnsSettings, &out.DnsSettings
		*out = new(PublicIPAddressDnsSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.IpTags != nil {
		in, out := &in.IpTags, &out.IpTags
		*out = make([]IpTag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinkedPublicIPAddress != nil {
		in, out := &in.LinkedPublicIPAddress, &out.LinkedPublicIPAddress
		*out = new(PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(NatGatewaySpec_PublicIPAddress_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(PublicIPAddressOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddressVersion != nil {
		in, out := &in.PublicIPAddressVersion, &out.PublicIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAllocationMethod != nil {
		in, out := &in.PublicIPAllocationMethod, &out.PublicIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePublicIPAddress != nil {
		in, out := &in.ServicePublicIPAddress, &out.ServicePublicIPAddress
		*out = new(PublicIPAddressSpec_PublicIPAddress_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(PublicIPAddressSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPAddress_Spec.
func (in *PublicIPAddress_Spec) DeepCopy() *PublicIPAddress_Spec {
	if in == nil {
		return nil
	}
	out := new(PublicIPAddress_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefix) DeepCopyInto(out *PublicIPPrefix) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefix.
func (in *PublicIPPrefix) DeepCopy() *PublicIPPrefix {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefix)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPrefix) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixList) DeepCopyInto(out *PublicIPPrefixList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIPPrefix, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixList.
func (in *PublicIPPrefixList) DeepCopy() *PublicIPPrefixList {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPrefixList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixOperatorSpec) DeepCopyInto(out *PublicIPPrefixOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixOperatorSpec.
func (in *PublicIPPrefixOperatorSpec) DeepCopy() *PublicIPPrefixOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixSku) DeepCopyInto(out *PublicIPPrefixSku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixSku.
func (in *PublicIPPrefixSku) DeepCopy() *PublicIPPrefixSku {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefixSku_STATUS) DeepCopyInto(out *PublicIPPrefixSku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefixSku_STATUS.
func (in *PublicIPPrefixSku_STATUS) DeepCopy() *PublicIPPrefixSku_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefixSku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefix_STATUS) DeepCopyInto(out *PublicIPPrefix_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomIPPrefix != nil {
		in, out := &in.CustomIPPrefix, &out.CustomIPPrefix
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpPrefix != nil {
		in, out := &in.IpPrefix, &out.IpPrefix
		*out = new(string)
		**out = **in
	}
	if in.IpTags != nil {
		in, out := &in.IpTags, &out.IpTags
		*out = make([]IpTag_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerFrontendIpConfiguration != nil {
		in, out := &in.LoadBalancerFrontendIpConfiguration, &out.LoadBalancerFrontendIpConfiguration
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(NatGateway_STATUS_PublicIPPrefix_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressVersion != nil {
		in, out := &in.PublicIPAddressVersion, &out.PublicIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = make([]ReferencedPublicIpAddress_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(PublicIPPrefixSku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefix_STATUS.
func (in *PublicIPPrefix_STATUS) DeepCopy() *PublicIPPrefix_STATUS {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefix_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPrefix_Spec) DeepCopyInto(out *PublicIPPrefix_Spec) {
	*out = *in
	if in.CustomIPPrefix != nil {
		in, out := &in.CustomIPPrefix, &out.CustomIPPrefix
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.IpTags != nil {
		in, out := &in.IpTags, &out.IpTags
		*out = make([]IpTag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(NatGatewaySpec_PublicIPPrefix_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(PublicIPPrefixOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddressVersion != nil {
		in, out := &in.PublicIPAddressVersion, &out.PublicIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(PublicIPPrefixSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPrefix_Spec.
func (in *PublicIPPrefix_Spec) DeepCopy() *PublicIPPrefix_Spec {
	if in == nil {
		return nil
	}
	out := new(PublicIPPrefix_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusServer) DeepCopyInto(out *RadiusServer) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RadiusServerAddress != nil {
		in, out := &in.RadiusServerAddress, &out.RadiusServerAddress
		*out = new(string)
		**out = **in
	}
	if in.RadiusServerScore != nil {
		in, out := &in.RadiusServerScore, &out.RadiusServerScore
		*out = new(int)
		**out = **in
	}
	if in.RadiusServerSecret != nil {
		in, out := &in.RadiusServerSecret, &out.RadiusServerSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusServer.
func (in *RadiusServer) DeepCopy() *RadiusServer {
	if in == nil {
		return nil
	}
	out := new(RadiusServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RadiusServer_STATUS) DeepCopyInto(out *RadiusServer_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RadiusServerAddress != nil {
		in, out := &in.RadiusServerAddress, &out.RadiusServerAddress
		*out = new(string)
		**out = **in
	}
	if in.RadiusServerScore != nil {
		in, out := &in.RadiusServerScore, &out.RadiusServerScore
		*out = new(int)
		**out = **in
	}
	if in.RadiusServerSecret != nil {
		in, out := &in.RadiusServerSecret, &out.RadiusServerSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RadiusServer_STATUS.
func (in *RadiusServer_STATUS) DeepCopy() *RadiusServer_STATUS {
	if in == nil {
		return nil
	}
	out := new(RadiusServer_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSet_STATUS) DeepCopyInto(out *RecordSet_STATUS) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RecordSetName != nil {
		in, out := &in.RecordSetName, &out.RecordSetName
		*out = new(string)
		**out = **in
	}
	if in.RecordType != nil {
		in, out := &in.RecordType, &out.RecordType
		*out = new(string)
		**out = **in
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSet_STATUS.
func (in *RecordSet_STATUS) DeepCopy() *RecordSet_STATUS {
	if in == nil {
		return nil
	}
	out := new(RecordSet_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferencedPublicIpAddress_STATUS) DeepCopyInto(out *ReferencedPublicIpAddress_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferencedPublicIpAddress_STATUS.
func (in *ReferencedPublicIpAddress_STATUS) DeepCopy() *ReferencedPublicIpAddress_STATUS {
	if in == nil {
		return nil
	}
	out := new(ReferencedPublicIpAddress_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceNavigationLink_STATUS) DeepCopyInto(out *ResourceNavigationLink_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceNavigationLink_STATUS.
func (in *ResourceNavigationLink_STATUS) DeepCopy() *ResourceNavigationLink_STATUS {
	if in == nil {
		return nil
	}
	out := new(ResourceNavigationLink_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSet) DeepCopyInto(out *ResourceSet) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSet.
func (in *ResourceSet) DeepCopy() *ResourceSet {
	if in == nil {
		return nil
	}
	out := new(ResourceSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSet_STATUS) DeepCopyInto(out *ResourceSet_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSet_STATUS.
func (in *ResourceSet_STATUS) DeepCopy() *ResourceSet_STATUS {
	if in == nil {
		return nil
	}
	out := new(ResourceSet_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable) DeepCopyInto(out *RouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable.
func (in *RouteTable) DeepCopy() *RouteTable {
	if in == nil {
		return nil
	}
	out := new(RouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableList) DeepCopyInto(out *RouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableList.
func (in *RouteTableList) DeepCopy() *RouteTableList {
	if in == nil {
		return nil
	}
	out := new(RouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableOperatorSpec) DeepCopyInto(out *RouteTableOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableOperatorSpec.
func (in *RouteTableOperatorSpec) DeepCopy() *RouteTableOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTableOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable_STATUS) DeepCopyInto(out *RouteTable_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableBgpRoutePropagation != nil {
		in, out := &in.DisableBgpRoutePropagation, &out.DisableBgpRoutePropagation
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable_STATUS.
func (in *RouteTable_STATUS) DeepCopy() *RouteTable_STATUS {
	if in == nil {
		return nil
	}
	out := new(RouteTable_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable_STATUS_SubResourceEmbedded) DeepCopyInto(out *RouteTable_STATUS_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable_STATUS_SubResourceEmbedded.
func (in *RouteTable_STATUS_SubResourceEmbedded) DeepCopy() *RouteTable_STATUS_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(RouteTable_STATUS_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable_Spec) DeepCopyInto(out *RouteTable_Spec) {
	*out = *in
	if in.DisableBgpRoutePropagation != nil {
		in, out := &in.DisableBgpRoutePropagation, &out.DisableBgpRoutePropagation
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(RouteTableOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable_Spec.
func (in *RouteTable_Spec) DeepCopy() *RouteTable_Spec {
	if in == nil {
		return nil
	}
	out := new(RouteTable_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTablesRoute) DeepCopyInto(out *RouteTablesRoute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTablesRoute.
func (in *RouteTablesRoute) DeepCopy() *RouteTablesRoute {
	if in == nil {
		return nil
	}
	out := new(RouteTablesRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTablesRoute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTablesRouteList) DeepCopyInto(out *RouteTablesRouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTablesRoute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTablesRouteList.
func (in *RouteTablesRouteList) DeepCopy() *RouteTablesRouteList {
	if in == nil {
		return nil
	}
	out := new(RouteTablesRouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTablesRouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTablesRouteOperatorSpec) DeepCopyInto(out *RouteTablesRouteOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTablesRouteOperatorSpec.
func (in *RouteTablesRouteOperatorSpec) DeepCopy() *RouteTablesRouteOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTablesRouteOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTablesRoute_STATUS) DeepCopyInto(out *RouteTablesRoute_STATUS) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.HasBgpOverride != nil {
		in, out := &in.HasBgpOverride, &out.HasBgpOverride
		*out = new(bool)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NextHopIpAddress != nil {
		in, out := &in.NextHopIpAddress, &out.NextHopIpAddress
		*out = new(string)
		**out = **in
	}
	if in.NextHopType != nil {
		in, out := &in.NextHopType, &out.NextHopType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTablesRoute_STATUS.
func (in *RouteTablesRoute_STATUS) DeepCopy() *RouteTablesRoute_STATUS {
	if in == nil {
		return nil
	}
	out := new(RouteTablesRoute_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTablesRoute_Spec) DeepCopyInto(out *RouteTablesRoute_Spec) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.NextHopIpAddress != nil {
		in, out := &in.NextHopIpAddress, &out.NextHopIpAddress
		*out = new(string)
		**out = **in
	}
	if in.NextHopType != nil {
		in, out := &in.NextHopType, &out.NextHopType
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(RouteTablesRouteOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTablesRoute_Spec.
func (in *RouteTablesRoute_Spec) DeepCopy() *RouteTablesRoute_Spec {
	if in == nil {
		return nil
	}
	out := new(RouteTablesRoute_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRule_STATUS) DeepCopyInto(out *SecurityRule_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRule_STATUS.
func (in *SecurityRule_STATUS) DeepCopy() *SecurityRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(SecurityRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAssociationLink_STATUS) DeepCopyInto(out *ServiceAssociationLink_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAssociationLink_STATUS.
func (in *ServiceAssociationLink_STATUS) DeepCopy() *ServiceAssociationLink_STATUS {
	if in == nil {
		return nil
	}
	out := new(ServiceAssociationLink_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopyInto(out *ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded.
func (in *ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded) DeepCopy() *ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEndpointPropertiesFormat) DeepCopyInto(out *ServiceEndpointPropertiesFormat) {
	*out = *in
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NetworkIdentifier != nil {
		in, out := &in.NetworkIdentifier, &out.NetworkIdentifier
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEndpointPropertiesFormat.
func (in *ServiceEndpointPropertiesFormat) DeepCopy() *ServiceEndpointPropertiesFormat {
	if in == nil {
		return nil
	}
	out := new(ServiceEndpointPropertiesFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEndpointPropertiesFormat_STATUS) DeepCopyInto(out *ServiceEndpointPropertiesFormat_STATUS) {
	*out = *in
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NetworkIdentifier != nil {
		in, out := &in.NetworkIdentifier, &out.NetworkIdentifier
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEndpointPropertiesFormat_STATUS.
func (in *ServiceEndpointPropertiesFormat_STATUS) DeepCopy() *ServiceEndpointPropertiesFormat_STATUS {
	if in == nil {
		return nil
	}
	out := new(ServiceEndpointPropertiesFormat_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku) DeepCopyInto(out *Sku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku.
func (in *Sku) DeepCopy() *Sku {
	if in == nil {
		return nil
	}
	out := new(Sku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_STATUS) DeepCopyInto(out *Sku_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_STATUS.
func (in *Sku_STATUS) DeepCopy() *Sku_STATUS {
	if in == nil {
		return nil
	}
	out := new(Sku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource) DeepCopyInto(out *SubResource) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource.
func (in *SubResource) DeepCopy() *SubResource {
	if in == nil {
		return nil
	}
	out := new(SubResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource_STATUS) DeepCopyInto(out *SubResource_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource_STATUS.
func (in *SubResource_STATUS) DeepCopy() *SubResource_STATUS {
	if in == nil {
		return nil
	}
	out := new(SubResource_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *Subnet_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_LoadBalancer_SubResourceEmbedded.
func (in *Subnet_LoadBalancer_SubResourceEmbedded) DeepCopy() *Subnet_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *Subnet_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_NetworkInterface_SubResourceEmbedded.
func (in *Subnet_NetworkInterface_SubResourceEmbedded) DeepCopy() *Subnet_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *Subnet_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_PrivateEndpoint_SubResourceEmbedded.
func (in *Subnet_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *Subnet_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *Subnet_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_PrivateLinkService_SubResourceEmbedded.
func (in *Subnet_PrivateLinkService_SubResourceEmbedded) DeepCopy() *Subnet_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopyInto(out *Subnet_STATUS_LoadBalancer_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_STATUS_LoadBalancer_SubResourceEmbedded.
func (in *Subnet_STATUS_LoadBalancer_SubResourceEmbedded) DeepCopy() *Subnet_STATUS_LoadBalancer_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_STATUS_LoadBalancer_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *Subnet_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *Subnet_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *Subnet_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopyInto(out *Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded.
func (in *Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded) DeepCopy() *Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_STATUS_NetworkSecurityGroup_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopyInto(out *Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded.
func (in *Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded) DeepCopy() *Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_STATUS_PrivateEndpoint_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopyInto(out *Subnet_STATUS_PrivateLinkService_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet_STATUS_PrivateLinkService_SubResourceEmbedded.
func (in *Subnet_STATUS_PrivateLinkService_SubResourceEmbedded) DeepCopy() *Subnet_STATUS_PrivateLinkService_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(Subnet_STATUS_PrivateLinkService_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAssignedIdentityDetails) DeepCopyInto(out *UserAssignedIdentityDetails) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Reference = in.Reference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAssignedIdentityDetails.
func (in *UserAssignedIdentityDetails) DeepCopy() *UserAssignedIdentityDetails {
	if in == nil {
		return nil
	}
	out := new(UserAssignedIdentityDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetwork) DeepCopyInto(out *VirtualNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetwork.
func (in *VirtualNetwork) DeepCopy() *VirtualNetwork {
	if in == nil {
		return nil
	}
	out := new(VirtualNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkBgpCommunities) DeepCopyInto(out *VirtualNetworkBgpCommunities) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VirtualNetworkCommunity != nil {
		in, out := &in.VirtualNetworkCommunity, &out.VirtualNetworkCommunity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkBgpCommunities.
func (in *VirtualNetworkBgpCommunities) DeepCopy() *VirtualNetworkBgpCommunities {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkBgpCommunities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkBgpCommunities_STATUS) DeepCopyInto(out *VirtualNetworkBgpCommunities_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RegionalCommunity != nil {
		in, out := &in.RegionalCommunity, &out.RegionalCommunity
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkCommunity != nil {
		in, out := &in.VirtualNetworkCommunity, &out.VirtualNetworkCommunity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkBgpCommunities_STATUS.
func (in *VirtualNetworkBgpCommunities_STATUS) DeepCopy() *VirtualNetworkBgpCommunities_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkBgpCommunities_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkEncryption) DeepCopyInto(out *VirtualNetworkEncryption) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkEncryption.
func (in *VirtualNetworkEncryption) DeepCopy() *VirtualNetworkEncryption {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkEncryption_STATUS) DeepCopyInto(out *VirtualNetworkEncryption_STATUS) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkEncryption_STATUS.
func (in *VirtualNetworkEncryption_STATUS) DeepCopy() *VirtualNetworkEncryption_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkEncryption_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGateway) DeepCopyInto(out *VirtualNetworkGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGateway.
func (in *VirtualNetworkGateway) DeepCopy() *VirtualNetworkGateway {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayAutoScaleBounds) DeepCopyInto(out *VirtualNetworkGatewayAutoScaleBounds) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayAutoScaleBounds.
func (in *VirtualNetworkGatewayAutoScaleBounds) DeepCopy() *VirtualNetworkGatewayAutoScaleBounds {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayAutoScaleBounds)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayAutoScaleBounds_STATUS) DeepCopyInto(out *VirtualNetworkGatewayAutoScaleBounds_STATUS) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayAutoScaleBounds_STATUS.
func (in *VirtualNetworkGatewayAutoScaleBounds_STATUS) DeepCopy() *VirtualNetworkGatewayAutoScaleBounds_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayAutoScaleBounds_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayAutoScaleConfiguration) DeepCopyInto(out *VirtualNetworkGatewayAutoScaleConfiguration) {
	*out = *in
	if in.Bounds != nil {
		in, out := &in.Bounds, &out.Bounds
		*out = new(VirtualNetworkGatewayAutoScaleBounds)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayAutoScaleConfiguration.
func (in *VirtualNetworkGatewayAutoScaleConfiguration) DeepCopy() *VirtualNetworkGatewayAutoScaleConfiguration {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayAutoScaleConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayAutoScaleConfiguration_STATUS) DeepCopyInto(out *VirtualNetworkGatewayAutoScaleConfiguration_STATUS) {
	*out = *in
	if in.Bounds != nil {
		in, out := &in.Bounds, &out.Bounds
		*out = new(VirtualNetworkGatewayAutoScaleBounds_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayAutoScaleConfiguration_STATUS.
func (in *VirtualNetworkGatewayAutoScaleConfiguration_STATUS) DeepCopy() *VirtualNetworkGatewayAutoScaleConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayAutoScaleConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayIPConfiguration) DeepCopyInto(out *VirtualNetworkGatewayIPConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayIPConfiguration.
func (in *VirtualNetworkGatewayIPConfiguration) DeepCopy() *VirtualNetworkGatewayIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayIPConfiguration_STATUS) DeepCopyInto(out *VirtualNetworkGatewayIPConfiguration_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAllocationMethod != nil {
		in, out := &in.PrivateIPAllocationMethod, &out.PrivateIPAllocationMethod
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayIPConfiguration_STATUS.
func (in *VirtualNetworkGatewayIPConfiguration_STATUS) DeepCopy() *VirtualNetworkGatewayIPConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayIPConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayList) DeepCopyInto(out *VirtualNetworkGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworkGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayList.
func (in *VirtualNetworkGatewayList) DeepCopy() *VirtualNetworkGatewayList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayNatRule) DeepCopyInto(out *VirtualNetworkGatewayNatRule) {
	*out = *in
	if in.ExternalMappings != nil {
		in, out := &in.ExternalMappings, &out.ExternalMappings
		*out = make([]VpnNatRuleMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternalMappings != nil {
		in, out := &in.InternalMappings, &out.InternalMappings
		*out = make([]VpnNatRuleMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpConfigurationId != nil {
		in, out := &in.IpConfigurationId, &out.IpConfigurationId
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayNatRule.
func (in *VirtualNetworkGatewayNatRule) DeepCopy() *VirtualNetworkGatewayNatRule {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayNatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayNatRule_STATUS) DeepCopyInto(out *VirtualNetworkGatewayNatRule_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExternalMappings != nil {
		in, out := &in.ExternalMappings, &out.ExternalMappings
		*out = make([]VpnNatRuleMapping_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.InternalMappings != nil {
		in, out := &in.InternalMappings, &out.InternalMappings
		*out = make([]VpnNatRuleMapping_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpConfigurationId != nil {
		in, out := &in.IpConfigurationId, &out.IpConfigurationId
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertiesType != nil {
		in, out := &in.PropertiesType, &out.PropertiesType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayNatRule_STATUS.
func (in *VirtualNetworkGatewayNatRule_STATUS) DeepCopy() *VirtualNetworkGatewayNatRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayNatRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayOperatorSpec) DeepCopyInto(out *VirtualNetworkGatewayOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayOperatorSpec.
func (in *VirtualNetworkGatewayOperatorSpec) DeepCopy() *VirtualNetworkGatewayOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayPolicyGroup) DeepCopyInto(out *VirtualNetworkGatewayPolicyGroup) {
	*out = *in
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyMembers != nil {
		in, out := &in.PolicyMembers, &out.PolicyMembers
		*out = make([]VirtualNetworkGatewayPolicyGroupMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayPolicyGroup.
func (in *VirtualNetworkGatewayPolicyGroup) DeepCopy() *VirtualNetworkGatewayPolicyGroup {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayPolicyGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayPolicyGroupMember) DeepCopyInto(out *VirtualNetworkGatewayPolicyGroupMember) {
	*out = *in
	if in.AttributeType != nil {
		in, out := &in.AttributeType, &out.AttributeType
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayPolicyGroupMember.
func (in *VirtualNetworkGatewayPolicyGroupMember) DeepCopy() *VirtualNetworkGatewayPolicyGroupMember {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayPolicyGroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayPolicyGroupMember_STATUS) DeepCopyInto(out *VirtualNetworkGatewayPolicyGroupMember_STATUS) {
	*out = *in
	if in.AttributeType != nil {
		in, out := &in.AttributeType, &out.AttributeType
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayPolicyGroupMember_STATUS.
func (in *VirtualNetworkGatewayPolicyGroupMember_STATUS) DeepCopy() *VirtualNetworkGatewayPolicyGroupMember_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayPolicyGroupMember_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewayPolicyGroup_STATUS) DeepCopyInto(out *VirtualNetworkGatewayPolicyGroup_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyMembers != nil {
		in, out := &in.PolicyMembers, &out.PolicyMembers
		*out = make([]VirtualNetworkGatewayPolicyGroupMember_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.VngClientConnectionConfigurations != nil {
		in, out := &in.VngClientConnectionConfigurations, &out.VngClientConnectionConfigurations
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewayPolicyGroup_STATUS.
func (in *VirtualNetworkGatewayPolicyGroup_STATUS) DeepCopy() *VirtualNetworkGatewayPolicyGroup_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewayPolicyGroup_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewaySku) DeepCopyInto(out *VirtualNetworkGatewaySku) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewaySku.
func (in *VirtualNetworkGatewaySku) DeepCopy() *VirtualNetworkGatewaySku {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewaySku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGatewaySku_STATUS) DeepCopyInto(out *VirtualNetworkGatewaySku_STATUS) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGatewaySku_STATUS.
func (in *VirtualNetworkGatewaySku_STATUS) DeepCopy() *VirtualNetworkGatewaySku_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGatewaySku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded) DeepCopyInto(out *VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded) {
	*out = *in
	if in.ActiveActive != nil {
		in, out := &in.ActiveActive, &out.ActiveActive
		*out = new(bool)
		**out = **in
	}
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.AllowRemoteVnetTraffic != nil {
		in, out := &in.AllowRemoteVnetTraffic, &out.AllowRemoteVnetTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AllowVirtualWanTraffic != nil {
		in, out := &in.AllowVirtualWanTraffic, &out.AllowVirtualWanTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AutoScaleConfiguration != nil {
		in, out := &in.AutoScaleConfiguration, &out.AutoScaleConfiguration
		*out = new(VirtualNetworkGatewayAutoScaleConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BgpSettings != nil {
		in, out := &in.BgpSettings, &out.BgpSettings
		*out = new(BgpSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomRoutes != nil {
		in, out := &in.CustomRoutes, &out.CustomRoutes
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableIPSecReplayProtection != nil {
		in, out := &in.DisableIPSecReplayProtection, &out.DisableIPSecReplayProtection
		*out = new(bool)
		**out = **in
	}
	if in.EnableBgp != nil {
		in, out := &in.EnableBgp, &out.EnableBgp
		*out = new(bool)
		**out = **in
	}
	if in.EnableBgpRouteTranslationForNat != nil {
		in, out := &in.EnableBgpRouteTranslationForNat, &out.EnableBgpRouteTranslationForNat
		*out = new(bool)
		**out = **in
	}
	if in.EnableDnsForwarding != nil {
		in, out := &in.EnableDnsForwarding, &out.EnableDnsForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateIpAddress != nil {
		in, out := &in.EnablePrivateIpAddress, &out.EnablePrivateIpAddress
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayDefaultSite != nil {
		in, out := &in.GatewayDefaultSite, &out.GatewayDefaultSite
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayType != nil {
		in, out := &in.GatewayType, &out.GatewayType
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.InboundDnsForwardingEndpoint != nil {
		in, out := &in.InboundDnsForwardingEndpoint, &out.InboundDnsForwardingEndpoint
		*out = new(string)
		**out = **in
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]VirtualNetworkGatewayIPConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatRules != nil {
		in, out := &in.NatRules, &out.NatRules
		*out = make([]VirtualNetworkGatewayNatRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResiliencyModel != nil {
		in, out := &in.ResiliencyModel, &out.ResiliencyModel
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(VirtualNetworkGatewaySku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VNetExtendedLocationResourceId != nil {
		in, out := &in.VNetExtendedLocationResourceId, &out.VNetExtendedLocationResourceId
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkGatewayPolicyGroups != nil {
		in, out := &in.VirtualNetworkGatewayPolicyGroups, &out.VirtualNetworkGatewayPolicyGroups
		*out = make([]VirtualNetworkGatewayPolicyGroup_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientConfiguration != nil {
		in, out := &in.VpnClientConfiguration, &out.VpnClientConfiguration
		*out = new(VpnClientConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.VpnGatewayGeneration != nil {
		in, out := &in.VpnGatewayGeneration, &out.VpnGatewayGeneration
		*out = new(string)
		**out = **in
	}
	if in.VpnType != nil {
		in, out := &in.VpnType, &out.VpnType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded.
func (in *VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded) DeepCopy() *VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGateway_STATUS_VirtualNetworkGateway_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkGateway_Spec) DeepCopyInto(out *VirtualNetworkGateway_Spec) {
	*out = *in
	if in.ActiveActive != nil {
		in, out := &in.ActiveActive, &out.ActiveActive
		*out = new(bool)
		**out = **in
	}
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.AllowRemoteVnetTraffic != nil {
		in, out := &in.AllowRemoteVnetTraffic, &out.AllowRemoteVnetTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AllowVirtualWanTraffic != nil {
		in, out := &in.AllowVirtualWanTraffic, &out.AllowVirtualWanTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AutoScaleConfiguration != nil {
		in, out := &in.AutoScaleConfiguration, &out.AutoScaleConfiguration
		*out = new(VirtualNetworkGatewayAutoScaleConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.BgpSettings != nil {
		in, out := &in.BgpSettings, &out.BgpSettings
		*out = new(BgpSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomRoutes != nil {
		in, out := &in.CustomRoutes, &out.CustomRoutes
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableIPSecReplayProtection != nil {
		in, out := &in.DisableIPSecReplayProtection, &out.DisableIPSecReplayProtection
		*out = new(bool)
		**out = **in
	}
	if in.EnableBgp != nil {
		in, out := &in.EnableBgp, &out.EnableBgp
		*out = new(bool)
		**out = **in
	}
	if in.EnableBgpRouteTranslationForNat != nil {
		in, out := &in.EnableBgpRouteTranslationForNat, &out.EnableBgpRouteTranslationForNat
		*out = new(bool)
		**out = **in
	}
	if in.EnableDnsForwarding != nil {
		in, out := &in.EnableDnsForwarding, &out.EnableDnsForwarding
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateIpAddress != nil {
		in, out := &in.EnablePrivateIpAddress, &out.EnablePrivateIpAddress
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayDefaultSite != nil {
		in, out := &in.GatewayDefaultSite, &out.GatewayDefaultSite
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayType != nil {
		in, out := &in.GatewayType, &out.GatewayType
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ManagedServiceIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]VirtualNetworkGatewayIPConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NatRules != nil {
		in, out := &in.NatRules, &out.NatRules
		*out = make([]VirtualNetworkGatewayNatRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(VirtualNetworkGatewayOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResiliencyModel != nil {
		in, out := &in.ResiliencyModel, &out.ResiliencyModel
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(VirtualNetworkGatewaySku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VNetExtendedLocationResourceReference != nil {
		in, out := &in.VNetExtendedLocationResourceReference, &out.VNetExtendedLocationResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.VirtualNetworkGatewayPolicyGroups != nil {
		in, out := &in.VirtualNetworkGatewayPolicyGroups, &out.VirtualNetworkGatewayPolicyGroups
		*out = make([]VirtualNetworkGatewayPolicyGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientConfiguration != nil {
		in, out := &in.VpnClientConfiguration, &out.VpnClientConfiguration
		*out = new(VpnClientConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.VpnGatewayGeneration != nil {
		in, out := &in.VpnGatewayGeneration, &out.VpnGatewayGeneration
		*out = new(string)
		**out = **in
	}
	if in.VpnType != nil {
		in, out := &in.VpnType, &out.VpnType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkGateway_Spec.
func (in *VirtualNetworkGateway_Spec) DeepCopy() *VirtualNetworkGateway_Spec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkGateway_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkList) DeepCopyInto(out *VirtualNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkList.
func (in *VirtualNetworkList) DeepCopy() *VirtualNetworkList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkOperatorSpec) DeepCopyInto(out *VirtualNetworkOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkOperatorSpec.
func (in *VirtualNetworkOperatorSpec) DeepCopy() *VirtualNetworkOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded.
func (in *VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded) DeepCopy() *VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkTapSpec_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopyInto(out *VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded.
func (in *VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded) DeepCopy() *VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkTap_STATUS_NetworkInterface_SubResourceEmbedded)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetwork_STATUS) DeepCopyInto(out *VirtualNetwork_STATUS) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.BgpCommunities != nil {
		in, out := &in.BgpCommunities, &out.BgpCommunities
		*out = new(VirtualNetworkBgpCommunities_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DdosProtectionPlan != nil {
		in, out := &in.DdosProtectionPlan, &out.DdosProtectionPlan
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.DhcpOptions != nil {
		in, out := &in.DhcpOptions, &out.DhcpOptions
		*out = new(DhcpOptions_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableDdosProtection != nil {
		in, out := &in.EnableDdosProtection, &out.EnableDdosProtection
		*out = new(bool)
		**out = **in
	}
	if in.EnableVmProtection != nil {
		in, out := &in.EnableVmProtection, &out.EnableVmProtection
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(VirtualNetworkEncryption_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.FlowLogs != nil {
		in, out := &in.FlowLogs, &out.FlowLogs
		*out = make([]FlowLog_STATUS_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlowTimeoutInMinutes != nil {
		in, out := &in.FlowTimeoutInMinutes, &out.FlowTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpAllocations != nil {
		in, out := &in.IpAllocations, &out.IpAllocations
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpointVNetPolicies != nil {
		in, out := &in.PrivateEndpointVNetPolicies, &out.PrivateEndpointVNetPolicies
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetwork_STATUS.
func (in *VirtualNetwork_STATUS) DeepCopy() *VirtualNetwork_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetwork_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetwork_Spec) DeepCopyInto(out *VirtualNetwork_Spec) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.BgpCommunities != nil {
		in, out := &in.BgpCommunities, &out.BgpCommunities
		*out = new(VirtualNetworkBgpCommunities)
		(*in).DeepCopyInto(*out)
	}
	if in.DdosProtectionPlan != nil {
		in, out := &in.DdosProtectionPlan, &out.DdosProtectionPlan
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.DhcpOptions != nil {
		in, out := &in.DhcpOptions, &out.DhcpOptions
		*out = new(DhcpOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableDdosProtection != nil {
		in, out := &in.EnableDdosProtection, &out.EnableDdosProtection
		*out = new(bool)
		**out = **in
	}
	if in.EnableVmProtection != nil {
		in, out := &in.EnableVmProtection, &out.EnableVmProtection
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(VirtualNetworkEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtendedLocation != nil {
		in, out := &in.ExtendedLocation, &out.ExtendedLocation
		*out = new(ExtendedLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.FlowTimeoutInMinutes != nil {
		in, out := &in.FlowTimeoutInMinutes, &out.FlowTimeoutInMinutes
		*out = new(int)
		**out = **in
	}
	if in.IpAllocations != nil {
		in, out := &in.IpAllocations, &out.IpAllocations
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(VirtualNetworkOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrivateEndpointVNetPolicies != nil {
		in, out := &in.PrivateEndpointVNetPolicies, &out.PrivateEndpointVNetPolicies
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetwork_Spec.
func (in *VirtualNetwork_Spec) DeepCopy() *VirtualNetwork_Spec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetwork_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksSubnet) DeepCopyInto(out *VirtualNetworksSubnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksSubnet.
func (in *VirtualNetworksSubnet) DeepCopy() *VirtualNetworksSubnet {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksSubnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworksSubnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksSubnetList) DeepCopyInto(out *VirtualNetworksSubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworksSubnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksSubnetList.
func (in *VirtualNetworksSubnetList) DeepCopy() *VirtualNetworksSubnetList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksSubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworksSubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksSubnetOperatorSpec) DeepCopyInto(out *VirtualNetworksSubnetOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksSubnetOperatorSpec.
func (in *VirtualNetworksSubnetOperatorSpec) DeepCopy() *VirtualNetworksSubnetOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksSubnetOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksSubnet_STATUS) DeepCopyInto(out *VirtualNetworksSubnet_STATUS) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ApplicationGatewayIPConfigurations != nil {
		in, out := &in.ApplicationGatewayIPConfigurations, &out.ApplicationGatewayIPConfigurations
		*out = make([]ApplicationGatewayIPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultOutboundAccess != nil {
		in, out := &in.DefaultOutboundAccess, &out.DefaultOutboundAccess
		*out = new(bool)
		**out = **in
	}
	if in.Delegations != nil {
		in, out := &in.Delegations, &out.Delegations
		*out = make([]Delegation_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.IpAllocations != nil {
		in, out := &in.IpAllocations, &out.IpAllocations
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpConfigurationProfiles != nil {
		in, out := &in.IpConfigurationProfiles, &out.IpConfigurationProfiles
		*out = make([]IPConfigurationProfile_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpConfigurations != nil {
		in, out := &in.IpConfigurations, &out.IpConfigurations
		*out = make([]IPConfiguration_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(NetworkSecurityGroup_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateEndpointNetworkPolicies != nil {
		in, out := &in.PrivateEndpointNetworkPolicies, &out.PrivateEndpointNetworkPolicies
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoints != nil {
		in, out := &in.PrivateEndpoints, &out.PrivateEndpoints
		*out = make([]PrivateEndpoint_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateLinkServiceNetworkPolicies != nil {
		in, out := &in.PrivateLinkServiceNetworkPolicies, &out.PrivateLinkServiceNetworkPolicies
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.ResourceNavigationLinks != nil {
		in, out := &in.ResourceNavigationLinks, &out.ResourceNavigationLinks
		*out = make([]ResourceNavigationLink_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteTable != nil {
		in, out := &in.RouteTable, &out.RouteTable
		*out = new(RouteTable_STATUS_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAssociationLinks != nil {
		in, out := &in.ServiceAssociationLinks, &out.ServiceAssociationLinks
		*out = make([]ServiceAssociationLink_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceEndpointPolicies != nil {
		in, out := &in.ServiceEndpointPolicies, &out.ServiceEndpointPolicies
		*out = make([]ServiceEndpointPolicy_STATUS_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceEndpoints != nil {
		in, out := &in.ServiceEndpoints, &out.ServiceEndpoints
		*out = make([]ServiceEndpointPropertiesFormat_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharingScope != nil {
		in, out := &in.SharingScope, &out.SharingScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksSubnet_STATUS.
func (in *VirtualNetworksSubnet_STATUS) DeepCopy() *VirtualNetworksSubnet_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksSubnet_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksSubnet_Spec) DeepCopyInto(out *VirtualNetworksSubnet_Spec) {
	*out = *in
	if in.AddressPrefix != nil {
		in, out := &in.AddressPrefix, &out.AddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.AddressPrefixes != nil {
		in, out := &in.AddressPrefixes, &out.AddressPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ApplicationGatewayIPConfigurations != nil {
		in, out := &in.ApplicationGatewayIPConfigurations, &out.ApplicationGatewayIPConfigurations
		*out = make([]ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultOutboundAccess != nil {
		in, out := &in.DefaultOutboundAccess, &out.DefaultOutboundAccess
		*out = new(bool)
		**out = **in
	}
	if in.Delegations != nil {
		in, out := &in.Delegations, &out.Delegations
		*out = make([]Delegation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpAllocations != nil {
		in, out := &in.IpAllocations, &out.IpAllocations
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NatGateway != nil {
		in, out := &in.NatGateway, &out.NatGateway
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(VirtualNetworksSubnetOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PrivateEndpointNetworkPolicies != nil {
		in, out := &in.PrivateEndpointNetworkPolicies, &out.PrivateEndpointNetworkPolicies
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkServiceNetworkPolicies != nil {
		in, out := &in.PrivateLinkServiceNetworkPolicies, &out.PrivateLinkServiceNetworkPolicies
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RouteTable != nil {
		in, out := &in.RouteTable, &out.RouteTable
		*out = new(RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceEndpointPolicies != nil {
		in, out := &in.ServiceEndpointPolicies, &out.ServiceEndpointPolicies
		*out = make([]ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceEndpoints != nil {
		in, out := &in.ServiceEndpoints, &out.ServiceEndpoints
		*out = make([]ServiceEndpointPropertiesFormat, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharingScope != nil {
		in, out := &in.SharingScope, &out.SharingScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksSubnet_Spec.
func (in *VirtualNetworksSubnet_Spec) DeepCopy() *VirtualNetworksSubnet_Spec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksSubnet_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksVirtualNetworkPeering) DeepCopyInto(out *VirtualNetworksVirtualNetworkPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksVirtualNetworkPeering.
func (in *VirtualNetworksVirtualNetworkPeering) DeepCopy() *VirtualNetworksVirtualNetworkPeering {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksVirtualNetworkPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworksVirtualNetworkPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksVirtualNetworkPeeringList) DeepCopyInto(out *VirtualNetworksVirtualNetworkPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualNetworksVirtualNetworkPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksVirtualNetworkPeeringList.
func (in *VirtualNetworksVirtualNetworkPeeringList) DeepCopy() *VirtualNetworksVirtualNetworkPeeringList {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksVirtualNetworkPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualNetworksVirtualNetworkPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksVirtualNetworkPeeringOperatorSpec) DeepCopyInto(out *VirtualNetworksVirtualNetworkPeeringOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksVirtualNetworkPeeringOperatorSpec.
func (in *VirtualNetworksVirtualNetworkPeeringOperatorSpec) DeepCopy() *VirtualNetworksVirtualNetworkPeeringOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksVirtualNetworkPeeringOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksVirtualNetworkPeering_STATUS) DeepCopyInto(out *VirtualNetworksVirtualNetworkPeering_STATUS) {
	*out = *in
	if in.AllowForwardedTraffic != nil {
		in, out := &in.AllowForwardedTraffic, &out.AllowForwardedTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AllowGatewayTransit != nil {
		in, out := &in.AllowGatewayTransit, &out.AllowGatewayTransit
		*out = new(bool)
		**out = **in
	}
	if in.AllowVirtualNetworkAccess != nil {
		in, out := &in.AllowVirtualNetworkAccess, &out.AllowVirtualNetworkAccess
		*out = new(bool)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DoNotVerifyRemoteGateways != nil {
		in, out := &in.DoNotVerifyRemoteGateways, &out.DoNotVerifyRemoteGateways
		*out = new(bool)
		**out = **in
	}
	if in.EnableOnlyIPv6Peering != nil {
		in, out := &in.EnableOnlyIPv6Peering, &out.EnableOnlyIPv6Peering
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.LocalAddressSpace != nil {
		in, out := &in.LocalAddressSpace, &out.LocalAddressSpace
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalSubnetNames != nil {
		in, out := &in.LocalSubnetNames, &out.LocalSubnetNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LocalVirtualNetworkAddressSpace != nil {
		in, out := &in.LocalVirtualNetworkAddressSpace, &out.LocalVirtualNetworkAddressSpace
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeerCompleteVnets != nil {
		in, out := &in.PeerCompleteVnets, &out.PeerCompleteVnets
		*out = new(bool)
		**out = **in
	}
	if in.PeeringState != nil {
		in, out := &in.PeeringState, &out.PeeringState
		*out = new(string)
		**out = **in
	}
	if in.PeeringSyncLevel != nil {
		in, out := &in.PeeringSyncLevel, &out.PeeringSyncLevel
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.RemoteAddressSpace != nil {
		in, out := &in.RemoteAddressSpace, &out.RemoteAddressSpace
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteBgpCommunities != nil {
		in, out := &in.RemoteBgpCommunities, &out.RemoteBgpCommunities
		*out = new(VirtualNetworkBgpCommunities_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteSubnetNames != nil {
		in, out := &in.RemoteSubnetNames, &out.RemoteSubnetNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RemoteVirtualNetwork != nil {
		in, out := &in.RemoteVirtualNetwork, &out.RemoteVirtualNetwork
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteVirtualNetworkAddressSpace != nil {
		in, out := &in.RemoteVirtualNetworkAddressSpace, &out.RemoteVirtualNetworkAddressSpace
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteVirtualNetworkEncryption != nil {
		in, out := &in.RemoteVirtualNetworkEncryption, &out.RemoteVirtualNetworkEncryption
		*out = new(VirtualNetworkEncryption_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGuid != nil {
		in, out := &in.ResourceGuid, &out.ResourceGuid
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseRemoteGateways != nil {
		in, out := &in.UseRemoteGateways, &out.UseRemoteGateways
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksVirtualNetworkPeering_STATUS.
func (in *VirtualNetworksVirtualNetworkPeering_STATUS) DeepCopy() *VirtualNetworksVirtualNetworkPeering_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksVirtualNetworkPeering_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworksVirtualNetworkPeering_Spec) DeepCopyInto(out *VirtualNetworksVirtualNetworkPeering_Spec) {
	*out = *in
	if in.AllowForwardedTraffic != nil {
		in, out := &in.AllowForwardedTraffic, &out.AllowForwardedTraffic
		*out = new(bool)
		**out = **in
	}
	if in.AllowGatewayTransit != nil {
		in, out := &in.AllowGatewayTransit, &out.AllowGatewayTransit
		*out = new(bool)
		**out = **in
	}
	if in.AllowVirtualNetworkAccess != nil {
		in, out := &in.AllowVirtualNetworkAccess, &out.AllowVirtualNetworkAccess
		*out = new(bool)
		**out = **in
	}
	if in.DoNotVerifyRemoteGateways != nil {
		in, out := &in.DoNotVerifyRemoteGateways, &out.DoNotVerifyRemoteGateways
		*out = new(bool)
		**out = **in
	}
	if in.EnableOnlyIPv6Peering != nil {
		in, out := &in.EnableOnlyIPv6Peering, &out.EnableOnlyIPv6Peering
		*out = new(bool)
		**out = **in
	}
	if in.LocalAddressSpace != nil {
		in, out := &in.LocalAddressSpace, &out.LocalAddressSpace
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalSubnetNames != nil {
		in, out := &in.LocalSubnetNames, &out.LocalSubnetNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LocalVirtualNetworkAddressSpace != nil {
		in, out := &in.LocalVirtualNetworkAddressSpace, &out.LocalVirtualNetworkAddressSpace
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(VirtualNetworksVirtualNetworkPeeringOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PeerCompleteVnets != nil {
		in, out := &in.PeerCompleteVnets, &out.PeerCompleteVnets
		*out = new(bool)
		**out = **in
	}
	if in.PeeringState != nil {
		in, out := &in.PeeringState, &out.PeeringState
		*out = new(string)
		**out = **in
	}
	if in.PeeringSyncLevel != nil {
		in, out := &in.PeeringSyncLevel, &out.PeeringSyncLevel
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RemoteAddressSpace != nil {
		in, out := &in.RemoteAddressSpace, &out.RemoteAddressSpace
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteBgpCommunities != nil {
		in, out := &in.RemoteBgpCommunities, &out.RemoteBgpCommunities
		*out = new(VirtualNetworkBgpCommunities)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteSubnetNames != nil {
		in, out := &in.RemoteSubnetNames, &out.RemoteSubnetNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RemoteVirtualNetwork != nil {
		in, out := &in.RemoteVirtualNetwork, &out.RemoteVirtualNetwork
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteVirtualNetworkAddressSpace != nil {
		in, out := &in.RemoteVirtualNetworkAddressSpace, &out.RemoteVirtualNetworkAddressSpace
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.UseRemoteGateways != nil {
		in, out := &in.UseRemoteGateways, &out.UseRemoteGateways
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworksVirtualNetworkPeering_Spec.
func (in *VirtualNetworksVirtualNetworkPeering_Spec) DeepCopy() *VirtualNetworksVirtualNetworkPeering_Spec {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworksVirtualNetworkPeering_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngClientConnectionConfiguration) DeepCopyInto(out *VngClientConnectionConfiguration) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngClientConnectionConfiguration.
func (in *VngClientConnectionConfiguration) DeepCopy() *VngClientConnectionConfiguration {
	if in == nil {
		return nil
	}
	out := new(VngClientConnectionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngClientConnectionConfiguration_STATUS) DeepCopyInto(out *VngClientConnectionConfiguration_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngClientConnectionConfiguration_STATUS.
func (in *VngClientConnectionConfiguration_STATUS) DeepCopy() *VngClientConnectionConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(VngClientConnectionConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientConfiguration) DeepCopyInto(out *VpnClientConfiguration) {
	*out = *in
	if in.AadAudience != nil {
		in, out := &in.AadAudience, &out.AadAudience
		*out = new(string)
		**out = **in
	}
	if in.AadIssuer != nil {
		in, out := &in.AadIssuer, &out.AadIssuer
		*out = new(string)
		**out = **in
	}
	if in.AadTenant != nil {
		in, out := &in.AadTenant, &out.AadTenant
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RadiusServerAddress != nil {
		in, out := &in.RadiusServerAddress, &out.RadiusServerAddress
		*out = new(string)
		**out = **in
	}
	if in.RadiusServerSecret != nil {
		in, out := &in.RadiusServerSecret, &out.RadiusServerSecret
		*out = new(string)
		**out = **in
	}
	if in.RadiusServers != nil {
		in, out := &in.RadiusServers, &out.RadiusServers
		*out = make([]RadiusServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VngClientConnectionConfigurations != nil {
		in, out := &in.VngClientConnectionConfigurations, &out.VngClientConnectionConfigurations
		*out = make([]VngClientConnectionConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnAuthenticationTypes != nil {
		in, out := &in.VpnAuthenticationTypes, &out.VpnAuthenticationTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpnClientAddressPool != nil {
		in, out := &in.VpnClientAddressPool, &out.VpnClientAddressPool
		*out = new(AddressSpace)
		(*in).DeepCopyInto(*out)
	}
	if in.VpnClientIpsecPolicies != nil {
		in, out := &in.VpnClientIpsecPolicies, &out.VpnClientIpsecPolicies
		*out = make([]IpsecPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientProtocols != nil {
		in, out := &in.VpnClientProtocols, &out.VpnClientProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpnClientRevokedCertificates != nil {
		in, out := &in.VpnClientRevokedCertificates, &out.VpnClientRevokedCertificates
		*out = make([]VpnClientRevokedCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientRootCertificates != nil {
		in, out := &in.VpnClientRootCertificates, &out.VpnClientRootCertificates
		*out = make([]VpnClientRootCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientConfiguration.
func (in *VpnClientConfiguration) DeepCopy() *VpnClientConfiguration {
	if in == nil {
		return nil
	}
	out := new(VpnClientConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientConfiguration_STATUS) DeepCopyInto(out *VpnClientConfiguration_STATUS) {
	*out = *in
	if in.AadAudience != nil {
		in, out := &in.AadAudience, &out.AadAudience
		*out = new(string)
		**out = **in
	}
	if in.AadIssuer != nil {
		in, out := &in.AadIssuer, &out.AadIssuer
		*out = new(string)
		**out = **in
	}
	if in.AadTenant != nil {
		in, out := &in.AadTenant, &out.AadTenant
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RadiusServerAddress != nil {
		in, out := &in.RadiusServerAddress, &out.RadiusServerAddress
		*out = new(string)
		**out = **in
	}
	if in.RadiusServerSecret != nil {
		in, out := &in.RadiusServerSecret, &out.RadiusServerSecret
		*out = new(string)
		**out = **in
	}
	if in.RadiusServers != nil {
		in, out := &in.RadiusServers, &out.RadiusServers
		*out = make([]RadiusServer_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VngClientConnectionConfigurations != nil {
		in, out := &in.VngClientConnectionConfigurations, &out.VngClientConnectionConfigurations
		*out = make([]VngClientConnectionConfiguration_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnAuthenticationTypes != nil {
		in, out := &in.VpnAuthenticationTypes, &out.VpnAuthenticationTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpnClientAddressPool != nil {
		in, out := &in.VpnClientAddressPool, &out.VpnClientAddressPool
		*out = new(AddressSpace_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.VpnClientIpsecPolicies != nil {
		in, out := &in.VpnClientIpsecPolicies, &out.VpnClientIpsecPolicies
		*out = make([]IpsecPolicy_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientProtocols != nil {
		in, out := &in.VpnClientProtocols, &out.VpnClientProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpnClientRevokedCertificates != nil {
		in, out := &in.VpnClientRevokedCertificates, &out.VpnClientRevokedCertificates
		*out = make([]VpnClientRevokedCertificate_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpnClientRootCertificates != nil {
		in, out := &in.VpnClientRootCertificates, &out.VpnClientRootCertificates
		*out = make([]VpnClientRootCertificate_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientConfiguration_STATUS.
func (in *VpnClientConfiguration_STATUS) DeepCopy() *VpnClientConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(VpnClientConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientRevokedCertificate) DeepCopyInto(out *VpnClientRevokedCertificate) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientRevokedCertificate.
func (in *VpnClientRevokedCertificate) DeepCopy() *VpnClientRevokedCertificate {
	if in == nil {
		return nil
	}
	out := new(VpnClientRevokedCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientRevokedCertificate_STATUS) DeepCopyInto(out *VpnClientRevokedCertificate_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientRevokedCertificate_STATUS.
func (in *VpnClientRevokedCertificate_STATUS) DeepCopy() *VpnClientRevokedCertificate_STATUS {
	if in == nil {
		return nil
	}
	out := new(VpnClientRevokedCertificate_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientRootCertificate) DeepCopyInto(out *VpnClientRootCertificate) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PublicCertData != nil {
		in, out := &in.PublicCertData, &out.PublicCertData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientRootCertificate.
func (in *VpnClientRootCertificate) DeepCopy() *VpnClientRootCertificate {
	if in == nil {
		return nil
	}
	out := new(VpnClientRootCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnClientRootCertificate_STATUS) DeepCopyInto(out *VpnClientRootCertificate_STATUS) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.PublicCertData != nil {
		in, out := &in.PublicCertData, &out.PublicCertData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnClientRootCertificate_STATUS.
func (in *VpnClientRootCertificate_STATUS) DeepCopy() *VpnClientRootCertificate_STATUS {
	if in == nil {
		return nil
	}
	out := new(VpnClientRootCertificate_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnNatRuleMapping) DeepCopyInto(out *VpnNatRuleMapping) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnNatRuleMapping.
func (in *VpnNatRuleMapping) DeepCopy() *VpnNatRuleMapping {
	if in == nil {
		return nil
	}
	out := new(VpnNatRuleMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpnNatRuleMapping_STATUS) DeepCopyInto(out *VpnNatRuleMapping_STATUS) {
	*out = *in
	if in.AddressSpace != nil {
		in, out := &in.AddressSpace, &out.AddressSpace
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpnNatRuleMapping_STATUS.
func (in *VpnNatRuleMapping_STATUS) DeepCopy() *VpnNatRuleMapping_STATUS {
	if in == nil {
		return nil
	}
	out := new(VpnNatRuleMapping_STATUS)
	in.DeepCopyInto(out)
	return out
}
