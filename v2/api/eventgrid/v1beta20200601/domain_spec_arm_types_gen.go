// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20200601

import (
	"encoding/json"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

// Deprecated version of Domain_Spec. Use v1api20200601.Domain_Spec instead
type Domain_Spec_ARM struct {
	Location   *string               `json:"location,omitempty"`
	Name       string                `json:"name,omitempty"`
	Properties *DomainProperties_ARM `json:"properties,omitempty"`
	Tags       map[string]string     `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Domain_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-06-01"
func (domain Domain_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (domain *Domain_Spec_ARM) GetName() string {
	return domain.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.EventGrid/domains"
func (domain *Domain_Spec_ARM) GetType() string {
	return "Microsoft.EventGrid/domains"
}

// Deprecated version of DomainProperties. Use v1api20200601.DomainProperties instead
type DomainProperties_ARM struct {
	InboundIpRules      []InboundIpRule_ARM                   `json:"inboundIpRules,omitempty"`
	InputSchema         *DomainProperties_InputSchema         `json:"inputSchema,omitempty"`
	InputSchemaMapping  *InputSchemaMapping_ARM               `json:"inputSchemaMapping,omitempty"`
	PublicNetworkAccess *DomainProperties_PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
}

// Deprecated version of InboundIpRule. Use v1api20200601.InboundIpRule instead
type InboundIpRule_ARM struct {
	Action *InboundIpRule_Action `json:"action,omitempty"`
	IpMask *string               `json:"ipMask,omitempty"`
}

// Deprecated version of InputSchemaMapping. Use v1api20200601.InputSchemaMapping instead
type InputSchemaMapping_ARM struct {
	Json *JsonInputSchemaMapping_ARM `json:"json,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because InputSchemaMapping_ARM represents a discriminated union (JSON OneOf)
func (mapping InputSchemaMapping_ARM) MarshalJSON() ([]byte, error) {
	if mapping.Json != nil {
		return json.Marshal(mapping.Json)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the InputSchemaMapping_ARM
func (mapping *InputSchemaMapping_ARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["inputSchemaMappingType"]
	if discriminator == "Json" {
		mapping.Json = &JsonInputSchemaMapping_ARM{}
		return json.Unmarshal(data, mapping.Json)
	}

	// No error
	return nil
}

// Deprecated version of JsonInputSchemaMapping. Use v1api20200601.JsonInputSchemaMapping instead
type JsonInputSchemaMapping_ARM struct {
	InputSchemaMappingType JsonInputSchemaMapping_InputSchemaMappingType `json:"inputSchemaMappingType,omitempty"`
	Properties             *JsonInputSchemaMappingProperties_ARM         `json:"properties,omitempty"`
}

// Deprecated version of JsonInputSchemaMappingProperties. Use v1api20200601.JsonInputSchemaMappingProperties instead
type JsonInputSchemaMappingProperties_ARM struct {
	DataVersion *JsonFieldWithDefault_ARM `json:"dataVersion,omitempty"`
	EventTime   *JsonField_ARM            `json:"eventTime,omitempty"`
	EventType   *JsonFieldWithDefault_ARM `json:"eventType,omitempty"`
	Id          *JsonField_ARM            `json:"id,omitempty"`
	Subject     *JsonFieldWithDefault_ARM `json:"subject,omitempty"`
	Topic       *JsonField_ARM            `json:"topic,omitempty"`
}

// Deprecated version of JsonField. Use v1api20200601.JsonField instead
type JsonField_ARM struct {
	SourceField *string `json:"sourceField,omitempty"`
}

// Deprecated version of JsonFieldWithDefault. Use v1api20200601.JsonFieldWithDefault instead
type JsonFieldWithDefault_ARM struct {
	DefaultValue *string `json:"defaultValue,omitempty"`
	SourceField  *string `json:"sourceField,omitempty"`
}
