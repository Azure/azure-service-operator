//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package extensions

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainExtension) DeepCopyInto(out *DomainExtension) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainExtension.
func (in *DomainExtension) DeepCopy() *DomainExtension {
	if in == nil {
		return nil
	}
	out := new(DomainExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainsTopicExtension) DeepCopyInto(out *DomainsTopicExtension) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainsTopicExtension.
func (in *DomainsTopicExtension) DeepCopy() *DomainsTopicExtension {
	if in == nil {
		return nil
	}
	out := new(DomainsTopicExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSubscriptionExtension) DeepCopyInto(out *EventSubscriptionExtension) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSubscriptionExtension.
func (in *EventSubscriptionExtension) DeepCopy() *EventSubscriptionExtension {
	if in == nil {
		return nil
	}
	out := new(EventSubscriptionExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicExtension) DeepCopyInto(out *TopicExtension) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicExtension.
func (in *TopicExtension) DeepCopy() *TopicExtension {
	if in == nil {
		return nil
	}
	out := new(TopicExtension)
	in.DeepCopyInto(out)
	return out
}
