// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20240401

import (
	"encoding/json"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

type WorkspacesConnection_Spec_ARM struct {
	Name       string                               `json:"name,omitempty"`
	Properties *WorkspaceConnectionPropertiesV2_ARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &WorkspacesConnection_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2024-04-01"
func (connection WorkspacesConnection_Spec_ARM) GetAPIVersion() string {
	return "2024-04-01"
}

// GetName returns the Name of the resource
func (connection *WorkspacesConnection_Spec_ARM) GetName() string {
	return connection.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.MachineLearningServices/workspaces/connections"
func (connection *WorkspacesConnection_Spec_ARM) GetType() string {
	return "Microsoft.MachineLearningServices/workspaces/connections"
}

type WorkspaceConnectionPropertiesV2_ARM struct {
	// AAD: Mutually exclusive with all other properties
	AAD *AADAuthTypeWorkspaceConnectionProperties_ARM `json:"aad,omitempty"`

	// AccessKey: Mutually exclusive with all other properties
	AccessKey *AccessKeyAuthTypeWorkspaceConnectionProperties_ARM `json:"accessKey,omitempty"`

	// AccountKey: Mutually exclusive with all other properties
	AccountKey *AccountKeyAuthTypeWorkspaceConnectionProperties_ARM `json:"accountKey,omitempty"`

	// ApiKey: Mutually exclusive with all other properties
	ApiKey *ApiKeyAuthWorkspaceConnectionProperties_ARM `json:"apiKey,omitempty"`

	// CustomKeys: Mutually exclusive with all other properties
	CustomKeys *CustomKeysWorkspaceConnectionProperties_ARM `json:"customKeys,omitempty"`

	// ManagedIdentity: Mutually exclusive with all other properties
	ManagedIdentity *ManagedIdentityAuthTypeWorkspaceConnectionProperties_ARM `json:"managedIdentity,omitempty"`

	// None: Mutually exclusive with all other properties
	None *NoneAuthTypeWorkspaceConnectionProperties_ARM `json:"none,omitempty"`

	// OAuth2: Mutually exclusive with all other properties
	OAuth2 *OAuth2AuthTypeWorkspaceConnectionProperties_ARM `json:"oAuth2,omitempty"`

	// PAT: Mutually exclusive with all other properties
	PAT *PATAuthTypeWorkspaceConnectionProperties_ARM `json:"pat,omitempty"`

	// SAS: Mutually exclusive with all other properties
	SAS *SASAuthTypeWorkspaceConnectionProperties_ARM `json:"sas,omitempty"`

	// ServicePrincipal: Mutually exclusive with all other properties
	ServicePrincipal *ServicePrincipalAuthTypeWorkspaceConnectionProperties_ARM `json:"servicePrincipal,omitempty"`

	// UsernamePassword: Mutually exclusive with all other properties
	UsernamePassword *UsernamePasswordAuthTypeWorkspaceConnectionProperties_ARM `json:"usernamePassword,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because WorkspaceConnectionPropertiesV2_ARM represents a discriminated union (JSON OneOf)
func (v2 WorkspaceConnectionPropertiesV2_ARM) MarshalJSON() ([]byte, error) {
	if v2.AAD != nil {
		return json.Marshal(v2.AAD)
	}
	if v2.AccessKey != nil {
		return json.Marshal(v2.AccessKey)
	}
	if v2.AccountKey != nil {
		return json.Marshal(v2.AccountKey)
	}
	if v2.ApiKey != nil {
		return json.Marshal(v2.ApiKey)
	}
	if v2.CustomKeys != nil {
		return json.Marshal(v2.CustomKeys)
	}
	if v2.ManagedIdentity != nil {
		return json.Marshal(v2.ManagedIdentity)
	}
	if v2.None != nil {
		return json.Marshal(v2.None)
	}
	if v2.OAuth2 != nil {
		return json.Marshal(v2.OAuth2)
	}
	if v2.PAT != nil {
		return json.Marshal(v2.PAT)
	}
	if v2.SAS != nil {
		return json.Marshal(v2.SAS)
	}
	if v2.ServicePrincipal != nil {
		return json.Marshal(v2.ServicePrincipal)
	}
	if v2.UsernamePassword != nil {
		return json.Marshal(v2.UsernamePassword)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the WorkspaceConnectionPropertiesV2_ARM
func (v2 *WorkspaceConnectionPropertiesV2_ARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["authType"]
	if discriminator == "AAD" {
		v2.AAD = &AADAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.AAD)
	}
	if discriminator == "AccessKey" {
		v2.AccessKey = &AccessKeyAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.AccessKey)
	}
	if discriminator == "AccountKey" {
		v2.AccountKey = &AccountKeyAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.AccountKey)
	}
	if discriminator == "ApiKey" {
		v2.ApiKey = &ApiKeyAuthWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.ApiKey)
	}
	if discriminator == "CustomKeys" {
		v2.CustomKeys = &CustomKeysWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.CustomKeys)
	}
	if discriminator == "ManagedIdentity" {
		v2.ManagedIdentity = &ManagedIdentityAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.ManagedIdentity)
	}
	if discriminator == "None" {
		v2.None = &NoneAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.None)
	}
	if discriminator == "OAuth2" {
		v2.OAuth2 = &OAuth2AuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.OAuth2)
	}
	if discriminator == "PAT" {
		v2.PAT = &PATAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.PAT)
	}
	if discriminator == "SAS" {
		v2.SAS = &SASAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.SAS)
	}
	if discriminator == "ServicePrincipal" {
		v2.ServicePrincipal = &ServicePrincipalAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.ServicePrincipal)
	}
	if discriminator == "UsernamePassword" {
		v2.UsernamePassword = &UsernamePasswordAuthTypeWorkspaceConnectionProperties_ARM{}
		return json.Unmarshal(data, v2.UsernamePassword)
	}

	// No error
	return nil
}

type AADAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM `json:"category,omitempty"`
	ExpiryTime    *string                 `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                   `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type AccessKeyAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM           `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionAccessKey_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                           `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                             `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type AccountKeyAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM            `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionAccountKey_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                            `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                              `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type ApiKeyAuthWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category *ConnectionCategory_ARM `json:"category,omitempty"`

	// Credentials: Api key object for workspace connection credential.
	Credentials   *WorkspaceConnectionApiKey_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                        `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                          `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type CustomKeysWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType CustomKeysWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category *ConnectionCategory_ARM `json:"category,omitempty"`

	// Credentials: Custom Keys credential object
	Credentials   *CustomKeys_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string         `json:"expiryTime,omitempty"`
	IsSharedToAll *bool           `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type ManagedIdentityAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM                 `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionManagedIdentity_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                                 `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                                   `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type NoneAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM `json:"category,omitempty"`
	ExpiryTime    *string                 `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                   `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type OAuth2AuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category *ConnectionCategory_ARM `json:"category,omitempty"`

	// Credentials: ClientId and ClientSecret are required. Other properties are optional
	// depending on each OAuth2 provider's  implementation.
	Credentials   *WorkspaceConnectionOAuth2_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                        `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                          `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type PATAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM                     `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionPersonalAccessToken_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                                     `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                                       `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type SASAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM                       `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionSharedAccessSignature_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                                       `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                                         `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type ServicePrincipalAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM                  `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionServicePrincipal_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                                  `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                                    `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionProperties_ARM struct {
	// AuthType: Authentication type of the connection target
	AuthType UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM `json:"authType,omitempty"`

	// Category: Category of the connection
	Category      *ConnectionCategory_ARM                  `json:"category,omitempty"`
	Credentials   *WorkspaceConnectionUsernamePassword_ARM `json:"credentials,omitempty"`
	ExpiryTime    *string                                  `json:"expiryTime,omitempty"`
	IsSharedToAll *bool                                    `json:"isSharedToAll,omitempty"`

	// Metadata: Store user metadata for this connection
	Metadata       map[string]string `json:"metadata,omitempty"`
	SharedUserList []string          `json:"sharedUserList,omitempty"`
	Target         *string           `json:"target,omitempty"`

	// Value: Value details of the workspace connection.
	Value *string `json:"value,omitempty"`

	// ValueFormat: format for the workspace connection value
	ValueFormat *UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM `json:"valueFormat,omitempty"`
}

// +kubebuilder:validation:Enum={"AAD"}
type AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AAD = AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM("AAD")

// Mapping from string to AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var aADAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"aad": AADAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AAD,
}

// +kubebuilder:validation:Enum={"JSON"}
type AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var aADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": AADAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"AccessKey"}
type AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AccessKey = AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM("AccessKey")

// Mapping from string to AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var accessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"accesskey": AccessKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AccessKey,
}

// +kubebuilder:validation:Enum={"JSON"}
type AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var accessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": AccessKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"AccountKey"}
type AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AccountKey = AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM("AccountKey")

// Mapping from string to AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var accountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"accountkey": AccountKeyAuthTypeWorkspaceConnectionProperties_AuthType_ARM_AccountKey,
}

// +kubebuilder:validation:Enum={"JSON"}
type AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var accountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": AccountKeyAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"ApiKey"}
type ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM string

const ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM_ApiKey = ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM("ApiKey")

// Mapping from string to ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM
var apiKeyAuthWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM{
	"apikey": ApiKeyAuthWorkspaceConnectionProperties_AuthType_ARM_ApiKey,
}

// +kubebuilder:validation:Enum={"JSON"}
type ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM string

const ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM_JSON = ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM
var apiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": ApiKeyAuthWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// Category of the connection
// +kubebuilder:validation:Enum={"ADLSGen2","AIServices","AmazonMws","AmazonRdsForOracle","AmazonRdsForSqlServer","AmazonRedshift","AmazonS3Compatible","ApiKey","AzureBlob","AzureDataExplorer","AzureDatabricksDeltaLake","AzureMariaDb","AzureMySqlDb","AzureOneLake","AzureOpenAI","AzurePostgresDb","AzureSqlDb","AzureSqlMi","AzureSynapseAnalytics","AzureTableStorage","BingLLMSearch","Cassandra","CognitiveSearch","CognitiveService","Concur","ContainerRegistry","CosmosDb","CosmosDbMongoDbApi","Couchbase","CustomKeys","Db2","Drill","Dynamics","DynamicsAx","DynamicsCrm","Eloqua","FileServer","FtpServer","GenericContainerRegistry","GenericHttp","GenericRest","Git","GoogleAdWords","GoogleBigQuery","GoogleCloudStorage","Greenplum","Hbase","Hdfs","Hive","Hubspot","Impala","Informix","Jira","Magento","MariaDb","Marketo","MicrosoftAccess","MongoDbAtlas","MongoDbV2","MySql","Netezza","ODataRest","Odbc","Office365","OpenAI","Oracle","OracleCloudStorage","OracleServiceCloud","PayPal","Phoenix","PostgreSql","Presto","PythonFeed","QuickBooks","Redis","Responsys","S3","Salesforce","SalesforceMarketingCloud","SalesforceServiceCloud","SapBw","SapCloudForCustomer","SapEcc","SapHana","SapOpenHub","SapTable","Serp","Serverless","ServiceNow","Sftp","SharePointOnlineList","Shopify","Snowflake","Spark","SqlServer","Square","Sybase","Teradata","Vertica","WebTable","Xero","Zoho"}
type ConnectionCategory_ARM string

const (
	ConnectionCategory_ARM_ADLSGen2                 = ConnectionCategory_ARM("ADLSGen2")
	ConnectionCategory_ARM_AIServices               = ConnectionCategory_ARM("AIServices")
	ConnectionCategory_ARM_AmazonMws                = ConnectionCategory_ARM("AmazonMws")
	ConnectionCategory_ARM_AmazonRdsForOracle       = ConnectionCategory_ARM("AmazonRdsForOracle")
	ConnectionCategory_ARM_AmazonRdsForSqlServer    = ConnectionCategory_ARM("AmazonRdsForSqlServer")
	ConnectionCategory_ARM_AmazonRedshift           = ConnectionCategory_ARM("AmazonRedshift")
	ConnectionCategory_ARM_AmazonS3Compatible       = ConnectionCategory_ARM("AmazonS3Compatible")
	ConnectionCategory_ARM_ApiKey                   = ConnectionCategory_ARM("ApiKey")
	ConnectionCategory_ARM_AzureBlob                = ConnectionCategory_ARM("AzureBlob")
	ConnectionCategory_ARM_AzureDataExplorer        = ConnectionCategory_ARM("AzureDataExplorer")
	ConnectionCategory_ARM_AzureDatabricksDeltaLake = ConnectionCategory_ARM("AzureDatabricksDeltaLake")
	ConnectionCategory_ARM_AzureMariaDb             = ConnectionCategory_ARM("AzureMariaDb")
	ConnectionCategory_ARM_AzureMySqlDb             = ConnectionCategory_ARM("AzureMySqlDb")
	ConnectionCategory_ARM_AzureOneLake             = ConnectionCategory_ARM("AzureOneLake")
	ConnectionCategory_ARM_AzureOpenAI              = ConnectionCategory_ARM("AzureOpenAI")
	ConnectionCategory_ARM_AzurePostgresDb          = ConnectionCategory_ARM("AzurePostgresDb")
	ConnectionCategory_ARM_AzureSqlDb               = ConnectionCategory_ARM("AzureSqlDb")
	ConnectionCategory_ARM_AzureSqlMi               = ConnectionCategory_ARM("AzureSqlMi")
	ConnectionCategory_ARM_AzureSynapseAnalytics    = ConnectionCategory_ARM("AzureSynapseAnalytics")
	ConnectionCategory_ARM_AzureTableStorage        = ConnectionCategory_ARM("AzureTableStorage")
	ConnectionCategory_ARM_BingLLMSearch            = ConnectionCategory_ARM("BingLLMSearch")
	ConnectionCategory_ARM_Cassandra                = ConnectionCategory_ARM("Cassandra")
	ConnectionCategory_ARM_CognitiveSearch          = ConnectionCategory_ARM("CognitiveSearch")
	ConnectionCategory_ARM_CognitiveService         = ConnectionCategory_ARM("CognitiveService")
	ConnectionCategory_ARM_Concur                   = ConnectionCategory_ARM("Concur")
	ConnectionCategory_ARM_ContainerRegistry        = ConnectionCategory_ARM("ContainerRegistry")
	ConnectionCategory_ARM_CosmosDb                 = ConnectionCategory_ARM("CosmosDb")
	ConnectionCategory_ARM_CosmosDbMongoDbApi       = ConnectionCategory_ARM("CosmosDbMongoDbApi")
	ConnectionCategory_ARM_Couchbase                = ConnectionCategory_ARM("Couchbase")
	ConnectionCategory_ARM_CustomKeys               = ConnectionCategory_ARM("CustomKeys")
	ConnectionCategory_ARM_Db2                      = ConnectionCategory_ARM("Db2")
	ConnectionCategory_ARM_Drill                    = ConnectionCategory_ARM("Drill")
	ConnectionCategory_ARM_Dynamics                 = ConnectionCategory_ARM("Dynamics")
	ConnectionCategory_ARM_DynamicsAx               = ConnectionCategory_ARM("DynamicsAx")
	ConnectionCategory_ARM_DynamicsCrm              = ConnectionCategory_ARM("DynamicsCrm")
	ConnectionCategory_ARM_Eloqua                   = ConnectionCategory_ARM("Eloqua")
	ConnectionCategory_ARM_FileServer               = ConnectionCategory_ARM("FileServer")
	ConnectionCategory_ARM_FtpServer                = ConnectionCategory_ARM("FtpServer")
	ConnectionCategory_ARM_GenericContainerRegistry = ConnectionCategory_ARM("GenericContainerRegistry")
	ConnectionCategory_ARM_GenericHttp              = ConnectionCategory_ARM("GenericHttp")
	ConnectionCategory_ARM_GenericRest              = ConnectionCategory_ARM("GenericRest")
	ConnectionCategory_ARM_Git                      = ConnectionCategory_ARM("Git")
	ConnectionCategory_ARM_GoogleAdWords            = ConnectionCategory_ARM("GoogleAdWords")
	ConnectionCategory_ARM_GoogleBigQuery           = ConnectionCategory_ARM("GoogleBigQuery")
	ConnectionCategory_ARM_GoogleCloudStorage       = ConnectionCategory_ARM("GoogleCloudStorage")
	ConnectionCategory_ARM_Greenplum                = ConnectionCategory_ARM("Greenplum")
	ConnectionCategory_ARM_Hbase                    = ConnectionCategory_ARM("Hbase")
	ConnectionCategory_ARM_Hdfs                     = ConnectionCategory_ARM("Hdfs")
	ConnectionCategory_ARM_Hive                     = ConnectionCategory_ARM("Hive")
	ConnectionCategory_ARM_Hubspot                  = ConnectionCategory_ARM("Hubspot")
	ConnectionCategory_ARM_Impala                   = ConnectionCategory_ARM("Impala")
	ConnectionCategory_ARM_Informix                 = ConnectionCategory_ARM("Informix")
	ConnectionCategory_ARM_Jira                     = ConnectionCategory_ARM("Jira")
	ConnectionCategory_ARM_Magento                  = ConnectionCategory_ARM("Magento")
	ConnectionCategory_ARM_MariaDb                  = ConnectionCategory_ARM("MariaDb")
	ConnectionCategory_ARM_Marketo                  = ConnectionCategory_ARM("Marketo")
	ConnectionCategory_ARM_MicrosoftAccess          = ConnectionCategory_ARM("MicrosoftAccess")
	ConnectionCategory_ARM_MongoDbAtlas             = ConnectionCategory_ARM("MongoDbAtlas")
	ConnectionCategory_ARM_MongoDbV2                = ConnectionCategory_ARM("MongoDbV2")
	ConnectionCategory_ARM_MySql                    = ConnectionCategory_ARM("MySql")
	ConnectionCategory_ARM_Netezza                  = ConnectionCategory_ARM("Netezza")
	ConnectionCategory_ARM_ODataRest                = ConnectionCategory_ARM("ODataRest")
	ConnectionCategory_ARM_Odbc                     = ConnectionCategory_ARM("Odbc")
	ConnectionCategory_ARM_Office365                = ConnectionCategory_ARM("Office365")
	ConnectionCategory_ARM_OpenAI                   = ConnectionCategory_ARM("OpenAI")
	ConnectionCategory_ARM_Oracle                   = ConnectionCategory_ARM("Oracle")
	ConnectionCategory_ARM_OracleCloudStorage       = ConnectionCategory_ARM("OracleCloudStorage")
	ConnectionCategory_ARM_OracleServiceCloud       = ConnectionCategory_ARM("OracleServiceCloud")
	ConnectionCategory_ARM_PayPal                   = ConnectionCategory_ARM("PayPal")
	ConnectionCategory_ARM_Phoenix                  = ConnectionCategory_ARM("Phoenix")
	ConnectionCategory_ARM_PostgreSql               = ConnectionCategory_ARM("PostgreSql")
	ConnectionCategory_ARM_Presto                   = ConnectionCategory_ARM("Presto")
	ConnectionCategory_ARM_PythonFeed               = ConnectionCategory_ARM("PythonFeed")
	ConnectionCategory_ARM_QuickBooks               = ConnectionCategory_ARM("QuickBooks")
	ConnectionCategory_ARM_Redis                    = ConnectionCategory_ARM("Redis")
	ConnectionCategory_ARM_Responsys                = ConnectionCategory_ARM("Responsys")
	ConnectionCategory_ARM_S3                       = ConnectionCategory_ARM("S3")
	ConnectionCategory_ARM_Salesforce               = ConnectionCategory_ARM("Salesforce")
	ConnectionCategory_ARM_SalesforceMarketingCloud = ConnectionCategory_ARM("SalesforceMarketingCloud")
	ConnectionCategory_ARM_SalesforceServiceCloud   = ConnectionCategory_ARM("SalesforceServiceCloud")
	ConnectionCategory_ARM_SapBw                    = ConnectionCategory_ARM("SapBw")
	ConnectionCategory_ARM_SapCloudForCustomer      = ConnectionCategory_ARM("SapCloudForCustomer")
	ConnectionCategory_ARM_SapEcc                   = ConnectionCategory_ARM("SapEcc")
	ConnectionCategory_ARM_SapHana                  = ConnectionCategory_ARM("SapHana")
	ConnectionCategory_ARM_SapOpenHub               = ConnectionCategory_ARM("SapOpenHub")
	ConnectionCategory_ARM_SapTable                 = ConnectionCategory_ARM("SapTable")
	ConnectionCategory_ARM_Serp                     = ConnectionCategory_ARM("Serp")
	ConnectionCategory_ARM_Serverless               = ConnectionCategory_ARM("Serverless")
	ConnectionCategory_ARM_ServiceNow               = ConnectionCategory_ARM("ServiceNow")
	ConnectionCategory_ARM_Sftp                     = ConnectionCategory_ARM("Sftp")
	ConnectionCategory_ARM_SharePointOnlineList     = ConnectionCategory_ARM("SharePointOnlineList")
	ConnectionCategory_ARM_Shopify                  = ConnectionCategory_ARM("Shopify")
	ConnectionCategory_ARM_Snowflake                = ConnectionCategory_ARM("Snowflake")
	ConnectionCategory_ARM_Spark                    = ConnectionCategory_ARM("Spark")
	ConnectionCategory_ARM_SqlServer                = ConnectionCategory_ARM("SqlServer")
	ConnectionCategory_ARM_Square                   = ConnectionCategory_ARM("Square")
	ConnectionCategory_ARM_Sybase                   = ConnectionCategory_ARM("Sybase")
	ConnectionCategory_ARM_Teradata                 = ConnectionCategory_ARM("Teradata")
	ConnectionCategory_ARM_Vertica                  = ConnectionCategory_ARM("Vertica")
	ConnectionCategory_ARM_WebTable                 = ConnectionCategory_ARM("WebTable")
	ConnectionCategory_ARM_Xero                     = ConnectionCategory_ARM("Xero")
	ConnectionCategory_ARM_Zoho                     = ConnectionCategory_ARM("Zoho")
)

// Mapping from string to ConnectionCategory_ARM
var connectionCategory_ARM_Values = map[string]ConnectionCategory_ARM{
	"adlsgen2":                 ConnectionCategory_ARM_ADLSGen2,
	"aiservices":               ConnectionCategory_ARM_AIServices,
	"amazonmws":                ConnectionCategory_ARM_AmazonMws,
	"amazonrdsfororacle":       ConnectionCategory_ARM_AmazonRdsForOracle,
	"amazonrdsforsqlserver":    ConnectionCategory_ARM_AmazonRdsForSqlServer,
	"amazonredshift":           ConnectionCategory_ARM_AmazonRedshift,
	"amazons3compatible":       ConnectionCategory_ARM_AmazonS3Compatible,
	"apikey":                   ConnectionCategory_ARM_ApiKey,
	"azureblob":                ConnectionCategory_ARM_AzureBlob,
	"azuredataexplorer":        ConnectionCategory_ARM_AzureDataExplorer,
	"azuredatabricksdeltalake": ConnectionCategory_ARM_AzureDatabricksDeltaLake,
	"azuremariadb":             ConnectionCategory_ARM_AzureMariaDb,
	"azuremysqldb":             ConnectionCategory_ARM_AzureMySqlDb,
	"azureonelake":             ConnectionCategory_ARM_AzureOneLake,
	"azureopenai":              ConnectionCategory_ARM_AzureOpenAI,
	"azurepostgresdb":          ConnectionCategory_ARM_AzurePostgresDb,
	"azuresqldb":               ConnectionCategory_ARM_AzureSqlDb,
	"azuresqlmi":               ConnectionCategory_ARM_AzureSqlMi,
	"azuresynapseanalytics":    ConnectionCategory_ARM_AzureSynapseAnalytics,
	"azuretablestorage":        ConnectionCategory_ARM_AzureTableStorage,
	"bingllmsearch":            ConnectionCategory_ARM_BingLLMSearch,
	"cassandra":                ConnectionCategory_ARM_Cassandra,
	"cognitivesearch":          ConnectionCategory_ARM_CognitiveSearch,
	"cognitiveservice":         ConnectionCategory_ARM_CognitiveService,
	"concur":                   ConnectionCategory_ARM_Concur,
	"containerregistry":        ConnectionCategory_ARM_ContainerRegistry,
	"cosmosdb":                 ConnectionCategory_ARM_CosmosDb,
	"cosmosdbmongodbapi":       ConnectionCategory_ARM_CosmosDbMongoDbApi,
	"couchbase":                ConnectionCategory_ARM_Couchbase,
	"customkeys":               ConnectionCategory_ARM_CustomKeys,
	"db2":                      ConnectionCategory_ARM_Db2,
	"drill":                    ConnectionCategory_ARM_Drill,
	"dynamics":                 ConnectionCategory_ARM_Dynamics,
	"dynamicsax":               ConnectionCategory_ARM_DynamicsAx,
	"dynamicscrm":              ConnectionCategory_ARM_DynamicsCrm,
	"eloqua":                   ConnectionCategory_ARM_Eloqua,
	"fileserver":               ConnectionCategory_ARM_FileServer,
	"ftpserver":                ConnectionCategory_ARM_FtpServer,
	"genericcontainerregistry": ConnectionCategory_ARM_GenericContainerRegistry,
	"generichttp":              ConnectionCategory_ARM_GenericHttp,
	"genericrest":              ConnectionCategory_ARM_GenericRest,
	"git":                      ConnectionCategory_ARM_Git,
	"googleadwords":            ConnectionCategory_ARM_GoogleAdWords,
	"googlebigquery":           ConnectionCategory_ARM_GoogleBigQuery,
	"googlecloudstorage":       ConnectionCategory_ARM_GoogleCloudStorage,
	"greenplum":                ConnectionCategory_ARM_Greenplum,
	"hbase":                    ConnectionCategory_ARM_Hbase,
	"hdfs":                     ConnectionCategory_ARM_Hdfs,
	"hive":                     ConnectionCategory_ARM_Hive,
	"hubspot":                  ConnectionCategory_ARM_Hubspot,
	"impala":                   ConnectionCategory_ARM_Impala,
	"informix":                 ConnectionCategory_ARM_Informix,
	"jira":                     ConnectionCategory_ARM_Jira,
	"magento":                  ConnectionCategory_ARM_Magento,
	"mariadb":                  ConnectionCategory_ARM_MariaDb,
	"marketo":                  ConnectionCategory_ARM_Marketo,
	"microsoftaccess":          ConnectionCategory_ARM_MicrosoftAccess,
	"mongodbatlas":             ConnectionCategory_ARM_MongoDbAtlas,
	"mongodbv2":                ConnectionCategory_ARM_MongoDbV2,
	"mysql":                    ConnectionCategory_ARM_MySql,
	"netezza":                  ConnectionCategory_ARM_Netezza,
	"odatarest":                ConnectionCategory_ARM_ODataRest,
	"odbc":                     ConnectionCategory_ARM_Odbc,
	"office365":                ConnectionCategory_ARM_Office365,
	"openai":                   ConnectionCategory_ARM_OpenAI,
	"oracle":                   ConnectionCategory_ARM_Oracle,
	"oraclecloudstorage":       ConnectionCategory_ARM_OracleCloudStorage,
	"oracleservicecloud":       ConnectionCategory_ARM_OracleServiceCloud,
	"paypal":                   ConnectionCategory_ARM_PayPal,
	"phoenix":                  ConnectionCategory_ARM_Phoenix,
	"postgresql":               ConnectionCategory_ARM_PostgreSql,
	"presto":                   ConnectionCategory_ARM_Presto,
	"pythonfeed":               ConnectionCategory_ARM_PythonFeed,
	"quickbooks":               ConnectionCategory_ARM_QuickBooks,
	"redis":                    ConnectionCategory_ARM_Redis,
	"responsys":                ConnectionCategory_ARM_Responsys,
	"s3":                       ConnectionCategory_ARM_S3,
	"salesforce":               ConnectionCategory_ARM_Salesforce,
	"salesforcemarketingcloud": ConnectionCategory_ARM_SalesforceMarketingCloud,
	"salesforceservicecloud":   ConnectionCategory_ARM_SalesforceServiceCloud,
	"sapbw":                    ConnectionCategory_ARM_SapBw,
	"sapcloudforcustomer":      ConnectionCategory_ARM_SapCloudForCustomer,
	"sapecc":                   ConnectionCategory_ARM_SapEcc,
	"saphana":                  ConnectionCategory_ARM_SapHana,
	"sapopenhub":               ConnectionCategory_ARM_SapOpenHub,
	"saptable":                 ConnectionCategory_ARM_SapTable,
	"serp":                     ConnectionCategory_ARM_Serp,
	"serverless":               ConnectionCategory_ARM_Serverless,
	"servicenow":               ConnectionCategory_ARM_ServiceNow,
	"sftp":                     ConnectionCategory_ARM_Sftp,
	"sharepointonlinelist":     ConnectionCategory_ARM_SharePointOnlineList,
	"shopify":                  ConnectionCategory_ARM_Shopify,
	"snowflake":                ConnectionCategory_ARM_Snowflake,
	"spark":                    ConnectionCategory_ARM_Spark,
	"sqlserver":                ConnectionCategory_ARM_SqlServer,
	"square":                   ConnectionCategory_ARM_Square,
	"sybase":                   ConnectionCategory_ARM_Sybase,
	"teradata":                 ConnectionCategory_ARM_Teradata,
	"vertica":                  ConnectionCategory_ARM_Vertica,
	"webtable":                 ConnectionCategory_ARM_WebTable,
	"xero":                     ConnectionCategory_ARM_Xero,
	"zoho":                     ConnectionCategory_ARM_Zoho,
}

// Custom Keys credential object
type CustomKeys_ARM struct {
	Keys map[string]string `json:"keys,omitempty"`
}

// +kubebuilder:validation:Enum={"CustomKeys"}
type CustomKeysWorkspaceConnectionProperties_AuthType_ARM string

const CustomKeysWorkspaceConnectionProperties_AuthType_ARM_CustomKeys = CustomKeysWorkspaceConnectionProperties_AuthType_ARM("CustomKeys")

// Mapping from string to CustomKeysWorkspaceConnectionProperties_AuthType_ARM
var customKeysWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]CustomKeysWorkspaceConnectionProperties_AuthType_ARM{
	"customkeys": CustomKeysWorkspaceConnectionProperties_AuthType_ARM_CustomKeys,
}

// +kubebuilder:validation:Enum={"JSON"}
type CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM string

const CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM_JSON = CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM
var customKeysWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": CustomKeysWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"ManagedIdentity"}
type ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM_ManagedIdentity = ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM("ManagedIdentity")

// Mapping from string to ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var managedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"managedidentity": ManagedIdentityAuthTypeWorkspaceConnectionProperties_AuthType_ARM_ManagedIdentity,
}

// +kubebuilder:validation:Enum={"JSON"}
type ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var managedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": ManagedIdentityAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"None"}
type NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM_None = NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM("None")

// Mapping from string to NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var noneAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"none": NoneAuthTypeWorkspaceConnectionProperties_AuthType_ARM_None,
}

// +kubebuilder:validation:Enum={"JSON"}
type NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var noneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": NoneAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"OAuth2"}
type OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM_OAuth2 = OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM("OAuth2")

// Mapping from string to OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM
var oAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"oauth2": OAuth2AuthTypeWorkspaceConnectionProperties_AuthType_ARM_OAuth2,
}

// +kubebuilder:validation:Enum={"JSON"}
type OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var oAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": OAuth2AuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"PAT"}
type PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM_PAT = PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM("PAT")

// Mapping from string to PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var pATAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"pat": PATAuthTypeWorkspaceConnectionProperties_AuthType_ARM_PAT,
}

// +kubebuilder:validation:Enum={"JSON"}
type PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var pATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": PATAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"SAS"}
type SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM_SAS = SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM("SAS")

// Mapping from string to SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var sASAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"sas": SASAuthTypeWorkspaceConnectionProperties_AuthType_ARM_SAS,
}

// +kubebuilder:validation:Enum={"JSON"}
type SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var sASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": SASAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"ServicePrincipal"}
type ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM_ServicePrincipal = ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM("ServicePrincipal")

// Mapping from string to ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var servicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"serviceprincipal": ServicePrincipalAuthTypeWorkspaceConnectionProperties_AuthType_ARM_ServicePrincipal,
}

// +kubebuilder:validation:Enum={"JSON"}
type ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var servicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": ServicePrincipalAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

// +kubebuilder:validation:Enum={"UsernamePassword"}
type UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM string

const UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM_UsernamePassword = UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM("UsernamePassword")

// Mapping from string to UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM
var usernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM_Values = map[string]UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM{
	"usernamepassword": UsernamePasswordAuthTypeWorkspaceConnectionProperties_AuthType_ARM_UsernamePassword,
}

// +kubebuilder:validation:Enum={"JSON"}
type UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM string

const UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON = UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM("JSON")

// Mapping from string to UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM
var usernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_Values = map[string]UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM{
	"json": UsernamePasswordAuthTypeWorkspaceConnectionProperties_ValueFormat_ARM_JSON,
}

type WorkspaceConnectionAccessKey_ARM struct {
	AccessKeyId     *string `json:"accessKeyId,omitempty"`
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
}

type WorkspaceConnectionAccountKey_ARM struct {
	Key *string `json:"key,omitempty"`
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKey_ARM struct {
	Key *string `json:"key,omitempty"`
}

type WorkspaceConnectionManagedIdentity_ARM struct {
	ClientId   *string `json:"clientId,omitempty" optionalConfigMapPair:"ClientId"`
	ResourceId *string `json:"resourceId,omitempty"`
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's
// implementation.
type WorkspaceConnectionOAuth2_ARM struct {
	// AuthUrl: Required by Concur connection category
	AuthUrl *string `json:"authUrl,omitempty"`

	// ClientId: Client id in the format of UUID
	ClientId     *string `json:"clientId,omitempty" optionalConfigMapPair:"ClientId"`
	ClientSecret *string `json:"clientSecret,omitempty"`

	// DeveloperToken: Required by GoogleAdWords connection category
	DeveloperToken *string `json:"developerToken,omitempty"`
	Password       *string `json:"password,omitempty"`

	// RefreshToken: Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken *string `json:"refreshToken,omitempty"`

	// TenantId: Required by QuickBooks and Xero connection categories
	TenantId *string `json:"tenantId,omitempty" optionalConfigMapPair:"TenantId"`

	// Username: Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username *string `json:"username,omitempty"`
}

type WorkspaceConnectionPersonalAccessToken_ARM struct {
	Pat *string `json:"pat,omitempty"`
}

type WorkspaceConnectionServicePrincipal_ARM struct {
	ClientId     *string `json:"clientId,omitempty" optionalConfigMapPair:"ClientId"`
	ClientSecret *string `json:"clientSecret,omitempty"`
	TenantId     *string `json:"tenantId,omitempty" optionalConfigMapPair:"TenantId"`
}

type WorkspaceConnectionSharedAccessSignature_ARM struct {
	Sas *string `json:"sas,omitempty"`
}

type WorkspaceConnectionUsernamePassword_ARM struct {
	Password *string `json:"password,omitempty"`

	// SecurityToken: Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken *string `json:"securityToken,omitempty"`
	Username      *string `json:"username,omitempty"`
}
