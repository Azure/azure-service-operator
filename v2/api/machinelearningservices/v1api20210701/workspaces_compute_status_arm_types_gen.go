// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20210701

import (
	"encoding/json"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

type Workspaces_Compute_STATUS_ARM struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Identity: The identity of the resource.
	Identity *Identity_STATUS_ARM `json:"identity,omitempty"`

	// Location: Specifies the location of the resource.
	Location *string `json:"location,omitempty"`

	// Name: The name of the resource
	Name *string `json:"name,omitempty"`

	// Properties: Compute properties
	Properties *Compute_STATUS_ARM `json:"properties,omitempty"`

	// Sku: The sku of the workspace.
	Sku *Sku_STATUS_ARM `json:"sku,omitempty"`

	// SystemData: System data
	SystemData *SystemData_STATUS_ARM `json:"systemData,omitempty"`

	// Tags: Contains resource tags defined as key/value pairs.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

type Compute_STATUS_ARM struct {
	// AKS: Mutually exclusive with all other properties
	AKS *AKS_STATUS_ARM `json:"aks,omitempty"`

	// AmlCompute: Mutually exclusive with all other properties
	AmlCompute *AmlCompute_STATUS_ARM `json:"amlCompute,omitempty"`

	// ComputeInstance: Mutually exclusive with all other properties
	ComputeInstance *ComputeInstance_STATUS_ARM `json:"computeInstance,omitempty"`

	// DataFactory: Mutually exclusive with all other properties
	DataFactory *DataFactory_STATUS_ARM `json:"dataFactory,omitempty"`

	// DataLakeAnalytics: Mutually exclusive with all other properties
	DataLakeAnalytics *DataLakeAnalytics_STATUS_ARM `json:"dataLakeAnalytics,omitempty"`

	// Databricks: Mutually exclusive with all other properties
	Databricks *Databricks_STATUS_ARM `json:"databricks,omitempty"`

	// HDInsight: Mutually exclusive with all other properties
	HDInsight *HDInsight_STATUS_ARM `json:"hdInsight,omitempty"`

	// Kubernetes: Mutually exclusive with all other properties
	Kubernetes *Kubernetes_STATUS_ARM `json:"kubernetes,omitempty"`

	// SynapseSpark: Mutually exclusive with all other properties
	SynapseSpark *SynapseSpark_STATUS_ARM `json:"synapseSpark,omitempty"`

	// VirtualMachine: Mutually exclusive with all other properties
	VirtualMachine *VirtualMachine_STATUS_ARM `json:"virtualMachine,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because Compute_STATUS_ARM represents a discriminated union (JSON OneOf)
func (compute Compute_STATUS_ARM) MarshalJSON() ([]byte, error) {
	if compute.AKS != nil {
		return json.Marshal(compute.AKS)
	}
	if compute.AmlCompute != nil {
		return json.Marshal(compute.AmlCompute)
	}
	if compute.ComputeInstance != nil {
		return json.Marshal(compute.ComputeInstance)
	}
	if compute.DataFactory != nil {
		return json.Marshal(compute.DataFactory)
	}
	if compute.DataLakeAnalytics != nil {
		return json.Marshal(compute.DataLakeAnalytics)
	}
	if compute.Databricks != nil {
		return json.Marshal(compute.Databricks)
	}
	if compute.HDInsight != nil {
		return json.Marshal(compute.HDInsight)
	}
	if compute.Kubernetes != nil {
		return json.Marshal(compute.Kubernetes)
	}
	if compute.SynapseSpark != nil {
		return json.Marshal(compute.SynapseSpark)
	}
	if compute.VirtualMachine != nil {
		return json.Marshal(compute.VirtualMachine)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the Compute_STATUS_ARM
func (compute *Compute_STATUS_ARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["computeType"]
	if discriminator == "AKS" {
		compute.AKS = &AKS_STATUS_ARM{}
		return json.Unmarshal(data, compute.AKS)
	}
	if discriminator == "AmlCompute" {
		compute.AmlCompute = &AmlCompute_STATUS_ARM{}
		return json.Unmarshal(data, compute.AmlCompute)
	}
	if discriminator == "ComputeInstance" {
		compute.ComputeInstance = &ComputeInstance_STATUS_ARM{}
		return json.Unmarshal(data, compute.ComputeInstance)
	}
	if discriminator == "DataFactory" {
		compute.DataFactory = &DataFactory_STATUS_ARM{}
		return json.Unmarshal(data, compute.DataFactory)
	}
	if discriminator == "DataLakeAnalytics" {
		compute.DataLakeAnalytics = &DataLakeAnalytics_STATUS_ARM{}
		return json.Unmarshal(data, compute.DataLakeAnalytics)
	}
	if discriminator == "Databricks" {
		compute.Databricks = &Databricks_STATUS_ARM{}
		return json.Unmarshal(data, compute.Databricks)
	}
	if discriminator == "HDInsight" {
		compute.HDInsight = &HDInsight_STATUS_ARM{}
		return json.Unmarshal(data, compute.HDInsight)
	}
	if discriminator == "Kubernetes" {
		compute.Kubernetes = &Kubernetes_STATUS_ARM{}
		return json.Unmarshal(data, compute.Kubernetes)
	}
	if discriminator == "SynapseSpark" {
		compute.SynapseSpark = &SynapseSpark_STATUS_ARM{}
		return json.Unmarshal(data, compute.SynapseSpark)
	}
	if discriminator == "VirtualMachine" {
		compute.VirtualMachine = &VirtualMachine_STATUS_ARM{}
		return json.Unmarshal(data, compute.VirtualMachine)
	}

	// No error
	return nil
}

type AKS_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType AKS_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: AKS properties
	Properties *AKS_Properties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *AKS_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type AmlCompute_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType AmlCompute_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: Properties of AmlCompute
	Properties *AmlComputeProperties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *AmlCompute_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type ComputeInstance_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType ComputeInstance_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: Properties of ComputeInstance
	Properties *ComputeInstanceProperties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *ComputeInstance_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type Databricks_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType Databricks_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: Properties of Databricks
	Properties *DatabricksProperties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *Databricks_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type DataFactory_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType DataFactory_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *DataFactory_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type DataLakeAnalytics_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType DataLakeAnalytics_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string                                  `json:"modifiedOn,omitempty"`
	Properties *DataLakeAnalytics_Properties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *DataLakeAnalytics_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type HDInsight_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType HDInsight_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: HDInsight compute properties
	Properties *HDInsightProperties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *HDInsight_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type Kubernetes_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType Kubernetes_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty"`

	// Properties: Properties of Kubernetes
	Properties *KubernetesProperties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *Kubernetes_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type SynapseSpark_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType SynapseSpark_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string                             `json:"modifiedOn,omitempty"`
	Properties *SynapseSpark_Properties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *SynapseSpark_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type VirtualMachine_STATUS_ARM struct {
	// ComputeLocation: Location for the underlying compute
	ComputeLocation *string `json:"computeLocation,omitempty"`

	// ComputeType: The type of compute
	ComputeType VirtualMachine_ComputeType_STATUS_ARM `json:"computeType,omitempty"`

	// CreatedOn: The time at which the compute was created.
	CreatedOn *string `json:"createdOn,omitempty"`

	// Description: The description of the Machine Learning compute.
	Description *string `json:"description,omitempty"`

	// DisableLocalAuth: Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for
	// authentication.
	DisableLocalAuth *bool `json:"disableLocalAuth,omitempty"`

	// IsAttachedCompute: Indicating whether the compute was provisioned by user and brought from outside if true, or machine
	// learning service provisioned it if false.
	IsAttachedCompute *bool `json:"isAttachedCompute,omitempty"`

	// ModifiedOn: The time at which the compute was last modified.
	ModifiedOn *string                               `json:"modifiedOn,omitempty"`
	Properties *VirtualMachine_Properties_STATUS_ARM `json:"properties,omitempty"`

	// ProvisioningErrors: Errors during provisioning
	ProvisioningErrors []ErrorResponse_STATUS_ARM `json:"provisioningErrors,omitempty"`

	// ProvisioningState: The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
	// Failed.
	ProvisioningState *VirtualMachine_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceId: ARM resource id of the underlying compute
	ResourceId *string `json:"resourceId,omitempty"`
}

type AKS_ComputeType_STATUS_ARM string

const AKS_ComputeType_STATUS_ARM_AKS = AKS_ComputeType_STATUS_ARM("AKS")

// Mapping from string to AKS_ComputeType_STATUS_ARM
var aKS_ComputeType_STATUS_ARM_Values = map[string]AKS_ComputeType_STATUS_ARM{
	"aks": AKS_ComputeType_STATUS_ARM_AKS,
}

type AKS_Properties_STATUS_ARM struct {
	// AgentCount: Number of agents
	AgentCount *int `json:"agentCount,omitempty"`

	// AgentVmSize: Agent virtual machine size
	AgentVmSize *string `json:"agentVmSize,omitempty"`

	// AksNetworkingConfiguration: AKS networking configuration for vnet
	AksNetworkingConfiguration *AksNetworkingConfiguration_STATUS_ARM `json:"aksNetworkingConfiguration,omitempty"`

	// ClusterFqdn: Cluster full qualified domain name
	ClusterFqdn *string `json:"clusterFqdn,omitempty"`

	// ClusterPurpose: Intended usage of the cluster
	ClusterPurpose *AKS_Properties_ClusterPurpose_STATUS_ARM `json:"clusterPurpose,omitempty"`

	// LoadBalancerSubnet: Load Balancer Subnet
	LoadBalancerSubnet *string `json:"loadBalancerSubnet,omitempty"`

	// LoadBalancerType: Load Balancer Type
	LoadBalancerType *AKS_Properties_LoadBalancerType_STATUS_ARM `json:"loadBalancerType,omitempty"`

	// SslConfiguration: SSL configuration
	SslConfiguration *SslConfiguration_STATUS_ARM `json:"sslConfiguration,omitempty"`

	// SystemServices: System services
	SystemServices []SystemService_STATUS_ARM `json:"systemServices,omitempty"`
}

type AKS_ProvisioningState_STATUS_ARM string

const (
	AKS_ProvisioningState_STATUS_ARM_Canceled  = AKS_ProvisioningState_STATUS_ARM("Canceled")
	AKS_ProvisioningState_STATUS_ARM_Creating  = AKS_ProvisioningState_STATUS_ARM("Creating")
	AKS_ProvisioningState_STATUS_ARM_Deleting  = AKS_ProvisioningState_STATUS_ARM("Deleting")
	AKS_ProvisioningState_STATUS_ARM_Failed    = AKS_ProvisioningState_STATUS_ARM("Failed")
	AKS_ProvisioningState_STATUS_ARM_Succeeded = AKS_ProvisioningState_STATUS_ARM("Succeeded")
	AKS_ProvisioningState_STATUS_ARM_Unknown   = AKS_ProvisioningState_STATUS_ARM("Unknown")
	AKS_ProvisioningState_STATUS_ARM_Updating  = AKS_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to AKS_ProvisioningState_STATUS_ARM
var aKS_ProvisioningState_STATUS_ARM_Values = map[string]AKS_ProvisioningState_STATUS_ARM{
	"canceled":  AKS_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  AKS_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  AKS_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    AKS_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": AKS_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   AKS_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  AKS_ProvisioningState_STATUS_ARM_Updating,
}

type AmlCompute_ComputeType_STATUS_ARM string

const AmlCompute_ComputeType_STATUS_ARM_AmlCompute = AmlCompute_ComputeType_STATUS_ARM("AmlCompute")

// Mapping from string to AmlCompute_ComputeType_STATUS_ARM
var amlCompute_ComputeType_STATUS_ARM_Values = map[string]AmlCompute_ComputeType_STATUS_ARM{
	"amlcompute": AmlCompute_ComputeType_STATUS_ARM_AmlCompute,
}

type AmlCompute_ProvisioningState_STATUS_ARM string

const (
	AmlCompute_ProvisioningState_STATUS_ARM_Canceled  = AmlCompute_ProvisioningState_STATUS_ARM("Canceled")
	AmlCompute_ProvisioningState_STATUS_ARM_Creating  = AmlCompute_ProvisioningState_STATUS_ARM("Creating")
	AmlCompute_ProvisioningState_STATUS_ARM_Deleting  = AmlCompute_ProvisioningState_STATUS_ARM("Deleting")
	AmlCompute_ProvisioningState_STATUS_ARM_Failed    = AmlCompute_ProvisioningState_STATUS_ARM("Failed")
	AmlCompute_ProvisioningState_STATUS_ARM_Succeeded = AmlCompute_ProvisioningState_STATUS_ARM("Succeeded")
	AmlCompute_ProvisioningState_STATUS_ARM_Unknown   = AmlCompute_ProvisioningState_STATUS_ARM("Unknown")
	AmlCompute_ProvisioningState_STATUS_ARM_Updating  = AmlCompute_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to AmlCompute_ProvisioningState_STATUS_ARM
var amlCompute_ProvisioningState_STATUS_ARM_Values = map[string]AmlCompute_ProvisioningState_STATUS_ARM{
	"canceled":  AmlCompute_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  AmlCompute_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  AmlCompute_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    AmlCompute_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": AmlCompute_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   AmlCompute_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  AmlCompute_ProvisioningState_STATUS_ARM_Updating,
}

// AML Compute properties
type AmlComputeProperties_STATUS_ARM struct {
	// AllocationState: Allocation state of the compute. Possible values are: steady - Indicates that the compute is not
	// resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state
	// when it is created and when no operations are being performed on the compute to change the number of compute nodes.
	// resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
	AllocationState *AmlComputeProperties_AllocationState_STATUS_ARM `json:"allocationState,omitempty"`

	// AllocationStateTransitionTime: The time at which the compute entered its current allocation state.
	AllocationStateTransitionTime *string `json:"allocationStateTransitionTime,omitempty"`

	// CurrentNodeCount: The number of compute nodes currently assigned to the compute.
	CurrentNodeCount *int `json:"currentNodeCount,omitempty"`

	// EnableNodePublicIp: Enable or disable node public IP address provisioning. Possible values are: Possible values are:
	// true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will
	// have a private endpoint and no public IPs.
	EnableNodePublicIp *bool `json:"enableNodePublicIp,omitempty"`

	// Errors: Collection of errors encountered by various compute nodes during node setup.
	Errors []ErrorResponse_STATUS_ARM `json:"errors,omitempty"`

	// IsolatedNetwork: Network is isolated or not
	IsolatedNetwork *bool `json:"isolatedNetwork,omitempty"`

	// NodeStateCounts: Counts of various node states on the compute.
	NodeStateCounts *NodeStateCounts_STATUS_ARM `json:"nodeStateCounts,omitempty"`

	// OsType: Compute OS Type
	OsType *AmlComputeProperties_OsType_STATUS_ARM `json:"osType,omitempty"`

	// RemoteLoginPortPublicAccess: State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh
	// port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the
	// cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined,
	// else is open all public nodes. It can be default only during cluster creation time, after creation it will be either
	// enabled or disabled.
	RemoteLoginPortPublicAccess *AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM `json:"remoteLoginPortPublicAccess,omitempty"`

	// ScaleSettings: Scale settings for AML Compute
	ScaleSettings *ScaleSettings_STATUS_ARM `json:"scaleSettings,omitempty"`

	// Subnet: Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId_STATUS_ARM `json:"subnet,omitempty"`

	// TargetNodeCount: The target number of compute nodes for the compute. If the allocationState is resizing, this property
	// denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes
	// the target node count for the previous resize operation.
	TargetNodeCount *int `json:"targetNodeCount,omitempty"`

	// UserAccountCredentials: Credentials for an administrator user account that will be created on each compute node.
	UserAccountCredentials *UserAccountCredentials_STATUS_ARM `json:"userAccountCredentials,omitempty"`

	// VirtualMachineImage: Virtual Machine image for AML Compute - windows only
	VirtualMachineImage *VirtualMachineImage_STATUS_ARM `json:"virtualMachineImage,omitempty"`

	// VmPriority: Virtual Machine priority
	VmPriority *AmlComputeProperties_VmPriority_STATUS_ARM `json:"vmPriority,omitempty"`

	// VmSize: Virtual Machine Size
	VmSize *string `json:"vmSize,omitempty"`
}

type ComputeInstance_ComputeType_STATUS_ARM string

const ComputeInstance_ComputeType_STATUS_ARM_ComputeInstance = ComputeInstance_ComputeType_STATUS_ARM("ComputeInstance")

// Mapping from string to ComputeInstance_ComputeType_STATUS_ARM
var computeInstance_ComputeType_STATUS_ARM_Values = map[string]ComputeInstance_ComputeType_STATUS_ARM{
	"computeinstance": ComputeInstance_ComputeType_STATUS_ARM_ComputeInstance,
}

type ComputeInstance_ProvisioningState_STATUS_ARM string

const (
	ComputeInstance_ProvisioningState_STATUS_ARM_Canceled  = ComputeInstance_ProvisioningState_STATUS_ARM("Canceled")
	ComputeInstance_ProvisioningState_STATUS_ARM_Creating  = ComputeInstance_ProvisioningState_STATUS_ARM("Creating")
	ComputeInstance_ProvisioningState_STATUS_ARM_Deleting  = ComputeInstance_ProvisioningState_STATUS_ARM("Deleting")
	ComputeInstance_ProvisioningState_STATUS_ARM_Failed    = ComputeInstance_ProvisioningState_STATUS_ARM("Failed")
	ComputeInstance_ProvisioningState_STATUS_ARM_Succeeded = ComputeInstance_ProvisioningState_STATUS_ARM("Succeeded")
	ComputeInstance_ProvisioningState_STATUS_ARM_Unknown   = ComputeInstance_ProvisioningState_STATUS_ARM("Unknown")
	ComputeInstance_ProvisioningState_STATUS_ARM_Updating  = ComputeInstance_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to ComputeInstance_ProvisioningState_STATUS_ARM
var computeInstance_ProvisioningState_STATUS_ARM_Values = map[string]ComputeInstance_ProvisioningState_STATUS_ARM{
	"canceled":  ComputeInstance_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  ComputeInstance_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  ComputeInstance_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    ComputeInstance_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": ComputeInstance_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   ComputeInstance_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  ComputeInstance_ProvisioningState_STATUS_ARM_Updating,
}

// Compute Instance properties
type ComputeInstanceProperties_STATUS_ARM struct {
	// ApplicationSharingPolicy: Policy for sharing applications on this compute instance among users of parent workspace. If
	// Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access
	// applications on this instance depending on his/her assigned role.
	ApplicationSharingPolicy *ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM `json:"applicationSharingPolicy,omitempty"`

	// Applications: Describes available applications and their endpoints on this ComputeInstance.
	Applications []ComputeInstanceApplication_STATUS_ARM `json:"applications,omitempty"`

	// ComputeInstanceAuthorizationType: The Compute Instance Authorization type. Available values are personal (default).
	ComputeInstanceAuthorizationType *ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM `json:"computeInstanceAuthorizationType,omitempty"`

	// ConnectivityEndpoints: Describes all connectivity endpoints available for this ComputeInstance.
	ConnectivityEndpoints *ComputeInstanceConnectivityEndpoints_STATUS_ARM `json:"connectivityEndpoints,omitempty"`

	// CreatedBy: Describes information on user who created this ComputeInstance.
	CreatedBy *ComputeInstanceCreatedBy_STATUS_ARM `json:"createdBy,omitempty"`

	// Errors: Collection of errors encountered on this ComputeInstance.
	Errors []ErrorResponse_STATUS_ARM `json:"errors,omitempty"`

	// LastOperation: The last operation on ComputeInstance.
	LastOperation *ComputeInstanceLastOperation_STATUS_ARM `json:"lastOperation,omitempty"`

	// PersonalComputeInstanceSettings: Settings for a personal compute instance.
	PersonalComputeInstanceSettings *PersonalComputeInstanceSettings_STATUS_ARM `json:"personalComputeInstanceSettings,omitempty"`

	// SetupScripts: Details of customized scripts to execute for setting up the cluster.
	SetupScripts *SetupScripts_STATUS_ARM `json:"setupScripts,omitempty"`

	// SshSettings: Specifies policy and settings for SSH access.
	SshSettings *ComputeInstanceSshSettings_STATUS_ARM `json:"sshSettings,omitempty"`

	// State: The current state of this ComputeInstance.
	State *ComputeInstanceState_STATUS_ARM `json:"state,omitempty"`

	// Subnet: Virtual network subnet resource ID the compute nodes belong to.
	Subnet *ResourceId_STATUS_ARM `json:"subnet,omitempty"`

	// VmSize: Virtual Machine Size
	VmSize *string `json:"vmSize,omitempty"`
}

type Databricks_ComputeType_STATUS_ARM string

const Databricks_ComputeType_STATUS_ARM_Databricks = Databricks_ComputeType_STATUS_ARM("Databricks")

// Mapping from string to Databricks_ComputeType_STATUS_ARM
var databricks_ComputeType_STATUS_ARM_Values = map[string]Databricks_ComputeType_STATUS_ARM{
	"databricks": Databricks_ComputeType_STATUS_ARM_Databricks,
}

type Databricks_ProvisioningState_STATUS_ARM string

const (
	Databricks_ProvisioningState_STATUS_ARM_Canceled  = Databricks_ProvisioningState_STATUS_ARM("Canceled")
	Databricks_ProvisioningState_STATUS_ARM_Creating  = Databricks_ProvisioningState_STATUS_ARM("Creating")
	Databricks_ProvisioningState_STATUS_ARM_Deleting  = Databricks_ProvisioningState_STATUS_ARM("Deleting")
	Databricks_ProvisioningState_STATUS_ARM_Failed    = Databricks_ProvisioningState_STATUS_ARM("Failed")
	Databricks_ProvisioningState_STATUS_ARM_Succeeded = Databricks_ProvisioningState_STATUS_ARM("Succeeded")
	Databricks_ProvisioningState_STATUS_ARM_Unknown   = Databricks_ProvisioningState_STATUS_ARM("Unknown")
	Databricks_ProvisioningState_STATUS_ARM_Updating  = Databricks_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to Databricks_ProvisioningState_STATUS_ARM
var databricks_ProvisioningState_STATUS_ARM_Values = map[string]Databricks_ProvisioningState_STATUS_ARM{
	"canceled":  Databricks_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  Databricks_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  Databricks_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    Databricks_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": Databricks_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   Databricks_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  Databricks_ProvisioningState_STATUS_ARM_Updating,
}

// Properties of Databricks
type DatabricksProperties_STATUS_ARM struct {
	// DatabricksAccessToken: Databricks access token
	DatabricksAccessToken *string `json:"databricksAccessToken,omitempty"`

	// WorkspaceUrl: Workspace Url
	WorkspaceUrl *string `json:"workspaceUrl,omitempty"`
}

type DataFactory_ComputeType_STATUS_ARM string

const DataFactory_ComputeType_STATUS_ARM_DataFactory = DataFactory_ComputeType_STATUS_ARM("DataFactory")

// Mapping from string to DataFactory_ComputeType_STATUS_ARM
var dataFactory_ComputeType_STATUS_ARM_Values = map[string]DataFactory_ComputeType_STATUS_ARM{
	"datafactory": DataFactory_ComputeType_STATUS_ARM_DataFactory,
}

type DataFactory_ProvisioningState_STATUS_ARM string

const (
	DataFactory_ProvisioningState_STATUS_ARM_Canceled  = DataFactory_ProvisioningState_STATUS_ARM("Canceled")
	DataFactory_ProvisioningState_STATUS_ARM_Creating  = DataFactory_ProvisioningState_STATUS_ARM("Creating")
	DataFactory_ProvisioningState_STATUS_ARM_Deleting  = DataFactory_ProvisioningState_STATUS_ARM("Deleting")
	DataFactory_ProvisioningState_STATUS_ARM_Failed    = DataFactory_ProvisioningState_STATUS_ARM("Failed")
	DataFactory_ProvisioningState_STATUS_ARM_Succeeded = DataFactory_ProvisioningState_STATUS_ARM("Succeeded")
	DataFactory_ProvisioningState_STATUS_ARM_Unknown   = DataFactory_ProvisioningState_STATUS_ARM("Unknown")
	DataFactory_ProvisioningState_STATUS_ARM_Updating  = DataFactory_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to DataFactory_ProvisioningState_STATUS_ARM
var dataFactory_ProvisioningState_STATUS_ARM_Values = map[string]DataFactory_ProvisioningState_STATUS_ARM{
	"canceled":  DataFactory_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  DataFactory_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  DataFactory_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    DataFactory_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": DataFactory_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   DataFactory_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  DataFactory_ProvisioningState_STATUS_ARM_Updating,
}

type DataLakeAnalytics_ComputeType_STATUS_ARM string

const DataLakeAnalytics_ComputeType_STATUS_ARM_DataLakeAnalytics = DataLakeAnalytics_ComputeType_STATUS_ARM("DataLakeAnalytics")

// Mapping from string to DataLakeAnalytics_ComputeType_STATUS_ARM
var dataLakeAnalytics_ComputeType_STATUS_ARM_Values = map[string]DataLakeAnalytics_ComputeType_STATUS_ARM{
	"datalakeanalytics": DataLakeAnalytics_ComputeType_STATUS_ARM_DataLakeAnalytics,
}

type DataLakeAnalytics_Properties_STATUS_ARM struct {
	// DataLakeStoreAccountName: DataLake Store Account Name
	DataLakeStoreAccountName *string `json:"dataLakeStoreAccountName,omitempty"`
}

type DataLakeAnalytics_ProvisioningState_STATUS_ARM string

const (
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Canceled  = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Canceled")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Creating  = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Creating")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Deleting  = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Deleting")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Failed    = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Failed")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Succeeded = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Succeeded")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Unknown   = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Unknown")
	DataLakeAnalytics_ProvisioningState_STATUS_ARM_Updating  = DataLakeAnalytics_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to DataLakeAnalytics_ProvisioningState_STATUS_ARM
var dataLakeAnalytics_ProvisioningState_STATUS_ARM_Values = map[string]DataLakeAnalytics_ProvisioningState_STATUS_ARM{
	"canceled":  DataLakeAnalytics_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  DataLakeAnalytics_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  DataLakeAnalytics_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    DataLakeAnalytics_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": DataLakeAnalytics_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   DataLakeAnalytics_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  DataLakeAnalytics_ProvisioningState_STATUS_ARM_Updating,
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also
// follows the OData error response format.).
type ErrorResponse_STATUS_ARM struct {
	// Error: The error object.
	Error *ErrorDetail_STATUS_ARM `json:"error,omitempty"`
}

type HDInsight_ComputeType_STATUS_ARM string

const HDInsight_ComputeType_STATUS_ARM_HDInsight = HDInsight_ComputeType_STATUS_ARM("HDInsight")

// Mapping from string to HDInsight_ComputeType_STATUS_ARM
var hDInsight_ComputeType_STATUS_ARM_Values = map[string]HDInsight_ComputeType_STATUS_ARM{
	"hdinsight": HDInsight_ComputeType_STATUS_ARM_HDInsight,
}

type HDInsight_ProvisioningState_STATUS_ARM string

const (
	HDInsight_ProvisioningState_STATUS_ARM_Canceled  = HDInsight_ProvisioningState_STATUS_ARM("Canceled")
	HDInsight_ProvisioningState_STATUS_ARM_Creating  = HDInsight_ProvisioningState_STATUS_ARM("Creating")
	HDInsight_ProvisioningState_STATUS_ARM_Deleting  = HDInsight_ProvisioningState_STATUS_ARM("Deleting")
	HDInsight_ProvisioningState_STATUS_ARM_Failed    = HDInsight_ProvisioningState_STATUS_ARM("Failed")
	HDInsight_ProvisioningState_STATUS_ARM_Succeeded = HDInsight_ProvisioningState_STATUS_ARM("Succeeded")
	HDInsight_ProvisioningState_STATUS_ARM_Unknown   = HDInsight_ProvisioningState_STATUS_ARM("Unknown")
	HDInsight_ProvisioningState_STATUS_ARM_Updating  = HDInsight_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to HDInsight_ProvisioningState_STATUS_ARM
var hDInsight_ProvisioningState_STATUS_ARM_Values = map[string]HDInsight_ProvisioningState_STATUS_ARM{
	"canceled":  HDInsight_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  HDInsight_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  HDInsight_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    HDInsight_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": HDInsight_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   HDInsight_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  HDInsight_ProvisioningState_STATUS_ARM_Updating,
}

// HDInsight compute properties
type HDInsightProperties_STATUS_ARM struct {
	// Address: Public IP address of the master node of the cluster.
	Address *string `json:"address,omitempty"`

	// AdministratorAccount: Admin credentials for master node of the cluster
	AdministratorAccount *VirtualMachineSshCredentials_STATUS_ARM `json:"administratorAccount,omitempty"`

	// SshPort: Port open for ssh connections on the master node of the cluster.
	SshPort *int `json:"sshPort,omitempty"`
}

type Kubernetes_ComputeType_STATUS_ARM string

const Kubernetes_ComputeType_STATUS_ARM_Kubernetes = Kubernetes_ComputeType_STATUS_ARM("Kubernetes")

// Mapping from string to Kubernetes_ComputeType_STATUS_ARM
var kubernetes_ComputeType_STATUS_ARM_Values = map[string]Kubernetes_ComputeType_STATUS_ARM{
	"kubernetes": Kubernetes_ComputeType_STATUS_ARM_Kubernetes,
}

type Kubernetes_ProvisioningState_STATUS_ARM string

const (
	Kubernetes_ProvisioningState_STATUS_ARM_Canceled  = Kubernetes_ProvisioningState_STATUS_ARM("Canceled")
	Kubernetes_ProvisioningState_STATUS_ARM_Creating  = Kubernetes_ProvisioningState_STATUS_ARM("Creating")
	Kubernetes_ProvisioningState_STATUS_ARM_Deleting  = Kubernetes_ProvisioningState_STATUS_ARM("Deleting")
	Kubernetes_ProvisioningState_STATUS_ARM_Failed    = Kubernetes_ProvisioningState_STATUS_ARM("Failed")
	Kubernetes_ProvisioningState_STATUS_ARM_Succeeded = Kubernetes_ProvisioningState_STATUS_ARM("Succeeded")
	Kubernetes_ProvisioningState_STATUS_ARM_Unknown   = Kubernetes_ProvisioningState_STATUS_ARM("Unknown")
	Kubernetes_ProvisioningState_STATUS_ARM_Updating  = Kubernetes_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to Kubernetes_ProvisioningState_STATUS_ARM
var kubernetes_ProvisioningState_STATUS_ARM_Values = map[string]Kubernetes_ProvisioningState_STATUS_ARM{
	"canceled":  Kubernetes_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  Kubernetes_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  Kubernetes_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    Kubernetes_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": Kubernetes_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   Kubernetes_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  Kubernetes_ProvisioningState_STATUS_ARM_Updating,
}

// Kubernetes properties
type KubernetesProperties_STATUS_ARM struct {
	// DefaultInstanceType: Default instance type
	DefaultInstanceType *string `json:"defaultInstanceType,omitempty"`

	// ExtensionInstanceReleaseTrain: Extension instance release train.
	ExtensionInstanceReleaseTrain *string `json:"extensionInstanceReleaseTrain,omitempty"`

	// ExtensionPrincipalId: Extension principal-id.
	ExtensionPrincipalId *string `json:"extensionPrincipalId,omitempty"`

	// InstanceTypes: Instance Type Schema
	InstanceTypes map[string]InstanceTypeSchema_STATUS_ARM `json:"instanceTypes,omitempty"`

	// Namespace: Compute namespace
	Namespace *string `json:"namespace,omitempty"`

	// VcName: VC name.
	VcName *string `json:"vcName,omitempty"`
}

type SynapseSpark_ComputeType_STATUS_ARM string

const SynapseSpark_ComputeType_STATUS_ARM_SynapseSpark = SynapseSpark_ComputeType_STATUS_ARM("SynapseSpark")

// Mapping from string to SynapseSpark_ComputeType_STATUS_ARM
var synapseSpark_ComputeType_STATUS_ARM_Values = map[string]SynapseSpark_ComputeType_STATUS_ARM{
	"synapsespark": SynapseSpark_ComputeType_STATUS_ARM_SynapseSpark,
}

type SynapseSpark_Properties_STATUS_ARM struct {
	// AutoPauseProperties: Auto pause properties.
	AutoPauseProperties *AutoPauseProperties_STATUS_ARM `json:"autoPauseProperties,omitempty"`

	// AutoScaleProperties: Auto scale properties.
	AutoScaleProperties *AutoScaleProperties_STATUS_ARM `json:"autoScaleProperties,omitempty"`

	// NodeCount: The number of compute nodes currently assigned to the compute.
	NodeCount *int `json:"nodeCount,omitempty"`

	// NodeSize: Node size.
	NodeSize *string `json:"nodeSize,omitempty"`

	// NodeSizeFamily: Node size family.
	NodeSizeFamily *string `json:"nodeSizeFamily,omitempty"`

	// PoolName: Pool name.
	PoolName *string `json:"poolName,omitempty"`

	// ResourceGroup: Name of the resource group in which workspace is located.
	ResourceGroup *string `json:"resourceGroup,omitempty"`

	// SparkVersion: Spark version.
	SparkVersion *string `json:"sparkVersion,omitempty"`

	// SubscriptionId: Azure subscription identifier.
	SubscriptionId *string `json:"subscriptionId,omitempty"`

	// WorkspaceName: Name of Azure Machine Learning workspace.
	WorkspaceName *string `json:"workspaceName,omitempty"`
}

type SynapseSpark_ProvisioningState_STATUS_ARM string

const (
	SynapseSpark_ProvisioningState_STATUS_ARM_Canceled  = SynapseSpark_ProvisioningState_STATUS_ARM("Canceled")
	SynapseSpark_ProvisioningState_STATUS_ARM_Creating  = SynapseSpark_ProvisioningState_STATUS_ARM("Creating")
	SynapseSpark_ProvisioningState_STATUS_ARM_Deleting  = SynapseSpark_ProvisioningState_STATUS_ARM("Deleting")
	SynapseSpark_ProvisioningState_STATUS_ARM_Failed    = SynapseSpark_ProvisioningState_STATUS_ARM("Failed")
	SynapseSpark_ProvisioningState_STATUS_ARM_Succeeded = SynapseSpark_ProvisioningState_STATUS_ARM("Succeeded")
	SynapseSpark_ProvisioningState_STATUS_ARM_Unknown   = SynapseSpark_ProvisioningState_STATUS_ARM("Unknown")
	SynapseSpark_ProvisioningState_STATUS_ARM_Updating  = SynapseSpark_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to SynapseSpark_ProvisioningState_STATUS_ARM
var synapseSpark_ProvisioningState_STATUS_ARM_Values = map[string]SynapseSpark_ProvisioningState_STATUS_ARM{
	"canceled":  SynapseSpark_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  SynapseSpark_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  SynapseSpark_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    SynapseSpark_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": SynapseSpark_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   SynapseSpark_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  SynapseSpark_ProvisioningState_STATUS_ARM_Updating,
}

type VirtualMachine_ComputeType_STATUS_ARM string

const VirtualMachine_ComputeType_STATUS_ARM_VirtualMachine = VirtualMachine_ComputeType_STATUS_ARM("VirtualMachine")

// Mapping from string to VirtualMachine_ComputeType_STATUS_ARM
var virtualMachine_ComputeType_STATUS_ARM_Values = map[string]VirtualMachine_ComputeType_STATUS_ARM{
	"virtualmachine": VirtualMachine_ComputeType_STATUS_ARM_VirtualMachine,
}

type VirtualMachine_Properties_STATUS_ARM struct {
	// Address: Public IP address of the virtual machine.
	Address *string `json:"address,omitempty"`

	// AdministratorAccount: Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials_STATUS_ARM `json:"administratorAccount,omitempty"`

	// IsNotebookInstanceCompute: Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `json:"isNotebookInstanceCompute,omitempty"`

	// SshPort: Port open for ssh connections.
	SshPort *int `json:"sshPort,omitempty"`

	// VirtualMachineSize: Virtual Machine size
	VirtualMachineSize *string `json:"virtualMachineSize,omitempty"`
}

type VirtualMachine_ProvisioningState_STATUS_ARM string

const (
	VirtualMachine_ProvisioningState_STATUS_ARM_Canceled  = VirtualMachine_ProvisioningState_STATUS_ARM("Canceled")
	VirtualMachine_ProvisioningState_STATUS_ARM_Creating  = VirtualMachine_ProvisioningState_STATUS_ARM("Creating")
	VirtualMachine_ProvisioningState_STATUS_ARM_Deleting  = VirtualMachine_ProvisioningState_STATUS_ARM("Deleting")
	VirtualMachine_ProvisioningState_STATUS_ARM_Failed    = VirtualMachine_ProvisioningState_STATUS_ARM("Failed")
	VirtualMachine_ProvisioningState_STATUS_ARM_Succeeded = VirtualMachine_ProvisioningState_STATUS_ARM("Succeeded")
	VirtualMachine_ProvisioningState_STATUS_ARM_Unknown   = VirtualMachine_ProvisioningState_STATUS_ARM("Unknown")
	VirtualMachine_ProvisioningState_STATUS_ARM_Updating  = VirtualMachine_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to VirtualMachine_ProvisioningState_STATUS_ARM
var virtualMachine_ProvisioningState_STATUS_ARM_Values = map[string]VirtualMachine_ProvisioningState_STATUS_ARM{
	"canceled":  VirtualMachine_ProvisioningState_STATUS_ARM_Canceled,
	"creating":  VirtualMachine_ProvisioningState_STATUS_ARM_Creating,
	"deleting":  VirtualMachine_ProvisioningState_STATUS_ARM_Deleting,
	"failed":    VirtualMachine_ProvisioningState_STATUS_ARM_Failed,
	"succeeded": VirtualMachine_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":   VirtualMachine_ProvisioningState_STATUS_ARM_Unknown,
	"updating":  VirtualMachine_ProvisioningState_STATUS_ARM_Updating,
}

type AKS_Properties_ClusterPurpose_STATUS_ARM string

const (
	AKS_Properties_ClusterPurpose_STATUS_ARM_DenseProd = AKS_Properties_ClusterPurpose_STATUS_ARM("DenseProd")
	AKS_Properties_ClusterPurpose_STATUS_ARM_DevTest   = AKS_Properties_ClusterPurpose_STATUS_ARM("DevTest")
	AKS_Properties_ClusterPurpose_STATUS_ARM_FastProd  = AKS_Properties_ClusterPurpose_STATUS_ARM("FastProd")
)

// Mapping from string to AKS_Properties_ClusterPurpose_STATUS_ARM
var aKS_Properties_ClusterPurpose_STATUS_ARM_Values = map[string]AKS_Properties_ClusterPurpose_STATUS_ARM{
	"denseprod": AKS_Properties_ClusterPurpose_STATUS_ARM_DenseProd,
	"devtest":   AKS_Properties_ClusterPurpose_STATUS_ARM_DevTest,
	"fastprod":  AKS_Properties_ClusterPurpose_STATUS_ARM_FastProd,
}

type AKS_Properties_LoadBalancerType_STATUS_ARM string

const (
	AKS_Properties_LoadBalancerType_STATUS_ARM_InternalLoadBalancer = AKS_Properties_LoadBalancerType_STATUS_ARM("InternalLoadBalancer")
	AKS_Properties_LoadBalancerType_STATUS_ARM_PublicIp             = AKS_Properties_LoadBalancerType_STATUS_ARM("PublicIp")
)

// Mapping from string to AKS_Properties_LoadBalancerType_STATUS_ARM
var aKS_Properties_LoadBalancerType_STATUS_ARM_Values = map[string]AKS_Properties_LoadBalancerType_STATUS_ARM{
	"internalloadbalancer": AKS_Properties_LoadBalancerType_STATUS_ARM_InternalLoadBalancer,
	"publicip":             AKS_Properties_LoadBalancerType_STATUS_ARM_PublicIp,
}

// Advance configuration for AKS networking
type AksNetworkingConfiguration_STATUS_ARM struct {
	// DnsServiceIP: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address
	// range specified in serviceCidr.
	DnsServiceIP *string `json:"dnsServiceIP,omitempty"`

	// DockerBridgeCidr: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP
	// ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `json:"dockerBridgeCidr,omitempty"`

	// ServiceCidr: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP
	// ranges.
	ServiceCidr *string `json:"serviceCidr,omitempty"`

	// SubnetId: Virtual network subnet resource ID the compute nodes belong to
	SubnetId *string `json:"subnetId,omitempty"`
}

type AmlComputeProperties_AllocationState_STATUS_ARM string

const (
	AmlComputeProperties_AllocationState_STATUS_ARM_Resizing = AmlComputeProperties_AllocationState_STATUS_ARM("Resizing")
	AmlComputeProperties_AllocationState_STATUS_ARM_Steady   = AmlComputeProperties_AllocationState_STATUS_ARM("Steady")
)

// Mapping from string to AmlComputeProperties_AllocationState_STATUS_ARM
var amlComputeProperties_AllocationState_STATUS_ARM_Values = map[string]AmlComputeProperties_AllocationState_STATUS_ARM{
	"resizing": AmlComputeProperties_AllocationState_STATUS_ARM_Resizing,
	"steady":   AmlComputeProperties_AllocationState_STATUS_ARM_Steady,
}

type AmlComputeProperties_OsType_STATUS_ARM string

const (
	AmlComputeProperties_OsType_STATUS_ARM_Linux   = AmlComputeProperties_OsType_STATUS_ARM("Linux")
	AmlComputeProperties_OsType_STATUS_ARM_Windows = AmlComputeProperties_OsType_STATUS_ARM("Windows")
)

// Mapping from string to AmlComputeProperties_OsType_STATUS_ARM
var amlComputeProperties_OsType_STATUS_ARM_Values = map[string]AmlComputeProperties_OsType_STATUS_ARM{
	"linux":   AmlComputeProperties_OsType_STATUS_ARM_Linux,
	"windows": AmlComputeProperties_OsType_STATUS_ARM_Windows,
}

type AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM string

const (
	AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_Disabled     = AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM("Disabled")
	AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_Enabled      = AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM("Enabled")
	AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_NotSpecified = AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM("NotSpecified")
)

// Mapping from string to AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM
var amlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_Values = map[string]AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM{
	"disabled":     AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_Disabled,
	"enabled":      AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_Enabled,
	"notspecified": AmlComputeProperties_RemoteLoginPortPublicAccess_STATUS_ARM_NotSpecified,
}

type AmlComputeProperties_VmPriority_STATUS_ARM string

const (
	AmlComputeProperties_VmPriority_STATUS_ARM_Dedicated   = AmlComputeProperties_VmPriority_STATUS_ARM("Dedicated")
	AmlComputeProperties_VmPriority_STATUS_ARM_LowPriority = AmlComputeProperties_VmPriority_STATUS_ARM("LowPriority")
)

// Mapping from string to AmlComputeProperties_VmPriority_STATUS_ARM
var amlComputeProperties_VmPriority_STATUS_ARM_Values = map[string]AmlComputeProperties_VmPriority_STATUS_ARM{
	"dedicated":   AmlComputeProperties_VmPriority_STATUS_ARM_Dedicated,
	"lowpriority": AmlComputeProperties_VmPriority_STATUS_ARM_LowPriority,
}

// Auto pause properties
type AutoPauseProperties_STATUS_ARM struct {
	DelayInMinutes *int  `json:"delayInMinutes,omitempty"`
	Enabled        *bool `json:"enabled,omitempty"`
}

// Auto scale properties
type AutoScaleProperties_STATUS_ARM struct {
	Enabled      *bool `json:"enabled,omitempty"`
	MaxNodeCount *int  `json:"maxNodeCount,omitempty"`
	MinNodeCount *int  `json:"minNodeCount,omitempty"`
}

// Defines an Aml Instance application and its connectivity endpoint URI.
type ComputeInstanceApplication_STATUS_ARM struct {
	// DisplayName: Name of the ComputeInstance application.
	DisplayName *string `json:"displayName,omitempty"`

	// EndpointUri: Application' endpoint URI.
	EndpointUri *string `json:"endpointUri,omitempty"`
}

// Defines all connectivity endpoints and properties for an ComputeInstance.
type ComputeInstanceConnectivityEndpoints_STATUS_ARM struct {
	// PrivateIpAddress: Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is
	// deployed).
	PrivateIpAddress *string `json:"privateIpAddress,omitempty"`

	// PublicIpAddress: Public IP Address of this ComputeInstance.
	PublicIpAddress *string `json:"publicIpAddress,omitempty"`
}

// Describes information on user who created this ComputeInstance.
type ComputeInstanceCreatedBy_STATUS_ARM struct {
	// UserId: Uniquely identifies the user within his/her organization.
	UserId *string `json:"userId,omitempty"`

	// UserName: Name of the user.
	UserName *string `json:"userName,omitempty"`

	// UserOrgId: Uniquely identifies user' Azure Active Directory organization.
	UserOrgId *string `json:"userOrgId,omitempty"`
}

// The last operation on ComputeInstance.
type ComputeInstanceLastOperation_STATUS_ARM struct {
	// OperationName: Name of the last operation.
	OperationName *ComputeInstanceLastOperation_OperationName_STATUS_ARM `json:"operationName,omitempty"`

	// OperationStatus: Operation status.
	OperationStatus *ComputeInstanceLastOperation_OperationStatus_STATUS_ARM `json:"operationStatus,omitempty"`

	// OperationTime: Time of the last operation.
	OperationTime *string `json:"operationTime,omitempty"`
}

type ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM string

const (
	ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM_Personal = ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM("Personal")
	ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM_Shared   = ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM("Shared")
)

// Mapping from string to ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM
var computeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM_Values = map[string]ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM{
	"personal": ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM_Personal,
	"shared":   ComputeInstanceProperties_ApplicationSharingPolicy_STATUS_ARM_Shared,
}

type ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM string

const ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM_Personal = ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM("personal")

// Mapping from string to ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM
var computeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM_Values = map[string]ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM{
	"personal": ComputeInstanceProperties_ComputeInstanceAuthorizationType_STATUS_ARM_Personal,
}

// Specifies policy and settings for SSH access.
type ComputeInstanceSshSettings_STATUS_ARM struct {
	// AdminPublicKey: Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH
	// key pairs.
	AdminPublicKey *string `json:"adminPublicKey,omitempty"`

	// AdminUserName: Describes the admin user name.
	AdminUserName *string `json:"adminUserName,omitempty"`

	// SshPort: Describes the port for connecting through SSH.
	SshPort *int `json:"sshPort,omitempty"`

	// SshPublicAccess: State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is
	// closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the
	// VNet/subnet policy if applicable.
	SshPublicAccess *ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM `json:"sshPublicAccess,omitempty"`
}

// Current state of an ComputeInstance.
type ComputeInstanceState_STATUS_ARM string

const (
	ComputeInstanceState_STATUS_ARM_CreateFailed    = ComputeInstanceState_STATUS_ARM("CreateFailed")
	ComputeInstanceState_STATUS_ARM_Creating        = ComputeInstanceState_STATUS_ARM("Creating")
	ComputeInstanceState_STATUS_ARM_Deleting        = ComputeInstanceState_STATUS_ARM("Deleting")
	ComputeInstanceState_STATUS_ARM_JobRunning      = ComputeInstanceState_STATUS_ARM("JobRunning")
	ComputeInstanceState_STATUS_ARM_Restarting      = ComputeInstanceState_STATUS_ARM("Restarting")
	ComputeInstanceState_STATUS_ARM_Running         = ComputeInstanceState_STATUS_ARM("Running")
	ComputeInstanceState_STATUS_ARM_SettingUp       = ComputeInstanceState_STATUS_ARM("SettingUp")
	ComputeInstanceState_STATUS_ARM_SetupFailed     = ComputeInstanceState_STATUS_ARM("SetupFailed")
	ComputeInstanceState_STATUS_ARM_Starting        = ComputeInstanceState_STATUS_ARM("Starting")
	ComputeInstanceState_STATUS_ARM_Stopped         = ComputeInstanceState_STATUS_ARM("Stopped")
	ComputeInstanceState_STATUS_ARM_Stopping        = ComputeInstanceState_STATUS_ARM("Stopping")
	ComputeInstanceState_STATUS_ARM_Unknown         = ComputeInstanceState_STATUS_ARM("Unknown")
	ComputeInstanceState_STATUS_ARM_Unusable        = ComputeInstanceState_STATUS_ARM("Unusable")
	ComputeInstanceState_STATUS_ARM_UserSettingUp   = ComputeInstanceState_STATUS_ARM("UserSettingUp")
	ComputeInstanceState_STATUS_ARM_UserSetupFailed = ComputeInstanceState_STATUS_ARM("UserSetupFailed")
)

// Mapping from string to ComputeInstanceState_STATUS_ARM
var computeInstanceState_STATUS_ARM_Values = map[string]ComputeInstanceState_STATUS_ARM{
	"createfailed":    ComputeInstanceState_STATUS_ARM_CreateFailed,
	"creating":        ComputeInstanceState_STATUS_ARM_Creating,
	"deleting":        ComputeInstanceState_STATUS_ARM_Deleting,
	"jobrunning":      ComputeInstanceState_STATUS_ARM_JobRunning,
	"restarting":      ComputeInstanceState_STATUS_ARM_Restarting,
	"running":         ComputeInstanceState_STATUS_ARM_Running,
	"settingup":       ComputeInstanceState_STATUS_ARM_SettingUp,
	"setupfailed":     ComputeInstanceState_STATUS_ARM_SetupFailed,
	"starting":        ComputeInstanceState_STATUS_ARM_Starting,
	"stopped":         ComputeInstanceState_STATUS_ARM_Stopped,
	"stopping":        ComputeInstanceState_STATUS_ARM_Stopping,
	"unknown":         ComputeInstanceState_STATUS_ARM_Unknown,
	"unusable":        ComputeInstanceState_STATUS_ARM_Unusable,
	"usersettingup":   ComputeInstanceState_STATUS_ARM_UserSettingUp,
	"usersetupfailed": ComputeInstanceState_STATUS_ARM_UserSetupFailed,
}

// The error detail.
type ErrorDetail_STATUS_ARM struct {
	// AdditionalInfo: The error additional info.
	AdditionalInfo []ErrorAdditionalInfo_STATUS_ARM `json:"additionalInfo,omitempty"`

	// Code: The error code.
	Code *string `json:"code,omitempty"`

	// Details: The error details.
	Details []ErrorDetail_STATUS_Unrolled_ARM `json:"details,omitempty"`

	// Message: The error message.
	Message *string `json:"message,omitempty"`

	// Target: The error target.
	Target *string `json:"target,omitempty"`
}

// Instance type schema.
type InstanceTypeSchema_STATUS_ARM struct {
	// NodeSelector: Node Selector
	NodeSelector map[string]string `json:"nodeSelector,omitempty"`

	// Resources: Resource requests/limits for this instance type
	Resources *InstanceTypeSchema_Resources_STATUS_ARM `json:"resources,omitempty"`
}

// Counts of various compute node states on the amlCompute.
type NodeStateCounts_STATUS_ARM struct {
	// IdleNodeCount: Number of compute nodes in idle state.
	IdleNodeCount *int `json:"idleNodeCount,omitempty"`

	// LeavingNodeCount: Number of compute nodes which are leaving the amlCompute.
	LeavingNodeCount *int `json:"leavingNodeCount,omitempty"`

	// PreemptedNodeCount: Number of compute nodes which are in preempted state.
	PreemptedNodeCount *int `json:"preemptedNodeCount,omitempty"`

	// PreparingNodeCount: Number of compute nodes which are being prepared.
	PreparingNodeCount *int `json:"preparingNodeCount,omitempty"`

	// RunningNodeCount: Number of compute nodes which are running jobs.
	RunningNodeCount *int `json:"runningNodeCount,omitempty"`

	// UnusableNodeCount: Number of compute nodes which are in unusable state.
	UnusableNodeCount *int `json:"unusableNodeCount,omitempty"`
}

// Settings for a personal compute instance.
type PersonalComputeInstanceSettings_STATUS_ARM struct {
	// AssignedUser: A user explicitly assigned to a personal compute instance.
	AssignedUser *AssignedUser_STATUS_ARM `json:"assignedUser,omitempty"`
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceId_STATUS_ARM struct {
	// Id: The ID of the resource
	Id *string `json:"id,omitempty"`
}

// scale settings for AML Compute
type ScaleSettings_STATUS_ARM struct {
	// MaxNodeCount: Max number of nodes to use
	MaxNodeCount *int `json:"maxNodeCount,omitempty"`

	// MinNodeCount: Min number of nodes to use
	MinNodeCount *int `json:"minNodeCount,omitempty"`

	// NodeIdleTimeBeforeScaleDown: Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `json:"nodeIdleTimeBeforeScaleDown,omitempty"`
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScripts_STATUS_ARM struct {
	// Scripts: Customized setup scripts
	Scripts *ScriptsToExecute_STATUS_ARM `json:"scripts,omitempty"`
}

// The ssl configuration for scoring
type SslConfiguration_STATUS_ARM struct {
	// Cert: Cert data
	Cert *string `json:"cert,omitempty"`

	// Cname: CNAME of the cert
	Cname *string `json:"cname,omitempty"`

	// Key: Key data
	Key *string `json:"key,omitempty"`

	// LeafDomainLabel: Leaf domain label of public endpoint
	LeafDomainLabel *string `json:"leafDomainLabel,omitempty"`

	// OverwriteExistingDomain: Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `json:"overwriteExistingDomain,omitempty"`

	// Status: Enable or disable ssl for scoring
	Status *SslConfiguration_Status_STATUS_ARM `json:"status,omitempty"`
}

// A system service running on a compute.
type SystemService_STATUS_ARM struct {
	// PublicIpAddress: Public IP address
	PublicIpAddress *string `json:"publicIpAddress,omitempty"`

	// SystemServiceType: The type of this system service.
	SystemServiceType *string `json:"systemServiceType,omitempty"`

	// Version: The version for this type.
	Version *string `json:"version,omitempty"`
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials_STATUS_ARM struct {
	// AdminUserName: Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName *string `json:"adminUserName,omitempty"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage_STATUS_ARM struct {
	// Id: Virtual Machine image path
	Id *string `json:"id,omitempty"`
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials_STATUS_ARM struct {
	// PrivateKeyData: Private key data
	PrivateKeyData *string `json:"privateKeyData,omitempty"`

	// PublicKeyData: Public key data
	PublicKeyData *string `json:"publicKeyData,omitempty"`

	// Username: Username of admin account
	Username *string `json:"username,omitempty"`
}

// A user that can be assigned to a compute instance.
type AssignedUser_STATUS_ARM struct {
	// ObjectId: User’s AAD Object Id.
	ObjectId *string `json:"objectId,omitempty"`

	// TenantId: User’s AAD Tenant Id.
	TenantId *string `json:"tenantId,omitempty"`
}

type ComputeInstanceLastOperation_OperationName_STATUS_ARM string

const (
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Create  = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Create")
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Delete  = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Delete")
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Reimage = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Reimage")
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Restart = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Restart")
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Start   = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Start")
	ComputeInstanceLastOperation_OperationName_STATUS_ARM_Stop    = ComputeInstanceLastOperation_OperationName_STATUS_ARM("Stop")
)

// Mapping from string to ComputeInstanceLastOperation_OperationName_STATUS_ARM
var computeInstanceLastOperation_OperationName_STATUS_ARM_Values = map[string]ComputeInstanceLastOperation_OperationName_STATUS_ARM{
	"create":  ComputeInstanceLastOperation_OperationName_STATUS_ARM_Create,
	"delete":  ComputeInstanceLastOperation_OperationName_STATUS_ARM_Delete,
	"reimage": ComputeInstanceLastOperation_OperationName_STATUS_ARM_Reimage,
	"restart": ComputeInstanceLastOperation_OperationName_STATUS_ARM_Restart,
	"start":   ComputeInstanceLastOperation_OperationName_STATUS_ARM_Start,
	"stop":    ComputeInstanceLastOperation_OperationName_STATUS_ARM_Stop,
}

type ComputeInstanceLastOperation_OperationStatus_STATUS_ARM string

const (
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_CreateFailed  = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("CreateFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_DeleteFailed  = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("DeleteFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_InProgress    = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("InProgress")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_ReimageFailed = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("ReimageFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_RestartFailed = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("RestartFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_StartFailed   = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("StartFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_StopFailed    = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("StopFailed")
	ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_Succeeded     = ComputeInstanceLastOperation_OperationStatus_STATUS_ARM("Succeeded")
)

// Mapping from string to ComputeInstanceLastOperation_OperationStatus_STATUS_ARM
var computeInstanceLastOperation_OperationStatus_STATUS_ARM_Values = map[string]ComputeInstanceLastOperation_OperationStatus_STATUS_ARM{
	"createfailed":  ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_CreateFailed,
	"deletefailed":  ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_DeleteFailed,
	"inprogress":    ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_InProgress,
	"reimagefailed": ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_ReimageFailed,
	"restartfailed": ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_RestartFailed,
	"startfailed":   ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_StartFailed,
	"stopfailed":    ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_StopFailed,
	"succeeded":     ComputeInstanceLastOperation_OperationStatus_STATUS_ARM_Succeeded,
}

type ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM string

const (
	ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM_Disabled = ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM("Disabled")
	ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM_Enabled  = ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM("Enabled")
)

// Mapping from string to ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM
var computeInstanceSshSettings_SshPublicAccess_STATUS_ARM_Values = map[string]ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM{
	"disabled": ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM_Disabled,
	"enabled":  ComputeInstanceSshSettings_SshPublicAccess_STATUS_ARM_Enabled,
}

// The resource management error additional info.
type ErrorAdditionalInfo_STATUS_ARM struct {
	// Info: The additional info.
	Info map[string]v1.JSON `json:"info,omitempty"`

	// Type: The additional info type.
	Type *string `json:"type,omitempty"`
}

type ErrorDetail_STATUS_Unrolled_ARM struct {
	// AdditionalInfo: The error additional info.
	AdditionalInfo []ErrorAdditionalInfo_STATUS_ARM `json:"additionalInfo,omitempty"`

	// Code: The error code.
	Code *string `json:"code,omitempty"`

	// Message: The error message.
	Message *string `json:"message,omitempty"`

	// Target: The error target.
	Target *string `json:"target,omitempty"`
}

type InstanceTypeSchema_Resources_STATUS_ARM struct {
	// Limits: Resource limits for this instance type
	Limits map[string]string `json:"limits,omitempty"`

	// Requests: Resource requests for this instance type
	Requests map[string]string `json:"requests,omitempty"`
}

// Customized setup scripts
type ScriptsToExecute_STATUS_ARM struct {
	// CreationScript: Script that's run only once during provision of the compute.
	CreationScript *ScriptReference_STATUS_ARM `json:"creationScript,omitempty"`

	// StartupScript: Script that's run every time the machine starts.
	StartupScript *ScriptReference_STATUS_ARM `json:"startupScript,omitempty"`
}

type SslConfiguration_Status_STATUS_ARM string

const (
	SslConfiguration_Status_STATUS_ARM_Auto     = SslConfiguration_Status_STATUS_ARM("Auto")
	SslConfiguration_Status_STATUS_ARM_Disabled = SslConfiguration_Status_STATUS_ARM("Disabled")
	SslConfiguration_Status_STATUS_ARM_Enabled  = SslConfiguration_Status_STATUS_ARM("Enabled")
)

// Mapping from string to SslConfiguration_Status_STATUS_ARM
var sslConfiguration_Status_STATUS_ARM_Values = map[string]SslConfiguration_Status_STATUS_ARM{
	"auto":     SslConfiguration_Status_STATUS_ARM_Auto,
	"disabled": SslConfiguration_Status_STATUS_ARM_Disabled,
	"enabled":  SslConfiguration_Status_STATUS_ARM_Enabled,
}

// Script reference
type ScriptReference_STATUS_ARM struct {
	// ScriptArguments: Optional command line arguments passed to the script to run.
	ScriptArguments *string `json:"scriptArguments,omitempty"`

	// ScriptData: The location of scripts in the mounted volume.
	ScriptData *string `json:"scriptData,omitempty"`

	// ScriptSource: The storage source of the script: inline, workspace.
	ScriptSource *string `json:"scriptSource,omitempty"`

	// Timeout: Optional time period passed to timeout command.
	Timeout *string `json:"timeout,omitempty"`
}
