// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20180601

type Server_STATUSARM struct {
	// Location: The location the resource resides in.
	Location *string `json:"location,omitempty"`

	// Properties: Properties of the server.
	Properties *ServerPropertiesForCreate_STATUSARM `json:"properties,omitempty"`

	// Sku: The SKU (pricing tier) of the server.
	Sku *Sku_STATUSARM `json:"sku,omitempty"`

	// Tags: Application-specific metadata in the form of key-value pairs.
	Tags map[string]string `json:"tags,omitempty"`
}

type ServerPropertiesForCreate_STATUSARM struct {
	// CreateMode: The mode to create a new server.
	CreateMode *ServerPropertiesForCreate_CreateMode_STATUS `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion_STATUS `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess_STATUS `json:"publicNetworkAccess,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement_STATUS `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfile_STATUSARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion_STATUS `json:"version,omitempty"`
}

type Sku_STATUSARM struct {
	// Capacity: The scale up/out capacity, representing server's compute units.
	Capacity *int `json:"capacity,omitempty"`

	// Family: The family of hardware.
	Family *string `json:"family,omitempty"`

	// Name: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name *string `json:"name,omitempty"`

	// Size: The size code, to be interpreted by resource as appropriate.
	Size *string `json:"size,omitempty"`

	// Tier: The tier of the particular SKU, e.g. Basic.
	Tier *Sku_Tier_STATUS `json:"tier,omitempty"`
}

type MinimalTlsVersion_STATUS string

const (
	MinimalTlsVersion_STATUSTLS1_0                 = MinimalTlsVersion_STATUS("TLS1_0")
	MinimalTlsVersion_STATUSTLS1_1                 = MinimalTlsVersion_STATUS("TLS1_1")
	MinimalTlsVersion_STATUSTLS1_2                 = MinimalTlsVersion_STATUS("TLS1_2")
	MinimalTlsVersion_STATUSTLSEnforcementDisabled = MinimalTlsVersion_STATUS("TLSEnforcementDisabled")
)

type PublicNetworkAccess_STATUS string

const (
	PublicNetworkAccess_STATUSDisabled = PublicNetworkAccess_STATUS("Disabled")
	PublicNetworkAccess_STATUSEnabled  = PublicNetworkAccess_STATUS("Enabled")
)

type ServerPropertiesForCreate_CreateMode_STATUS string

const (
	ServerPropertiesForCreate_CreateMode_STATUSDefault            = ServerPropertiesForCreate_CreateMode_STATUS("Default")
	ServerPropertiesForCreate_CreateMode_STATUSGeoRestore         = ServerPropertiesForCreate_CreateMode_STATUS("GeoRestore")
	ServerPropertiesForCreate_CreateMode_STATUSPointInTimeRestore = ServerPropertiesForCreate_CreateMode_STATUS("PointInTimeRestore")
	ServerPropertiesForCreate_CreateMode_STATUSReplica            = ServerPropertiesForCreate_CreateMode_STATUS("Replica")
)

type ServerVersion_STATUS string

const (
	ServerVersion_STATUS102 = ServerVersion_STATUS("10.2")
	ServerVersion_STATUS103 = ServerVersion_STATUS("10.3")
)

type Sku_Tier_STATUS string

const (
	Sku_Tier_STATUSBasic           = Sku_Tier_STATUS("Basic")
	Sku_Tier_STATUSGeneralPurpose  = Sku_Tier_STATUS("GeneralPurpose")
	Sku_Tier_STATUSMemoryOptimized = Sku_Tier_STATUS("MemoryOptimized")
)

type SslEnforcement_STATUS string

const (
	SslEnforcement_STATUSDisabled = SslEnforcement_STATUS("Disabled")
	SslEnforcement_STATUSEnabled  = SslEnforcement_STATUS("Enabled")
)

type StorageProfile_STATUSARM struct {
	// BackupRetentionDays: Backup retention days for the server.
	BackupRetentionDays *int `json:"backupRetentionDays,omitempty"`

	// GeoRedundantBackup: Enable Geo-redundant or not for server backup.
	GeoRedundantBackup *StorageProfile_GeoRedundantBackup_STATUS `json:"geoRedundantBackup,omitempty"`

	// StorageAutogrow: Enable Storage Auto Grow.
	StorageAutogrow *StorageProfile_StorageAutogrow_STATUS `json:"storageAutogrow,omitempty"`

	// StorageMB: Max storage allowed for a server.
	StorageMB *int `json:"storageMB,omitempty"`
}

type StorageProfile_GeoRedundantBackup_STATUS string

const (
	StorageProfile_GeoRedundantBackup_STATUSDisabled = StorageProfile_GeoRedundantBackup_STATUS("Disabled")
	StorageProfile_GeoRedundantBackup_STATUSEnabled  = StorageProfile_GeoRedundantBackup_STATUS("Enabled")
)

type StorageProfile_StorageAutogrow_STATUS string

const (
	StorageProfile_StorageAutogrow_STATUSDisabled = StorageProfile_StorageAutogrow_STATUS("Disabled")
	StorageProfile_StorageAutogrow_STATUSEnabled  = StorageProfile_StorageAutogrow_STATUS("Enabled")
)
