// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20180601

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type Server_SpecARM struct {
	AzureName string `json:"azureName,omitempty"`

	// Location: The location the resource resides in.
	Location *string `json:"location,omitempty"`
	Name     string  `json:"name,omitempty"`

	// Properties: Properties of the server.
	Properties *ServerPropertiesForCreateARM `json:"properties,omitempty"`

	// Sku: The SKU (pricing tier) of the server.
	Sku *SkuARM `json:"sku,omitempty"`

	// Tags: Application-specific metadata in the form of key-value pairs.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Server_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2018-06-01"
func (server Server_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (server *Server_SpecARM) GetName() string {
	return server.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.DBforMariaDB/servers"
func (server *Server_SpecARM) GetType() string {
	return "Microsoft.DBforMariaDB/servers"
}

type ServerPropertiesForCreateARM struct {
	// CreateMode: The mode to create a new server.
	CreateMode *ServerPropertiesForCreate_CreateMode `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfileARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion `json:"version,omitempty"`
}

type SkuARM struct {
	// Capacity: The scale up/out capacity, representing server's compute units.
	Capacity *int `json:"capacity,omitempty"`

	// Family: The family of hardware.
	Family *string `json:"family,omitempty"`

	// Name: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name *string `json:"name,omitempty"`

	// Size: The size code, to be interpreted by resource as appropriate.
	Size *string `json:"size,omitempty"`

	// Tier: The tier of the particular SKU, e.g. Basic.
	Tier *Sku_Tier `json:"tier,omitempty"`
}

// +kubebuilder:validation:Enum={"TLS1_0","TLS1_1","TLS1_2","TLSEnforcementDisabled"}
type MinimalTlsVersion string

const (
	MinimalTlsVersion_TLS1_0                 = MinimalTlsVersion("TLS1_0")
	MinimalTlsVersion_TLS1_1                 = MinimalTlsVersion("TLS1_1")
	MinimalTlsVersion_TLS1_2                 = MinimalTlsVersion("TLS1_2")
	MinimalTlsVersion_TLSEnforcementDisabled = MinimalTlsVersion("TLSEnforcementDisabled")
)

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type PublicNetworkAccess string

const (
	PublicNetworkAccess_Disabled = PublicNetworkAccess("Disabled")
	PublicNetworkAccess_Enabled  = PublicNetworkAccess("Enabled")
)

// +kubebuilder:validation:Enum={"Default","GeoRestore","PointInTimeRestore","Replica"}
type ServerPropertiesForCreate_CreateMode string

const (
	ServerPropertiesForCreate_CreateMode_Default            = ServerPropertiesForCreate_CreateMode("Default")
	ServerPropertiesForCreate_CreateMode_GeoRestore         = ServerPropertiesForCreate_CreateMode("GeoRestore")
	ServerPropertiesForCreate_CreateMode_PointInTimeRestore = ServerPropertiesForCreate_CreateMode("PointInTimeRestore")
	ServerPropertiesForCreate_CreateMode_Replica            = ServerPropertiesForCreate_CreateMode("Replica")
)

// +kubebuilder:validation:Enum={"10.2","10.3"}
type ServerVersion string

const (
	ServerVersion_102 = ServerVersion("10.2")
	ServerVersion_103 = ServerVersion("10.3")
)

// +kubebuilder:validation:Enum={"Basic","GeneralPurpose","MemoryOptimized"}
type Sku_Tier string

const (
	Sku_Tier_Basic           = Sku_Tier("Basic")
	Sku_Tier_GeneralPurpose  = Sku_Tier("GeneralPurpose")
	Sku_Tier_MemoryOptimized = Sku_Tier("MemoryOptimized")
)

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type SslEnforcement string

const (
	SslEnforcement_Disabled = SslEnforcement("Disabled")
	SslEnforcement_Enabled  = SslEnforcement("Enabled")
)

type StorageProfileARM struct {
	// BackupRetentionDays: Backup retention days for the server.
	BackupRetentionDays *int `json:"backupRetentionDays,omitempty"`

	// GeoRedundantBackup: Enable Geo-redundant or not for server backup.
	GeoRedundantBackup *StorageProfile_GeoRedundantBackup `json:"geoRedundantBackup,omitempty"`

	// StorageAutogrow: Enable Storage Auto Grow.
	StorageAutogrow *StorageProfile_StorageAutogrow `json:"storageAutogrow,omitempty"`

	// StorageMB: Max storage allowed for a server.
	StorageMB *int `json:"storageMB,omitempty"`
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type StorageProfile_GeoRedundantBackup string

const (
	StorageProfile_GeoRedundantBackup_Disabled = StorageProfile_GeoRedundantBackup("Disabled")
	StorageProfile_GeoRedundantBackup_Enabled  = StorageProfile_GeoRedundantBackup("Enabled")
)

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type StorageProfile_StorageAutogrow string

const (
	StorageProfile_StorageAutogrow_Disabled = StorageProfile_StorageAutogrow("Disabled")
	StorageProfile_StorageAutogrow_Enabled  = StorageProfile_StorageAutogrow("Enabled")
)
