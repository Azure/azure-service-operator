// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20180601

import (
	"encoding/json"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

type Server_Spec_ARM struct {
	// Location: The location the resource resides in.
	Location *string `json:"location,omitempty"`
	Name     string  `json:"name,omitempty"`

	// Properties: Properties of the server.
	Properties *ServerPropertiesForCreate_ARM `json:"properties,omitempty"`

	// Sku: The SKU (pricing tier) of the server.
	Sku *Sku_ARM `json:"sku,omitempty"`

	// Tags: Application-specific metadata in the form of key-value pairs.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Server_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2018-06-01"
func (server Server_Spec_ARM) GetAPIVersion() string {
	return "2018-06-01"
}

// GetName returns the Name of the resource
func (server *Server_Spec_ARM) GetName() string {
	return server.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.DBforMariaDB/servers"
func (server *Server_Spec_ARM) GetType() string {
	return "Microsoft.DBforMariaDB/servers"
}

type ServerPropertiesForCreate_ARM struct {
	// Default: Mutually exclusive with all other properties
	Default *ServerPropertiesForDefaultCreate_ARM `json:"default,omitempty"`

	// GeoRestore: Mutually exclusive with all other properties
	GeoRestore *ServerPropertiesForGeoRestore_ARM `json:"geoRestore,omitempty"`

	// PointInTimeRestore: Mutually exclusive with all other properties
	PointInTimeRestore *ServerPropertiesForRestore_ARM `json:"pointInTimeRestore,omitempty"`

	// Replica: Mutually exclusive with all other properties
	Replica *ServerPropertiesForReplica_ARM `json:"replica,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because ServerPropertiesForCreate_ARM represents a discriminated union (JSON OneOf)
func (create ServerPropertiesForCreate_ARM) MarshalJSON() ([]byte, error) {
	if create.Default != nil {
		return json.Marshal(create.Default)
	}
	if create.GeoRestore != nil {
		return json.Marshal(create.GeoRestore)
	}
	if create.PointInTimeRestore != nil {
		return json.Marshal(create.PointInTimeRestore)
	}
	if create.Replica != nil {
		return json.Marshal(create.Replica)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the ServerPropertiesForCreate_ARM
func (create *ServerPropertiesForCreate_ARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["createMode"]
	if discriminator == "Default" {
		create.Default = &ServerPropertiesForDefaultCreate_ARM{}
		return json.Unmarshal(data, create.Default)
	}
	if discriminator == "GeoRestore" {
		create.GeoRestore = &ServerPropertiesForGeoRestore_ARM{}
		return json.Unmarshal(data, create.GeoRestore)
	}
	if discriminator == "PointInTimeRestore" {
		create.PointInTimeRestore = &ServerPropertiesForRestore_ARM{}
		return json.Unmarshal(data, create.PointInTimeRestore)
	}
	if discriminator == "Replica" {
		create.Replica = &ServerPropertiesForReplica_ARM{}
		return json.Unmarshal(data, create.Replica)
	}

	// No error
	return nil
}

// Billing information related properties of a server.
type Sku_ARM struct {
	// Capacity: The scale up/out capacity, representing server's compute units.
	Capacity *int `json:"capacity,omitempty"`

	// Family: The family of hardware.
	Family *string `json:"family,omitempty"`

	// Name: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name *string `json:"name,omitempty"`

	// Size: The size code, to be interpreted by resource as appropriate.
	Size *string `json:"size,omitempty"`

	// Tier: The tier of the particular SKU, e.g. Basic.
	Tier *Sku_Tier_ARM `json:"tier,omitempty"`
}

type ServerPropertiesForDefaultCreate_ARM struct {
	// AdministratorLogin: The administrator's login name of a server. Can only be specified when the server is being created
	// (and is required for creation).
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	// AdministratorLoginPassword: The password of the administrator login.
	AdministratorLoginPassword *string `json:"administratorLoginPassword,omitempty"`

	// CreateMode: The mode to create a new server.
	CreateMode ServerPropertiesForDefaultCreate_CreateMode_ARM `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion_ARM `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess_ARM `json:"publicNetworkAccess,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement_ARM `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfile_ARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion_ARM `json:"version,omitempty"`
}

type ServerPropertiesForGeoRestore_ARM struct {
	// CreateMode: The mode to create a new server.
	CreateMode ServerPropertiesForGeoRestore_CreateMode_ARM `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion_ARM `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess_ARM `json:"publicNetworkAccess,omitempty"`

	// SourceServerId: The source server id to restore from.
	SourceServerId *string `json:"sourceServerId,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement_ARM `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfile_ARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion_ARM `json:"version,omitempty"`
}

type ServerPropertiesForReplica_ARM struct {
	// CreateMode: The mode to create a new server.
	CreateMode ServerPropertiesForReplica_CreateMode_ARM `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion_ARM `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess_ARM `json:"publicNetworkAccess,omitempty"`

	// SourceServerId: The master server id to create replica from.
	SourceServerId *string `json:"sourceServerId,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement_ARM `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfile_ARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion_ARM `json:"version,omitempty"`
}

type ServerPropertiesForRestore_ARM struct {
	// CreateMode: The mode to create a new server.
	CreateMode ServerPropertiesForRestore_CreateMode_ARM `json:"createMode,omitempty"`

	// MinimalTlsVersion: Enforce a minimal Tls version for the server.
	MinimalTlsVersion *MinimalTlsVersion_ARM `json:"minimalTlsVersion,omitempty"`

	// PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed
	// in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *PublicNetworkAccess_ARM `json:"publicNetworkAccess,omitempty"`

	// RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	// SourceServerId: The source server id to restore from.
	SourceServerId *string `json:"sourceServerId,omitempty"`

	// SslEnforcement: Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcement_ARM `json:"sslEnforcement,omitempty"`

	// StorageProfile: Storage profile of a server.
	StorageProfile *StorageProfile_ARM `json:"storageProfile,omitempty"`

	// Version: Server version.
	Version *ServerVersion_ARM `json:"version,omitempty"`
}

// +kubebuilder:validation:Enum={"Basic","GeneralPurpose","MemoryOptimized"}
type Sku_Tier_ARM string

const (
	Sku_Tier_ARM_Basic           = Sku_Tier_ARM("Basic")
	Sku_Tier_ARM_GeneralPurpose  = Sku_Tier_ARM("GeneralPurpose")
	Sku_Tier_ARM_MemoryOptimized = Sku_Tier_ARM("MemoryOptimized")
)

// Mapping from string to Sku_Tier_ARM
var sku_Tier_ARM_Values = map[string]Sku_Tier_ARM{
	"basic":           Sku_Tier_ARM_Basic,
	"generalpurpose":  Sku_Tier_ARM_GeneralPurpose,
	"memoryoptimized": Sku_Tier_ARM_MemoryOptimized,
}

// Enforce a minimal Tls version for the server.
// +kubebuilder:validation:Enum={"TLS1_0","TLS1_1","TLS1_2","TLSEnforcementDisabled"}
type MinimalTlsVersion_ARM string

const (
	MinimalTlsVersion_ARM_TLS1_0                 = MinimalTlsVersion_ARM("TLS1_0")
	MinimalTlsVersion_ARM_TLS1_1                 = MinimalTlsVersion_ARM("TLS1_1")
	MinimalTlsVersion_ARM_TLS1_2                 = MinimalTlsVersion_ARM("TLS1_2")
	MinimalTlsVersion_ARM_TLSEnforcementDisabled = MinimalTlsVersion_ARM("TLSEnforcementDisabled")
)

// Mapping from string to MinimalTlsVersion_ARM
var minimalTlsVersion_ARM_Values = map[string]MinimalTlsVersion_ARM{
	"tls1_0":                 MinimalTlsVersion_ARM_TLS1_0,
	"tls1_1":                 MinimalTlsVersion_ARM_TLS1_1,
	"tls1_2":                 MinimalTlsVersion_ARM_TLS1_2,
	"tlsenforcementdisabled": MinimalTlsVersion_ARM_TLSEnforcementDisabled,
}

// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled'
// or 'Disabled'
// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type PublicNetworkAccess_ARM string

const (
	PublicNetworkAccess_ARM_Disabled = PublicNetworkAccess_ARM("Disabled")
	PublicNetworkAccess_ARM_Enabled  = PublicNetworkAccess_ARM("Enabled")
)

// Mapping from string to PublicNetworkAccess_ARM
var publicNetworkAccess_ARM_Values = map[string]PublicNetworkAccess_ARM{
	"disabled": PublicNetworkAccess_ARM_Disabled,
	"enabled":  PublicNetworkAccess_ARM_Enabled,
}

// +kubebuilder:validation:Enum={"Default"}
type ServerPropertiesForDefaultCreate_CreateMode_ARM string

const ServerPropertiesForDefaultCreate_CreateMode_ARM_Default = ServerPropertiesForDefaultCreate_CreateMode_ARM("Default")

// Mapping from string to ServerPropertiesForDefaultCreate_CreateMode_ARM
var serverPropertiesForDefaultCreate_CreateMode_ARM_Values = map[string]ServerPropertiesForDefaultCreate_CreateMode_ARM{
	"default": ServerPropertiesForDefaultCreate_CreateMode_ARM_Default,
}

// +kubebuilder:validation:Enum={"GeoRestore"}
type ServerPropertiesForGeoRestore_CreateMode_ARM string

const ServerPropertiesForGeoRestore_CreateMode_ARM_GeoRestore = ServerPropertiesForGeoRestore_CreateMode_ARM("GeoRestore")

// Mapping from string to ServerPropertiesForGeoRestore_CreateMode_ARM
var serverPropertiesForGeoRestore_CreateMode_ARM_Values = map[string]ServerPropertiesForGeoRestore_CreateMode_ARM{
	"georestore": ServerPropertiesForGeoRestore_CreateMode_ARM_GeoRestore,
}

// +kubebuilder:validation:Enum={"Replica"}
type ServerPropertiesForReplica_CreateMode_ARM string

const ServerPropertiesForReplica_CreateMode_ARM_Replica = ServerPropertiesForReplica_CreateMode_ARM("Replica")

// Mapping from string to ServerPropertiesForReplica_CreateMode_ARM
var serverPropertiesForReplica_CreateMode_ARM_Values = map[string]ServerPropertiesForReplica_CreateMode_ARM{
	"replica": ServerPropertiesForReplica_CreateMode_ARM_Replica,
}

// +kubebuilder:validation:Enum={"PointInTimeRestore"}
type ServerPropertiesForRestore_CreateMode_ARM string

const ServerPropertiesForRestore_CreateMode_ARM_PointInTimeRestore = ServerPropertiesForRestore_CreateMode_ARM("PointInTimeRestore")

// Mapping from string to ServerPropertiesForRestore_CreateMode_ARM
var serverPropertiesForRestore_CreateMode_ARM_Values = map[string]ServerPropertiesForRestore_CreateMode_ARM{
	"pointintimerestore": ServerPropertiesForRestore_CreateMode_ARM_PointInTimeRestore,
}

// The version of a server.
// +kubebuilder:validation:Enum={"10.2","10.3"}
type ServerVersion_ARM string

const (
	ServerVersion_ARM_102 = ServerVersion_ARM("10.2")
	ServerVersion_ARM_103 = ServerVersion_ARM("10.3")
)

// Mapping from string to ServerVersion_ARM
var serverVersion_ARM_Values = map[string]ServerVersion_ARM{
	"10.2": ServerVersion_ARM_102,
	"10.3": ServerVersion_ARM_103,
}

// Enable ssl enforcement or not when connect to server.
// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type SslEnforcement_ARM string

const (
	SslEnforcement_ARM_Disabled = SslEnforcement_ARM("Disabled")
	SslEnforcement_ARM_Enabled  = SslEnforcement_ARM("Enabled")
)

// Mapping from string to SslEnforcement_ARM
var sslEnforcement_ARM_Values = map[string]SslEnforcement_ARM{
	"disabled": SslEnforcement_ARM_Disabled,
	"enabled":  SslEnforcement_ARM_Enabled,
}

// Storage Profile properties of a server
type StorageProfile_ARM struct {
	// BackupRetentionDays: Backup retention days for the server.
	BackupRetentionDays *int `json:"backupRetentionDays,omitempty"`

	// GeoRedundantBackup: Enable Geo-redundant or not for server backup.
	GeoRedundantBackup *StorageProfile_GeoRedundantBackup_ARM `json:"geoRedundantBackup,omitempty"`

	// StorageAutogrow: Enable Storage Auto Grow.
	StorageAutogrow *StorageProfile_StorageAutogrow_ARM `json:"storageAutogrow,omitempty"`

	// StorageMB: Max storage allowed for a server.
	StorageMB *int `json:"storageMB,omitempty"`
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type StorageProfile_GeoRedundantBackup_ARM string

const (
	StorageProfile_GeoRedundantBackup_ARM_Disabled = StorageProfile_GeoRedundantBackup_ARM("Disabled")
	StorageProfile_GeoRedundantBackup_ARM_Enabled  = StorageProfile_GeoRedundantBackup_ARM("Enabled")
)

// Mapping from string to StorageProfile_GeoRedundantBackup_ARM
var storageProfile_GeoRedundantBackup_ARM_Values = map[string]StorageProfile_GeoRedundantBackup_ARM{
	"disabled": StorageProfile_GeoRedundantBackup_ARM_Disabled,
	"enabled":  StorageProfile_GeoRedundantBackup_ARM_Enabled,
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type StorageProfile_StorageAutogrow_ARM string

const (
	StorageProfile_StorageAutogrow_ARM_Disabled = StorageProfile_StorageAutogrow_ARM("Disabled")
	StorageProfile_StorageAutogrow_ARM_Enabled  = StorageProfile_StorageAutogrow_ARM("Enabled")
)

// Mapping from string to StorageProfile_StorageAutogrow_ARM
var storageProfile_StorageAutogrow_ARM_Values = map[string]StorageProfile_StorageAutogrow_ARM{
	"disabled": StorageProfile_StorageAutogrow_ARM_Disabled,
	"enabled":  StorageProfile_StorageAutogrow_ARM_Enabled,
}
