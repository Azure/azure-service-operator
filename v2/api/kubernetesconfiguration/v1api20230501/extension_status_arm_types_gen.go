// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20230501

import "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"

// The Extension object.
type Extension_STATUS_ARM struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Identity: Identity of the Extension resource
	Identity *Identity_STATUS_ARM `json:"identity,omitempty"`

	// Name: The name of the resource
	Name *string `json:"name,omitempty"`

	// Plan: The plan information.
	Plan *Plan_STATUS_ARM `json:"plan,omitempty"`

	// Properties: Properties of an Extension resource
	Properties *Extension_Properties_STATUS_ARM `json:"properties,omitempty"`

	// SystemData: Top level metadata
	// https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData *SystemData_STATUS_ARM `json:"systemData,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

type Extension_Properties_STATUS_ARM struct {
	// AksAssignedIdentity: Identity of the Extension resource in an AKS cluster
	AksAssignedIdentity *Extension_Properties_AksAssignedIdentity_STATUS_ARM `json:"aksAssignedIdentity,omitempty"`

	// AutoUpgradeMinorVersion: Flag to note if this extension participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion *bool `json:"autoUpgradeMinorVersion,omitempty"`

	// ConfigurationProtectedSettings: Configuration settings that are sensitive, as name-value pairs for configuring this
	// extension.
	ConfigurationProtectedSettings map[string]string `json:"configurationProtectedSettings,omitempty"`

	// ConfigurationSettings: Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings map[string]string `json:"configurationSettings,omitempty"`

	// CurrentVersion: Currently installed version of the extension.
	CurrentVersion *string `json:"currentVersion,omitempty"`

	// CustomLocationSettings: Custom Location settings properties.
	CustomLocationSettings map[string]string `json:"customLocationSettings,omitempty"`

	// ErrorInfo: Error information from the Agent - e.g. errors during installation.
	ErrorInfo *ErrorDetail_STATUS_ARM `json:"errorInfo,omitempty"`

	// ExtensionType: Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types
	// registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType *string `json:"extensionType,omitempty"`

	// IsSystemExtension: Flag to note if this extension is a system extension
	IsSystemExtension *bool `json:"isSystemExtension,omitempty"`

	// PackageUri: Uri of the Helm package
	PackageUri *string `json:"packageUri,omitempty"`

	// ProvisioningState: Status of installation of this extension.
	ProvisioningState *ProvisioningStateDefinition_STATUS_ARM `json:"provisioningState,omitempty"`

	// ReleaseTrain: ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if
	// autoUpgradeMinorVersion is 'true'.
	ReleaseTrain *string `json:"releaseTrain,omitempty"`

	// Scope: Scope at which the extension is installed.
	Scope *Scope_STATUS_ARM `json:"scope,omitempty"`

	// Statuses: Status from this extension.
	Statuses []ExtensionStatus_STATUS_ARM `json:"statuses,omitempty"`

	// Version: User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion
	// must be 'false'.
	Version *string `json:"version,omitempty"`
}

// Identity for the resource.
type Identity_STATUS_ARM struct {
	// PrincipalId: The principal ID of resource identity.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: The tenant ID of resource.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: The identity type.
	Type *Identity_Type_STATUS_ARM `json:"type,omitempty"`
}

// Plan for the resource.
type Plan_STATUS_ARM struct {
	// Name: A user defined name of the 3rd Party Artifact that is being procured.
	Name *string `json:"name,omitempty"`

	// Product: The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the
	// artifact at the time of Data Market onboarding.
	Product *string `json:"product,omitempty"`

	// PromotionCode: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `json:"promotionCode,omitempty"`

	// Publisher: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher *string `json:"publisher,omitempty"`

	// Version: The version of the desired product/artifact.
	Version *string `json:"version,omitempty"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS_ARM struct {
	// CreatedAt: The timestamp of resource creation (UTC).
	CreatedAt *string `json:"createdAt,omitempty"`

	// CreatedBy: The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedByType: The type of identity that created the resource.
	CreatedByType *SystemData_CreatedByType_STATUS_ARM `json:"createdByType,omitempty"`

	// LastModifiedAt: The timestamp of resource last modification (UTC)
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`

	// LastModifiedBy: The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// LastModifiedByType: The type of identity that last modified the resource.
	LastModifiedByType *SystemData_LastModifiedByType_STATUS_ARM `json:"lastModifiedByType,omitempty"`
}

// The error detail.
type ErrorDetail_STATUS_ARM struct {
	// AdditionalInfo: The error additional info.
	AdditionalInfo []ErrorAdditionalInfo_STATUS_ARM `json:"additionalInfo,omitempty"`

	// Code: The error code.
	Code *string `json:"code,omitempty"`

	// Details: The error details.
	Details []ErrorDetail_STATUS_Unrolled_ARM `json:"details,omitempty"`

	// Message: The error message.
	Message *string `json:"message,omitempty"`

	// Target: The error target.
	Target *string `json:"target,omitempty"`
}

type Extension_Properties_AksAssignedIdentity_STATUS_ARM struct {
	// PrincipalId: The principal ID of resource identity.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: The tenant ID of resource.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: The identity type.
	Type *Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM `json:"type,omitempty"`
}

// Status from the extension.
type ExtensionStatus_STATUS_ARM struct {
	// Code: Status code provided by the Extension
	Code *string `json:"code,omitempty"`

	// DisplayStatus: Short description of status of the extension.
	DisplayStatus *string `json:"displayStatus,omitempty"`

	// Level: Level of the status.
	Level *ExtensionStatus_Level_STATUS_ARM `json:"level,omitempty"`

	// Message: Detailed message of the status from the Extension.
	Message *string `json:"message,omitempty"`

	// Time: DateLiteral (per ISO8601) noting the time of installation status.
	Time *string `json:"time,omitempty"`
}

type Identity_Type_STATUS_ARM string

const Identity_Type_STATUS_ARM_SystemAssigned = Identity_Type_STATUS_ARM("SystemAssigned")

// Mapping from string to Identity_Type_STATUS_ARM
var identity_Type_STATUS_ARM_Values = map[string]Identity_Type_STATUS_ARM{
	"systemassigned": Identity_Type_STATUS_ARM_SystemAssigned,
}

// The provisioning state of the resource.
type ProvisioningStateDefinition_STATUS_ARM string

const (
	ProvisioningStateDefinition_STATUS_ARM_Canceled  = ProvisioningStateDefinition_STATUS_ARM("Canceled")
	ProvisioningStateDefinition_STATUS_ARM_Creating  = ProvisioningStateDefinition_STATUS_ARM("Creating")
	ProvisioningStateDefinition_STATUS_ARM_Deleting  = ProvisioningStateDefinition_STATUS_ARM("Deleting")
	ProvisioningStateDefinition_STATUS_ARM_Failed    = ProvisioningStateDefinition_STATUS_ARM("Failed")
	ProvisioningStateDefinition_STATUS_ARM_Succeeded = ProvisioningStateDefinition_STATUS_ARM("Succeeded")
	ProvisioningStateDefinition_STATUS_ARM_Updating  = ProvisioningStateDefinition_STATUS_ARM("Updating")
)

// Mapping from string to ProvisioningStateDefinition_STATUS_ARM
var provisioningStateDefinition_STATUS_ARM_Values = map[string]ProvisioningStateDefinition_STATUS_ARM{
	"canceled":  ProvisioningStateDefinition_STATUS_ARM_Canceled,
	"creating":  ProvisioningStateDefinition_STATUS_ARM_Creating,
	"deleting":  ProvisioningStateDefinition_STATUS_ARM_Deleting,
	"failed":    ProvisioningStateDefinition_STATUS_ARM_Failed,
	"succeeded": ProvisioningStateDefinition_STATUS_ARM_Succeeded,
	"updating":  ProvisioningStateDefinition_STATUS_ARM_Updating,
}

// Scope of the extension. It can be either Cluster or Namespace; but not both.
type Scope_STATUS_ARM struct {
	// Cluster: Specifies that the scope of the extension is Cluster
	Cluster *ScopeCluster_STATUS_ARM `json:"cluster,omitempty"`

	// Namespace: Specifies that the scope of the extension is Namespace
	Namespace *ScopeNamespace_STATUS_ARM `json:"namespace,omitempty"`
}

type SystemData_CreatedByType_STATUS_ARM string

const (
	SystemData_CreatedByType_STATUS_ARM_Application     = SystemData_CreatedByType_STATUS_ARM("Application")
	SystemData_CreatedByType_STATUS_ARM_Key             = SystemData_CreatedByType_STATUS_ARM("Key")
	SystemData_CreatedByType_STATUS_ARM_ManagedIdentity = SystemData_CreatedByType_STATUS_ARM("ManagedIdentity")
	SystemData_CreatedByType_STATUS_ARM_User            = SystemData_CreatedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_CreatedByType_STATUS_ARM
var systemData_CreatedByType_STATUS_ARM_Values = map[string]SystemData_CreatedByType_STATUS_ARM{
	"application":     SystemData_CreatedByType_STATUS_ARM_Application,
	"key":             SystemData_CreatedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_CreatedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_CreatedByType_STATUS_ARM_User,
}

type SystemData_LastModifiedByType_STATUS_ARM string

const (
	SystemData_LastModifiedByType_STATUS_ARM_Application     = SystemData_LastModifiedByType_STATUS_ARM("Application")
	SystemData_LastModifiedByType_STATUS_ARM_Key             = SystemData_LastModifiedByType_STATUS_ARM("Key")
	SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity = SystemData_LastModifiedByType_STATUS_ARM("ManagedIdentity")
	SystemData_LastModifiedByType_STATUS_ARM_User            = SystemData_LastModifiedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_LastModifiedByType_STATUS_ARM
var systemData_LastModifiedByType_STATUS_ARM_Values = map[string]SystemData_LastModifiedByType_STATUS_ARM{
	"application":     SystemData_LastModifiedByType_STATUS_ARM_Application,
	"key":             SystemData_LastModifiedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_LastModifiedByType_STATUS_ARM_User,
}

// The resource management error additional info.
type ErrorAdditionalInfo_STATUS_ARM struct {
	// Info: The additional info.
	Info map[string]v1.JSON `json:"info,omitempty"`

	// Type: The additional info type.
	Type *string `json:"type,omitempty"`
}

type ErrorDetail_STATUS_Unrolled_ARM struct {
	// AdditionalInfo: The error additional info.
	AdditionalInfo []ErrorAdditionalInfo_STATUS_ARM `json:"additionalInfo,omitempty"`

	// Code: The error code.
	Code *string `json:"code,omitempty"`

	// Message: The error message.
	Message *string `json:"message,omitempty"`

	// Target: The error target.
	Target *string `json:"target,omitempty"`
}

type Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM string

const (
	Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM_SystemAssigned = Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM("SystemAssigned")
	Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM_UserAssigned   = Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM("UserAssigned")
)

// Mapping from string to Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM
var extension_Properties_AksAssignedIdentity_Type_STATUS_ARM_Values = map[string]Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM{
	"systemassigned": Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM_SystemAssigned,
	"userassigned":   Extension_Properties_AksAssignedIdentity_Type_STATUS_ARM_UserAssigned,
}

type ExtensionStatus_Level_STATUS_ARM string

const (
	ExtensionStatus_Level_STATUS_ARM_Error       = ExtensionStatus_Level_STATUS_ARM("Error")
	ExtensionStatus_Level_STATUS_ARM_Information = ExtensionStatus_Level_STATUS_ARM("Information")
	ExtensionStatus_Level_STATUS_ARM_Warning     = ExtensionStatus_Level_STATUS_ARM("Warning")
)

// Mapping from string to ExtensionStatus_Level_STATUS_ARM
var extensionStatus_Level_STATUS_ARM_Values = map[string]ExtensionStatus_Level_STATUS_ARM{
	"error":       ExtensionStatus_Level_STATUS_ARM_Error,
	"information": ExtensionStatus_Level_STATUS_ARM_Information,
	"warning":     ExtensionStatus_Level_STATUS_ARM_Warning,
}

// Specifies that the scope of the extension is Cluster
type ScopeCluster_STATUS_ARM struct {
	// ReleaseNamespace: Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this
	// namespace does not exist, it will be created
	ReleaseNamespace *string `json:"releaseNamespace,omitempty"`
}

// Specifies that the scope of the extension is Namespace
type ScopeNamespace_STATUS_ARM struct {
	// TargetNamespace: Namespace where the extension will be created for an Namespace scoped extension.  If this namespace
	// does not exist, it will be created
	TargetNamespace *string `json:"targetNamespace,omitempty"`
}
