// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210101preview

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

//Deprecated version of Namespaces_Spec. Use v1beta20210101preview.Namespaces_Spec instead
type Namespaces_SpecARM struct {
	Identity   *IdentityARM                   `json:"identity,omitempty"`
	Location   *string                        `json:"location,omitempty"`
	Name       string                         `json:"name,omitempty"`
	Properties *Namespaces_Spec_PropertiesARM `json:"properties,omitempty"`
	Sku        *SBSkuARM                      `json:"sku,omitempty"`
	Tags       map[string]string              `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Namespaces_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-01-01-preview"
func (namespaces Namespaces_SpecARM) GetAPIVersion() string {
	return "2021-01-01-preview"
}

// GetName returns the Name of the resource
func (namespaces Namespaces_SpecARM) GetName() string {
	return namespaces.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.ServiceBus/namespaces"
func (namespaces Namespaces_SpecARM) GetType() string {
	return "Microsoft.ServiceBus/namespaces"
}

//Deprecated version of Identity. Use v1beta20210101preview.Identity instead
type IdentityARM struct {
	Type *IdentityType `json:"type,omitempty"`
}

//Deprecated version of Namespaces_Spec_Properties. Use v1beta20210101preview.Namespaces_Spec_Properties instead
type Namespaces_Spec_PropertiesARM struct {
	Encryption    *EncryptionARM `json:"encryption,omitempty"`
	ZoneRedundant *bool          `json:"zoneRedundant,omitempty"`
}

//Deprecated version of SBSku. Use v1beta20210101preview.SBSku instead
type SBSkuARM struct {
	Capacity *int       `json:"capacity,omitempty"`
	Name     *SBSkuName `json:"name,omitempty"`
	Tier     *SBSkuTier `json:"tier,omitempty"`
}

//Deprecated version of Encryption. Use v1beta20210101preview.Encryption instead
type EncryptionARM struct {
	KeySource                       *EncryptionKeySource    `json:"keySource,omitempty"`
	KeyVaultProperties              []KeyVaultPropertiesARM `json:"keyVaultProperties,omitempty"`
	RequireInfrastructureEncryption *bool                   `json:"requireInfrastructureEncryption,omitempty"`
}

//Deprecated version of IdentityType. Use v1beta20210101preview.IdentityType instead
// +kubebuilder:validation:Enum={"None","SystemAssigned","SystemAssigned, UserAssigned","UserAssigned"}
type IdentityType string

const (
	IdentityTypeNone                       = IdentityType("None")
	IdentityTypeSystemAssigned             = IdentityType("SystemAssigned")
	IdentityTypeSystemAssignedUserAssigned = IdentityType("SystemAssigned, UserAssigned")
	IdentityTypeUserAssigned               = IdentityType("UserAssigned")
)

//Deprecated version of SBSkuName. Use v1beta20210101preview.SBSkuName instead
// +kubebuilder:validation:Enum={"Basic","Premium","Standard"}
type SBSkuName string

const (
	SBSkuNameBasic    = SBSkuName("Basic")
	SBSkuNamePremium  = SBSkuName("Premium")
	SBSkuNameStandard = SBSkuName("Standard")
)

//Deprecated version of SBSkuTier. Use v1beta20210101preview.SBSkuTier instead
// +kubebuilder:validation:Enum={"Basic","Premium","Standard"}
type SBSkuTier string

const (
	SBSkuTierBasic    = SBSkuTier("Basic")
	SBSkuTierPremium  = SBSkuTier("Premium")
	SBSkuTierStandard = SBSkuTier("Standard")
)

//Deprecated version of KeyVaultProperties. Use v1beta20210101preview.KeyVaultProperties instead
type KeyVaultPropertiesARM struct {
	Identity    *UserAssignedIdentityPropertiesARM `json:"identity,omitempty"`
	KeyName     *string                            `json:"keyName,omitempty"`
	KeyVaultUri *string                            `json:"keyVaultUri,omitempty"`
	KeyVersion  *string                            `json:"keyVersion,omitempty"`
}

//Deprecated version of UserAssignedIdentityProperties. Use v1beta20210101preview.UserAssignedIdentityProperties instead
type UserAssignedIdentityPropertiesARM struct {
	UserAssignedIdentity *string `json:"userAssignedIdentity,omitempty"`
}
