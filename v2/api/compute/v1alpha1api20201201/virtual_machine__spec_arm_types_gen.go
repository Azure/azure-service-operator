// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201201

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of VirtualMachine_Spec. Use v1beta20201201.VirtualMachine_Spec instead
type VirtualMachine_SpecARM struct {
	AzureName        string                       `json:"azureName,omitempty"`
	ExtendedLocation *ExtendedLocationARM         `json:"extendedLocation,omitempty"`
	Id               *string                      `json:"id,omitempty"`
	Identity         *VirtualMachineIdentityARM   `json:"identity,omitempty"`
	Location         *string                      `json:"location,omitempty"`
	Name             string                       `json:"name,omitempty"`
	Plan             *PlanARM                     `json:"plan,omitempty"`
	Properties       *VirtualMachinePropertiesARM `json:"properties,omitempty"`
	Tags             map[string]string            `json:"tags,omitempty"`
	Type             *string                      `json:"type,omitempty"`
	Zones            []string                     `json:"zones,omitempty"`
}

var _ genruntime.ARMResourceSpec = &VirtualMachine_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-12-01"
func (machine VirtualMachine_SpecARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (machine *VirtualMachine_SpecARM) GetName() string {
	return machine.Name
}

// GetType returns the ARM Type of the resource. This is always ""
func (machine *VirtualMachine_SpecARM) GetType() string {
	return ""
}

// Deprecated version of VirtualMachineIdentity. Use v1beta20201201.VirtualMachineIdentity instead
type VirtualMachineIdentityARM struct {
	PrincipalId            *string                                                     `json:"principalId,omitempty"`
	TenantId               *string                                                     `json:"tenantId,omitempty"`
	Type                   *VirtualMachineIdentity_Type                                `json:"type,omitempty"`
	UserAssignedIdentities map[string]VirtualMachineIdentity_UserAssignedIdentitiesARM `json:"userAssignedIdentities,omitempty"`
}

// Deprecated version of VirtualMachineProperties. Use v1beta20201201.VirtualMachineProperties instead
type VirtualMachinePropertiesARM struct {
	AdditionalCapabilities  *AdditionalCapabilitiesARM     `json:"additionalCapabilities,omitempty"`
	AvailabilitySet         *SubResourceARM                `json:"availabilitySet,omitempty"`
	BillingProfile          *BillingProfileARM             `json:"billingProfile,omitempty"`
	DiagnosticsProfile      *DiagnosticsProfileARM         `json:"diagnosticsProfile,omitempty"`
	EvictionPolicy          *EvictionPolicy                `json:"evictionPolicy,omitempty"`
	ExtensionsTimeBudget    *string                        `json:"extensionsTimeBudget,omitempty"`
	HardwareProfile         *HardwareProfileARM            `json:"hardwareProfile,omitempty"`
	Host                    *SubResourceARM                `json:"host,omitempty"`
	HostGroup               *SubResourceARM                `json:"hostGroup,omitempty"`
	InstanceView            *VirtualMachineInstanceViewARM `json:"instanceView,omitempty"`
	LicenseType             *string                        `json:"licenseType,omitempty"`
	NetworkProfile          *NetworkProfileARM             `json:"networkProfile,omitempty"`
	OsProfile               *OSProfileARM                  `json:"osProfile,omitempty"`
	PlatformFaultDomain     *int                           `json:"platformFaultDomain,omitempty"`
	Priority                *Priority                      `json:"priority,omitempty"`
	ProvisioningState       *string                        `json:"provisioningState,omitempty"`
	ProximityPlacementGroup *SubResourceARM                `json:"proximityPlacementGroup,omitempty"`
	SecurityProfile         *SecurityProfileARM            `json:"securityProfile,omitempty"`
	StorageProfile          *StorageProfileARM             `json:"storageProfile,omitempty"`
	VirtualMachineScaleSet  *SubResourceARM                `json:"virtualMachineScaleSet,omitempty"`
	VmId                    *string                        `json:"vmId,omitempty"`
}

// Deprecated version of BillingProfile. Use v1beta20201201.BillingProfile instead
type BillingProfileARM struct {
	MaxPrice *float64 `json:"maxPrice,omitempty"`
}

// Deprecated version of DiagnosticsProfile. Use v1beta20201201.DiagnosticsProfile instead
type DiagnosticsProfileARM struct {
	BootDiagnostics *BootDiagnosticsARM `json:"bootDiagnostics,omitempty"`
}

// Deprecated version of HardwareProfile. Use v1beta20201201.HardwareProfile instead
type HardwareProfileARM struct {
	VmSize *HardwareProfile_VmSize `json:"vmSize,omitempty"`
}

// Deprecated version of NetworkProfile. Use v1beta20201201.NetworkProfile instead
type NetworkProfileARM struct {
	NetworkInterfaces []NetworkInterfaceReferenceARM `json:"networkInterfaces,omitempty"`
}

// Deprecated version of OSProfile. Use v1beta20201201.OSProfile instead
type OSProfileARM struct {
	AdminPassword               *string                  `json:"adminPassword,omitempty"`
	AdminUsername               *string                  `json:"adminUsername,omitempty"`
	AllowExtensionOperations    *bool                    `json:"allowExtensionOperations,omitempty"`
	ComputerName                *string                  `json:"computerName,omitempty"`
	CustomData                  *string                  `json:"customData,omitempty"`
	LinuxConfiguration          *LinuxConfigurationARM   `json:"linuxConfiguration,omitempty"`
	RequireGuestProvisionSignal *bool                    `json:"requireGuestProvisionSignal,omitempty"`
	Secrets                     []VaultSecretGroupARM    `json:"secrets,omitempty"`
	WindowsConfiguration        *WindowsConfigurationARM `json:"windowsConfiguration,omitempty"`
}

// Deprecated version of SecurityProfile. Use v1beta20201201.SecurityProfile instead
type SecurityProfileARM struct {
	EncryptionAtHost *bool                         `json:"encryptionAtHost,omitempty"`
	SecurityType     *SecurityProfile_SecurityType `json:"securityType,omitempty"`
	UefiSettings     *UefiSettingsARM              `json:"uefiSettings,omitempty"`
}

// Deprecated version of StorageProfile. Use v1beta20201201.StorageProfile instead
type StorageProfileARM struct {
	DataDisks      []DataDiskARM      `json:"dataDisks,omitempty"`
	ImageReference *ImageReferenceARM `json:"imageReference,omitempty"`
	OsDisk         *OSDiskARM         `json:"osDisk,omitempty"`
}

// Deprecated version of VirtualMachineIdentity_Type. Use v1beta20201201.VirtualMachineIdentity_Type instead
// +kubebuilder:validation:Enum={"None","SystemAssigned","SystemAssigned, UserAssigned","UserAssigned"}
type VirtualMachineIdentity_Type string

const (
	VirtualMachineIdentity_Type_None                       = VirtualMachineIdentity_Type("None")
	VirtualMachineIdentity_Type_SystemAssigned             = VirtualMachineIdentity_Type("SystemAssigned")
	VirtualMachineIdentity_Type_SystemAssignedUserAssigned = VirtualMachineIdentity_Type("SystemAssigned, UserAssigned")
	VirtualMachineIdentity_Type_UserAssigned               = VirtualMachineIdentity_Type("UserAssigned")
)

// Deprecated version of VirtualMachineIdentity_UserAssignedIdentities. Use v1beta20201201.VirtualMachineIdentity_UserAssignedIdentities instead
type VirtualMachineIdentity_UserAssignedIdentitiesARM struct {
	ClientId    *string `json:"clientId,omitempty"`
	PrincipalId *string `json:"principalId,omitempty"`
}

// Deprecated version of VirtualMachineInstanceView. Use v1beta20201201.VirtualMachineInstanceView instead
type VirtualMachineInstanceViewARM struct {
	AssignedHost              *string                                      `json:"assignedHost,omitempty"`
	BootDiagnostics           *BootDiagnosticsInstanceViewARM              `json:"bootDiagnostics,omitempty"`
	ComputerName              *string                                      `json:"computerName,omitempty"`
	Disks                     []DiskInstanceViewARM                        `json:"disks,omitempty"`
	Extensions                []VirtualMachineExtensionInstanceViewARM     `json:"extensions,omitempty"`
	HyperVGeneration          *VirtualMachineInstanceView_HyperVGeneration `json:"hyperVGeneration,omitempty"`
	MaintenanceRedeployStatus *MaintenanceRedeployStatusARM                `json:"maintenanceRedeployStatus,omitempty"`
	OsName                    *string                                      `json:"osName,omitempty"`
	OsVersion                 *string                                      `json:"osVersion,omitempty"`
	PatchStatus               *VirtualMachinePatchStatusARM                `json:"patchStatus,omitempty"`
	PlatformFaultDomain       *int                                         `json:"platformFaultDomain,omitempty"`
	PlatformUpdateDomain      *int                                         `json:"platformUpdateDomain,omitempty"`
	RdpThumbPrint             *string                                      `json:"rdpThumbPrint,omitempty"`
	Statuses                  []InstanceViewStatusARM                      `json:"statuses,omitempty"`
	VmAgent                   *VirtualMachineAgentInstanceViewARM          `json:"vmAgent,omitempty"`
	VmHealth                  *VirtualMachineHealthStatusARM               `json:"vmHealth,omitempty"`
}

// Deprecated version of BootDiagnostics. Use v1beta20201201.BootDiagnostics instead
type BootDiagnosticsARM struct {
	Enabled    *bool   `json:"enabled,omitempty"`
	StorageUri *string `json:"storageUri,omitempty"`
}

// Deprecated version of BootDiagnosticsInstanceView. Use v1beta20201201.BootDiagnosticsInstanceView instead
type BootDiagnosticsInstanceViewARM struct {
	ConsoleScreenshotBlobUri *string                `json:"consoleScreenshotBlobUri,omitempty"`
	SerialConsoleLogBlobUri  *string                `json:"serialConsoleLogBlobUri,omitempty"`
	Status                   *InstanceViewStatusARM `json:"status,omitempty"`
}

// Deprecated version of DataDisk. Use v1beta20201201.DataDisk instead
type DataDiskARM struct {
	Caching                 *Caching                  `json:"caching,omitempty"`
	CreateOption            *CreateOption             `json:"createOption,omitempty"`
	DetachOption            *DetachOption             `json:"detachOption,omitempty"`
	DiskIOPSReadWrite       *int                      `json:"diskIOPSReadWrite,omitempty"`
	DiskMBpsReadWrite       *int                      `json:"diskMBpsReadWrite,omitempty"`
	DiskSizeGB              *int                      `json:"diskSizeGB,omitempty"`
	Image                   *VirtualHardDiskARM       `json:"image,omitempty"`
	Lun                     *int                      `json:"lun,omitempty"`
	ManagedDisk             *ManagedDiskParametersARM `json:"managedDisk,omitempty"`
	Name                    *string                   `json:"name,omitempty"`
	ToBeDetached            *bool                     `json:"toBeDetached,omitempty"`
	Vhd                     *VirtualHardDiskARM       `json:"vhd,omitempty"`
	WriteAcceleratorEnabled *bool                     `json:"writeAcceleratorEnabled,omitempty"`
}

// Deprecated version of DiskInstanceView. Use v1beta20201201.DiskInstanceView instead
type DiskInstanceViewARM struct {
	EncryptionSettings []DiskEncryptionSettingsARM `json:"encryptionSettings,omitempty"`
	Name               *string                     `json:"name,omitempty"`
	Statuses           []InstanceViewStatusARM     `json:"statuses,omitempty"`
}

// Deprecated version of ImageReference. Use v1beta20201201.ImageReference instead
type ImageReferenceARM struct {
	ExactVersion *string `json:"exactVersion,omitempty"`
	Id           *string `json:"id,omitempty"`
	Offer        *string `json:"offer,omitempty"`
	Publisher    *string `json:"publisher,omitempty"`
	Sku          *string `json:"sku,omitempty"`
	Version      *string `json:"version,omitempty"`
}

// Deprecated version of InstanceViewStatus. Use v1beta20201201.InstanceViewStatus instead
type InstanceViewStatusARM struct {
	Code          *string                   `json:"code,omitempty"`
	DisplayStatus *string                   `json:"displayStatus,omitempty"`
	Level         *InstanceViewStatus_Level `json:"level,omitempty"`
	Message       *string                   `json:"message,omitempty"`
	Time          *string                   `json:"time,omitempty"`
}

// Deprecated version of LinuxConfiguration. Use v1beta20201201.LinuxConfiguration instead
type LinuxConfigurationARM struct {
	DisablePasswordAuthentication *bool                  `json:"disablePasswordAuthentication,omitempty"`
	PatchSettings                 *LinuxPatchSettingsARM `json:"patchSettings,omitempty"`
	ProvisionVMAgent              *bool                  `json:"provisionVMAgent,omitempty"`
	Ssh                           *SshConfigurationARM   `json:"ssh,omitempty"`
}

// Deprecated version of MaintenanceRedeployStatus. Use v1beta20201201.MaintenanceRedeployStatus instead
type MaintenanceRedeployStatusARM struct {
	IsCustomerInitiatedMaintenanceAllowed *bool                                              `json:"isCustomerInitiatedMaintenanceAllowed,omitempty"`
	LastOperationMessage                  *string                                            `json:"lastOperationMessage,omitempty"`
	LastOperationResultCode               *MaintenanceRedeployStatus_LastOperationResultCode `json:"lastOperationResultCode,omitempty"`
	MaintenanceWindowEndTime              *string                                            `json:"maintenanceWindowEndTime,omitempty"`
	MaintenanceWindowStartTime            *string                                            `json:"maintenanceWindowStartTime,omitempty"`
	PreMaintenanceWindowEndTime           *string                                            `json:"preMaintenanceWindowEndTime,omitempty"`
	PreMaintenanceWindowStartTime         *string                                            `json:"preMaintenanceWindowStartTime,omitempty"`
}

// Deprecated version of NetworkInterfaceReference. Use v1beta20201201.NetworkInterfaceReference instead
type NetworkInterfaceReferenceARM struct {
	Id         *string                                 `json:"id,omitempty"`
	Properties *NetworkInterfaceReferencePropertiesARM `json:"properties,omitempty"`
}

// Deprecated version of OSDisk. Use v1beta20201201.OSDisk instead
type OSDiskARM struct {
	Caching                 *Caching                   `json:"caching,omitempty"`
	CreateOption            *CreateOption              `json:"createOption,omitempty"`
	DiffDiskSettings        *DiffDiskSettingsARM       `json:"diffDiskSettings,omitempty"`
	DiskSizeGB              *int                       `json:"diskSizeGB,omitempty"`
	EncryptionSettings      *DiskEncryptionSettingsARM `json:"encryptionSettings,omitempty"`
	Image                   *VirtualHardDiskARM        `json:"image,omitempty"`
	ManagedDisk             *ManagedDiskParametersARM  `json:"managedDisk,omitempty"`
	Name                    *string                    `json:"name,omitempty"`
	OsType                  *OSDisk_OsType             `json:"osType,omitempty"`
	Vhd                     *VirtualHardDiskARM        `json:"vhd,omitempty"`
	WriteAcceleratorEnabled *bool                      `json:"writeAcceleratorEnabled,omitempty"`
}

// Deprecated version of UefiSettings. Use v1beta20201201.UefiSettings instead
type UefiSettingsARM struct {
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`
	VTpmEnabled       *bool `json:"vTpmEnabled,omitempty"`
}

// Deprecated version of VaultSecretGroup. Use v1beta20201201.VaultSecretGroup instead
type VaultSecretGroupARM struct {
	SourceVault       *SubResourceARM       `json:"sourceVault,omitempty"`
	VaultCertificates []VaultCertificateARM `json:"vaultCertificates,omitempty"`
}

// Deprecated version of VirtualMachineAgentInstanceView. Use v1beta20201201.VirtualMachineAgentInstanceView instead
type VirtualMachineAgentInstanceViewARM struct {
	ExtensionHandlers []VirtualMachineExtensionHandlerInstanceViewARM `json:"extensionHandlers,omitempty"`
	Statuses          []InstanceViewStatusARM                         `json:"statuses,omitempty"`
	VmAgentVersion    *string                                         `json:"vmAgentVersion,omitempty"`
}

// Deprecated version of VirtualMachineExtensionInstanceView. Use v1beta20201201.VirtualMachineExtensionInstanceView instead
type VirtualMachineExtensionInstanceViewARM struct {
	Name               *string                 `json:"name,omitempty"`
	Statuses           []InstanceViewStatusARM `json:"statuses,omitempty"`
	Substatuses        []InstanceViewStatusARM `json:"substatuses,omitempty"`
	Type               *string                 `json:"type,omitempty"`
	TypeHandlerVersion *string                 `json:"typeHandlerVersion,omitempty"`
}

// Deprecated version of VirtualMachineHealthStatus. Use v1beta20201201.VirtualMachineHealthStatus instead
type VirtualMachineHealthStatusARM struct {
	Status *InstanceViewStatusARM `json:"status,omitempty"`
}

// Deprecated version of VirtualMachinePatchStatus. Use v1beta20201201.VirtualMachinePatchStatus instead
type VirtualMachinePatchStatusARM struct {
	AvailablePatchSummary        *AvailablePatchSummaryARM        `json:"availablePatchSummary,omitempty"`
	ConfigurationStatuses        []InstanceViewStatusARM          `json:"configurationStatuses,omitempty"`
	LastPatchInstallationSummary *LastPatchInstallationSummaryARM `json:"lastPatchInstallationSummary,omitempty"`
}

// Deprecated version of WindowsConfiguration. Use v1beta20201201.WindowsConfiguration instead
type WindowsConfigurationARM struct {
	AdditionalUnattendContent []AdditionalUnattendContentARM `json:"additionalUnattendContent,omitempty"`
	EnableAutomaticUpdates    *bool                          `json:"enableAutomaticUpdates,omitempty"`
	PatchSettings             *PatchSettingsARM              `json:"patchSettings,omitempty"`
	ProvisionVMAgent          *bool                          `json:"provisionVMAgent,omitempty"`
	TimeZone                  *string                        `json:"timeZone,omitempty"`
	WinRM                     *WinRMConfigurationARM         `json:"winRM,omitempty"`
}

// Deprecated version of AdditionalUnattendContent. Use v1beta20201201.AdditionalUnattendContent instead
type AdditionalUnattendContentARM struct {
	ComponentName *AdditionalUnattendContent_ComponentName `json:"componentName,omitempty"`
	Content       *string                                  `json:"content,omitempty"`
	PassName      *AdditionalUnattendContent_PassName      `json:"passName,omitempty"`
	SettingName   *AdditionalUnattendContent_SettingName   `json:"settingName,omitempty"`
}

// Deprecated version of AvailablePatchSummary. Use v1beta20201201.AvailablePatchSummary instead
type AvailablePatchSummaryARM struct {
	AssessmentActivityId          *string                       `json:"assessmentActivityId,omitempty"`
	CriticalAndSecurityPatchCount *int                          `json:"criticalAndSecurityPatchCount,omitempty"`
	Error                         *ApiErrorARM                  `json:"error,omitempty"`
	LastModifiedTime              *string                       `json:"lastModifiedTime,omitempty"`
	OtherPatchCount               *int                          `json:"otherPatchCount,omitempty"`
	RebootPending                 *bool                         `json:"rebootPending,omitempty"`
	StartTime                     *string                       `json:"startTime,omitempty"`
	Status                        *AvailablePatchSummary_Status `json:"status,omitempty"`
}

// Deprecated version of DiffDiskSettings. Use v1beta20201201.DiffDiskSettings instead
type DiffDiskSettingsARM struct {
	Option    *DiffDiskOption    `json:"option,omitempty"`
	Placement *DiffDiskPlacement `json:"placement,omitempty"`
}

// Deprecated version of DiskEncryptionSettings. Use v1beta20201201.DiskEncryptionSettings instead
type DiskEncryptionSettingsARM struct {
	DiskEncryptionKey *KeyVaultSecretReferenceARM `json:"diskEncryptionKey,omitempty"`
	Enabled           *bool                       `json:"enabled,omitempty"`
	KeyEncryptionKey  *KeyVaultKeyReferenceARM    `json:"keyEncryptionKey,omitempty"`
}

// Deprecated version of LastPatchInstallationSummary. Use v1beta20201201.LastPatchInstallationSummary instead
type LastPatchInstallationSummaryARM struct {
	Error                     *ApiErrorARM                         `json:"error,omitempty"`
	ExcludedPatchCount        *int                                 `json:"excludedPatchCount,omitempty"`
	FailedPatchCount          *int                                 `json:"failedPatchCount,omitempty"`
	InstallationActivityId    *string                              `json:"installationActivityId,omitempty"`
	InstalledPatchCount       *int                                 `json:"installedPatchCount,omitempty"`
	LastModifiedTime          *string                              `json:"lastModifiedTime,omitempty"`
	MaintenanceWindowExceeded *bool                                `json:"maintenanceWindowExceeded,omitempty"`
	NotSelectedPatchCount     *int                                 `json:"notSelectedPatchCount,omitempty"`
	PendingPatchCount         *int                                 `json:"pendingPatchCount,omitempty"`
	StartTime                 *string                              `json:"startTime,omitempty"`
	Status                    *LastPatchInstallationSummary_Status `json:"status,omitempty"`
}

// Deprecated version of LinuxPatchSettings. Use v1beta20201201.LinuxPatchSettings instead
type LinuxPatchSettingsARM struct {
	PatchMode *LinuxPatchSettings_PatchMode `json:"patchMode,omitempty"`
}

// Deprecated version of ManagedDiskParameters. Use v1beta20201201.ManagedDiskParameters instead
type ManagedDiskParametersARM struct {
	DiskEncryptionSet  *SubResourceARM     `json:"diskEncryptionSet,omitempty"`
	Id                 *string             `json:"id,omitempty"`
	StorageAccountType *StorageAccountType `json:"storageAccountType,omitempty"`
}

// Deprecated version of NetworkInterfaceReferenceProperties. Use v1beta20201201.NetworkInterfaceReferenceProperties instead
type NetworkInterfaceReferencePropertiesARM struct {
	Primary *bool `json:"primary,omitempty"`
}

// Deprecated version of PatchSettings. Use v1beta20201201.PatchSettings instead
type PatchSettingsARM struct {
	EnableHotpatching *bool                    `json:"enableHotpatching,omitempty"`
	PatchMode         *PatchSettings_PatchMode `json:"patchMode,omitempty"`
}

// Deprecated version of SshConfiguration. Use v1beta20201201.SshConfiguration instead
type SshConfigurationARM struct {
	PublicKeys []SshPublicKeySpecARM `json:"publicKeys,omitempty"`
}

// Deprecated version of VaultCertificate. Use v1beta20201201.VaultCertificate instead
type VaultCertificateARM struct {
	CertificateStore *string `json:"certificateStore,omitempty"`
	CertificateUrl   *string `json:"certificateUrl,omitempty"`
}

// Deprecated version of VirtualHardDisk. Use v1beta20201201.VirtualHardDisk instead
type VirtualHardDiskARM struct {
	Uri *string `json:"uri,omitempty"`
}

// Deprecated version of VirtualMachineExtensionHandlerInstanceView. Use v1beta20201201.VirtualMachineExtensionHandlerInstanceView instead
type VirtualMachineExtensionHandlerInstanceViewARM struct {
	Status             *InstanceViewStatusARM `json:"status,omitempty"`
	Type               *string                `json:"type,omitempty"`
	TypeHandlerVersion *string                `json:"typeHandlerVersion,omitempty"`
}

// Deprecated version of WinRMConfiguration. Use v1beta20201201.WinRMConfiguration instead
type WinRMConfigurationARM struct {
	Listeners []WinRMListenerARM `json:"listeners,omitempty"`
}

// Deprecated version of ApiError. Use v1beta20201201.ApiError instead
type ApiErrorARM struct {
	Code       *string           `json:"code,omitempty"`
	Details    []ApiErrorBaseARM `json:"details,omitempty"`
	Innererror *InnerErrorARM    `json:"innererror,omitempty"`
	Message    *string           `json:"message,omitempty"`
	Target     *string           `json:"target,omitempty"`
}

// Deprecated version of KeyVaultKeyReference. Use v1beta20201201.KeyVaultKeyReference instead
type KeyVaultKeyReferenceARM struct {
	KeyUrl      *string         `json:"keyUrl,omitempty"`
	SourceVault *SubResourceARM `json:"sourceVault,omitempty"`
}

// Deprecated version of KeyVaultSecretReference. Use v1beta20201201.KeyVaultSecretReference instead
type KeyVaultSecretReferenceARM struct {
	SecretUrl   *string         `json:"secretUrl,omitempty"`
	SourceVault *SubResourceARM `json:"sourceVault,omitempty"`
}

// Deprecated version of SshPublicKeySpec. Use v1beta20201201.SshPublicKeySpec instead
type SshPublicKeySpecARM struct {
	KeyData *string `json:"keyData,omitempty"`
	Path    *string `json:"path,omitempty"`
}

// Deprecated version of WinRMListener. Use v1beta20201201.WinRMListener instead
type WinRMListenerARM struct {
	CertificateUrl *string                 `json:"certificateUrl,omitempty"`
	Protocol       *WinRMListener_Protocol `json:"protocol,omitempty"`
}

// Deprecated version of ApiErrorBase. Use v1beta20201201.ApiErrorBase instead
type ApiErrorBaseARM struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Target  *string `json:"target,omitempty"`
}

// Deprecated version of InnerError. Use v1beta20201201.InnerError instead
type InnerErrorARM struct {
	Errordetail   *string `json:"errordetail,omitempty"`
	Exceptiontype *string `json:"exceptiontype,omitempty"`
}
