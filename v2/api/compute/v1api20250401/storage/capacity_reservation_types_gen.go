// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/rotisserie/eris"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=compute.azure.com,resources=capacityreservations,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=compute.azure.com,resources={capacityreservations/status,capacityreservations/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:resource:categories={azure,compute}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20250401.CapacityReservation
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2025-04-01/ComputeRP.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}
type CapacityReservation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CapacityReservation_Spec   `json:"spec,omitempty"`
	Status            CapacityReservation_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &CapacityReservation{}

// GetConditions returns the conditions of the resource
func (reservation *CapacityReservation) GetConditions() conditions.Conditions {
	return reservation.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (reservation *CapacityReservation) SetConditions(conditions conditions.Conditions) {
	reservation.Status.Conditions = conditions
}

var _ configmaps.Exporter = &CapacityReservation{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (reservation *CapacityReservation) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if reservation.Spec.OperatorSpec == nil {
		return nil
	}
	return reservation.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &CapacityReservation{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (reservation *CapacityReservation) SecretDestinationExpressions() []*core.DestinationExpression {
	if reservation.Spec.OperatorSpec == nil {
		return nil
	}
	return reservation.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &CapacityReservation{}

// AzureName returns the Azure name of the resource
func (reservation *CapacityReservation) AzureName() string {
	return reservation.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2025-04-01"
func (reservation CapacityReservation) GetAPIVersion() string {
	return "2025-04-01"
}

// GetResourceScope returns the scope of the resource
func (reservation *CapacityReservation) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (reservation *CapacityReservation) GetSpec() genruntime.ConvertibleSpec {
	return &reservation.Spec
}

// GetStatus returns the status of this resource
func (reservation *CapacityReservation) GetStatus() genruntime.ConvertibleStatus {
	return &reservation.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (reservation *CapacityReservation) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Compute/capacityReservationGroups/capacityReservations"
func (reservation *CapacityReservation) GetType() string {
	return "Microsoft.Compute/capacityReservationGroups/capacityReservations"
}

// NewEmptyStatus returns a new empty (blank) status
func (reservation *CapacityReservation) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &CapacityReservation_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (reservation *CapacityReservation) Owner() *genruntime.ResourceReference {
	if reservation.Spec.Owner == nil {
		return nil
	}

	group, kind := genruntime.LookupOwnerGroupKind(reservation.Spec)
	return reservation.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (reservation *CapacityReservation) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*CapacityReservation_STATUS); ok {
		reservation.Status = *st
		return nil
	}

	// Convert status to required version
	var st CapacityReservation_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return eris.Wrap(err, "failed to convert status")
	}

	reservation.Status = st
	return nil
}

// Hub marks that this CapacityReservation is the hub type for conversion
func (reservation *CapacityReservation) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (reservation *CapacityReservation) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: reservation.Spec.OriginalVersion,
		Kind:    "CapacityReservation",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20250401.CapacityReservation
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2025-04-01/ComputeRP.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}
type CapacityReservationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CapacityReservation `json:"items"`
}

// Storage version of v1api20250401.APIVersion
// +kubebuilder:validation:Enum={"2025-04-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2025-04-01")

// Storage version of v1api20250401.CapacityReservation_Spec
type CapacityReservation_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string                           `json:"azureName,omitempty"`
	Location        *string                          `json:"location,omitempty"`
	OperatorSpec    *CapacityReservationOperatorSpec `json:"operatorSpec,omitempty"`
	OriginalVersion string                           `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a compute.azure.com/CapacityReservationGroup resource
	Owner           *genruntime.KnownResourceReference `group:"compute.azure.com" json:"owner,omitempty" kind:"CapacityReservationGroup"`
	PropertyBag     genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	ScheduleProfile *ScheduleProfile                   `json:"scheduleProfile,omitempty"`
	Sku             *Sku                               `json:"sku,omitempty"`
	Tags            map[string]string                  `json:"tags,omitempty"`
	Zones           []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &CapacityReservation_Spec{}

// ConvertSpecFrom populates our CapacityReservation_Spec from the provided source
func (reservation *CapacityReservation_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == reservation {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(reservation)
}

// ConvertSpecTo populates the provided destination from our CapacityReservation_Spec
func (reservation *CapacityReservation_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == reservation {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(reservation)
}

// Storage version of v1api20250401.CapacityReservation_STATUS
type CapacityReservation_STATUS struct {
	Conditions                []conditions.Condition                  `json:"conditions,omitempty"`
	Id                        *string                                 `json:"id,omitempty"`
	InstanceView              *CapacityReservationInstanceView_STATUS `json:"instanceView,omitempty"`
	Location                  *string                                 `json:"location,omitempty"`
	Name                      *string                                 `json:"name,omitempty"`
	PlatformFaultDomainCount  *int                                    `json:"platformFaultDomainCount,omitempty"`
	PropertyBag               genruntime.PropertyBag                  `json:"$propertyBag,omitempty"`
	ProvisioningState         *string                                 `json:"provisioningState,omitempty"`
	ProvisioningTime          *string                                 `json:"provisioningTime,omitempty"`
	ReservationId             *string                                 `json:"reservationId,omitempty"`
	ScheduleProfile           *ScheduleProfile_STATUS                 `json:"scheduleProfile,omitempty"`
	Sku                       *Sku_STATUS                             `json:"sku,omitempty"`
	SystemData                *SystemData_STATUS                      `json:"systemData,omitempty"`
	Tags                      map[string]string                       `json:"tags,omitempty"`
	TimeCreated               *string                                 `json:"timeCreated,omitempty"`
	Type                      *string                                 `json:"type,omitempty"`
	VirtualMachinesAssociated []SubResourceReadOnly_STATUS            `json:"virtualMachinesAssociated,omitempty"`
	Zones                     []string                                `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &CapacityReservation_STATUS{}

// ConvertStatusFrom populates our CapacityReservation_STATUS from the provided source
func (reservation *CapacityReservation_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == reservation {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(reservation)
}

// ConvertStatusTo populates the provided destination from our CapacityReservation_STATUS
func (reservation *CapacityReservation_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == reservation {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(reservation)
}

// Storage version of v1api20250401.CapacityReservationInstanceView_STATUS
// The instance view of a capacity reservation that provides as snapshot of the runtime properties of the capacity
// reservation that is managed by the platform and can change outside of control plane operations.
type CapacityReservationInstanceView_STATUS struct {
	PropertyBag     genruntime.PropertyBag                 `json:"$propertyBag,omitempty"`
	Statuses        []InstanceViewStatus_STATUS            `json:"statuses,omitempty"`
	UtilizationInfo *CapacityReservationUtilization_STATUS `json:"utilizationInfo,omitempty"`
}

// Storage version of v1api20250401.CapacityReservationOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type CapacityReservationOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20250401.ScheduleProfile
// Defines the schedule for Block-type capacity reservations. Specifies the schedule during which capacity reservation is
// active and VM or VMSS resource can be allocated using reservation. This property is required and only supported when the
// capacity reservation group type is 'Block'. The scheduleProfile, start, and end fields are immutable after creation.
// Minimum API version: 2025-04-01. Please refer to https://aka.ms/blockcapacityreservation for more details.
type ScheduleProfile struct {
	End         *string                `json:"end,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Start       *string                `json:"start,omitempty"`
}

// Storage version of v1api20250401.ScheduleProfile_STATUS
// Defines the schedule for Block-type capacity reservations. Specifies the schedule during which capacity reservation is
// active and VM or VMSS resource can be allocated using reservation. This property is required and only supported when the
// capacity reservation group type is 'Block'. The scheduleProfile, start, and end fields are immutable after creation.
// Minimum API version: 2025-04-01. Please refer to https://aka.ms/blockcapacityreservation for more details.
type ScheduleProfile_STATUS struct {
	End         *string                `json:"end,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Start       *string                `json:"start,omitempty"`
}

// Storage version of v1api20250401.Sku
// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is
// currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type Sku struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1api20250401.Sku_STATUS
// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is
// currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type Sku_STATUS struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1api20250401.SubResourceReadOnly_STATUS
type SubResourceReadOnly_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20250401.SystemData_STATUS
// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS struct {
	CreatedAt          *string                `json:"createdAt,omitempty"`
	CreatedBy          *string                `json:"createdBy,omitempty"`
	CreatedByType      *string                `json:"createdByType,omitempty"`
	LastModifiedAt     *string                `json:"lastModifiedAt,omitempty"`
	LastModifiedBy     *string                `json:"lastModifiedBy,omitempty"`
	LastModifiedByType *string                `json:"lastModifiedByType,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20250401.CapacityReservationUtilization_STATUS
// Represents the capacity reservation utilization in terms of resources allocated.
type CapacityReservationUtilization_STATUS struct {
	CurrentCapacity          *int                         `json:"currentCapacity,omitempty"`
	PropertyBag              genruntime.PropertyBag       `json:"$propertyBag,omitempty"`
	VirtualMachinesAllocated []SubResourceReadOnly_STATUS `json:"virtualMachinesAllocated,omitempty"`
}

// Storage version of v1api20250401.InstanceViewStatus_STATUS
// Instance view status.
type InstanceViewStatus_STATUS struct {
	Code          *string                `json:"code,omitempty"`
	DisplayStatus *string                `json:"displayStatus,omitempty"`
	Level         *string                `json:"level,omitempty"`
	Message       *string                `json:"message,omitempty"`
	PropertyBag   genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Time          *string                `json:"time,omitempty"`
}

func init() {
	SchemeBuilder.Register(&CapacityReservation{}, &CapacityReservationList{})
}
