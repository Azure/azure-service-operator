// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package arm

type CapacityReservation_STATUS struct {
	// Id: Fully qualified resource ID for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	// Location: The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Name: The name of the resource
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the Capacity reservation.
	Properties *CapacityReservationProperties_STATUS `json:"properties,omitempty"`

	// Sku: SKU of the resource for which capacity needs be reserved. The SKU name and capacity is required to be set.  For
	// Block capacity reservations, sku.capacity can only accept values 1, 2, 4, 8, 16, 32, 64. Currently VM Skus with the
	// capability called 'CapacityReservationSupported' set to true are supported. When 'CapacityReservationSupported' is true,
	// the SKU capability also specifies the 'SupportedCapacityReservationTypes', which lists the types of capacity
	// reservations (such as Targeted or Block) that the SKU supports. Refer to List Microsoft.Compute SKUs in a region
	// (https://docs.microsoft.com/rest/api/compute/resourceskus/list) for supported values.
	Sku *Sku_STATUS `json:"sku,omitempty"`

	// SystemData: Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData_STATUS `json:"systemData,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`

	// Zones: The availability zones.
	Zones []string `json:"zones,omitempty"`
}

// Properties of the Capacity reservation.
type CapacityReservationProperties_STATUS struct {
	// InstanceView: The Capacity reservation instance view.
	InstanceView *CapacityReservationInstanceView_STATUS `json:"instanceView,omitempty"`

	// PlatformFaultDomainCount: Specifies the value of fault domain count that Capacity Reservation supports for requested VM
	// size. Note: The fault domain count specified for a resource (like virtual machines scale set) must be less than or equal
	// to this value if it deploys using capacity reservation. Minimum api-version: 2022-08-01.
	PlatformFaultDomainCount *int `json:"platformFaultDomainCount,omitempty"`

	// ProvisioningState: The provisioning state, which only appears in the response.
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ProvisioningTime: The date time when the capacity reservation was last updated.
	ProvisioningTime *string `json:"provisioningTime,omitempty"`

	// ReservationId: A unique id generated and assigned to the capacity reservation by the platform which does not change
	// throughout the lifetime of the resource.
	ReservationId *string `json:"reservationId,omitempty"`

	// ScheduleProfile: Defines the schedule for Block-type capacity reservations. Specifies the schedule during which capacity
	// reservation is active and VM or VMSS resource can be allocated using reservation. This property is required and only
	// supported when the capacity reservation group type is 'Block'. The scheduleProfile, start, and end fields are immutable
	// after creation. Minimum API version: 2025-04-01. Please refer to https://aka.ms/blockcapacityreservation for more
	// details.
	ScheduleProfile *ScheduleProfile_STATUS `json:"scheduleProfile,omitempty"`

	// TimeCreated: Specifies the time at which the Capacity Reservation resource was created. Minimum api-version: 2021-11-01.
	TimeCreated *string `json:"timeCreated,omitempty"`

	// VirtualMachinesAssociated: A list of all virtual machine resource ids that are associated with the capacity reservation.
	VirtualMachinesAssociated []SubResourceReadOnly_STATUS `json:"virtualMachinesAssociated,omitempty"`
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is
// currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type Sku_STATUS struct {
	// Capacity: Specifies the number of virtual machines in the scale set.
	Capacity *int `json:"capacity,omitempty"`

	// Name: The sku name.
	Name *string `json:"name,omitempty"`

	// Tier: Specifies the tier of virtual machines in a scale set.
	// Possible Values:
	// Standard
	// Basic
	Tier *string `json:"tier,omitempty"`
}

// The instance view of a capacity reservation that provides as snapshot of the runtime properties of the capacity
// reservation that is managed by the platform and can change outside of control plane operations.
type CapacityReservationInstanceView_STATUS struct {
	// Statuses: The resource status information.
	Statuses []InstanceViewStatus_STATUS `json:"statuses,omitempty"`

	// UtilizationInfo: Unutilized capacity of the capacity reservation.
	UtilizationInfo *CapacityReservationUtilization_STATUS `json:"utilizationInfo,omitempty"`
}

// Defines the schedule for Block-type capacity reservations. Specifies the schedule during which capacity reservation is
// active and VM or VMSS resource can be allocated using reservation. This property is required and only supported when the
// capacity reservation group type is 'Block'. The scheduleProfile, start, and end fields are immutable after creation.
// Minimum API version: 2025-04-01. Please refer to https://aka.ms/blockcapacityreservation for more details.
type ScheduleProfile_STATUS struct {
	// End: The required end date for block capacity reservations. Must be after the start date, with a duration of either
	// 1–14 whole days or 3–26 whole weeks. Example: 2025-06-28.
	End *string `json:"end,omitempty"`

	// Start: The required start date for block capacity reservations. Must be today or within 56 days in the future. For
	// same-day scheduling, requests must be submitted before 11:30 AM UTC. Example: 2025-06-27.
	Start *string `json:"start,omitempty"`
}

// Represents the capacity reservation utilization in terms of resources allocated.
type CapacityReservationUtilization_STATUS struct {
	// CurrentCapacity: The value provides the current capacity of the VM size which was reserved successfully and for which
	// the customer is getting billed. Minimum api-version: 2022-08-01.
	CurrentCapacity *int `json:"currentCapacity,omitempty"`

	// VirtualMachinesAllocated: A list of all virtual machines resource ids allocated against the capacity reservation.
	VirtualMachinesAllocated []SubResourceReadOnly_STATUS `json:"virtualMachinesAllocated,omitempty"`
}

// Instance view status.
type InstanceViewStatus_STATUS struct {
	// Code: The status code.
	Code *string `json:"code,omitempty"`

	// DisplayStatus: The short localizable label for the status.
	DisplayStatus *string `json:"displayStatus,omitempty"`

	// Level: The level code.
	Level *StatusLevelTypes_STATUS `json:"level,omitempty"`

	// Message: The detailed status message, including for alerts and error messages.
	Message *string `json:"message,omitempty"`

	// Time: The time of the status.
	Time *string `json:"time,omitempty"`
}

// The level code.
type StatusLevelTypes_STATUS string

const (
	StatusLevelTypes_STATUS_Error   = StatusLevelTypes_STATUS("Error")
	StatusLevelTypes_STATUS_Info    = StatusLevelTypes_STATUS("Info")
	StatusLevelTypes_STATUS_Warning = StatusLevelTypes_STATUS("Warning")
)

// Mapping from string to StatusLevelTypes_STATUS
var statusLevelTypes_STATUS_Values = map[string]StatusLevelTypes_STATUS{
	"error":   StatusLevelTypes_STATUS_Error,
	"info":    StatusLevelTypes_STATUS_Info,
	"warning": StatusLevelTypes_STATUS_Warning,
}
