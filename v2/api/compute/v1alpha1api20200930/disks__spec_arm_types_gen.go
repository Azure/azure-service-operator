// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20200930

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

// Deprecated version of Disks_Spec. Use v1beta20200930.Disks_Spec instead
type Disks_SpecARM struct {
	ExtendedLocation *ExtendedLocationARM `json:"extendedLocation,omitempty"`
	Location         *string              `json:"location,omitempty"`
	Name             string               `json:"name,omitempty"`
	Properties       *DiskPropertiesARM   `json:"properties,omitempty"`
	Sku              *DiskSkuARM          `json:"sku,omitempty"`
	Tags             map[string]string    `json:"tags,omitempty"`
	Zones            []string             `json:"zones,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Disks_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-09-30"
func (disks Disks_SpecARM) GetAPIVersion() string {
	return string(APIVersionValue)
}

// GetName returns the Name of the resource
func (disks *Disks_SpecARM) GetName() string {
	return disks.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Compute/disks"
func (disks *Disks_SpecARM) GetType() string {
	return "Microsoft.Compute/disks"
}

// Deprecated version of DiskProperties. Use v1beta20200930.DiskProperties instead
type DiskPropertiesARM struct {
	BurstingEnabled              *bool                              `json:"burstingEnabled,omitempty"`
	CreationData                 *CreationDataARM                   `json:"creationData,omitempty"`
	DiskAccessId                 *string                            `json:"diskAccessId,omitempty"`
	DiskIOPSReadOnly             *int                               `json:"diskIOPSReadOnly,omitempty"`
	DiskIOPSReadWrite            *int                               `json:"diskIOPSReadWrite,omitempty"`
	DiskMBpsReadOnly             *int                               `json:"diskMBpsReadOnly,omitempty"`
	DiskMBpsReadWrite            *int                               `json:"diskMBpsReadWrite,omitempty"`
	DiskSizeGB                   *int                               `json:"diskSizeGB,omitempty"`
	Encryption                   *EncryptionARM                     `json:"encryption,omitempty"`
	EncryptionSettingsCollection *EncryptionSettingsCollectionARM   `json:"encryptionSettingsCollection,omitempty"`
	HyperVGeneration             *DiskPropertiesHyperVGeneration    `json:"hyperVGeneration,omitempty"`
	MaxShares                    *int                               `json:"maxShares,omitempty"`
	NetworkAccessPolicy          *DiskPropertiesNetworkAccessPolicy `json:"networkAccessPolicy,omitempty"`
	OsType                       *DiskPropertiesOsType              `json:"osType,omitempty"`
	PurchasePlan                 *PurchasePlanARM                   `json:"purchasePlan,omitempty"`
	Tier                         *string                            `json:"tier,omitempty"`
}

// Deprecated version of DiskSku. Use v1beta20200930.DiskSku instead
type DiskSkuARM struct {
	Name *DiskSkuName `json:"name,omitempty"`
}

// Deprecated version of ExtendedLocation. Use v1beta20200930.ExtendedLocation instead
type ExtendedLocationARM struct {
	Name *string               `json:"name,omitempty"`
	Type *ExtendedLocationType `json:"type,omitempty"`
}

// Deprecated version of CreationData. Use v1beta20200930.CreationData instead
type CreationDataARM struct {
	CreateOption          *CreationDataCreateOption `json:"createOption,omitempty"`
	GalleryImageReference *ImageDiskReferenceARM    `json:"galleryImageReference,omitempty"`
	ImageReference        *ImageDiskReferenceARM    `json:"imageReference,omitempty"`
	LogicalSectorSize     *int                      `json:"logicalSectorSize,omitempty"`
	SourceResourceId      *string                   `json:"sourceResourceId,omitempty"`
	SourceUri             *string                   `json:"sourceUri,omitempty"`
	StorageAccountId      *string                   `json:"storageAccountId,omitempty"`
	UploadSizeBytes       *int                      `json:"uploadSizeBytes,omitempty"`
}

// Deprecated version of DiskSkuName. Use v1beta20200930.DiskSkuName instead
// +kubebuilder:validation:Enum={"Premium_LRS","Standard_LRS","StandardSSD_LRS","UltraSSD_LRS"}
type DiskSkuName string

const (
	DiskSkuNamePremiumLRS     = DiskSkuName("Premium_LRS")
	DiskSkuNameStandardLRS    = DiskSkuName("Standard_LRS")
	DiskSkuNameStandardSSDLRS = DiskSkuName("StandardSSD_LRS")
	DiskSkuNameUltraSSDLRS    = DiskSkuName("UltraSSD_LRS")
)

// Deprecated version of Encryption. Use v1beta20200930.Encryption instead
type EncryptionARM struct {
	DiskEncryptionSetId *string         `json:"diskEncryptionSetId,omitempty"`
	Type                *EncryptionType `json:"type,omitempty"`
}

// Deprecated version of EncryptionSettingsCollection. Use v1beta20200930.EncryptionSettingsCollection instead
type EncryptionSettingsCollectionARM struct {
	Enabled                   *bool                          `json:"enabled,omitempty"`
	EncryptionSettings        []EncryptionSettingsElementARM `json:"encryptionSettings,omitempty"`
	EncryptionSettingsVersion *string                        `json:"encryptionSettingsVersion,omitempty"`
}

// Deprecated version of ExtendedLocationType. Use v1beta20200930.ExtendedLocationType instead
// +kubebuilder:validation:Enum={"EdgeZone"}
type ExtendedLocationType string

const ExtendedLocationTypeEdgeZone = ExtendedLocationType("EdgeZone")

// Deprecated version of PurchasePlan. Use v1beta20200930.PurchasePlan instead
type PurchasePlanARM struct {
	Name          *string `json:"name,omitempty"`
	Product       *string `json:"product,omitempty"`
	PromotionCode *string `json:"promotionCode,omitempty"`
	Publisher     *string `json:"publisher,omitempty"`
}

// Deprecated version of EncryptionSettingsElement. Use v1beta20200930.EncryptionSettingsElement instead
type EncryptionSettingsElementARM struct {
	DiskEncryptionKey *KeyVaultAndSecretReferenceARM `json:"diskEncryptionKey,omitempty"`
	KeyEncryptionKey  *KeyVaultAndKeyReferenceARM    `json:"keyEncryptionKey,omitempty"`
}

// Deprecated version of ImageDiskReference. Use v1beta20200930.ImageDiskReference instead
type ImageDiskReferenceARM struct {
	Id  *string `json:"id,omitempty"`
	Lun *int    `json:"lun,omitempty"`
}

// Deprecated version of KeyVaultAndKeyReference. Use v1beta20200930.KeyVaultAndKeyReference instead
type KeyVaultAndKeyReferenceARM struct {
	KeyUrl      *string         `json:"keyUrl,omitempty"`
	SourceVault *SourceVaultARM `json:"sourceVault,omitempty"`
}

// Deprecated version of KeyVaultAndSecretReference. Use v1beta20200930.KeyVaultAndSecretReference instead
type KeyVaultAndSecretReferenceARM struct {
	SecretUrl   *string         `json:"secretUrl,omitempty"`
	SourceVault *SourceVaultARM `json:"sourceVault,omitempty"`
}

// Deprecated version of SourceVault. Use v1beta20200930.SourceVault instead
type SourceVaultARM struct {
	Id *string `json:"id,omitempty"`
}
