// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20201201storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=compute.azure.com,resources=virtualmachinescalesets,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=compute.azure.com,resources={virtualmachinescalesets/status,virtualmachinescalesets/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
//Storage version of v1alpha1api20201201.VirtualMachineScaleSet
//Generator information:
//- Generated from: /compute/resource-manager/Microsoft.Compute/stable/2020-12-01/compute.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}
type VirtualMachineScaleSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualMachineScaleSets_SPEC  `json:"spec,omitempty"`
	Status            VirtualMachineScaleSet_Status `json:"status,omitempty"`
}

var _ conditions.Conditioner = &VirtualMachineScaleSet{}

// GetConditions returns the conditions of the resource
func (scaleSet *VirtualMachineScaleSet) GetConditions() conditions.Conditions {
	return scaleSet.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (scaleSet *VirtualMachineScaleSet) SetConditions(conditions conditions.Conditions) {
	scaleSet.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &VirtualMachineScaleSet{}

// AzureName returns the Azure name of the resource
func (scaleSet *VirtualMachineScaleSet) AzureName() string {
	return scaleSet.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-12-01"
func (scaleSet VirtualMachineScaleSet) GetAPIVersion() string {
	return string(APIVersionValue)
}

// GetResourceKind returns the kind of the resource
func (scaleSet *VirtualMachineScaleSet) GetResourceKind() genruntime.ResourceKind {
	return genruntime.ResourceKindNormal
}

// GetSpec returns the specification of this resource
func (scaleSet *VirtualMachineScaleSet) GetSpec() genruntime.ConvertibleSpec {
	return &scaleSet.Spec
}

// GetStatus returns the status of this resource
func (scaleSet *VirtualMachineScaleSet) GetStatus() genruntime.ConvertibleStatus {
	return &scaleSet.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Compute/virtualMachineScaleSets"
func (scaleSet *VirtualMachineScaleSet) GetType() string {
	return "Microsoft.Compute/virtualMachineScaleSets"
}

// NewEmptyStatus returns a new empty (blank) status
func (scaleSet *VirtualMachineScaleSet) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &VirtualMachineScaleSet_Status{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (scaleSet *VirtualMachineScaleSet) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(scaleSet.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  scaleSet.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (scaleSet *VirtualMachineScaleSet) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*VirtualMachineScaleSet_Status); ok {
		scaleSet.Status = *st
		return nil
	}

	// Convert status to required version
	var st VirtualMachineScaleSet_Status
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	scaleSet.Status = st
	return nil
}

// Hub marks that this VirtualMachineScaleSet is the hub type for conversion
func (scaleSet *VirtualMachineScaleSet) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (scaleSet *VirtualMachineScaleSet) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: scaleSet.Spec.OriginalVersion,
		Kind:    "VirtualMachineScaleSet",
	}
}

// +kubebuilder:object:root=true
//Storage version of v1alpha1api20201201.VirtualMachineScaleSet
//Generator information:
//- Generated from: /compute/resource-manager/Microsoft.Compute/stable/2020-12-01/compute.json
//- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}
type VirtualMachineScaleSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineScaleSet `json:"items"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSet_Status
type VirtualMachineScaleSet_Status struct {
	AdditionalCapabilities                 *AdditionalCapabilities_Status          `json:"additionalCapabilities,omitempty"`
	AutomaticRepairsPolicy                 *AutomaticRepairsPolicy_Status          `json:"automaticRepairsPolicy,omitempty"`
	Conditions                             []conditions.Condition                  `json:"conditions,omitempty"`
	DoNotRunExtensionsOnOverprovisionedVMs *bool                                   `json:"doNotRunExtensionsOnOverprovisionedVMs,omitempty"`
	ExtendedLocation                       *ExtendedLocation_Status                `json:"extendedLocation,omitempty"`
	HostGroup                              *SubResource_Status                     `json:"hostGroup,omitempty"`
	Id                                     *string                                 `json:"id,omitempty"`
	Identity                               *VirtualMachineScaleSetIdentity_Status  `json:"identity,omitempty"`
	Location                               *string                                 `json:"location,omitempty"`
	Name                                   *string                                 `json:"name,omitempty"`
	OrchestrationMode                      *string                                 `json:"orchestrationMode,omitempty"`
	Overprovision                          *bool                                   `json:"overprovision,omitempty"`
	Plan                                   *Plan_Status                            `json:"plan,omitempty"`
	PlatformFaultDomainCount               *int                                    `json:"platformFaultDomainCount,omitempty"`
	PropertyBag                            genruntime.PropertyBag                  `json:"$propertyBag,omitempty"`
	ProvisioningState                      *string                                 `json:"provisioningState,omitempty"`
	ProximityPlacementGroup                *SubResource_Status                     `json:"proximityPlacementGroup,omitempty"`
	ScaleInPolicy                          *ScaleInPolicy_Status                   `json:"scaleInPolicy,omitempty"`
	SinglePlacementGroup                   *bool                                   `json:"singlePlacementGroup,omitempty"`
	Sku                                    *Sku_Status                             `json:"sku,omitempty"`
	Tags                                   map[string]string                       `json:"tags,omitempty"`
	Type                                   *string                                 `json:"type,omitempty"`
	UniqueId                               *string                                 `json:"uniqueId,omitempty"`
	UpgradePolicy                          *UpgradePolicy_Status                   `json:"upgradePolicy,omitempty"`
	VirtualMachineProfile                  *VirtualMachineScaleSetVMProfile_Status `json:"virtualMachineProfile,omitempty"`
	ZoneBalance                            *bool                                   `json:"zoneBalance,omitempty"`
	Zones                                  []string                                `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &VirtualMachineScaleSet_Status{}

// ConvertStatusFrom populates our VirtualMachineScaleSet_Status from the provided source
func (scaleSet *VirtualMachineScaleSet_Status) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == scaleSet {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(scaleSet)
}

// ConvertStatusTo populates the provided destination from our VirtualMachineScaleSet_Status
func (scaleSet *VirtualMachineScaleSet_Status) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == scaleSet {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(scaleSet)
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSets_SPEC
type VirtualMachineScaleSets_SPEC struct {
	AdditionalCapabilities *AdditionalCapabilities_Spec `json:"additionalCapabilities,omitempty"`
	AutomaticRepairsPolicy *AutomaticRepairsPolicy_Spec `json:"automaticRepairsPolicy,omitempty"`

	//AzureName: The name of the resource in Azure. This is often the same as the name
	//of the resource in Kubernetes but it doesn't have to be.
	AzureName                              string                               `json:"azureName"`
	DoNotRunExtensionsOnOverprovisionedVMs *bool                                `json:"doNotRunExtensionsOnOverprovisionedVMs,omitempty"`
	ExtendedLocation                       *ExtendedLocation_Spec               `json:"extendedLocation,omitempty"`
	HostGroup                              *SubResource_Spec                    `json:"hostGroup,omitempty"`
	Identity                               *VirtualMachineScaleSetIdentity_Spec `json:"identity,omitempty"`
	Location                               *string                              `json:"location,omitempty"`
	OrchestrationMode                      *string                              `json:"orchestrationMode,omitempty"`
	OriginalVersion                        string                               `json:"originalVersion"`
	Overprovision                          *bool                                `json:"overprovision,omitempty"`

	// +kubebuilder:validation:Required
	Owner                    genruntime.KnownResourceReference     `group:"resources.azure.com" json:"owner" kind:"ResourceGroup"`
	Plan                     *Plan_Spec                            `json:"plan,omitempty"`
	PlatformFaultDomainCount *int                                  `json:"platformFaultDomainCount,omitempty"`
	PropertyBag              genruntime.PropertyBag                `json:"$propertyBag,omitempty"`
	ProximityPlacementGroup  *SubResource_Spec                     `json:"proximityPlacementGroup,omitempty"`
	ScaleInPolicy            *ScaleInPolicy_Spec                   `json:"scaleInPolicy,omitempty"`
	SinglePlacementGroup     *bool                                 `json:"singlePlacementGroup,omitempty"`
	Sku                      *Sku_Spec                             `json:"sku,omitempty"`
	Tags                     map[string]string                     `json:"tags,omitempty"`
	UpgradePolicy            *UpgradePolicy_Spec                   `json:"upgradePolicy,omitempty"`
	VirtualMachineProfile    *VirtualMachineScaleSetVMProfile_Spec `json:"virtualMachineProfile,omitempty"`
	ZoneBalance              *bool                                 `json:"zoneBalance,omitempty"`
	Zones                    []string                              `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &VirtualMachineScaleSets_SPEC{}

// ConvertSpecFrom populates our VirtualMachineScaleSets_SPEC from the provided source
func (spec *VirtualMachineScaleSets_SPEC) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == spec {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(spec)
}

// ConvertSpecTo populates the provided destination from our VirtualMachineScaleSets_SPEC
func (spec *VirtualMachineScaleSets_SPEC) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == spec {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(spec)
}

//Storage version of v1alpha1api20201201.AutomaticRepairsPolicy_Spec
type AutomaticRepairsPolicy_Spec struct {
	Enabled     *bool                  `json:"enabled,omitempty"`
	GracePeriod *string                `json:"gracePeriod,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.AutomaticRepairsPolicy_Status
type AutomaticRepairsPolicy_Status struct {
	Enabled     *bool                  `json:"enabled,omitempty"`
	GracePeriod *string                `json:"gracePeriod,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.ScaleInPolicy_Spec
type ScaleInPolicy_Spec struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Rules       []string               `json:"rules,omitempty"`
}

//Storage version of v1alpha1api20201201.ScaleInPolicy_Status
type ScaleInPolicy_Status struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Rules       []string               `json:"rules,omitempty"`
}

//Storage version of v1alpha1api20201201.Sku_Spec
type Sku_Spec struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

//Storage version of v1alpha1api20201201.Sku_Status
type Sku_Status struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

//Storage version of v1alpha1api20201201.UpgradePolicy_Spec
type UpgradePolicy_Spec struct {
	AutomaticOSUpgradePolicy *AutomaticOSUpgradePolicy_Spec `json:"automaticOSUpgradePolicy,omitempty"`
	Mode                     *string                        `json:"mode,omitempty"`
	PropertyBag              genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	RollingUpgradePolicy     *RollingUpgradePolicy_Spec     `json:"rollingUpgradePolicy,omitempty"`
}

//Storage version of v1alpha1api20201201.UpgradePolicy_Status
type UpgradePolicy_Status struct {
	AutomaticOSUpgradePolicy *AutomaticOSUpgradePolicy_Status `json:"automaticOSUpgradePolicy,omitempty"`
	Mode                     *string                          `json:"mode,omitempty"`
	PropertyBag              genruntime.PropertyBag           `json:"$propertyBag,omitempty"`
	RollingUpgradePolicy     *RollingUpgradePolicy_Status     `json:"rollingUpgradePolicy,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIdentity_Spec
type VirtualMachineScaleSetIdentity_Spec struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIdentity_Status
type VirtualMachineScaleSetIdentity_Status struct {
	PrincipalId            *string                                                                 `json:"principalId,omitempty"`
	PropertyBag            genruntime.PropertyBag                                                  `json:"$propertyBag,omitempty"`
	TenantId               *string                                                                 `json:"tenantId,omitempty"`
	Type                   *string                                                                 `json:"type,omitempty"`
	UserAssignedIdentities map[string]VirtualMachineScaleSetIdentity_UserAssignedIdentities_Status `json:"userAssignedIdentities,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetVMProfile_Spec
type VirtualMachineScaleSetVMProfile_Spec struct {
	BillingProfile         *BillingProfile_Spec                         `json:"billingProfile,omitempty"`
	DiagnosticsProfile     *DiagnosticsProfile_Spec                     `json:"diagnosticsProfile,omitempty"`
	EvictionPolicy         *string                                      `json:"evictionPolicy,omitempty"`
	ExtensionProfile       *VirtualMachineScaleSetExtensionProfile_Spec `json:"extensionProfile,omitempty"`
	LicenseType            *string                                      `json:"licenseType,omitempty"`
	NetworkProfile         *VirtualMachineScaleSetNetworkProfile_Spec   `json:"networkProfile,omitempty"`
	OsProfile              *VirtualMachineScaleSetOSProfile_Spec        `json:"osProfile,omitempty"`
	Priority               *string                                      `json:"priority,omitempty"`
	PropertyBag            genruntime.PropertyBag                       `json:"$propertyBag,omitempty"`
	ScheduledEventsProfile *ScheduledEventsProfile_Spec                 `json:"scheduledEventsProfile,omitempty"`
	SecurityProfile        *SecurityProfile_Spec                        `json:"securityProfile,omitempty"`
	StorageProfile         *VirtualMachineScaleSetStorageProfile_Spec   `json:"storageProfile,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetVMProfile_Status
type VirtualMachineScaleSetVMProfile_Status struct {
	BillingProfile         *BillingProfile_Status                         `json:"billingProfile,omitempty"`
	DiagnosticsProfile     *DiagnosticsProfile_Status                     `json:"diagnosticsProfile,omitempty"`
	EvictionPolicy         *string                                        `json:"evictionPolicy,omitempty"`
	ExtensionProfile       *VirtualMachineScaleSetExtensionProfile_Status `json:"extensionProfile,omitempty"`
	LicenseType            *string                                        `json:"licenseType,omitempty"`
	NetworkProfile         *VirtualMachineScaleSetNetworkProfile_Status   `json:"networkProfile,omitempty"`
	OsProfile              *VirtualMachineScaleSetOSProfile_Status        `json:"osProfile,omitempty"`
	Priority               *string                                        `json:"priority,omitempty"`
	PropertyBag            genruntime.PropertyBag                         `json:"$propertyBag,omitempty"`
	ScheduledEventsProfile *ScheduledEventsProfile_Status                 `json:"scheduledEventsProfile,omitempty"`
	SecurityProfile        *SecurityProfile_Status                        `json:"securityProfile,omitempty"`
	StorageProfile         *VirtualMachineScaleSetStorageProfile_Status   `json:"storageProfile,omitempty"`
}

//Storage version of v1alpha1api20201201.AutomaticOSUpgradePolicy_Spec
type AutomaticOSUpgradePolicy_Spec struct {
	DisableAutomaticRollback *bool                  `json:"disableAutomaticRollback,omitempty"`
	EnableAutomaticOSUpgrade *bool                  `json:"enableAutomaticOSUpgrade,omitempty"`
	PropertyBag              genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.AutomaticOSUpgradePolicy_Status
type AutomaticOSUpgradePolicy_Status struct {
	DisableAutomaticRollback *bool                  `json:"disableAutomaticRollback,omitempty"`
	EnableAutomaticOSUpgrade *bool                  `json:"enableAutomaticOSUpgrade,omitempty"`
	PropertyBag              genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.RollingUpgradePolicy_Spec
type RollingUpgradePolicy_Spec struct {
	EnableCrossZoneUpgrade              *bool                  `json:"enableCrossZoneUpgrade,omitempty"`
	MaxBatchInstancePercent             *int                   `json:"maxBatchInstancePercent,omitempty"`
	MaxUnhealthyInstancePercent         *int                   `json:"maxUnhealthyInstancePercent,omitempty"`
	MaxUnhealthyUpgradedInstancePercent *int                   `json:"maxUnhealthyUpgradedInstancePercent,omitempty"`
	PauseTimeBetweenBatches             *string                `json:"pauseTimeBetweenBatches,omitempty"`
	PrioritizeUnhealthyInstances        *bool                  `json:"prioritizeUnhealthyInstances,omitempty"`
	PropertyBag                         genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.RollingUpgradePolicy_Status
type RollingUpgradePolicy_Status struct {
	EnableCrossZoneUpgrade              *bool                  `json:"enableCrossZoneUpgrade,omitempty"`
	MaxBatchInstancePercent             *int                   `json:"maxBatchInstancePercent,omitempty"`
	MaxUnhealthyInstancePercent         *int                   `json:"maxUnhealthyInstancePercent,omitempty"`
	MaxUnhealthyUpgradedInstancePercent *int                   `json:"maxUnhealthyUpgradedInstancePercent,omitempty"`
	PauseTimeBetweenBatches             *string                `json:"pauseTimeBetweenBatches,omitempty"`
	PrioritizeUnhealthyInstances        *bool                  `json:"prioritizeUnhealthyInstances,omitempty"`
	PropertyBag                         genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.ScheduledEventsProfile_Spec
type ScheduledEventsProfile_Spec struct {
	PropertyBag                  genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	TerminateNotificationProfile *TerminateNotificationProfile_Spec `json:"terminateNotificationProfile,omitempty"`
}

//Storage version of v1alpha1api20201201.ScheduledEventsProfile_Status
type ScheduledEventsProfile_Status struct {
	PropertyBag                  genruntime.PropertyBag               `json:"$propertyBag,omitempty"`
	TerminateNotificationProfile *TerminateNotificationProfile_Status `json:"terminateNotificationProfile,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetExtensionProfile_Spec
type VirtualMachineScaleSetExtensionProfile_Spec struct {
	ExtensionsTimeBudget *string                `json:"extensionsTimeBudget,omitempty"`
	PropertyBag          genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetExtensionProfile_Status
type VirtualMachineScaleSetExtensionProfile_Status struct {
	Extensions           []VirtualMachineScaleSetExtension_Status_SubResourceEmbedded `json:"extensions,omitempty"`
	ExtensionsTimeBudget *string                                                      `json:"extensionsTimeBudget,omitempty"`
	PropertyBag          genruntime.PropertyBag                                       `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIdentity_UserAssignedIdentities_Status
type VirtualMachineScaleSetIdentity_UserAssignedIdentities_Status struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkProfile_Spec
type VirtualMachineScaleSetNetworkProfile_Spec struct {
	HealthProbe                    *ApiEntityReference_Spec                          `json:"healthProbe,omitempty"`
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfiguration_Spec `json:"networkInterfaceConfigurations,omitempty"`
	PropertyBag                    genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkProfile_Status
type VirtualMachineScaleSetNetworkProfile_Status struct {
	HealthProbe                    *ApiEntityReference_Status                          `json:"healthProbe,omitempty"`
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfiguration_Status `json:"networkInterfaceConfigurations,omitempty"`
	PropertyBag                    genruntime.PropertyBag                              `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetOSProfile_Spec
type VirtualMachineScaleSetOSProfile_Spec struct {
	AdminPassword        *string                    `json:"adminPassword,omitempty"`
	AdminUsername        *string                    `json:"adminUsername,omitempty"`
	ComputerNamePrefix   *string                    `json:"computerNamePrefix,omitempty"`
	CustomData           *string                    `json:"customData,omitempty"`
	LinuxConfiguration   *LinuxConfiguration_Spec   `json:"linuxConfiguration,omitempty"`
	PropertyBag          genruntime.PropertyBag     `json:"$propertyBag,omitempty"`
	Secrets              []VaultSecretGroup_Spec    `json:"secrets,omitempty"`
	WindowsConfiguration *WindowsConfiguration_Spec `json:"windowsConfiguration,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetOSProfile_Status
type VirtualMachineScaleSetOSProfile_Status struct {
	AdminPassword        *string                      `json:"adminPassword,omitempty"`
	AdminUsername        *string                      `json:"adminUsername,omitempty"`
	ComputerNamePrefix   *string                      `json:"computerNamePrefix,omitempty"`
	CustomData           *string                      `json:"customData,omitempty"`
	LinuxConfiguration   *LinuxConfiguration_Status   `json:"linuxConfiguration,omitempty"`
	PropertyBag          genruntime.PropertyBag       `json:"$propertyBag,omitempty"`
	Secrets              []VaultSecretGroup_Status    `json:"secrets,omitempty"`
	WindowsConfiguration *WindowsConfiguration_Status `json:"windowsConfiguration,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetStorageProfile_Spec
type VirtualMachineScaleSetStorageProfile_Spec struct {
	DataDisks      []VirtualMachineScaleSetDataDisk_Spec `json:"dataDisks,omitempty"`
	ImageReference *ImageReference_Spec                  `json:"imageReference,omitempty"`
	OsDisk         *VirtualMachineScaleSetOSDisk_Spec    `json:"osDisk,omitempty"`
	PropertyBag    genruntime.PropertyBag                `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetStorageProfile_Status
type VirtualMachineScaleSetStorageProfile_Status struct {
	DataDisks      []VirtualMachineScaleSetDataDisk_Status `json:"dataDisks,omitempty"`
	ImageReference *ImageReference_Status                  `json:"imageReference,omitempty"`
	OsDisk         *VirtualMachineScaleSetOSDisk_Status    `json:"osDisk,omitempty"`
	PropertyBag    genruntime.PropertyBag                  `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.ApiEntityReference_Spec
type ApiEntityReference_Spec struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	//Reference: The ARM resource id in the form of
	///subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Reference *genruntime.ResourceReference `armReference:"Id" json:"reference,omitempty"`
}

//Storage version of v1alpha1api20201201.ApiEntityReference_Status
type ApiEntityReference_Status struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.TerminateNotificationProfile_Spec
type TerminateNotificationProfile_Spec struct {
	Enable           *bool                  `json:"enable,omitempty"`
	NotBeforeTimeout *string                `json:"notBeforeTimeout,omitempty"`
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.TerminateNotificationProfile_Status
type TerminateNotificationProfile_Status struct {
	Enable           *bool                  `json:"enable,omitempty"`
	NotBeforeTimeout *string                `json:"notBeforeTimeout,omitempty"`
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetDataDisk_Spec
type VirtualMachineScaleSetDataDisk_Spec struct {
	Caching                 *string                                           `json:"caching,omitempty"`
	CreateOption            *string                                           `json:"createOption,omitempty"`
	DiskIOPSReadWrite       *int                                              `json:"diskIOPSReadWrite,omitempty"`
	DiskMBpsReadWrite       *int                                              `json:"diskMBpsReadWrite,omitempty"`
	DiskSizeGB              *int                                              `json:"diskSizeGB,omitempty"`
	Lun                     *int                                              `json:"lun,omitempty"`
	ManagedDisk             *VirtualMachineScaleSetManagedDiskParameters_Spec `json:"managedDisk,omitempty"`
	Name                    *string                                           `json:"name,omitempty"`
	PropertyBag             genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
	WriteAcceleratorEnabled *bool                                             `json:"writeAcceleratorEnabled,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetDataDisk_Status
type VirtualMachineScaleSetDataDisk_Status struct {
	Caching                 *string                                             `json:"caching,omitempty"`
	CreateOption            *string                                             `json:"createOption,omitempty"`
	DiskIOPSReadWrite       *int                                                `json:"diskIOPSReadWrite,omitempty"`
	DiskMBpsReadWrite       *int                                                `json:"diskMBpsReadWrite,omitempty"`
	DiskSizeGB              *int                                                `json:"diskSizeGB,omitempty"`
	Lun                     *int                                                `json:"lun,omitempty"`
	ManagedDisk             *VirtualMachineScaleSetManagedDiskParameters_Status `json:"managedDisk,omitempty"`
	Name                    *string                                             `json:"name,omitempty"`
	PropertyBag             genruntime.PropertyBag                              `json:"$propertyBag,omitempty"`
	WriteAcceleratorEnabled *bool                                               `json:"writeAcceleratorEnabled,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetExtension_Status_SubResourceEmbedded
type VirtualMachineScaleSetExtension_Status_SubResourceEmbedded struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkConfiguration_Spec
type VirtualMachineScaleSetNetworkConfiguration_Spec struct {
	DnsSettings                 *VirtualMachineScaleSetNetworkConfigurationDnsSettings_Spec `json:"dnsSettings,omitempty"`
	EnableAcceleratedNetworking *bool                                                       `json:"enableAcceleratedNetworking,omitempty"`
	EnableFpga                  *bool                                                       `json:"enableFpga,omitempty"`
	EnableIPForwarding          *bool                                                       `json:"enableIPForwarding,omitempty"`
	IpConfigurations            []VirtualMachineScaleSetIPConfiguration_Spec                `json:"ipConfigurations,omitempty"`
	Name                        *string                                                     `json:"name,omitempty"`
	NetworkSecurityGroup        *SubResource_Spec                                           `json:"networkSecurityGroup,omitempty"`
	Primary                     *bool                                                       `json:"primary,omitempty"`
	PropertyBag                 genruntime.PropertyBag                                      `json:"$propertyBag,omitempty"`

	//Reference: Resource Id
	Reference *genruntime.ResourceReference `armReference:"Id" json:"reference,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkConfiguration_Status
type VirtualMachineScaleSetNetworkConfiguration_Status struct {
	DnsSettings                 *VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status `json:"dnsSettings,omitempty"`
	EnableAcceleratedNetworking *bool                                                         `json:"enableAcceleratedNetworking,omitempty"`
	EnableFpga                  *bool                                                         `json:"enableFpga,omitempty"`
	EnableIPForwarding          *bool                                                         `json:"enableIPForwarding,omitempty"`
	Id                          *string                                                       `json:"id,omitempty"`
	IpConfigurations            []VirtualMachineScaleSetIPConfiguration_Status                `json:"ipConfigurations,omitempty"`
	Name                        *string                                                       `json:"name,omitempty"`
	NetworkSecurityGroup        *SubResource_Status                                           `json:"networkSecurityGroup,omitempty"`
	Primary                     *bool                                                         `json:"primary,omitempty"`
	PropertyBag                 genruntime.PropertyBag                                        `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetOSDisk_Spec
type VirtualMachineScaleSetOSDisk_Spec struct {
	Caching                 *string                                           `json:"caching,omitempty"`
	CreateOption            *string                                           `json:"createOption,omitempty"`
	DiffDiskSettings        *DiffDiskSettings_Spec                            `json:"diffDiskSettings,omitempty"`
	DiskSizeGB              *int                                              `json:"diskSizeGB,omitempty"`
	Image                   *VirtualHardDisk_Spec                             `json:"image,omitempty"`
	ManagedDisk             *VirtualMachineScaleSetManagedDiskParameters_Spec `json:"managedDisk,omitempty"`
	Name                    *string                                           `json:"name,omitempty"`
	OsType                  *string                                           `json:"osType,omitempty"`
	PropertyBag             genruntime.PropertyBag                            `json:"$propertyBag,omitempty"`
	VhdContainers           []string                                          `json:"vhdContainers,omitempty"`
	WriteAcceleratorEnabled *bool                                             `json:"writeAcceleratorEnabled,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetOSDisk_Status
type VirtualMachineScaleSetOSDisk_Status struct {
	Caching                 *string                                             `json:"caching,omitempty"`
	CreateOption            *string                                             `json:"createOption,omitempty"`
	DiffDiskSettings        *DiffDiskSettings_Status                            `json:"diffDiskSettings,omitempty"`
	DiskSizeGB              *int                                                `json:"diskSizeGB,omitempty"`
	Image                   *VirtualHardDisk_Status                             `json:"image,omitempty"`
	ManagedDisk             *VirtualMachineScaleSetManagedDiskParameters_Status `json:"managedDisk,omitempty"`
	Name                    *string                                             `json:"name,omitempty"`
	OsType                  *string                                             `json:"osType,omitempty"`
	PropertyBag             genruntime.PropertyBag                              `json:"$propertyBag,omitempty"`
	VhdContainers           []string                                            `json:"vhdContainers,omitempty"`
	WriteAcceleratorEnabled *bool                                               `json:"writeAcceleratorEnabled,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIPConfiguration_Spec
type VirtualMachineScaleSetIPConfiguration_Spec struct {
	ApplicationGatewayBackendAddressPools []SubResource_Spec                                       `json:"applicationGatewayBackendAddressPools,omitempty"`
	ApplicationSecurityGroups             []SubResource_Spec                                       `json:"applicationSecurityGroups,omitempty"`
	LoadBalancerBackendAddressPools       []SubResource_Spec                                       `json:"loadBalancerBackendAddressPools,omitempty"`
	LoadBalancerInboundNatPools           []SubResource_Spec                                       `json:"loadBalancerInboundNatPools,omitempty"`
	Name                                  *string                                                  `json:"name,omitempty"`
	Primary                               *bool                                                    `json:"primary,omitempty"`
	PrivateIPAddressVersion               *string                                                  `json:"privateIPAddressVersion,omitempty"`
	PropertyBag                           genruntime.PropertyBag                                   `json:"$propertyBag,omitempty"`
	PublicIPAddressConfiguration          *VirtualMachineScaleSetPublicIPAddressConfiguration_Spec `json:"publicIPAddressConfiguration,omitempty"`

	//Reference: Resource Id
	Reference *genruntime.ResourceReference `armReference:"Id" json:"reference,omitempty"`
	Subnet    *ApiEntityReference_Spec      `json:"subnet,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIPConfiguration_Status
type VirtualMachineScaleSetIPConfiguration_Status struct {
	ApplicationGatewayBackendAddressPools []SubResource_Status                                       `json:"applicationGatewayBackendAddressPools,omitempty"`
	ApplicationSecurityGroups             []SubResource_Status                                       `json:"applicationSecurityGroups,omitempty"`
	Id                                    *string                                                    `json:"id,omitempty"`
	LoadBalancerBackendAddressPools       []SubResource_Status                                       `json:"loadBalancerBackendAddressPools,omitempty"`
	LoadBalancerInboundNatPools           []SubResource_Status                                       `json:"loadBalancerInboundNatPools,omitempty"`
	Name                                  *string                                                    `json:"name,omitempty"`
	Primary                               *bool                                                      `json:"primary,omitempty"`
	PrivateIPAddressVersion               *string                                                    `json:"privateIPAddressVersion,omitempty"`
	PropertyBag                           genruntime.PropertyBag                                     `json:"$propertyBag,omitempty"`
	PublicIPAddressConfiguration          *VirtualMachineScaleSetPublicIPAddressConfiguration_Status `json:"publicIPAddressConfiguration,omitempty"`
	Subnet                                *ApiEntityReference_Status                                 `json:"subnet,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetManagedDiskParameters_Spec
type VirtualMachineScaleSetManagedDiskParameters_Spec struct {
	DiskEncryptionSet  *SubResource_Spec      `json:"diskEncryptionSet,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	StorageAccountType *string                `json:"storageAccountType,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetManagedDiskParameters_Status
type VirtualMachineScaleSetManagedDiskParameters_Status struct {
	DiskEncryptionSet  *SubResource_Status    `json:"diskEncryptionSet,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	StorageAccountType *string                `json:"storageAccountType,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings_Spec
type VirtualMachineScaleSetNetworkConfigurationDnsSettings_Spec struct {
	DnsServers  []string               `json:"dnsServers,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status
type VirtualMachineScaleSetNetworkConfigurationDnsSettings_Status struct {
	DnsServers  []string               `json:"dnsServers,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetPublicIPAddressConfiguration_Spec
type VirtualMachineScaleSetPublicIPAddressConfiguration_Spec struct {
	DnsSettings            *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Spec `json:"dnsSettings,omitempty"`
	IdleTimeoutInMinutes   *int                                                                `json:"idleTimeoutInMinutes,omitempty"`
	IpTags                 []VirtualMachineScaleSetIpTag_Spec                                  `json:"ipTags,omitempty"`
	Name                   *string                                                             `json:"name,omitempty"`
	PropertyBag            genruntime.PropertyBag                                              `json:"$propertyBag,omitempty"`
	PublicIPAddressVersion *string                                                             `json:"publicIPAddressVersion,omitempty"`
	PublicIPPrefix         *SubResource_Spec                                                   `json:"publicIPPrefix,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetPublicIPAddressConfiguration_Status
type VirtualMachineScaleSetPublicIPAddressConfiguration_Status struct {
	DnsSettings            *VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status `json:"dnsSettings,omitempty"`
	IdleTimeoutInMinutes   *int                                                                  `json:"idleTimeoutInMinutes,omitempty"`
	IpTags                 []VirtualMachineScaleSetIpTag_Status                                  `json:"ipTags,omitempty"`
	Name                   *string                                                               `json:"name,omitempty"`
	PropertyBag            genruntime.PropertyBag                                                `json:"$propertyBag,omitempty"`
	PublicIPAddressVersion *string                                                               `json:"publicIPAddressVersion,omitempty"`
	PublicIPPrefix         *SubResource_Status                                                   `json:"publicIPPrefix,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIpTag_Spec
type VirtualMachineScaleSetIpTag_Spec struct {
	IpTagType   *string                `json:"ipTagType,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tag         *string                `json:"tag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetIpTag_Status
type VirtualMachineScaleSetIpTag_Status struct {
	IpTagType   *string                `json:"ipTagType,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tag         *string                `json:"tag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Spec
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Spec struct {
	DomainNameLabel *string                `json:"domainNameLabel,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

//Storage version of v1alpha1api20201201.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status
type VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings_Status struct {
	DomainNameLabel *string                `json:"domainNameLabel,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

func init() {
	SchemeBuilder.Register(&VirtualMachineScaleSet{}, &VirtualMachineScaleSetList{})
}
