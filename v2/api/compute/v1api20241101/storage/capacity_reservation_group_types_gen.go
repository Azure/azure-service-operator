// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/rotisserie/eris"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=compute.azure.com,resources=capacityreservationgroups,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=compute.azure.com,resources={capacityreservationgroups/status,capacityreservationgroups/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:resource:categories={azure,compute}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20241101.CapacityReservationGroup
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2024-11-01/ComputeRP.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}
type CapacityReservationGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CapacityReservationGroup_Spec   `json:"spec,omitempty"`
	Status            CapacityReservationGroup_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &CapacityReservationGroup{}

// GetConditions returns the conditions of the resource
func (group *CapacityReservationGroup) GetConditions() conditions.Conditions {
	return group.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (group *CapacityReservationGroup) SetConditions(conditions conditions.Conditions) {
	group.Status.Conditions = conditions
}

var _ configmaps.Exporter = &CapacityReservationGroup{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (group *CapacityReservationGroup) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if group.Spec.OperatorSpec == nil {
		return nil
	}
	return group.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &CapacityReservationGroup{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (group *CapacityReservationGroup) SecretDestinationExpressions() []*core.DestinationExpression {
	if group.Spec.OperatorSpec == nil {
		return nil
	}
	return group.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &CapacityReservationGroup{}

// AzureName returns the Azure name of the resource
func (group *CapacityReservationGroup) AzureName() string {
	return group.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2024-11-01"
func (group CapacityReservationGroup) GetAPIVersion() string {
	return "2024-11-01"
}

// GetResourceScope returns the scope of the resource
func (group *CapacityReservationGroup) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (group *CapacityReservationGroup) GetSpec() genruntime.ConvertibleSpec {
	return &group.Spec
}

// GetStatus returns the status of this resource
func (group *CapacityReservationGroup) GetStatus() genruntime.ConvertibleStatus {
	return &group.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (group *CapacityReservationGroup) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Compute/capacityReservationGroups"
func (group *CapacityReservationGroup) GetType() string {
	return "Microsoft.Compute/capacityReservationGroups"
}

// NewEmptyStatus returns a new empty (blank) status
func (group *CapacityReservationGroup) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &CapacityReservationGroup_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (group *CapacityReservationGroup) Owner() *genruntime.ResourceReference {
	if group.Spec.Owner == nil {
		return nil
	}

	ownerGroup, ownerKind := genruntime.LookupOwnerGroupKind(group.Spec)
	return group.Spec.Owner.AsResourceReference(ownerGroup, ownerKind)
}

// SetStatus sets the status of this resource
func (group *CapacityReservationGroup) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*CapacityReservationGroup_STATUS); ok {
		group.Status = *st
		return nil
	}

	// Convert status to required version
	var st CapacityReservationGroup_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return eris.Wrap(err, "failed to convert status")
	}

	group.Status = st
	return nil
}

// Hub marks that this CapacityReservationGroup is the hub type for conversion
func (group *CapacityReservationGroup) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (group *CapacityReservationGroup) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: group.Spec.OriginalVersion,
		Kind:    "CapacityReservationGroup",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20241101.CapacityReservationGroup
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2024-11-01/ComputeRP.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}
type CapacityReservationGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CapacityReservationGroup `json:"items"`
}

// Storage version of v1api20241101.CapacityReservationGroup_Spec
type CapacityReservationGroup_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string                                `json:"azureName,omitempty"`
	Location        *string                               `json:"location,omitempty"`
	OperatorSpec    *CapacityReservationGroupOperatorSpec `json:"operatorSpec,omitempty"`
	OriginalVersion string                                `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a resources.azure.com/ResourceGroup resource
	Owner          *genruntime.KnownResourceReference `group:"resources.azure.com" json:"owner,omitempty" kind:"ResourceGroup"`
	PropertyBag    genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	SharingProfile *ResourceSharingProfile            `json:"sharingProfile,omitempty"`
	Tags           map[string]string                  `json:"tags,omitempty"`
	Zones          []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &CapacityReservationGroup_Spec{}

// ConvertSpecFrom populates our CapacityReservationGroup_Spec from the provided source
func (group *CapacityReservationGroup_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(group)
}

// ConvertSpecTo populates the provided destination from our CapacityReservationGroup_Spec
func (group *CapacityReservationGroup_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(group)
}

// Storage version of v1api20241101.CapacityReservationGroup_STATUS
// Specifies information about the capacity reservation group that the capacity reservations should be assigned to.
// Currently, a capacity reservation can only be added to a capacity reservation group at creation time. An existing
// capacity reservation cannot be added or moved to another capacity reservation group.
type CapacityReservationGroup_STATUS struct {
	CapacityReservations      []SubResourceReadOnly_STATUS                 `json:"capacityReservations,omitempty"`
	Conditions                []conditions.Condition                       `json:"conditions,omitempty"`
	Id                        *string                                      `json:"id,omitempty"`
	InstanceView              *CapacityReservationGroupInstanceView_STATUS `json:"instanceView,omitempty"`
	Location                  *string                                      `json:"location,omitempty"`
	Name                      *string                                      `json:"name,omitempty"`
	PropertyBag               genruntime.PropertyBag                       `json:"$propertyBag,omitempty"`
	SharingProfile            *ResourceSharingProfile_STATUS               `json:"sharingProfile,omitempty"`
	SystemData                *SystemData_STATUS                           `json:"systemData,omitempty"`
	Tags                      map[string]string                            `json:"tags,omitempty"`
	Type                      *string                                      `json:"type,omitempty"`
	VirtualMachinesAssociated []SubResourceReadOnly_STATUS                 `json:"virtualMachinesAssociated,omitempty"`
	Zones                     []string                                     `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &CapacityReservationGroup_STATUS{}

// ConvertStatusFrom populates our CapacityReservationGroup_STATUS from the provided source
func (group *CapacityReservationGroup_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(group)
}

// ConvertStatusTo populates the provided destination from our CapacityReservationGroup_STATUS
func (group *CapacityReservationGroup_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == group {
		return eris.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(group)
}

// Storage version of v1api20241101.CapacityReservationGroupInstanceView_STATUS
type CapacityReservationGroupInstanceView_STATUS struct {
	CapacityReservations  []CapacityReservationInstanceViewWithName_STATUS `json:"capacityReservations,omitempty"`
	PropertyBag           genruntime.PropertyBag                           `json:"$propertyBag,omitempty"`
	SharedSubscriptionIds []SubResourceReadOnly_STATUS                     `json:"sharedSubscriptionIds,omitempty"`
}

// Storage version of v1api20241101.CapacityReservationGroupOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type CapacityReservationGroupOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20241101.ResourceSharingProfile
type ResourceSharingProfile struct {
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SubscriptionIds []SubResource          `json:"subscriptionIds,omitempty"`
}

// Storage version of v1api20241101.ResourceSharingProfile_STATUS
type ResourceSharingProfile_STATUS struct {
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SubscriptionIds []SubResource_STATUS   `json:"subscriptionIds,omitempty"`
}

// Storage version of v1api20241101.SubResourceReadOnly_STATUS
type SubResourceReadOnly_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20241101.CapacityReservationInstanceViewWithName_STATUS
// The instance view of a capacity reservation that includes the name of the capacity reservation. It is used for the
// response to the instance view of a capacity reservation group.
type CapacityReservationInstanceViewWithName_STATUS struct {
	Name            *string                                `json:"name,omitempty"`
	PropertyBag     genruntime.PropertyBag                 `json:"$propertyBag,omitempty"`
	Statuses        []InstanceViewStatus_STATUS            `json:"statuses,omitempty"`
	UtilizationInfo *CapacityReservationUtilization_STATUS `json:"utilizationInfo,omitempty"`
}

// Storage version of v1api20241101.CapacityReservationUtilization_STATUS
// Represents the capacity reservation utilization in terms of resources allocated.
type CapacityReservationUtilization_STATUS struct {
	CurrentCapacity          *int                         `json:"currentCapacity,omitempty"`
	PropertyBag              genruntime.PropertyBag       `json:"$propertyBag,omitempty"`
	VirtualMachinesAllocated []SubResourceReadOnly_STATUS `json:"virtualMachinesAllocated,omitempty"`
}

func init() {
	SchemeBuilder.Register(&CapacityReservationGroup{}, &CapacityReservationGroupList{})
}
