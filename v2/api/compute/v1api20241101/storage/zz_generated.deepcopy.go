//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilitySet) DeepCopyInto(out *AvailabilitySet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilitySet.
func (in *AvailabilitySet) DeepCopy() *AvailabilitySet {
	if in == nil {
		return nil
	}
	out := new(AvailabilitySet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AvailabilitySet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilitySetList) DeepCopyInto(out *AvailabilitySetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AvailabilitySet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilitySetList.
func (in *AvailabilitySetList) DeepCopy() *AvailabilitySetList {
	if in == nil {
		return nil
	}
	out := new(AvailabilitySetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AvailabilitySetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilitySetOperatorSpec) DeepCopyInto(out *AvailabilitySetOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilitySetOperatorSpec.
func (in *AvailabilitySetOperatorSpec) DeepCopy() *AvailabilitySetOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(AvailabilitySetOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilitySet_STATUS) DeepCopyInto(out *AvailabilitySet_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PlatformFaultDomainCount != nil {
		in, out := &in.PlatformFaultDomainCount, &out.PlatformFaultDomainCount
		*out = new(int)
		**out = **in
	}
	if in.PlatformUpdateDomainCount != nil {
		in, out := &in.PlatformUpdateDomainCount, &out.PlatformUpdateDomainCount
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProximityPlacementGroup != nil {
		in, out := &in.ProximityPlacementGroup, &out.ProximityPlacementGroup
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduledEventsPolicy != nil {
		in, out := &in.ScheduledEventsPolicy, &out.ScheduledEventsPolicy
		*out = new(ScheduledEventsPolicy_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]InstanceViewStatus_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineScaleSetMigrationInfo != nil {
		in, out := &in.VirtualMachineScaleSetMigrationInfo, &out.VirtualMachineScaleSetMigrationInfo
		*out = new(VirtualMachineScaleSetMigrationInfo_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualMachines != nil {
		in, out := &in.VirtualMachines, &out.VirtualMachines
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilitySet_STATUS.
func (in *AvailabilitySet_STATUS) DeepCopy() *AvailabilitySet_STATUS {
	if in == nil {
		return nil
	}
	out := new(AvailabilitySet_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilitySet_Spec) DeepCopyInto(out *AvailabilitySet_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(AvailabilitySetOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PlatformFaultDomainCount != nil {
		in, out := &in.PlatformFaultDomainCount, &out.PlatformFaultDomainCount
		*out = new(int)
		**out = **in
	}
	if in.PlatformUpdateDomainCount != nil {
		in, out := &in.PlatformUpdateDomainCount, &out.PlatformUpdateDomainCount
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProximityPlacementGroup != nil {
		in, out := &in.ProximityPlacementGroup, &out.ProximityPlacementGroup
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduledEventsPolicy != nil {
		in, out := &in.ScheduledEventsPolicy, &out.ScheduledEventsPolicy
		*out = new(ScheduledEventsPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(Sku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilitySet_Spec.
func (in *AvailabilitySet_Spec) DeepCopy() *AvailabilitySet_Spec {
	if in == nil {
		return nil
	}
	out := new(AvailabilitySet_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroup) DeepCopyInto(out *CapacityReservationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroup.
func (in *CapacityReservationGroup) DeepCopy() *CapacityReservationGroup {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityReservationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroupInstanceView_STATUS) DeepCopyInto(out *CapacityReservationGroupInstanceView_STATUS) {
	*out = *in
	if in.CapacityReservations != nil {
		in, out := &in.CapacityReservations, &out.CapacityReservations
		*out = make([]CapacityReservationInstanceViewWithName_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SharedSubscriptionIds != nil {
		in, out := &in.SharedSubscriptionIds, &out.SharedSubscriptionIds
		*out = make([]SubResourceReadOnly_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroupInstanceView_STATUS.
func (in *CapacityReservationGroupInstanceView_STATUS) DeepCopy() *CapacityReservationGroupInstanceView_STATUS {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroupInstanceView_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroupList) DeepCopyInto(out *CapacityReservationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CapacityReservationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroupList.
func (in *CapacityReservationGroupList) DeepCopy() *CapacityReservationGroupList {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityReservationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroupOperatorSpec) DeepCopyInto(out *CapacityReservationGroupOperatorSpec) {
	*out = *in
	if in.ConfigMapExpressions != nil {
		in, out := &in.ConfigMapExpressions, &out.ConfigMapExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SecretExpressions != nil {
		in, out := &in.SecretExpressions, &out.SecretExpressions
		*out = make([]*core.DestinationExpression, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(core.DestinationExpression)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroupOperatorSpec.
func (in *CapacityReservationGroupOperatorSpec) DeepCopy() *CapacityReservationGroupOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroupOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroup_STATUS) DeepCopyInto(out *CapacityReservationGroup_STATUS) {
	*out = *in
	if in.CapacityReservations != nil {
		in, out := &in.CapacityReservations, &out.CapacityReservations
		*out = make([]SubResourceReadOnly_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.InstanceView != nil {
		in, out := &in.InstanceView, &out.InstanceView
		*out = new(CapacityReservationGroupInstanceView_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SharingProfile != nil {
		in, out := &in.SharingProfile, &out.SharingProfile
		*out = new(ResourceSharingProfile_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemData != nil {
		in, out := &in.SystemData, &out.SystemData
		*out = new(SystemData_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachinesAssociated != nil {
		in, out := &in.VirtualMachinesAssociated, &out.VirtualMachinesAssociated
		*out = make([]SubResourceReadOnly_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroup_STATUS.
func (in *CapacityReservationGroup_STATUS) DeepCopy() *CapacityReservationGroup_STATUS {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroup_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationGroup_Spec) DeepCopyInto(out *CapacityReservationGroup_Spec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.OperatorSpec != nil {
		in, out := &in.OperatorSpec, &out.OperatorSpec
		*out = new(CapacityReservationGroupOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SharingProfile != nil {
		in, out := &in.SharingProfile, &out.SharingProfile
		*out = new(ResourceSharingProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationGroup_Spec.
func (in *CapacityReservationGroup_Spec) DeepCopy() *CapacityReservationGroup_Spec {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationGroup_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationInstanceViewWithName_STATUS) DeepCopyInto(out *CapacityReservationInstanceViewWithName_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]InstanceViewStatus_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UtilizationInfo != nil {
		in, out := &in.UtilizationInfo, &out.UtilizationInfo
		*out = new(CapacityReservationUtilization_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationInstanceViewWithName_STATUS.
func (in *CapacityReservationInstanceViewWithName_STATUS) DeepCopy() *CapacityReservationInstanceViewWithName_STATUS {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationInstanceViewWithName_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationUtilization_STATUS) DeepCopyInto(out *CapacityReservationUtilization_STATUS) {
	*out = *in
	if in.CurrentCapacity != nil {
		in, out := &in.CurrentCapacity, &out.CurrentCapacity
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.VirtualMachinesAllocated != nil {
		in, out := &in.VirtualMachinesAllocated, &out.VirtualMachinesAllocated
		*out = make([]SubResourceReadOnly_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationUtilization_STATUS.
func (in *CapacityReservationUtilization_STATUS) DeepCopy() *CapacityReservationUtilization_STATUS {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationUtilization_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVirtualMachineScaleSetInfo_STATUS) DeepCopyInto(out *DefaultVirtualMachineScaleSetInfo_STATUS) {
	*out = *in
	if in.ConstrainedMaximumCapacity != nil {
		in, out := &in.ConstrainedMaximumCapacity, &out.ConstrainedMaximumCapacity
		*out = new(bool)
		**out = **in
	}
	if in.DefaultVirtualMachineScaleSet != nil {
		in, out := &in.DefaultVirtualMachineScaleSet, &out.DefaultVirtualMachineScaleSet
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVirtualMachineScaleSetInfo_STATUS.
func (in *DefaultVirtualMachineScaleSetInfo_STATUS) DeepCopy() *DefaultVirtualMachineScaleSetInfo_STATUS {
	if in == nil {
		return nil
	}
	out := new(DefaultVirtualMachineScaleSetInfo_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventGridAndResourceGraph) DeepCopyInto(out *EventGridAndResourceGraph) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventGridAndResourceGraph.
func (in *EventGridAndResourceGraph) DeepCopy() *EventGridAndResourceGraph {
	if in == nil {
		return nil
	}
	out := new(EventGridAndResourceGraph)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventGridAndResourceGraph_STATUS) DeepCopyInto(out *EventGridAndResourceGraph_STATUS) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventGridAndResourceGraph_STATUS.
func (in *EventGridAndResourceGraph_STATUS) DeepCopy() *EventGridAndResourceGraph_STATUS {
	if in == nil {
		return nil
	}
	out := new(EventGridAndResourceGraph_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceViewStatus_STATUS) DeepCopyInto(out *InstanceViewStatus_STATUS) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.DisplayStatus != nil {
		in, out := &in.DisplayStatus, &out.DisplayStatus
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceViewStatus_STATUS.
func (in *InstanceViewStatus_STATUS) DeepCopy() *InstanceViewStatus_STATUS {
	if in == nil {
		return nil
	}
	out := new(InstanceViewStatus_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSharingProfile) DeepCopyInto(out *ResourceSharingProfile) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SubscriptionIds != nil {
		in, out := &in.SubscriptionIds, &out.SubscriptionIds
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSharingProfile.
func (in *ResourceSharingProfile) DeepCopy() *ResourceSharingProfile {
	if in == nil {
		return nil
	}
	out := new(ResourceSharingProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSharingProfile_STATUS) DeepCopyInto(out *ResourceSharingProfile_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SubscriptionIds != nil {
		in, out := &in.SubscriptionIds, &out.SubscriptionIds
		*out = make([]SubResource_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSharingProfile_STATUS.
func (in *ResourceSharingProfile_STATUS) DeepCopy() *ResourceSharingProfile_STATUS {
	if in == nil {
		return nil
	}
	out := new(ResourceSharingProfile_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledEventsAdditionalPublishingTargets) DeepCopyInto(out *ScheduledEventsAdditionalPublishingTargets) {
	*out = *in
	if in.EventGridAndResourceGraph != nil {
		in, out := &in.EventGridAndResourceGraph, &out.EventGridAndResourceGraph
		*out = new(EventGridAndResourceGraph)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledEventsAdditionalPublishingTargets.
func (in *ScheduledEventsAdditionalPublishingTargets) DeepCopy() *ScheduledEventsAdditionalPublishingTargets {
	if in == nil {
		return nil
	}
	out := new(ScheduledEventsAdditionalPublishingTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledEventsAdditionalPublishingTargets_STATUS) DeepCopyInto(out *ScheduledEventsAdditionalPublishingTargets_STATUS) {
	*out = *in
	if in.EventGridAndResourceGraph != nil {
		in, out := &in.EventGridAndResourceGraph, &out.EventGridAndResourceGraph
		*out = new(EventGridAndResourceGraph_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledEventsAdditionalPublishingTargets_STATUS.
func (in *ScheduledEventsAdditionalPublishingTargets_STATUS) DeepCopy() *ScheduledEventsAdditionalPublishingTargets_STATUS {
	if in == nil {
		return nil
	}
	out := new(ScheduledEventsAdditionalPublishingTargets_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledEventsPolicy) DeepCopyInto(out *ScheduledEventsPolicy) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ScheduledEventsAdditionalPublishingTargets != nil {
		in, out := &in.ScheduledEventsAdditionalPublishingTargets, &out.ScheduledEventsAdditionalPublishingTargets
		*out = new(ScheduledEventsAdditionalPublishingTargets)
		(*in).DeepCopyInto(*out)
	}
	if in.UserInitiatedReboot != nil {
		in, out := &in.UserInitiatedReboot, &out.UserInitiatedReboot
		*out = new(UserInitiatedReboot)
		(*in).DeepCopyInto(*out)
	}
	if in.UserInitiatedRedeploy != nil {
		in, out := &in.UserInitiatedRedeploy, &out.UserInitiatedRedeploy
		*out = new(UserInitiatedRedeploy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledEventsPolicy.
func (in *ScheduledEventsPolicy) DeepCopy() *ScheduledEventsPolicy {
	if in == nil {
		return nil
	}
	out := new(ScheduledEventsPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledEventsPolicy_STATUS) DeepCopyInto(out *ScheduledEventsPolicy_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ScheduledEventsAdditionalPublishingTargets != nil {
		in, out := &in.ScheduledEventsAdditionalPublishingTargets, &out.ScheduledEventsAdditionalPublishingTargets
		*out = new(ScheduledEventsAdditionalPublishingTargets_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.UserInitiatedReboot != nil {
		in, out := &in.UserInitiatedReboot, &out.UserInitiatedReboot
		*out = new(UserInitiatedReboot_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.UserInitiatedRedeploy != nil {
		in, out := &in.UserInitiatedRedeploy, &out.UserInitiatedRedeploy
		*out = new(UserInitiatedRedeploy_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledEventsPolicy_STATUS.
func (in *ScheduledEventsPolicy_STATUS) DeepCopy() *ScheduledEventsPolicy_STATUS {
	if in == nil {
		return nil
	}
	out := new(ScheduledEventsPolicy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku) DeepCopyInto(out *Sku) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku.
func (in *Sku) DeepCopy() *Sku {
	if in == nil {
		return nil
	}
	out := new(Sku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sku_STATUS) DeepCopyInto(out *Sku_STATUS) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sku_STATUS.
func (in *Sku_STATUS) DeepCopy() *Sku_STATUS {
	if in == nil {
		return nil
	}
	out := new(Sku_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource) DeepCopyInto(out *SubResource) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource.
func (in *SubResource) DeepCopy() *SubResource {
	if in == nil {
		return nil
	}
	out := new(SubResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResourceReadOnly_STATUS) DeepCopyInto(out *SubResourceReadOnly_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResourceReadOnly_STATUS.
func (in *SubResourceReadOnly_STATUS) DeepCopy() *SubResourceReadOnly_STATUS {
	if in == nil {
		return nil
	}
	out := new(SubResourceReadOnly_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource_STATUS) DeepCopyInto(out *SubResource_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource_STATUS.
func (in *SubResource_STATUS) DeepCopy() *SubResource_STATUS {
	if in == nil {
		return nil
	}
	out := new(SubResource_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemData_STATUS) DeepCopyInto(out *SystemData_STATUS) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CreatedByType != nil {
		in, out := &in.CreatedByType, &out.CreatedByType
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedAt != nil {
		in, out := &in.LastModifiedAt, &out.LastModifiedAt
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedBy != nil {
		in, out := &in.LastModifiedBy, &out.LastModifiedBy
		*out = new(string)
		**out = **in
	}
	if in.LastModifiedByType != nil {
		in, out := &in.LastModifiedByType, &out.LastModifiedByType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemData_STATUS.
func (in *SystemData_STATUS) DeepCopy() *SystemData_STATUS {
	if in == nil {
		return nil
	}
	out := new(SystemData_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitiatedReboot) DeepCopyInto(out *UserInitiatedReboot) {
	*out = *in
	if in.AutomaticallyApprove != nil {
		in, out := &in.AutomaticallyApprove, &out.AutomaticallyApprove
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitiatedReboot.
func (in *UserInitiatedReboot) DeepCopy() *UserInitiatedReboot {
	if in == nil {
		return nil
	}
	out := new(UserInitiatedReboot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitiatedReboot_STATUS) DeepCopyInto(out *UserInitiatedReboot_STATUS) {
	*out = *in
	if in.AutomaticallyApprove != nil {
		in, out := &in.AutomaticallyApprove, &out.AutomaticallyApprove
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitiatedReboot_STATUS.
func (in *UserInitiatedReboot_STATUS) DeepCopy() *UserInitiatedReboot_STATUS {
	if in == nil {
		return nil
	}
	out := new(UserInitiatedReboot_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitiatedRedeploy) DeepCopyInto(out *UserInitiatedRedeploy) {
	*out = *in
	if in.AutomaticallyApprove != nil {
		in, out := &in.AutomaticallyApprove, &out.AutomaticallyApprove
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitiatedRedeploy.
func (in *UserInitiatedRedeploy) DeepCopy() *UserInitiatedRedeploy {
	if in == nil {
		return nil
	}
	out := new(UserInitiatedRedeploy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitiatedRedeploy_STATUS) DeepCopyInto(out *UserInitiatedRedeploy_STATUS) {
	*out = *in
	if in.AutomaticallyApprove != nil {
		in, out := &in.AutomaticallyApprove, &out.AutomaticallyApprove
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitiatedRedeploy_STATUS.
func (in *UserInitiatedRedeploy_STATUS) DeepCopy() *UserInitiatedRedeploy_STATUS {
	if in == nil {
		return nil
	}
	out := new(UserInitiatedRedeploy_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualMachineScaleSetMigrationInfo_STATUS) DeepCopyInto(out *VirtualMachineScaleSetMigrationInfo_STATUS) {
	*out = *in
	if in.DefaultVirtualMachineScaleSetInfo != nil {
		in, out := &in.DefaultVirtualMachineScaleSetInfo, &out.DefaultVirtualMachineScaleSetInfo
		*out = new(DefaultVirtualMachineScaleSetInfo_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.MigrateToVirtualMachineScaleSet != nil {
		in, out := &in.MigrateToVirtualMachineScaleSet, &out.MigrateToVirtualMachineScaleSet
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualMachineScaleSetMigrationInfo_STATUS.
func (in *VirtualMachineScaleSetMigrationInfo_STATUS) DeepCopy() *VirtualMachineScaleSetMigrationInfo_STATUS {
	if in == nil {
		return nil
	}
	out := new(VirtualMachineScaleSetMigrationInfo_STATUS)
	in.DeepCopyInto(out)
	return out
}
