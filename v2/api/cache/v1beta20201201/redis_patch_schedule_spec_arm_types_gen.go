// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20201201

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type Redis_PatchSchedule_Spec_ARM struct {
	Name string `json:"name,omitempty"`

	// Properties: List of patch schedules for a Redis cache.
	Properties *ScheduleEntries_ARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Redis_PatchSchedule_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-12-01"
func (schedule Redis_PatchSchedule_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (schedule *Redis_PatchSchedule_Spec_ARM) GetName() string {
	return schedule.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Cache/redis/patchSchedules"
func (schedule *Redis_PatchSchedule_Spec_ARM) GetType() string {
	return "Microsoft.Cache/redis/patchSchedules"
}

// List of patch schedules for a Redis cache.
type ScheduleEntries_ARM struct {
	// ScheduleEntries: List of patch schedules for a Redis cache.
	ScheduleEntries []ScheduleEntry_ARM `json:"scheduleEntries,omitempty"`
}

// Patch schedule entry for a Premium Redis Cache.
type ScheduleEntry_ARM struct {
	// DayOfWeek: Day of the week when a cache can be patched.
	DayOfWeek *ScheduleEntry_DayOfWeek `json:"dayOfWeek,omitempty"`

	// MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.
	MaintenanceWindow *string `json:"maintenanceWindow,omitempty"`

	// StartHourUtc: Start hour after which cache patching can start.
	StartHourUtc *int `json:"startHourUtc,omitempty"`
}
