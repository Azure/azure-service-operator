// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210301

type Cluster_StatusARM struct {
	//Id: Fully qualified resource ID for the resource. Ex -
	///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`

	//Location: The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	//Name: The name of the resource
	Name *string `json:"name,omitempty"`

	//Properties: Other properties of the cluster.
	Properties *ClusterProperties_StatusARM `json:"properties,omitempty"`

	//Sku: The SKU to create, which affects price, performance, and features.
	Sku *Sku_StatusARM `json:"sku,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`

	//Zones: The Availability Zones where this cluster will be deployed.
	Zones []string `json:"zones,omitempty"`
}

type ClusterProperties_StatusARM struct {
	//HostName: DNS name of the cluster endpoint
	HostName *string `json:"hostName,omitempty"`

	//MinimumTlsVersion: The minimum TLS version for the cluster to support, e.g. '1.2'
	MinimumTlsVersion *ClusterPropertiesStatusMinimumTlsVersion `json:"minimumTlsVersion,omitempty"`

	//PrivateEndpointConnections: List of private endpoint connections associated with the specified RedisEnterprise cluster
	PrivateEndpointConnections []PrivateEndpointConnection_Status_SubResourceEmbeddedARM `json:"privateEndpointConnections,omitempty"`

	//ProvisioningState: Current provisioning status of the cluster
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//RedisVersion: Version of redis the cluster supports, e.g. '6'
	RedisVersion *string `json:"redisVersion,omitempty"`

	//ResourceState: Current resource status of the cluster
	ResourceState *ResourceState_Status `json:"resourceState,omitempty"`
}

type Sku_StatusARM struct {
	//Capacity: The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...)
	//for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
	Capacity *int `json:"capacity,omitempty"`

	//Name: The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
	Name SkuStatusName `json:"name"`
}

type ClusterPropertiesStatusMinimumTlsVersion string

const (
	ClusterPropertiesStatusMinimumTlsVersion10 = ClusterPropertiesStatusMinimumTlsVersion("1.0")
	ClusterPropertiesStatusMinimumTlsVersion11 = ClusterPropertiesStatusMinimumTlsVersion("1.1")
	ClusterPropertiesStatusMinimumTlsVersion12 = ClusterPropertiesStatusMinimumTlsVersion("1.2")
)

type PrivateEndpointConnection_Status_SubResourceEmbeddedARM struct {
	//Id: Fully qualified resource ID for the resource. Ex -
	///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id *string `json:"id,omitempty"`
}

type ProvisioningState_Status string

const (
	ProvisioningState_StatusCanceled  = ProvisioningState_Status("Canceled")
	ProvisioningState_StatusCreating  = ProvisioningState_Status("Creating")
	ProvisioningState_StatusDeleting  = ProvisioningState_Status("Deleting")
	ProvisioningState_StatusFailed    = ProvisioningState_Status("Failed")
	ProvisioningState_StatusSucceeded = ProvisioningState_Status("Succeeded")
	ProvisioningState_StatusUpdating  = ProvisioningState_Status("Updating")
)

type ResourceState_Status string

const (
	ResourceState_StatusCreateFailed  = ResourceState_Status("CreateFailed")
	ResourceState_StatusCreating      = ResourceState_Status("Creating")
	ResourceState_StatusDeleteFailed  = ResourceState_Status("DeleteFailed")
	ResourceState_StatusDeleting      = ResourceState_Status("Deleting")
	ResourceState_StatusDisableFailed = ResourceState_Status("DisableFailed")
	ResourceState_StatusDisabled      = ResourceState_Status("Disabled")
	ResourceState_StatusDisabling     = ResourceState_Status("Disabling")
	ResourceState_StatusEnableFailed  = ResourceState_Status("EnableFailed")
	ResourceState_StatusEnabling      = ResourceState_Status("Enabling")
	ResourceState_StatusRunning       = ResourceState_Status("Running")
	ResourceState_StatusUpdateFailed  = ResourceState_Status("UpdateFailed")
	ResourceState_StatusUpdating      = ResourceState_Status("Updating")
)

type SkuStatusName string

const (
	SkuStatusNameEnterpriseE10        = SkuStatusName("Enterprise_E10")
	SkuStatusNameEnterpriseE100       = SkuStatusName("Enterprise_E100")
	SkuStatusNameEnterpriseE20        = SkuStatusName("Enterprise_E20")
	SkuStatusNameEnterpriseE50        = SkuStatusName("Enterprise_E50")
	SkuStatusNameEnterpriseFlashF1500 = SkuStatusName("EnterpriseFlash_F1500")
	SkuStatusNameEnterpriseFlashF300  = SkuStatusName("EnterpriseFlash_F300")
	SkuStatusNameEnterpriseFlashF700  = SkuStatusName("EnterpriseFlash_F700")
)
