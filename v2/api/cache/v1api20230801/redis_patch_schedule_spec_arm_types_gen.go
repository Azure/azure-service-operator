// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20230801

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type Redis_PatchSchedule_Spec_ARM struct {
	Name string `json:"name,omitempty"`

	// Properties: List of patch schedules for a Redis cache.
	Properties *ScheduleEntries_ARM `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Redis_PatchSchedule_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2023-08-01"
func (schedule Redis_PatchSchedule_Spec_ARM) GetAPIVersion() string {
	return "2023-08-01"
}

// GetName returns the Name of the resource
func (schedule *Redis_PatchSchedule_Spec_ARM) GetName() string {
	return schedule.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Cache/redis/patchSchedules"
func (schedule *Redis_PatchSchedule_Spec_ARM) GetType() string {
	return "Microsoft.Cache/redis/patchSchedules"
}

// List of patch schedules for a Redis cache.
type ScheduleEntries_ARM struct {
	// ScheduleEntries: List of patch schedules for a Redis cache.
	ScheduleEntries []ScheduleEntry_ARM `json:"scheduleEntries,omitempty"`
}

// Patch schedule entry for a Premium Redis Cache.
type ScheduleEntry_ARM struct {
	// DayOfWeek: Day of the week when a cache can be patched.
	DayOfWeek *ScheduleEntry_DayOfWeek_ARM `json:"dayOfWeek,omitempty"`

	// MaintenanceWindow: ISO8601 timespan specifying how much time cache patching can take.
	MaintenanceWindow *string `json:"maintenanceWindow,omitempty"`

	// StartHourUtc: Start hour after which cache patching can start.
	StartHourUtc *int `json:"startHourUtc,omitempty"`
}

// +kubebuilder:validation:Enum={"Everyday","Friday","Monday","Saturday","Sunday","Thursday","Tuesday","Wednesday","Weekend"}
type ScheduleEntry_DayOfWeek_ARM string

const (
	ScheduleEntry_DayOfWeek_ARM_Everyday  = ScheduleEntry_DayOfWeek_ARM("Everyday")
	ScheduleEntry_DayOfWeek_ARM_Friday    = ScheduleEntry_DayOfWeek_ARM("Friday")
	ScheduleEntry_DayOfWeek_ARM_Monday    = ScheduleEntry_DayOfWeek_ARM("Monday")
	ScheduleEntry_DayOfWeek_ARM_Saturday  = ScheduleEntry_DayOfWeek_ARM("Saturday")
	ScheduleEntry_DayOfWeek_ARM_Sunday    = ScheduleEntry_DayOfWeek_ARM("Sunday")
	ScheduleEntry_DayOfWeek_ARM_Thursday  = ScheduleEntry_DayOfWeek_ARM("Thursday")
	ScheduleEntry_DayOfWeek_ARM_Tuesday   = ScheduleEntry_DayOfWeek_ARM("Tuesday")
	ScheduleEntry_DayOfWeek_ARM_Wednesday = ScheduleEntry_DayOfWeek_ARM("Wednesday")
	ScheduleEntry_DayOfWeek_ARM_Weekend   = ScheduleEntry_DayOfWeek_ARM("Weekend")
)

// Mapping from string to ScheduleEntry_DayOfWeek_ARM
var scheduleEntry_DayOfWeek_ARM_Values = map[string]ScheduleEntry_DayOfWeek_ARM{
	"everyday":  ScheduleEntry_DayOfWeek_ARM_Everyday,
	"friday":    ScheduleEntry_DayOfWeek_ARM_Friday,
	"monday":    ScheduleEntry_DayOfWeek_ARM_Monday,
	"saturday":  ScheduleEntry_DayOfWeek_ARM_Saturday,
	"sunday":    ScheduleEntry_DayOfWeek_ARM_Sunday,
	"thursday":  ScheduleEntry_DayOfWeek_ARM_Thursday,
	"tuesday":   ScheduleEntry_DayOfWeek_ARM_Tuesday,
	"wednesday": ScheduleEntry_DayOfWeek_ARM_Wednesday,
	"weekend":   ScheduleEntry_DayOfWeek_ARM_Weekend,
}
