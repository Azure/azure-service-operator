// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20230101

// Backup Vault Resource
type BackupVaultResource_STATUS_ARM struct {
	// ETag: Optional ETag.
	ETag *string `json:"eTag,omitempty"`

	// Id: Resource Id represents the complete path to the resource.
	Id *string `json:"id,omitempty"`

	// Identity: Input Managed Identity Details
	Identity *DppIdentityDetails_STATUS_ARM `json:"identity,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Name: Resource name associated with the resource.
	Name *string `json:"name,omitempty"`

	// Properties: BackupVaultResource properties
	Properties *BackupVault_STATUS_ARM `json:"properties,omitempty"`

	// SystemData: Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData_STATUS_ARM `json:"systemData,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `json:"type,omitempty"`
}

// Backup Vault
type BackupVault_STATUS_ARM struct {
	// FeatureSettings: Feature Settings
	FeatureSettings *FeatureSettings_STATUS_ARM `json:"featureSettings,omitempty"`

	// IsVaultProtectedByResourceGuard: Is vault protected by resource guard
	IsVaultProtectedByResourceGuard *bool `json:"isVaultProtectedByResourceGuard,omitempty"`

	// MonitoringSettings: Monitoring Settings
	MonitoringSettings *MonitoringSettings_STATUS_ARM `json:"monitoringSettings,omitempty"`

	// ProvisioningState: Provisioning state of the BackupVault resource
	ProvisioningState *BackupVault_ProvisioningState_STATUS_ARM `json:"provisioningState,omitempty"`

	// ResourceMoveDetails: Resource move details for backup vault
	ResourceMoveDetails *ResourceMoveDetails_STATUS_ARM `json:"resourceMoveDetails,omitempty"`

	// ResourceMoveState: Resource move state for backup vault
	ResourceMoveState *BackupVault_ResourceMoveState_STATUS_ARM `json:"resourceMoveState,omitempty"`

	// SecuritySettings: Security Settings
	SecuritySettings *SecuritySettings_STATUS_ARM `json:"securitySettings,omitempty"`

	// StorageSettings: Storage Settings
	StorageSettings []StorageSetting_STATUS_ARM `json:"storageSettings,omitempty"`
}

// Identity details
type DppIdentityDetails_STATUS_ARM struct {
	// PrincipalId: The object ID of the service principal object for the managed identity that is used to grant role-based
	// access to an Azure resource.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: The identityType which can be either SystemAssigned or None
	Type *string `json:"type,omitempty"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS_ARM struct {
	// CreatedAt: The timestamp of resource creation (UTC).
	CreatedAt *string `json:"createdAt,omitempty"`

	// CreatedBy: The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedByType: The type of identity that created the resource.
	CreatedByType *SystemData_CreatedByType_STATUS_ARM `json:"createdByType,omitempty"`

	// LastModifiedAt: The timestamp of resource last modification (UTC)
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`

	// LastModifiedBy: The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// LastModifiedByType: The type of identity that last modified the resource.
	LastModifiedByType *SystemData_LastModifiedByType_STATUS_ARM `json:"lastModifiedByType,omitempty"`
}

type BackupVault_ProvisioningState_STATUS_ARM string

const (
	BackupVault_ProvisioningState_STATUS_ARM_Failed       = BackupVault_ProvisioningState_STATUS_ARM("Failed")
	BackupVault_ProvisioningState_STATUS_ARM_Provisioning = BackupVault_ProvisioningState_STATUS_ARM("Provisioning")
	BackupVault_ProvisioningState_STATUS_ARM_Succeeded    = BackupVault_ProvisioningState_STATUS_ARM("Succeeded")
	BackupVault_ProvisioningState_STATUS_ARM_Unknown      = BackupVault_ProvisioningState_STATUS_ARM("Unknown")
	BackupVault_ProvisioningState_STATUS_ARM_Updating     = BackupVault_ProvisioningState_STATUS_ARM("Updating")
)

// Mapping from string to BackupVault_ProvisioningState_STATUS_ARM
var backupVault_ProvisioningState_STATUS_ARM_Values = map[string]BackupVault_ProvisioningState_STATUS_ARM{
	"failed":       BackupVault_ProvisioningState_STATUS_ARM_Failed,
	"provisioning": BackupVault_ProvisioningState_STATUS_ARM_Provisioning,
	"succeeded":    BackupVault_ProvisioningState_STATUS_ARM_Succeeded,
	"unknown":      BackupVault_ProvisioningState_STATUS_ARM_Unknown,
	"updating":     BackupVault_ProvisioningState_STATUS_ARM_Updating,
}

type BackupVault_ResourceMoveState_STATUS_ARM string

const (
	BackupVault_ResourceMoveState_STATUS_ARM_CommitFailed    = BackupVault_ResourceMoveState_STATUS_ARM("CommitFailed")
	BackupVault_ResourceMoveState_STATUS_ARM_CommitTimedout  = BackupVault_ResourceMoveState_STATUS_ARM("CommitTimedout")
	BackupVault_ResourceMoveState_STATUS_ARM_CriticalFailure = BackupVault_ResourceMoveState_STATUS_ARM("CriticalFailure")
	BackupVault_ResourceMoveState_STATUS_ARM_Failed          = BackupVault_ResourceMoveState_STATUS_ARM("Failed")
	BackupVault_ResourceMoveState_STATUS_ARM_InProgress      = BackupVault_ResourceMoveState_STATUS_ARM("InProgress")
	BackupVault_ResourceMoveState_STATUS_ARM_MoveSucceeded   = BackupVault_ResourceMoveState_STATUS_ARM("MoveSucceeded")
	BackupVault_ResourceMoveState_STATUS_ARM_PartialSuccess  = BackupVault_ResourceMoveState_STATUS_ARM("PartialSuccess")
	BackupVault_ResourceMoveState_STATUS_ARM_PrepareFailed   = BackupVault_ResourceMoveState_STATUS_ARM("PrepareFailed")
	BackupVault_ResourceMoveState_STATUS_ARM_PrepareTimedout = BackupVault_ResourceMoveState_STATUS_ARM("PrepareTimedout")
	BackupVault_ResourceMoveState_STATUS_ARM_Unknown         = BackupVault_ResourceMoveState_STATUS_ARM("Unknown")
)

// Mapping from string to BackupVault_ResourceMoveState_STATUS_ARM
var backupVault_ResourceMoveState_STATUS_ARM_Values = map[string]BackupVault_ResourceMoveState_STATUS_ARM{
	"commitfailed":    BackupVault_ResourceMoveState_STATUS_ARM_CommitFailed,
	"committimedout":  BackupVault_ResourceMoveState_STATUS_ARM_CommitTimedout,
	"criticalfailure": BackupVault_ResourceMoveState_STATUS_ARM_CriticalFailure,
	"failed":          BackupVault_ResourceMoveState_STATUS_ARM_Failed,
	"inprogress":      BackupVault_ResourceMoveState_STATUS_ARM_InProgress,
	"movesucceeded":   BackupVault_ResourceMoveState_STATUS_ARM_MoveSucceeded,
	"partialsuccess":  BackupVault_ResourceMoveState_STATUS_ARM_PartialSuccess,
	"preparefailed":   BackupVault_ResourceMoveState_STATUS_ARM_PrepareFailed,
	"preparetimedout": BackupVault_ResourceMoveState_STATUS_ARM_PrepareTimedout,
	"unknown":         BackupVault_ResourceMoveState_STATUS_ARM_Unknown,
}

// Class containing feature settings of vault
type FeatureSettings_STATUS_ARM struct {
	// CrossSubscriptionRestoreSettings: CrossSubscriptionRestore Settings
	CrossSubscriptionRestoreSettings *CrossSubscriptionRestoreSettings_STATUS_ARM `json:"crossSubscriptionRestoreSettings,omitempty"`
}

// Monitoring Settings
type MonitoringSettings_STATUS_ARM struct {
	// AzureMonitorAlertSettings: Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings *AzureMonitorAlertSettings_STATUS_ARM `json:"azureMonitorAlertSettings,omitempty"`
}

// ResourceMoveDetails will be returned in response to GetResource call from ARM
type ResourceMoveDetails_STATUS_ARM struct {
	// CompletionTimeUtc: Completion time in UTC of latest ResourceMove operation attempted. ISO 8601 format.
	CompletionTimeUtc *string `json:"completionTimeUtc,omitempty"`

	// OperationId: CorrelationId of latest ResourceMove operation attempted
	OperationId *string `json:"operationId,omitempty"`

	// SourceResourcePath: ARM resource path of source resource
	SourceResourcePath *string `json:"sourceResourcePath,omitempty"`

	// StartTimeUtc: Start time in UTC of latest ResourceMove operation attempted. ISO 8601 format.
	StartTimeUtc *string `json:"startTimeUtc,omitempty"`

	// TargetResourcePath: ARM resource path of target resource used in latest ResourceMove operation
	TargetResourcePath *string `json:"targetResourcePath,omitempty"`
}

// Class containing security settings of vault
type SecuritySettings_STATUS_ARM struct {
	// ImmutabilitySettings: Immutability Settings at vault level
	ImmutabilitySettings *ImmutabilitySettings_STATUS_ARM `json:"immutabilitySettings,omitempty"`

	// SoftDeleteSettings: Soft delete related settings
	SoftDeleteSettings *SoftDeleteSettings_STATUS_ARM `json:"softDeleteSettings,omitempty"`
}

// Storage setting
type StorageSetting_STATUS_ARM struct {
	// DatastoreType: Gets or sets the type of the datastore.
	DatastoreType *StorageSetting_DatastoreType_STATUS_ARM `json:"datastoreType,omitempty"`

	// Type: Gets or sets the type.
	Type *StorageSetting_Type_STATUS_ARM `json:"type,omitempty"`
}

type SystemData_CreatedByType_STATUS_ARM string

const (
	SystemData_CreatedByType_STATUS_ARM_Application     = SystemData_CreatedByType_STATUS_ARM("Application")
	SystemData_CreatedByType_STATUS_ARM_Key             = SystemData_CreatedByType_STATUS_ARM("Key")
	SystemData_CreatedByType_STATUS_ARM_ManagedIdentity = SystemData_CreatedByType_STATUS_ARM("ManagedIdentity")
	SystemData_CreatedByType_STATUS_ARM_User            = SystemData_CreatedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_CreatedByType_STATUS_ARM
var systemData_CreatedByType_STATUS_ARM_Values = map[string]SystemData_CreatedByType_STATUS_ARM{
	"application":     SystemData_CreatedByType_STATUS_ARM_Application,
	"key":             SystemData_CreatedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_CreatedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_CreatedByType_STATUS_ARM_User,
}

type SystemData_LastModifiedByType_STATUS_ARM string

const (
	SystemData_LastModifiedByType_STATUS_ARM_Application     = SystemData_LastModifiedByType_STATUS_ARM("Application")
	SystemData_LastModifiedByType_STATUS_ARM_Key             = SystemData_LastModifiedByType_STATUS_ARM("Key")
	SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity = SystemData_LastModifiedByType_STATUS_ARM("ManagedIdentity")
	SystemData_LastModifiedByType_STATUS_ARM_User            = SystemData_LastModifiedByType_STATUS_ARM("User")
)

// Mapping from string to SystemData_LastModifiedByType_STATUS_ARM
var systemData_LastModifiedByType_STATUS_ARM_Values = map[string]SystemData_LastModifiedByType_STATUS_ARM{
	"application":     SystemData_LastModifiedByType_STATUS_ARM_Application,
	"key":             SystemData_LastModifiedByType_STATUS_ARM_Key,
	"managedidentity": SystemData_LastModifiedByType_STATUS_ARM_ManagedIdentity,
	"user":            SystemData_LastModifiedByType_STATUS_ARM_User,
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettings_STATUS_ARM struct {
	AlertsForAllJobFailures *AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM `json:"alertsForAllJobFailures,omitempty"`
}

// CrossSubscriptionRestore Settings
type CrossSubscriptionRestoreSettings_STATUS_ARM struct {
	// State: CrossSubscriptionRestore state
	State *CrossSubscriptionRestoreSettings_State_STATUS_ARM `json:"state,omitempty"`
}

// Immutability Settings at vault level
type ImmutabilitySettings_STATUS_ARM struct {
	// State: Immutability state
	State *ImmutabilitySettings_State_STATUS_ARM `json:"state,omitempty"`
}

// Soft delete related settings
type SoftDeleteSettings_STATUS_ARM struct {
	// RetentionDurationInDays: Soft delete retention duration
	RetentionDurationInDays *float64 `json:"retentionDurationInDays,omitempty"`

	// State: State of soft delete
	State *SoftDeleteSettings_State_STATUS_ARM `json:"state,omitempty"`
}

type StorageSetting_DatastoreType_STATUS_ARM string

const (
	StorageSetting_DatastoreType_STATUS_ARM_ArchiveStore     = StorageSetting_DatastoreType_STATUS_ARM("ArchiveStore")
	StorageSetting_DatastoreType_STATUS_ARM_OperationalStore = StorageSetting_DatastoreType_STATUS_ARM("OperationalStore")
	StorageSetting_DatastoreType_STATUS_ARM_VaultStore       = StorageSetting_DatastoreType_STATUS_ARM("VaultStore")
)

// Mapping from string to StorageSetting_DatastoreType_STATUS_ARM
var storageSetting_DatastoreType_STATUS_ARM_Values = map[string]StorageSetting_DatastoreType_STATUS_ARM{
	"archivestore":     StorageSetting_DatastoreType_STATUS_ARM_ArchiveStore,
	"operationalstore": StorageSetting_DatastoreType_STATUS_ARM_OperationalStore,
	"vaultstore":       StorageSetting_DatastoreType_STATUS_ARM_VaultStore,
}

type StorageSetting_Type_STATUS_ARM string

const (
	StorageSetting_Type_STATUS_ARM_GeoRedundant     = StorageSetting_Type_STATUS_ARM("GeoRedundant")
	StorageSetting_Type_STATUS_ARM_LocallyRedundant = StorageSetting_Type_STATUS_ARM("LocallyRedundant")
	StorageSetting_Type_STATUS_ARM_ZoneRedundant    = StorageSetting_Type_STATUS_ARM("ZoneRedundant")
)

// Mapping from string to StorageSetting_Type_STATUS_ARM
var storageSetting_Type_STATUS_ARM_Values = map[string]StorageSetting_Type_STATUS_ARM{
	"georedundant":     StorageSetting_Type_STATUS_ARM_GeoRedundant,
	"locallyredundant": StorageSetting_Type_STATUS_ARM_LocallyRedundant,
	"zoneredundant":    StorageSetting_Type_STATUS_ARM_ZoneRedundant,
}

type AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM string

const (
	AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM_Disabled = AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM("Disabled")
	AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM_Enabled  = AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM("Enabled")
)

// Mapping from string to AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM
var azureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM_Values = map[string]AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM{
	"disabled": AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM_Disabled,
	"enabled":  AzureMonitorAlertSettings_AlertsForAllJobFailures_STATUS_ARM_Enabled,
}

type CrossSubscriptionRestoreSettings_State_STATUS_ARM string

const (
	CrossSubscriptionRestoreSettings_State_STATUS_ARM_Disabled            = CrossSubscriptionRestoreSettings_State_STATUS_ARM("Disabled")
	CrossSubscriptionRestoreSettings_State_STATUS_ARM_Enabled             = CrossSubscriptionRestoreSettings_State_STATUS_ARM("Enabled")
	CrossSubscriptionRestoreSettings_State_STATUS_ARM_PermanentlyDisabled = CrossSubscriptionRestoreSettings_State_STATUS_ARM("PermanentlyDisabled")
)

// Mapping from string to CrossSubscriptionRestoreSettings_State_STATUS_ARM
var crossSubscriptionRestoreSettings_State_STATUS_ARM_Values = map[string]CrossSubscriptionRestoreSettings_State_STATUS_ARM{
	"disabled":            CrossSubscriptionRestoreSettings_State_STATUS_ARM_Disabled,
	"enabled":             CrossSubscriptionRestoreSettings_State_STATUS_ARM_Enabled,
	"permanentlydisabled": CrossSubscriptionRestoreSettings_State_STATUS_ARM_PermanentlyDisabled,
}

type ImmutabilitySettings_State_STATUS_ARM string

const (
	ImmutabilitySettings_State_STATUS_ARM_Disabled = ImmutabilitySettings_State_STATUS_ARM("Disabled")
	ImmutabilitySettings_State_STATUS_ARM_Locked   = ImmutabilitySettings_State_STATUS_ARM("Locked")
	ImmutabilitySettings_State_STATUS_ARM_Unlocked = ImmutabilitySettings_State_STATUS_ARM("Unlocked")
)

// Mapping from string to ImmutabilitySettings_State_STATUS_ARM
var immutabilitySettings_State_STATUS_ARM_Values = map[string]ImmutabilitySettings_State_STATUS_ARM{
	"disabled": ImmutabilitySettings_State_STATUS_ARM_Disabled,
	"locked":   ImmutabilitySettings_State_STATUS_ARM_Locked,
	"unlocked": ImmutabilitySettings_State_STATUS_ARM_Unlocked,
}

type SoftDeleteSettings_State_STATUS_ARM string

const (
	SoftDeleteSettings_State_STATUS_ARM_AlwaysOn = SoftDeleteSettings_State_STATUS_ARM("AlwaysOn")
	SoftDeleteSettings_State_STATUS_ARM_Off      = SoftDeleteSettings_State_STATUS_ARM("Off")
	SoftDeleteSettings_State_STATUS_ARM_On       = SoftDeleteSettings_State_STATUS_ARM("On")
)

// Mapping from string to SoftDeleteSettings_State_STATUS_ARM
var softDeleteSettings_State_STATUS_ARM_Values = map[string]SoftDeleteSettings_State_STATUS_ARM{
	"alwayson": SoftDeleteSettings_State_STATUS_ARM_AlwaysOn,
	"off":      SoftDeleteSettings_State_STATUS_ARM_Off,
	"on":       SoftDeleteSettings_State_STATUS_ARM_On,
}
