// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1alpha1api20210601

import (
	"encoding/json"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
)

// Deprecated version of ProfilesEndpoints_Spec. Use v1beta20210601.ProfilesEndpoints_Spec instead
type ProfilesEndpoints_SpecARM struct {
	Location   *string                               `json:"location,omitempty"`
	Name       string                                `json:"name,omitempty"`
	Properties *ProfilesEndpoints_Spec_PropertiesARM `json:"properties,omitempty"`
	Tags       map[string]string                     `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &ProfilesEndpoints_SpecARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-06-01"
func (endpoints ProfilesEndpoints_SpecARM) GetAPIVersion() string {
	return "2021-06-01"
}

// GetName returns the Name of the resource
func (endpoints ProfilesEndpoints_SpecARM) GetName() string {
	return endpoints.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Cdn/profiles/endpoints"
func (endpoints ProfilesEndpoints_SpecARM) GetType() string {
	return "Microsoft.Cdn/profiles/endpoints"
}

// Deprecated version of ProfilesEndpoints_Spec_Properties. Use v1beta20210601.ProfilesEndpoints_Spec_Properties instead
type ProfilesEndpoints_Spec_PropertiesARM struct {
	ContentTypesToCompress           []string                                                               `json:"contentTypesToCompress,omitempty"`
	DefaultOriginGroup               *ResourceReferenceARM                                                  `json:"defaultOriginGroup,omitempty"`
	DeliveryPolicy                   *EndpointPropertiesUpdateParametersDeliveryPolicyARM                   `json:"deliveryPolicy,omitempty"`
	GeoFilters                       []GeoFilterARM                                                         `json:"geoFilters,omitempty"`
	IsCompressionEnabled             *bool                                                                  `json:"isCompressionEnabled,omitempty"`
	IsHttpAllowed                    *bool                                                                  `json:"isHttpAllowed,omitempty"`
	IsHttpsAllowed                   *bool                                                                  `json:"isHttpsAllowed,omitempty"`
	OptimizationType                 *ProfilesEndpointsSpecPropertiesOptimizationType                       `json:"optimizationType,omitempty"`
	OriginGroups                     []ProfilesEndpoints_Spec_Properties_OriginGroupsARM                    `json:"originGroups,omitempty"`
	OriginHostHeader                 *string                                                                `json:"originHostHeader,omitempty"`
	OriginPath                       *string                                                                `json:"originPath,omitempty"`
	Origins                          []ProfilesEndpoints_Spec_Properties_OriginsARM                         `json:"origins,omitempty"`
	ProbePath                        *string                                                                `json:"probePath,omitempty"`
	QueryStringCachingBehavior       *ProfilesEndpointsSpecPropertiesQueryStringCachingBehavior             `json:"queryStringCachingBehavior,omitempty"`
	UrlSigningKeys                   []UrlSigningKeyARM                                                     `json:"urlSigningKeys,omitempty"`
	WebApplicationFirewallPolicyLink *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkARM `json:"webApplicationFirewallPolicyLink,omitempty"`
}

// Deprecated version of EndpointPropertiesUpdateParametersDeliveryPolicy. Use v1beta20210601.EndpointPropertiesUpdateParametersDeliveryPolicy instead
type EndpointPropertiesUpdateParametersDeliveryPolicyARM struct {
	Description *string           `json:"description,omitempty"`
	Rules       []DeliveryRuleARM `json:"rules,omitempty"`
}

// Deprecated version of EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink. Use v1beta20210601.EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink instead
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkARM struct {
	Id *string `json:"id,omitempty"`
}

// Deprecated version of GeoFilter. Use v1beta20210601.GeoFilter instead
type GeoFilterARM struct {
	Action       *GeoFilterAction `json:"action,omitempty"`
	CountryCodes []string         `json:"countryCodes,omitempty"`
	RelativePath *string          `json:"relativePath,omitempty"`
}

// Deprecated version of ProfilesEndpoints_Spec_Properties_OriginGroups. Use v1beta20210601.ProfilesEndpoints_Spec_Properties_OriginGroups instead
type ProfilesEndpoints_Spec_Properties_OriginGroupsARM struct {
	Name       *string                              `json:"name,omitempty"`
	Properties *DeepCreatedOriginGroupPropertiesARM `json:"properties,omitempty"`
}

// Deprecated version of ProfilesEndpoints_Spec_Properties_Origins. Use v1beta20210601.ProfilesEndpoints_Spec_Properties_Origins instead
type ProfilesEndpoints_Spec_Properties_OriginsARM struct {
	Name       *string                         `json:"name,omitempty"`
	Properties *DeepCreatedOriginPropertiesARM `json:"properties,omitempty"`
}

// Deprecated version of ResourceReference. Use v1beta20210601.ResourceReference instead
type ResourceReferenceARM struct {
	Id *string `json:"id,omitempty"`
}

// Deprecated version of UrlSigningKey. Use v1beta20210601.UrlSigningKey instead
type UrlSigningKeyARM struct {
	KeyId               *string                          `json:"keyId,omitempty"`
	KeySourceParameters *KeyVaultSigningKeyParametersARM `json:"keySourceParameters,omitempty"`
}

// Deprecated version of DeepCreatedOriginGroupProperties. Use v1beta20210601.DeepCreatedOriginGroupProperties instead
type DeepCreatedOriginGroupPropertiesARM struct {
	HealthProbeSettings                                   *HealthProbeParametersARM                       `json:"healthProbeSettings,omitempty"`
	Origins                                               []ResourceReferenceARM                          `json:"origins,omitempty"`
	ResponseBasedOriginErrorDetectionSettings             *ResponseBasedOriginErrorDetectionParametersARM `json:"responseBasedOriginErrorDetectionSettings,omitempty"`
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int                                            `json:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes,omitempty"`
}

// Deprecated version of DeepCreatedOriginProperties. Use v1beta20210601.DeepCreatedOriginProperties instead
type DeepCreatedOriginPropertiesARM struct {
	Enabled                    *bool   `json:"enabled,omitempty"`
	HostName                   *string `json:"hostName,omitempty"`
	HttpPort                   *int    `json:"httpPort,omitempty"`
	HttpsPort                  *int    `json:"httpsPort,omitempty"`
	OriginHostHeader           *string `json:"originHostHeader,omitempty"`
	Priority                   *int    `json:"priority,omitempty"`
	PrivateLinkAlias           *string `json:"privateLinkAlias,omitempty"`
	PrivateLinkApprovalMessage *string `json:"privateLinkApprovalMessage,omitempty"`
	PrivateLinkLocation        *string `json:"privateLinkLocation,omitempty"`
	PrivateLinkResourceId      *string `json:"privateLinkResourceId,omitempty"`
	Weight                     *int    `json:"weight,omitempty"`
}

// Deprecated version of DeliveryRule. Use v1beta20210601.DeliveryRule instead
type DeliveryRuleARM struct {
	Actions    []DeliveryRuleAction1ARM   `json:"actions,omitempty"`
	Conditions []DeliveryRuleConditionARM `json:"conditions,omitempty"`
	Name       *string                    `json:"name,omitempty"`
	Order      *int                       `json:"order,omitempty"`
}

// Deprecated version of KeyVaultSigningKeyParameters. Use v1beta20210601.KeyVaultSigningKeyParameters instead
type KeyVaultSigningKeyParametersARM struct {
	ResourceGroupName *string                               `json:"resourceGroupName,omitempty"`
	SecretName        *string                               `json:"secretName,omitempty"`
	SecretVersion     *string                               `json:"secretVersion,omitempty"`
	SubscriptionId    *string                               `json:"subscriptionId,omitempty"`
	TypeName          *KeyVaultSigningKeyParametersTypeName `json:"typeName,omitempty"`
	VaultName         *string                               `json:"vaultName,omitempty"`
}

// Deprecated version of DeliveryRuleAction1. Use v1beta20210601.DeliveryRuleAction1 instead
type DeliveryRuleAction1ARM struct {
	DeliveryRuleCacheExpiration            *DeliveryRuleCacheExpirationActionARM            `json:"deliveryRuleCacheExpirationAction,omitempty"`
	DeliveryRuleCacheKeyQueryString        *DeliveryRuleCacheKeyQueryStringActionARM        `json:"deliveryRuleCacheKeyQueryStringAction,omitempty"`
	DeliveryRuleRequestHeader              *DeliveryRuleRequestHeaderActionARM              `json:"deliveryRuleRequestHeaderAction,omitempty"`
	DeliveryRuleResponseHeader             *DeliveryRuleResponseHeaderActionARM             `json:"deliveryRuleResponseHeaderAction,omitempty"`
	DeliveryRuleRouteConfigurationOverride *DeliveryRuleRouteConfigurationOverrideActionARM `json:"deliveryRuleRouteConfigurationOverrideAction,omitempty"`
	OriginGroupOverride                    *OriginGroupOverrideActionARM                    `json:"originGroupOverrideAction,omitempty"`
	UrlRedirect                            *UrlRedirectActionARM                            `json:"urlRedirectAction,omitempty"`
	UrlRewrite                             *UrlRewriteActionARM                             `json:"urlRewriteAction,omitempty"`
	UrlSigning                             *UrlSigningActionARM                             `json:"urlSigningAction,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because DeliveryRuleAction1ARM represents a discriminated union (JSON OneOf)
func (action1 DeliveryRuleAction1ARM) MarshalJSON() ([]byte, error) {
	if action1.DeliveryRuleCacheExpiration != nil {
		return json.Marshal(action1.DeliveryRuleCacheExpiration)
	}
	if action1.DeliveryRuleCacheKeyQueryString != nil {
		return json.Marshal(action1.DeliveryRuleCacheKeyQueryString)
	}
	if action1.DeliveryRuleRequestHeader != nil {
		return json.Marshal(action1.DeliveryRuleRequestHeader)
	}
	if action1.DeliveryRuleResponseHeader != nil {
		return json.Marshal(action1.DeliveryRuleResponseHeader)
	}
	if action1.DeliveryRuleRouteConfigurationOverride != nil {
		return json.Marshal(action1.DeliveryRuleRouteConfigurationOverride)
	}
	if action1.OriginGroupOverride != nil {
		return json.Marshal(action1.OriginGroupOverride)
	}
	if action1.UrlRedirect != nil {
		return json.Marshal(action1.UrlRedirect)
	}
	if action1.UrlRewrite != nil {
		return json.Marshal(action1.UrlRewrite)
	}
	if action1.UrlSigning != nil {
		return json.Marshal(action1.UrlSigning)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the DeliveryRuleAction1ARM
func (action1 *DeliveryRuleAction1ARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["name"]
	if discriminator == "CacheExpiration" {
		action1.DeliveryRuleCacheExpiration = &DeliveryRuleCacheExpirationActionARM{}
		return json.Unmarshal(data, action1.DeliveryRuleCacheExpiration)
	}
	if discriminator == "CacheKeyQueryString" {
		action1.DeliveryRuleCacheKeyQueryString = &DeliveryRuleCacheKeyQueryStringActionARM{}
		return json.Unmarshal(data, action1.DeliveryRuleCacheKeyQueryString)
	}
	if discriminator == "ModifyRequestHeader" {
		action1.DeliveryRuleRequestHeader = &DeliveryRuleRequestHeaderActionARM{}
		return json.Unmarshal(data, action1.DeliveryRuleRequestHeader)
	}
	if discriminator == "ModifyResponseHeader" {
		action1.DeliveryRuleResponseHeader = &DeliveryRuleResponseHeaderActionARM{}
		return json.Unmarshal(data, action1.DeliveryRuleResponseHeader)
	}
	if discriminator == "OriginGroupOverride" {
		action1.OriginGroupOverride = &OriginGroupOverrideActionARM{}
		return json.Unmarshal(data, action1.OriginGroupOverride)
	}
	if discriminator == "RouteConfigurationOverride" {
		action1.DeliveryRuleRouteConfigurationOverride = &DeliveryRuleRouteConfigurationOverrideActionARM{}
		return json.Unmarshal(data, action1.DeliveryRuleRouteConfigurationOverride)
	}
	if discriminator == "UrlRedirect" {
		action1.UrlRedirect = &UrlRedirectActionARM{}
		return json.Unmarshal(data, action1.UrlRedirect)
	}
	if discriminator == "UrlRewrite" {
		action1.UrlRewrite = &UrlRewriteActionARM{}
		return json.Unmarshal(data, action1.UrlRewrite)
	}
	if discriminator == "UrlSigning" {
		action1.UrlSigning = &UrlSigningActionARM{}
		return json.Unmarshal(data, action1.UrlSigning)
	}

	// No error
	return nil
}

// Deprecated version of DeliveryRuleCondition. Use v1beta20210601.DeliveryRuleCondition instead
type DeliveryRuleConditionARM struct {
	DeliveryRuleClientPort       *DeliveryRuleClientPortConditionARM       `json:"deliveryRuleClientPortCondition,omitempty"`
	DeliveryRuleCookies          *DeliveryRuleCookiesConditionARM          `json:"deliveryRuleCookiesCondition,omitempty"`
	DeliveryRuleHostName         *DeliveryRuleHostNameConditionARM         `json:"deliveryRuleHostNameCondition,omitempty"`
	DeliveryRuleHttpVersion      *DeliveryRuleHttpVersionConditionARM      `json:"deliveryRuleHttpVersionCondition,omitempty"`
	DeliveryRuleIsDevice         *DeliveryRuleIsDeviceConditionARM         `json:"deliveryRuleIsDeviceCondition,omitempty"`
	DeliveryRulePostArgs         *DeliveryRulePostArgsConditionARM         `json:"deliveryRulePostArgsCondition,omitempty"`
	DeliveryRuleQueryString      *DeliveryRuleQueryStringConditionARM      `json:"deliveryRuleQueryStringCondition,omitempty"`
	DeliveryRuleRemoteAddress    *DeliveryRuleRemoteAddressConditionARM    `json:"deliveryRuleRemoteAddressCondition,omitempty"`
	DeliveryRuleRequestBody      *DeliveryRuleRequestBodyConditionARM      `json:"deliveryRuleRequestBodyCondition,omitempty"`
	DeliveryRuleRequestHeader    *DeliveryRuleRequestHeaderConditionARM    `json:"deliveryRuleRequestHeaderCondition,omitempty"`
	DeliveryRuleRequestMethod    *DeliveryRuleRequestMethodConditionARM    `json:"deliveryRuleRequestMethodCondition,omitempty"`
	DeliveryRuleRequestScheme    *DeliveryRuleRequestSchemeConditionARM    `json:"deliveryRuleRequestSchemeCondition,omitempty"`
	DeliveryRuleRequestUri       *DeliveryRuleRequestUriConditionARM       `json:"deliveryRuleRequestUriCondition,omitempty"`
	DeliveryRuleServerPort       *DeliveryRuleServerPortConditionARM       `json:"deliveryRuleServerPortCondition,omitempty"`
	DeliveryRuleSocketAddr       *DeliveryRuleSocketAddrConditionARM       `json:"deliveryRuleSocketAddrCondition,omitempty"`
	DeliveryRuleSslProtocol      *DeliveryRuleSslProtocolConditionARM      `json:"deliveryRuleSslProtocolCondition,omitempty"`
	DeliveryRuleUrlFileExtension *DeliveryRuleUrlFileExtensionConditionARM `json:"deliveryRuleUrlFileExtensionCondition,omitempty"`
	DeliveryRuleUrlFileName      *DeliveryRuleUrlFileNameConditionARM      `json:"deliveryRuleUrlFileNameCondition,omitempty"`
	DeliveryRuleUrlPath          *DeliveryRuleUrlPathConditionARM          `json:"deliveryRuleUrlPathCondition,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because DeliveryRuleConditionARM represents a discriminated union (JSON OneOf)
func (condition DeliveryRuleConditionARM) MarshalJSON() ([]byte, error) {
	if condition.DeliveryRuleClientPort != nil {
		return json.Marshal(condition.DeliveryRuleClientPort)
	}
	if condition.DeliveryRuleCookies != nil {
		return json.Marshal(condition.DeliveryRuleCookies)
	}
	if condition.DeliveryRuleHostName != nil {
		return json.Marshal(condition.DeliveryRuleHostName)
	}
	if condition.DeliveryRuleHttpVersion != nil {
		return json.Marshal(condition.DeliveryRuleHttpVersion)
	}
	if condition.DeliveryRuleIsDevice != nil {
		return json.Marshal(condition.DeliveryRuleIsDevice)
	}
	if condition.DeliveryRulePostArgs != nil {
		return json.Marshal(condition.DeliveryRulePostArgs)
	}
	if condition.DeliveryRuleQueryString != nil {
		return json.Marshal(condition.DeliveryRuleQueryString)
	}
	if condition.DeliveryRuleRemoteAddress != nil {
		return json.Marshal(condition.DeliveryRuleRemoteAddress)
	}
	if condition.DeliveryRuleRequestBody != nil {
		return json.Marshal(condition.DeliveryRuleRequestBody)
	}
	if condition.DeliveryRuleRequestHeader != nil {
		return json.Marshal(condition.DeliveryRuleRequestHeader)
	}
	if condition.DeliveryRuleRequestMethod != nil {
		return json.Marshal(condition.DeliveryRuleRequestMethod)
	}
	if condition.DeliveryRuleRequestScheme != nil {
		return json.Marshal(condition.DeliveryRuleRequestScheme)
	}
	if condition.DeliveryRuleRequestUri != nil {
		return json.Marshal(condition.DeliveryRuleRequestUri)
	}
	if condition.DeliveryRuleServerPort != nil {
		return json.Marshal(condition.DeliveryRuleServerPort)
	}
	if condition.DeliveryRuleSocketAddr != nil {
		return json.Marshal(condition.DeliveryRuleSocketAddr)
	}
	if condition.DeliveryRuleSslProtocol != nil {
		return json.Marshal(condition.DeliveryRuleSslProtocol)
	}
	if condition.DeliveryRuleUrlFileExtension != nil {
		return json.Marshal(condition.DeliveryRuleUrlFileExtension)
	}
	if condition.DeliveryRuleUrlFileName != nil {
		return json.Marshal(condition.DeliveryRuleUrlFileName)
	}
	if condition.DeliveryRuleUrlPath != nil {
		return json.Marshal(condition.DeliveryRuleUrlPath)
	}
	return nil, nil
}

// UnmarshalJSON unmarshals the DeliveryRuleConditionARM
func (condition *DeliveryRuleConditionARM) UnmarshalJSON(data []byte) error {
	var rawJson map[string]interface{}
	err := json.Unmarshal(data, &rawJson)
	if err != nil {
		return err
	}
	discriminator := rawJson["name"]
	if discriminator == "ClientPort" {
		condition.DeliveryRuleClientPort = &DeliveryRuleClientPortConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleClientPort)
	}
	if discriminator == "Cookies" {
		condition.DeliveryRuleCookies = &DeliveryRuleCookiesConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleCookies)
	}
	if discriminator == "HostName" {
		condition.DeliveryRuleHostName = &DeliveryRuleHostNameConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleHostName)
	}
	if discriminator == "HttpVersion" {
		condition.DeliveryRuleHttpVersion = &DeliveryRuleHttpVersionConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleHttpVersion)
	}
	if discriminator == "IsDevice" {
		condition.DeliveryRuleIsDevice = &DeliveryRuleIsDeviceConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleIsDevice)
	}
	if discriminator == "PostArgs" {
		condition.DeliveryRulePostArgs = &DeliveryRulePostArgsConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRulePostArgs)
	}
	if discriminator == "QueryString" {
		condition.DeliveryRuleQueryString = &DeliveryRuleQueryStringConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleQueryString)
	}
	if discriminator == "RemoteAddress" {
		condition.DeliveryRuleRemoteAddress = &DeliveryRuleRemoteAddressConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRemoteAddress)
	}
	if discriminator == "RequestBody" {
		condition.DeliveryRuleRequestBody = &DeliveryRuleRequestBodyConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRequestBody)
	}
	if discriminator == "RequestHeader" {
		condition.DeliveryRuleRequestHeader = &DeliveryRuleRequestHeaderConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRequestHeader)
	}
	if discriminator == "RequestMethod" {
		condition.DeliveryRuleRequestMethod = &DeliveryRuleRequestMethodConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRequestMethod)
	}
	if discriminator == "RequestScheme" {
		condition.DeliveryRuleRequestScheme = &DeliveryRuleRequestSchemeConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRequestScheme)
	}
	if discriminator == "RequestUri" {
		condition.DeliveryRuleRequestUri = &DeliveryRuleRequestUriConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleRequestUri)
	}
	if discriminator == "ServerPort" {
		condition.DeliveryRuleServerPort = &DeliveryRuleServerPortConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleServerPort)
	}
	if discriminator == "SocketAddr" {
		condition.DeliveryRuleSocketAddr = &DeliveryRuleSocketAddrConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleSocketAddr)
	}
	if discriminator == "SslProtocol" {
		condition.DeliveryRuleSslProtocol = &DeliveryRuleSslProtocolConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleSslProtocol)
	}
	if discriminator == "UrlFileExtension" {
		condition.DeliveryRuleUrlFileExtension = &DeliveryRuleUrlFileExtensionConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleUrlFileExtension)
	}
	if discriminator == "UrlFileName" {
		condition.DeliveryRuleUrlFileName = &DeliveryRuleUrlFileNameConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleUrlFileName)
	}
	if discriminator == "UrlPath" {
		condition.DeliveryRuleUrlPath = &DeliveryRuleUrlPathConditionARM{}
		return json.Unmarshal(data, condition.DeliveryRuleUrlPath)
	}

	// No error
	return nil
}

// Deprecated version of HealthProbeParameters. Use v1beta20210601.HealthProbeParameters instead
type HealthProbeParametersARM struct {
	ProbeIntervalInSeconds *int                                   `json:"probeIntervalInSeconds,omitempty"`
	ProbePath              *string                                `json:"probePath,omitempty"`
	ProbeProtocol          *HealthProbeParametersProbeProtocol    `json:"probeProtocol,omitempty"`
	ProbeRequestType       *HealthProbeParametersProbeRequestType `json:"probeRequestType,omitempty"`
}

// Deprecated version of ResponseBasedOriginErrorDetectionParameters. Use v1beta20210601.ResponseBasedOriginErrorDetectionParameters instead
type ResponseBasedOriginErrorDetectionParametersARM struct {
	HttpErrorRanges                          []HttpErrorRangeParametersARM                                               `json:"httpErrorRanges,omitempty"`
	ResponseBasedDetectedErrorTypes          *ResponseBasedOriginErrorDetectionParametersResponseBasedDetectedErrorTypes `json:"responseBasedDetectedErrorTypes,omitempty"`
	ResponseBasedFailoverThresholdPercentage *int                                                                        `json:"responseBasedFailoverThresholdPercentage,omitempty"`
}

// Deprecated version of DeliveryRuleCacheExpirationAction. Use v1beta20210601.DeliveryRuleCacheExpirationAction instead
type DeliveryRuleCacheExpirationActionARM struct {
	Name       DeliveryRuleCacheExpirationActionName `json:"name,omitempty"`
	Parameters *CacheExpirationActionParametersARM   `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleCacheKeyQueryStringAction. Use v1beta20210601.DeliveryRuleCacheKeyQueryStringAction instead
type DeliveryRuleCacheKeyQueryStringActionARM struct {
	Name       DeliveryRuleCacheKeyQueryStringActionName `json:"name,omitempty"`
	Parameters *CacheKeyQueryStringActionParametersARM   `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleClientPortCondition. Use v1beta20210601.DeliveryRuleClientPortCondition instead
type DeliveryRuleClientPortConditionARM struct {
	Name       DeliveryRuleClientPortConditionName    `json:"name,omitempty"`
	Parameters *ClientPortMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleCookiesCondition. Use v1beta20210601.DeliveryRuleCookiesCondition instead
type DeliveryRuleCookiesConditionARM struct {
	Name       DeliveryRuleCookiesConditionName    `json:"name,omitempty"`
	Parameters *CookiesMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleHostNameCondition. Use v1beta20210601.DeliveryRuleHostNameCondition instead
type DeliveryRuleHostNameConditionARM struct {
	Name       DeliveryRuleHostNameConditionName    `json:"name,omitempty"`
	Parameters *HostNameMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleHttpVersionCondition. Use v1beta20210601.DeliveryRuleHttpVersionCondition instead
type DeliveryRuleHttpVersionConditionARM struct {
	Name       DeliveryRuleHttpVersionConditionName    `json:"name,omitempty"`
	Parameters *HttpVersionMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleIsDeviceCondition. Use v1beta20210601.DeliveryRuleIsDeviceCondition instead
type DeliveryRuleIsDeviceConditionARM struct {
	Name       DeliveryRuleIsDeviceConditionName    `json:"name,omitempty"`
	Parameters *IsDeviceMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRulePostArgsCondition. Use v1beta20210601.DeliveryRulePostArgsCondition instead
type DeliveryRulePostArgsConditionARM struct {
	Name       DeliveryRulePostArgsConditionName    `json:"name,omitempty"`
	Parameters *PostArgsMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleQueryStringCondition. Use v1beta20210601.DeliveryRuleQueryStringCondition instead
type DeliveryRuleQueryStringConditionARM struct {
	Name       DeliveryRuleQueryStringConditionName    `json:"name,omitempty"`
	Parameters *QueryStringMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRemoteAddressCondition. Use v1beta20210601.DeliveryRuleRemoteAddressCondition instead
type DeliveryRuleRemoteAddressConditionARM struct {
	Name       DeliveryRuleRemoteAddressConditionName    `json:"name,omitempty"`
	Parameters *RemoteAddressMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestBodyCondition. Use v1beta20210601.DeliveryRuleRequestBodyCondition instead
type DeliveryRuleRequestBodyConditionARM struct {
	Name       DeliveryRuleRequestBodyConditionName    `json:"name,omitempty"`
	Parameters *RequestBodyMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestHeaderAction. Use v1beta20210601.DeliveryRuleRequestHeaderAction instead
type DeliveryRuleRequestHeaderActionARM struct {
	Name       DeliveryRuleRequestHeaderActionName `json:"name,omitempty"`
	Parameters *HeaderActionParametersARM          `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestHeaderCondition. Use v1beta20210601.DeliveryRuleRequestHeaderCondition instead
type DeliveryRuleRequestHeaderConditionARM struct {
	Name       DeliveryRuleRequestHeaderConditionName    `json:"name,omitempty"`
	Parameters *RequestHeaderMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestMethodCondition. Use v1beta20210601.DeliveryRuleRequestMethodCondition instead
type DeliveryRuleRequestMethodConditionARM struct {
	Name       DeliveryRuleRequestMethodConditionName    `json:"name,omitempty"`
	Parameters *RequestMethodMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestSchemeCondition. Use v1beta20210601.DeliveryRuleRequestSchemeCondition instead
type DeliveryRuleRequestSchemeConditionARM struct {
	Name       DeliveryRuleRequestSchemeConditionName    `json:"name,omitempty"`
	Parameters *RequestSchemeMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRequestUriCondition. Use v1beta20210601.DeliveryRuleRequestUriCondition instead
type DeliveryRuleRequestUriConditionARM struct {
	Name       DeliveryRuleRequestUriConditionName    `json:"name,omitempty"`
	Parameters *RequestUriMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleResponseHeaderAction. Use v1beta20210601.DeliveryRuleResponseHeaderAction instead
type DeliveryRuleResponseHeaderActionARM struct {
	Name       DeliveryRuleResponseHeaderActionName `json:"name,omitempty"`
	Parameters *HeaderActionParametersARM           `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleRouteConfigurationOverrideAction. Use v1beta20210601.DeliveryRuleRouteConfigurationOverrideAction instead
type DeliveryRuleRouteConfigurationOverrideActionARM struct {
	Name       DeliveryRuleRouteConfigurationOverrideActionName `json:"name,omitempty"`
	Parameters *RouteConfigurationOverrideActionParametersARM   `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleServerPortCondition. Use v1beta20210601.DeliveryRuleServerPortCondition instead
type DeliveryRuleServerPortConditionARM struct {
	Name       DeliveryRuleServerPortConditionName    `json:"name,omitempty"`
	Parameters *ServerPortMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleSocketAddrCondition. Use v1beta20210601.DeliveryRuleSocketAddrCondition instead
type DeliveryRuleSocketAddrConditionARM struct {
	Name       DeliveryRuleSocketAddrConditionName    `json:"name,omitempty"`
	Parameters *SocketAddrMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleSslProtocolCondition. Use v1beta20210601.DeliveryRuleSslProtocolCondition instead
type DeliveryRuleSslProtocolConditionARM struct {
	Name       DeliveryRuleSslProtocolConditionName    `json:"name,omitempty"`
	Parameters *SslProtocolMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleUrlFileExtensionCondition. Use v1beta20210601.DeliveryRuleUrlFileExtensionCondition instead
type DeliveryRuleUrlFileExtensionConditionARM struct {
	Name       DeliveryRuleUrlFileExtensionConditionName    `json:"name,omitempty"`
	Parameters *UrlFileExtensionMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleUrlFileNameCondition. Use v1beta20210601.DeliveryRuleUrlFileNameCondition instead
type DeliveryRuleUrlFileNameConditionARM struct {
	Name       DeliveryRuleUrlFileNameConditionName    `json:"name,omitempty"`
	Parameters *UrlFileNameMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of DeliveryRuleUrlPathCondition. Use v1beta20210601.DeliveryRuleUrlPathCondition instead
type DeliveryRuleUrlPathConditionARM struct {
	Name       DeliveryRuleUrlPathConditionName    `json:"name,omitempty"`
	Parameters *UrlPathMatchConditionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of HttpErrorRangeParameters. Use v1beta20210601.HttpErrorRangeParameters instead
type HttpErrorRangeParametersARM struct {
	Begin *int `json:"begin,omitempty"`
	End   *int `json:"end,omitempty"`
}

// Deprecated version of OriginGroupOverrideAction. Use v1beta20210601.OriginGroupOverrideAction instead
type OriginGroupOverrideActionARM struct {
	Name       OriginGroupOverrideActionName           `json:"name,omitempty"`
	Parameters *OriginGroupOverrideActionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of UrlRedirectAction. Use v1beta20210601.UrlRedirectAction instead
type UrlRedirectActionARM struct {
	Name       UrlRedirectActionName           `json:"name,omitempty"`
	Parameters *UrlRedirectActionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of UrlRewriteAction. Use v1beta20210601.UrlRewriteAction instead
type UrlRewriteActionARM struct {
	Name       UrlRewriteActionName           `json:"name,omitempty"`
	Parameters *UrlRewriteActionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of UrlSigningAction. Use v1beta20210601.UrlSigningAction instead
type UrlSigningActionARM struct {
	Name       UrlSigningActionName           `json:"name,omitempty"`
	Parameters *UrlSigningActionParametersARM `json:"parameters,omitempty"`
}

// Deprecated version of CacheExpirationActionParameters. Use v1beta20210601.CacheExpirationActionParameters instead
type CacheExpirationActionParametersARM struct {
	CacheBehavior *CacheExpirationActionParametersCacheBehavior `json:"cacheBehavior,omitempty"`
	CacheDuration *string                                       `json:"cacheDuration,omitempty"`
	CacheType     *CacheExpirationActionParametersCacheType     `json:"cacheType,omitempty"`
	TypeName      *CacheExpirationActionParametersTypeName      `json:"typeName,omitempty"`
}

// Deprecated version of CacheKeyQueryStringActionParameters. Use v1beta20210601.CacheKeyQueryStringActionParameters instead
type CacheKeyQueryStringActionParametersARM struct {
	QueryParameters     *string                                                 `json:"queryParameters,omitempty"`
	QueryStringBehavior *CacheKeyQueryStringActionParametersQueryStringBehavior `json:"queryStringBehavior,omitempty"`
	TypeName            *CacheKeyQueryStringActionParametersTypeName            `json:"typeName,omitempty"`
}

// Deprecated version of ClientPortMatchConditionParameters. Use v1beta20210601.ClientPortMatchConditionParameters instead
type ClientPortMatchConditionParametersARM struct {
	MatchValues     []string                                       `json:"matchValues,omitempty"`
	NegateCondition *bool                                          `json:"negateCondition,omitempty"`
	Operator        *ClientPortMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []ClientPortMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *ClientPortMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of CookiesMatchConditionParameters. Use v1beta20210601.CookiesMatchConditionParameters instead
type CookiesMatchConditionParametersARM struct {
	MatchValues     []string                                    `json:"matchValues,omitempty"`
	NegateCondition *bool                                       `json:"negateCondition,omitempty"`
	Operator        *CookiesMatchConditionParametersOperator    `json:"operator,omitempty"`
	Selector        *string                                     `json:"selector,omitempty"`
	Transforms      []CookiesMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *CookiesMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of HeaderActionParameters. Use v1beta20210601.HeaderActionParameters instead
type HeaderActionParametersARM struct {
	HeaderAction *HeaderActionParametersHeaderAction `json:"headerAction,omitempty"`
	HeaderName   *string                             `json:"headerName,omitempty"`
	TypeName     *HeaderActionParametersTypeName     `json:"typeName,omitempty"`
	Value        *string                             `json:"value,omitempty"`
}

// Deprecated version of HostNameMatchConditionParameters. Use v1beta20210601.HostNameMatchConditionParameters instead
type HostNameMatchConditionParametersARM struct {
	MatchValues     []string                                     `json:"matchValues,omitempty"`
	NegateCondition *bool                                        `json:"negateCondition,omitempty"`
	Operator        *HostNameMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []HostNameMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *HostNameMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of HttpVersionMatchConditionParameters. Use v1beta20210601.HttpVersionMatchConditionParameters instead
type HttpVersionMatchConditionParametersARM struct {
	MatchValues     []string                                        `json:"matchValues,omitempty"`
	NegateCondition *bool                                           `json:"negateCondition,omitempty"`
	Operator        *HttpVersionMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []HttpVersionMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *HttpVersionMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of IsDeviceMatchConditionParameters. Use v1beta20210601.IsDeviceMatchConditionParameters instead
type IsDeviceMatchConditionParametersARM struct {
	MatchValues     []IsDeviceMatchConditionParametersMatchValues `json:"matchValues,omitempty"`
	NegateCondition *bool                                         `json:"negateCondition,omitempty"`
	Operator        *IsDeviceMatchConditionParametersOperator     `json:"operator,omitempty"`
	Transforms      []IsDeviceMatchConditionParametersTransforms  `json:"transforms,omitempty"`
	TypeName        *IsDeviceMatchConditionParametersTypeName     `json:"typeName,omitempty"`
}

// Deprecated version of OriginGroupOverrideActionParameters. Use v1beta20210601.OriginGroupOverrideActionParameters instead
type OriginGroupOverrideActionParametersARM struct {
	OriginGroup *ResourceReferenceARM                        `json:"originGroup,omitempty"`
	TypeName    *OriginGroupOverrideActionParametersTypeName `json:"typeName,omitempty"`
}

// Deprecated version of PostArgsMatchConditionParameters. Use v1beta20210601.PostArgsMatchConditionParameters instead
type PostArgsMatchConditionParametersARM struct {
	MatchValues     []string                                     `json:"matchValues,omitempty"`
	NegateCondition *bool                                        `json:"negateCondition,omitempty"`
	Operator        *PostArgsMatchConditionParametersOperator    `json:"operator,omitempty"`
	Selector        *string                                      `json:"selector,omitempty"`
	Transforms      []PostArgsMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *PostArgsMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of QueryStringMatchConditionParameters. Use v1beta20210601.QueryStringMatchConditionParameters instead
type QueryStringMatchConditionParametersARM struct {
	MatchValues     []string                                        `json:"matchValues,omitempty"`
	NegateCondition *bool                                           `json:"negateCondition,omitempty"`
	Operator        *QueryStringMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []QueryStringMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *QueryStringMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of RemoteAddressMatchConditionParameters. Use v1beta20210601.RemoteAddressMatchConditionParameters instead
type RemoteAddressMatchConditionParametersARM struct {
	MatchValues     []string                                          `json:"matchValues,omitempty"`
	NegateCondition *bool                                             `json:"negateCondition,omitempty"`
	Operator        *RemoteAddressMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []RemoteAddressMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *RemoteAddressMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of RequestBodyMatchConditionParameters. Use v1beta20210601.RequestBodyMatchConditionParameters instead
type RequestBodyMatchConditionParametersARM struct {
	MatchValues     []string                                        `json:"matchValues,omitempty"`
	NegateCondition *bool                                           `json:"negateCondition,omitempty"`
	Operator        *RequestBodyMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []RequestBodyMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *RequestBodyMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of RequestHeaderMatchConditionParameters. Use v1beta20210601.RequestHeaderMatchConditionParameters instead
type RequestHeaderMatchConditionParametersARM struct {
	MatchValues     []string                                          `json:"matchValues,omitempty"`
	NegateCondition *bool                                             `json:"negateCondition,omitempty"`
	Operator        *RequestHeaderMatchConditionParametersOperator    `json:"operator,omitempty"`
	Selector        *string                                           `json:"selector,omitempty"`
	Transforms      []RequestHeaderMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *RequestHeaderMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of RequestMethodMatchConditionParameters. Use v1beta20210601.RequestMethodMatchConditionParameters instead
type RequestMethodMatchConditionParametersARM struct {
	MatchValues     []RequestMethodMatchConditionParametersMatchValues `json:"matchValues,omitempty"`
	NegateCondition *bool                                              `json:"negateCondition,omitempty"`
	Operator        *RequestMethodMatchConditionParametersOperator     `json:"operator,omitempty"`
	Transforms      []RequestMethodMatchConditionParametersTransforms  `json:"transforms,omitempty"`
	TypeName        *RequestMethodMatchConditionParametersTypeName     `json:"typeName,omitempty"`
}

// Deprecated version of RequestSchemeMatchConditionParameters. Use v1beta20210601.RequestSchemeMatchConditionParameters instead
type RequestSchemeMatchConditionParametersARM struct {
	MatchValues     []RequestSchemeMatchConditionParametersMatchValues `json:"matchValues,omitempty"`
	NegateCondition *bool                                              `json:"negateCondition,omitempty"`
	Operator        *RequestSchemeMatchConditionParametersOperator     `json:"operator,omitempty"`
	Transforms      []RequestSchemeMatchConditionParametersTransforms  `json:"transforms,omitempty"`
	TypeName        *RequestSchemeMatchConditionParametersTypeName     `json:"typeName,omitempty"`
}

// Deprecated version of RequestUriMatchConditionParameters. Use v1beta20210601.RequestUriMatchConditionParameters instead
type RequestUriMatchConditionParametersARM struct {
	MatchValues     []string                                       `json:"matchValues,omitempty"`
	NegateCondition *bool                                          `json:"negateCondition,omitempty"`
	Operator        *RequestUriMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []RequestUriMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *RequestUriMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of RouteConfigurationOverrideActionParameters. Use v1beta20210601.RouteConfigurationOverrideActionParameters instead
type RouteConfigurationOverrideActionParametersARM struct {
	CacheConfiguration  *CacheConfigurationARM                              `json:"cacheConfiguration,omitempty"`
	OriginGroupOverride *OriginGroupOverrideARM                             `json:"originGroupOverride,omitempty"`
	TypeName            *RouteConfigurationOverrideActionParametersTypeName `json:"typeName,omitempty"`
}

// Deprecated version of ServerPortMatchConditionParameters. Use v1beta20210601.ServerPortMatchConditionParameters instead
type ServerPortMatchConditionParametersARM struct {
	MatchValues     []string                                       `json:"matchValues,omitempty"`
	NegateCondition *bool                                          `json:"negateCondition,omitempty"`
	Operator        *ServerPortMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []ServerPortMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *ServerPortMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of SocketAddrMatchConditionParameters. Use v1beta20210601.SocketAddrMatchConditionParameters instead
type SocketAddrMatchConditionParametersARM struct {
	MatchValues     []string                                       `json:"matchValues,omitempty"`
	NegateCondition *bool                                          `json:"negateCondition,omitempty"`
	Operator        *SocketAddrMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []SocketAddrMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *SocketAddrMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of SslProtocolMatchConditionParameters. Use v1beta20210601.SslProtocolMatchConditionParameters instead
type SslProtocolMatchConditionParametersARM struct {
	MatchValues     []SslProtocolMatchConditionParametersMatchValues `json:"matchValues,omitempty"`
	NegateCondition *bool                                            `json:"negateCondition,omitempty"`
	Operator        *SslProtocolMatchConditionParametersOperator     `json:"operator,omitempty"`
	Transforms      []SslProtocolMatchConditionParametersTransforms  `json:"transforms,omitempty"`
	TypeName        *SslProtocolMatchConditionParametersTypeName     `json:"typeName,omitempty"`
}

// Deprecated version of UrlFileExtensionMatchConditionParameters. Use v1beta20210601.UrlFileExtensionMatchConditionParameters instead
type UrlFileExtensionMatchConditionParametersARM struct {
	MatchValues     []string                                             `json:"matchValues,omitempty"`
	NegateCondition *bool                                                `json:"negateCondition,omitempty"`
	Operator        *UrlFileExtensionMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []UrlFileExtensionMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *UrlFileExtensionMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of UrlFileNameMatchConditionParameters. Use v1beta20210601.UrlFileNameMatchConditionParameters instead
type UrlFileNameMatchConditionParametersARM struct {
	MatchValues     []string                                        `json:"matchValues,omitempty"`
	NegateCondition *bool                                           `json:"negateCondition,omitempty"`
	Operator        *UrlFileNameMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []UrlFileNameMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *UrlFileNameMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of UrlPathMatchConditionParameters. Use v1beta20210601.UrlPathMatchConditionParameters instead
type UrlPathMatchConditionParametersARM struct {
	MatchValues     []string                                    `json:"matchValues,omitempty"`
	NegateCondition *bool                                       `json:"negateCondition,omitempty"`
	Operator        *UrlPathMatchConditionParametersOperator    `json:"operator,omitempty"`
	Transforms      []UrlPathMatchConditionParametersTransforms `json:"transforms,omitempty"`
	TypeName        *UrlPathMatchConditionParametersTypeName    `json:"typeName,omitempty"`
}

// Deprecated version of UrlRedirectActionParameters. Use v1beta20210601.UrlRedirectActionParameters instead
type UrlRedirectActionParametersARM struct {
	CustomFragment      *string                                         `json:"customFragment,omitempty"`
	CustomHostname      *string                                         `json:"customHostname,omitempty"`
	CustomPath          *string                                         `json:"customPath,omitempty"`
	CustomQueryString   *string                                         `json:"customQueryString,omitempty"`
	DestinationProtocol *UrlRedirectActionParametersDestinationProtocol `json:"destinationProtocol,omitempty"`
	RedirectType        *UrlRedirectActionParametersRedirectType        `json:"redirectType,omitempty"`
	TypeName            *UrlRedirectActionParametersTypeName            `json:"typeName,omitempty"`
}

// Deprecated version of UrlRewriteActionParameters. Use v1beta20210601.UrlRewriteActionParameters instead
type UrlRewriteActionParametersARM struct {
	Destination           *string                             `json:"destination,omitempty"`
	PreserveUnmatchedPath *bool                               `json:"preserveUnmatchedPath,omitempty"`
	SourcePattern         *string                             `json:"sourcePattern,omitempty"`
	TypeName              *UrlRewriteActionParametersTypeName `json:"typeName,omitempty"`
}

// Deprecated version of UrlSigningActionParameters. Use v1beta20210601.UrlSigningActionParameters instead
type UrlSigningActionParametersARM struct {
	Algorithm             *UrlSigningActionParametersAlgorithm `json:"algorithm,omitempty"`
	ParameterNameOverride []UrlSigningParamIdentifierARM       `json:"parameterNameOverride,omitempty"`
	TypeName              *UrlSigningActionParametersTypeName  `json:"typeName,omitempty"`
}

// Deprecated version of CacheConfiguration. Use v1beta20210601.CacheConfiguration instead
type CacheConfigurationARM struct {
	CacheBehavior              *CacheConfigurationCacheBehavior              `json:"cacheBehavior,omitempty"`
	CacheDuration              *string                                       `json:"cacheDuration,omitempty"`
	IsCompressionEnabled       *CacheConfigurationIsCompressionEnabled       `json:"isCompressionEnabled,omitempty"`
	QueryParameters            *string                                       `json:"queryParameters,omitempty"`
	QueryStringCachingBehavior *CacheConfigurationQueryStringCachingBehavior `json:"queryStringCachingBehavior,omitempty"`
}

// Deprecated version of OriginGroupOverride. Use v1beta20210601.OriginGroupOverride instead
type OriginGroupOverrideARM struct {
	ForwardingProtocol *OriginGroupOverrideForwardingProtocol `json:"forwardingProtocol,omitempty"`
	OriginGroup        *ResourceReferenceARM                  `json:"originGroup,omitempty"`
}

// Deprecated version of UrlSigningParamIdentifier. Use v1beta20210601.UrlSigningParamIdentifier instead
type UrlSigningParamIdentifierARM struct {
	ParamIndicator *UrlSigningParamIdentifierParamIndicator `json:"paramIndicator,omitempty"`
	ParamName      *string                                  `json:"paramName,omitempty"`
}
