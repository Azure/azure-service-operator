// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210601

type Endpoint_STATUS_ARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Name: Resource name.
	Name       *string                        `json:"name,omitempty"`
	Properties *EndpointProperties_STATUS_ARM `json:"properties,omitempty"`
	SystemData *SystemData_STATUS_ARM         `json:"systemData,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type EndpointProperties_STATUS_ARM struct {
	// ContentTypesToCompress: List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `json:"contentTypesToCompress,omitempty"`

	// CustomDomains: The custom domains under the endpoint.
	CustomDomains []DeepCreatedCustomDomain_STATUS_ARM `json:"customDomains,omitempty"`

	// DefaultOriginGroup: A reference to the origin group.
	DefaultOriginGroup *ResourceReference_STATUS_ARM `json:"defaultOriginGroup,omitempty"`

	// DeliveryPolicy: A policy that specifies the delivery rules to be used for an endpoint.
	DeliveryPolicy *EndpointProperties_DeliveryPolicy_STATUS_ARM `json:"deliveryPolicy,omitempty"`

	// GeoFilters: List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule
	// to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters []GeoFilter_STATUS_ARM `json:"geoFilters,omitempty"`

	// HostName: The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName *string `json:"hostName,omitempty"`

	// IsCompressionEnabled: Indicates whether content compression is enabled on CDN. Default value is false. If compression is
	// enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on
	// CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `json:"isCompressionEnabled,omitempty"`

	// IsHttpAllowed: Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol
	// (HTTP or HTTPS) must be allowed.
	IsHttpAllowed *bool `json:"isHttpAllowed,omitempty"`

	// IsHttpsAllowed: Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol
	// (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed *bool `json:"isHttpsAllowed,omitempty"`

	// OptimizationType: Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media
	// services. With this information, CDN can apply scenario driven optimization.
	OptimizationType *OptimizationType_STATUS `json:"optimizationType,omitempty"`

	// OriginGroups: The origin groups comprising of origins that are used for load balancing the traffic based on availability.
	OriginGroups []DeepCreatedOriginGroup_STATUS_ARM `json:"originGroups,omitempty"`

	// OriginHostHeader: The host header value sent to the origin with each request. This property at Endpoint is only allowed
	// when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank,
	// the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services
	// require this host header value to match the origin hostname by default.
	OriginHostHeader *string `json:"originHostHeader,omitempty"`

	// OriginPath: A directory path on the origin that CDN can use to retrieve content from, e.g.
	// contoso.cloudapp.net/originpath.
	OriginPath *string `json:"originPath,omitempty"`

	// Origins: The source of the content being delivered via CDN.
	Origins []DeepCreatedOrigin_STATUS_ARM `json:"origins,omitempty"`

	// ProbePath: Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the
	// most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single
	// origin.
	ProbePath *string `json:"probePath,omitempty"`

	// ProvisioningState: Provisioning status of the endpoint.
	ProvisioningState *EndpointProperties_ProvisioningState_STATUS `json:"provisioningState,omitempty"`

	// QueryStringCachingBehavior: Defines how CDN caches requests that include query strings. You can ignore any query strings
	// when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request
	// with a unique URL.
	QueryStringCachingBehavior *QueryStringCachingBehavior_STATUS `json:"queryStringCachingBehavior,omitempty"`

	// ResourceState: Resource status of the endpoint.
	ResourceState *EndpointProperties_ResourceState_STATUS `json:"resourceState,omitempty"`

	// UrlSigningKeys: List of keys used to validate the signed URL hashes.
	UrlSigningKeys []UrlSigningKey_STATUS_ARM `json:"urlSigningKeys,omitempty"`

	// WebApplicationFirewallPolicyLink: Defines the Web Application Firewall policy for the endpoint (if applicable)
	WebApplicationFirewallPolicyLink *EndpointProperties_WebApplicationFirewallPolicyLink_STATUS_ARM `json:"webApplicationFirewallPolicyLink,omitempty"`
}

type SystemData_STATUS_ARM struct {
	// CreatedAt: The timestamp of resource creation (UTC)
	CreatedAt *string `json:"createdAt,omitempty"`

	// CreatedBy: An identifier for the identity that created the resource
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedByType: The type of identity that created the resource
	CreatedByType *IdentityType_STATUS `json:"createdByType,omitempty"`

	// LastModifiedAt: The timestamp of resource last modification (UTC)
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`

	// LastModifiedBy: An identifier for the identity that last modified the resource
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// LastModifiedByType: The type of identity that last modified the resource
	LastModifiedByType *IdentityType_STATUS `json:"lastModifiedByType,omitempty"`
}

type DeepCreatedCustomDomain_STATUS_ARM struct {
	// Name: Custom domain name.
	Name       *string                                       `json:"name,omitempty"`
	Properties *DeepCreatedCustomDomainProperties_STATUS_ARM `json:"properties,omitempty"`
}

type DeepCreatedOrigin_STATUS_ARM struct {
	// Name: Origin name which must be unique within the endpoint.
	Name       *string                                 `json:"name,omitempty"`
	Properties *DeepCreatedOriginProperties_STATUS_ARM `json:"properties,omitempty"`
}

type DeepCreatedOriginGroup_STATUS_ARM struct {
	// Name: Origin group name which must be unique within the endpoint.
	Name       *string                                      `json:"name,omitempty"`
	Properties *DeepCreatedOriginGroupProperties_STATUS_ARM `json:"properties,omitempty"`
}

type EndpointProperties_DeliveryPolicy_STATUS_ARM struct {
	// Description: User-friendly description of the policy.
	Description *string `json:"description,omitempty"`

	// Rules: A list of the delivery rules.
	Rules []DeliveryRule_STATUS_ARM `json:"rules,omitempty"`
}

type EndpointProperties_ProvisioningState_STATUS string

const (
	EndpointProperties_ProvisioningState_STATUS_Creating  = EndpointProperties_ProvisioningState_STATUS("Creating")
	EndpointProperties_ProvisioningState_STATUS_Deleting  = EndpointProperties_ProvisioningState_STATUS("Deleting")
	EndpointProperties_ProvisioningState_STATUS_Failed    = EndpointProperties_ProvisioningState_STATUS("Failed")
	EndpointProperties_ProvisioningState_STATUS_Succeeded = EndpointProperties_ProvisioningState_STATUS("Succeeded")
	EndpointProperties_ProvisioningState_STATUS_Updating  = EndpointProperties_ProvisioningState_STATUS("Updating")
)

type EndpointProperties_ResourceState_STATUS string

const (
	EndpointProperties_ResourceState_STATUS_Creating = EndpointProperties_ResourceState_STATUS("Creating")
	EndpointProperties_ResourceState_STATUS_Deleting = EndpointProperties_ResourceState_STATUS("Deleting")
	EndpointProperties_ResourceState_STATUS_Running  = EndpointProperties_ResourceState_STATUS("Running")
	EndpointProperties_ResourceState_STATUS_Starting = EndpointProperties_ResourceState_STATUS("Starting")
	EndpointProperties_ResourceState_STATUS_Stopped  = EndpointProperties_ResourceState_STATUS("Stopped")
	EndpointProperties_ResourceState_STATUS_Stopping = EndpointProperties_ResourceState_STATUS("Stopping")
)

type EndpointProperties_WebApplicationFirewallPolicyLink_STATUS_ARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`
}

type GeoFilter_STATUS_ARM struct {
	// Action: Action of the geo filter, i.e. allow or block access.
	Action *GeoFilter_Action_STATUS `json:"action,omitempty"`

	// CountryCodes: Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `json:"countryCodes,omitempty"`

	// RelativePath: Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath *string `json:"relativePath,omitempty"`
}

type IdentityType_STATUS string

const (
	IdentityType_STATUS_Application     = IdentityType_STATUS("application")
	IdentityType_STATUS_Key             = IdentityType_STATUS("key")
	IdentityType_STATUS_ManagedIdentity = IdentityType_STATUS("managedIdentity")
	IdentityType_STATUS_User            = IdentityType_STATUS("user")
)

type OptimizationType_STATUS string

const (
	OptimizationType_STATUS_DynamicSiteAcceleration     = OptimizationType_STATUS("DynamicSiteAcceleration")
	OptimizationType_STATUS_GeneralMediaStreaming       = OptimizationType_STATUS("GeneralMediaStreaming")
	OptimizationType_STATUS_GeneralWebDelivery          = OptimizationType_STATUS("GeneralWebDelivery")
	OptimizationType_STATUS_LargeFileDownload           = OptimizationType_STATUS("LargeFileDownload")
	OptimizationType_STATUS_VideoOnDemandMediaStreaming = OptimizationType_STATUS("VideoOnDemandMediaStreaming")
)

type QueryStringCachingBehavior_STATUS string

const (
	QueryStringCachingBehavior_STATUS_BypassCaching     = QueryStringCachingBehavior_STATUS("BypassCaching")
	QueryStringCachingBehavior_STATUS_IgnoreQueryString = QueryStringCachingBehavior_STATUS("IgnoreQueryString")
	QueryStringCachingBehavior_STATUS_NotSet            = QueryStringCachingBehavior_STATUS("NotSet")
	QueryStringCachingBehavior_STATUS_UseQueryString    = QueryStringCachingBehavior_STATUS("UseQueryString")
)

type ResourceReference_STATUS_ARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`
}

type UrlSigningKey_STATUS_ARM struct {
	// KeyId: Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form
	// the hash.
	KeyId *string `json:"keyId,omitempty"`

	// KeySourceParameters: Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters *KeyVaultSigningKeyParameters_STATUS_ARM `json:"keySourceParameters,omitempty"`
}

type DeepCreatedCustomDomainProperties_STATUS_ARM struct {
	// HostName: The host name of the custom domain. Must be a domain name.
	HostName *string `json:"hostName,omitempty"`

	// ValidationData: Special validation or data may be required when delivering CDN to some regions due to local compliance
	// reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData *string `json:"validationData,omitempty"`
}

type DeepCreatedOriginGroupProperties_STATUS_ARM struct {
	// HealthProbeSettings: Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters_STATUS_ARM `json:"healthProbeSettings,omitempty"`

	// Origins: The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference_STATUS_ARM `json:"origins,omitempty"`

	// ResponseBasedOriginErrorDetectionSettings: The JSON object that contains the properties to determine origin health using
	// real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters_STATUS_ARM `json:"responseBasedOriginErrorDetectionSettings,omitempty"`

	// TrafficRestorationTimeToHealedOrNewEndpointsInMinutes: Time in minutes to shift the traffic to the endpoint gradually
	// when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not
	// supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `json:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes,omitempty"`
}

type DeepCreatedOriginProperties_STATUS_ARM struct {
	// Enabled: Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `json:"enabled,omitempty"`

	// HostName: The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique
	// across all origins in an endpoint.
	HostName *string `json:"hostName,omitempty"`

	// HttpPort: The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `json:"httpPort,omitempty"`

	// HttpsPort: The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `json:"httpsPort,omitempty"`

	// OriginHostHeader: The host header value sent to the origin with each request. If you leave this blank, the request
	// hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host
	// header value to match the origin hostname by default.
	OriginHostHeader *string `json:"originHostHeader,omitempty"`

	// Priority: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load
	// balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `json:"priority,omitempty"`

	// PrivateEndpointStatus: The approval status for the connection to the Private Link
	PrivateEndpointStatus *PrivateEndpointStatus_STATUS `json:"privateEndpointStatus,omitempty"`

	// PrivateLinkAlias: The Alias of the Private Link resource. Populating this optional field indicates that this origin is
	// 'Private'
	PrivateLinkAlias *string `json:"privateLinkAlias,omitempty"`

	// PrivateLinkApprovalMessage: A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `json:"privateLinkApprovalMessage,omitempty"`

	// PrivateLinkLocation: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `json:"privateLinkLocation,omitempty"`

	// PrivateLinkResourceId: The Resource Id of the Private Link resource. Populating this optional field indicates that this
	// backend is 'Private'
	PrivateLinkResourceId *string `json:"privateLinkResourceId,omitempty"`

	// Weight: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `json:"weight,omitempty"`
}

type DeliveryRule_STATUS_ARM struct {
	// Actions: A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []DeliveryRuleAction_STATUS_ARM `json:"actions,omitempty"`

	// Conditions: A list of conditions that must be matched for the actions to be executed
	Conditions []DeliveryRuleCondition_STATUS_ARM `json:"conditions,omitempty"`

	// Name: Name of the rule
	Name *string `json:"name,omitempty"`

	// Order: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a
	// lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not
	// require any condition and actions listed in it will always be applied.
	Order *int `json:"order,omitempty"`
}

type GeoFilter_Action_STATUS string

const (
	GeoFilter_Action_STATUS_Allow = GeoFilter_Action_STATUS("Allow")
	GeoFilter_Action_STATUS_Block = GeoFilter_Action_STATUS("Block")
)

type KeyVaultSigningKeyParameters_STATUS_ARM struct {
	// ResourceGroupName: Resource group of the user's Key Vault containing the secret
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SecretName: The name of secret in Key Vault.
	SecretName *string `json:"secretName,omitempty"`

	// SecretVersion: The version(GUID) of secret in Key Vault.
	SecretVersion *string `json:"secretVersion,omitempty"`

	// SubscriptionId: Subscription Id of the user's Key Vault containing the secret
	SubscriptionId *string                                       `json:"subscriptionId,omitempty"`
	TypeName       *KeyVaultSigningKeyParameters_TypeName_STATUS `json:"typeName,omitempty"`

	// VaultName: The name of the user's Key Vault containing the secret
	VaultName *string `json:"vaultName,omitempty"`
}

type DeliveryRuleAction_STATUS_ARM struct {
	// Name: The name of the action for the delivery rule.
	Name *DeliveryRuleAction_Name_STATUS `json:"name,omitempty"`
}

type DeliveryRuleCondition_STATUS_ARM struct {
	// Name: The name of the condition for the delivery rule.
	Name *DeliveryRuleCondition_Name_STATUS `json:"name,omitempty"`
}

type HealthProbeParameters_STATUS_ARM struct {
	// ProbeIntervalInSeconds: The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `json:"probeIntervalInSeconds,omitempty"`

	// ProbePath: The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `json:"probePath,omitempty"`

	// ProbeProtocol: Protocol to use for health probe.
	ProbeProtocol *HealthProbeParameters_ProbeProtocol_STATUS `json:"probeProtocol,omitempty"`

	// ProbeRequestType: The type of health probe request that is made.
	ProbeRequestType *HealthProbeParameters_ProbeRequestType_STATUS `json:"probeRequestType,omitempty"`
}

type KeyVaultSigningKeyParameters_TypeName_STATUS string

const KeyVaultSigningKeyParameters_TypeName_STATUS_KeyVaultSigningKeyParameters = KeyVaultSigningKeyParameters_TypeName_STATUS("KeyVaultSigningKeyParameters")

type ResponseBasedOriginErrorDetectionParameters_STATUS_ARM struct {
	// HttpErrorRanges: The list of Http status code ranges that are considered as server errors for origin and it is marked as
	// unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters_STATUS_ARM `json:"httpErrorRanges,omitempty"`

	// ResponseBasedDetectedErrorTypes: Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *ResponseBasedOriginErrorDetectionParameters_ResponseBasedDetectedErrorTypes_STATUS `json:"responseBasedDetectedErrorTypes,omitempty"`

	// ResponseBasedFailoverThresholdPercentage: The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `json:"responseBasedFailoverThresholdPercentage,omitempty"`
}

type DeliveryRuleAction_Name_STATUS string

const (
	DeliveryRuleAction_Name_STATUS_CacheExpiration            = DeliveryRuleAction_Name_STATUS("CacheExpiration")
	DeliveryRuleAction_Name_STATUS_CacheKeyQueryString        = DeliveryRuleAction_Name_STATUS("CacheKeyQueryString")
	DeliveryRuleAction_Name_STATUS_ModifyRequestHeader        = DeliveryRuleAction_Name_STATUS("ModifyRequestHeader")
	DeliveryRuleAction_Name_STATUS_ModifyResponseHeader       = DeliveryRuleAction_Name_STATUS("ModifyResponseHeader")
	DeliveryRuleAction_Name_STATUS_OriginGroupOverride        = DeliveryRuleAction_Name_STATUS("OriginGroupOverride")
	DeliveryRuleAction_Name_STATUS_RouteConfigurationOverride = DeliveryRuleAction_Name_STATUS("RouteConfigurationOverride")
	DeliveryRuleAction_Name_STATUS_UrlRedirect                = DeliveryRuleAction_Name_STATUS("UrlRedirect")
	DeliveryRuleAction_Name_STATUS_UrlRewrite                 = DeliveryRuleAction_Name_STATUS("UrlRewrite")
	DeliveryRuleAction_Name_STATUS_UrlSigning                 = DeliveryRuleAction_Name_STATUS("UrlSigning")
)

type DeliveryRuleCondition_Name_STATUS string

const (
	DeliveryRuleCondition_Name_STATUS_ClientPort       = DeliveryRuleCondition_Name_STATUS("ClientPort")
	DeliveryRuleCondition_Name_STATUS_Cookies          = DeliveryRuleCondition_Name_STATUS("Cookies")
	DeliveryRuleCondition_Name_STATUS_HostName         = DeliveryRuleCondition_Name_STATUS("HostName")
	DeliveryRuleCondition_Name_STATUS_HttpVersion      = DeliveryRuleCondition_Name_STATUS("HttpVersion")
	DeliveryRuleCondition_Name_STATUS_IsDevice         = DeliveryRuleCondition_Name_STATUS("IsDevice")
	DeliveryRuleCondition_Name_STATUS_PostArgs         = DeliveryRuleCondition_Name_STATUS("PostArgs")
	DeliveryRuleCondition_Name_STATUS_QueryString      = DeliveryRuleCondition_Name_STATUS("QueryString")
	DeliveryRuleCondition_Name_STATUS_RemoteAddress    = DeliveryRuleCondition_Name_STATUS("RemoteAddress")
	DeliveryRuleCondition_Name_STATUS_RequestBody      = DeliveryRuleCondition_Name_STATUS("RequestBody")
	DeliveryRuleCondition_Name_STATUS_RequestHeader    = DeliveryRuleCondition_Name_STATUS("RequestHeader")
	DeliveryRuleCondition_Name_STATUS_RequestMethod    = DeliveryRuleCondition_Name_STATUS("RequestMethod")
	DeliveryRuleCondition_Name_STATUS_RequestScheme    = DeliveryRuleCondition_Name_STATUS("RequestScheme")
	DeliveryRuleCondition_Name_STATUS_RequestUri       = DeliveryRuleCondition_Name_STATUS("RequestUri")
	DeliveryRuleCondition_Name_STATUS_ServerPort       = DeliveryRuleCondition_Name_STATUS("ServerPort")
	DeliveryRuleCondition_Name_STATUS_SocketAddr       = DeliveryRuleCondition_Name_STATUS("SocketAddr")
	DeliveryRuleCondition_Name_STATUS_SslProtocol      = DeliveryRuleCondition_Name_STATUS("SslProtocol")
	DeliveryRuleCondition_Name_STATUS_UrlFileExtension = DeliveryRuleCondition_Name_STATUS("UrlFileExtension")
	DeliveryRuleCondition_Name_STATUS_UrlFileName      = DeliveryRuleCondition_Name_STATUS("UrlFileName")
	DeliveryRuleCondition_Name_STATUS_UrlPath          = DeliveryRuleCondition_Name_STATUS("UrlPath")
)

type HttpErrorRangeParameters_STATUS_ARM struct {
	// Begin: The inclusive start of the http status code range.
	Begin *int `json:"begin,omitempty"`

	// End: The inclusive end of the http status code range.
	End *int `json:"end,omitempty"`
}
