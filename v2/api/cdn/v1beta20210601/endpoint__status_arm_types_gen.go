// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210601

type Endpoint_StatusARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Name: Resource name.
	Name       *string                       `json:"name,omitempty"`
	Properties *EndpointProperties_StatusARM `json:"properties,omitempty"`
	SystemData *SystemData_StatusARM         `json:"systemData,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type EndpointProperties_StatusARM struct {
	// ContentTypesToCompress: List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `json:"contentTypesToCompress,omitempty"`

	// CustomDomains: The custom domains under the endpoint.
	CustomDomains []CustomDomain_Status_SubResourceEmbeddedARM `json:"customDomains,omitempty"`

	// DefaultOriginGroup: A reference to the origin group.
	DefaultOriginGroup *ResourceReference_StatusARM `json:"defaultOriginGroup,omitempty"`

	// DeliveryPolicy: A policy that specifies the delivery rules to be used for an endpoint.
	DeliveryPolicy *EndpointProperties_Status_DeliveryPolicyARM `json:"deliveryPolicy,omitempty"`

	// GeoFilters: List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule
	// to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters []GeoFilter_StatusARM `json:"geoFilters,omitempty"`

	// HostName: The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName *string `json:"hostName,omitempty"`

	// IsCompressionEnabled: Indicates whether content compression is enabled on CDN. Default value is false. If compression is
	// enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on
	// CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `json:"isCompressionEnabled,omitempty"`

	// IsHttpAllowed: Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol
	// (HTTP or HTTPS) must be allowed.
	IsHttpAllowed *bool `json:"isHttpAllowed,omitempty"`

	// IsHttpsAllowed: Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol
	// (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed *bool `json:"isHttpsAllowed,omitempty"`

	// OptimizationType: Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media
	// services. With this information, CDN can apply scenario driven optimization.
	OptimizationType *OptimizationType_Status `json:"optimizationType,omitempty"`

	// OriginGroups: The origin groups comprising of origins that are used for load balancing the traffic based on availability.
	OriginGroups []DeepCreatedOriginGroup_StatusARM `json:"originGroups,omitempty"`

	// OriginHostHeader: The host header value sent to the origin with each request. This property at Endpoint is only allowed
	// when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank,
	// the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services
	// require this host header value to match the origin hostname by default.
	OriginHostHeader *string `json:"originHostHeader,omitempty"`

	// OriginPath: A directory path on the origin that CDN can use to retrieve content from, e.g.
	// contoso.cloudapp.net/originpath.
	OriginPath *string `json:"originPath,omitempty"`

	// Origins: The source of the content being delivered via CDN.
	Origins []DeepCreatedOrigin_StatusARM `json:"origins,omitempty"`

	// ProbePath: Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the
	// most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single
	// origin.
	ProbePath *string `json:"probePath,omitempty"`

	// ProvisioningState: Provisioning status of the endpoint.
	ProvisioningState *EndpointPropertiesStatusProvisioningState `json:"provisioningState,omitempty"`

	// QueryStringCachingBehavior: Defines how CDN caches requests that include query strings. You can ignore any query strings
	// when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request
	// with a unique URL.
	QueryStringCachingBehavior *QueryStringCachingBehavior_Status `json:"queryStringCachingBehavior,omitempty"`

	// ResourceState: Resource status of the endpoint.
	ResourceState *EndpointPropertiesStatusResourceState `json:"resourceState,omitempty"`

	// UrlSigningKeys: List of keys used to validate the signed URL hashes.
	UrlSigningKeys []UrlSigningKey_StatusARM `json:"urlSigningKeys,omitempty"`

	// WebApplicationFirewallPolicyLink: Defines the Web Application Firewall policy for the endpoint (if applicable)
	WebApplicationFirewallPolicyLink *EndpointProperties_Status_WebApplicationFirewallPolicyLinkARM `json:"webApplicationFirewallPolicyLink,omitempty"`
}

type SystemData_StatusARM struct {
	// CreatedAt: The timestamp of resource creation (UTC)
	CreatedAt *string `json:"createdAt,omitempty"`

	// CreatedBy: An identifier for the identity that created the resource
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreatedByType: The type of identity that created the resource
	CreatedByType *IdentityType_Status `json:"createdByType,omitempty"`

	// LastModifiedAt: The timestamp of resource last modification (UTC)
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`

	// LastModifiedBy: An identifier for the identity that last modified the resource
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// LastModifiedByType: The type of identity that last modified the resource
	LastModifiedByType *IdentityType_Status `json:"lastModifiedByType,omitempty"`
}

type CustomDomain_Status_SubResourceEmbeddedARM struct {
	// Id: Resource ID.
	Id         *string               `json:"id,omitempty"`
	SystemData *SystemData_StatusARM `json:"systemData,omitempty"`
}

type DeepCreatedOriginGroup_StatusARM struct {
	// Name: Origin group name which must be unique within the endpoint.
	Name       *string                                     `json:"name,omitempty"`
	Properties *DeepCreatedOriginGroupProperties_StatusARM `json:"properties,omitempty"`
}

type DeepCreatedOrigin_StatusARM struct {
	// Name: Origin name which must be unique within the endpoint.
	Name       *string                                `json:"name,omitempty"`
	Properties *DeepCreatedOriginProperties_StatusARM `json:"properties,omitempty"`
}

type EndpointPropertiesStatusProvisioningState string

const (
	EndpointPropertiesStatusProvisioningState_Creating  = EndpointPropertiesStatusProvisioningState("Creating")
	EndpointPropertiesStatusProvisioningState_Deleting  = EndpointPropertiesStatusProvisioningState("Deleting")
	EndpointPropertiesStatusProvisioningState_Failed    = EndpointPropertiesStatusProvisioningState("Failed")
	EndpointPropertiesStatusProvisioningState_Succeeded = EndpointPropertiesStatusProvisioningState("Succeeded")
	EndpointPropertiesStatusProvisioningState_Updating  = EndpointPropertiesStatusProvisioningState("Updating")
)

type EndpointPropertiesStatusResourceState string

const (
	EndpointPropertiesStatusResourceState_Creating = EndpointPropertiesStatusResourceState("Creating")
	EndpointPropertiesStatusResourceState_Deleting = EndpointPropertiesStatusResourceState("Deleting")
	EndpointPropertiesStatusResourceState_Running  = EndpointPropertiesStatusResourceState("Running")
	EndpointPropertiesStatusResourceState_Starting = EndpointPropertiesStatusResourceState("Starting")
	EndpointPropertiesStatusResourceState_Stopped  = EndpointPropertiesStatusResourceState("Stopped")
	EndpointPropertiesStatusResourceState_Stopping = EndpointPropertiesStatusResourceState("Stopping")
)

type EndpointProperties_Status_DeliveryPolicyARM struct {
	// Description: User-friendly description of the policy.
	Description *string `json:"description,omitempty"`

	// Rules: A list of the delivery rules.
	Rules []DeliveryRule_StatusARM `json:"rules,omitempty"`
}

type EndpointProperties_Status_WebApplicationFirewallPolicyLinkARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`
}

type GeoFilter_StatusARM struct {
	// Action: Action of the geo filter, i.e. allow or block access.
	Action *GeoFilterStatusAction `json:"action,omitempty"`

	// CountryCodes: Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `json:"countryCodes,omitempty"`

	// RelativePath: Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath *string `json:"relativePath,omitempty"`
}

type IdentityType_Status string

const (
	IdentityType_Status_Application     = IdentityType_Status("application")
	IdentityType_Status_Key             = IdentityType_Status("key")
	IdentityType_Status_ManagedIdentity = IdentityType_Status("managedIdentity")
	IdentityType_Status_User            = IdentityType_Status("user")
)

type OptimizationType_Status string

const (
	OptimizationType_Status_DynamicSiteAcceleration     = OptimizationType_Status("DynamicSiteAcceleration")
	OptimizationType_Status_GeneralMediaStreaming       = OptimizationType_Status("GeneralMediaStreaming")
	OptimizationType_Status_GeneralWebDelivery          = OptimizationType_Status("GeneralWebDelivery")
	OptimizationType_Status_LargeFileDownload           = OptimizationType_Status("LargeFileDownload")
	OptimizationType_Status_VideoOnDemandMediaStreaming = OptimizationType_Status("VideoOnDemandMediaStreaming")
)

type QueryStringCachingBehavior_Status string

const (
	QueryStringCachingBehavior_Status_BypassCaching     = QueryStringCachingBehavior_Status("BypassCaching")
	QueryStringCachingBehavior_Status_IgnoreQueryString = QueryStringCachingBehavior_Status("IgnoreQueryString")
	QueryStringCachingBehavior_Status_NotSet            = QueryStringCachingBehavior_Status("NotSet")
	QueryStringCachingBehavior_Status_UseQueryString    = QueryStringCachingBehavior_Status("UseQueryString")
)

type ResourceReference_StatusARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`
}

type UrlSigningKey_StatusARM struct {
	// KeyId: Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form
	// the hash.
	KeyId *string `json:"keyId,omitempty"`

	// KeySourceParameters: Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters *KeyVaultSigningKeyParameters_StatusARM `json:"keySourceParameters,omitempty"`
}

type DeepCreatedOriginGroupProperties_StatusARM struct {
	// HealthProbeSettings: Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters_StatusARM `json:"healthProbeSettings,omitempty"`

	// Origins: The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference_StatusARM `json:"origins,omitempty"`

	// ResponseBasedOriginErrorDetectionSettings: The JSON object that contains the properties to determine origin health using
	// real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters_StatusARM `json:"responseBasedOriginErrorDetectionSettings,omitempty"`

	// TrafficRestorationTimeToHealedOrNewEndpointsInMinutes: Time in minutes to shift the traffic to the endpoint gradually
	// when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not
	// supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `json:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes,omitempty"`
}

type DeepCreatedOriginProperties_StatusARM struct {
	// Enabled: Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `json:"enabled,omitempty"`

	// HostName: The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique
	// across all origins in an endpoint.
	HostName *string `json:"hostName,omitempty"`

	// HttpPort: The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `json:"httpPort,omitempty"`

	// HttpsPort: The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `json:"httpsPort,omitempty"`

	// OriginHostHeader: The host header value sent to the origin with each request. If you leave this blank, the request
	// hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host
	// header value to match the origin hostname by default.
	OriginHostHeader *string `json:"originHostHeader,omitempty"`

	// Priority: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load
	// balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `json:"priority,omitempty"`

	// PrivateEndpointStatus: The approval status for the connection to the Private Link
	PrivateEndpointStatus *PrivateEndpointStatus_Status `json:"privateEndpointStatus,omitempty"`

	// PrivateLinkAlias: The Alias of the Private Link resource. Populating this optional field indicates that this origin is
	// 'Private'
	PrivateLinkAlias *string `json:"privateLinkAlias,omitempty"`

	// PrivateLinkApprovalMessage: A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `json:"privateLinkApprovalMessage,omitempty"`

	// PrivateLinkLocation: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `json:"privateLinkLocation,omitempty"`

	// PrivateLinkResourceId: The Resource Id of the Private Link resource. Populating this optional field indicates that this
	// backend is 'Private'
	PrivateLinkResourceId *string `json:"privateLinkResourceId,omitempty"`

	// Weight: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `json:"weight,omitempty"`
}

type DeliveryRule_StatusARM struct {
	// Actions: A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []DeliveryRuleAction_StatusARM `json:"actions,omitempty"`

	// Conditions: A list of conditions that must be matched for the actions to be executed
	Conditions []DeliveryRuleCondition_StatusARM `json:"conditions,omitempty"`

	// Name: Name of the rule
	Name *string `json:"name,omitempty"`

	// Order: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a
	// lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not
	// require any condition and actions listed in it will always be applied.
	Order *int `json:"order,omitempty"`
}

type GeoFilterStatusAction string

const (
	GeoFilterStatusAction_Allow = GeoFilterStatusAction("Allow")
	GeoFilterStatusAction_Block = GeoFilterStatusAction("Block")
)

type KeyVaultSigningKeyParameters_StatusARM struct {
	// ResourceGroupName: Resource group of the user's Key Vault containing the secret
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// SecretName: The name of secret in Key Vault.
	SecretName *string `json:"secretName,omitempty"`

	// SecretVersion: The version(GUID) of secret in Key Vault.
	SecretVersion *string `json:"secretVersion,omitempty"`

	// SubscriptionId: Subscription Id of the user's Key Vault containing the secret
	SubscriptionId *string                                     `json:"subscriptionId,omitempty"`
	TypeName       *KeyVaultSigningKeyParametersStatusTypeName `json:"typeName,omitempty"`

	// VaultName: The name of the user's Key Vault containing the secret
	VaultName *string `json:"vaultName,omitempty"`
}

type DeliveryRuleAction_StatusARM struct {
	// Name: The name of the action for the delivery rule.
	Name *DeliveryRuleActionStatusName `json:"name,omitempty"`
}

type DeliveryRuleCondition_StatusARM struct {
	// Name: The name of the condition for the delivery rule.
	Name *DeliveryRuleConditionStatusName `json:"name,omitempty"`
}

type HealthProbeParameters_StatusARM struct {
	// ProbeIntervalInSeconds: The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `json:"probeIntervalInSeconds,omitempty"`

	// ProbePath: The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `json:"probePath,omitempty"`

	// ProbeProtocol: Protocol to use for health probe.
	ProbeProtocol *HealthProbeParametersStatusProbeProtocol `json:"probeProtocol,omitempty"`

	// ProbeRequestType: The type of health probe request that is made.
	ProbeRequestType *HealthProbeParametersStatusProbeRequestType `json:"probeRequestType,omitempty"`
}

type KeyVaultSigningKeyParametersStatusTypeName string

const KeyVaultSigningKeyParametersStatusTypeName_KeyVaultSigningKeyParameters = KeyVaultSigningKeyParametersStatusTypeName("KeyVaultSigningKeyParameters")

type ResponseBasedOriginErrorDetectionParameters_StatusARM struct {
	// HttpErrorRanges: The list of Http status code ranges that are considered as server errors for origin and it is marked as
	// unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters_StatusARM `json:"httpErrorRanges,omitempty"`

	// ResponseBasedDetectedErrorTypes: Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *ResponseBasedOriginErrorDetectionParametersStatusResponseBasedDetectedErrorTypes `json:"responseBasedDetectedErrorTypes,omitempty"`

	// ResponseBasedFailoverThresholdPercentage: The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `json:"responseBasedFailoverThresholdPercentage,omitempty"`
}

type DeliveryRuleActionStatusName string

const (
	DeliveryRuleActionStatusName_CacheExpiration            = DeliveryRuleActionStatusName("CacheExpiration")
	DeliveryRuleActionStatusName_CacheKeyQueryString        = DeliveryRuleActionStatusName("CacheKeyQueryString")
	DeliveryRuleActionStatusName_ModifyRequestHeader        = DeliveryRuleActionStatusName("ModifyRequestHeader")
	DeliveryRuleActionStatusName_ModifyResponseHeader       = DeliveryRuleActionStatusName("ModifyResponseHeader")
	DeliveryRuleActionStatusName_OriginGroupOverride        = DeliveryRuleActionStatusName("OriginGroupOverride")
	DeliveryRuleActionStatusName_RouteConfigurationOverride = DeliveryRuleActionStatusName("RouteConfigurationOverride")
	DeliveryRuleActionStatusName_UrlRedirect                = DeliveryRuleActionStatusName("UrlRedirect")
	DeliveryRuleActionStatusName_UrlRewrite                 = DeliveryRuleActionStatusName("UrlRewrite")
	DeliveryRuleActionStatusName_UrlSigning                 = DeliveryRuleActionStatusName("UrlSigning")
)

type DeliveryRuleConditionStatusName string

const (
	DeliveryRuleConditionStatusName_ClientPort       = DeliveryRuleConditionStatusName("ClientPort")
	DeliveryRuleConditionStatusName_Cookies          = DeliveryRuleConditionStatusName("Cookies")
	DeliveryRuleConditionStatusName_HostName         = DeliveryRuleConditionStatusName("HostName")
	DeliveryRuleConditionStatusName_HttpVersion      = DeliveryRuleConditionStatusName("HttpVersion")
	DeliveryRuleConditionStatusName_IsDevice         = DeliveryRuleConditionStatusName("IsDevice")
	DeliveryRuleConditionStatusName_PostArgs         = DeliveryRuleConditionStatusName("PostArgs")
	DeliveryRuleConditionStatusName_QueryString      = DeliveryRuleConditionStatusName("QueryString")
	DeliveryRuleConditionStatusName_RemoteAddress    = DeliveryRuleConditionStatusName("RemoteAddress")
	DeliveryRuleConditionStatusName_RequestBody      = DeliveryRuleConditionStatusName("RequestBody")
	DeliveryRuleConditionStatusName_RequestHeader    = DeliveryRuleConditionStatusName("RequestHeader")
	DeliveryRuleConditionStatusName_RequestMethod    = DeliveryRuleConditionStatusName("RequestMethod")
	DeliveryRuleConditionStatusName_RequestScheme    = DeliveryRuleConditionStatusName("RequestScheme")
	DeliveryRuleConditionStatusName_RequestUri       = DeliveryRuleConditionStatusName("RequestUri")
	DeliveryRuleConditionStatusName_ServerPort       = DeliveryRuleConditionStatusName("ServerPort")
	DeliveryRuleConditionStatusName_SocketAddr       = DeliveryRuleConditionStatusName("SocketAddr")
	DeliveryRuleConditionStatusName_SslProtocol      = DeliveryRuleConditionStatusName("SslProtocol")
	DeliveryRuleConditionStatusName_UrlFileExtension = DeliveryRuleConditionStatusName("UrlFileExtension")
	DeliveryRuleConditionStatusName_UrlFileName      = DeliveryRuleConditionStatusName("UrlFileName")
	DeliveryRuleConditionStatusName_UrlPath          = DeliveryRuleConditionStatusName("UrlPath")
)

type HttpErrorRangeParameters_StatusARM struct {
	// Begin: The inclusive start of the http status code range.
	Begin *int `json:"begin,omitempty"`

	// End: The inclusive end of the http status code range.
	End *int `json:"end,omitempty"`
}
