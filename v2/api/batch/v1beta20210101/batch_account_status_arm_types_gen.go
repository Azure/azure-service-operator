// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20210101

type BatchAccount_STATUSARM struct {
	// Id: The ID of the resource.
	Id *string `json:"id,omitempty"`

	// Identity: The identity of the Batch account.
	Identity *BatchAccountIdentity_STATUSARM `json:"identity,omitempty"`

	// Location: The location of the resource.
	Location *string `json:"location,omitempty"`

	// Name: The name of the resource.
	Name *string `json:"name,omitempty"`

	// Properties: The properties associated with the account.
	Properties *BatchAccountProperties_STATUSARM `json:"properties,omitempty"`

	// Tags: The tags of the resource.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: The type of the resource.
	Type *string `json:"type,omitempty"`
}

type BatchAccountIdentity_STATUSARM struct {
	// PrincipalId: The principal id of the Batch account. This property will only be provided for a system assigned identity.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: The tenant id associated with the Batch account. This property will only be provided for a system assigned
	// identity.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: The type of identity used for the Batch account.
<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
	Type *BatchAccountIdentity_Type_STATUS `json:"type,omitempty"`
========
	Type *BatchAccountIdentitySTATUSType `json:"type,omitempty"`
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go

	// UserAssignedIdentities: The list of user identities associated with the Batch account. The user identity dictionary key
	// references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
	UserAssignedIdentities map[string]BatchAccountIdentity_UserAssignedIdentities_STATUSARM `json:"userAssignedIdentities,omitempty"`
========
	UserAssignedIdentities map[string]BatchAccountIdentity_STATUS_UserAssignedIdentitiesARM `json:"userAssignedIdentities,omitempty"`
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go
}

type BatchAccountProperties_STATUSARM struct {
	// AccountEndpoint: The account endpoint used to interact with the Batch service.
	AccountEndpoint              *string                          `json:"accountEndpoint,omitempty"`
	ActiveJobAndJobScheduleQuota *int                             `json:"activeJobAndJobScheduleQuota,omitempty"`
	AutoStorage                  *AutoStorageProperties_STATUSARM `json:"autoStorage,omitempty"`

	// DedicatedCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription
	// so this value is not returned.
	DedicatedCoreQuota *int `json:"dedicatedCoreQuota,omitempty"`

	// DedicatedCoreQuotaPerVMFamily: A list of the dedicated core quota per Virtual Machine family for the Batch account. For
	// accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not
	// returned.
	DedicatedCoreQuotaPerVMFamily []VirtualMachineFamilyCoreQuota_STATUSARM `json:"dedicatedCoreQuotaPerVMFamily,omitempty"`

	// DedicatedCoreQuotaPerVMFamilyEnforced: Batch is transitioning its core quota system for dedicated cores to be enforced
	// per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not
	// yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the
	// account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the
	// dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.
	DedicatedCoreQuotaPerVMFamilyEnforced *bool `json:"dedicatedCoreQuotaPerVMFamilyEnforced,omitempty"`

	// Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using
	// a Microsoft managed key. For additional control, a customer-managed key can be used instead.
	Encryption        *EncryptionProperties_STATUSARM `json:"encryption,omitempty"`
	KeyVaultReference *KeyVaultReference_STATUSARM    `json:"keyVaultReference,omitempty"`

	// LowPriorityCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription
	// so this value is not returned.
	LowPriorityCoreQuota *int                       `json:"lowPriorityCoreQuota,omitempty"`
	PoolAllocationMode   *PoolAllocationMode_STATUS `json:"poolAllocationMode,omitempty"`
	PoolQuota            *int                       `json:"poolQuota,omitempty"`

	// PrivateEndpointConnections: List of private endpoint connections associated with the Batch account
	PrivateEndpointConnections []PrivateEndpointConnection_STATUSARM `json:"privateEndpointConnections,omitempty"`

	// ProvisioningState: The provisioned state of the resource
<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
	ProvisioningState *BatchAccountProperties_ProvisioningState_STATUS `json:"provisioningState,omitempty"`
========
	ProvisioningState *BatchAccountPropertiesSTATUSProvisioningState `json:"provisioningState,omitempty"`
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go

	// PublicNetworkAccess: If not specified, the default value is 'enabled'.
	PublicNetworkAccess *PublicNetworkAccessType_STATUS `json:"publicNetworkAccess,omitempty"`
}

type AutoStorageProperties_STATUSARM struct {
	// LastKeySync: The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync *string `json:"lastKeySync,omitempty"`

	// StorageAccountId: The resource ID of the storage account to be used for auto-storage account.
	StorageAccountId *string `json:"storageAccountId,omitempty"`
}

<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
type BatchAccountIdentity_Type_STATUS string

const (
	BatchAccountIdentity_Type_None_STATUS           = BatchAccountIdentity_Type_STATUS("None")
	BatchAccountIdentity_Type_SystemAssigned_STATUS = BatchAccountIdentity_Type_STATUS("SystemAssigned")
	BatchAccountIdentity_Type_UserAssigned_STATUS   = BatchAccountIdentity_Type_STATUS("UserAssigned")
)

type BatchAccountIdentity_UserAssignedIdentities_STATUSARM struct {
========
type BatchAccountIdentity_STATUS_UserAssignedIdentitiesARM struct {
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go
	// ClientId: The client id of user assigned identity.
	ClientId *string `json:"clientId,omitempty"`

	// PrincipalId: The principal id of user assigned identity.
	PrincipalId *string `json:"principalId,omitempty"`
}

<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
type EncryptionProperties_STATUSARM struct {
	// KeySource: Type of the key source.
	KeySource *EncryptionProperties_KeySource_STATUS `json:"keySource,omitempty"`
========
type BatchAccountIdentitySTATUSType string

const (
	BatchAccountIdentitySTATUSType_None           = BatchAccountIdentitySTATUSType("None")
	BatchAccountIdentitySTATUSType_SystemAssigned = BatchAccountIdentitySTATUSType("SystemAssigned")
	BatchAccountIdentitySTATUSType_UserAssigned   = BatchAccountIdentitySTATUSType("UserAssigned")
)

type EncryptionProperties_STATUSARM struct {
	// KeySource: Type of the key source.
	KeySource *EncryptionPropertiesSTATUSKeySource `json:"keySource,omitempty"`
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go

	// KeyVaultProperties: Additional details when using Microsoft.KeyVault
	KeyVaultProperties *KeyVaultProperties_STATUSARM `json:"keyVaultProperties,omitempty"`
}

type KeyVaultReference_STATUSARM struct {
	// Id: The resource ID of the Azure key vault associated with the Batch account.
	Id *string `json:"id,omitempty"`

	// Url: The URL of the Azure key vault associated with the Batch account.
	Url *string `json:"url,omitempty"`
}

type PrivateEndpointConnection_STATUSARM struct {
	// Etag: The ETag of the resource, used for concurrency statements.
	Etag *string `json:"etag,omitempty"`

	// Id: The ID of the resource.
	Id *string `json:"id,omitempty"`

	// Name: The name of the resource.
	Name *string `json:"name,omitempty"`

	// Properties: The properties associated with the private endpoint connection.
	Properties *PrivateEndpointConnectionProperties_STATUSARM `json:"properties,omitempty"`

	// Type: The type of the resource.
	Type *string `json:"type,omitempty"`
}

type VirtualMachineFamilyCoreQuota_STATUSARM struct {
	// CoreQuota: The core quota for the VM family for the Batch account.
	CoreQuota *int `json:"coreQuota,omitempty"`

	// Name: The Virtual Machine family name.
	Name *string `json:"name,omitempty"`
}

type KeyVaultProperties_STATUSARM struct {
	// KeyIdentifier: Full path to the versioned secret. Example
	// https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following
	// prerequisites must be met:
	// The Batch Account has a System Assigned identity
	// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
	// The KeyVault has soft-delete and purge protection enabled
	KeyIdentifier *string `json:"keyIdentifier,omitempty"`
}

type PrivateEndpointConnectionProperties_STATUSARM struct {
<<<<<<<< HEAD:v2/api/batch/v1beta20210101/batch_account_statusarm_types_gen.go
	PrivateEndpoint                   *PrivateEndpoint_STATUSARM                                    `json:"privateEndpoint,omitempty"`
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState_STATUSARM                  `json:"privateLinkServiceConnectionState,omitempty"`
	ProvisioningState                 *PrivateEndpointConnectionProperties_ProvisioningState_STATUS `json:"provisioningState,omitempty"`
========
	PrivateEndpoint                   *PrivateEndpoint_STATUSARM                                  `json:"privateEndpoint,omitempty"`
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState_STATUSARM                `json:"privateLinkServiceConnectionState,omitempty"`
	ProvisioningState                 *PrivateEndpointConnectionPropertiesSTATUSProvisioningState `json:"provisioningState,omitempty"`
>>>>>>>> main:v2/api/batch/v1beta20210101/batch_account_status_arm_types_gen.go
}

type PrivateEndpoint_STATUSARM struct {
	Id *string `json:"id,omitempty"`
}

type PrivateLinkServiceConnectionState_STATUSARM struct {
	ActionRequired *string                                    `json:"actionRequired,omitempty"`
	Description    *string                                    `json:"description,omitempty"`
	Status         *PrivateLinkServiceConnectionStatus_STATUS `json:"status,omitempty"`
}
