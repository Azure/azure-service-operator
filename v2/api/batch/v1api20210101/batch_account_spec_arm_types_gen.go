// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1api20210101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type BatchAccount_Spec_ARM struct {
	// Identity: The identity of the Batch account.
	Identity *BatchAccountIdentity_ARM `json:"identity,omitempty"`

	// Location: The region in which to create the account.
	Location *string `json:"location,omitempty"`
	Name     string  `json:"name,omitempty"`

	// Properties: The properties of the Batch account.
	Properties *BatchAccountCreateProperties_ARM `json:"properties,omitempty"`

	// Tags: The user-specified tags associated with the account.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &BatchAccount_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-01-01"
func (account BatchAccount_Spec_ARM) GetAPIVersion() string {
	return "2021-01-01"
}

// GetName returns the Name of the resource
func (account *BatchAccount_Spec_ARM) GetName() string {
	return account.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Batch/batchAccounts"
func (account *BatchAccount_Spec_ARM) GetType() string {
	return "Microsoft.Batch/batchAccounts"
}

// The properties of a Batch account.
type BatchAccountCreateProperties_ARM struct {
	// AutoStorage: The properties related to the auto-storage account.
	AutoStorage *AutoStorageBaseProperties_ARM `json:"autoStorage,omitempty"`

	// Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using
	// a Microsoft managed key. For additional control, a customer-managed key can be used instead.
	Encryption *EncryptionProperties_ARM `json:"encryption,omitempty"`

	// KeyVaultReference: A reference to the Azure key vault associated with the Batch account.
	KeyVaultReference *KeyVaultReference_ARM `json:"keyVaultReference,omitempty"`

	// PoolAllocationMode: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the
	// mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is
	// UserSubscription, clients must use Azure Active Directory. The default is BatchService.
	PoolAllocationMode *PoolAllocationMode_ARM `json:"poolAllocationMode,omitempty"`

	// PublicNetworkAccess: If not specified, the default value is 'enabled'.
	PublicNetworkAccess *PublicNetworkAccessType_ARM `json:"publicNetworkAccess,omitempty"`
}

// The identity of the Batch account, if configured. This is only used when the user specifies 'Microsoft.KeyVault' as
// their Batch account encryption configuration.
type BatchAccountIdentity_ARM struct {
	// Type: The type of identity used for the Batch account.
	Type                   *BatchAccountIdentity_Type_ARM             `json:"type,omitempty"`
	UserAssignedIdentities map[string]UserAssignedIdentityDetails_ARM `json:"userAssignedIdentities,omitempty"`
}

// The properties related to the auto-storage account.
type AutoStorageBaseProperties_ARM struct {
	StorageAccountId *string `json:"storageAccountId,omitempty"`
}

// +kubebuilder:validation:Enum={"None","SystemAssigned","UserAssigned"}
type BatchAccountIdentity_Type_ARM string

const (
	BatchAccountIdentity_Type_ARM_None           = BatchAccountIdentity_Type_ARM("None")
	BatchAccountIdentity_Type_ARM_SystemAssigned = BatchAccountIdentity_Type_ARM("SystemAssigned")
	BatchAccountIdentity_Type_ARM_UserAssigned   = BatchAccountIdentity_Type_ARM("UserAssigned")
)

// Mapping from string to BatchAccountIdentity_Type_ARM
var batchAccountIdentity_Type_ARM_Values = map[string]BatchAccountIdentity_Type_ARM{
	"none":           BatchAccountIdentity_Type_ARM_None,
	"systemassigned": BatchAccountIdentity_Type_ARM_SystemAssigned,
	"userassigned":   BatchAccountIdentity_Type_ARM_UserAssigned,
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
// managed key. For additional control, a customer-managed key can be used instead.
type EncryptionProperties_ARM struct {
	// KeySource: Type of the key source.
	KeySource *EncryptionProperties_KeySource_ARM `json:"keySource,omitempty"`

	// KeyVaultProperties: Additional details when using Microsoft.KeyVault
	KeyVaultProperties *KeyVaultProperties_ARM `json:"keyVaultProperties,omitempty"`
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReference_ARM struct {
	Id *string `json:"id,omitempty"`

	// Url: The URL of the Azure key vault associated with the Batch account.
	Url *string `json:"url,omitempty"`
}

// The allocation mode for creating pools in the Batch account.
// +kubebuilder:validation:Enum={"BatchService","UserSubscription"}
type PoolAllocationMode_ARM string

const (
	PoolAllocationMode_ARM_BatchService     = PoolAllocationMode_ARM("BatchService")
	PoolAllocationMode_ARM_UserSubscription = PoolAllocationMode_ARM("UserSubscription")
)

// Mapping from string to PoolAllocationMode_ARM
var poolAllocationMode_ARM_Values = map[string]PoolAllocationMode_ARM{
	"batchservice":     PoolAllocationMode_ARM_BatchService,
	"usersubscription": PoolAllocationMode_ARM_UserSubscription,
}

// The network access type for operating on the resources in the Batch account.
// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type PublicNetworkAccessType_ARM string

const (
	PublicNetworkAccessType_ARM_Disabled = PublicNetworkAccessType_ARM("Disabled")
	PublicNetworkAccessType_ARM_Enabled  = PublicNetworkAccessType_ARM("Enabled")
)

// Mapping from string to PublicNetworkAccessType_ARM
var publicNetworkAccessType_ARM_Values = map[string]PublicNetworkAccessType_ARM{
	"disabled": PublicNetworkAccessType_ARM_Disabled,
	"enabled":  PublicNetworkAccessType_ARM_Enabled,
}

// Information about the user assigned identity for the resource
type UserAssignedIdentityDetails_ARM struct {
}

// +kubebuilder:validation:Enum={"Microsoft.Batch","Microsoft.KeyVault"}
type EncryptionProperties_KeySource_ARM string

const (
	EncryptionProperties_KeySource_ARM_MicrosoftBatch    = EncryptionProperties_KeySource_ARM("Microsoft.Batch")
	EncryptionProperties_KeySource_ARM_MicrosoftKeyVault = EncryptionProperties_KeySource_ARM("Microsoft.KeyVault")
)

// Mapping from string to EncryptionProperties_KeySource_ARM
var encryptionProperties_KeySource_ARM_Values = map[string]EncryptionProperties_KeySource_ARM{
	"microsoft.batch":    EncryptionProperties_KeySource_ARM_MicrosoftBatch,
	"microsoft.keyvault": EncryptionProperties_KeySource_ARM_MicrosoftKeyVault,
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultProperties_ARM struct {
	// KeyIdentifier: Full path to the versioned secret. Example
	// https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following
	// prerequisites must be met:
	// The Batch Account has a System Assigned identity
	// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
	// The KeyVault has soft-delete and purge protection enabled
	KeyIdentifier *string `json:"keyIdentifier,omitempty"`
}
