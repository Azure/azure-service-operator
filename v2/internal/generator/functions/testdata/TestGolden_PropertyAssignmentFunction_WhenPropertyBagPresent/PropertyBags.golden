// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v20200101

import (
	person "github.com/Azure/azure-service-operator/testing/microsoft.person/v20211231"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/pkg/errors"
)

type Person struct {
	//FamilyName: Shared name of the family
	FamilyName string `json:"familyName"`

	//FullName: As would be used to address mail
	FullName string `json:"fullName"`

	//KnownAs: How the person is generally known
	KnownAs string `json:"knownAs"`
}

// AssignPropertiesFromPerson populates our Person from the provided source Person
func (person *Person) AssignPropertiesFromPerson(source *person.Person) error {
	// Clone the existing property bag
	propertyBag := genruntime.NewPropertyBag(source.PropertyBag)

	// FamilyName
	if propertyBag.Contains("FamilyName") {
		var familyName string
		err := propertyBag.Pull("FamilyName", &familyName)
		if err != nil {
			return errors.Wrap(err, "pulling 'FamilyName' from propertyBag")
		}

		person.FamilyName = familyName
	} else {
		person.FamilyName = ""
	}

	// FullName
	person.FullName = source.FullName

	// KnownAs
	if propertyBag.Contains("KnownAs") {
		var knownA string
		err := propertyBag.Pull("KnownAs", &knownA)
		if err != nil {
			return errors.Wrap(err, "pulling 'KnownAs' from propertyBag")
		}

		person.KnownAs = knownA
	} else {
		person.KnownAs = ""
	}

	// No error
	return nil
}

// AssignPropertiesToPerson populates the provided destination Person from our Person
func (person *Person) AssignPropertiesToPerson(destination *person.Person) error {
	// Create a new property bag
	propertyBag := genruntime.NewPropertyBag()

	// FamilyName
	propertyBag.Add("FamilyName", person.FamilyName)

	// FullName
	destination.FullName = person.FullName

	// KnownAs
	propertyBag.Add("KnownAs", person.KnownAs)

	// Update the property bag
	destination.PropertyBag = propertyBag

	// No error
	return nil
}
