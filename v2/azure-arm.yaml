schemaUrl: 'https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json'
schemaUrlRewrite:
  from: 'https://schema.management.azure.com/schemas/'
  to: 'specs/azure-resource-manager-schemas/schemas/'
destinationGoModuleFile: go.mod
# These two paths are relative to the module path above.
typesOutputPath: api
typeRegistrationOutputFile: internal/controllers/controller_resources_gen.go
samplesUrl: https://github.com/Azure/azure-service-operator/tree/main/v2/config/samples
pipeline: azure
typeFilters:
  - action: prune
    group: definitions
    name: Expression
    because: expression is an ARM template construct which doesn't belong in CRDs
  - action: include
    group: microsoft.servicebus
    version: v*api20210101preview
    because: We want to export this particular preview version
  - action: include
    group: microsoft.authorization
    version: v*api20200801preview
    because: We want to export this particular preview version
  - action: prune
    version: '*preview'
    because: preview SDK versions are excluded by default
  - action: prune
    group: microsoft.compute
    name: VirtualMachineScaleSetsExtensionsChildResource;VirtualMachinesExtensionsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.web
    because: Some types (SitesSlotsConfig) use OneOf in a way we don't currently handle. Exclude the whole set for now.
  - action: prune
    group: microsoft.network
    version: '*api201*'
    because: Pruning all older networking api versions types since we don't use them anyway
  - action: prune
    group: microsoft.compute
    version: '*api201*'
    because: Pruning all older compute api versions types since we don't use them anyway
  - action: prune
    group: microsoft.kusto
    because: Some types use OneOf in a way we don't currently handle correctly.
  - action: prune
    group: microsoft.timeseriesinsights
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.databoxedge
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.datashare
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.apimanagement
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.automation
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.machinelearningservices
    name: WorkspacesService*
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.resources
    name: DeploymentScript*
    because: Some types use OneOf to model inheritance, which we don't currently support.
  - action: prune
    group: microsoft.resources
    name: Tags
    because: This type is defined recursively.
  - action: include
    group: microsoft.compute.extensions
    name: GenericExtension
    because: This is the one kind of extension we want to allow
  - action: prune
    group: microsoft.compute.extensions
    because: All other extensions should be removed
  - action: prune
    group: microsoft.costmanagement
    because: QueryFilter is a self-referential, infinitely recursive type. We can't easily unroll it and controller-gen doesn't support recursive types
exportFilters:
  # First some always-applicable exclusions:
  - action: exclude
    group: definitions
    name: '*ResourceBase*'
    because: Not actually a resource, used for inheritance only.
  - action: exclude
    group: deploymenttemplate
    name: '*ResourceBase*'
    because: Not actually a resource, used for inheritance only.

  # Exclude some problematic types that need fixing:
  - action: exclude
    group: microsoft.machinelearning
    version: v*api20170101
    because: ExampleRequest.Inputs is a map[string][][]map[string]v1.JSON, which controller-gen doesn't know how to handle.
  - action: exclude
    group: microsoft.datafactory
    version: v*api20180601
    because: ExecuteSSISPackageActivityTypeProperties.PackageConnectionManagers is a map[string]map[string]SSISExecutionParameter, which controller-gen doesn't know how to handle

  # Include just the types we want to generate.
  # 'include-transitive' includes their dependencies recursively and makes sure everything that is needed is included:
  - action: include-transitive
    group: microsoft.storage
    version: v*api20210401
    name: 'StorageAccount'
    because: "including StorageAccount resource"
  - action: include-transitive
    group: microsoft.storage
    version: v*api20210401
    name: 'StorageAccountsBlobService'
    because: "including StorageAccountsBlobService resource"
  - action: include-transitive
    group: microsoft.storage
    version: v*api20210401
    name: 'StorageAccountsBlobServicesContainer'
    because: "including StorageAccountsBlobServicesContainer resource"
  - action: include-transitive
    group: microsoft.batch
    version: v*api20210101
    name: 'BatchAccount'
    because: "including BatchAccount resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccount
    because: "including Cosmos DB resource"
  - action: include-transitive
    group: microsoft.servicebus
    version: v*api20210101preview
    name: Namespace
    because: "including Service Bus namespaces"
  - action: include-transitive
    group: microsoft.servicebus
    version: v*api20210101preview
    name: NamespacesQueue
    because: "including Service Bus queues"
  - action: include-transitive
    group: microsoft.servicebus
    version: v*api20210101preview
    name: NamespacesTopic
    because: "including Service Bus topics"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: VirtualNetwork
    because: "including Virtual Network"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: VirtualNetworksSubnet
    because: "including Subnet"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: VirtualNetworksVirtualNetworkPeering
    because: "including Virtual Network Peering"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: VirtualNetworkGateway
    because: "including Virtual Network Gateway"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: PublicIPAddress
    because: "including public IP Address"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: LoadBalancer
    because: "including load balancer"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: NetworkSecurityGroup
    because: "including NSG"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: NetworkSecurityGroupsSecurityRule
    because: "including NSG rules"
  - action: include-transitive
    group: microsoft.compute
    version: v*api20200930
    name: Disk
    because: "including compute disk"
  - action: include-transitive
    group: microsoft.compute
    version: v*api20201201
    name: VirtualMachineScaleSet
    because: "including VMSS"
  - action: include-transitive
    group: microsoft.managedidentity
    version: v*20181130
    name: UserAssignedIdentity
    because: "including user assigned managed identity"
  - action: include-transitive
    group: microsoft.containerservice
    version: v*20210501
    name: ManagedCluster
    because: "including AKS Managed Cluster"
  - action: include-transitive
    group: microsoft.containerservice
    version: v*20210501
    name: ManagedClustersAgentPool
    because: "including AKS Managed Cluster Agent Pool"
  - action: include-transitive
    group: microsoft.dbforpostgresql
    version: v*20210601
    name: FlexibleServer
    because: "including PostgreSQL Flexible server"
  - action: include-transitive
    group: microsoft.dbforpostgresql
    version: v*20210601
    name: FlexibleServersDatabase
    because: "including PostgreSQL Flexible server DB"
  - action: include-transitive
    group: microsoft.dbforpostgresql
    version: v*20210601
    name: FlexibleServersFirewallRule
    because: "including PostgreSQL Flexible server Firewall rule"
  - action: include-transitive
    group: microsoft.dbforpostgresql
    version: v*20210601
    name: FlexibleServersConfiguration
    because: "including PostgreSQL Flexible server configurations"
  - action: include-transitive
    group: microsoft.authorization
    version: v*20200801preview
    name: RoleAssignment
    because: "including role assignments extension resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsMongodbDatabase
    renameTo: MongodbDatabase
    because: "including MongoDB database resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsMongodbDatabasesCollection
    renameTo: MongodbDatabaseCollection
    because: "including MongoDB collection resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsMongodbDatabasesThroughputSetting
    renameTo: MongodbDatabaseThroughputSetting
    because: "including MongoDB database throughputsettings resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsMongodbDatabasesCollectionsThroughputSetting
    renameTo: MongodbDatabaseCollectionThroughputSetting
    because: "including MongoDB collection throughputsettings resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabase
    renameTo: SqlDatabase
    because: "including CosmosDB SQL database resources"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesContainer
    renameTo: SqlDatabaseContainer
    because: "including CosmosDB SQL database resources"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesContainersStoredProcedure
    renameTo: SqlDatabaseContainerStoredProcedure
    because: "including CosmosDB SQL database resources"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesContainersTrigger
    renameTo: SqlDatabaseContainerTrigger
    because: "including CosmosDB SQL database resources"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesContainersUserDefinedFunction
    renameTo: SqlDatabaseContainerUserDefinedFunction
    because: "including CosmosDB SQL database resources"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesThroughputSetting
    renameTo: SqlDatabaseThroughputSetting
    because: "including SQL database throughputsettings resource"
  - action: include-transitive
    group: microsoft.documentdb
    version: v*api20210515
    name: DatabaseAccountsSqlDatabasesContainersThroughputSetting
    renameTo: SqlDatabaseContainerThroughputSetting
    because: "including SQL container throughputsettings resource"
  - action: include-transitive
    group: microsoft.eventgrid
    version: v*api20200601
    name: Topic
    because: "including Event Grid Topic"
  - action: include-transitive
    group: microsoft.compute
    version: v*api20201201
    name: VirtualMachine
    because: "including virtual machines"
  - action: include-transitive
    group: microsoft.network
    version: v*api20201101
    name: NetworkInterface
    because: "for use in virtual machine test"
  - action: include-transitive
    group: microsoft.eventhub
    version: v*api20211101
    name: Namespace
    because: "including Event Hub Namespace"
  - action: include-transitive
    group: microsoft.eventhub
    version: v*api20211101
    name: NamespacesAuthorizationRule
    because: "including Event Hub Namespace Authorization Rules"
  - action: include-transitive
    group: microsoft.eventhub
    version: v*api20211101
    name: NamespacesEventhub
    because: "including Event Hub"
  - action: include-transitive
    group: microsoft.eventhub
    version: v*api20211101
    name: NamespacesEventhubsAuthorizationRule
    because: "including Event Hub Authorization Rules"
  - action: include-transitive
    group: microsoft.eventhub
    version: v*api20211101
    name: NamespacesEventhubsConsumergroup
    renameTo: NamespacesEventhubsConsumerGroup
    because: "including Event Hub Consumer Group"
  - action: include-transitive
    group: microsoft.signalrservice
    version: v*api20211001
    name: SignalR
    because: "including SignalR Service"
  - action: include-transitive
    group: microsoft.dbformysql
    version: v*20210501
    name: FlexibleServer
    because: "including MySQL Flexible server"
  - action: include-transitive
    group: microsoft.dbformysql
    version: v*20210501
    name: FlexibleServersDatabase
    because: "including MySQL Flexible server DB"
  - action: include-transitive
    group: microsoft.dbformysql
    version: v*20210501
    name: FlexibleServersFirewallRule
    because: "including MySQL Flexible server Firewall rule"
  # Exclude everything else as we are operating on an opt-in basis at the moment:
  - action: exclude
    because: We don't want to generate anything else, at the moment.

# Exclusions for packages that currently produce types including AnyType.
# TODO: get rid of these, either by chasing the teams generating
# weird json or by handling them differently in the generator.
anyTypePackages:

typeTransformers:
  # Deal with stuff that exists on ARM resources but doesn't make sense on CRDs
  - group: definitions
    name: NumberOrExpression
    because: NumberOrExpression is an ARM template artifact that doesn't make sense in CRDs
    target:
      name: float
  - name: "*"
    property: Tags
    ifType: 
      map:
        key:
          name: string
        value:
          name: any
    target:
      map:
        key: 
          name: string
        value:
          name: string
    because: Tags is defined as map[string]interface{} when it should be map[string]string
  - group: deploymenttemplate
    name: ResourceLocations
    target:
      name: string
    because: Modeling this as an enum doesn't work well in the context of CRDs because new regions are regularly added
  - group: definitions
    name: ResourceLocations
    target:
      name: string
    because: Modeling this as an enum doesn't work well in the context of CRDs because new regions are regularly added
  - name: "*"
    property: Condition
    ifType:
      name: bool
      optional: true
    remove: true
    because: It exists on ARMResource but doesn't make sense in the context of a CRD
  - name: "*"
    property: Copy
    ifType:
      group: deploymenttemplate
      version: v1alpha1api20190401
      name: ResourceCopy
      optional: true
    remove: true
    because: It exists on ARMResource but doesn't make sense in the context of a CRD
  - name: "*"
    property: Copy
    ifType:
      group: definitions
      version: v1alpha1api
      name: ResourceCopy
      optional: true
    remove: true
    because: It exists on ARMResource but doesn't make sense in the context of a CRD. Doesn't match the above because of a quirk in how autogenerated resources include resourceBase.
  - name: "*"
    property: DependsOn
    remove: true
    because: It exists on ARMResource but doesn't make sense in the context of a CRD
  - name: "*"
    property: Comments
    ifType:
      name: string
      optional: true
    remove: true
    because: It exists on ARMResource but doesn't make sense in the context of a CRD

  # Deal with readonly properties that were not properly pruned in the JSON schema
  - name: BatchAccountIdentity
    group: microsoft.batch
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: Identity
    group: microsoft.servicebus
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: Identity
    group: microsoft.storage
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: ManagedServiceIdentity
    group: microsoft.documentdb
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: PrivateEndpointConnectionProperties
    group: microsoft.storage
    property: PrivateEndpoint
    remove: true
    because: The PrivateEndpoint property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: VirtualMachineScaleSetIdentity
    group: microsoft.compute
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: Identity
    group: microsoft.eventhub
    property: UserAssignedIdentities
    remove: true
    because: The UserAssignedIdentities property is enitrely readOnly but is modelled poorly in the JSON schemas. See discussion on https://github.com/Azure/azure-resource-manager-schemas/issues/835
  - name: PrivateEndpointConnectionProperties
    group: microsoft.eventhub
    property: PrivateLinkServiceConnectionState
    remove: true
    because: This property should be marked readonly
  - name: PrivateEndpointConnectionProperties
    group: microsoft.eventhub
    property: ProvisioningState
    remove: true
    because: This property should be marked readonly
  - name: NamespacesEventhubs_Spec_Properties
    group: microsoft.eventhub
    property: Status
    remove: true
    because: This property should be marked readonly
  - group: microsoft.eventgrid
    version: v*api20190601
    name: Domains_Spec
    property: Properties
    remove: true
    because: it has no writable properties in swagger
  - group: microsoft.eventgrid
    version: "*"
    name: Topics_Spec
    property: Properties
    remove: true
    because: it has no writable properties in swagger

  # Deal with properties that should have been marked readOnly but weren't
  - group: microsoft.servicebus
    name: Namespaces_Spec_Properties  # This type is subsequently flattened into Namespaces_Spec. I don't know why it's called this either (I think it should be SBNamespaceProperties?)
    property: PrivateEndpointConnections
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: microsoft.servicebus
    name: SBQueueProperties  # This type is subsequently flattened into NamespacesQueues_Spec
    property: Status
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: microsoft.servicebus
    name: SBTopicProperties  # This type is subsequently flattened into NamespacesTopics_Spec
    property: Status
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: microsoft.documentdb
    name: Location  # This type is subsequently flattened into NamespacesTopics_Spec
    property: ProvisioningState
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: microsoft.compute
    name: DiskProperties  # This type is subsequently flattened into Disks_Spec
    property: DiskState
    remove: true
    because: This property should have been marked readonly but wasn't.

  # Deal with resources that have tags included but shouldn't have (proxy resources, etc).
  # See https://github.com/Azure/azure-resource-manager-schemas/issues/1850
  - group: microsoft.containerservice
    name: ManagedClustersAgentPools_Spec
    property: Tags
    remove: true
    because: This really shouldn't be here (see bug referenced above)

status:
  schemaRoot: "./specs/azure-rest-api-specs/specification"

  overrides: [
    {
      # give the common types their own namespace
      basePath: 'common-types/resource-management',
      namespace: 'Microsoft.Common'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'sql/resource-manager/common',
      namespace: 'Microsoft.Sql'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'security/resource-manager/common',
      namespace: 'Microsoft.Security'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'eventhub/resource-manager/common',
      namespace: 'Microsoft.EventHub'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'securityinsights/resource-manager/common',
      namespace: 'Microsoft.SecurityInsights'
    },
  # the rest of the configuration below is copied from the ARM schema repo:
  # https://github.com/Azure/azure-resource-manager-schemas/blob/master/generator/autogenlist.ts
    {
        basePath: 'blueprint/resource-manager',
        namespace: 'Microsoft.Blueprint',
        resourceConfig: [
            {
                type: 'blueprintAssignments',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/artifacts',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/versions',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
        ]
    },
    {
        basePath: 'customproviders/resource-manager',
        namespace: 'Microsoft.CustomProviders',
        resourceConfig: [
            {
                type: 'associations',
                scopes: ScopeType.Extension,
            },
        ],
    },
    {
        basePath: 'consumption/resource-manager',
        namespace: 'Microsoft.Consumption',
        resourceConfig: [
            {
                type: 'budgets',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
    },
    {
      basePath: 'digitaltwins/resource-manager',
      resourceConfig: [
          {
              type: 'integrationResources',
              scopes: ScopeType.Extension,
          }
      ]
    },
    {
        basePath: 'deviceprovisioningservices/resource-manager',
        suffix: 'Provisioning',
    },
    {
        basePath: 'frontdoor/resource-manager',
        suffix: 'FrontDoor',
    },
    { 
        basePath: 'eventgrid/resource-manager',
        resourceConfig: [
            {
                type: 'eventSubscriptions',
                scopes: ScopeType.Extension | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
        ],
    },
    {
        basePath: 'machinelearning/resource-manager',
        postProcessor: machineLearningPostProcessor,
    },
    {
        basePath: 'managednetwork/resource-manager',
        resourceConfig: [
            {
                type: 'scopeAssignments',
                scopes: ScopeType.Subcription,
            },
        ],
    },
    {
        basePath: 'policyinsights/resource-manager',
        resourceConfig: [
            {
                type: 'remediations',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.ManagementGroup,
            }
        ]
    },
    {
        basePath: 'resources/resource-manager',
        resourceConfig: [
            {
                type: 'deployments',
                scopes: ScopeType.Tenant | ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
            {
                type: 'tags',
                scopes: ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
        postProcessor: resourcesPostProcessor,
    },
    {
        basePath: 'storSimple1200Series/resource-manager',
        suffix: '1200'
    },
    { 
        basePath: 'storsimple8000series/resource-manager',
        suffix: '8000',
    },
    {
        basePath: 'softwareplan/resource-manager',
        resourceConfig: [
            {
                type: 'hybridUseBenefits',
                scopes: ScopeType.Extension,
            },
        ]
    },
  ]
objectModelConfiguration: 
  microsoft.authorization:
    2020-08-01-preview:
      RoleAssignmentProperties:
        RoleDefinitionId:
          $armReference: true
  microsoft.batch:
    2021-01-01:
      KeyVaultReference:
        Id:
          $armReference: true
      AutoStorageBaseProperties:
        StorageAccountId:
          $armReference: true
  microsoft.compute:
    2020-09-30:
      SourceVault:
        Id:
          $armReference: true
      ImageDiskReference:
        Id:
          $armReference: true
      CreationData:
        SourceResourceId:
          $armReference: true
      DiskProperties:
        DiskAccessId:
          $armReference: true
    2020-1201:
      DiskEncryptionSetParameters:
        Id:
          $armReference: true
      VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations_Properties_IpConfigurations:
        # This is an Id that I believe refers to itself.
        # It's never supplied in a PUT I don't think, and is only returned in a GET because the
        # IPConfiguration is actually an ARM resource that can only be created by issuing a PUT VMSS.
        Id:
          $armReference: false
      ApiEntityReference:
        Id:
          $armReference: true
      ImageReference:
        Id:
          $armReference: true
      VirtualMachineScaleSets_Spec_Properties_VirtualMachineProfile_NetworkProfile_NetworkInterfaceConfigurations:
        # This is an Id that I believe refers to itself.
        # It's never supplied in a PUT I don't think, and is only returned in a GET because the
        # IPConfiguration is actually an ARM resource that can only be created by issuing a PUT VMSS.
        Id:
          $armReference: false
      SubResource:
        # When SubResource is used directly in a property, it's meant as a reference. When it's inherited from, the Id is for self
        Id:
          $armReference: true
      VirtualMachines_Spec_Properties_NetworkProfile_NetworkInterfaces:
        Id:
          $armReference: true
      ManagedDiskParameters:
        Id:
          $armReference: true
  microsoft.containerservice:
    2021-05-01:
      PrivateLinkResource:
        Id:
          $armReference: true
      ManagedClusterAgentPoolProfile:
        VnetSubnetID:
          $armReference: true
        PodSubnetID:
          $armReference: true
        NodePublicIPPrefixID:
          $armReference: true
      ManagedClusterAgentPoolProfileProperties:
        NodePublicIPPrefixID:
          $armReference: true
        PodSubnetID:
          $armReference: true
        VnetSubnetID:
          $armReference: true
      UserAssignedIdentity:
        ResourceId:
          $armReference: true
      ResourceReference:
        Id:
          $armReference: true
      Componentsqit0Etschemasmanagedclusterpropertiespropertiesidentityprofileadditionalproperties:
        ResourceId: # TODO: Is this right?
          $armReference: true
      ManagedClusterProperties:
        DiskEncryptionSetID:
          $armReference: true
  microsoft.dbforpostgresql:
    2021-06-01:
      Network:
        PrivateDnsZoneArmResourceId:
          $armReference: true
        DelegatedSubnetResourceId:
          $armReference: true
      ServerProperties:
        SourceServerResourceId:
          $armReference: true
  microsoft.dbformysql:
    2021-05-01:
      Network:
        PrivateDnsZoneResourceId:
          $armReference: true
        DelegatedSubnetResourceId:
          $armReference: true
  microsoft.documentdb:
    2021-05-15:
      VirtualNetworkRule:
        Id:
          $armReference: true
      MongoDBCollectionResource:
        Id:
          $armReference: false
      MongoDBDatabaseResource:
        Id:
          $armReference: false
      SqlDatabaseResource:
        Id:
          $armReference: false
      SqlContainerResource:
        Id:
          $armReference: false
      SqlTriggerResource:
        Id:
          $armReference: false
      SqlStoredProcedureResource:
        Id:
          $armReference: false
      SqlUserDefinedFunctionResource:
        Id:
          $armReference: false
  microsoft.eventhub:
    2021-11-01:
      Namespaces_Spec_Properties:
        ClusterArmId:
          $armReference: true
      UserAssignedIdentityProperties:
        UserAssignedIdentity:
          $armReference: true
      PrivateEndpoint:
        Id:
          $armReference: true
      DestinationProperties:
        StorageAccountResourceId:
          $armReference: true
  microsoft.network:
    2020-11-01:
      SubResource:
        Id:
          $armReference: true
      VirtualNetworkGateways_Spec_Properties:
        VNetExtendedLocationResourceId:
          $armReference: true
  microsoft.servicebus:
    2021-0101-preview:
      UserAssignedIdentityProperties:
        UserAssignedIdentity:
          $armReference: true
  microsoft.storage:
    2021-04-01:
      VirtualNetworkRule:
        Id:
          $armReference: true
      EncryptionIdentity:
        UserAssignedIdentity:
          $armReference: true
      ResourceAccessRule:
        ResourceId:
          $armReference: true
