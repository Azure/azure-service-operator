schemaRoot: "./specs/azure-rest-api-specs/specification/"

destinationGoModuleFile: go.mod

# typesOutputPath specifies the output folder name, relative to the directory containing the mod file above.
typesOutputPath: api

# typeRegistrationOutputFile specifies the output file name for registration code, relative to the directory 
# containing the mod file above.
typeRegistrationOutputFile: internal/controllers/controller_resources_gen.go

# rootUrl is the root URL for ASOv2 repo
rootUrl: https://github.com/Azure/azure-service-operator/tree/main/v2/

# samplesPath is the relative path to 'v2/azure-arm.yaml' file, used for walking through to samples when we generate a list of supported resources
samplesPath: samples

# emitDocFiles bool is used as a signal to create doc.go files for packages
emitDocFiles: true

pipeline: azure

supportedResourcesReport:
  # Path is relative to the module path, above
  outputFolder: ../docs/hugo/content/reference/
  # Path to documentation fragments to inject into the report
  fragmentPath: ../docs/v2/azure/supported-resources
  # resourceUrlTemplate is the template for generating URLs to the API docs for our resources
  # the placeholders {group} {version} and {kind} are supported.
  resourceUrlTemplate: "https://azure.github.io/azure-service-operator/reference/{group}/{version}/#{group}.azure.com/{version}.{kind}"
  # resourcePath is a template used for generating a file path for checking whether docs for a resource have been generated
  # specified relative to the directory of outputPath, and supports the same placeholders
  resourcePathTemplate: "{group}/{version}.md"
  currentRelease: v2.1.0

#
# These filters are used early in the processing pipeline. 
#
# We exclude types with known problems, types that we don't need, and other types that may cause issues.
# The 'because' value for each filter describes the reason why the filter is present.
#
# Filters are applied in document order, with the earliest matching filter being applied for each type.
#
typeFilters:

  - action: include
    group: servicebus
    version: v*20210101preview
    because: We want to export this particular preview version

  - action: include
    group: keyvault
    version: v*20210401preview
    because: We want to support keyvault which is only available in preview version

  - action: include
    group: dbforpostgresql
    version: v*20220120preview
    because: We want to export this particular preview version

  - action: include
    group: containerservice
    version: v*20230202preview
    because: We want to export this particular preview version

  - action: include
    group: insights
    version: v*20180501preview
    because: We're using webTests from this. There is a "newer" version but it's not actually supported, see https://github.com/Azure/azure-rest-api-specs/issues/14827

  - action: include
    group: authorization
    version: v*20200801preview
    because: We want to export this particular preview version

  - action: include
    group: managedidentity
    version: v*20220131preview
    because: We want to export this particular preview version

  - action: include
    group: common
    because: we need these for common resource properties

  - action: prune
    version: '*preview'
    because: preview SDK versions are excluded by default (they often do very strange things)

  - action: prune
    name: Deployment
    group: resources
    because: Terrifying.

  # TODO: I believe this type exists at
  # TODO : https://github.com/Azure/azure-rest-api-specs/blob/88e7838a09868a51de3894114355c75929847a46/specification/azsadmin/resource-manager/compute/Microsoft.Compute.Admin/stable/2021-04-01/Disks.json#L224
  # TODO: If we ever want access to the assadmin Microsoft.Compute.Admin RP we'll need to bring this back
  - action: prune
    name: Disk
    group: compute.admin
    because: "Don't know how to intersect types: []github.com/Azure/azure-service-operator/v2/api/compute.admin/v1beta20210401/Disk and (object)"

  - action: prune
    name: DiskListInput
    group: compute.admin
    because: "Ends up with nil due to above"

  - action: prune
    group: securityinsights
    name: Workspaces_Providers*
    because: Resource ownership is malformed

  - action: prune
    group: management
    because: There are some types in here (ManagementGroupChildInfo_Status) that are defined recursively.

  - action: prune
    group: azurestackhci
    because: There are some types in here (Step) that are defined recursively.

  - action: prune
    group: costmanagement
    because: QueryFilter is a self-referential, infinitely recursive type. We can't easily unroll it and controller-gen doesn't support recursive types

# Exclusions for packages that currently produce types including AnyType.
# TODO: get rid of these, either by chasing the teams generating
# weird json or by handling them differently in the generator.
anyTypePackages:

typeTransformers:
  # Deal with stuff that exists on ARM resources but doesn't make sense on CRDs
  - name: "*"
    property: Tags
    ifType: 
      map:
        key:
          name: string
        value:
          name: any
    target:
      map:
        key: 
          name: string
        value:
          name: string
    because: Tags is defined as map[string]interface{} when it should be map[string]string
  - group: cache
    name: RedisProperties_Status
    property: AccessKeys
    remove: true
    because: AccessKeys is only set on response to PUT/CREATE, but we fill out Status via GET so this field is always empty. It also contains secrets we wouldn't want to expose in status anyway.

  # Properties that should have been marked as ReadOnly in the Swagger
  - name: IotHub_Spec
    group: devices
    property: Etag
    remove: true
    because: This property should be marked readonly
  - name: SharedAccessSignatureAuthorizationRule
    group: devices
    property: PrimaryKey
    remove: true
    because: This property should be marked readonly
  - name: SharedAccessSignatureAuthorizationRule
    group: devices
    property: SecondaryKey
    remove: true
  - name: SharedAccessSignatureAuthorizationRule_STATUS
    group: devices
    property: PrimaryKey
    remove: true
    because: This property should be marked readonly
  - name: SharedAccessSignatureAuthorizationRule_STATUS
    group: devices
    property: SecondaryKey
    remove: true
    because: This property should be marked readonly
  - name: Namespace_Properties_Spec
    group: eventhub
    property: PrivateEndpointConnections
    remove: true
    because: This property should be marked readonly
  - name: PrivateEndpointConnectionProperties
    group: eventhub
    property: PrivateLinkServiceConnectionState
    remove: true
    because: This property should be marked readonly
  - name: PrivateEndpointConnectionProperties
    group: eventhub
    property: ProvisioningState
    remove: true
    because: This property should be marked readonly

  - group: network
    version: "*"
    name: RouteTables_Route_Spec
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: NetworkInterfaceIPConfiguration
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: NetworkInterfacePropertiesFormat
    property: MigrationPhase
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: PublicIPAddressPropertiesFormat
    property: MigrationPhase
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: NetworkSecurityGroups_SecurityRule_Spec
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: VirtualNetworks_Subnet_Spec
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: VirtualNetworks_VirtualNetworkPeering_Spec
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: Delegation
    property: Type
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: DnsZone_Spec
    property: Etag
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: DnsZones_AAAA_Spec;DnsZones_CAA_Spec;DnsZones_CNAME_Spec;DnsZones_MX_Spec;DnsZones_NS_Spec;DnsZones_PTR_Spec;DnsZones_SRV_Spec;DnsZones_TXT_Spec
    property: Etag
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger
  - group: network
    version: "*"
    name: Delegation
    property: Id
    # TODO[donotmerge]: We should do something more clean than this
    # Delegation is not getting its ID field removed when in the subnet context. This is
    # because it's set as resource: false. We can either:
    #  1. Manually prune the ID field.
    #  2. Make resourceEmbeddedInParent and resource separate so that both
    #     can be set.
    #  3. Make resourceEmbeddedInParent optionally a collection and mark Delegation as embedded both in subnet and vnet
    #  4. Live with it.
    remove: true
    because: We don't handle this very well right now, manually remove until TODO above has been done
  - group: network
    version: "*"
    name: PrivateEndpointProperties
    property: CustomDnsConfigs
    remove: true
    because: it is supposed to be marked ReadOnly in Swagger

  - name: EventHubProperties;Namespaces_Eventhub_Properties_Spec
    group: eventhub
    property: Status
    remove: true
    because: These properties should be marked readonly

  - group: search
    name: DataPlaneAuthOptions
    property: ApiKeyOnly
    remove: true
    because: We need a better handling for JSON # Discussion: https://github.com/Azure/azure-service-operator/pull/2916/files/93b06daa9549a91ac626e3241c5987b23b4087ac#r1179803300

  ## Deal with properties that should have been marked readOnly but weren't

    # TODO: Unused or renamed?
  - group: servicebus
    name: SBNamespaceProperties  # This type is subsequently flattened into Namespaces_Spec. I don't know why it's called this either (I think it should be SBNamespaceProperties?)
    property: PrivateEndpointConnections
    remove: true
    because: This property should have been marked readonly but wasn't.

  - group: servicebus
    name: SBQueueProperties  # This type is subsequently flattened into NamespacesQueues_Spec
    property: Status
    remove: true
    because: This property should have been marked readonly but wasn't.

  - group: servicebus
    name: SBTopicProperties  # This type is subsequently flattened into NamespacesTopics_Spec
    property: Status
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: servicebus
    name: SBSubscriptionProperties  # This type is subsequently flattened into Namespaces_Topics_Subscription_Spec
    property: Status
    remove: true
    because: This property should have been marked readonly but wasn't.
  - group: documentdb
    name: Location  # This type is subsequently flattened into NamespacesTopics_Spec
    property: ProvisioningState
    remove: true
    because: This property should have been marked readonly but wasn't.

  - group: compute
    name: DiskProperties  # This type is subsequently flattened into Disks_Spec
    property: DiskState
    remove: true
    because: This property should have been marked readonly but wasn't.

  # Remove embedded resource properties
  - group: network
    name: VirtualNetworkPropertiesFormat_Status  # This type is subsequently flattened into VirtualNetwork_Status
    property: Subnets
    remove: true
    because: This is an embedded resource
  - group: network
    name: VirtualNetworkPropertiesFormat_Status  # This type is subsequently flattened into VirtualNetwork_Status
    property: VirtualNetworkPeerings
    remove: true
    because: This is an embedded resource
  - group: network
    name: RouteTablePropertiesFormat_Status  # This type is subsequently flattened into RouteTable_Status
    property: Routes
    remove: true
    because: This is an embedded resource
  - group: network
    name: RouteTablePropertiesFormat_Status  # This type is subsequently flattened into RouteTable_Status
    property: Subnets
    remove: true
    because: This is an embedded resource

  # Deal with resources that have tags or location included but shouldn't have (proxy resources, etc).
  # See https://github.com/Azure/azure-resource-manager-schemas/issues/1850

  # Deal with service Swaggers that are just wrong
  - group: insights
    name: Webtest_Spec
    property: Kind
    remove: true
    because: This shouldn't be here, it's supposed to be on the Properties type (and is already). They somehow accidentally duplicated it.

  - group: insights
    name: WebTest_Status
    property: Kind
    remove: true
    because: This shouldn't be here, it's supposed to be on the Properties type (and is already). They somehow accidentally duplicated it.

status:

  overrides: [
    {
      # give the common types their own namespace
      basePath: 'common-types/resource-management',
      namespace: 'Microsoft.Common'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'sql/resource-manager/common',
      namespace: 'Microsoft.Sql'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'security/resource-manager/common',
      namespace: 'Microsoft.Security'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'eventhub/resource-manager/common',
      namespace: 'Microsoft.EventHub'
    },
    {
      # force the namespace here or it can fall foul of the sibling-name-collision test
      basePath: 'securityinsights/resource-manager/common',
      namespace: 'Microsoft.SecurityInsights'
    },
  # the rest of the configuration below is copied from the ARM schema repo:
  # https://github.com/Azure/azure-resource-manager-schemas/blob/master/generator/autogenlist.ts
    {
        basePath: 'blueprint/resource-manager',
        namespace: 'Microsoft.Blueprint',
        resourceConfig: [
            {
                type: 'blueprintAssignments',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/artifacts',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/versions',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
        ]
    },
    {
        basePath: 'customproviders/resource-manager',
        namespace: 'Microsoft.CustomProviders',
        resourceConfig: [
            {
                type: 'associations',
                scopes: ScopeType.Extension,
            },
        ],
    },
    {
        basePath: 'consumption/resource-manager',
        namespace: 'Microsoft.Consumption',
        resourceConfig: [
            {
                type: 'budgets',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
    },
    {
      basePath: 'digitaltwins/resource-manager',
      resourceConfig: [
          {
              type: 'integrationResources',
              scopes: ScopeType.Extension,
          }
      ]
    },
    {
        basePath: 'deviceprovisioningservices/resource-manager',
        suffix: 'Provisioning',
    },
    {
        basePath: 'frontdoor/resource-manager',
        suffix: 'FrontDoor',
    },
    { 
        basePath: 'eventgrid/resource-manager',
        resourceConfig: [
            {
                type: 'eventSubscriptions',
                scopes: ScopeType.Extension | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
        ],
    },
    {
        basePath: 'machinelearning/resource-manager',
        postProcessor: machineLearningPostProcessor,
    },
    {
        basePath: 'managednetwork/resource-manager',
        resourceConfig: [
            {
                type: 'scopeAssignments',
                scopes: ScopeType.Subcription,
            },
        ],
    },
    {
        basePath: 'policyinsights/resource-manager',
        resourceConfig: [
            {
                type: 'remediations',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.ManagementGroup,
            }
        ]
    },
    {
        basePath: 'resources/resource-manager',
        resourceConfig: [
            {
                type: 'deployments',
                scopes: ScopeType.Tenant | ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
            {
                type: 'tags',
                scopes: ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
        postProcessor: resourcesPostProcessor,
    },
    {
        basePath: 'storSimple1200Series/resource-manager',
        suffix: '1200'
    },
    { 
        basePath: 'storsimple8000series/resource-manager',
        suffix: '8000',
    },
    {
        basePath: 'softwareplan/resource-manager',
        resourceConfig: [
            {
                type: 'hybridUseBenefits',
                scopes: ScopeType.Extension,
            },
        ]
    },
  ]
# 
# This section of the configuration file mirrors the hierarchy of generated types, providing 
# additional information about how to handle each one.
#
# Each level of the configuration works as follows:
#
# group:              // The service - e.g. batch, redis or storage
#   version:          // ARM API version - e.g. 2020-12-01
#     type:           // A resource or subtype (similar to kubernetes 'kind')
#       property:     // An attribute found on an object type
#
# Please add new elements to this configuration in ALPHABETICAL order to make 
# it easier for future maintainers to scan for the item they want.
# 
# At specific levels, optional modifiers may be injected.
# All modifiers start with `$` in order to avoid clashes with ARM object and 
# property names
#
# ===================
#   Group modifiers
# ===================
#
# $payloadType: <string>
#     Specifies the type of the payload to generate for the group. This is used to compensate for 
#     some Azure Resource Providers using PATCH semantics instead of PUT semantics for updates.
#     We control this at the group level because RPs tend to be consistent across all their resources.
#
#     Valid values are:
#     omitempty - only non-empty properties are included (default)
#     explicitCollections - always include collections, even if empty; other properties only if specified.
#     explicitProperties - always include all properties, even the empty ones.
#
# ==================
#   Type modifiers
# ==================
#
# $azureGeneratedSecrets: <array of strings>
#     An array of names identifying the secrets generated by Azure which can be automatically
#     downloaded by the operator. Each element in the collection becomes
#     a property on operatorSpec.Secrets. Actual retrieval of the secrets must be manually
#     implemented as an extension on the resource type in question.
#     Only valid for resource types.
#
# $generatedConfigs: <map of string -> string>
#     The key of the map is the name of the property to export, the value of the map is a json-path like expression
#     to the property to export. Currently only $.<prop>.<prop> snytax is supported.
#     Only valid for resources.
#     Example:
#         $generatedConfigs:
#           BlobEndpoint: $.Status.PrimaryEndpoints.Blob
#
# $export: <bool>
#     Requests that support for this resource type be generated.
#     Automatically includes all other types required for this resource
#     If not specified, the default value is false.
#     Only valid for resource types.
#
# $exportAs: <string>
#     Requests that this resource type be exported with the specified
#     identifier, allowing poorly named types to be renamed.
#     Implies $export: true
#     Only valid for resource types.
#
# $importable: <bool>
#     Requests that support for asoctl to import this resource type be included
#     in the generated code.
#     If not specified, the default value is true.
#     Only valid for resource types.
#
# $manualConfigs: <array of strings>
#     An array of names identifying the properties which will be exported to config maps manually. Prefer $generatedConfigs
#     if the property is on Status or otherwise accessible on the resource itself. $manualConfigs can be used
#     to have more control over exactly what value goes into the exported config map, at the cost of needing to manually implement
#     the config map export in a resource extension. BEWARE: If you include a property here but don't actually use it in
#     a manually implemented resource extension, the $.Spec.OperatorSpec.ConfigMaps.<MyCustomConfigValue> field will do nothing
#     and be ignored!
#     Example:
#         $manualConfigs:
#           - MyCustomConfigValue
#
# $nameInNextVersion: <string>
#     Gives the name this type has in the next version of the resource.
#     Establishes a connection between the two types allowing for proper
#     forward and backward conversion.
#
# $supportedFrom: <version>
#     Gives the version number of the first release of ASO that provides 
#     support for this resource.
#     Note: If the resource is renamed via $exportAs, $supportedFrom won't 
#     work if you put it in the same section as $exportAs; you instead need 
#     to place $supportedFrom in a section using the name specified by $exportAs
#
# $isResource: <bool>
#     Configures if the given type is a resource or not. This can be used to
#     mark types that are labelled as a resources in the Swagger as normal (non-resource) types.
#     This is needed especially for compute and networking groups whose SubResource incorrectly labels
#     many resource references as resources instead.
#
# $resourceEmbeddedInParent: <resource name>
#     Labels the given type as a resource in some contexts, while not in others.
#     In particular this caters to pseudo-resources which have ARM IDs associated with them
#     and have GET APIs but cannot be created except as part of their parent. This enables
#     the generator to prune these resources from all contexts except their creation context.
#     A concrete example of this can be seen on LoadBalancer with "resources" like LoadBalancingRule.
#
# =======================
#   Property modifiers
# =======================
#
# $armReference: <bool>
#     Indicates whether this property is an ARM reference to another resource. 
#     Set to 'true' to confirm the property is an ARM reference.
#     Set to 'false' to disable our heuristics if a property is incorrectly 
#     identified as an ARM reference.
#
# $importConfigMapMode: <optional|required>
#     Specifies that the property can be imported from a config map.
#     Optional: The property may be specified as string or imported from a config map.
#               To achieve this in a non-breaking way, a new property is added to the object living alongside
#               the existing property. The new property is called <propName>FromConfig.
#     Required: The property must be specified from a config map, it cannot be given as a raw string.
#
# $isSecret: <bool>
#     Specifies that the property references a secret
#     Secrets are string values read from a secure storage by ASO when needed.
#     Set to `true` to flag this property as a secret. This is an override for when the Swagger
#     is incomplete. If you specify $isSecret: true, you should also open a PR to update the 
#     upstream Swagger repo spec with the x-ms-secret annotation.
#     Here's a reference PR: https://github.com/Azure/azure-rest-api-specs/pull/19399
#
# $nameInNextVersion: <string>
#     Gives the name this property has in the next version of the resource
#     Establishes a connection between the two properties allowing for proper
#     forward and backward conversion.
#
# $resourceLifecycleOwnedByParent: <string>
#     Specifies that the property references a misbehaving embedded resource, one whose parent
#     resource owns the lifecycle of the child resource.
#     These resources are embedded resources which are overwritten when their parent resource
#     is changed. For example see https://github.com/Azure/azure-service-operator/issues/1944.
#     The value should be the name of the parent resource which owns the lifecycle of the
#     sub-resource.
#
objectModelConfiguration:
  appconfiguration:
    2022-05-01:
      ConfigurationStore:
        $export: true
        $supportedFrom: v2.0.0-beta.3
        $azureGeneratedSecrets:
          - PrimaryKeyID
          - PrimaryKey
          - PrimaryConnectionString
          - SecondaryKeyID
          - SecondaryKey
          - SecondaryConnectionString
          - PrimaryReadOnlyKeyID
          - PrimaryReadOnlyKey
          - PrimaryReadOnlyConnectionString
          - SecondaryReadOnlyKeyID
          - SecondaryReadOnlyKey
          - SecondaryReadOnlyConnectionString
      PrivateEndpointConnectionReference_STATUS:
        # This is a subresource but it's not labelled as one in their Swagger, instead there's a duplicate entity
        # shaped the same called PrivateEndpointConnection which is labelled as a resource. We want to prune this.
        $isResource: true
  authorization:
    2020-08-01-preview:
      RoleAssignment:
        $export: true
        $supportedFrom: v2.0.0-alpha.2
      RoleAssignmentProperties:
        RoleDefinitionId:
          $armReference: true
        PrincipalId:
          $importConfigMapMode: optional
  batch:
    2021-01-01:
      BatchAccount:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
  cache:
    2020-12-01:
      Redis:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
        $azureGeneratedSecrets:
          - PrimaryKey
          - SecondaryKey
          - HostName
          - Port
          - SSLPort
# TODO: Does this need to be uncommented
#      RedisCreateProperties:
#        SubnetId:
#          $armReference: true
      Redis_FirewallRule:
        $exportAs: RedisFirewallRule
        $supportedFrom: v2.0.0-alpha.4
      Redis_LinkedServer:
        $exportAs: RedisLinkedServer
        $supportedFrom: v2.0.0-alpha.4
      Redis_PatchSchedule: 
        $exportAs: RedisPatchSchedule
        $supportedFrom: v2.0.0-alpha.4
    2021-03-01:
      RedisEnterprise:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
      RedisEnterprise_Database:
        $exportAs: RedisEnterpriseDatabase
        $supportedFrom: v2.0.0-alpha.4
  cdn:
    2021-06-01:
      DeepCreatedOriginGroup:
        $isResource: false  # TODO[breaking]: This actually is a resource but we initially had it in our model so leaving it here for now
      DeepCreatedOriginGroup_STATUS:
        $isResource: false
      DeepCreatedOriginGroupProperties:
        $isResource: false  # TODO[breaking]: This actually is a resource but we initially had it in our model so leaving it here for now
      DeepCreatedOriginGroupProperties_STATUS:
        $isResource: false
      DeepCreatedOrigin:
        $isResource: false  # TODO[breaking]: This actually is a resource but we initially had it in our model so leaving it here for now
      DeepCreatedOrigin_STATUS:
        $isResource: false
      DeepCreatedOriginProperties:
        $isResource: false  # TODO[breaking]: This actually is a resource but we initially had it in our model so leaving it here for now
        PrivateLinkLocation:
          $armReference: true
        PrivateLinkResourceId:
          $armReference: true
      DeepCreatedOriginProperties_STATUS:
        $isResource: false
      EndpointProperties_WebApplicationFirewallPolicyLink:
        Id:
          $armReference: true
      Profile:
        $export: true
        $supportedFrom: v2.0.0-beta.1
      Profiles_Endpoint:
        $exportAs: ProfilesEndpoint
        $supportedFrom: v2.0.0-beta.1
  compute:
    2020-09-30:
      CreationData:
        SourceResourceId:
          $armReference: true
      Disk:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      DiskProperties:
        DiskAccessId:
          $armReference: true
      Encryption:
        DiskEncryptionSetId:
          $armReference: true
      ImageDiskReference:
        Id:
          $armReference: true
      Snapshot:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
      SnapshotProperties:
        DiskAccessId: 
          $armReference: true
      SourceVault:
        Id:
          $armReference: true
    2020-12-01:
      ApiEntityReference:
        Id:
          $armReference: true
      ImageReference:
        $isResource: false
      ImageReference_STATUS:
        $isResource: false
      ManagedDiskParameters:
        $isResource: false
      ManagedDiskParameters_STATUS:
        $isResource: false
      NetworkInterfaceReference:
        $isResource: false
      NetworkInterfaceReference_STATUS:
        $isResource: false
      VirtualMachine:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      VirtualMachineExtension_STATUS:
        $isResource: false  # TODO[breaking]: This is actually a resource but we weren't pruning it before
      VirtualMachineScaleSet:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      VirtualMachineScaleSetExtension:
        $isResource: false
      VirtualMachineScaleSetExtension_STATUS:
        $isResource: false
      VirtualMachineScaleSetIPConfiguration:
        $isResource: false
      VirtualMachineScaleSetIPConfiguration_STATUS:
        $isResource: false
      VirtualMachineScaleSetNetworkConfiguration:
        $isResource: false
      VirtualMachineScaleSetNetworkConfiguration_STATUS:
        $isResource: false
    2021-07-01:
      Image:
        $export: true
        $supportedFrom: v2.0.0-alpha.6
    2022-03-01:
      ApiEntityReference:
        Id:
          $armReference: true
      Image:
        $export: true
        $supportedFrom: v2.0.0-beta.2
      ImageReference:
        $isResource: false
        Version:
          $armReference: false
      ImageReference_STATUS:
        $isResource: false
      ManagedDiskParameters:
        $isResource: false
      ManagedDiskParameters_STATUS:
        $isResource: false
#      NetworkInterfaceConfiguration:
#        $isResource: false
      NetworkInterfaceReference:
        $isResource: false
      NetworkInterfaceReference_STATUS:
        $isResource: false
      NetworkProfile:
        $isResource: false
      NetworkProfile_STATUS:
        $isResource: false
      VMGalleryApplication:
        PackageReferenceId:
          $armReference: true
      VirtualMachine:
        $export: true
        $supportedFrom: v2.0.0-beta.2
      VirtualMachineExtension_STATUS:
        $isResource: false  # TODO[breaking]: This is actually a resource but we weren't pruning it before
      VirtualMachineScaleSet:
        $export: true
        $supportedFrom: v2.0.0-beta.2
      VirtualMachineScaleSetExtension:
        $isResource: false
      VirtualMachineScaleSetExtension_STATUS:
        $isResource: false
      VirtualMachineScaleSetIPConfiguration:
        $isResource: false
      VirtualMachineScaleSetIPConfiguration_STATUS:
        $isResource: false
      VirtualMachineScaleSetNetworkConfiguration:
        $isResource: false
      VirtualMachineScaleSetNetworkConfiguration_STATUS:
        $isResource: false
  containerinstance:
    2021-10-01:
      ContainerGroup:
        $export: true
        $supportedFrom: v2.0.0-beta.1
      ContainerGroupSubnetId:
        Id:
          $armReference: true
      LogAnalytics:
        WorkspaceResourceId:
          $armReference: true
  containerregistry:
    2021-09-01:
      Registry:
        $export: true
        $supportedFrom: v2.0.0-alpha.6
      IdentityProperties:
        PrincipalId:
          $armReference: false
  containerservice:
    2021-05-01:
      ManagedCluster:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
        $azureGeneratedSecrets:
          - AdminCredentials
          - UserCredentials
      ManagedClusterAgentPoolProfile:
        ProximityPlacementGroupID:
          $armReference: false  # This is true in the next version and we have custom conversion to make round-tripping work
      ManagedClusters_AgentPool:
        $exportAs: ManagedClustersAgentPool
        $supportedFrom: v2.0.0-alpha.1
      ManagedClusterAgentPoolProfileProperties:
        ProximityPlacementGroupID:
          $armReference: false # This is true in the next version and we have custom conversion to make round-tripping work
      ManagedClusterServicePrincipalProfile:
        Secret:
          $isSecret: true
      PrivateLinkResource:
        Id:
          $armReference: true
    2023-02-01:
      ManagedCluster:
        $export: true
        $supportedFrom: v2.0.0
        $azureGeneratedSecrets:
          - AdminCredentials
          - UserCredentials
      ManagedClusters_AgentPool:
        $exportAs: ManagedClustersAgentPool
        $supportedFrom: v2.0.0
      ManagedClusterServicePrincipalProfile:
        Secret:
          $isSecret: true
      PrivateLinkResource:
        Id:
          $armReference: true
    2023-02-02-preview:
      ManagedCluster:
        $export: true
        $supportedFrom: v2.0.0
        $azureGeneratedSecrets:
          - AdminCredentials
          - UserCredentials
      ManagedClusters_AgentPool:
        $exportAs: ManagedClustersAgentPool
        $supportedFrom: v2.0.0
      ManagedClusterServicePrincipalProfile:
        Secret:
          $isSecret: true
      PrivateLinkResource:
        Id:
          $armReference: true
  datafactory:
    2018-06-01:
      PurviewConfiguration:
        PurviewResourceId:
          $armReference: true
      CMKIdentityDefinition:
        UserAssignedIdentity:
          $armReference: true
      Factory:
        $export: true
        $supportedFrom: v2.1.0
  dbformariadb:
    2018-06-01:
      Server:
        $export: true
        $supportedFrom: v2.0.0-beta.1
        $azureGeneratedSecrets:
          - FullyQualifiedDomainName
      Servers_Configuration:
        $exportAs: Configuration
        $supportedFrom: v2.0.0-beta.1
      Servers_Database:
        $exportAs: Database
        $supportedFrom: v2.0.0-beta.1
  dbformysql:
    v1: # Handcrafted 
      User:
        $supportedFrom: v2.0.0
    2021-05-01:
      DataEncryption:
        GeoBackupUserAssignedIdentityId:
          $armReference: true
        PrimaryUserAssignedIdentityId:
          $armReference: true
      FlexibleServer: 
        $export: true
        $supportedFrom: v2.0.0-alpha.2
        $azureGeneratedSecrets:
          - FullyQualifiedDomainName
      FlexibleServers_Database:
        $exportAs: FlexibleServersDatabase
        $supportedFrom: v2.0.0-alpha.2
      FlexibleServers_FirewallRule:
        $exportAs: FlexibleServersFirewallRule
        $supportedFrom: v2.0.0-alpha.2
    2022-01-01:
      FlexibleServers_Administrator:
        $exportAs: FlexibleServersAdministrator
        $supportedFrom: v2.1.0
      AdministratorProperties:
        IdentityResourceId:
          $armReference: true # TODO: Upstream to Swagger
        Sid:
          $importConfigMapMode: optional
        TenantId:
          $importConfigMapMode: optional
      FlexibleServers_Configuration:
        $exportAs: FlexibleServersConfiguration
        $supportedFrom: v2.1.0
  dbforpostgresql:
    v1: # Handcrafted 
      User:
        $supportedFrom: v2.0.0
    2021-06-01:
      FlexibleServer:
        $export: true
        $supportedFrom: v2.0.0-alpha.2
        $azureGeneratedSecrets:
          - FullyQualifiedDomainName
      FlexibleServers_Configuration:
        $exportAs: FlexibleServersConfiguration
        $supportedFrom: v2.0.0-alpha.4
      FlexibleServers_Database:
        $exportAs: FlexibleServersDatabase
        $supportedFrom: v2.0.0-alpha.2
      FlexibleServers_FirewallRule:
        $exportAs: FlexibleServersFirewallRule
        $supportedFrom: v2.0.0-alpha.2
    2022-01-20-preview:
      FlexibleServer:
        $export: true
        $supportedFrom: v2.0.0-beta.4
        $generatedConfigs:
          FullyQualifiedDomainName: $.Status.FullyQualifiedDomainName
      FlexibleServers_Configuration:
        $exportAs: FlexibleServersConfiguration
        $supportedFrom: v2.0.0-beta.4
      FlexibleServers_Database:
        $exportAs: FlexibleServersDatabase
        $supportedFrom: v2.0.0-beta.4
      FlexibleServers_FirewallRule:
        $exportAs: FlexibleServersFirewallRule
        $supportedFrom: v2.0.0-beta.4
      ServerProperties:
        SourceServerResourceId:
          $armReference: true
      Network:
        DelegatedSubnetResourceId:
          $armReference: true
        PrivateDnsZoneArmResourceId:
          $armReference: true
  devices:
    2021-07-02:
      IotHub:
        $export: true
        $supportedFrom: v2.1.0
        $azureGeneratedSecrets:
          - ServicePrimaryKey
          - ServiceSecondaryKey
          - IotHubOwnerPrimaryKey
          - IotHubOwnerSecondaryKey
          - DevicePrimaryKey
          - DeviceSecondaryKey
          - RegistryReadPrimaryKey
          - RegistryReadSecondaryKey
          - RegistryReadWritePrimaryKey
          - RegistryReadWriteSecondaryKey
      RoutingServiceBusQueueEndpointProperties:
        Id:
          $armReference: true
        ConnectionString:
          $isSecret: true
      RoutingEventHubProperties:
        Id:
          $armReference: true
        ConnectionString:
          $isSecret: true
      RoutingServiceBusTopicEndpointProperties:
        Id:
          $armReference: true
        ConnectionString:
          $isSecret: true
      RoutingStorageContainerProperties:
        Id:
          $armReference: true
        ConnectionString:
          $isSecret: true
      StorageEndpointProperties:
        ConnectionString:
          $isSecret: true
  documentdb:
    2021-05-15:
      DatabaseAccount:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
        $azureGeneratedSecrets:
          - PrimaryMasterKey
          - SecondaryMasterKey
          - PrimaryReadonlyMasterKey
          - SecondaryReadonlyMasterKey
          - DocumentEndpoint
      DatabaseAccountCreateUpdateProperties:
        NetworkAclBypassResourceIds:
          $armReference: false  # TODO[breaking]: Change this to true
      DatabaseAccounts_MongodbDatabase:
        $exportAs: MongodbDatabase
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_MongodbDatabases_Collection:
        $exportAs: MongodbDatabaseCollection
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_MongodbDatabases_Collections_ThroughputSetting:
        $exportAs: MongodbDatabaseCollectionThroughputSetting
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_MongodbDatabases_ThroughputSetting:
        $exportAs: MongodbDatabaseThroughputSetting
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabase:
        $exportAs: SqlDatabase
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_Container:
        $exportAs: SqlDatabaseContainer
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_Containers_StoredProcedure:
        $exportAs: SqlDatabaseContainerStoredProcedure
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_Containers_ThroughputSetting:
        $exportAs: SqlDatabaseContainerThroughputSetting
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_Containers_Trigger:
        $exportAs: SqlDatabaseContainerTrigger
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_Containers_UserDefinedFunction:
        $exportAs: SqlDatabaseContainerUserDefinedFunction
        $supportedFrom: v2.0.0-alpha.2
      DatabaseAccounts_SqlDatabases_ThroughputSetting:
        $exportAs: SqlDatabaseThroughputSetting
        $supportedFrom: v2.0.0-alpha.2
      MongoDBCollectionResource:
        Id:
          $armReference: false
      MongoDBDatabaseResource:
        Id:
          $armReference: false
      SqlDatabaseResource:
        Id:
          $armReference: false
      SqlContainerResource:
        Id:
          $armReference: false
      DatabaseAccounts_SqlRoleAssignment:
        $exportAs: SqlRoleAssignment
        $supportedFrom: v2.0.0-beta.3
      SqlRoleAssignmentResource:
        PrincipalId:
          $importConfigMapMode: optional
      SqlTriggerResource:
        Id:
          $armReference: false
      SqlStoredProcedureResource:
        Id:
          $armReference: false
      SqlUserDefinedFunctionResource:
        Id:
          $armReference: false
  eventgrid:
    2020-06-01:
      Domain:
        $export: true
        $supportedFrom: v2.0.0-alpha.5
      Domains_Topic:
        $exportAs: DomainsTopic
        $supportedFrom: v2.0.0-alpha.5
      EventSubscription:
        $export: true
        $supportedFrom: v2.0.0-alpha.5
      Topic:
        $export: true
        $supportedFrom: v2.0.0-alpha.3
  eventhub:
    2021-11-01:
      Destination_Properties:
        StorageAccountResourceId:
          $armReference: true
      Namespace:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      Namespaces_AuthorizationRule:
        $exportAs: NamespacesAuthorizationRule
        $supportedFrom: v2.0.0-alpha.2
      Namespaces_Eventhub:
        $exportAs: NamespacesEventhub
        $supportedFrom: v2.0.0-alpha.3
      Namespaces_Eventhubs_AuthorizationRule:
        $exportAs: NamespacesEventhubsAuthorizationRule
        $supportedFrom: v2.0.0-alpha.3
      Namespaces_Eventhubs_Consumergroup:
        $exportAs: NamespacesEventhubsConsumerGroup
        $supportedFrom: v2.0.0-alpha.1
      Namespace_Properties_Spec:
        ClusterArmId:
          $armReference: true
# TODO: I think this has been (correctly) pruned now
#      PrivateEndpoint:
#        Id:
#          $armReference: true
      UserAssignedIdentityProperties:
        UserAssignedIdentity:
          $armReference: true
      
  insights:
    2018-05-01-preview:
      Webtest:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
      WebTestGeolocation:
        Id:
          $armReference: false
    2020-02-02:
      ApplicationInsightsComponentProperties:
        WorkspaceResourceId:
          $armReference: true
      Component:
        $export: true
        $supportedFrom: v2.0.0-alpha.2
        $generatedConfigs:
          ConnectionString: $.Status.ConnectionString
          InstrumentationKey: $.Status.InstrumentationKey
  keyvault:
    2021-04-01-preview:
      Vault:
        $export: true
        $supportedFrom: v2.0.0-beta.1
      AccessPolicyEntry:
        TenantId:
          $importConfigMapMode: optional
        ApplicationId:
          $importConfigMapMode: optional
        ObjectId:
          $importConfigMapMode: optional
      VirtualNetworkRule:
        Id:
          $armReference: true
  managedidentity:
    2018-11-30:
      UserAssignedIdentity:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
        $generatedConfigs:
          ClientId: $.Status.ClientId
          PrincipalId: $.Status.PrincipalId
          TenantId: $.Status.TenantId
    2022-01-31-preview:
      # Not adding UserAssignedIdentity here because it's identical to the one in 2018
      UserAssignedIdentities_FederatedIdentityCredential:
        $exportAs: FederatedIdentityCredential
        $supportedFrom: v2.0.0-beta.3
  machinelearningservices:
    2021-07-01:
      AksNetworkingConfiguration:
        SubnetId:
          $armReference: true
      Kubernetes:
        ResourceId:
          $armReference: true
      Workspace:
        $export: true
        $supportedFrom: v2.0.0-beta.2
        $azureGeneratedSecrets:
          - AppInsightsInstrumentationKey
          - ContainerRegistryUserName
          - ContainerRegistryPassword
          - ContainerRegistryPassword2
          - PrimaryNotebookAccessKey
          - SecondaryNotebookAccessKey
          - UserStorageKey
      WorkspaceProperties:
        ApplicationInsights:
          $armReference: true
        ContainerRegistry:
          $armReference: true
        KeyVault:
          $armReference: true
        PrimaryUserAssignedIdentity:
          $armReference: true
        StorageAccount:
          $armReference: true
      SharedPrivateLinkResourceProperty:
        PrivateLinkResourceId:
          $armReference: true
      Workspaces_Compute:
        $exportAs: WorkspacesCompute
        $supportedFrom: v2.0.0-beta.2
      HDInsight:
        ResourceId:
          $armReference: true
      DataFactory:
        ResourceId:
          $armReference: true
      DataLakeAnalytics:
        ResourceId:
          $armReference: true
      Databricks:
        ResourceId:
          $armReference: true
      AKS:
        ResourceId:
          $armReference: true
      ComputeInstance:
        ResourceId:
          $armReference: true
      SynapseSpark:
        ResourceId:
          $armReference: true
      AmlCompute:
        ResourceId:
          $armReference: true
      VirtualMachine:
        ResourceId:
          $armReference: true
      VirtualMachineImage:
        Id:
          $armReference: true
      UserAccountCredentials:
        AdminUserPassword:
          $isSecret: true
        AdminUserSshPublicKey:
          $isSecret: true
      VirtualMachineSshCredentials:
        Password:
          $isSecret: true
      Workspaces_Connection:
        $exportAs: WorkspacesConnection
        $supportedFrom: v2.0.0-beta.2
  network:
    2018-05-01:
      DnsZone:
        $export: true
        $supportedFrom: v2.1.0
      DnsZones_A:
        $exportAs: DnsZonesARecord
        $supportedFrom: v2.1.0
      DnsZones_AAAA:
        $exportAs: DnsZonesAAAARecord
        $supportedFrom: v2.1.0
      DnsZones_CAA:
        $exportAs: DnsZonesCAARecord
        $supportedFrom: v2.1.0
      DnsZones_CNAME:
        $exportAs: DnsZonesCNAMERecord
        $supportedFrom: v2.1.0
      DnsZones_MX:
        $exportAs: DnsZonesMXRecord
        $supportedFrom: v2.1.0
      DnsZones_NS:
        $exportAs: DnsZonesNSRecord
        $supportedFrom: v2.1.0
      DnsZones_SRV:
        $exportAs: DnsZonesSRVRecord
        $supportedFrom: v2.1.0
      DnsZones_PTR:
        $exportAs: DnsZonesPTRRecord
        $supportedFrom: v2.1.0
      DnsZones_TXT:
        $exportAs: DnsZonesTXTRecord
        $supportedFrom: v2.1.0
      SubResource:
        Id:
          $armReference: true
    2018-09-01:
      PrivateDnsZone:
        $export: true
        $supportedFrom: v2.0.0-beta.2
    2020-06-01:
      PrivateDnsZones_VirtualNetworkLink:
        $exportAs: PrivateDnsZonesVirtualNetworkLink
        $supportedFrom: v2.0.0
      PrivateDnsZones_A:
        $exportAs: PrivateDnsZonesARecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_AAAA:
        $exportAs: PrivateDnsZonesAAAARecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_CNAME:
        $exportAs: PrivateDnsZonesCNAMERecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_MX:
        $exportAs: PrivateDnsZonesMXRecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_SRV:
        $exportAs: PrivateDnsZonesSRVRecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_PTR:
        $exportAs: PrivateDnsZonesPTRRecord
        $supportedFrom: v2.0.0
      PrivateDnsZones_TXT:
        $exportAs: PrivateDnsZonesTXTRecord
        $supportedFrom: v2.0.0
    2020-11-01:
      BackendAddressPool:
        # TODO[breaking]: This is actually a real resource that can be created as a child of a loadbalancer,
        # but we didn't model it that way initially, so marking it as not a resource for now to maintain backcompat
        $resourceEmbeddedInParent: LoadBalancer
      BackendAddressPool_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      Delegation:
        $isResource: false
        #$resourceEmbeddedInParent: VirtualNetworks_Subnet
      Delegation_STATUS:
        $isResource: false
        #$resourceEmbeddedInParent: VirtualNetworks_Subnet
      FrontendIPConfiguration:
        $resourceEmbeddedInParent: LoadBalancer # Can GET (has ID) but can't create
      FrontendIPConfiguration_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      LoadBalancers_InboundNatRule: # TODO: There must always be a parent and child in the same API version. See https://github.com/Azure/azure-service-operator/issues/3002
        $exportAs: LoadBalancersInboundNatRule
        $supportedFrom: v2.1.0
      InboundNatRule:
        # TODO[breaking]: This is actually a real resource that can be created as a child of a loadbalancer,
        # but we didn't model it that way initially, so marking it as not a resource for now to maintain backcompat
        $resourceEmbeddedInParent: LoadBalancer
      InboundNatRule_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      InboundNatPool:
        $resourceEmbeddedInParent: LoadBalancer # This is not a real resource
      InboundNatPool_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      LoadBalancer:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      LoadBalancingRule:
        $resourceEmbeddedInParent: LoadBalancer # This is not a real resource, can GET but can't PUT
      LoadBalancingRule_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      NetworkInterface:
        $export: true
        $supportedFrom: v2.0.0-alpha.3
      NetworkInterfaceIPConfiguration:
        $resourceEmbeddedInParent: NetworkInterface  # Not a real resource, can GET but not PUT
      NetworkInterfaceIPConfiguration_STATUS:
        $resourceEmbeddedInParent: NetworkInterface
      NetworkSecurityGroup:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      NetworkSecurityGroups_SecurityRule:
        $exportAs: NetworkSecurityGroupsSecurityRule
        $supportedFrom: v2.0.0-alpha.1
      OutboundRule:
        $resourceEmbeddedInParent: LoadBalancer  # Not a real resource, can GET but not PUT
      OutboundRule_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      Probe:
        $resourceEmbeddedInParent: LoadBalancer  # Not a real resource, can GET but not PUT
      Probe_STATUS:
        $resourceEmbeddedInParent: LoadBalancer
      PublicIPAddress:
        $exportAs: PublicIPAddress
        $supportedFrom: v2.0.0-alpha.1
      RouteTable:
        $export: true
        $supportedFrom: v2.0.0-beta.1
      RouteTablePropertiesFormat:
        Routes:
          $resourceLifecycleOwnedByParent: RouteTable
      RouteTables_Route: # TODO: There must always be a parent and child in the same API version. See https://github.com/Azure/azure-service-operator/issues/3002
        $exportAs: RouteTablesRoute
        $supportedFrom: v2.0.0-beta.1
#      SecurityRule_NetworkInterface_SubResourceEmbedded:
#        Id:
#          $armReference: true
#      SecurityRule_VirtualNetworksSubnet_SubResourceEmbedded:
#        Id:
#          $armReference: true
#      Subnet_VirtualNetwork_SubResourceEmbedded:
#        Id:
#          $armReference: true
      VirtualNetwork:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      VirtualNetworkGateway:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
      VirtualNetworkGatewayPropertiesFormat:
        VNetExtendedLocationResourceId:
          $armReference: true
      VirtualNetworkGatewayIPConfiguration:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VirtualNetworkGatewayIPConfiguration_STATUS:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VpnClientRevokedCertificate:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VpnClientRevokedCertificate_STATUS:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VpnClientRootCertificate:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VpnClientRootCertificate_STATUS:
        $resourceEmbeddedInParent: VirtualNetworkGateway
      VirtualNetworkPropertiesFormat:
        Subnets:
          $resourceLifecycleOwnedByParent: VirtualNetwork
        VirtualNetworkPeerings:
          # Technically this resource behaves fine (updating the vnet doesn't delete these if they
          # aren't included in the payload). Marking it here so that the pruning takes effect.
          $resourceLifecycleOwnedByParent: VirtualNetwork
      VirtualNetworks_Subnet: # TODO: There must always be a parent and child in the same API version. See https://github.com/Azure/azure-service-operator/issues/3002
        $exportAs: VirtualNetworksSubnet
        $supportedFrom: v2.0.0-alpha.1
      VirtualNetworks_VirtualNetworkPeering:
        $exportAs: VirtualNetworksVirtualNetworkPeering
        $supportedFrom: v2.0.0-alpha.1
    2022-07-01:
      BastionHost:
        # This technically supports 2022-09-01 API version too, but it's identical to the 2022-07-01 version
        # so limiting proliferation of APIVersions and using 2022-07-01 for it
        $export: true
        $supportedFrom: v2.1.0
      BastionHostIPConfiguration:
        $resourceEmbeddedInParent: BastionHost
      DnsResolver:
        $export: true
        $supportedFrom: v2.2.0
      DnsResolvers_InboundEndpoint:
        $exportAs: DnsResolversInboundEndpoint
        $supportedFrom: v2.2.0
      DnsResolvers_OutboundEndpoint:
        $exportAs: DnsResolversOutboundEndpoint
        $supportedFrom: v2.2.0
      DnsForwardingRuleSet:
        $export: true
        $supportedFrom: v2.2.0
      DnsForwardingRuleSets_ForwardingRule:
        $exportAs: DnsForwardingRuleSetsForwardingRule
        $supportedFrom: v2.2.0
      TargetDnsServer:
        IpAddress:
          $importConfigMapMode: optional
      NatGateway:
        $export: true
        $supportedFrom: v2.1.0
      PublicIPPrefix:
        $export: true
        $supportedFrom: v2.1.0
      PrivateEndpoint:
        $export: true
        $supportedFrom: v2.0.0
      PrivateLinkService:
        $export: true
        $supportedFrom: v2.0.0
        $generatedConfigs:
          Alias: $.Status.Alias
      PrivateLinkServiceConnection:
        $resourceEmbeddedInParent: PrivateEndpoint
      PrivateLinkServiceConnection_STATUS:
        $resourceEmbeddedInParent: PrivateEndpoint
      PrivateLinkServiceConnectionProperties:
        PrivateLinkServiceId:
          $armReference: true
      PrivateLinkServiceIpConfiguration:
        $resourceEmbeddedInParent: PrivateLinkService
      PrivateLinkServiceIpConfiguration_STATUS:
        $resourceEmbeddedInParent: PrivateLinkService
      PrivateEndpoints_PrivateDnsZoneGroup:
        $exportAs: PrivateEndpointsPrivateDnsZoneGroup
        $supportedFrom: v2.0.0
      PrivateDnsZonePropertiesFormat:
        PrivateDnsZoneId:
          $armReference: true
  operationalinsights:
    2021-06-01:
      Workspace:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
      WorkspaceFeatures:
        ClusterResourceId:
          $armReference: true
  resources:
    2020-06-01:
      ResourceGroup:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
  search:
    2022-09-01:
      SearchService:
        $export: true
        $supportedFrom: v2.1.0
        $azureGeneratedSecrets:
          - AdminPrimaryKey
          - AdminSecondaryKey
          - QueryKey
  servicebus:
    2021-01-01-preview:
      Namespace:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
        $azureGeneratedSecrets:
          - Endpoint
          - PrimaryKey
          - PrimaryConnectionString
          - SecondaryKey
          - SecondaryConnectionString
      Namespaces_AuthorizationRule:
        $exportAs: NamespacesAuthorizationRule
        $supportedFrom: v2.1.0
        $azureGeneratedSecrets:
          - PrimaryKey
          - PrimaryConnectionString
          - SecondaryKey
          - SecondaryConnectionString
      Namespaces_Queue:
        $exportAs: NamespacesQueue
        $supportedFrom: v2.0.0-alpha.1
      Namespaces_Topic:
        $exportAs: NamespacesTopic
        $supportedFrom: v2.0.0-alpha.1
      UserAssignedIdentityProperties:
        UserAssignedIdentity:
          $armReference: true
      Namespaces_Topics_Subscription:
        $exportAs: NamespacesTopicsSubscription
        $supportedFrom: v2.0.0-beta.3
      Namespaces_Topics_Subscriptions_Rule:
        $exportAs: NamespacesTopicsSubscriptionsRule
        $supportedFrom: v2.0.0-beta.3
  signalrservice:
    2021-10-01:
      SignalR:
        $export: true
        $supportedFrom: v2.0.0-alpha.4
  sql:
    2021-11-01:
      # Note that there are a few commented out resources which we are not exporting for sql. They're commented out as
      # they seem of questionable value to users, but if we get an ask for them we can add them in.
      Server:
        $export: true
        $supportedFrom: v2.0.0
        $generatedConfigs:
          FullyQualifiedDomainName: $.Status.FullyQualifiedDomainName
      Servers_Administrator:
        $exportAs: ServersAdministrator
        $supportedFrom: v2.0.0
      AdministratorProperties:
        Sid:
          $importConfigMapMode: optional
        TenantId:
          $importConfigMapMode: optional
      Servers_SecurityAlertPolicy:
        $exportAs: ServersSecurityAlertPolicy
        $supportedFrom: v2.0.0
      Servers_AdvancedThreatProtectionSetting:
        $exportAs: ServersAdvancedThreatProtectionSetting
        $supportedFrom: v2.0.0
      Servers_AuditingSetting:
        $exportAs: ServersAuditingSetting
        $supportedFrom: v2.0.0
      Servers_AzureADOnlyAuthentication:
        $exportAs: ServersAzureADOnlyAuthentication
        $supportedFrom: v2.0.0
      Servers_ConnectionPolicy:
        $exportAs: ServersConnectionPolicy
        $supportedFrom: v2.0.0
#      Servers_DnsAliase: # TODO: Not sure how this works - it has no properties but name?
#        $exportAs: ServersDnsAliases
#        $supportedFrom: v2.0.0
      Servers_ElasticPool:
        $exportAs: ServersElasticPool
        $supportedFrom: v2.0.0
      Servers_FailoverGroup:
        $exportAs: ServersFailoverGroup
        $supportedFrom: v2.0.0
      Servers_FirewallRule:
        $exportAs: ServersFirewallRule
        $supportedFrom: v2.0.0
      Servers_Ipv6FirewallRule:
        $exportAs: ServersIPV6FirewallRule
        $supportedFrom: v2.0.0
#      Servers_JobAgent:
#        $exportAs: ServersJobAgent
#        $supportedFrom: v2.0.0
      Servers_OutboundFirewallRule:
        $exportAs: ServersOutboundFirewallRule
        $supportedFrom: v2.0.0
#      Servers_SyncAgent:
#        $exportAs: ServersSyncAgent
#        $supportedFrom: v2.0.0
      Servers_VirtualNetworkRule:
        $exportAs: ServersVirtualNetworkRule
        $supportedFrom: v2.0.0
      Servers_VulnerabilityAssessment:
        $exportAs: ServersVulnerabilityAssessment
        $supportedFrom: v2.0.0
      ServerVulnerabilityAssessmentProperties:
        StorageContainerPath:
          $importConfigMapMode: optional
      Servers_Database:
        $exportAs: ServersDatabase
        $supportedFrom: v2.0.0
      Servers_Databases_BackupLongTermRetentionPolicy:
        $exportAs: ServersDatabasesBackupLongTermRetentionPolicy
        $supportedFrom: v2.0.0
      Servers_Databases_BackupShortTermRetentionPolicy:
        $exportAs: ServersDatabasesBackupShortTermRetentionPolicy
        $supportedFrom: v2.0.0
      Servers_Databases_AdvancedThreatProtectionSetting:
        $exportAs: ServersDatabasesAdvancedThreatProtectionSetting
        $supportedFrom: v2.0.0
      Servers_Databases_AuditingSetting:
        $exportAs: ServersDatabasesAuditingSetting
        $supportedFrom: v2.0.0
#      Servers_Databases_DataMaskingPolicy: # there's also a "Rules" subresource here
#        $exportAs: ServersDatabasesDataMaskingPolicy
#        $supportedFrom: v2.0.0
#      Servers_Databases_ExtendedAuditingSetting: # TODO: Not sure what the difference is between this and the normal auditing setting
#        $exportAs: ServersDatabasesExtendedAuditingSetting
#        $supportedFrom: v2.0.0
#      Servers_Databases_GeoBackupPolicy:  # TODO: Not actually supported in ARM at the moment
#        $exportAs: ServersDatabasesGeoBackupPolicy
#        $supportedFrom: v2.0.0
#      Servers_Databases_MaintenanceWindow: # TODO: Seems to have name Servers_Databases_MaintenanceWindows_Current, not sure why
#        $exportAs: ServersDatabasesMaintenanceWindow
#        $supportedFrom: v2.0.0
      Servers_Databases_SecurityAlertPolicy:
        $exportAs: ServersDatabasesSecurityAlertPolicy
        $supportedFrom: v2.0.0
#      Servers_Databases_SyncGroup:
#        $exportAs: ServersDatabasesSyncGroups
#        $supportedFrom: v2.0.0
#      Servers_Databases_SyncGroups_SyncMember:
#        $exportAs: ServersDatabasesSyncGroupsSyncMember
#        $supportedFrom: v2.0.0
      Servers_Databases_TransparentDataEncryption:
        $exportAs: ServersDatabasesTransparentDataEncryption
        $supportedFrom: v2.0.0
      Servers_Databases_VulnerabilityAssessment:
        $exportAs: ServersDatabasesVulnerabilityAssessment
        $supportedFrom: v2.0.0
      DatabaseVulnerabilityAssessmentsDatabaseVulnerabilityAssessmentProperties:
        StorageContainerPath:
          $importConfigMapMode: optional
#      Servers_Databases_WorkloadGroup:
#        $exportAs: ServersDatabasesWorkloadGroup
#        $supportedFrom: v2.0.0
#      Servers_Databases_WorkloadGroups_WorkloadClassifier:
#        $exportAs: ServersDatabasesWorkloadGroupsWorkloadClassifier
#        $supportedFrom: v2.0.0
  storage:
    $payloadType: explicitCollections
    2021-04-01:
      EncryptionIdentity:
        UserAssignedIdentity:
          $armReference: true
      ResourceAccessRule:
        ResourceId:
          $armReference: true
      StorageAccount:
        $export: true
        $supportedFrom: v2.0.0-alpha.1
        $azureGeneratedSecrets:
          - Key1
          - Key2
          - WebEndpoint
          - BlobEndpoint
          - FileEndpoint
          - QueueEndpoint
          - TableEndpoint
          - DfsEndpoint
        $generatedConfigs:
          WebEndpoint: $.Status.PrimaryEndpoints.Web
          BlobEndpoint: $.Status.PrimaryEndpoints.Blob
          FileEndpoint: $.Status.PrimaryEndpoints.File
          QueueEndpoint: $.Status.PrimaryEndpoints.Queue
          TableEndpoint: $.Status.PrimaryEndpoints.Table
          DfsEndpoint: $.Status.PrimaryEndpoints.Dfs
      StorageAccounts_BlobService:
        $exportAs: StorageAccountsBlobService
        $supportedFrom: v2.0.0-alpha.1
      StorageAccounts_BlobServices_Container:
        $exportAs: StorageAccountsBlobServicesContainer
        $supportedFrom: v2.0.0-alpha.1
      StorageAccounts_QueueService:
        $exportAs: StorageAccountsQueueService
        $supportedFrom: v2.0.0-alpha.5
      StorageAccounts_QueueServices_Queue:
        $exportAs: StorageAccountsQueueServicesQueue
        $supportedFrom: v2.0.0-alpha.5
      StorageAccounts_ManagementPolicy:
        $exportAs: StorageAccountsManagementPolicy
        $supportedFrom: v2.0.0-alpha.6
      VirtualNetworkRule:
        Id:
          $armReference: true
    2022-09-01:
      StorageAccount:
        $export: true
        $supportedFrom: v2.1.0
        $azureGeneratedSecrets:
          - Key1
          - Key2
          - WebEndpoint
          - BlobEndpoint
          - FileEndpoint
          - QueueEndpoint
          - TableEndpoint
          - DfsEndpoint
        $generatedConfigs:
          WebEndpoint: $.Status.PrimaryEndpoints.Web
          BlobEndpoint: $.Status.PrimaryEndpoints.Blob
          FileEndpoint: $.Status.PrimaryEndpoints.File
          QueueEndpoint: $.Status.PrimaryEndpoints.Queue
          TableEndpoint: $.Status.PrimaryEndpoints.Table
          DfsEndpoint: $.Status.PrimaryEndpoints.Dfs
      StorageAccounts_BlobService:
        $exportAs: StorageAccountsBlobService
        $supportedFrom: v2.1.0
      StorageAccounts_BlobServices_Container:
        $exportAs: StorageAccountsBlobServicesContainer
        $supportedFrom: v2.1.0
      StorageAccounts_QueueService:
        $exportAs: StorageAccountsQueueService
        $supportedFrom: v2.1.0
      StorageAccounts_QueueServices_Queue:
        $exportAs: StorageAccountsQueueServicesQueue
        $supportedFrom: v2.1.0
      StorageAccounts_ManagementPolicy:
        $exportAs: StorageAccountsManagementPolicy
        $supportedFrom: v2.1.0
      VirtualNetworkRule:
        Id:
          $armReference: true
      EncryptionIdentity:
        UserAssignedIdentity:
          $armReference: true
      ResourceAccessRule:
        ResourceId:
          $armReference: true
      StorageAccounts_TableService:
        $exportAs: StorageAccountsTableService
        $supportedFrom: v2.1.0
      StorageAccounts_TableServices_Table:
        $exportAs: StorageAccountsTableServicesTable
        $supportedFrom: v2.1.0
      TableSignedIdentifier:
        Id:
          $armReference: true
      StorageAccounts_FileService:
        $exportAs: StorageAccountsFileService
        $supportedFrom: v2.1.0
      StorageAccounts_FileServices_Share:
        $exportAs: StorageAccountsFileServicesShare
        $supportedFrom: v2.1.0
      SignedIdentifier:
        Id:
          $armReference: true
  subscription:
    2021-10-01:
      Alias:
        $export: true
        $supportedFrom: v2.0.0-beta.2
  synapse:
    2021-06-01:
      KekIdentityProperties:
        UserAssignedIdentity:
          $armReference: true
      DataLakeStorageAccountDetails:
        ResourceId:
          $armReference: true
        AccountUrl:
          $importConfigMapMode: optional
      PurviewConfiguration:
        PurviewResourceId:
          $armReference: true
      Workspace:
        $export: true
        $supportedFrom: v2.0.0
      WorkspaceProperties:
        SqlAdministratorLoginPassword:
          $isSecret: true
      Workspaces_BigDataPool:
        $export: true
        $exportAs: WorkspacesBigDataPool
        $supportedFrom: v2.0.0
  web:
    2022-03-01:
      ApiManagementConfig:
        Id:
          $armReference: true
      CloningInfo:
        TrafficManagerProfileId:
          $armReference: true
        SourceWebAppId:
          $armReference: true
      HostingEnvironmentProfile:
        Id:
          $armReference: true
      IpSecurityRestriction:
        VnetSubnetResourceId:
          $armReference: true
      KubeEnvironmentProfile:
        Id:
          $armReference: true
      PushSettings:
        # This actually is a resource I think, but as far as I can tell in the context it's used
        # here as part of SitesConfig it has to be embedded as there is no writable ID field
        $isResource: false
      PushSettings_STATUS:
        $isResource: false
      ServerFarm:
        $exportAs: ServerFarm
        $supportedFrom: v2.0.0-beta.3
      Site:
        $export: true
        $supportedFrom: v2.0.0-beta.3
      Site_Properties_Spec:
        ServerFarmId:
          $armReference: true
        VirtualNetworkSubnetId:
          $armReference: true
