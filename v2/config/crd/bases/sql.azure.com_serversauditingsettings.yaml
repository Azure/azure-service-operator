---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: serversauditingsettings.sql.azure.com
spec:
  group: sql.azure.com
  names:
    kind: ServersAuditingSetting
    listKind: ServersAuditingSettingList
    plural: serversauditingsettings
    singular: serversauditingsetting
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/BlobAuditing.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/default
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              auditActionsAndGroups:
                description: |-
                  AuditActionsAndGroups: Specifies the Actions-Groups and Actions to audit.
                  The recommended set of action groups to use is the following combination - this will audit all the queries and stored
                  procedures executed against the database, as well as successful and failed logins:
                  BATCH_COMPLETED_GROUP,
                  SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
                  FAILED_DATABASE_AUTHENTICATION_GROUP.
                  This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
                  The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using
                  unnecessary groups could lead to very large quantities of audit records):
                  APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
                  BACKUP_RESTORE_GROUP
                  DATABASE_LOGOUT_GROUP
                  DATABASE_OBJECT_CHANGE_GROUP
                  DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
                  DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
                  DATABASE_OPERATION_GROUP
                  DATABASE_PERMISSION_CHANGE_GROUP
                  DATABASE_PRINCIPAL_CHANGE_GROUP
                  DATABASE_PRINCIPAL_IMPERSONATION_GROUP
                  DATABASE_ROLE_MEMBER_CHANGE_GROUP
                  FAILED_DATABASE_AUTHENTICATION_GROUP
                  SCHEMA_OBJECT_ACCESS_GROUP
                  SCHEMA_OBJECT_CHANGE_GROUP
                  SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
                  SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
                  SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
                  USER_CHANGE_PASSWORD_GROUP
                  BATCH_STARTED_GROUP
                  BATCH_COMPLETED_GROUP
                  DBCC_GROUP
                  DATABASE_OWNERSHIP_CHANGE_GROUP
                  DATABASE_CHANGE_GROUP
                  LEDGER_OPERATION_GROUP
                  These are groups that cover all sql statements and stored procedures executed against the database, and should not be
                  used in combination with other groups as this will result in duplicate audit logs.
                  For more information, see [Database-Level Audit Action
                  Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
                  For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server
                  auditing policy). The supported actions to audit are:
                  SELECT
                  UPDATE
                  INSERT
                  DELETE
                  EXECUTE
                  RECEIVE
                  REFERENCES
                  The general form for defining an action to be audited is:
                  {action} ON {object} BY {principal}
                  Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire
                  database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
                  For example:
                  SELECT on dbo.myTable by public
                  SELECT on DATABASE::myDatabase by public
                  SELECT on SCHEMA::mySchema by public
                  For more information, see [Database-Level Audit
                  Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
                items:
                  type: string
                type: array
              isAzureMonitorTargetEnabled:
                description: |-
                  IsAzureMonitorTargetEnabled: Specifies whether audit events are sent to Azure Monitor.
                  In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
                  When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on
                  the database should be also created.
                  Note that for server level audit you should use the 'master' database as {databaseName}.
                  Diagnostic Settings URI format:
                  PUT
                  https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
                  For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
                  or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
                type: boolean
              isDevopsAuditEnabled:
                description: |-
                  IsDevopsAuditEnabled: Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure
                  Monitor.
                  In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and
                  'IsDevopsAuditEnabled' as true
                  When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on
                  the master database should also be created.
                  Diagnostic Settings URI format:
                  PUT
                  https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
                  For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
                  or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
                type: boolean
              isManagedIdentityInUse:
                description: 'IsManagedIdentityInUse: Specifies whether Managed Identity
                  is used to access blob storage'
                type: boolean
              isStorageSecondaryKeyInUse:
                description: 'IsStorageSecondaryKeyInUse: Specifies whether storageAccountAccessKey
                  value is the storage''s secondary key.'
                type: boolean
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a sql.azure.com/Server resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              queueDelayMs:
                description: |-
                  QueueDelayMs: Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be
                  processed.
                  The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
                type: integer
              retentionDays:
                description: 'RetentionDays: Specifies the number of days to keep
                  in the audit logs in the storage account.'
                type: integer
              state:
                description: |-
                  State: Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
                  required.
                enum:
                - Disabled
                - Enabled
                type: string
              storageAccountAccessKey:
                description: |-
                  StorageAccountAccessKey: Specifies the identifier key of the auditing storage account.
                  If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server
                  system-assigned managed identity to access the storage.
                  Prerequisites for using managed identity authentication:
                  1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).
                  2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the
                  server identity.
                  For more information, see [Auditing to storage using Managed Identity
                  authentication](https://go.microsoft.com/fwlink/?linkid=2114355)
                properties:
                  key:
                    description: Key is the key in the Kubernetes secret being referenced
                    type: string
                  name:
                    description: |-
                      Name is the name of the Kubernetes secret being referenced.
                      The secret must be in the same namespace as the resource
                    type: string
                required:
                - key
                - name
                type: object
              storageAccountSubscriptionId:
                description: 'StorageAccountSubscriptionId: Specifies the blob storage
                  subscription Id.'
                pattern: ^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$
                type: string
              storageEndpoint:
                description: |-
                  StorageEndpoint: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is
                  Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
                type: string
            required:
            - owner
            - state
            type: object
          status:
            properties:
              auditActionsAndGroups:
                description: |-
                  AuditActionsAndGroups: Specifies the Actions-Groups and Actions to audit.
                  The recommended set of action groups to use is the following combination - this will audit all the queries and stored
                  procedures executed against the database, as well as successful and failed logins:
                  BATCH_COMPLETED_GROUP,
                  SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
                  FAILED_DATABASE_AUTHENTICATION_GROUP.
                  This above combination is also the set that is configured by default when enabling auditing from the Azure portal.
                  The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using
                  unnecessary groups could lead to very large quantities of audit records):
                  APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
                  BACKUP_RESTORE_GROUP
                  DATABASE_LOGOUT_GROUP
                  DATABASE_OBJECT_CHANGE_GROUP
                  DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
                  DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
                  DATABASE_OPERATION_GROUP
                  DATABASE_PERMISSION_CHANGE_GROUP
                  DATABASE_PRINCIPAL_CHANGE_GROUP
                  DATABASE_PRINCIPAL_IMPERSONATION_GROUP
                  DATABASE_ROLE_MEMBER_CHANGE_GROUP
                  FAILED_DATABASE_AUTHENTICATION_GROUP
                  SCHEMA_OBJECT_ACCESS_GROUP
                  SCHEMA_OBJECT_CHANGE_GROUP
                  SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
                  SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
                  SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
                  USER_CHANGE_PASSWORD_GROUP
                  BATCH_STARTED_GROUP
                  BATCH_COMPLETED_GROUP
                  DBCC_GROUP
                  DATABASE_OWNERSHIP_CHANGE_GROUP
                  DATABASE_CHANGE_GROUP
                  LEDGER_OPERATION_GROUP
                  These are groups that cover all sql statements and stored procedures executed against the database, and should not be
                  used in combination with other groups as this will result in duplicate audit logs.
                  For more information, see [Database-Level Audit Action
                  Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
                  For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server
                  auditing policy). The supported actions to audit are:
                  SELECT
                  UPDATE
                  INSERT
                  DELETE
                  EXECUTE
                  RECEIVE
                  REFERENCES
                  The general form for defining an action to be audited is:
                  {action} ON {object} BY {principal}
                  Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire
                  database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
                  For example:
                  SELECT on dbo.myTable by public
                  SELECT on DATABASE::myDatabase by public
                  SELECT on SCHEMA::mySchema by public
                  For more information, see [Database-Level Audit
                  Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
                items:
                  type: string
                type: array
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: 'Id: Resource ID.'
                type: string
              isAzureMonitorTargetEnabled:
                description: |-
                  IsAzureMonitorTargetEnabled: Specifies whether audit events are sent to Azure Monitor.
                  In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.
                  When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on
                  the database should be also created.
                  Note that for server level audit you should use the 'master' database as {databaseName}.
                  Diagnostic Settings URI format:
                  PUT
                  https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
                  For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
                  or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
                type: boolean
              isDevopsAuditEnabled:
                description: |-
                  IsDevopsAuditEnabled: Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure
                  Monitor.
                  In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and
                  'IsDevopsAuditEnabled' as true
                  When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on
                  the master database should also be created.
                  Diagnostic Settings URI format:
                  PUT
                  https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
                  For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)
                  or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
                type: boolean
              isManagedIdentityInUse:
                description: 'IsManagedIdentityInUse: Specifies whether Managed Identity
                  is used to access blob storage'
                type: boolean
              isStorageSecondaryKeyInUse:
                description: 'IsStorageSecondaryKeyInUse: Specifies whether storageAccountAccessKey
                  value is the storage''s secondary key.'
                type: boolean
              name:
                description: 'Name: Resource name.'
                type: string
              queueDelayMs:
                description: |-
                  QueueDelayMs: Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be
                  processed.
                  The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.
                type: integer
              retentionDays:
                description: 'RetentionDays: Specifies the number of days to keep
                  in the audit logs in the storage account.'
                type: integer
              state:
                description: |-
                  State: Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
                  required.
                type: string
              storageAccountSubscriptionId:
                description: 'StorageAccountSubscriptionId: Specifies the blob storage
                  subscription Id.'
                type: string
              storageEndpoint:
                description: |-
                  StorageEndpoint: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is
                  Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.
                type: string
              type:
                description: 'Type: Resource type.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20211101.ServersAuditingSetting
          Generator information:
          - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/BlobAuditing.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/default
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20211101.ServersAuditingSetting_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              auditActionsAndGroups:
                items:
                  type: string
                type: array
              isAzureMonitorTargetEnabled:
                type: boolean
              isDevopsAuditEnabled:
                type: boolean
              isManagedIdentityInUse:
                type: boolean
              isStorageSecondaryKeyInUse:
                type: boolean
              operatorSpec:
                description: |-
                  Storage version of v1api20211101.ServersAuditingSettingOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              originalVersion:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a sql.azure.com/Server resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              queueDelayMs:
                type: integer
              retentionDays:
                type: integer
              state:
                type: string
              storageAccountAccessKey:
                description: |-
                  SecretReference is a reference to a Kubernetes secret and key in the same namespace as
                  the resource it is on.
                properties:
                  key:
                    description: Key is the key in the Kubernetes secret being referenced
                    type: string
                  name:
                    description: |-
                      Name is the name of the Kubernetes secret being referenced.
                      The secret must be in the same namespace as the resource
                    type: string
                required:
                - key
                - name
                type: object
              storageAccountSubscriptionId:
                type: string
              storageEndpoint:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20211101.ServersAuditingSetting_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              auditActionsAndGroups:
                items:
                  type: string
                type: array
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                type: string
              isAzureMonitorTargetEnabled:
                type: boolean
              isDevopsAuditEnabled:
                type: boolean
              isManagedIdentityInUse:
                type: boolean
              isStorageSecondaryKeyInUse:
                type: boolean
              name:
                type: string
              queueDelayMs:
                type: integer
              retentionDays:
                type: integer
              state:
                type: string
              storageAccountSubscriptionId:
                type: string
              storageEndpoint:
                type: string
              type:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
