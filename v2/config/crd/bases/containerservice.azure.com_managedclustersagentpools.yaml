---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: managedclustersagentpools.containerservice.azure.com
spec:
  group: containerservice.azure.com
  names:
    kind: ManagedClustersAgentPool
    listKind: ManagedClustersAgentPoolList
    plural: managedclustersagentpools
    singular: managedclustersagentpool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20210501
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2021-05-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - System
                - User
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixIDReference:
                description: |-
                  NodePublicIPPrefixIDReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes
                  version. The node pool version must have the same major version as the control plane. The node pool minor version must
                  be within two minor versions of the control plane version. The node pool version cannot be greater than the control
                  plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: 'OsSKU: Specifies an OS SKU. This value must not be specified
                  if OSType is Windows.'
                enum:
                - CBLMariner
                - Ubuntu
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetIDReference:
                description: |-
                  PodSubnetIDReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more
                  details). This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  maxSurge:
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetIDReference:
                description: |-
                  VnetSubnetIDReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
            required:
            - owner
            type: object
          status:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes
                  version. The node pool version must have the same major version as the control plane. The node pool minor version must
                  be within two minor versions of the control plane version. The node pool version cannot be greater than the control
                  plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: 'OsSKU: Specifies an OS SKU. This value must not be specified
                  if OSType is Windows.'
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: 'PowerState: Describes whether the Agent Pool is Running
                  or Stopped'
                properties:
                  code:
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  maxSurge:
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20210501storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20210501.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2021-05-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20210501.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              count:
                type: integer
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              kubeletConfig:
                description: Storage version of v1api20210501.KubeletConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20210501.LinuxOSConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20210501.SysctlConfig
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixIDReference:
                description: |-
                  NodePublicIPPrefixIDReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20210501.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetIDReference:
                description: |-
                  PodSubnetIDReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more
                  details). This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              proximityPlacementGroupID:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20210501.AgentPoolUpgradeSettings
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetIDReference:
                description: |-
                  VnetSubnetIDReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20210501.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              id:
                type: string
              kubeletConfig:
                description: Storage version of v1api20210501.KubeletConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20210501.LinuxOSConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20210501.SysctlConfig_STATUS
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              nodeImageVersion:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: Storage version of v1api20210501.PowerState_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20210501.AgentPoolUpgradeSettings_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20230201
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2023-02-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceReference:
                    description: ResourceReference represents a resource reference,
                      either to a Kubernetes resource or directly to an Azure resource
                      via ARMID
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - System
                - User
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                enum:
                - CBLMariner
                - Ubuntu
                - Windows2019
                - Windows2022
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    enum:
                    - Running
                    - Stopped
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  maxSurge:
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                enum:
                - OCIContainer
                - WasmWasi
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                description: |-
                  CurrentOrchestratorVersion: If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be
                  exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch>
                  version being used.
                type: string
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              hostGroupID:
                description: |-
                  HostGroupID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  maxSurge:
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20230201storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20230201.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2023-02-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20230201.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              count:
                type: integer
              creationData:
                description: Storage version of v1api20230201.CreationData
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceReference:
                    description: ResourceReference represents a resource reference,
                      either to a Kubernetes resource or directly to an Azure resource
                      via ARMID
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: Storage version of v1api20230201.KubeletConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20230201.LinuxOSConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20230201.SysctlConfig
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20230201.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: Storage version of v1api20230201.PowerState
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20230201.AgentPoolUpgradeSettings
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              workloadRuntime:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20230201.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              creationData:
                description: Storage version of v1api20230201.CreationData_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                type: string
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupID:
                type: string
              id:
                type: string
              kubeletConfig:
                description: Storage version of v1api20230201.KubeletConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20230201.LinuxOSConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20230201.SysctlConfig_STATUS
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              nodeImageVersion:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: Storage version of v1api20230201.PowerState_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20230201.AgentPoolUpgradeSettings_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
              workloadRuntime:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20231001
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2023-10-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 12
                minLength: 1
                pattern: ^[a-z][a-z0-9]{0,11}$
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        maximum: 90
                        minimum: 10
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        maximum: 524288
                        minimum: 65536
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        maximum: 2097152
                        minimum: 131072
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - System
                - User
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          enum:
                          - TCP
                          - UDP
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    description: |-
                      ApplicationSecurityGroupsReferences: The IDs of the application security groups which agent pool will associate when
                      created.
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                enum:
                - AzureLinux
                - CBLMariner
                - Ubuntu
                - Windows2019
                - Windows2022
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    enum:
                    - Running
                    - Stopped
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    maximum: 1440
                    minimum: 1
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                enum:
                - OCIContainer
                - WasmWasi
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                description: 'CapacityReservationGroupID: AKS will associate the specified
                  agent pool with the Capacity Reservation Group.'
                type: string
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceId:
                    description: 'SourceResourceId: This is the ARM ID of the source
                      object to be used to create the target object.'
                    type: string
                type: object
              currentOrchestratorVersion:
                description: |-
                  CurrentOrchestratorVersion: If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be
                  exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch>
                  version being used.
                type: string
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              hostGroupID:
                description: |-
                  HostGroupID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    description: 'ApplicationSecurityGroups: The IDs of the application
                      security groups which agent pool will associate when created.'
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20231001storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20231001.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2023-10-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20231001.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20231001.CreationData
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: |-
                  Storage version of v1api20231001.KubeletConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20231001.LinuxOSConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20231001.SysctlConfig
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20231001.AgentPoolNetworkProfile
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20231001.PortRange
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20231001.IPTag
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20231001.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  Storage version of v1api20231001.PowerState
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20231001.AgentPoolUpgradeSettings
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              workloadRuntime:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20231001.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                type: string
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20231001.CreationData_STATUS
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                type: string
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupID:
                type: string
              id:
                type: string
              kubeletConfig:
                description: |-
                  Storage version of v1api20231001.KubeletConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20231001.LinuxOSConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20231001.SysctlConfig_STATUS
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20231001.AgentPoolNetworkProfile_STATUS
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20231001.PortRange_STATUS
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20231001.IPTag_STATUS
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: |-
                  Storage version of v1api20231001.PowerState_STATUS
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20231001.AgentPoolUpgradeSettings_STATUS
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
              workloadRuntime:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20231102preview
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-11-02-preview/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              artifactStreamingProfile:
                description: 'ArtifactStreamingProfile: Configuration for using artifact
                  streaming on AKS.'
                properties:
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 12
                minLength: 1
                pattern: ^[a-z][a-z0-9]{0,11}$
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceReference:
                    description: ResourceReference represents a resource reference,
                      either to a Kubernetes resource or directly to an Azure resource
                      via ARMID
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableCustomCATrust:
                description: |-
                  EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                  daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                  certificates into node trust stores. Defaults to false.
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              gpuProfile:
                description: 'GpuProfile: The GPU settings of an agent pool.'
                properties:
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        maximum: 90
                        minimum: 10
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        maximum: 524288
                        minimum: 65536
                        type: integer
                      netNetfilterNfConntrackMax:
                        maximum: 2097152
                        minimum: 131072
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              messageOfTheDay:
                description: |-
                  MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                  the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                  will be printed raw and not be executed as a script).
                type: string
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - System
                - User
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    items:
                      properties:
                        portEnd:
                          maximum: 65535
                          minimum: 1
                          type: integer
                        portStart:
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          enum:
                          - TCP
                          - UDP
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    items:
                      properties:
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeInitializationTaints:
                description: |-
                  NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                  can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                  requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                  node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                  nodes node1 key1=value1:NoSchedule-`
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                  specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                  <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                  best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                  must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                  the control plane version. The node pool version cannot be greater than the control plane version. For more information
                  see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                  Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                  deprecated.
                enum:
                - AzureLinux
                - CBLMariner
                - Mariner
                - Ubuntu
                - Windows2019
                - Windows2022
                - WindowsAnnual
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    enum:
                    - Running
                    - Stopped
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    enum:
                    - Disabled
                    - LocalUser
                    type: string
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                - VirtualMachines
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    maximum: 1440
                    minimum: 1
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    maximum: 30
                    minimum: 0
                    type: integer
                type: object
              virtualMachineNodesStatus:
                items:
                  properties:
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: 'VirtualMachinesProfile: Specifications on VirtualMachines
                  agent pool.'
                properties:
                  scale:
                    properties:
                      manual:
                        items:
                          properties:
                            count:
                              maximum: 1000
                              minimum: 0
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                enum:
                - KataMshvVmIsolation
                - OCIContainer
                - WasmWasi
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              artifactStreamingProfile:
                description: 'ArtifactStreamingProfile: Configuration for using artifact
                  streaming on AKS.'
                properties:
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                description: 'CapacityReservationGroupID: AKS will associate the specified
                  agent pool with the Capacity Reservation Group.'
                type: string
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                description: |-
                  CurrentOrchestratorVersion: If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be
                  exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch>
                  version being used.
                type: string
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableCustomCATrust:
                description: |-
                  EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                  daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                  certificates into node trust stores. Defaults to false.
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              gpuProfile:
                description: 'GpuProfile: The GPU settings of an agent pool.'
                properties:
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupID:
                description: |-
                  HostGroupID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    properties:
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              messageOfTheDay:
                description: |-
                  MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                  the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                  will be printed raw and not be executed as a script).
                type: string
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    items:
                      properties:
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    items:
                      properties:
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeInitializationTaints:
                description: |-
                  NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                  can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                  requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                  node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                  nodes node1 key1=value1:NoSchedule-`
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                  specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                  <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                  best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                  must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                  the control plane version. The node pool version cannot be greater than the control plane version. For more information
                  see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                  Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                  deprecated.
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    type: string
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                type: object
              virtualMachineNodesStatus:
                items:
                  properties:
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: 'VirtualMachinesProfile: Specifications on VirtualMachines
                  agent pool.'
                properties:
                  scale:
                    properties:
                      manual:
                        items:
                          properties:
                            count:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20231102previewstorage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20231102preview.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-11-02-preview/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20231102preview.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              artifactStreamingProfile:
                description: Storage version of v1api20231102preview.AgentPoolArtifactStreamingProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                type: integer
              creationData:
                description: Storage version of v1api20231102preview.CreationData
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceReference:
                    description: ResourceReference represents a resource reference,
                      either to a Kubernetes resource or directly to an Azure resource
                      via ARMID
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                type: boolean
              enableCustomCATrust:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              gpuProfile:
                description: Storage version of v1api20231102preview.AgentPoolGPUProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: Storage version of v1api20231102preview.KubeletConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20231102preview.LinuxOSConfig
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20231102preview.SysctlConfig
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              messageOfTheDay:
                type: string
              minCount:
                type: integer
              mode:
                type: string
              networkProfile:
                description: Storage version of v1api20231102preview.AgentPoolNetworkProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: Storage version of v1api20231102preview.PortRange
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    items:
                      description: Storage version of v1api20231102preview.IPTag
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeInitializationTaints:
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20231102preview.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: Storage version of v1api20231102preview.PowerState
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: Storage version of v1api20231102preview.AgentPoolSecurityProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    type: string
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20231102preview.AgentPoolUpgradeSettings
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                type: object
              virtualMachineNodesStatus:
                items:
                  description: Storage version of v1api20231102preview.VirtualMachineNodes
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: |-
                        PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                        resources, allowing for full fidelity round trip conversions
                      type: object
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: Storage version of v1api20231102preview.VirtualMachinesProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  scale:
                    description: Storage version of v1api20231102preview.ScaleProfile
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      manual:
                        items:
                          description: Storage version of v1api20231102preview.ManualScaleProfile
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            count:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: Storage version of v1api20231102preview.AgentPoolWindowsProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20231102preview.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              artifactStreamingProfile:
                description: Storage version of v1api20231102preview.AgentPoolArtifactStreamingProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                type: string
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              creationData:
                description: Storage version of v1api20231102preview.CreationData_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                type: string
              enableAutoScaling:
                type: boolean
              enableCustomCATrust:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              gpuProfile:
                description: Storage version of v1api20231102preview.AgentPoolGPUProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupID:
                type: string
              id:
                type: string
              kubeletConfig:
                description: Storage version of v1api20231102preview.KubeletConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: Storage version of v1api20231102preview.LinuxOSConfig_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: Storage version of v1api20231102preview.SysctlConfig_STATUS
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              messageOfTheDay:
                type: string
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              networkProfile:
                description: Storage version of v1api20231102preview.AgentPoolNetworkProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: Storage version of v1api20231102preview.PortRange_STATUS
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    items:
                      description: Storage version of v1api20231102preview.IPTag_STATUS
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                type: string
              nodeInitializationTaints:
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: Storage version of v1api20231102preview.PowerState_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: Storage version of v1api20231102preview.AgentPoolSecurityProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    type: string
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: Storage version of v1api20231102preview.AgentPoolUpgradeSettings_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                type: object
              virtualMachineNodesStatus:
                items:
                  description: Storage version of v1api20231102preview.VirtualMachineNodes_STATUS
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: |-
                        PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                        resources, allowing for full fidelity round trip conversions
                      type: object
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: Storage version of v1api20231102preview.VirtualMachinesProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  scale:
                    description: Storage version of v1api20231102preview.ScaleProfile_STATUS
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      manual:
                        items:
                          description: Storage version of v1api20231102preview.ManualScaleProfile_STATUS
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            count:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
              windowsProfile:
                description: Storage version of v1api20231102preview.AgentPoolWindowsProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240402preview
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2024-04-02-preview/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              artifactStreamingProfile:
                description: 'ArtifactStreamingProfile: Configuration for using artifact
                  streaming on AKS.'
                properties:
                  enabled:
                    description: |-
                      Enabled: Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use
                      this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.
                    type: boolean
                type: object
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 12
                minLength: 1
                pattern: ^[a-z][a-z0-9]{0,11}$
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableCustomCATrust:
                description: |-
                  EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                  daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                  certificates into node trust stores. Defaults to false.
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gatewayProfile:
                description: |-
                  GatewayProfile: Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is
                  not Gateway.
                properties:
                  publicIPPrefixSize:
                    description: |-
                      PublicIPPrefixSize: The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide
                      public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with
                      one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure
                      public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8
                      nodes/IPs, /28 = 16 nodes/IPs). The default value is 31.
                    maximum: 31
                    minimum: 28
                    type: integer
                type: object
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              gpuProfile:
                description: 'GpuProfile: The GPU settings of an agent pool.'
                properties:
                  installGPUDriver:
                    description: |-
                      InstallGPUDriver: The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU
                      Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents
                      automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver
                      installation themselves.
                    type: boolean
                type: object
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        maximum: 90
                        minimum: 10
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        maximum: 524288
                        minimum: 65536
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        maximum: 2097152
                        minimum: 131072
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              messageOfTheDay:
                description: |-
                  MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                  the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                  will be printed raw and not be executed as a script).
                type: string
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - Gateway
                - System
                - User
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          enum:
                          - TCP
                          - UDP
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    description: |-
                      ApplicationSecurityGroupsReferences: The IDs of the application security groups which agent pool will associate when
                      created.
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeInitializationTaints:
                description: |-
                  NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                  can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                  requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                  node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                  nodes node1 key1=value1:NoSchedule-`
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                  specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                  <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                  best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                  must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                  the control plane version. The node pool version cannot be greater than the control plane version. For more information
                  see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                  Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                  deprecated.
                enum:
                - AzureLinux
                - CBLMariner
                - Mariner
                - Ubuntu
                - Windows2019
                - Windows2022
                - WindowsAnnual
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podIPAllocationMode:
                description: |-
                  PodIPAllocationMode: The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is
                  'DynamicIndividual'.
                enum:
                - DynamicIndividual
                - StaticBlock
                type: string
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    enum:
                    - Running
                    - Stopped
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    description: |-
                      EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and
                      drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
                    type: boolean
                  enableVTPM:
                    description: |-
                      EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held
                      locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
                    type: boolean
                  sshAccess:
                    description: 'SshAccess: SSH access method of an agent pool.'
                    enum:
                    - Disabled
                    - LocalUser
                    type: string
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                - VirtualMachines
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    maximum: 1440
                    minimum: 1
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                  nodeSoakDurationInMinutes:
                    description: |-
                      NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and
                      moving on to next node. If not specified, the default is 0 minutes.
                    maximum: 30
                    minimum: 0
                    type: integer
                  undrainableNodeBehavior:
                    description: |-
                      UndrainableNodeBehavior: Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable
                      nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the
                      remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes.
                    enum:
                    - Cordon
                    - Schedule
                    type: string
                type: object
              virtualMachineNodesStatus:
                items:
                  description: Current status on a group of nodes of the same vm size.
                  properties:
                    count:
                      description: 'Count: Number of nodes.'
                      type: integer
                    size:
                      description: 'Size: The VM size of the agents used to host this
                        group of nodes.'
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: 'VirtualMachinesProfile: Specifications on VirtualMachines
                  agent pool.'
                properties:
                  scale:
                    description: 'Scale: Specifications on how to scale a VirtualMachines
                      agent pool.'
                    properties:
                      autoscale:
                        description: |-
                          Autoscale: Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently,
                          at most one AutoScaleProfile is allowed.
                        items:
                          description: Specifications on auto-scaling.
                          properties:
                            maxCount:
                              description: 'MaxCount: The maximum number of nodes
                                of the specified sizes.'
                              type: integer
                            minCount:
                              description: 'MinCount: The minimum number of nodes
                                of the specified sizes.'
                              type: integer
                            sizes:
                              description: |-
                                Sizes: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the
                                first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS
                                will use the next size.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      manual:
                        description: 'Manual: Specifications on how to scale the VirtualMachines
                          agent pool to a fixed size.'
                        items:
                          description: Specifications on number of machines.
                          properties:
                            count:
                              description: 'Count: Number of nodes.'
                              type: integer
                            sizes:
                              description: |-
                                Sizes: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the
                                first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will
                                use the next size.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    description: |-
                      DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT
                      Gateway and the Windows agent pool does not have node public IP enabled.
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                enum:
                - KataMshvVmIsolation
                - OCIContainer
                - WasmWasi
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              artifactStreamingProfile:
                description: 'ArtifactStreamingProfile: Configuration for using artifact
                  streaming on AKS.'
                properties:
                  enabled:
                    description: |-
                      Enabled: Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use
                      this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.
                    type: boolean
                type: object
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                description: 'CapacityReservationGroupID: AKS will associate the specified
                  agent pool with the Capacity Reservation Group.'
                type: string
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceId:
                    description: 'SourceResourceId: This is the ARM ID of the source
                      object to be used to create the target object.'
                    type: string
                type: object
              currentOrchestratorVersion:
                description: |-
                  CurrentOrchestratorVersion: If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be
                  exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch>
                  version being used.
                type: string
              eTag:
                description: |-
                  ETag: Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is
                  updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic
                  concurrency per the normal etag convention.
                type: string
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableCustomCATrust:
                description: |-
                  EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                  daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                  certificates into node trust stores. Defaults to false.
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gatewayProfile:
                description: |-
                  GatewayProfile: Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is
                  not Gateway.
                properties:
                  publicIPPrefixSize:
                    description: |-
                      PublicIPPrefixSize: The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide
                      public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with
                      one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure
                      public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8
                      nodes/IPs, /28 = 16 nodes/IPs). The default value is 31.
                    type: integer
                type: object
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              gpuProfile:
                description: 'GpuProfile: The GPU settings of an agent pool.'
                properties:
                  installGPUDriver:
                    description: |-
                      InstallGPUDriver: The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU
                      Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents
                      automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver
                      installation themselves.
                    type: boolean
                type: object
              hostGroupID:
                description: |-
                  HostGroupID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              messageOfTheDay:
                description: |-
                  MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                  the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                  will be printed raw and not be executed as a script).
                type: string
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    description: 'ApplicationSecurityGroups: The IDs of the application
                      security groups which agent pool will associate when created.'
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeInitializationTaints:
                description: |-
                  NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                  can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                  requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                  node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                  nodes node1 key1=value1:NoSchedule-`
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                  specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                  <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                  best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                  must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                  the control plane version. The node pool version cannot be greater than the control plane version. For more information
                  see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                  Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                  deprecated.
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podIPAllocationMode:
                description: |-
                  PodIPAllocationMode: The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is
                  'DynamicIndividual'.
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    description: |-
                      EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and
                      drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
                    type: boolean
                  enableVTPM:
                    description: |-
                      EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held
                      locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
                    type: boolean
                  sshAccess:
                    description: 'SshAccess: SSH access method of an agent pool.'
                    type: string
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                  nodeSoakDurationInMinutes:
                    description: |-
                      NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and
                      moving on to next node. If not specified, the default is 0 minutes.
                    type: integer
                  undrainableNodeBehavior:
                    description: |-
                      UndrainableNodeBehavior: Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable
                      nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the
                      remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes.
                    type: string
                type: object
              virtualMachineNodesStatus:
                items:
                  description: Current status on a group of nodes of the same vm size.
                  properties:
                    count:
                      description: 'Count: Number of nodes.'
                      type: integer
                    size:
                      description: 'Size: The VM size of the agents used to host this
                        group of nodes.'
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: 'VirtualMachinesProfile: Specifications on VirtualMachines
                  agent pool.'
                properties:
                  scale:
                    description: 'Scale: Specifications on how to scale a VirtualMachines
                      agent pool.'
                    properties:
                      autoscale:
                        description: |-
                          Autoscale: Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently,
                          at most one AutoScaleProfile is allowed.
                        items:
                          description: Specifications on auto-scaling.
                          properties:
                            maxCount:
                              description: 'MaxCount: The maximum number of nodes
                                of the specified sizes.'
                              type: integer
                            minCount:
                              description: 'MinCount: The minimum number of nodes
                                of the specified sizes.'
                              type: integer
                            sizes:
                              description: |-
                                Sizes: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the
                                first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS
                                will use the next size.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      manual:
                        description: 'Manual: Specifications on how to scale the VirtualMachines
                          agent pool to a fixed size.'
                        items:
                          description: Specifications on number of machines.
                          properties:
                            count:
                              description: 'Count: Number of nodes.'
                              type: integer
                            sizes:
                              description: |-
                                Sizes: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the
                                first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will
                                use the next size.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    description: |-
                      DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT
                      Gateway and the Windows agent pool does not have node public IP enabled.
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240402previewstorage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20240402preview.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2024-04-02-preview/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20240402preview.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              artifactStreamingProfile:
                description: Storage version of v1api20240402preview.AgentPoolArtifactStreamingProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20240402preview.CreationData
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                type: boolean
              enableCustomCATrust:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gatewayProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolGatewayProfile
                  Profile of the managed cluster gateway agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  publicIPPrefixSize:
                    type: integer
                type: object
              gpuInstanceProfile:
                type: string
              gpuProfile:
                description: Storage version of v1api20240402preview.AgentPoolGPUProfile
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: |-
                  Storage version of v1api20240402preview.KubeletConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20240402preview.LinuxOSConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20240402preview.SysctlConfig
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              messageOfTheDay:
                type: string
              minCount:
                type: integer
              mode:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolNetworkProfile
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20240402preview.PortRange
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20240402preview.IPTag
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeInitializationTaints:
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20240402preview.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podIPAllocationMode:
                type: string
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  Storage version of v1api20240402preview.PowerState
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolSecurityProfile
                  The security settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    type: string
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolUpgradeSettings
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                  undrainableNodeBehavior:
                    type: string
                type: object
              virtualMachineNodesStatus:
                items:
                  description: |-
                    Storage version of v1api20240402preview.VirtualMachineNodes
                    Current status on a group of nodes of the same vm size.
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: |-
                        PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                        resources, allowing for full fidelity round trip conversions
                      type: object
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: |-
                  Storage version of v1api20240402preview.VirtualMachinesProfile
                  Specifications on VirtualMachines agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  scale:
                    description: |-
                      Storage version of v1api20240402preview.ScaleProfile
                      Specifications on how to scale a VirtualMachines agent pool.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      autoscale:
                        items:
                          description: |-
                            Storage version of v1api20240402preview.AutoScaleProfile
                            Specifications on auto-scaling.
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            maxCount:
                              type: integer
                            minCount:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      manual:
                        items:
                          description: |-
                            Storage version of v1api20240402preview.ManualScaleProfile
                            Specifications on number of machines.
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            count:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolWindowsProfile
                  The Windows agent pool's specific profile.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20240402preview.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              artifactStreamingProfile:
                description: Storage version of v1api20240402preview.AgentPoolArtifactStreamingProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enabled:
                    type: boolean
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                type: string
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20240402preview.CreationData_STATUS
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                type: string
              eTag:
                type: string
              enableAutoScaling:
                type: boolean
              enableCustomCATrust:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gatewayProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolGatewayProfile_STATUS
                  Profile of the managed cluster gateway agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  publicIPPrefixSize:
                    type: integer
                type: object
              gpuInstanceProfile:
                type: string
              gpuProfile:
                description: Storage version of v1api20240402preview.AgentPoolGPUProfile_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  installGPUDriver:
                    type: boolean
                type: object
              hostGroupID:
                type: string
              id:
                type: string
              kubeletConfig:
                description: |-
                  Storage version of v1api20240402preview.KubeletConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20240402preview.LinuxOSConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20240402preview.SysctlConfig_STATUS
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              messageOfTheDay:
                type: string
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolNetworkProfile_STATUS
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20240402preview.PortRange_STATUS
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20240402preview.IPTag_STATUS
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                type: string
              nodeInitializationTaints:
                items:
                  type: string
                type: array
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podIPAllocationMode:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: |-
                  Storage version of v1api20240402preview.PowerState_STATUS
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolSecurityProfile_STATUS
                  The security settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                  sshAccess:
                    type: string
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolUpgradeSettings_STATUS
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                  undrainableNodeBehavior:
                    type: string
                type: object
              virtualMachineNodesStatus:
                items:
                  description: |-
                    Storage version of v1api20240402preview.VirtualMachineNodes_STATUS
                    Current status on a group of nodes of the same vm size.
                  properties:
                    $propertyBag:
                      additionalProperties:
                        type: string
                      description: |-
                        PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                        resources, allowing for full fidelity round trip conversions
                      type: object
                    count:
                      type: integer
                    size:
                      type: string
                  type: object
                type: array
              virtualMachinesProfile:
                description: |-
                  Storage version of v1api20240402preview.VirtualMachinesProfile_STATUS
                  Specifications on VirtualMachines agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  scale:
                    description: |-
                      Storage version of v1api20240402preview.ScaleProfile_STATUS
                      Specifications on how to scale a VirtualMachines agent pool.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      autoscale:
                        items:
                          description: |-
                            Storage version of v1api20240402preview.AutoScaleProfile_STATUS
                            Specifications on auto-scaling.
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            maxCount:
                              type: integer
                            minCount:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      manual:
                        items:
                          description: |-
                            Storage version of v1api20240402preview.ManualScaleProfile_STATUS
                            Specifications on number of machines.
                          properties:
                            $propertyBag:
                              additionalProperties:
                                type: string
                              description: |-
                                PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                                resources, allowing for full fidelity round trip conversions
                              type: object
                            count:
                              type: integer
                            sizes:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
              windowsProfile:
                description: |-
                  Storage version of v1api20240402preview.AgentPoolWindowsProfile_STATUS
                  The Windows agent pool's specific profile.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240901
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2024-09-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 12
                minLength: 1
                pattern: ^[a-z][a-z0-9]{0,11}$
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    minimum: 2
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                enum:
                - OS
                - Temporary
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        maximum: 90
                        minimum: 10
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        maximum: 524288
                        minimum: 65536
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        maximum: 2097152
                        minimum: 131072
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                enum:
                - System
                - User
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          enum:
                          - TCP
                          - UDP
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    description: |-
                      ApplicationSecurityGroupsReferences: The IDs of the application security groups which agent pool will associate when
                      created.
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                maximum: 2048
                minimum: 0
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                enum:
                - Ephemeral
                - Managed
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                enum:
                - AzureLinux
                - CBLMariner
                - Ubuntu
                - Windows2019
                - Windows2022
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                enum:
                - Linux
                - Windows
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    enum:
                    - Running
                    - Stopped
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                enum:
                - Deallocate
                - Delete
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                enum:
                - Regular
                - Spot
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    description: |-
                      EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and
                      drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
                    type: boolean
                  enableVTPM:
                    description: |-
                      EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held
                      locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
                    type: boolean
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: The type of Agent Pool.'
                enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    maximum: 1440
                    minimum: 1
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                  nodeSoakDurationInMinutes:
                    description: |-
                      NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and
                      moving on to next node. If not specified, the default is 0 minutes.
                    maximum: 30
                    minimum: 0
                    type: integer
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    description: |-
                      DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT
                      Gateway and the Windows agent pool does not have node public IP enabled.
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                enum:
                - OCIContainer
                - WasmWasi
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              availabilityZones:
                description: |-
                  AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                  property is 'VirtualMachineScaleSets'.
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                description: 'CapacityReservationGroupID: AKS will associate the specified
                  agent pool with the Capacity Reservation Group.'
                type: string
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: |-
                  Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                  for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
                type: integer
              creationData:
                description: |-
                  CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                  a snapshot.
                properties:
                  sourceResourceId:
                    description: 'SourceResourceId: This is the ARM ID of the source
                      object to be used to create the target object.'
                    type: string
                type: object
              currentOrchestratorVersion:
                description: |-
                  CurrentOrchestratorVersion: If orchestratorVersion is a fully specified version <major.minor.patch>, this field will be
                  exactly equal to it. If orchestratorVersion is <major.minor>, this field will contain the full <major.minor.patch>
                  version being used.
                type: string
              eTag:
                description: |-
                  ETag: Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is
                  updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic
                  concurrency per the normal etag convention.
                type: string
              enableAutoScaling:
                description: 'EnableAutoScaling: Whether to enable auto-scaler'
                type: boolean
              enableEncryptionAtHost:
                description: |-
                  EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                  see: https://docs.microsoft.com/azure/aks/enable-host-encryption
                type: boolean
              enableFIPS:
                description: |-
                  EnableFIPS: See [Add a FIPS-enabled node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                  details.
                type: boolean
              enableNodePublicIP:
                description: |-
                  EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                  A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                  to minimize hops. For more information see [assigning a public IP per
                  node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                  default is false.
                type: boolean
              enableUltraSSD:
                description: 'EnableUltraSSD: Whether to enable UltraSSD'
                type: boolean
              gpuInstanceProfile:
                description: 'GpuInstanceProfile: GPUInstanceProfile to be used to
                  specify GPU MIG instance profile for supported GPU VM SKU.'
                type: string
              hostGroupID:
                description: |-
                  HostGroupID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                type: string
              id:
                description: 'Id: Resource ID.'
                type: string
              kubeletConfig:
                description: 'KubeletConfig: The Kubelet configuration on the agent
                  pool nodes.'
                properties:
                  allowedUnsafeSysctls:
                    description: 'AllowedUnsafeSysctls: Allowed list of unsafe sysctls
                      or unsafe sysctl patterns (ending in `*`).'
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    description: |-
                      ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be
                      ≥ 2.
                    type: integer
                  containerLogMaxSizeMB:
                    description: 'ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi)
                      of container log file before it is rotated.'
                    type: integer
                  cpuCfsQuota:
                    description: 'CpuCfsQuota: The default is true.'
                    type: boolean
                  cpuCfsQuotaPeriod:
                    description: |-
                      CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and
                      a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
                    type: string
                  cpuManagerPolicy:
                    description: |-
                      CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management
                      policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more
                      information. Allowed values are 'none' and 'static'.
                    type: string
                  failSwapOn:
                    description: 'FailSwapOn: If set to true it will make the Kubelet
                      fail to start if swap is enabled on the node.'
                    type: boolean
                  imageGcHighThreshold:
                    description: 'ImageGcHighThreshold: To disable image garbage collection,
                      set to 100. The default is 85%'
                    type: integer
                  imageGcLowThreshold:
                    description: 'ImageGcLowThreshold: This cannot be set higher than
                      imageGcHighThreshold. The default is 80%'
                    type: integer
                  podMaxPids:
                    description: 'PodMaxPids: The maximum number of processes per
                      pod.'
                    type: integer
                  topologyManagerPolicy:
                    description: |-
                      TopologyManagerPolicy: For more information see [Kubernetes Topology
                      Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values
                      are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
                    type: string
                type: object
              kubeletDiskType:
                description: |-
                  KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                  storage.
                type: string
              linuxOSConfig:
                description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
                properties:
                  swapFileSizeMB:
                    description: 'SwapFileSizeMB: The size in MB of a swap file that
                      will be created on each node.'
                    type: integer
                  sysctls:
                    description: 'Sysctls: Sysctl settings for Linux agent nodes.'
                    properties:
                      fsAioMaxNr:
                        description: 'FsAioMaxNr: Sysctl setting fs.aio-max-nr.'
                        type: integer
                      fsFileMax:
                        description: 'FsFileMax: Sysctl setting fs.file-max.'
                        type: integer
                      fsInotifyMaxUserWatches:
                        description: 'FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.'
                        type: integer
                      fsNrOpen:
                        description: 'FsNrOpen: Sysctl setting fs.nr_open.'
                        type: integer
                      kernelThreadsMax:
                        description: 'KernelThreadsMax: Sysctl setting kernel.threads-max.'
                        type: integer
                      netCoreNetdevMaxBacklog:
                        description: 'NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.'
                        type: integer
                      netCoreOptmemMax:
                        description: 'NetCoreOptmemMax: Sysctl setting net.core.optmem_max.'
                        type: integer
                      netCoreRmemDefault:
                        description: 'NetCoreRmemDefault: Sysctl setting net.core.rmem_default.'
                        type: integer
                      netCoreRmemMax:
                        description: 'NetCoreRmemMax: Sysctl setting net.core.rmem_max.'
                        type: integer
                      netCoreSomaxconn:
                        description: 'NetCoreSomaxconn: Sysctl setting net.core.somaxconn.'
                        type: integer
                      netCoreWmemDefault:
                        description: 'NetCoreWmemDefault: Sysctl setting net.core.wmem_default.'
                        type: integer
                      netCoreWmemMax:
                        description: 'NetCoreWmemMax: Sysctl setting net.core.wmem_max.'
                        type: integer
                      netIpv4IpLocalPortRange:
                        description: 'NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.'
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        description: 'NetIpv4NeighDefaultGcThresh1: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh1.'
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        description: 'NetIpv4NeighDefaultGcThresh2: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh2.'
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        description: 'NetIpv4NeighDefaultGcThresh3: Sysctl setting
                          net.ipv4.neigh.default.gc_thresh3.'
                        type: integer
                      netIpv4TcpFinTimeout:
                        description: 'NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.'
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        description: 'NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.'
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        description: 'NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.'
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        description: 'NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.'
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        description: 'NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.'
                        type: integer
                      netIpv4TcpTwReuse:
                        description: 'NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.'
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        description: 'NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.'
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        description: 'NetNetfilterNfConntrackBuckets: Sysctl setting
                          net.netfilter.nf_conntrack_buckets.'
                        type: integer
                      netNetfilterNfConntrackMax:
                        description: 'NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.'
                        type: integer
                      vmMaxMapCount:
                        description: 'VmMaxMapCount: Sysctl setting vm.max_map_count.'
                        type: integer
                      vmSwappiness:
                        description: 'VmSwappiness: Sysctl setting vm.swappiness.'
                        type: integer
                      vmVfsCachePressure:
                        description: 'VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.'
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    description: |-
                      TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is
                      'madvise'. For more information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                  transparentHugePageEnabled:
                    description: |-
                      TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more
                      information see [Transparent
                      Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
                    type: string
                type: object
              maxCount:
                description: 'MaxCount: The maximum number of nodes for auto-scaling'
                type: integer
              maxPods:
                description: 'MaxPods: The maximum number of pods that can run on
                  a node.'
                type: integer
              minCount:
                description: 'MinCount: The minimum number of nodes for auto-scaling'
                type: integer
              mode:
                description: |-
                  Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                  restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
                type: string
              name:
                description: 'Name: The name of the resource that is unique within
                  a resource group. This name can be used to access the resource.'
                type: string
              networkProfile:
                description: 'NetworkProfile: Network-related settings of an agent
                  pool.'
                properties:
                  allowedHostPorts:
                    description: 'AllowedHostPorts: The port ranges that are allowed
                      to access. The specified ranges are allowed to overlap.'
                    items:
                      description: The port range.
                      properties:
                        portEnd:
                          description: |-
                            PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or
                            equal to portStart.
                          type: integer
                        portStart:
                          description: |-
                            PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or
                            equal to portEnd.
                          type: integer
                        protocol:
                          description: 'Protocol: The network protocol of the port.'
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    description: 'ApplicationSecurityGroups: The IDs of the application
                      security groups which agent pool will associate when created.'
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    description: 'NodePublicIPTags: IPTags of instance-level public
                      IPs.'
                    items:
                      description: Contains the IPTag associated with the object.
                      properties:
                        ipTagType:
                          description: 'IpTagType: The IP tag type. Example: RoutingPreference.'
                          type: string
                        tag:
                          description: 'Tag: The value of the IP tag associated with
                            the public IP. Example: Internet.'
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                description: 'NodeImageVersion: The version of node image'
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                description: 'NodeLabels: The node labels to be persisted across all
                  nodes in agent pool.'
                type: object
              nodePublicIPPrefixID:
                description: |-
                  NodePublicIPPrefixID: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                type: string
              nodeTaints:
                description: 'NodeTaints: The taints added to new nodes during node
                  pool create and scale. For example, key=value:NoSchedule.'
                items:
                  type: string
                type: array
              orchestratorVersion:
                description: |-
                  OrchestratorVersion: Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported.
                  When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster
                  with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer
                  patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same
                  Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor
                  version must be within two minor versions of the control plane version. The node pool version cannot be greater than the
                  control plane version. For more information see [upgrading a node
                  pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                description: |-
                  OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                  OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                  OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
                type: string
              osSKU:
                description: |-
                  OsSKU: Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019
                  when  Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
                type: string
              osType:
                description: 'OsType: The operating system type. The default is Linux.'
                type: string
              podSubnetID:
                description: |-
                  PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                  of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              powerState:
                description: |-
                  PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                  field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                  be stopped if it is Running and provisioning state is Succeeded
                properties:
                  code:
                    description: 'Code: Tells whether the cluster is Running or Stopped'
                    type: string
                type: object
              properties_type:
                description: 'PropertiesType: The type of Agent Pool.'
                type: string
              provisioningState:
                description: 'ProvisioningState: The current deployment or provisioning
                  state.'
                type: string
              proximityPlacementGroupID:
                description: 'ProximityPlacementGroupID: The ID for Proximity Placement
                  Group.'
                type: string
              scaleDownMode:
                description: 'ScaleDownMode: This also effects the cluster autoscaler
                  behavior. If not specified, it defaults to Delete.'
                type: string
              scaleSetEvictionPolicy:
                description: |-
                  ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                  'Delete'.
                type: string
              scaleSetPriority:
                description: 'ScaleSetPriority: The Virtual Machine Scale Set priority.
                  If not specified, the default is ''Regular''.'
                type: string
              securityProfile:
                description: 'SecurityProfile: The security settings of an agent pool.'
                properties:
                  enableSecureBoot:
                    description: |-
                      EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and
                      drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
                    type: boolean
                  enableVTPM:
                    description: |-
                      EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held
                      locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
                    type: boolean
                type: object
              spotMaxPrice:
                description: |-
                  SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                  on-demand price. For more details on spot pricing, see [spot VMs
                  pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
                type: number
              tags:
                additionalProperties:
                  type: string
                description: 'Tags: The tags to be persisted on the agent pool virtual
                  machine scale set.'
                type: object
              type:
                description: 'Type: Resource type'
                type: string
              upgradeSettings:
                description: 'UpgradeSettings: Settings for upgrading the agentpool'
                properties:
                  drainTimeoutInMinutes:
                    description: |-
                      DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node.
                      This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not
                      specified, the default is 30 minutes.
                    type: integer
                  maxSurge:
                    description: |-
                      MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it
                      is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded
                      up. If not specified, the default is 1. For more information, including best practices, see:
                      https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
                    type: string
                  nodeSoakDurationInMinutes:
                    description: |-
                      NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and
                      moving on to next node. If not specified, the default is 0 minutes.
                    type: integer
                type: object
              vmSize:
                description: |-
                  VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                  might fail to run correctly. For more details on restricted VM sizes, see:
                  https://docs.microsoft.com/azure/aks/quotas-skus-regions
                type: string
              vnetSubnetID:
                description: |-
                  VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                  this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                type: string
              windowsProfile:
                description: 'WindowsProfile: The Windows agent pool''s specific profile.'
                properties:
                  disableOutboundNat:
                    description: |-
                      DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT
                      Gateway and the Windows agent pool does not have node public IP enabled.
                    type: boolean
                type: object
              workloadRuntime:
                description: 'WorkloadRuntime: Determines the type of workload a node
                  can run.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240901storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20240901.ManagedClustersAgentPool
          Generator information:
          - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/stable/2024-09-01/managedClusters.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20240901.ManagedClustersAgentPool_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              capacityReservationGroupReference:
                description: 'CapacityReservationGroupReference: AKS will associate
                  the specified agent pool with the Capacity Reservation Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20240901.CreationData
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceReference:
                    description: 'SourceResourceReference: This is the ARM ID of the
                      source object to be used to create the target object.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                type: object
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupReference:
                description: |-
                  HostGroupReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                  For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              kubeletConfig:
                description: |-
                  Storage version of v1api20240901.KubeletConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20240901.LinuxOSConfig
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20240901.SysctlConfig
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolNetworkProfile
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20240901.PortRange
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroupsReferences:
                    items:
                      description: ResourceReference represents a resource reference,
                        either to a Kubernetes resource or directly to an Azure resource
                        via ARMID
                      properties:
                        armId:
                          description: |-
                            ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                            The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                            ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                          pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                          type: string
                        group:
                          description: Group is the Kubernetes group of the resource.
                          type: string
                        kind:
                          description: Kind is the Kubernetes kind of the resource.
                          type: string
                        name:
                          description: Name is the Kubernetes name of the resource.
                          type: string
                      type: object
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20240901.IPTag
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixReference:
                description: |-
                  NodePublicIPPrefixReference: This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              nodeTaints:
                items:
                  type: string
                type: array
              operatorSpec:
                description: |-
                  Storage version of v1api20240901.ManagedClustersAgentPoolOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              orchestratorVersion:
                type: string
              originalVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a containerservice.azure.com/ManagedCluster resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              podSubnetReference:
                description: |-
                  PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                  This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              powerState:
                description: |-
                  Storage version of v1api20240901.PowerState
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              proximityPlacementGroupReference:
                description: 'ProximityPlacementGroupReference: The ID for Proximity
                  Placement Group.'
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolSecurityProfile
                  The security settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20240901.AgentPoolUpgradeSettings
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                type: object
              vmSize:
                type: string
              vnetSubnetReference:
                description: |-
                  VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                  specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
                properties:
                  armId:
                    description: |-
                      ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                      The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                      ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  group:
                    description: Group is the Kubernetes group of the resource.
                    type: string
                  kind:
                    description: Kind is the Kubernetes kind of the resource.
                    type: string
                  name:
                    description: Name is the Kubernetes name of the resource.
                    type: string
                type: object
              windowsProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolWindowsProfile
                  The Windows agent pool's specific profile.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20240901.ManagedClustersAgentPool_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              availabilityZones:
                items:
                  type: string
                type: array
              capacityReservationGroupID:
                type: string
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                type: integer
              creationData:
                description: |-
                  Storage version of v1api20240901.CreationData_STATUS
                  Data used when creating a target resource from a source resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  sourceResourceId:
                    type: string
                type: object
              currentOrchestratorVersion:
                type: string
              eTag:
                type: string
              enableAutoScaling:
                type: boolean
              enableEncryptionAtHost:
                type: boolean
              enableFIPS:
                type: boolean
              enableNodePublicIP:
                type: boolean
              enableUltraSSD:
                type: boolean
              gpuInstanceProfile:
                type: string
              hostGroupID:
                type: string
              id:
                type: string
              kubeletConfig:
                description: |-
                  Storage version of v1api20240901.KubeletConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedUnsafeSysctls:
                    items:
                      type: string
                    type: array
                  containerLogMaxFiles:
                    type: integer
                  containerLogMaxSizeMB:
                    type: integer
                  cpuCfsQuota:
                    type: boolean
                  cpuCfsQuotaPeriod:
                    type: string
                  cpuManagerPolicy:
                    type: string
                  failSwapOn:
                    type: boolean
                  imageGcHighThreshold:
                    type: integer
                  imageGcLowThreshold:
                    type: integer
                  podMaxPids:
                    type: integer
                  topologyManagerPolicy:
                    type: string
                type: object
              kubeletDiskType:
                type: string
              linuxOSConfig:
                description: |-
                  Storage version of v1api20240901.LinuxOSConfig_STATUS
                  See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  swapFileSizeMB:
                    type: integer
                  sysctls:
                    description: |-
                      Storage version of v1api20240901.SysctlConfig_STATUS
                      Sysctl settings for Linux agent nodes.
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      fsAioMaxNr:
                        type: integer
                      fsFileMax:
                        type: integer
                      fsInotifyMaxUserWatches:
                        type: integer
                      fsNrOpen:
                        type: integer
                      kernelThreadsMax:
                        type: integer
                      netCoreNetdevMaxBacklog:
                        type: integer
                      netCoreOptmemMax:
                        type: integer
                      netCoreRmemDefault:
                        type: integer
                      netCoreRmemMax:
                        type: integer
                      netCoreSomaxconn:
                        type: integer
                      netCoreWmemDefault:
                        type: integer
                      netCoreWmemMax:
                        type: integer
                      netIpv4IpLocalPortRange:
                        type: string
                      netIpv4NeighDefaultGcThresh1:
                        type: integer
                      netIpv4NeighDefaultGcThresh2:
                        type: integer
                      netIpv4NeighDefaultGcThresh3:
                        type: integer
                      netIpv4TcpFinTimeout:
                        type: integer
                      netIpv4TcpKeepaliveProbes:
                        type: integer
                      netIpv4TcpKeepaliveTime:
                        type: integer
                      netIpv4TcpMaxSynBacklog:
                        type: integer
                      netIpv4TcpMaxTwBuckets:
                        type: integer
                      netIpv4TcpTwReuse:
                        type: boolean
                      netIpv4TcpkeepaliveIntvl:
                        type: integer
                      netNetfilterNfConntrackBuckets:
                        type: integer
                      netNetfilterNfConntrackMax:
                        type: integer
                      vmMaxMapCount:
                        type: integer
                      vmSwappiness:
                        type: integer
                      vmVfsCachePressure:
                        type: integer
                    type: object
                  transparentHugePageDefrag:
                    type: string
                  transparentHugePageEnabled:
                    type: string
                type: object
              maxCount:
                type: integer
              maxPods:
                type: integer
              minCount:
                type: integer
              mode:
                type: string
              name:
                type: string
              networkProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolNetworkProfile_STATUS
                  Network settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  allowedHostPorts:
                    items:
                      description: |-
                        Storage version of v1api20240901.PortRange_STATUS
                        The port range.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        portEnd:
                          type: integer
                        portStart:
                          type: integer
                        protocol:
                          type: string
                      type: object
                    type: array
                  applicationSecurityGroups:
                    items:
                      type: string
                    type: array
                  nodePublicIPTags:
                    items:
                      description: |-
                        Storage version of v1api20240901.IPTag_STATUS
                        Contains the IPTag associated with the object.
                      properties:
                        $propertyBag:
                          additionalProperties:
                            type: string
                          description: |-
                            PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                            resources, allowing for full fidelity round trip conversions
                          type: object
                        ipTagType:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                type: object
              nodeImageVersion:
                type: string
              nodeLabels:
                additionalProperties:
                  type: string
                type: object
              nodePublicIPPrefixID:
                type: string
              nodeTaints:
                items:
                  type: string
                type: array
              orchestratorVersion:
                type: string
              osDiskSizeGB:
                type: integer
              osDiskType:
                type: string
              osSKU:
                type: string
              osType:
                type: string
              podSubnetID:
                type: string
              powerState:
                description: |-
                  Storage version of v1api20240901.PowerState_STATUS
                  Describes the Power State of the cluster
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  code:
                    type: string
                type: object
              properties_type:
                type: string
              provisioningState:
                type: string
              proximityPlacementGroupID:
                type: string
              scaleDownMode:
                type: string
              scaleSetEvictionPolicy:
                type: string
              scaleSetPriority:
                type: string
              securityProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolSecurityProfile_STATUS
                  The security settings of an agent pool.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  enableSecureBoot:
                    type: boolean
                  enableVTPM:
                    type: boolean
                type: object
              spotMaxPrice:
                type: number
              tags:
                additionalProperties:
                  type: string
                type: object
              type:
                type: string
              upgradeSettings:
                description: |-
                  Storage version of v1api20240901.AgentPoolUpgradeSettings_STATUS
                  Settings for upgrading an agentpool
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  drainTimeoutInMinutes:
                    type: integer
                  maxSurge:
                    type: string
                  nodeSoakDurationInMinutes:
                    type: integer
                type: object
              vmSize:
                type: string
              vnetSubnetID:
                type: string
              windowsProfile:
                description: |-
                  Storage version of v1api20240901.AgentPoolWindowsProfile_STATUS
                  The Windows agent pool's specific profile.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  disableOutboundNat:
                    type: boolean
                type: object
              workloadRuntime:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
