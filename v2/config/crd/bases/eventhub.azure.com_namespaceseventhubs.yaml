---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: namespaceseventhubs.eventhub.azure.com
spec:
  group: eventhub.azure.com
  names:
    kind: NamespacesEventhub
    listKind: NamespacesEventhubList
    plural: namespaceseventhubs
    singular: namespaceseventhub
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/eventhubs.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture
                      will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: |-
                          ArchiveNameFormat: Blob naming convention for archive, e.g.
                          {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters
                          (Namespace,EventHub .. etc) are mandatory irrespective of order
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store
                          name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path
                          for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure
                          Data Lake Store'
                        pattern: ^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$
                        type: string
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id
                          of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: |-
                              ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                              The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                              ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture
                      description is enabled.'
                    type: boolean
                  encoding:
                    description: |-
                      Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be
                      deprecated in New API Version
                    enum:
                    - Avro
                    - AvroDeflate
                    type: string
                  intervalInSeconds:
                    description: |-
                      IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen,
                      value should between 60 to 900 seconds
                    type: integer
                  sizeLimitInBytes:
                    description: |-
                      SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation,
                      value should be between 10485760 to 524288000 bytes
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether
                      to Skip Empty Archives'
                    type: boolean
                type: object
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the
                  events for this Event Hub, value should be 1 to 7 days'
                minimum: 1
                type: integer
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a eventhub.azure.com/Namespace resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the
                  Event Hub, allowed values are from 1 to 32 partitions.'
                minimum: 1
                type: integer
            required:
            - owner
            type: object
          status:
            properties:
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture
                      will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: |-
                          ArchiveNameFormat: Blob naming convention for archive, e.g.
                          {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters
                          (Namespace,EventHub .. etc) are mandatory irrespective of order
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store
                          name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path
                          for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure
                          Data Lake Store'
                        type: string
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceId:
                        description: 'StorageAccountResourceId: Resource id of the
                          storage account to be used to create the blobs'
                        type: string
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture
                      description is enabled.'
                    type: boolean
                  encoding:
                    description: |-
                      Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be
                      deprecated in New API Version
                    type: string
                  intervalInSeconds:
                    description: |-
                      IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen,
                      value should between 60 to 900 seconds
                    type: integer
                  sizeLimitInBytes:
                    description: |-
                      SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation,
                      value should be between 10485760 to 524288000 bytes
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether
                      to Skip Empty Archives'
                    type: boolean
                type: object
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: 'CreatedAt: Exact time the Event Hub was created.'
                type: string
              id:
                description: |-
                  Id: Fully qualified resource ID for the resource. Ex -
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                type: string
              location:
                description: 'Location: The geo-location where the resource lives'
                type: string
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the
                  events for this Event Hub, value should be 1 to 7 days'
                type: integer
              name:
                description: 'Name: The name of the resource'
                type: string
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the
                  Event Hub, allowed values are from 1 to 32 partitions.'
                type: integer
              partitionIds:
                description: 'PartitionIds: Current number of shards on the Event
                  Hub.'
                items:
                  type: string
                type: array
              status:
                description: 'Status: Enumerates the possible values for the status
                  of the Event Hub.'
                type: string
              systemData:
                description: 'SystemData: The system meta data relating to this resource.'
                properties:
                  createdAt:
                    description: 'CreatedAt: The timestamp of resource creation (UTC).'
                    type: string
                  createdBy:
                    description: 'CreatedBy: The identity that created the resource.'
                    type: string
                  createdByType:
                    description: 'CreatedByType: The type of identity that created
                      the resource.'
                    type: string
                  lastModifiedAt:
                    description: 'LastModifiedAt: The type of identity that last modified
                      the resource.'
                    type: string
                  lastModifiedBy:
                    description: 'LastModifiedBy: The identity that last modified
                      the resource.'
                    type: string
                  lastModifiedByType:
                    description: 'LastModifiedByType: The type of identity that last
                      modified the resource.'
                    type: string
                type: object
              type:
                description: 'Type: The type of the resource. E.g. "Microsoft.EventHub/Namespaces"
                  or "Microsoft.EventHub/Namespaces/EventHubs"'
                type: string
              updatedAt:
                description: 'UpdatedAt: The exact time the message was updated.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20211101.NamespacesEventhub
          Generator information:
          - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/eventhubs.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20211101.NamespacesEventhub_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              captureDescription:
                description: |-
                  Storage version of v1api20211101.CaptureDescription
                  Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: |-
                      Storage version of v1api20211101.Destination
                      Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id
                          of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: |-
                              ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                              The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                              ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              messageRetentionInDays:
                type: integer
              operatorSpec:
                description: |-
                  Storage version of v1api20211101.NamespacesEventhubOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              originalVersion:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a eventhub.azure.com/Namespace resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              partitionCount:
                type: integer
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20211101.NamespacesEventhub_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              captureDescription:
                description: |-
                  Storage version of v1api20211101.CaptureDescription_STATUS
                  Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: |-
                      Storage version of v1api20211101.Destination_STATUS
                      Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceId:
                        type: string
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              id:
                type: string
              location:
                type: string
              messageRetentionInDays:
                type: integer
              name:
                type: string
              partitionCount:
                type: integer
              partitionIds:
                items:
                  type: string
                type: array
              status:
                type: string
              systemData:
                description: |-
                  Storage version of v1api20211101.SystemData_STATUS
                  Metadata pertaining to creation and last modification of the resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240101
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2024-01-01/eventhubs.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture
                      will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: |-
                          ArchiveNameFormat: Blob naming convention for archive, e.g.
                          {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters
                          (Namespace,EventHub .. etc) are mandatory irrespective of order
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store
                          name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path
                          for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure
                          Data Lake Store'
                        pattern: ^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$
                        type: string
                      identity:
                        description: 'Identity: A value that indicates whether capture
                          description is enabled.'
                        properties:
                          type:
                            description: 'Type: Type of Azure Active Directory Managed
                              Identity.'
                            enum:
                            - SystemAssigned
                            - UserAssigned
                            type: string
                          userAssignedIdentityReference:
                            description: |-
                              UserAssignedIdentityReference: ARM ID of Managed User Identity. This property is required is the type is
                              UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be
                              used.
                            properties:
                              armId:
                                description: |-
                                  ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                                  The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                                  ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                                pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                                type: string
                              group:
                                description: Group is the Kubernetes group of the
                                  resource.
                                type: string
                              kind:
                                description: Kind is the Kubernetes kind of the resource.
                                type: string
                              name:
                                description: Name is the Kubernetes name of the resource.
                                type: string
                            type: object
                        type: object
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id
                          of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: |-
                              ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                              The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                              ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture
                      description is enabled.'
                    type: boolean
                  encoding:
                    description: |-
                      Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be
                      deprecated in New API Version
                    enum:
                    - Avro
                    - AvroDeflate
                    type: string
                  intervalInSeconds:
                    description: |-
                      IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen,
                      value should between 60 to 900 seconds
                    type: integer
                  sizeLimitInBytes:
                    description: |-
                      SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation,
                      value should be between 10485760 to 524288000 bytes
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether
                      to Skip Empty Archives'
                    type: boolean
                type: object
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the
                  events for this Event Hub, value should be 1 to 7 days'
                minimum: 1
                type: integer
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a eventhub.azure.com/Namespace resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the
                  Event Hub, allowed values are from 1 to 32 partitions.'
                minimum: 1
                type: integer
              retentionDescription:
                description: 'RetentionDescription: Event Hub retention settings'
                properties:
                  cleanupPolicy:
                    description: 'CleanupPolicy: Enumerates the possible values for
                      cleanup policy'
                    enum:
                    - Compact
                    - Delete
                    type: string
                  retentionTimeInHours:
                    description: |-
                      RetentionTimeInHours: Number of hours to retain the events for this Event Hub. This value is only used when
                      cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue
                    type: integer
                  tombstoneRetentionTimeInHours:
                    description: |-
                      TombstoneRetentionTimeInHours: Number of hours to retain the tombstone markers of a compacted Event Hub. This value is
                      only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified
                      amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key
                      described by the tombstone marker within the compacted Event Hub
                    type: integer
                type: object
              userMetadata:
                description: 'UserMetadata: Gets and Sets Metadata of User.'
                type: string
            required:
            - owner
            type: object
          status:
            properties:
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture
                      will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: |-
                          ArchiveNameFormat: Blob naming convention for archive, e.g.
                          {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters
                          (Namespace,EventHub .. etc) are mandatory irrespective of order
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store
                          name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path
                          for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure
                          Data Lake Store'
                        type: string
                      identity:
                        description: 'Identity: A value that indicates whether capture
                          description is enabled.'
                        properties:
                          type:
                            description: 'Type: Type of Azure Active Directory Managed
                              Identity.'
                            type: string
                          userAssignedIdentity:
                            description: |-
                              UserAssignedIdentity: ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If
                              type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used.
                            type: string
                        type: object
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceId:
                        description: 'StorageAccountResourceId: Resource id of the
                          storage account to be used to create the blobs'
                        type: string
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture
                      description is enabled.'
                    type: boolean
                  encoding:
                    description: |-
                      Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be
                      deprecated in New API Version
                    type: string
                  intervalInSeconds:
                    description: |-
                      IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen,
                      value should between 60 to 900 seconds
                    type: integer
                  sizeLimitInBytes:
                    description: |-
                      SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation,
                      value should be between 10485760 to 524288000 bytes
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether
                      to Skip Empty Archives'
                    type: boolean
                type: object
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: 'CreatedAt: Exact time the Event Hub was created.'
                type: string
              id:
                description: |-
                  Id: Fully qualified resource ID for the resource. Ex -
                  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                type: string
              location:
                description: 'Location: The geo-location where the resource lives'
                type: string
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the
                  events for this Event Hub, value should be 1 to 7 days'
                type: integer
              name:
                description: 'Name: The name of the resource'
                type: string
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the
                  Event Hub, allowed values are from 1 to 32 partitions.'
                type: integer
              partitionIds:
                description: 'PartitionIds: Current number of shards on the Event
                  Hub.'
                items:
                  type: string
                type: array
              retentionDescription:
                description: 'RetentionDescription: Event Hub retention settings'
                properties:
                  cleanupPolicy:
                    description: 'CleanupPolicy: Enumerates the possible values for
                      cleanup policy'
                    type: string
                  retentionTimeInHours:
                    description: |-
                      RetentionTimeInHours: Number of hours to retain the events for this Event Hub. This value is only used when
                      cleanupPolicy is Delete. If cleanupPolicy is Compact the returned value of this property is Long.MaxValue
                    type: integer
                  tombstoneRetentionTimeInHours:
                    description: |-
                      TombstoneRetentionTimeInHours: Number of hours to retain the tombstone markers of a compacted Event Hub. This value is
                      only used when cleanupPolicy is Compact. Consumer must complete reading the tombstone marker within this specified
                      amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key
                      described by the tombstone marker within the compacted Event Hub
                    type: integer
                type: object
              status:
                description: 'Status: Enumerates the possible values for the status
                  of the Event Hub.'
                type: string
              systemData:
                description: 'SystemData: The system meta data relating to this resource.'
                properties:
                  createdAt:
                    description: 'CreatedAt: The timestamp of resource creation (UTC).'
                    type: string
                  createdBy:
                    description: 'CreatedBy: The identity that created the resource.'
                    type: string
                  createdByType:
                    description: 'CreatedByType: The type of identity that created
                      the resource.'
                    type: string
                  lastModifiedAt:
                    description: 'LastModifiedAt: The type of identity that last modified
                      the resource.'
                    type: string
                  lastModifiedBy:
                    description: 'LastModifiedBy: The identity that last modified
                      the resource.'
                    type: string
                  lastModifiedByType:
                    description: 'LastModifiedByType: The type of identity that last
                      modified the resource.'
                    type: string
                type: object
              type:
                description: 'Type: The type of the resource. E.g. "Microsoft.EventHub/Namespaces"
                  or "Microsoft.EventHub/Namespaces/EventHubs"'
                type: string
              updatedAt:
                description: 'UpdatedAt: The exact time the message was updated.'
                type: string
              userMetadata:
                description: 'UserMetadata: Gets and Sets Metadata of User.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20240101storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20240101.NamespacesEventhub
          Generator information:
          - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2024-01-01/eventhubs.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20240101.NamespacesEventhub_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              captureDescription:
                description: |-
                  Storage version of v1api20240101.CaptureDescription
                  Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: |-
                      Storage version of v1api20240101.Destination
                      Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      identity:
                        description: |-
                          Storage version of v1api20240101.CaptureIdentity
                          A value that indicates whether capture description is enabled.
                        properties:
                          $propertyBag:
                            additionalProperties:
                              type: string
                            description: |-
                              PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                              resources, allowing for full fidelity round trip conversions
                            type: object
                          type:
                            type: string
                          userAssignedIdentityReference:
                            description: |-
                              UserAssignedIdentityReference: ARM ID of Managed User Identity. This property is required is the type is
                              UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be
                              used.
                            properties:
                              armId:
                                description: |-
                                  ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                                  The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                                  ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                                pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                                type: string
                              group:
                                description: Group is the Kubernetes group of the
                                  resource.
                                type: string
                              kind:
                                description: Kind is the Kubernetes kind of the resource.
                                type: string
                              name:
                                description: Name is the Kubernetes name of the resource.
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id
                          of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: |-
                              ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                              The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                              ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              messageRetentionInDays:
                type: integer
              operatorSpec:
                description: |-
                  Storage version of v1api20240101.NamespacesEventhubOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              originalVersion:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a eventhub.azure.com/Namespace resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
              partitionCount:
                type: integer
              retentionDescription:
                description: |-
                  Storage version of v1api20240101.RetentionDescription
                  Properties to configure retention settings for the  eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  cleanupPolicy:
                    type: string
                  retentionTimeInHours:
                    type: integer
                  tombstoneRetentionTimeInHours:
                    type: integer
                type: object
              userMetadata:
                type: string
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20240101.NamespacesEventhub_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              captureDescription:
                description: |-
                  Storage version of v1api20240101.CaptureDescription_STATUS
                  Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: |-
                      Storage version of v1api20240101.Destination_STATUS
                      Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: |-
                          PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                          resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      identity:
                        description: |-
                          Storage version of v1api20240101.CaptureIdentity_STATUS
                          A value that indicates whether capture description is enabled.
                        properties:
                          $propertyBag:
                            additionalProperties:
                              type: string
                            description: |-
                              PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                              resources, allowing for full fidelity round trip conversions
                            type: object
                          type:
                            type: string
                          userAssignedIdentity:
                            type: string
                        type: object
                      name:
                        type: string
                      storageAccountResourceId:
                        type: string
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              id:
                type: string
              location:
                type: string
              messageRetentionInDays:
                type: integer
              name:
                type: string
              partitionCount:
                type: integer
              partitionIds:
                items:
                  type: string
                type: array
              retentionDescription:
                description: |-
                  Storage version of v1api20240101.RetentionDescription_STATUS
                  Properties to configure retention settings for the  eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  cleanupPolicy:
                    type: string
                  retentionTimeInHours:
                    type: integer
                  tombstoneRetentionTimeInHours:
                    type: integer
                type: object
              status:
                type: string
              systemData:
                description: |-
                  Storage version of v1api20240101.SystemData_STATUS
                  Metadata pertaining to creation and last modification of the resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
              userMetadata:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
