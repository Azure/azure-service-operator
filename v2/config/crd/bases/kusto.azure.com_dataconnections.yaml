---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: dataconnections.kusto.azure.com
spec:
  group: kusto.azure.com
  names:
    kind: DataConnection
    listKind: DataConnectionList
    plural: dataconnections
    singular: dataconnection
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20230815
    schema:
      openAPIV3Schema:
        description: |-
          Generator information:
          - Generated from: /azure-kusto/resource-manager/Microsoft.Kusto/stable/2023-08-15/kusto.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                pattern: ^.*$
                type: string
              cosmosDbDataConnection:
                description: 'CosmosDb: Mutually exclusive with all other properties'
                properties:
                  cosmosDbAccountResourceReference:
                    description: 'CosmosDbAccountResourceReference: The resource ID
                      of the Cosmos DB account used to create the data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  cosmosDbContainer:
                    description: 'CosmosDbContainer: The name of an existing container
                      in the Cosmos DB database.'
                    type: string
                  cosmosDbDatabase:
                    description: 'CosmosDbDatabase: The name of an existing database
                      in the Cosmos DB account.'
                    type: string
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    enum:
                    - CosmosDb
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed system or user-assigned identity. The identity is used to
                      authenticate with Cosmos DB.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    description: 'MappingRuleName: The name of an existing mapping
                      rule to use when ingesting the retrieved data.'
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the
                      specified retrieval start date.
                    type: string
                  tableName:
                    description: |-
                      TableName: The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this
                      table.
                    type: string
                required:
                - cosmosDbAccountResourceReference
                - cosmosDbContainer
                - cosmosDbDatabase
                - kind
                - managedIdentityResourceReference
                - tableName
                type: object
              eventGridDataConnection:
                description: 'EventGrid: Mutually exclusive with all other properties'
                properties:
                  blobStorageEventType:
                    description: 'BlobStorageEventType: The name of blob storage event
                      type to process.'
                    enum:
                    - Microsoft.Storage.BlobCreated
                    - Microsoft.Storage.BlobRenamed
                    type: string
                  consumerGroup:
                    description: 'ConsumerGroup: The event hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    enum:
                    - APACHEAVRO
                    - AVRO
                    - CSV
                    - JSON
                    - MULTIJSON
                    - ORC
                    - PARQUET
                    - PSV
                    - RAW
                    - SCSV
                    - SINGLEJSON
                    - SOHSV
                    - TSV
                    - TSVE
                    - TXT
                    - W3CLOGFILE
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    enum:
                    - Multi
                    - Single
                    type: string
                  eventGridResourceReference:
                    description: 'EventGridResourceReference: The resource ID of the
                      event grid that is subscribed to the storage account events.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  eventHubResourceReference:
                    description: 'EventHubResourceReference: The resource ID where
                      the event grid is configured to send events.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  ignoreFirstRecord:
                    description: |-
                      IgnoreFirstRecord: A Boolean value that, if set to true, indicates that ingestion should ignore the first record of
                      every file
                    type: boolean
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    enum:
                    - EventGrid
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed identity (system or user assigned) to be used to
                      authenticate with event hub and storage account.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  storageAccountResourceReference:
                    description: 'StorageAccountResourceReference: The resource ID
                      of the storage account where the data resides.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                required:
                - consumerGroup
                - eventHubResourceReference
                - kind
                - storageAccountResourceReference
                type: object
              eventHubDataConnection:
                description: 'EventHub: Mutually exclusive with all other properties'
                properties:
                  compression:
                    description: 'Compression: The event hub messages compression
                      type'
                    enum:
                    - GZip
                    - None
                    type: string
                  consumerGroup:
                    description: 'ConsumerGroup: The event hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    enum:
                    - APACHEAVRO
                    - AVRO
                    - CSV
                    - JSON
                    - MULTIJSON
                    - ORC
                    - PARQUET
                    - PSV
                    - RAW
                    - SCSV
                    - SINGLEJSON
                    - SOHSV
                    - TSV
                    - TSVE
                    - TXT
                    - W3CLOGFILE
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    enum:
                    - Multi
                    - Single
                    type: string
                  eventHubResourceReference:
                    description: 'EventHubResourceReference: The resource ID of the
                      event hub to be used to create a data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  eventSystemProperties:
                    description: 'EventSystemProperties: System properties of the
                      event hub'
                    items:
                      type: string
                    type: array
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    enum:
                    - EventHub
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed identity (system or user assigned) to be used to
                      authenticate with event hub.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: When defined, the data connection retrieves existing Event hub events created since the Retrieval
                      start date. It can only retrieve events retained by the Event hub, based on its retention period.
                    type: string
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                required:
                - consumerGroup
                - eventHubResourceReference
                - kind
                type: object
              iotHubDataConnection:
                description: 'IotHub: Mutually exclusive with all other properties'
                properties:
                  consumerGroup:
                    description: 'ConsumerGroup: The iot hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    enum:
                    - APACHEAVRO
                    - AVRO
                    - CSV
                    - JSON
                    - MULTIJSON
                    - ORC
                    - PARQUET
                    - PSV
                    - RAW
                    - SCSV
                    - SINGLEJSON
                    - SOHSV
                    - TSV
                    - TSVE
                    - TXT
                    - W3CLOGFILE
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    enum:
                    - Multi
                    - Single
                    type: string
                  eventSystemProperties:
                    description: 'EventSystemProperties: System properties of the
                      iot hub'
                    items:
                      type: string
                    type: array
                  iotHubResourceReference:
                    description: 'IotHubResourceReference: The resource ID of the
                      Iot hub to be used to create a data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    enum:
                    - IotHub
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: When defined, the data connection retrieves existing Event hub events created since the Retrieval
                      start date. It can only retrieve events retained by the Event hub, based on its retention period.
                    type: string
                  sharedAccessPolicyName:
                    description: 'SharedAccessPolicyName: The name of the share access
                      policy'
                    type: string
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                required:
                - consumerGroup
                - iotHubResourceReference
                - kind
                - sharedAccessPolicyName
                type: object
              operatorSpec:
                description: |-
                  OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                  passed directly to Azure
                properties:
                  configMapExpressions:
                    description: 'ConfigMapExpressions: configures where to place
                      operator written dynamic ConfigMaps (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    description: 'SecretExpressions: configures where to place operator
                      written dynamic secrets (created with CEL expressions).'
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a kusto.azure.com/Database resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
            required:
            - owner
            type: object
          status:
            properties:
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              cosmosDb:
                description: 'CosmosDb: Mutually exclusive with all other properties'
                properties:
                  cosmosDbAccountResourceId:
                    description: 'CosmosDbAccountResourceId: The resource ID of the
                      Cosmos DB account used to create the data connection.'
                    type: string
                  cosmosDbContainer:
                    description: 'CosmosDbContainer: The name of an existing container
                      in the Cosmos DB database.'
                    type: string
                  cosmosDbDatabase:
                    description: 'CosmosDbDatabase: The name of an existing database
                      in the Cosmos DB account.'
                    type: string
                  id:
                    description: |-
                      Id: Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                    type: string
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityObjectId:
                    description: 'ManagedIdentityObjectId: The object ID of the managed
                      identity resource.'
                    type: string
                  managedIdentityResourceId:
                    description: |-
                      ManagedIdentityResourceId: The resource ID of a managed system or user-assigned identity. The identity is used to
                      authenticate with Cosmos DB.
                    type: string
                  mappingRuleName:
                    description: 'MappingRuleName: The name of an existing mapping
                      rule to use when ingesting the retrieved data.'
                    type: string
                  provisioningState:
                    description: 'ProvisioningState: The provisioned state of the
                      resource.'
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the
                      specified retrieval start date.
                    type: string
                  tableName:
                    description: |-
                      TableName: The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this
                      table.
                    type: string
                  type:
                    description: 'Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
                      or "Microsoft.Storage/storageAccounts"'
                    type: string
                type: object
              eventGrid:
                description: 'EventGrid: Mutually exclusive with all other properties'
                properties:
                  blobStorageEventType:
                    description: 'BlobStorageEventType: The name of blob storage event
                      type to process.'
                    type: string
                  consumerGroup:
                    description: 'ConsumerGroup: The event hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    type: string
                  eventGridResourceId:
                    description: 'EventGridResourceId: The resource ID of the event
                      grid that is subscribed to the storage account events.'
                    type: string
                  eventHubResourceId:
                    description: 'EventHubResourceId: The resource ID where the event
                      grid is configured to send events.'
                    type: string
                  id:
                    description: |-
                      Id: Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                    type: string
                  ignoreFirstRecord:
                    description: |-
                      IgnoreFirstRecord: A Boolean value that, if set to true, indicates that ingestion should ignore the first record of
                      every file
                    type: boolean
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityObjectId:
                    description: 'ManagedIdentityObjectId: The object ID of managedIdentityResourceId'
                    type: string
                  managedIdentityResourceId:
                    description: |-
                      ManagedIdentityResourceId: The resource ID of a managed identity (system or user assigned) to be used to authenticate
                      with event hub and storage account.
                    type: string
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  provisioningState:
                    description: 'ProvisioningState: The provisioned state of the
                      resource.'
                    type: string
                  storageAccountResourceId:
                    description: 'StorageAccountResourceId: The resource ID of the
                      storage account where the data resides.'
                    type: string
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                  type:
                    description: 'Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
                      or "Microsoft.Storage/storageAccounts"'
                    type: string
                type: object
              eventHub:
                description: 'EventHub: Mutually exclusive with all other properties'
                properties:
                  compression:
                    description: 'Compression: The event hub messages compression
                      type'
                    type: string
                  consumerGroup:
                    description: 'ConsumerGroup: The event hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    type: string
                  eventHubResourceId:
                    description: 'EventHubResourceId: The resource ID of the event
                      hub to be used to create a data connection.'
                    type: string
                  eventSystemProperties:
                    description: 'EventSystemProperties: System properties of the
                      event hub'
                    items:
                      type: string
                    type: array
                  id:
                    description: |-
                      Id: Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                    type: string
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  managedIdentityObjectId:
                    description: 'ManagedIdentityObjectId: The object ID of the managedIdentityResourceId'
                    type: string
                  managedIdentityResourceId:
                    description: |-
                      ManagedIdentityResourceId: The resource ID of a managed identity (system or user assigned) to be used to authenticate
                      with event hub.
                    type: string
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  provisioningState:
                    description: 'ProvisioningState: The provisioned state of the
                      resource.'
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: When defined, the data connection retrieves existing Event hub events created since the Retrieval
                      start date. It can only retrieve events retained by the Event hub, based on its retention period.
                    type: string
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                  type:
                    description: 'Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
                      or "Microsoft.Storage/storageAccounts"'
                    type: string
                type: object
              iotHub:
                description: 'IotHub: Mutually exclusive with all other properties'
                properties:
                  consumerGroup:
                    description: 'ConsumerGroup: The iot hub consumer group.'
                    type: string
                  dataFormat:
                    description: 'DataFormat: The data format of the message. Optionally
                      the data format can be added to each message.'
                    type: string
                  databaseRouting:
                    description: |-
                      DatabaseRouting: Indication for database routing information from the data connection, by default only database routing
                      information is allowed
                    type: string
                  eventSystemProperties:
                    description: 'EventSystemProperties: System properties of the
                      iot hub'
                    items:
                      type: string
                    type: array
                  id:
                    description: |-
                      Id: Fully qualified resource ID for the resource. Ex -
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                    type: string
                  iotHubResourceId:
                    description: 'IotHubResourceId: The resource ID of the Iot hub
                      to be used to create a data connection.'
                    type: string
                  kind:
                    description: 'Kind: Kind of the endpoint for the data connection'
                    type: string
                  location:
                    description: 'Location: Resource location.'
                    type: string
                  mappingRuleName:
                    description: |-
                      MappingRuleName: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each
                      message.
                    type: string
                  provisioningState:
                    description: 'ProvisioningState: The provisioned state of the
                      resource.'
                    type: string
                  retrievalStartDate:
                    description: |-
                      RetrievalStartDate: When defined, the data connection retrieves existing Event hub events created since the Retrieval
                      start date. It can only retrieve events retained by the Event hub, based on its retention period.
                    type: string
                  sharedAccessPolicyName:
                    description: 'SharedAccessPolicyName: The name of the share access
                      policy'
                    type: string
                  tableName:
                    description: 'TableName: The table where the data should be ingested.
                      Optionally the table information can be added to each message.'
                    type: string
                  type:
                    description: 'Type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
                      or "Microsoft.Storage/storageAccounts"'
                    type: string
                type: object
              name:
                description: 'Name: The name of the resource'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20230815storage
    schema:
      openAPIV3Schema:
        description: |-
          Storage version of v1api20230815.DataConnection
          Generator information:
          - Generated from: /azure-kusto/resource-manager/Microsoft.Kusto/stable/2023-08-15/kusto.json
          - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20230815.DataConnection_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              azureName:
                description: |-
                  AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                  doesn't have to be.
                type: string
              cosmosDbDataConnection:
                description: Storage version of v1api20230815.CosmosDbDataConnection
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  cosmosDbAccountResourceReference:
                    description: 'CosmosDbAccountResourceReference: The resource ID
                      of the Cosmos DB account used to create the data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  cosmosDbContainer:
                    type: string
                  cosmosDbDatabase:
                    type: string
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed system or user-assigned identity. The identity is used to
                      authenticate with Cosmos DB.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    type: string
                  retrievalStartDate:
                    type: string
                  tableName:
                    type: string
                required:
                - cosmosDbAccountResourceReference
                - managedIdentityResourceReference
                type: object
              eventGridDataConnection:
                description: Storage version of v1api20230815.EventGridDataConnection
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  blobStorageEventType:
                    type: string
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventGridResourceReference:
                    description: 'EventGridResourceReference: The resource ID of the
                      event grid that is subscribed to the storage account events.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  eventHubResourceReference:
                    description: 'EventHubResourceReference: The resource ID where
                      the event grid is configured to send events.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  ignoreFirstRecord:
                    type: boolean
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed identity (system or user assigned) to be used to
                      authenticate with event hub and storage account.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    type: string
                  storageAccountResourceReference:
                    description: 'StorageAccountResourceReference: The resource ID
                      of the storage account where the data resides.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  tableName:
                    type: string
                required:
                - eventHubResourceReference
                - storageAccountResourceReference
                type: object
              eventHubDataConnection:
                description: Storage version of v1api20230815.EventHubDataConnection
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  compression:
                    type: string
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventHubResourceReference:
                    description: 'EventHubResourceReference: The resource ID of the
                      event hub to be used to create a data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  eventSystemProperties:
                    items:
                      type: string
                    type: array
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityResourceReference:
                    description: |-
                      ManagedIdentityResourceReference: The resource ID of a managed identity (system or user assigned) to be used to
                      authenticate with event hub.
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  mappingRuleName:
                    type: string
                  retrievalStartDate:
                    type: string
                  tableName:
                    type: string
                required:
                - eventHubResourceReference
                type: object
              iotHubDataConnection:
                description: Storage version of v1api20230815.IotHubDataConnection
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventSystemProperties:
                    items:
                      type: string
                    type: array
                  iotHubResourceReference:
                    description: 'IotHubResourceReference: The resource ID of the
                      Iot hub to be used to create a data connection.'
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  kind:
                    type: string
                  location:
                    type: string
                  mappingRuleName:
                    type: string
                  retrievalStartDate:
                    type: string
                  sharedAccessPolicyName:
                    type: string
                  tableName:
                    type: string
                required:
                - iotHubResourceReference
                type: object
              operatorSpec:
                description: |-
                  Storage version of v1api20230815.DataConnectionOperatorSpec
                  Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  configMapExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  secretExpressions:
                    items:
                      description: |-
                        DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                        be a secret or a configmap. The value of the expression is stored at the specified location in
                        the destination.
                      properties:
                        key:
                          description: |-
                            Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                            this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                            Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                            map[string]string.
                          type: string
                        name:
                          description: |-
                            Name is the name of the Kubernetes configmap or secret to write to.
                            The configmap or secret will be created in the same namespace as the resource.
                          type: string
                        value:
                          description: |-
                            Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                            on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              originalVersion:
                type: string
              owner:
                description: |-
                  Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                  controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                  reference to a kusto.azure.com/Database resource
                properties:
                  armId:
                    pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                    type: string
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                type: object
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20230815.DataConnection_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: |-
                  PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                  resources, allowing for full fidelity round trip conversions
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation)
                    of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: |-
                        Reason for the condition's last transition.
                        Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                        For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                        This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or
                        Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              cosmosDb:
                description: Storage version of v1api20230815.CosmosDbDataConnection_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  cosmosDbAccountResourceId:
                    type: string
                  cosmosDbContainer:
                    type: string
                  cosmosDbDatabase:
                    type: string
                  id:
                    type: string
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityObjectId:
                    type: string
                  managedIdentityResourceId:
                    type: string
                  mappingRuleName:
                    type: string
                  provisioningState:
                    type: string
                  retrievalStartDate:
                    type: string
                  tableName:
                    type: string
                  type:
                    type: string
                type: object
              eventGrid:
                description: Storage version of v1api20230815.EventGridDataConnection_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  blobStorageEventType:
                    type: string
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventGridResourceId:
                    type: string
                  eventHubResourceId:
                    type: string
                  id:
                    type: string
                  ignoreFirstRecord:
                    type: boolean
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityObjectId:
                    type: string
                  managedIdentityResourceId:
                    type: string
                  mappingRuleName:
                    type: string
                  provisioningState:
                    type: string
                  storageAccountResourceId:
                    type: string
                  tableName:
                    type: string
                  type:
                    type: string
                type: object
              eventHub:
                description: Storage version of v1api20230815.EventHubDataConnection_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  compression:
                    type: string
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventHubResourceId:
                    type: string
                  eventSystemProperties:
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  kind:
                    type: string
                  location:
                    type: string
                  managedIdentityObjectId:
                    type: string
                  managedIdentityResourceId:
                    type: string
                  mappingRuleName:
                    type: string
                  provisioningState:
                    type: string
                  retrievalStartDate:
                    type: string
                  tableName:
                    type: string
                  type:
                    type: string
                type: object
              iotHub:
                description: Storage version of v1api20230815.IotHubDataConnection_STATUS
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: |-
                      PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage
                      resources, allowing for full fidelity round trip conversions
                    type: object
                  consumerGroup:
                    type: string
                  dataFormat:
                    type: string
                  databaseRouting:
                    type: string
                  eventSystemProperties:
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  iotHubResourceId:
                    type: string
                  kind:
                    type: string
                  location:
                    type: string
                  mappingRuleName:
                    type: string
                  provisioningState:
                    type: string
                  retrievalStartDate:
                    type: string
                  sharedAccessPolicyName:
                    type: string
                  tableName:
                    type: string
                  type:
                    type: string
                type: object
              name:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
